{"version":3,"file":"testing.js","sourceRoot":"","sources":["../../../modules/@angular/compiler/testing.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;;;;AAEH,iBAAc,gCAAgC,CAAC,EAAA;AAC/C,iBAAc,8BAA8B,CAAC,EAAA;AAC7C,iBAAc,kCAAkC,CAAC,EAAA;AACjD,iBAAc,mCAAmC,CAAC,EAAA;AAClD,iBAAc,mCAAmC,CAAC,EAAA;AAElD,qBAAkE,eAAe,CAAC,CAAA;AAClF,sBAAqF,SAAS,CAAC,CAAA;AAC/F,mCAA+B,8BAA8B,CAAC,CAAA;AAC9D,wCAAoC,mCAAmC,CAAC,CAAA;AACxE,wCAAmC,mCAAmC,CAAC,CAAA;AAGvE;;;;GAIG;AACU,kCAA0B,GACnC,4BAAqB,CAAC,2BAAmB,EAAE,oBAAoB,EAAE,CAAC;QAC1C,OAAO,EAAE,sBAAe;QACxB,QAAQ,EAAE;YACR,SAAS,EAAE;gBACT,EAAC,OAAO,EAAE,yBAAiB,EAAE,QAAQ,EAAE,+CAAqB,EAAC;gBAC7D,EAAC,OAAO,EAAE,oBAAY,EAAE,QAAQ,EAAE,qCAAgB,EAAC;gBACnD,EAAC,OAAO,EAAE,wBAAgB,EAAE,QAAQ,EAAE,8CAAoB,EAAC;aAC5D;SACF;QACD,KAAK,EAAE,IAAI;KACZ,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './testing/schema_registry_mock';\nexport * from './testing/view_resolver_mock';\nexport * from './testing/test_component_builder';\nexport * from './testing/directive_resolver_mock';\nexport * from './testing/ng_module_resolver_mock';\n\nimport {createPlatformFactory, CompilerOptions, PlatformRef} from '@angular/core';\nimport {platformCoreDynamic, DirectiveResolver, ViewResolver, NgModuleResolver} from './index';\nimport {MockViewResolver} from './testing/view_resolver_mock';\nimport {MockDirectiveResolver} from './testing/directive_resolver_mock';\nimport {MockNgModuleResolver} from './testing/ng_module_resolver_mock';\n\n\n/**\n * Platform for dynamic tests\n *\n * @experimental\n */\nexport const platformCoreDynamicTesting =\n    createPlatformFactory(platformCoreDynamic, 'coreDynamicTesting', [{\n                            provide: CompilerOptions,\n                            useValue: {\n                              providers: [\n                                {provide: DirectiveResolver, useClass: MockDirectiveResolver},\n                                {provide: ViewResolver, useClass: MockViewResolver},\n                                {provide: NgModuleResolver, useClass: MockNgModuleResolver}\n                              ]\n                            },\n                            multi: true\n                          }]);\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}