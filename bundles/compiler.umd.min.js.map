{"version":3,"sources":["/home/travis/build/angular/angular/dist/packages-dist/compiler/bundles/compiler.umd.js"],"names":["global","factory","exports","module","define","amd","ng","compiler","this","__extends","d","b","__","constructor","extendStatics","prototype","Object","create","Inject","Attribute","Query","Directive","Component","Pipe","Input","Output","HostBinding","HostListener","NgModule","ModuleWithProviders","SchemaMetadata","MetadataFactory","makeMetadataFactory","name","props","args","_i","arguments","length","values","apply","__assign","ngMetadataName","isTypeOf","obj","dashCaseToCamelCase","input","replace","DASH_CASE_REGEXP","m","toUpperCase","splitAtColon","defaultValues","_splitAt","splitAtPeriod","character","characterIndex","indexOf","slice","trim","visitValue","value","visitor","context","Array","isArray","visitArray","isStrictStringMap","visitStringMap","visitPrimitive","visitOther","isDefined","val","undefined","noUndefined","syntaxError","msg","parseErrors","error","Error","ERROR_SYNTAX_ERROR","ERROR_PARSE_ERRORS","isSyntaxError","getParseErrors","escapeRegExp","s","getPrototypeOf","STRING_MAP_PROTO","utf8Encode","str","encoded","index","codePoint","charCodeAt","low","String","fromCharCode","stringify","token","map","join","overriddenName","res","toString","newLineIndex","substring","resolveForwardRef","type","hasOwnProperty","isPromise","then","templateVisitAll","asts","result","visit","ast","forEach","astResult","push","preserveWhitespacesDefault","preserveWhitespacesOption","defaultSetting","_sanitizeIdentifier","identifierName","compileIdentifier","reference","ref","StaticSymbol","identifier","_anonymousTypeIndex","identifierModuleUrl","filePath","viewClassName","compType","embeddedTemplateIndex","rendererTypeName","hostViewClassName","componentFactoryName","tokenName","tokenReference","_normalizeArray","flatten","list","reduce","flat","item","flatItem","concat","sourceUrl","url","templateSourceUrl","ngModuleType","compMeta","templateMeta","isInline","sharedStylesheetJitUrl","meta","id","pathParts","split","ngModuleJitUrl","moduleMeta","templateJitUrl","visitAll","nodes","spanOf","start","sourceSpan","offset","end","Element","endSourceSpan","children","findNode","position","path","_super","class_1","span","RecursiveVisitor","AstPath","assertArrayOfStrings","i","assertInterpolationSymbols","start_1","end_1","INTERPOLATION_BLACKLIST_REGEXPS","regexp","test","isStyleUrlResolvable","schemeMatch","match","URL_WITH_SCHEMA_REGEXP","extractStyleUrls","resolver","baseUrl","cssText","foundUrls","modifiedCssText","CSS_STRIPPABLE_COMMENT_REGEXP","CSS_IMPORT_REGEXP","resolve","StyleWithImports","splitNsName","elementName","colonIndex","isNgContainer","tagName","isNgContent","isNgTemplate","getNsPrefix","fullName","mergeNsAndName","prefix","localName","preparseElement","selectAttr","hrefAttr","relAttr","nonBindable","projectAs","attrs","attr","lcAttrName","toLowerCase","NG_CONTENT_SELECT_ATTR","LINK_STYLE_HREF_ATTR","LINK_STYLE_REL_ATTR","NG_NON_BINDABLE_ATTR","NG_PROJECT_AS","normalizeNgContentSelect","nodeName","PreparsedElementType","OTHER","NG_CONTENT","STYLE_ELEMENT","STYLE","SCRIPT_ELEMENT","SCRIPT","LINK_ELEMENT","LINK_STYLE_REL_VALUE","STYLESHEET","PreparsedElement","isDirectiveMetadata","createDirective","createComponent","findLast","arr","condition","isWhitespace","code","$TAB","$SPACE","$NBSP","isDigit","$0","$9","isAsciiLetter","$a","$z","$A","$Z","isAsciiHexDigit","$f","$F","newCharacterToken","Token","TokenType","Character","newIdentifierToken","text","Identifier","newKeywordToken","Keyword","newOperatorToken","Operator","newStringToken","newNumberToken","n","Number","newErrorToken","message","isIdentifierStart","$_","$$","isIdentifier","scanner","_Scanner","peek","advance","$EOF","isIdentifierPart","isExponentStart","$e","$E","isExponentSign","$MINUS","$PLUS","isQuote","$SQ","$DQ","$BT","unescape","$n","$LF","$FF","$r","$CR","$t","$v","$VTAB","parseIntAutoRadix","parseInt","isNaN","visitAstChildren","visitBinary","left","right","visitChain","expressions","visitConditional","trueExp","falseExp","visitFunctionCall","target","visitImplicitReceiver","visitInterpolation","visitKeyedRead","key","visitKeyedWrite","visitLiteralArray","visitLiteralMap","visitLiteralPrimitive","visitMethodCall","receiver","visitPipe","exp","visitPrefixNot","expression","visitNonNullAssert","visitPropertyRead","visitPropertyWrite","visitQuote","visitSafeMethodCall","visitSafePropertyRead","_createInterpolateRegExp","config","pattern","RegExp","typeSourceSpan","kind","moduleUrl","sourceFileName","sourceFile","ParseSourceFile","ParseSourceSpan","ParseLocation","tokenize","source","getTagDefinition","tokenizeExpansionForms","interpolationConfig","DEFAULT_INTERPOLATION_CONFIG","_Tokenizer","_unexpectedCharacterErrorMsg","charCode","_unknownEntityErrorMsg","entitySrc","isNotWhitespace","isNameEnd","$GT","$SLASH","$EQ","isPrefixEnd","isDigitEntityEnd","$SEMICOLON","isNamedEntityEnd","isExpansionFormStart","isInterpolationStart","$LBRACE","isExpansionCaseStart","compareCharCodeCaseInsensitive","code1","code2","toUpperCaseCharCode","mergeTextTokens","srcTokens","dstTokens","lastDstToken","TokenType$1","TEXT","parts","lastOnStack","stack","element","digest","sha1","serializeNodes","meaning","decimalDigest","_SerializerIgnoreIcuExpVisitor","computeMsgId","a","serializerVisitor","utf8","words32","stringToWords32","Endian","Big","len","w","_a","c","e","_b","h0","h1","h2","h3","h4","j","rol32","_c","fk","f","k","temp","add32","_d","_e","byteStringToHexString","words32ToByteString","fingerprint","hash32","hi","lo","him","lom","add64","rol64","byteStringToDecString","wordAt","Little","mix","sub32","add32to64","high","ah","al","bh","bl","carry","l","count","endian","byteAt","word","word32ToByteString","hex","decimal","toThePower","addBigInt","numberTimesBigInt","reverse","x","y","sum","Math","max","tmpSum","num","product","bToThePower","getHtmlTagDefinition","TAG_DEFINITIONS","_DEFAULT_TAG_DEFINITION","createI18nMessageFactory","_I18nVisitor","_expParser","description","toI18nMessage","_extractPlaceholderName","_CUSTOM_PH_EXP","extractMessages","implicitTags","implicitAttrs","_Visitor","extract","mergeTranslations","translations","merge","_isOpeningComment","Comment","startsWith","_isClosingComment","_getI18nAttr","p","find","_I18N_ATTR","_parseMessageMeta","i18n","idIndex","ID_SEPARATOR","descIndex","MEANING_SEPARATOR","meaningAndDesc","getXmlTagDefinition","_TAG_DEFINITION","serialize","node","_visitor","_escapeXml","_ESCAPED_CHARS","entry","getCtypeForTag","tag","getTypeForTag","digest$1","toPublicName","internalName","createLazyProperty","messages","valueFn","defineProperty","configurable","enumerable","get","set","_","createSerializer","format","Xmb","Xtb","Xliff2","Xliff","ngfactoryFilePath","forceSourceFile","urlWithSuffix","splitTypescriptSuffix","stripGeneratedFileSuffix","GENERATED_FILE","isGeneratedFile","endsWith","lastDot","lastIndexOf","summaryFileName","fileName","STRIP_SRC_FILE_SUFFIXES","summaryForJitFileName","stripSummaryForJitFileSuffix","JIT_SUMMARY_FILE","summaryForJitName","symbolName","stripSummaryForJitNameSuffix","JIT_SUMMARY_NAME","createTokenForReference","createTokenForExternalReference","reflector","resolveExternalReference","hasLifecycleHook","hook","getHookName","getAllLifecycleHooks","LIFECYCLE_HOOKS_VALUES","filter","LifecycleHooks","OnInit","OnDestroy","DoCheck","OnChanges","AfterContentInit","AfterContentChecked","AfterViewInit","AfterViewChecked","flattenArray","tree","out","dedupeArray","array","from","Set","flattenAndDedupeArray","isValidType","Type","extractIdentifiers","targetIdentifiers","_CompileValueConverter","stringifyType","componentStillLoadingError","ERROR_COMPONENT_TYPE","nullSafeIsEquivalent","base","other","isEquivalent","areAllEquivalent","findReadVarNames","stmts","_ReadVarVisitor","visitAllStatements","varNames","collectExternalReferences","_FindExternalReferencesVisitor","externalReferences","applySourceSpanToStatementIfNeeded","stmt","transformer","_ApplySourceSpanTransformer","visitStatement","applySourceSpanToExpressionIfNeeded","expr","visitExpression","variable","ReadVarExpr","importExpr","typeParams","ExternalExpr","importType","typeModifiers","expressionType","ExpressionType","literalArr","LiteralArrayExpr","literalMap","LiteralMapExpr","LiteralMapEntry","quoted","not","NotExpr","assertNotNull","AssertNotNull","fn","params","body","FunctionExpr","literal","LiteralExpr","_transformProvider","provider","useExisting","useValue","deps","useClass","useFactory","multi","_transformProviderAst","eager","providers","ProviderAst","multiProvider","providerType","lifecycleHooks","_resolveProvidersFromDirectives","directives","targetErrors","providersByToken","Map","directive","_resolveProviders","isComponent","ProviderAstType","dir","PublicService","viewProviders","PrivateService","targetProvidersByToken","resolvedProvider","ProviderError","isUseValue","_getViewQueries","component","viewQueryId","viewQueries","query","_addQueryToTokenMap","queryId","_getContentQueries","contentQueryStartId","contentQueryId","contentQueries","directiveIndex","queries","selectors","convertValueToOutputAst","ctx","_ValueOutputAstTransformer","providerDef","providerAst","flags","lifecycleHook","lifecycleHookToNodeFlag","multiProviderDef","singleProviderDef","providerExpr","depsExpr","tokenExpr","convertDeps","providerIndex","dep","depIndex","paramName","allParams","FnParam","DYNAMIC_TYPE","allDepDefs","depDef","exprs","depExprs","diDeps","instantiate","callFn","ReturnStatement","INFERRED_TYPE","providerMeta","NULL_EXPR","tokenMeta","isValue","isSkipSelf","isOptional","nodeFlag","componentFactoryResolverProviderDef","entryComponents","entryComponentFactories","entryComponent","componentFactory","Identifiers","ComponentFactoryResolver","classMeta","NgModuleRef","CodegenComponentFactoryResolver","toBase64String","b64","i1","i2","i3","toBase64Digit","toBase64VLQ","digit","B64_DIGITS","escapeIdentifier","escapeDollar","alwaysQuote","_SINGLE_QUOTE_ESCAPE_STRING_RE","_LEGAL_IDENTIFIER_RE","_createIndent","_INDENT_WITH","debugOutputAstAsTypeScript","converter","_TsEmitterVisitor","EmitterVisitorContext","createRoot","Statement","Expression","Type$1","visitType","toSource","registerContext","specs","specs_1","spec","SECURITY_SCHEMA","_isPixelDimensionStyle","prop","stripComments","_commentRe","extractSourceMappingUrl","matcher","_sourceMappingUrlRe","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","_ruleRe","selector","content","suffix","contentPrefix","BLOCK_PLACEHOLDER","blocks","rule","CssRule","inputParts","_curlyRe","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","CLOSE_CURLY","OPEN_CURLY","StringWithEscapedBlocks","getStylesVarName","hasPreserveWhitespacesAttr","some","PRESERVE_WS_ATTR_NAME","replaceNgsp","NGSP_UNICODE","removeWhitespaces","htmlAstWithErrors","ParseTreeResult","WhitespaceVisitor","rootNodes","errors","expandNodes","expander","_Expander","ExpansionResult","isExpanded","_expandPluralForm","cases","PLURAL_CASES","ExpansionError","valueSourceSpan","expansionResult","Attribute$1","switchAttr","switchValue","switchValueSourceSpan","_expandDefaultForm","_isAnimationLabel","calcPossibleSecurityContexts","registry","propName","isAttribute","ctxs","CssSelector","parse","elementNames","allKnownElementNames","notElementNames","notSelectors","isElementSelector","possibleElementNames","has","securityContext","SecurityContext","NONE","sort","warnOnlyOnce","warnings","warningCounts","splitExportAs","exportAs","splitClasses","classAttrValue","createElementCssSelector","attributes","cssSelector","elNameNoNs","setElement","attrName","attrNameNoNs","attrValue","addAttribute","CLASS_ATTR","className","addClassName","_isEmptyTextNode","Text","removeSummaryDuplicates","items","isEmptyExpression","ASTWithSource","EmptyExpr","isTemplate","el","enableLegacyTemplate","reportDeprecation","tagNoNs","TEMPLATE_ELEMENT","TEMPLATE_ELEMENT_DEPRECATION_WARNING","convertActionBinding","localResolver","implicitReceiver","action","bindingId","DefaultLocalResolver","actionWithoutBuiltins","convertPropertyBindingBuiltins","createLiteralArrayConverter","argCount","createLiteralMapConverter","keys","createPipeConverter","_AstToIrVisitor","actionStmts","flattenStatements","_Mode","prependTemporaryDecls","temporaryCount","lastIndex","preventDefaultVar","lastStatement","returnExpr","convertStmtIntoExpression","createPreventDefaultVar","cast","notIdentical","toDeclStmt","StmtModifier","Final","ConvertActionBindingResult","converterFactory","convertBuiltins","convertPropertyBinding","expressionWithoutBuiltins","currValExpr","createCurrValueExpr","outputExpr","temporaryDeclaration","ConvertPropertyBindingResult","_BuiltinAstConverter","temporaryName","temporaryNumber","DeclareVarStmt","statements","unshift","ensureStatementMode","mode","ensureExpressionMode","convertToStatementIfNeeded","toStmt","arg","output","ExpressionStatement","needsAdditionalRootNode","astNodes","lastAstNode","EmbeddedTemplateAst","hasViewContainer","ElementAst","NgContentAst","elementBindingDef","inputAst","dirAst","PropertyBindingType","Property","Animation","Class","Style","unit","fixedAttrsDef","elementAst","mapResult","attrAst","hostAttributes","prevValue","mergeAttributeValue","attrValue1","attrValue2","CLASS_ATTR$1","STYLE_ATTR","callCheckStmt","nodeIndex","CHECK_VAR","VIEW_VAR","callUnwrapValue","bindingIdx","unwrapValue","findStaticQueryIds","staticQueryIds","dynamicQueryIds","queryMatches","child","childData","add","delete","staticViewQueryIds","nodeStaticQueryIds","elementEventNameAndTarget","eventAst","isAnimation","phase","calcStaticDynamicQueryFlags","queryIds","isFirst","elementEventFullName","toTypeScript","file","preamble","genFileUrl","TypeScriptEmitter","emitStatements","srcFileUrl","serializeSummaries","srcFileName","forJitCtx","summaryResolver","symbolResolver","symbols","types","toJsonSerializer","ToJsonSerializer","resolvedSymbol","addSummary","symbol","metadata","summary","json","forJitSerializer_1","ForJitSerializer","addSourceType","unprocessedSymbolSummariesBySymbol","isLibraryFile","addLibType","deserializeSummaries","symbolCache","libraryFileName","FromJsonDeserializer","deserialize","createForJitStub","outputCtx","createSummaryForJitFunction","fnName","ArrayType","Exported","_createEmptyStub","ComponentFactory","_resolveStyleStatements","compileResult","needsShim","fileSuffix","dependencies","setValue","getStaticSymbol","_stylesModuleUrl","stylesheetUrl","shim","analyzeNgModules","fileNames","host","staticSymbolResolver","metadataResolver","mergeAnalyzedFiles","_analyzeFilesIncludingNonProgramFiles","analyzeAndValidateNgModules","validateAnalyzedModules","analyzedModules","symbolsMissingModule","seenFiles","files","visitFile","isSourceFile","analyzedFile","analyzeFile","ngModules","ngModule","transitiveModule","modules","modMeta","pipes","injectables","hasDecorators","exportsNonSourceFiles","getSymbolsOf","resolveSymbol","symbolMeta","__symbolic","isNgSymbol","isDirective","isPipe","isInjectable","getNgModuleMetadata","isValueExportingNonSourceFile","Visitor","_this","v","analyzedFiles","allNgModules","ngModuleByPipeOrDirective","allPipesAndDirectives","af","declaredDirectives","declaredPipes","mergeAndValidateNgFiles","shouldIgnore","expandedMessage","typeName","produceErrorMessage","mapStringMap","transform","HIDDEN_KEY","isPrimitive","o","positionalError","line","column","unescapeIdentifier","substr","createAotUrlResolver","basePath","resourceNameToFileName","createAotCompiler","compilerHost","options","urlResolver","StaticSymbolCache","AotSummaryResolver","StaticSymbolResolver","staticReflector","StaticReflector","htmlParser","I18NHtmlParser","HtmlParser","i18nFormat","missingTranslation","console","CompilerConfig","defaultEncapsulation","ViewEncapsulation","Emulated","useJit","preserveWhitespaces","strictInjectionParameters","normalizer","DirectiveNormalizer","loadResource","expressionParser","Parser","Lexer","elementSchemaRegistry","DomElementSchemaRegistry","tmplParser","TemplateParser","CompileMetadataResolver","NgModuleResolver","DirectiveResolver","PipeResolver","viewCompiler","ViewCompiler","typeCheckCompiler","TypeCheckCompiler","AotCompiler","StyleCompiler","NgModuleCompiler","interpretStatements","_ExecutionContext","StatementInterpreter","exportName","vars","_executeFunctionStatements","varValues","childCtx","createChildWihtLocalVars","createDynamicClass","_classStmt","_ctx","propertyDescriptors","getters","getter","instanceCtx","methods","method","paramNames","param","writable","ctorParamNames","constructorMethod","ctor","fields","field","superClass","parent","_declareFn","evalExpression","sourceUrl$$1","createSourceMap","fnBody","fnArgNames","fnArgValues","argName","emptyFn","Function","bind","headerLines","toSourceMapGenerator","toJsComment","jitStatements","createSourceMaps","JitEmitterVisitor","createReturnStmt","getArgs","assertComponent","flattenSummaries","fn$$1","seen","summaries","createOutputContext","genFilePath","moduleName","runtime","createUrlResolverWithoutPackagePrefix","UrlResolver","createOfflineCompileUrlResolver","getUrlScheme","_split","_ComponentIndex","Scheme","_buildFromEncodedParts","opt_scheme","opt_userInfo","opt_domain","opt_port","opt_path","opt_queryData","opt_fragment","uri","_splitRe","_removeDotSegments","leadingSlash","trailingSlash","segments","up","pos","segment","pop","_joinAndCanonicalizePath","Path","UserInfo","Domain","Port","QueryData","Fragment","_resolveUrl","encodeURI","baseParts","setPrototypeOf","__proto__","assign","t","call","createInject","createInjectionToken","desc","_desc","createAttribute","attributeName","createContentChildren","data","first","isViewQuery","descendants","createContentChild","createViewChildren","createViewChild","Native","None","ChangeDetectionStrategy","OnPush","Default","changeDetection","createPipe","pure","createInput","bindingPropertyName","createOutput","createHostBinding","hostPropertyName","createHostListener","eventName","createNgModule","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","createOptional","createInjectable","createSelf","createSkipSelf","createHost","HTML","URL","RESOURCE_URL","NodeFlags","TypeElement","TypeText","ProjectedTemplate","CatRenderNode","TypeNgContent","TypePipe","TypePureArray","TypePureObject","TypePurePipe","CatPureExpression","TypeValueProvider","TypeClassProvider","TypeFactoryProvider","TypeUseExistingProvider","LazyProvider","PrivateProvider","TypeDirective","CatProviderNoDirective","CatProvider","EmbeddedViews","ComponentView","TypeContentQuery","TypeViewQuery","StaticQuery","DynamicQuery","CatQuery","Types","DepFlags","SkipSelf","Optional","Value","ArgumentType","Inline","Dynamic","BindingFlags","TypeElementAttribute","TypeElementClass","TypeElementStyle","TypeProperty","SyntheticProperty","SyntheticHostProperty","CatSyntheticProperty","QueryBindingType","First","All","QueryValueType","ElementRef","RenderElement","TemplateRef","ViewContainerRef","Provider","ViewFlags","MissingTranslationStrategy","Warning","Ignore","core","freeze","ValueTransformer","SyncAsync","assertSync","cb","all","syncAsyncValues","Promise","Version","full","splits","major","minor","patch","VERSION","TextAst","ngContentIndex","visitText","BoundTextAst","visitBoundText","AttrAst","visitAttr","BoundElementPropertyAst","visitElementProperty","BoundEventAst","handler","calcFullName","visitEvent","ReferenceAst","visitReference","VariableAst","visitVariable","inputs","outputs","references","visitElement","variables","visitEmbeddedTemplate","BoundDirectivePropertyAst","directiveName","templateName","visitDirectiveProperty","DirectiveAst","hostProperties","hostEvents","visitDirective","Builtin","visitNgContent","NullTemplateVisitor","RecursiveTemplateAstVisitor","visitChildren","results","jitDevMode","members","assertNoMembers","JSON","cache","declarationFile","memberSuffix","HOST_REG_EXP","CompileAnimationEntryMetadata","definitions","CompileAnimationStateMetadata","CompileAnimationStateDeclarationMetadata","stateNameExpr","styles","CompileAnimationStateTransitionMetadata","stateChangeExpr","steps","CompileAnimationMetadata","CompileAnimationKeyframesSequenceMetadata","CompileAnimationStyleMetadata","CompileAnimationAnimateMetadata","timings","CompileAnimationWithStepsMetadata","CompileAnimationSequenceMetadata","CompileAnimationGroupMetadata","CompileSummaryKind","Injectable","CompileStylesheetMetadata","styleUrls","CompileTemplateMetadata","encapsulation","template","templateUrl","htmlAst","externalStylesheets","animations","ngContentSelectors","interpolation","toSummary","anim","CompileDirectiveMetadata","isHost","hostListeners","componentViewType","rendererType","matches","inputsMap","bindConfig","outputsMap","summaryKind","CompilePipeMetadata","CompileNgModuleMetadata","exportedDirectives","exportedPipes","bootstrapComponents","importedModules","exportedModules","schemas","TransitiveCompileNgModuleMetadata","directivesSet","exportedDirectivesSet","pipesSet","exportedPipesSet","modulesSet","entryComponentsSet","addProvider","addDirective","addExportedDirective","addPipe","addExportedPipe","addModule","addEntryComponent","ec","componentType","ProviderMeta","parentOf","childOf","Expansion","visitExpansion","ExpansionCase","expSourceSpan","visitExpansionCase","valueSpan","visitAttribute","startSourceSpan","visitComment","InterpolationConfig","fromArray","markers","style","TagContentType","RAW_TEXT","ESCAPABLE_RAW_TEXT","PARSABLE_DATA","NAMED_ENTITIES","Aacute","aacute","Acirc","acirc","acute","AElig","aelig","Agrave","agrave","alefsym","Alpha","alpha","amp","and","ang","apos","Aring","aring","asymp","Atilde","atilde","Auml","auml","bdquo","Beta","beta","brvbar","bull","cap","Ccedil","ccedil","cedil","cent","Chi","chi","circ","clubs","cong","copy","crarr","cup","curren","dagger","Dagger","darr","dArr","deg","Delta","delta","diams","divide","Eacute","eacute","Ecirc","ecirc","Egrave","egrave","empty","emsp","ensp","Epsilon","epsilon","equiv","Eta","eta","ETH","eth","Euml","euml","euro","exist","fnof","forall","frac12","frac14","frac34","frasl","Gamma","gamma","ge","gt","harr","hArr","hearts","hellip","Iacute","iacute","Icirc","icirc","iexcl","Igrave","igrave","image","infin","int","Iota","iota","iquest","isin","Iuml","iuml","Kappa","kappa","Lambda","lambda","lang","laquo","larr","lArr","lceil","ldquo","le","lfloor","lowast","loz","lrm","lsaquo","lsquo","lt","macr","mdash","micro","middot","minus","Mu","mu","nabla","nbsp","ndash","ne","ni","notin","nsub","Ntilde","ntilde","Nu","nu","Oacute","oacute","Ocirc","ocirc","OElig","oelig","Ograve","ograve","oline","Omega","omega","Omicron","omicron","oplus","or","ordf","ordm","Oslash","oslash","Otilde","otilde","otimes","Ouml","ouml","para","permil","perp","Phi","phi","Pi","pi","piv","plusmn","pound","prime","Prime","prod","Psi","psi","quot","radic","rang","raquo","rarr","rArr","rceil","rdquo","real","reg","rfloor","Rho","rho","rlm","rsaquo","rsquo","sbquo","Scaron","scaron","sdot","sect","shy","Sigma","sigma","sigmaf","sim","spades","sub","sube","sup","sup1","sup2","sup3","supe","szlig","Tau","tau","there4","Theta","theta","thetasym","thinsp","THORN","thorn","tilde","times","trade","Uacute","uacute","uarr","uArr","Ucirc","ucirc","Ugrave","ugrave","uml","upsih","Upsilon","upsilon","Uuml","uuml","weierp","Xi","xi","Yacute","yacute","yen","yuml","Yuml","Zeta","zeta","zwj","zwnj","_resourceLoader","_urlResolver","_htmlParser","_config","_resourceLoaderCache","clearCache","clear","clearCacheFor","normalizedDirective","stylesheet","_fetch","normalizeTemplate","prenormData","_preParseTemplate","preparsedTemplate","_normalizeTemplateMetadata","prenomData","_preparseLoadedTemplate","templateAbsUrl","rootNodesAndErrors","templateMetadataStyles","_normalizeStylesheet","TemplatePreparseVisitor","templateStyles","inlineStyleUrls","_loadMissingExternalStylesheets","_normalizeLoadedTemplateMetadata","stylesheets","_inlineStyles","styleUrl","targetStyles","loadedStylesheets","loadedStyle","allStyleUrls","allStyles","styleWithImports","ngNonBindableStackCount","preparsedElement","textContent_1","QUERY_METADATA_IDENTIFIERS","_reflector","typeMetadata","annotations","throwIfNotFound","propertyMetadata","propMetadata","_mergeWithPropertyMetadata","dm","directiveType","hostBinding","startWith","hostListener","_merge","_extractPublicName","def","_dedupeBindings","bindings","names","reversedResult","binding","name_1","mergedInputs","mergedOutputs","mergedHost","mergedQueries","comp","moduleId","KEYWORDS","tokens","scanToken","numValue","strValue","isCharacter","isNumber","isString","isOperator","operater","isKeyword","isKeywordLet","isKeywordAs","isKeywordNull","isKeywordUndefined","isKeywordTrue","isKeywordFalse","isKeywordThis","isError","toNumber","EOF","scanIdentifier","scanNumber","scanCharacter","scanString","scanOperator","scanComplexOperator","one","twoCode","two","threeCode","three","simple","parseFloat","quote","buffer","marker","unescapedCode","last","ParserError","errLocation","ctxLocation","ParseSpan","AST","Quote","uninterpretedExpression","location","ImplicitReceiver","Chain","Conditional","PropertyRead","PropertyWrite","SafePropertyRead","KeyedRead","KeyedWrite","BindingPipe","LiteralPrimitive","LiteralArray","LiteralMap","Interpolation","strings","Binary","operation","PrefixNot","NonNullAssert","MethodCall","SafeMethodCall","FunctionCall","TemplateBinding","keyIsVar","NullAstVisitor","RecursiveAstVisitor","AstTransformer","SplitInterpolation","offsets","TemplateBindingParseResult","templateBindings","_lexer","parseAction","_checkNoInterpolation","sourceToLex","_stripComments","_ParseAST","parseChain","parseBinding","_parseBindingAst","parseSimpleBinding","SimpleExpressionChecker","check","_reportError","_parseQuote","prefixSeparatorIndex","parseTemplateBindings","prefixToken","prefixTokens","parseInterpolation","splitInterpolation","expressionText","_findInterpolationErrorColumn","wrapLiteralPrimitive","_commentStart","outerQuote","char","nextChar","partInErrIdx","inputLength","rparensExpected","rbracketsExpected","rbracesExpected","next","inputIndex","optionalCharacter","peekKeywordLet","peekKeywordAs","expectCharacter","optionalOperator","op","expectOperator","operator","expectIdentifierOrKeyword","expectIdentifierOrKeywordOrString","parsePipe","parseExpression","parseConditional","parseLogicalOr","yes","no","parseLogicalAnd","parseEquality","parseRelational","parseAdditive","parseMultiplicative","parsePrefix","parseCallChain","parsePrimary","parseAccessMemberOrMethodCall","parseCallArguments","elements","parseExpressionList","parseLiteralMap","literalValue","terminator","isSafe","positionals","expectTemplateBindingKey","operatorFound","rawKey","name_2","letStart","letName","locationText","skip","col","moveBy","ch","priorLine","getContext","maxChars","maxLines","startOffset","endOffset","ctxChars","ctxLines","before","after","details","ParseErrorLevel","WARNING","ERROR","ParseError","level","contextualMessage","TAG_OPEN_START","TAG_OPEN_END","TAG_OPEN_END_VOID","TAG_CLOSE","COMMENT_START","COMMENT_END","CDATA_START","CDATA_END","ATTR_NAME","ATTR_VALUE","DOC_TYPE","EXPANSION_FORM_START","EXPANSION_CASE_VALUE","EXPANSION_CASE_EXP_START","EXPANSION_CASE_EXP_END","EXPANSION_FORM_END","Token$1","TokenError","errorMsg","tokenType","TokenizeResult","_CR_OR_CRLF_REGEXP","_ControlFlowError","_file","_getTagDefinition","_tokenizeIcu","_interpolationConfig","_peek","_nextPeek","_index","_line","_column","_expansionCaseStack","_inInterpolation","_input","_length","_advance","_processCarriageReturns","_getLocation","_attemptCharCode","_consumeCdata","_consumeComment","_consumeDocType","_consumeTagClose","_consumeTagOpen","_tokenizeExpansionForm","_consumeText","_beginToken","_endToken","_consumeExpansionFormStart","_isInExpansionForm","_consumeExpansionCaseStart","_isInExpansionCase","_consumeExpansionCaseEnd","_consumeExpansionFormEnd","_getSpan","_currentTokenStart","_currentTokenType","_createError","_attemptCharCodeCaseInsensitive","_requireCharCode","_attemptStr","chars","initialPosition","_savePosition","_restorePosition","_attemptStrCaseInsensitive","_requireStr","_attemptCharCodeUntilFn","predicate","_requireCharCodeUntilFn","_attemptUntilChar","_readChar","decodeEntities","_decodeEntity","startPosition","isHex","numberStart","strNum","entity","_consumeRawText","firstCharOfEnd","attemptEndRest","tagCloseStart","textStart","textToken","_consumePrefixAndName","nameOrPrefixStart","nameStart","lowercaseTagName","savedPos","_consumeTagOpenStart","_consumeAttributeName","_consumeAttributeValue","_consumeTagOpenEnd","contentTokenType","contentType","_consumeRawTextWithTagClose","prefixAndName","quoteChar","valueStart","_readUntil","_isTextEnd","nbTokens","TreeError","Parser$1","parseExpansionForms","tokensAndErrors","treeAndErrors","_TreeBuilder","build","_rootNodes","_errors","_elementStack","_consumeStartTag","_consumeEndTag","_closeVoidElement","_consumeExpansion","prev","_advanceIf","startToken","_addToParent","expCase","_parseExpansionCase","_collectExpansionExpTokens","parsedExp","expansionFormStack","parent_1","_getParentElement","ignoreFirstLf","isVoid","startTagToken","_consumeAttr","_getElementFullName","selfClosing","tagDef","canSelfClose","_pushElement","_popElement","parentEl","isClosedByChild","_getParentElementSkippingContainers","container","requireExtraParent","newParent","parentToAdd","_insertBeforeContainer","endTagToken","errMsg","stackIndex","splice","closedByParent","valueToken","parentElement","_SerializerVisitor","visitContainer","visitIcu","icu","strCases","visitTagPlaceholder","ph","startName","closeName","visitPlaceholder","visitIcuPlaceholder","Message","placeholders","placeholderToMessage","sources","startLine","startCol","endLine","endCol","Text$1","Container","Icu","TagPlaceholder","Placeholder","IcuPlaceholder","CloneVisitor","expressionPlaceholder","RecurseVisitor","HtmlTagDefinition","closedByChildren","requiredParents","implicitNamespacePrefix","_f","currentParent","lcParent","area","embed","link","img","hr","br","track","wbr","thead","tbody","tfoot","tr","td","th","svg","math","li","dt","dd","rb","rt","rtc","rp","optgroup","option","pre","listing","script","title","textarea","TAG_TO_PLACEHOLDER_NAMES","A","B","BR","EM","H1","H2","H3","H4","H5","H6","HR","I","LI","LINK","OL","P","Q","S","SMALL","SUB","SUP","TBODY","TD","TFOOT","TH","THEAD","TR","TT","U","UL","PlaceholderRegistry","_placeHolderNameCounts","_signatureToName","getStartTagPlaceholderName","signature","_hashTag","upperTag","baseName","_generateUniqueName","getCloseTagPlaceholderName","_hashClosingTag","getPlaceholderName","upperName","uniqueName","getUniquePlaceholder","_expressionParser","_isIcu","_icuDepth","_placeholderRegistry","_placeholderToContent","_placeholderToMessage","i18nodes","startPhName","closePhName","attribute","_visitTextWithInterpolation","comment","i18nIcuCases","i18nIcu","caze","expPh","phName","icuCase","sDelimiter","eDelimiter","lastStringIdx","I18nError","_I18N_COMMENT_PREFIX_REGEXP","i18nCommentsWarned","ExtractionResult","_VisitorMode","Extract","Merge","_implicitTags","_implicitAttrs","_init","_inI18nBlock","_messages","_translations","wrapper","translatedNode","_mode","_mayBeAddBlockChildren","wasInIcu","_inIcu","_isInTranslatableSection","_addMessage","isOpening","isClosing","_inI18nNode","_depth","_blockStartDepth","_closeTranslatableSection","_blockChildren","_blockMeaningAndDesc","_translateMessage","warn","_openTranslatableSection","wasInI18nNode","wasInImplicitNode","_inImplicitNode","childNodes","translatedChildNodes","i18nAttr","i18nMeta","isImplicit","isTopLevelImplicit","isTranslatable","visited","_visitAttributesOf","translatedAttrs","_translateAttributes","_msgCountAtSectionStart","_createI18nMessage","explicitAttrNameToValue","implicitAttrNames","msgMeta","i18nParsedMessageMeta","translatedAttributes","directChildren","startIndex","XmlTagDefinition","XmlParser","Serializer","createNameMapper","SimplePlaceholderMapper","mapName","internalToPublic","publicToNextId","publicToInternal","toInternalName","publicName","visitPlaceholderName","nextId","_Visitor$1","visitTag","strAttrs","_serializeAttributes","strChildren","visitDeclaration","decl","visitDoctype","doctype","rootTag","dtd","Declaration","unescapedAttrs","Doctype","Tag","Text$2","unescapedValue","CR","ws","write","locale","_WriteVisitor","transUnits","contextTags","contextGroupTag","purpose","context-type","transUnit","datatype","priority","source-language","original","xliff","version","xmlns","encoding","load","xliffParser","XliffParser","msgIdToHtml","i18nNodesByMsgId","XmlToI18n","msgId","convert","i18nNodes","ctype","equiv-text","startTagPh","closeTagPh","equivText","_locale","_unitMlString","_msgIdToHtml","xml","idAttr","_addError","innerTextStart","innerTextEnd","innerText","localeAttr","expansion","expansionCase","xmlIcu","nameAttr","caseMap","_WriteVisitor$1","units","notes","category","srcLang","xliff2Parser","Xliff2Parser","XmlToI18n$1","_nextPlaceholderId","disp","tagPc","equivStart","equivEnd","dispStart","dispEnd","idStr","versionAttr","startAttr","endAttr","startId","endId","exampleVisitor","ExampleVisitor","_Visitor$2","rootNode","sourceTags","addDefaultExamples","startEx","closeEx","exTag","exText","xtbParser","XtbParser","XmlToI18n$2","xtb","_bundleDepth","langAttr","TranslationBundle","_i18nNodesByMsgId","mapperFactory","missingTranslationStrategy","_i18nToHtml","I18nToHtmlVisitor","serializer","srcMsg","html","_digest","_mapperFactory","_missingTranslationStrategy","_console","_contextStack","_convertToText","_srcMsg","_mapper","mapper","translationsFormat","_translationBundle","parseResult","CORE","ANALYZE_FOR_ENTRY_COMPONENTS","ChangeDetectorRef","QueryList","ComponentRef","NgModuleFactory","createModuleFactory","moduleDef","moduleProviderDef","RegisterModuleFactoryFn","Injector","LOCALE_ID","TRANSLATIONS_FORMAT","inlineInterpolate","interpolate","EMPTY_ARRAY","EMPTY_MAP","Renderer","viewDef","elementDef","anchorDef","textDef","directiveDef","queryDef","pureArrayDef","pureObjectDef","purePipeDef","pipeDef","nodeValue","ngContentDef","createRendererType2","RendererType2","ViewDefinition","createComponentFactory","_SELECTOR_REGEXP","classNames","_addResult","cssSel","current","inNot","exec","hasElementSelector","getMatchingElementTemplate","classAttr","klass","notSelector","SelectorMatcher","_elementMap","_elementPartialMap","_classMap","_classPartialMap","_attrValueMap","_attrValuePartialMap","_listContexts","createNotMatcher","notMatcher","addSelectables","cssSelectors","callbackCtxt","listContext","SelectorListContext","_addSelectable","selectable","SelectorContext","isTerminal","_addTerminal","_addPartial","terminalMap","terminalValuesMap","partialMap","partialValuesMap","terminalList","matchedCallback","alreadyMatched","_matchTerminal","_matchPartial","name_3","selectables","starSelectables","finalize","nestedSelector","cbContext","callback","_ngModuleResolver","_directiveResolver","_pipeResolver","_summaryResolver","_schemaRegistry","_directiveNormalizer","_staticSymbolCache","_errorCollector","_nonNormalizedDirectiveCache","_directiveCache","_summaryCache","_pipeCache","_ngModuleCache","_ngModuleOfTypes","getReflector","dirMeta","_createProxyClass","baseType","delegate","proxyClass","setDelegate","getGeneratedClass","dirType","getComponentViewClass","getHostComponentViewClass","getHostComponentType","HostClass","getRendererType","getComponentFactory","hostView","initComponentFactory","_loadSummary","typeSummary","resolveSummary","getHostComponentMetadata","hostViewType","hostType","loadDirectiveMetadata","isSync","getNonNormalizedDirectiveMetadata","annotation","createDirectiveMetadata","templateMetadata","normalizedDirMeta","componentModuleUrl","cacheEntry","nonNormalizedTemplateMetadata","changeDetectionStrategy","entryComponentMetadata","_getProvidersMetadata","_getEntryComponentMetadata","getDefaultComponentElementName","_getQueriesMetadata","_getTypeMetadata","getDirectiveMetadata","getDirectiveSummary","dirSummary","isNgModule","getNgModuleSummary","moduleType","moduleSummary","loadNgModuleDirectiveAndPipeMetadata","loading","promise","_loadPipeMetadata","compileMeta","exportedNonModuleIdentifiers","imports","importedType","importedModuleType","moduleWithProviders","_checkSelfImport","importedModuleSummary","_getTypeDescriptor","exportedType","exportedModuleSummary","_getIdentifierMetadata","_getTransitiveNgModuleMetadata","declarations","declaredType","declaredIdentifier","_addTypeToModule","exportedId","bootstrap","provide","oldModule","modulesByToken","modSummary","mod","addedTokens","tokenRef","prevModules","moduleRef","ann","getInjectableSummary","_getInjectableMetadata","throwOnUnknownDeps","_getDependenciesMetadata","_getFactoryMetadata","getPipeMetadata","pipeType","pipeMeta","getPipeSummary","pipeSummary","getOrLoadPipeMetadata","pipeAnnotation","typeOrFunc","hasUnknownDeps","parameters","dependenciesMetadata","isSelf","paramEntry","_getTokenMetadata","depsTokens","targetEntryComponents","debugInfo","compileProviders","providerIdx","_validateProvider","providersInfo","soFar","seenProvider","seenProviderIdx","_getEntryComponentsFromProvider","getProviderMetadata","components","collectedIdentifiers","compileDeps","compileTypeMetadata","compileFactoryMetadata","propertyName","_getQueryMetadata","_queryVarBindings","q","varName","read","otherType","TypeModifier","Const","modifiers","hasModifier","modifier","BuiltinTypeName","Bool","Int","Inferred","BuiltinType","visitBuiltintType","visitExpressionType","of","visitArrayType","MapType","valueType","visitMapType","BOOL_TYPE","BinaryOperator","Equals","NotEquals","Identical","NotIdentical","Minus","Plus","Divide","Multiply","Modulo","And","Or","Lower","LowerEquals","Bigger","BiggerEquals","ReadPropExpr","ReadKeyExpr","callMethod","InvokeMethodExpr","InvokeFunctionExpr","InstantiateExpr","conditional","trueCase","falseCase","ConditionalExpr","equals","rhs","BinaryOperatorExpr","notEquals","identical","plus","multiply","modulo","lower","lowerEquals","bigger","biggerEquals","isBlank","TYPED_NULL_EXPR","CastExpr","BuiltinVar","This","Super","CatchError","CatchStack","builtin","visitReadVarExpr","WriteVarExpr","visitWriteVarExpr","WriteKeyExpr","visitWriteKeyExpr","WritePropExpr","visitWritePropExpr","BuiltinMethod","ConcatArray","SubscribeObservable","Bind","visitInvokeMethodExpr","visitInvokeFunctionExpr","classExpr","visitInstantiateExpr","visitLiteralExpr","visitExternalExpr","ExternalReference","visitConditionalExpr","visitNotExpr","visitAssertNotNullExpr","visitCastExpr","visitFunctionExpr","DeclareFunctionStmt","lhs","visitBinaryOperatorExpr","visitReadPropExpr","visitReadKeyExpr","entries","visitLiteralArrayExpr","visitLiteralMapExpr","CommaExpr","visitCommaExpr","Private","visitDeclareVarStmt","visitDeclareFunctionStmt","visitExpressionStmt","visitReturnStmt","AbstractClassPart","ClassMethod","ClassField","ClassGetter","ClassStmt","visitDeclareClassStmt","IfStmt","visitIfStmt","CommentStmt","visitCommentStmt","TryCatchStmt","bodyStmts","catchStmts","visitTryCatchStmt","ThrowStmt","visitThrowStmt","AstTransformer$1","transformExpr","transformStmt","visitAllExpressions","mapType","ctorMethod","RecursiveAstVisitor$1","_clone","clone","ProviderViewContext","ProviderElementContext","viewContext","_parent","_isViewRoot","_directiveAsts","refs","_sourceSpan","_transformedProviders","_seenProviders","_queriedTokens","transformedHasViewContainer","_attrs","directivesMeta","directiveAst","_allProviders","_contentQueries","_addQueryReadsTo","templateRefId","refAst","defaultQueryValue","_getOrCreateLocalProvider","afterElement","lazyProviders","eagerProviders","sortedProviderTypes","transformProviders","sortedDirectives","dir1","dir2","allMatches","defaultValue","queryReadTokens","_getQueriesFor","queryValue","currentEl","distance","requestingProviderType","transformedProviderAst","transformedProviders","transformedUseValue","transformedUseExisting","transformedDeps","existingDiDep","_getDependency","_getLocalDependency","currElement","currEager","prevElement","NgModuleProviderAnalyzer","extraProviders","errorString","requestorSourceSpan","foundLocal","quotedSet","NgModuleCompileResult","ngModuleFactoryVar","LOG_VAR","compile","ngModuleMeta","providerParser","providerDefs","ngModuleDef","ngModuleDefFactory","_createNgModuleFactory","registerFactoryStmt","createStub","ngModuleReference","ngModuleFactoryStmt","SourceMapGenerator","sourcesContent","lines","lastCol0","hasMappings","addSource","addLine","addMapping","col0","sourceLine0","sourceCol0","currentLine","toJSON","sourcesIndex","mappings","lastSourceIndex","lastSourceLine0","lastSourceCol0","segAsStr","sourceRoot","CATCH_ERROR_VAR$1","CATCH_STACK_VAR$1","_EmittedLine","indent","partsLength","srcSpans","_indent","_classes","_preambleLineCount","_lines","println","lastPart","print","lineIsEmpty","_currentLine","lineLength","newLine","removeEmptyLastLine","incIndent","decIndent","pushClass","clazz","popClass","sourceLines","sourceFilePath","startsAtLine","firstOffsetMapped","mapFirstOffsetIfNeeded","lineIdx","spans","spanIdx","sourceLine","sourceCol","setPreambleLineCount","emittedLine","columnsLeft","AbstractEmitterVisitor","_escapeDollarInStrings","hasElseCase","lineWasEmpty","getBuiltinMethodName","opStr","visitAllObjects","separator","incrementedIndent","emitStatementsAndContext","srcFilePath","emitSourceMaps","referenceFilter","preambleLines","reexports","exportedModuleName","reexportsCode","reexport","as","importsWithPrefixes","importedModuleName","sm","sourceText","typeExpression","defaultType","_visitIdentifier","_printColonType","_visitClassField","_visitClassConstructor","_visitClassGetter","_visitClassMethod","_visitParams","typeStr","size","metas","ElementSchemaRegistry","BOOLEAN","NUMBER","STRING","OBJECT","SCHEMA","_ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","_schema","encodedType","strType","strProperties","properties","typeNames","superName","superType","property","hasProperty","schemaMetas","schema","hasElement","getMappedPropName","validateProperty","validateAttribute","normalizeAnimationStyleProperty","normalizeAnimationStyleValue","camelCaseProp","userProvidedProp","strVal","valAndSuffixMatch","ShadowCss","strictStyling","shimCssText","hostSelector","sourceMappingUrl","_insertDirectives","_scopeCssText","_insertPolyfillDirectivesInCssText","_insertPolyfillRulesInCssText","_cssContentNextSelectorRe","_cssContentRuleRe","scopeSelector","unscopedRules","_extractUnscopedRulesFromCssText","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertShadowDOMSelectors","_scopeSelectors","r","_cssContentUnscopedRuleRe","_convertColonRule","_cssColonHostRe","_colonHostPartReplacer","_cssColonHostContextRe","_colonHostContextPartReplacer","regExp","partReplacer","_polyfillHostNoCombinator","_polyfillHost","_shadowDOMSelectorsRe","_scopeSelector","strict","_shadowDeepSelectors","deepParts","shallowPart","otherParts","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","_makeScopeMatcher","lre","rre","_selectorReSuffix","_applySimpleSelectorScope","_polyfillHostRe","replaceBy_1","_polyfillHostNoCombinatorRe","hnc","colon","isRe","_scopeSelectorPart","scopedP","safeContent","SafeSelector","scopedSelector","sep","scopeAfter","restore","_colonHostContextRe","_polyfillHostContext","_colonHostRe","keep","replaceBy","_content","pseudo","_parenSuffix","StylesCompileDependency","CompiledStylesheet","stylesVar","isShimmed","_shadowCss","compileComponent","_compileStyles","needsStyleShim","compileStyles","isComponentStylesheet","styleExpressions","plainStyle","_shimIfNeeded","exprIndex","SKIP_WS_TRIM_TAGS","WS_CHARS","NO_WS_REGEXP","WS_REPLACE_REGEXP","expanded","BoundPropertyType","DEFAULT","LITERAL_ATTR","ANIMATION","BoundProperty","isLiteral","BindingParser","_exprParser","_targetErrors","pipesByName","_usedPipes","pipe","getUsedPipes","createDirectiveHostPropertyAsts","elementSelector","boundProps_1","parsePropertyBinding","createElementPropertyAst","createDirectiveHostEventAsts","targetEventAsts_1","parseEvent","sourceInfo","_reportExpressionParserErrors","_checkPipes","parseInlineTemplateBinding","targetMatchableAttrs","targetProps","targetVars","_parseTemplateBindings","_parsePropertyAst","parseLiteralAttr","bindingsResult","warning","_parseAnimation","isAnimationProp","_parseBinding","parsePropertyInterpolation","isHostBinding","boundProp","bindingType","boundPropertyName","securityContexts","_validatePropertyOrAttributeName","nsSeparatorIdx","ns","targetEvents","_parseAnimationEvent","_parseEvent","_parseAction","errors_1","collector","PipeCollector","pipeName","isAttr","report","BIND_NAME_REGEXP","TEXT_CSS_SELECTOR","TemplateParseError","TemplateParseResult","templateAst","usedPipes","transforms","tryParse","htmlParseResult","getInterpolationConfig","tryParseHtml","expandHtml","uniqDirectives","uniqPipes","providerViewContext","bindingParser","parseVisitor","TemplateParseVisitor","EMPTY_ELEMENT_CONTEXT","_assertNoReferenceDuplicationOnTemplate","forced","expandedHtmlAst","existingReferences","_bindingParser","_schemas","selectorMatcher","directivesIndex","ngContentCount","findNgContentIndex","valueNoNgsp","queryStartIndex","matchableAttrs","elementOrDirectiveProps","elementOrDirectiveRefs","elementVars","events","templateElementOrDirectiveProps","templateMatchableAttrs","templateElementVars","hasInlineTemplates","isTemplateElement","templateBindingsSource","hasBinding","_parseAttr","normalizedName","_normalizeAttributeName","hasTemplateBinding","elementCssSelector","_parseDirectives","directiveMetas","matchElement","boundDirectivePropNames","directiveAsts","_createDirectiveAsts","elementProps","_createElementPropertyAsts","isViewRoot","providerContext","NON_BINDABLE_VISITOR","ElementContext","parsedElement","projectionSelector","every","_assertAllEventsPublishedByDirectives","_assertNoComponentsNorElementBindingsOnTemplate","transformedDirectiveAsts","_assertElementExists","_assertOnlyOneComponent","ngContentIndex_1","templateQueryStartIndex","templateSelector","templateDirectiveMetas","templateBoundDirectivePropNames","templateDirectiveAsts","templateElementProps","templateProviderContext","targetRefs","srcSpan","bindParts","_parseVariable","_parseReference","_parseAssignmentEvent","ElementOrDirectiveRef","elementSourceSpan","targetReferences","targetBoundDirectivePropNames","matchedReferences","directiveProperties","_checkPropertiesInSchema","_createDirectivePropertyAsts","elOrDirRef","isReferenceToDirective","refToken","boundProps","targetBoundDirectiveProps","boundPropsByName_1","dirProp","elProp","boundElementProps","_findComponentDirectives","_findComponentDirectiveNames","componentTypeNames","elName","allDirectiveEvents","event","NonBindableVisitor","attrNameAndValues","_ngContentIndexMatcher","_wildcardNgContentIndex","wildcardNgContentIndex","ngContentIndices","EventHandlerVars","allowDefault","_converterFactory","BuiltinFunctionCall","_localResolver","_implicitReceiver","_nodeMap","_resultMap","_currentTemporary","_visit","fnResult","convertedArgs","leftMostSafe","leftMostSafeNode","convertSafeAccess","_getLocal","getLocal","varExpr","guardedExpression","temporary","needsTemporary","allocateTemporary","access","releaseTemporary","visitSome","tempNumber","externalReferenceVars","embeddedViewCount","viewBuilderFactory","embeddedViewIndex","ViewBuilder","isHostComponent","refOutputVars","updates","actions","getOutputVar","targetStatements","viewStmts","bindingCount","preprocessUpdateExpression","nameResolver","viewName","viewFactory","visitElementOrTemplate","fullTemplateTypeCheck","childVisitor","outputVarType","outputAst","hostEventAst","currBuilder","varAst","pipeOutputVar","ViewCompileResult","viewClassVar","rendererTypeVar","renderComponentVarName","template_1","customRenderData","renderComponentVar","ViewBuilder$1","LOG_VAR$1","COMP_VAR","EVENT_NAME_VAR","ALLOW_DEFAULT_VAR","purePipeNodeIndices","refNodeIndices","_createPipe","queryIds_1","queryIndex","nodeFlags","nodeDef","_createNodeExpressions","updateRendererStmts","updateDirectivesStmts","nodeDefExprs","updateRendererFn","_createUpdateFn","updateDirectivesFn","viewFlags","updateStmts","updateFn","preStmts","astWithSource","inter","updateRendererExpressions","bindingIndex","_preprocessUpdateExpression","checkIndex","updateRenderer","_visitElementOrTemplate","queryMatchesExpr","childCount","_createElementHandleEventFn","usedEvents","dirHostBindings","hostBindings","inputDefs","outputDefs","compAst","compRendererType","compView","_visitComponentFactoryResolverProvider","dirIndex","localDirAst","_visitDirective","dirHostEvents","_visitProvider","queryMatchExprs","elementNodeIndex","_visitProviderOrDirective","mapValue","updateDirectiveExpressions","dirContextExpr","updateDirectives","_addProviderNode","componentDirMeta","providerFlags","currViewExpr","refNodeIndex","varValue","_createLiteralArrayConverter","valueExpr_1","_createLiteralMapConverter","valueExpr_2","_createPipeConverter","checkIndex_1","compViewExpr","compBuilder","pipeNodeIndex","pipeValueExpr_1","nodeValueExpr_1","diDep","createUpdateStatements","allowEmptyExprs","updateBindingCount","self","handlers","handleEventStmts","handleEventBindingCount","trueStmts","eventTarget","fullEventName","handleEventFn","MessageBundle","updateFromTemplate","htmlParserResult","i18nParserResult","getMessages","filterSources","mapperVisitor","MapPlaceholderNames","msgList","src","transformedMessage","GeneratedFile","sourceOrStmts","indexBySymbol","processedSummaryBySymbol","processedSummaries","getKnownModuleName","unprocessedSummary","processedSummary","processValue","metadata_1","clone_1","ngModuleSummary","summary_1","importAs","__symbol","toSummaryFileName","baseSymbol","visitStaticSymbol","loadSummary","isLibrary","ngModuleSymbols","serializeSummaryWithDeps","jitExportAsName","serializeSummaryRef","serializeSummary","typeSymbol","jitImportedSymbol","Transformer","serializedSymbol","fromSummaryFileName","StubEmitFlags","Basic","TypeCheck","_options","_host","_metadataResolver","_templateParser","_styleCompiler","_viewCompiler","_typeCheckCompiler","_ngModuleCompiler","_outputEmitter","_symbolResolver","_templateAstCache","_analyzedFiles","analyzeModulesSync","rootFiles","analyzeResult","analyzeModulesAsync","_analyzeFile","findGeneratedFileNames","genFileNames","allowEmptyCodegenFiles","enableSummariesForJit","dirSymbol","normalizedUrl","emitBasicStub","genFileName","originalFileName","_createOutputContext","originalFile","_createNgFactoryStub","_codegenSourceModule","emitTypeCheckStub","loadFilesAsync","loadingPromises","loadFilesSync","emitFlags","ngModuleIndex","typeIndex","dirId","_createTypeCheckBlock","_parseTemplate","parsedTemplate","emitMessageBundle","messageBundle","compMetas","emitAllImpls","_compileImplFile","generatedFiles","_createSummary","_compileModule","componentStylesheet","stylesheetMeta","_codegenStyles","_compileComponent","_compileComponentFactory","srcModule","ngFactoryCtx","symbolSummaries","typeData","forJitOutputCtx","summaryJson","normalizedLocale","hostMeta","hostViewFactoryVar","compFactoryVar","inputsExprs","outputsExprs","directiveIdentifiers","componentStyles","stylesExpr","viewResult","arity","getTypeArity","getImportAs","importModule","fileNameToModuleName","selfReference","suppliedTypeParams","missingTypeParamsCount","allTypeParams","fill","memberName","stylesheetMetadata","compiledStylesheet","ANGULAR_CORE","IGNORE","USE_VALUE","PROVIDE","REFERENCE_SET","knownMetadataClasses","knownMetadataFunctions","errorRecorder","annotationCache","propertyCache","parameterCache","methodCache","conversionMap","annotationForParentClassWithSummaryKind","initializeConversionMap","kc","_registerDecoratorOrConstructor","kf","_registerFunction","staticSymbol","findSymbolDeclaration","getResourcePath","refSymbol","getSymbolByModule","declarationSymbol","recordModuleNameForFileName","recordImportAs","findDeclaration","containingFile","tryFindDeclaration","ignoreErrorsFor","classMetadata","getTypeMetadata","parentType","findParentType","parentAnnotations","ownAnnotations_1","simplify","requiredAnnotationTypes","requiredType","reportError","parentPropMetadata_1","parentProp","members_1","propData","decorators","parameters_1","ctorData","rawParameterTypes","parameterDecorators_1","rawParamType","nestedResult","paramType","trySimplify","_methodNames","methodNames","parentMethodNames_1","members_2","isMethod","lcProperty","injectionToken","opaqueToken","ROUTES","originalRecorder","simplifyInContext","depth","resolveReferenceValue","simplifyCall","functionSymbol","targetFunction","calling","value_1","defaults","functionScope","BindingScope","result_1","oldScope","scope","done","result_2","spreadArray","spreadArray_1","spreadItem","value_2","declarationValue","operand","indexTarget","member","selectContext","selectTarget","localValue","missing","argExpressions","PopulatedScope","ResolvedStaticSymbol","staticSymbolCache","metadataCache","resolvedSymbols","resolvedFilePaths","symbolResourcePaths","symbolFromFile","knownFileNameToModuleNames","_resolveSymbolMembers","resultFromSummary","_resolveSymbolFromSummary","resultFromCache","_createSymbolsOf","baseImportAs","summarizedFileName","summarizedName","importedFilePath","containingFilePath","sourceSymbol","targetSymbol","invalidateFile","symbols_1","recorder","baseResolvedSymbol","baseMetadata","statics","getModuleMetadata","metadataKey","summarySymbols","metadataSymbols","this_1","moduleExport","export","exportSymbol","symName","resolvedModule","resolveModule","createExport","topLevelSymbolNames_1","origins_1","origin","originFilePath","createResolvedSymbol","topLevelPath","topLevelSymbolNames","transformedMeta_1","ReferenceTransformer","functionParams","symbolic","oldLen","transformedMeta","moduleMetadata","moduleMetadatas","getMetadataFor","maxVersion_1","md","errorMessage","moduleNameToFileName","summaryCache","loadedFilePaths","referringSrcFileName","referringLibFileName","_loadSummaryFile","hasSummary","summaryFilePath","SummaryResolver","JitSummaryResolver","_summaries","instance","ReturnValue","debugAst","currCtx","CATCH_ERROR_VAR$2","CATCH_STACK_VAR$2","subscribe","fnExpr","AbstractJsEmitterVisitor","_evalArgNames","_evalArgValues","_evalExportedVars","resultVar","JitCompiler","_compilerConfig","getExtraNgModuleProviders","_compiledTemplateCache","_compiledHostTemplateCache","_compiledDirectiveWrapperCache","_compiledNgModuleCache","_sharedStylesheetCount","compileModuleSync","_compileModuleAndComponents","compileModuleAsync","compileModuleAndAllComponentsSync","_compileModuleAndAllComponents","compileModuleAndAllComponentsAsync","loadAotSummaries","hasAotSummary","_filterJitIdentifiers","ids","_loadModules","_compileComponents","componentFactories","ngModuleFactory","mainModule","mainNgModule","nestedNgModule","_interpretOrJit","allComponentFactories","moduleByJitDirective","templates","transJitModules","localMod","localModuleMeta","dirRef","_createCompiledTemplate","_createCompiledHostTemplate","entryComponentType","_compileTemplate","compiledTemplate","viewDefFactory","CompiledTemplate","isCompiled","externalStylesheetsByModuleUrl","outputContext","_resolveStylesCompileResult","evalResult","viewClass","compiled","nestedCompileResult","nestedStylesArr","_resolveAndEvalStylesCompileResult","_viewClass","CompileReflector","UrlResolverImpl","_packagePrefix","resolvedUrl","resolvedParts","ResourceLoader","Extractor","extractor"],"mappings":"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,gBACA,cACA,gBAEJngB,gBAAgBkF,gBAAgBzlB,OAAQ,YAExCugB,gBAAgBkF,gBAAgBkb,KAC5B,eAAgB,YAAa,YAAa,YAAa,SACvD,SAAU,kBAAmB,kBAAmB,WAAY,cAC5D,UAAW,aAAc,YAAa,WAAY,SAClD,aAAc,gBAAiB,YAAa,eAAgB,cAEhEpgB,gBAAgBkF,gBAAgBmb,cAC5B,cACA,kBACA,YACA,YACA,YACA,eACA,gBACA,aACA,YACA,YACA,kBACA,cACA,cAUJ,IAAI8oD,uBAAyB,WACzB,QAASA,0BAET,MAAOA,0BAcPC,QAAU,UACVC,OAAS,SACTC,OAAS,SACTC,OAAS,SA2CTC,QACA,iYAEA,s1BACA,qgCACA,gOACA,2uBACA,uBACA,2CACA,uBACA,wCACA,uBACA,kCACA,yCACA,mLACA,8JACA,eACA,yBACA,iCACA,iQACA,yHACA,sCACA,+BACA,4BACA,0BACA,8BACA,yCACA,6BACA,0BACA,uDACA,wCACA,qCACA,uGACA,iGACA,sOACA,mDACA,sBACA,wCACA,6BACA,2JACA,oJACA,wbACA,+BACA,8BACA,6BACA,wIACA,yBACA,4HACA,8BACA,mDACA,2DACA,sCACA,kDACA,uIACA,yCACA,6EACA,wDACA,wBACA,gDACA,yBACA,2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,0BACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,2BACA,sBACA,+CACA,+CACA,+CACA,+CACA,6BACA,sBACA,sBACA,0BACA,2BACA,uBACA,2BACA,iCACA,0BACA,qBACA,2BACA,qBACA,oCACA,wBACA,4BACA,2BACA,qCACA,oBACA,qBACA,mBACA,uBACA,2BACA,sBACA,8BACA,+BACA,qCACA,2BACA,mDACA,yBACA,2BACA,mBACA,8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","file":"/home/travis/build/angular/angular/dist/packages-dist/compiler/bundles/compiler.umd.min.js","sourcesContent":["/**\n * @license Angular v5.0.0-rc.0-c80e02b\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define('@angular/compiler', ['exports'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.compiler = {})));\n}(this, (function (exports) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\n\n/**\n * @license Angular v5.0.0-rc.0-c80e02b\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\nfunction Inject() { }\nvar createInject = makeMetadataFactory('Inject', function (token) { return ({ token: token }); });\nvar createInjectionToken = makeMetadataFactory('InjectionToken', function (desc) { return ({ _desc: desc }); });\n/**\n * @record\n */\nfunction Attribute() { }\nvar createAttribute = makeMetadataFactory('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * @record\n */\nfunction Query() { }\nvar createContentChildren = makeMetadataFactory('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n});\nvar createContentChild = makeMetadataFactory('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n});\nvar createViewChildren = makeMetadataFactory('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n});\nvar createViewChild = makeMetadataFactory('ViewChild', function (selector, data) {\n    return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n});\n/**\n * @record\n */\nfunction Directive() { }\nvar createDirective = makeMetadataFactory('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n});\n/**\n * @record\n */\nfunction Component() { }\n/** @enum {number} */\nvar ViewEncapsulation = {\n    Emulated: 0,\n    Native: 1,\n    None: 2,\n};\nViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\nViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\nViewEncapsulation[ViewEncapsulation.None] = \"None\";\n/** @enum {number} */\nvar ChangeDetectionStrategy = {\n    OnPush: 0,\n    Default: 1,\n};\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\nvar createComponent = makeMetadataFactory('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: ChangeDetectionStrategy.Default }, c));\n});\n/**\n * @record\n */\nfunction Pipe() { }\nvar createPipe = makeMetadataFactory('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n * @record\n */\nfunction Input() { }\nvar createInput = makeMetadataFactory('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * @record\n */\nfunction Output() { }\nvar createOutput = makeMetadataFactory('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * @record\n */\nfunction HostBinding() { }\nvar createHostBinding = makeMetadataFactory('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * @record\n */\nfunction HostListener() { }\nvar createHostListener = makeMetadataFactory('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n/**\n * @record\n */\nfunction NgModule() { }\nvar createNgModule = makeMetadataFactory('NgModule', function (ngModule) { return ngModule; });\n/**\n * @record\n */\nfunction ModuleWithProviders() { }\n/**\n * @record\n */\nfunction SchemaMetadata() { }\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\nvar createOptional = makeMetadataFactory('Optional');\nvar createInjectable = makeMetadataFactory('Injectable');\nvar createSelf = makeMetadataFactory('Self');\nvar createSkipSelf = makeMetadataFactory('SkipSelf');\nvar createHost = makeMetadataFactory('Host');\nvar Type = Function;\n/** @enum {number} */\nvar SecurityContext = {\n    NONE: 0,\n    HTML: 1,\n    STYLE: 2,\n    SCRIPT: 3,\n    URL: 4,\n    RESOURCE_URL: 5,\n};\nSecurityContext[SecurityContext.NONE] = \"NONE\";\nSecurityContext[SecurityContext.HTML] = \"HTML\";\nSecurityContext[SecurityContext.STYLE] = \"STYLE\";\nSecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\nSecurityContext[SecurityContext.URL] = \"URL\";\nSecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n/** @enum {number} */\nvar NodeFlags = {\n    None: 0,\n    TypeElement: 1,\n    TypeText: 2,\n    ProjectedTemplate: 4,\n    CatRenderNode: 3,\n    TypeNgContent: 8,\n    TypePipe: 16,\n    TypePureArray: 32,\n    TypePureObject: 64,\n    TypePurePipe: 128,\n    CatPureExpression: 224,\n    TypeValueProvider: 256,\n    TypeClassProvider: 512,\n    TypeFactoryProvider: 1024,\n    TypeUseExistingProvider: 2048,\n    LazyProvider: 4096,\n    PrivateProvider: 8192,\n    TypeDirective: 16384,\n    Component: 32768,\n    CatProviderNoDirective: 3840,\n    CatProvider: 20224,\n    OnInit: 65536,\n    OnDestroy: 131072,\n    DoCheck: 262144,\n    OnChanges: 524288,\n    AfterContentInit: 1048576,\n    AfterContentChecked: 2097152,\n    AfterViewInit: 4194304,\n    AfterViewChecked: 8388608,\n    EmbeddedViews: 16777216,\n    ComponentView: 33554432,\n    TypeContentQuery: 67108864,\n    TypeViewQuery: 134217728,\n    StaticQuery: 268435456,\n    DynamicQuery: 536870912,\n    CatQuery: 201326592,\n    // mutually exclusive values...\n    Types: 201347067,\n};\n/** @enum {number} */\nvar DepFlags = {\n    None: 0,\n    SkipSelf: 1,\n    Optional: 2,\n    Value: 8,\n};\n/** @enum {number} */\nvar ArgumentType = { Inline: 0, Dynamic: 1, };\n/** @enum {number} */\nvar BindingFlags = {\n    TypeElementAttribute: 1,\n    TypeElementClass: 2,\n    TypeElementStyle: 4,\n    TypeProperty: 8,\n    SyntheticProperty: 16,\n    SyntheticHostProperty: 32,\n    CatSyntheticProperty: 48,\n    // mutually exclusive values...\n    Types: 15,\n};\n/** @enum {number} */\nvar QueryBindingType = { First: 0, All: 1, };\n/** @enum {number} */\nvar QueryValueType = {\n    ElementRef: 0,\n    RenderElement: 1,\n    TemplateRef: 2,\n    ViewContainerRef: 3,\n    Provider: 4,\n};\n/** @enum {number} */\nvar ViewFlags = {\n    None: 0,\n    OnPush: 2,\n};\n/** @enum {number} */\nvar MissingTranslationStrategy = {\n    Error: 0,\n    Warning: 1,\n    Ignore: 2,\n};\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = \"Error\";\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = \"Warning\";\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = \"Ignore\";\n/**\n * @record\n */\nfunction MetadataFactory() { }\n/**\n * @template T\n * @param {?} name\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataFactory(name, props) {\n    var /** @type {?} */ factory = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ values = props ? props.apply(void 0, args) : {};\n        return __assign({ ngMetadataName: name }, values);\n    };\n    factory.isTypeOf = function (obj) { return obj && obj.ngMetadataName === name; };\n    factory.ngMetadataName = name;\n    return factory;\n}\n\n\nvar core = Object.freeze({\n\tInject: Inject,\n\tcreateInject: createInject,\n\tcreateInjectionToken: createInjectionToken,\n\tAttribute: Attribute,\n\tcreateAttribute: createAttribute,\n\tQuery: Query,\n\tcreateContentChildren: createContentChildren,\n\tcreateContentChild: createContentChild,\n\tcreateViewChildren: createViewChildren,\n\tcreateViewChild: createViewChild,\n\tDirective: Directive,\n\tcreateDirective: createDirective,\n\tComponent: Component,\n\tViewEncapsulation: ViewEncapsulation,\n\tChangeDetectionStrategy: ChangeDetectionStrategy,\n\tcreateComponent: createComponent,\n\tPipe: Pipe,\n\tcreatePipe: createPipe,\n\tInput: Input,\n\tcreateInput: createInput,\n\tOutput: Output,\n\tcreateOutput: createOutput,\n\tHostBinding: HostBinding,\n\tcreateHostBinding: createHostBinding,\n\tHostListener: HostListener,\n\tcreateHostListener: createHostListener,\n\tNgModule: NgModule,\n\tcreateNgModule: createNgModule,\n\tModuleWithProviders: ModuleWithProviders,\n\tSchemaMetadata: SchemaMetadata,\n\tCUSTOM_ELEMENTS_SCHEMA: CUSTOM_ELEMENTS_SCHEMA,\n\tNO_ERRORS_SCHEMA: NO_ERRORS_SCHEMA,\n\tcreateOptional: createOptional,\n\tcreateInjectable: createInjectable,\n\tcreateSelf: createSelf,\n\tcreateSkipSelf: createSkipSelf,\n\tcreateHost: createHost,\n\tType: Type,\n\tSecurityContext: SecurityContext,\n\tNodeFlags: NodeFlags,\n\tDepFlags: DepFlags,\n\tArgumentType: ArgumentType,\n\tBindingFlags: BindingFlags,\n\tQueryBindingType: QueryBindingType,\n\tQueryValueType: QueryValueType,\n\tViewFlags: ViewFlags,\n\tMissingTranslationStrategy: MissingTranslationStrategy,\n\tMetadataFactory: MetadataFactory\n});\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return m[1].toUpperCase();\n    });\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtColon(input, defaultValues) {\n    return _splitAt(input, ':', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtPeriod(input, defaultValues) {\n    return _splitAt(input, '.', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} character\n * @param {?} defaultValues\n * @return {?}\n */\nfunction _splitAt(input, character, defaultValues) {\n    var /** @type {?} */ characterIndex = input.indexOf(character);\n    if (characterIndex == -1)\n        return defaultValues;\n    return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n}\n/**\n * @param {?} value\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nfunction visitValue(value, visitor, context) {\n    if (Array.isArray(value)) {\n        return visitor.visitArray(/** @type {?} */ (value), context);\n    }\n    if (isStrictStringMap(value)) {\n        return visitor.visitStringMap(/** @type {?} */ (value), context);\n    }\n    if (value == null || typeof value == 'string' || typeof value == 'number' ||\n        typeof value == 'boolean') {\n        return visitor.visitPrimitive(value, context);\n    }\n    return visitor.visitOther(value, context);\n}\n/**\n * @param {?} val\n * @return {?}\n */\nfunction isDefined(val) {\n    return val !== null && val !== undefined;\n}\n/**\n * @template T\n * @param {?} val\n * @return {?}\n */\nfunction noUndefined(val) {\n    return val === undefined ? /** @type {?} */ ((null)) : val;\n}\n/**\n * @record\n */\n\nvar ValueTransformer = (function () {\n    function ValueTransformer() {\n    }\n    /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitArray = /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    function (arr, context) {\n        var _this = this;\n        return arr.map(function (value) { return visitValue(value, _this, context); });\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    function (map, context) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        Object.keys(map).forEach(function (key) { result[key] = visitValue(map[key], _this, context); });\n        return result;\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitPrimitive = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) { return value; };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) { return value; };\n    return ValueTransformer;\n}());\nvar SyncAsync = {\n    assertSync: function (value) {\n        if (isPromise(value)) {\n            throw new Error(\"Illegal state: value cannot be a promise\");\n        }\n        return value;\n    },\n    then: function (value, cb) { return isPromise(value) ? value.then(cb) : cb(value); },\n    all: function (syncAsyncValues) {\n        return syncAsyncValues.some(isPromise) ? Promise.all(syncAsyncValues) : /** @type {?} */ (syncAsyncValues);\n    }\n};\n/**\n * @param {?} msg\n * @param {?=} parseErrors\n * @return {?}\n */\nfunction syntaxError(msg, parseErrors) {\n    var /** @type {?} */ error = Error(msg);\n    (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR] = true;\n    if (parseErrors)\n        (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] = parseErrors;\n    return error;\n}\nvar ERROR_SYNTAX_ERROR = 'ngSyntaxError';\nvar ERROR_PARSE_ERRORS = 'ngParseErrors';\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isSyntaxError(error) {\n    return (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getParseErrors(error) {\n    return (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] || [];\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction escapeRegExp(s) {\n    return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\nvar STRING_MAP_PROTO = Object.getPrototypeOf({});\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isStrictStringMap(obj) {\n    return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction utf8Encode(str) {\n    var /** @type {?} */ encoded = '';\n    for (var /** @type {?} */ index = 0; index < str.length; index++) {\n        var /** @type {?} */ codePoint = str.charCodeAt(index);\n        // decode surrogate\n        // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        if (codePoint >= 0xd800 && codePoint <= 0xdbff && str.length > (index + 1)) {\n            var /** @type {?} */ low = str.charCodeAt(index + 1);\n            if (low >= 0xdc00 && low <= 0xdfff) {\n                index++;\n                codePoint = ((codePoint - 0xd800) << 10) + low - 0xdc00 + 0x10000;\n            }\n        }\n        if (codePoint <= 0x7f) {\n            encoded += String.fromCharCode(codePoint);\n        }\n        else if (codePoint <= 0x7ff) {\n            encoded += String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xc0, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0xffff) {\n            encoded += String.fromCharCode((codePoint >> 12) | 0xe0, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0x1fffff) {\n            encoded += String.fromCharCode(((codePoint >> 18) & 0x07) | 0xf0, ((codePoint >> 12) & 0x3f) | 0x80, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n    }\n    return encoded;\n}\n/**\n * @record\n */\n\n/**\n * @param {?} token\n * @return {?}\n */\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var /** @type {?} */ res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n * @param {?} type\n * @return {?}\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__')) {\n        return type();\n    }\n    else {\n        return type;\n    }\n}\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\nvar Version = (function () {\n    function Version(full) {\n        this.full = full;\n        var /** @type {?} */ splits = full.split('.');\n        this.major = splits[0];\n        this.minor = splits[1];\n        this.patch = splits.slice(2).join('.');\n    }\n    return Version;\n}());\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new Version('5.0.0-rc.0-c80e02b');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An Abstract Syntax Tree node representing part of a parsed Angular template.\n * @record\n */\n\n/**\n * A segment of text within the template.\n */\nvar TextAst = (function () {\n    function TextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TextAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return TextAst;\n}());\n/**\n * A bound expression within the text of a template.\n */\nvar BoundTextAst = (function () {\n    function BoundTextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundTextAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBoundText(this, context);\n    };\n    return BoundTextAst;\n}());\n/**\n * A plain attribute on an element.\n */\nvar AttrAst = (function () {\n    function AttrAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AttrAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitAttr(this, context); };\n    return AttrAst;\n}());\n/**\n * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n * `[\\@trigger]=\"stateExp\"`)\n */\nvar BoundElementPropertyAst = (function () {\n    function BoundElementPropertyAst(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n        this.isAnimation = this.type === PropertyBindingType.Animation;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundElementPropertyAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitElementProperty(this, context);\n    };\n    return BoundElementPropertyAst;\n}());\n/**\n * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n * `(\\@trigger.phase)=\"callback($event)\"`).\n */\nvar BoundEventAst = (function () {\n    function BoundEventAst(name, target, phase, handler, sourceSpan) {\n        this.name = name;\n        this.target = target;\n        this.phase = phase;\n        this.handler = handler;\n        this.sourceSpan = sourceSpan;\n        this.fullName = BoundEventAst.calcFullName(this.name, this.target, this.phase);\n        this.isAnimation = !!this.phase;\n    }\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    BoundEventAst.calcFullName = /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    function (name, target, phase) {\n        if (target) {\n            return target + \":\" + name;\n        }\n        else if (phase) {\n            return \"@\" + name + \".\" + phase;\n        }\n        else {\n            return name;\n        }\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundEventAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitEvent(this, context);\n    };\n    return BoundEventAst;\n}());\n/**\n * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n */\nvar ReferenceAst = (function () {\n    function ReferenceAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReferenceAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReference(this, context);\n    };\n    return ReferenceAst;\n}());\n/**\n * A variable declaration on a <ng-template> (e.g. `var-someName=\"someLocalName\"`).\n */\nvar VariableAst = (function () {\n    function VariableAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    VariableAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitVariable(this, context);\n    };\n    return VariableAst;\n}());\n/**\n * An element declaration in a template.\n */\nvar ElementAst = (function () {\n    function ElementAst(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan, endSourceSpan) {\n        this.name = name;\n        this.attrs = attrs;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.references = references;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ElementAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitElement(this, context);\n    };\n    return ElementAst;\n}());\n/**\n * A `<ng-template>` element included in an Angular template.\n */\nvar EmbeddedTemplateAst = (function () {\n    function EmbeddedTemplateAst(attrs, outputs, references, variables, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan) {\n        this.attrs = attrs;\n        this.outputs = outputs;\n        this.references = references;\n        this.variables = variables;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    EmbeddedTemplateAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitEmbeddedTemplate(this, context);\n    };\n    return EmbeddedTemplateAst;\n}());\n/**\n * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n */\nvar BoundDirectivePropertyAst = (function () {\n    function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\n        this.directiveName = directiveName;\n        this.templateName = templateName;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundDirectivePropertyAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDirectiveProperty(this, context);\n    };\n    return BoundDirectivePropertyAst;\n}());\n/**\n * A directive declared on an element.\n */\nvar DirectiveAst = (function () {\n    function DirectiveAst(directive, inputs, hostProperties, hostEvents, contentQueryStartId, sourceSpan) {\n        this.directive = directive;\n        this.inputs = inputs;\n        this.hostProperties = hostProperties;\n        this.hostEvents = hostEvents;\n        this.contentQueryStartId = contentQueryStartId;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DirectiveAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDirective(this, context);\n    };\n    return DirectiveAst;\n}());\n/**\n * A provider declared on an element\n */\nvar ProviderAst = (function () {\n    function ProviderAst(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan) {\n        this.token = token;\n        this.multiProvider = multiProvider;\n        this.eager = eager;\n        this.providers = providers;\n        this.providerType = providerType;\n        this.lifecycleHooks = lifecycleHooks;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ProviderAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        // No visit method in the visitor for now...\n        return null;\n    };\n    return ProviderAst;\n}());\n/** @enum {number} */\nvar ProviderAstType = {\n    PublicService: 0,\n    PrivateService: 1,\n    Component: 2,\n    Directive: 3,\n    Builtin: 4,\n};\nProviderAstType[ProviderAstType.PublicService] = \"PublicService\";\nProviderAstType[ProviderAstType.PrivateService] = \"PrivateService\";\nProviderAstType[ProviderAstType.Component] = \"Component\";\nProviderAstType[ProviderAstType.Directive] = \"Directive\";\nProviderAstType[ProviderAstType.Builtin] = \"Builtin\";\n/**\n * Position where content is to be projected (instance of `<ng-content>` in a template).\n */\nvar NgContentAst = (function () {\n    function NgContentAst(index, ngContentIndex, sourceSpan) {\n        this.index = index;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NgContentAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitNgContent(this, context);\n    };\n    return NgContentAst;\n}());\n/** @enum {number} */\nvar PropertyBindingType = {\n    /**\n       * A normal binding to a property (e.g. `[property]=\"expression\"`).\n       */\n    Property: 0,\n    /**\n       * A binding to an element attribute (e.g. `[attr.name]=\"expression\"`).\n       */\n    Attribute: 1,\n    /**\n       * A binding to a CSS class (e.g. `[class.name]=\"condition\"`).\n       */\n    Class: 2,\n    /**\n       * A binding to a style rule (e.g. `[style.rule]=\"expression\"`).\n       */\n    Style: 3,\n    /**\n       * A binding to an animation reference (e.g. `[animate.key]=\"expression\"`).\n       */\n    Animation: 4,\n};\nPropertyBindingType[PropertyBindingType.Property] = \"Property\";\nPropertyBindingType[PropertyBindingType.Attribute] = \"Attribute\";\nPropertyBindingType[PropertyBindingType.Class] = \"Class\";\nPropertyBindingType[PropertyBindingType.Style] = \"Style\";\nPropertyBindingType[PropertyBindingType.Animation] = \"Animation\";\n/**\n * @record\n */\n\n/**\n * A visitor for {\\@link TemplateAst} trees that will process each node.\n * @record\n */\n\n/**\n * A visitor that accepts each node but doesn't do anything. It is intended to be used\n * as the base class for a visitor that is only interested in a subset of the node types.\n */\nvar NullTemplateVisitor = (function () {\n    function NullTemplateVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return NullTemplateVisitor;\n}());\n/**\n * Base class that can be used to build a visitor that visits each node\n * in an template ast recursively.\n */\nvar RecursiveTemplateAstVisitor = (function (_super) {\n    __extends(RecursiveTemplateAstVisitor, _super);\n    function RecursiveTemplateAstVisitor() {\n        return _super.call(this) || this;\n    }\n    // Nodes with children\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.references);\n            visit(ast.variables);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.inputs);\n            visit(ast.outputs);\n            visit(ast.references);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.inputs);\n            visit(ast.hostProperties);\n            visit(ast.hostEvents);\n        });\n    };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitChildren = /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children && children.length)\n                results.push(templateVisitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveTemplateAstVisitor;\n}(NullTemplateVisitor));\n/**\n * Visit every node in a list of {\\@link TemplateAst}s with the given {\\@link TemplateAstVisitor}.\n * @param {?} visitor\n * @param {?} asts\n * @param {?=} context\n * @return {?}\n */\nfunction templateVisitAll(visitor, asts, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return /** @type {?} */ ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    asts.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar CompilerConfig = (function () {\n    function CompilerConfig(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.defaultEncapsulation, defaultEncapsulation = _c === void 0 ? ViewEncapsulation.Emulated : _c, _d = _b.useJit, useJit = _d === void 0 ? true : _d, _e = _b.jitDevMode, jitDevMode = _e === void 0 ? false : _e, missingTranslation = _b.missingTranslation, enableLegacyTemplate = _b.enableLegacyTemplate, preserveWhitespaces = _b.preserveWhitespaces, strictInjectionParameters = _b.strictInjectionParameters;\n        this.defaultEncapsulation = defaultEncapsulation;\n        this.useJit = !!useJit;\n        this.jitDevMode = !!jitDevMode;\n        this.missingTranslation = missingTranslation || null;\n        this.enableLegacyTemplate = enableLegacyTemplate === true;\n        this.preserveWhitespaces = preserveWhitespacesDefault(noUndefined(preserveWhitespaces));\n        this.strictInjectionParameters = strictInjectionParameters === true;\n    }\n    return CompilerConfig;\n}());\n/**\n * @param {?} preserveWhitespacesOption\n * @param {?=} defaultSetting\n * @return {?}\n */\nfunction preserveWhitespacesDefault(preserveWhitespacesOption, defaultSetting) {\n    if (defaultSetting === void 0) { defaultSetting = true; }\n    return preserveWhitespacesOption === null ? defaultSetting : preserveWhitespacesOption;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A token representing the a reference to a static type.\n *\n * This token is unique for a filePath and name and can be used as a hash table key.\n */\nvar StaticSymbol = (function () {\n    function StaticSymbol(filePath, name, members) {\n        this.filePath = filePath;\n        this.name = name;\n        this.members = members;\n    }\n    /**\n     * @return {?}\n     */\n    StaticSymbol.prototype.assertNoMembers = /**\n     * @return {?}\n     */\n    function () {\n        if (this.members.length) {\n            throw new Error(\"Illegal state: symbol without members expected, but got \" + JSON.stringify(this) + \".\");\n        }\n    };\n    return StaticSymbol;\n}());\n/**\n * A cache of static symbol used by the StaticReflector to return the same symbol for the\n * same symbol values.\n */\nvar StaticSymbolCache = (function () {\n    function StaticSymbolCache() {\n        this.cache = new Map();\n    }\n    /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticSymbolCache.prototype.get = /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        members = members || [];\n        var /** @type {?} */ memberSuffix = members.length ? \".\" + members.join('.') : '';\n        var /** @type {?} */ key = \"\\\"\" + declarationFile + \"\\\".\" + name + memberSuffix;\n        var /** @type {?} */ result = this.cache.get(key);\n        if (!result) {\n            result = new StaticSymbol(declarationFile, name, members);\n            this.cache.set(key, result);\n        }\n        return result;\n    };\n    return StaticSymbolCache;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// group 0: \"[prop] or (event) or @trigger\"\n// group 1: \"prop\" from \"[prop]\"\n// group 2: \"event\" from \"(event)\"\n// group 3: \"@trigger\" from \"@trigger\"\nvar HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\nvar CompileAnimationEntryMetadata = (function () {\n    function CompileAnimationEntryMetadata(name, definitions) {\n        if (name === void 0) { name = null; }\n        if (definitions === void 0) { definitions = null; }\n        this.name = name;\n        this.definitions = definitions;\n    }\n    return CompileAnimationEntryMetadata;\n}());\n/**\n * @abstract\n */\nvar CompileAnimationStateMetadata = (function () {\n    function CompileAnimationStateMetadata() {\n    }\n    return CompileAnimationStateMetadata;\n}());\nvar CompileAnimationStateDeclarationMetadata = (function (_super) {\n    __extends(CompileAnimationStateDeclarationMetadata, _super);\n    function CompileAnimationStateDeclarationMetadata(stateNameExpr, styles) {\n        var _this = _super.call(this) || this;\n        _this.stateNameExpr = stateNameExpr;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationStateDeclarationMetadata;\n}(CompileAnimationStateMetadata));\nvar CompileAnimationStateTransitionMetadata = (function (_super) {\n    __extends(CompileAnimationStateTransitionMetadata, _super);\n    function CompileAnimationStateTransitionMetadata(stateChangeExpr, steps) {\n        var _this = _super.call(this) || this;\n        _this.stateChangeExpr = stateChangeExpr;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationStateTransitionMetadata;\n}(CompileAnimationStateMetadata));\n/**\n * @abstract\n */\nvar CompileAnimationMetadata = (function () {\n    function CompileAnimationMetadata() {\n    }\n    return CompileAnimationMetadata;\n}());\nvar CompileAnimationKeyframesSequenceMetadata = (function (_super) {\n    __extends(CompileAnimationKeyframesSequenceMetadata, _super);\n    function CompileAnimationKeyframesSequenceMetadata(steps) {\n        if (steps === void 0) { steps = []; }\n        var _this = _super.call(this) || this;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationKeyframesSequenceMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationStyleMetadata = (function (_super) {\n    __extends(CompileAnimationStyleMetadata, _super);\n    function CompileAnimationStyleMetadata(offset, styles) {\n        if (styles === void 0) { styles = null; }\n        var _this = _super.call(this) || this;\n        _this.offset = offset;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationStyleMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationAnimateMetadata = (function (_super) {\n    __extends(CompileAnimationAnimateMetadata, _super);\n    function CompileAnimationAnimateMetadata(timings, styles) {\n        if (timings === void 0) { timings = 0; }\n        if (styles === void 0) { styles = null; }\n        var _this = _super.call(this) || this;\n        _this.timings = timings;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationAnimateMetadata;\n}(CompileAnimationMetadata));\n/**\n * @abstract\n */\nvar CompileAnimationWithStepsMetadata = (function (_super) {\n    __extends(CompileAnimationWithStepsMetadata, _super);\n    function CompileAnimationWithStepsMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        var _this = _super.call(this) || this;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationWithStepsMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationSequenceMetadata = (function (_super) {\n    __extends(CompileAnimationSequenceMetadata, _super);\n    function CompileAnimationSequenceMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        return _super.call(this, steps) || this;\n    }\n    return CompileAnimationSequenceMetadata;\n}(CompileAnimationWithStepsMetadata));\nvar CompileAnimationGroupMetadata = (function (_super) {\n    __extends(CompileAnimationGroupMetadata, _super);\n    function CompileAnimationGroupMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        return _super.call(this, steps) || this;\n    }\n    return CompileAnimationGroupMetadata;\n}(CompileAnimationWithStepsMetadata));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _sanitizeIdentifier(name) {\n    return name.replace(/\\W/g, '_');\n}\nvar _anonymousTypeIndex = 0;\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierName(compileIdentifier) {\n    if (!compileIdentifier || !compileIdentifier.reference) {\n        return null;\n    }\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.name;\n    }\n    if (ref['__anonymousType']) {\n        return ref['__anonymousType'];\n    }\n    var /** @type {?} */ identifier = stringify(ref);\n    if (identifier.indexOf('(') >= 0) {\n        // case: anonymous functions!\n        identifier = \"anonymous_\" + _anonymousTypeIndex++;\n        ref['__anonymousType'] = identifier;\n    }\n    else {\n        identifier = _sanitizeIdentifier(identifier);\n    }\n    return identifier;\n}\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierModuleUrl(compileIdentifier) {\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.filePath;\n    }\n    // Runtime type\n    return \"./\" + stringify(ref);\n}\n/**\n * @param {?} compType\n * @param {?} embeddedTemplateIndex\n * @return {?}\n */\nfunction viewClassName(compType, embeddedTemplateIndex) {\n    return \"View_\" + identifierName({ reference: compType }) + \"_\" + embeddedTemplateIndex;\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction rendererTypeName(compType) {\n    return \"RenderType_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction hostViewClassName(compType) {\n    return \"HostView_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction componentFactoryName(compType) {\n    return identifierName({ reference: compType }) + \"NgFactory\";\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/** @enum {number} */\nvar CompileSummaryKind = {\n    Pipe: 0,\n    Directive: 1,\n    NgModule: 2,\n    Injectable: 3,\n};\nCompileSummaryKind[CompileSummaryKind.Pipe] = \"Pipe\";\nCompileSummaryKind[CompileSummaryKind.Directive] = \"Directive\";\nCompileSummaryKind[CompileSummaryKind.NgModule] = \"NgModule\";\nCompileSummaryKind[CompileSummaryKind.Injectable] = \"Injectable\";\n/**\n * A CompileSummary is the data needed to use a directive / pipe / module\n * in other modules / components. However, this data is not enough to compile\n * the directive / module itself.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenName(token) {\n    return token.value != null ? _sanitizeIdentifier(token.value) : identifierName(token.identifier);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenReference(token) {\n    if (token.identifier != null) {\n        return token.identifier.reference;\n    }\n    else {\n        return token.value;\n    }\n}\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a type.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata about a stylesheet\n */\nvar CompileStylesheetMetadata = (function () {\n    function CompileStylesheetMetadata(_a) {\n        var _b = _a === void 0 ? {} : _a, moduleUrl = _b.moduleUrl, styles = _b.styles, styleUrls = _b.styleUrls;\n        this.moduleUrl = moduleUrl || null;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n    }\n    return CompileStylesheetMetadata;\n}());\n/**\n * Summary Metadata regarding compilation of a template.\n * @record\n */\n\n/**\n * Metadata regarding compilation of a template.\n */\nvar CompileTemplateMetadata = (function () {\n    function CompileTemplateMetadata(_a) {\n        var encapsulation = _a.encapsulation, template = _a.template, templateUrl = _a.templateUrl, htmlAst = _a.htmlAst, styles = _a.styles, styleUrls = _a.styleUrls, externalStylesheets = _a.externalStylesheets, animations = _a.animations, ngContentSelectors = _a.ngContentSelectors, interpolation = _a.interpolation, isInline = _a.isInline, preserveWhitespaces = _a.preserveWhitespaces;\n        this.encapsulation = encapsulation;\n        this.template = template;\n        this.templateUrl = templateUrl;\n        this.htmlAst = htmlAst;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n        this.externalStylesheets = _normalizeArray(externalStylesheets);\n        this.animations = animations ? flatten(animations) : [];\n        this.ngContentSelectors = ngContentSelectors || [];\n        if (interpolation && interpolation.length != 2) {\n            throw new Error(\"'interpolation' should have a start and an end symbol.\");\n        }\n        this.interpolation = interpolation;\n        this.isInline = isInline;\n        this.preserveWhitespaces = preserveWhitespaces;\n    }\n    /**\n     * @return {?}\n     */\n    CompileTemplateMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            animations: this.animations.map(function (anim) { return anim.name; }),\n            ngContentSelectors: this.ngContentSelectors,\n            encapsulation: this.encapsulation,\n        };\n    };\n    return CompileTemplateMetadata;\n}());\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a directive.\n */\nvar CompileDirectiveMetadata = (function () {\n    function CompileDirectiveMetadata(_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, hostListeners = _a.hostListeners, hostProperties = _a.hostProperties, hostAttributes = _a.hostAttributes, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        this.isHost = !!isHost;\n        this.type = type;\n        this.isComponent = isComponent;\n        this.selector = selector;\n        this.exportAs = exportAs;\n        this.changeDetection = changeDetection;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.hostListeners = hostListeners;\n        this.hostProperties = hostProperties;\n        this.hostAttributes = hostAttributes;\n        this.providers = _normalizeArray(providers);\n        this.viewProviders = _normalizeArray(viewProviders);\n        this.queries = _normalizeArray(queries);\n        this.viewQueries = _normalizeArray(viewQueries);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.template = template;\n        this.componentViewType = componentViewType;\n        this.rendererType = rendererType;\n        this.componentFactory = componentFactory;\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    CompileDirectiveMetadata.create = /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, host = _a.host, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        var /** @type {?} */ hostListeners = {};\n        var /** @type {?} */ hostProperties = {};\n        var /** @type {?} */ hostAttributes = {};\n        if (host != null) {\n            Object.keys(host).forEach(function (key) {\n                var /** @type {?} */ value = host[key];\n                var /** @type {?} */ matches = key.match(HOST_REG_EXP);\n                if (matches === null) {\n                    hostAttributes[key] = value;\n                }\n                else if (matches[1] != null) {\n                    hostProperties[matches[1]] = value;\n                }\n                else if (matches[2] != null) {\n                    hostListeners[matches[2]] = value;\n                }\n            });\n        }\n        var /** @type {?} */ inputsMap = {};\n        if (inputs != null) {\n            inputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                inputsMap[parts[0]] = parts[1];\n            });\n        }\n        var /** @type {?} */ outputsMap = {};\n        if (outputs != null) {\n            outputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                outputsMap[parts[0]] = parts[1];\n            });\n        }\n        return new CompileDirectiveMetadata({\n            isHost: isHost,\n            type: type,\n            isComponent: !!isComponent, selector: selector, exportAs: exportAs, changeDetection: changeDetection,\n            inputs: inputsMap,\n            outputs: outputsMap,\n            hostListeners: hostListeners,\n            hostProperties: hostProperties,\n            hostAttributes: hostAttributes,\n            providers: providers,\n            viewProviders: viewProviders,\n            queries: queries,\n            viewQueries: viewQueries,\n            entryComponents: entryComponents,\n            template: template,\n            componentViewType: componentViewType,\n            rendererType: rendererType,\n            componentFactory: componentFactory,\n        });\n    };\n    /**\n     * @return {?}\n     */\n    CompileDirectiveMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            summaryKind: CompileSummaryKind.Directive,\n            type: this.type,\n            isComponent: this.isComponent,\n            selector: this.selector,\n            exportAs: this.exportAs,\n            inputs: this.inputs,\n            outputs: this.outputs,\n            hostListeners: this.hostListeners,\n            hostProperties: this.hostProperties,\n            hostAttributes: this.hostAttributes,\n            providers: this.providers,\n            viewProviders: this.viewProviders,\n            queries: this.queries,\n            viewQueries: this.viewQueries,\n            entryComponents: this.entryComponents,\n            changeDetection: this.changeDetection,\n            template: this.template && this.template.toSummary(),\n            componentViewType: this.componentViewType,\n            rendererType: this.rendererType,\n            componentFactory: this.componentFactory\n        };\n    };\n    return CompileDirectiveMetadata;\n}());\n/**\n * @record\n */\n\nvar CompilePipeMetadata = (function () {\n    function CompilePipeMetadata(_a) {\n        var type = _a.type, name = _a.name, pure = _a.pure;\n        this.type = type;\n        this.name = name;\n        this.pure = !!pure;\n    }\n    /**\n     * @return {?}\n     */\n    CompilePipeMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            summaryKind: CompileSummaryKind.Pipe,\n            type: this.type,\n            name: this.name,\n            pure: this.pure\n        };\n    };\n    return CompilePipeMetadata;\n}());\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a module.\n */\nvar CompileNgModuleMetadata = (function () {\n    function CompileNgModuleMetadata(_a) {\n        var type = _a.type, providers = _a.providers, declaredDirectives = _a.declaredDirectives, exportedDirectives = _a.exportedDirectives, declaredPipes = _a.declaredPipes, exportedPipes = _a.exportedPipes, entryComponents = _a.entryComponents, bootstrapComponents = _a.bootstrapComponents, importedModules = _a.importedModules, exportedModules = _a.exportedModules, schemas = _a.schemas, transitiveModule = _a.transitiveModule, id = _a.id;\n        this.type = type || null;\n        this.declaredDirectives = _normalizeArray(declaredDirectives);\n        this.exportedDirectives = _normalizeArray(exportedDirectives);\n        this.declaredPipes = _normalizeArray(declaredPipes);\n        this.exportedPipes = _normalizeArray(exportedPipes);\n        this.providers = _normalizeArray(providers);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n        this.importedModules = _normalizeArray(importedModules);\n        this.exportedModules = _normalizeArray(exportedModules);\n        this.schemas = _normalizeArray(schemas);\n        this.id = id || null;\n        this.transitiveModule = transitiveModule || null;\n    }\n    /**\n     * @return {?}\n     */\n    CompileNgModuleMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ module = /** @type {?} */ ((this.transitiveModule));\n        return {\n            summaryKind: CompileSummaryKind.NgModule,\n            type: this.type,\n            entryComponents: module.entryComponents,\n            providers: module.providers,\n            modules: module.modules,\n            exportedDirectives: module.exportedDirectives,\n            exportedPipes: module.exportedPipes\n        };\n    };\n    return CompileNgModuleMetadata;\n}());\nvar TransitiveCompileNgModuleMetadata = (function () {\n    function TransitiveCompileNgModuleMetadata() {\n        this.directivesSet = new Set();\n        this.directives = [];\n        this.exportedDirectivesSet = new Set();\n        this.exportedDirectives = [];\n        this.pipesSet = new Set();\n        this.pipes = [];\n        this.exportedPipesSet = new Set();\n        this.exportedPipes = [];\n        this.modulesSet = new Set();\n        this.modules = [];\n        this.entryComponentsSet = new Set();\n        this.entryComponents = [];\n        this.providers = [];\n    }\n    /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addProvider = /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    function (provider, module) {\n        this.providers.push({ provider: provider, module: module });\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addDirective = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.directivesSet.has(id.reference)) {\n            this.directivesSet.add(id.reference);\n            this.directives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedDirective = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.exportedDirectivesSet.has(id.reference)) {\n            this.exportedDirectivesSet.add(id.reference);\n            this.exportedDirectives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addPipe = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.pipesSet.has(id.reference)) {\n            this.pipesSet.add(id.reference);\n            this.pipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedPipe = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.exportedPipesSet.has(id.reference)) {\n            this.exportedPipesSet.add(id.reference);\n            this.exportedPipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addModule = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.modulesSet.has(id.reference)) {\n            this.modulesSet.add(id.reference);\n            this.modules.push(id);\n        }\n    };\n    /**\n     * @param {?} ec\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addEntryComponent = /**\n     * @param {?} ec\n     * @return {?}\n     */\n    function (ec) {\n        if (!this.entryComponentsSet.has(ec.componentType)) {\n            this.entryComponentsSet.add(ec.componentType);\n            this.entryComponents.push(ec);\n        }\n    };\n    return TransitiveCompileNgModuleMetadata;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _normalizeArray(obj) {\n    return obj || [];\n}\nvar ProviderMeta = (function () {\n    function ProviderMeta(token, _a) {\n        var useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n        this.token = token;\n        this.useClass = useClass || null;\n        this.useValue = useValue;\n        this.useExisting = useExisting;\n        this.useFactory = useFactory || null;\n        this.dependencies = deps || null;\n        this.multi = !!multi;\n    }\n    return ProviderMeta;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n        return (/** @type {?} */ (flat)).concat(flatItem);\n    }, []);\n}\n/**\n * @param {?} url\n * @return {?}\n */\nfunction sourceUrl(url) {\n    // Note: We need 3 \"/\" so that ng shows up as a separate domain\n    // in the chrome dev tools.\n    return url.replace(/(\\w+:\\/\\/[\\w:-]+)?(\\/+)?/, 'ng:///');\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @param {?} templateMeta\n * @return {?}\n */\nfunction templateSourceUrl(ngModuleType, compMeta, templateMeta) {\n    var /** @type {?} */ url;\n    if (templateMeta.isInline) {\n        if (compMeta.type.reference instanceof StaticSymbol) {\n            // Note: a .ts file might contain multiple components with inline templates,\n            // so we need to give them unique urls, as these will be used for sourcemaps.\n            url = compMeta.type.reference.filePath + \".\" + compMeta.type.reference.name + \".html\";\n        }\n        else {\n            url = identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".html\";\n        }\n    }\n    else {\n        url = /** @type {?} */ ((templateMeta.templateUrl));\n    }\n    // always prepend ng:// to make angular resources easy to find and not clobber\n    // user resources.\n    return sourceUrl(url);\n}\n/**\n * @param {?} meta\n * @param {?} id\n * @return {?}\n */\nfunction sharedStylesheetJitUrl(meta, id) {\n    var /** @type {?} */ pathParts = /** @type {?} */ ((meta.moduleUrl)).split(/\\/\\\\/g);\n    var /** @type {?} */ baseName = pathParts[pathParts.length - 1];\n    return sourceUrl(\"css/\" + id + baseName + \".ngstyle.js\");\n}\n/**\n * @param {?} moduleMeta\n * @return {?}\n */\nfunction ngModuleJitUrl(moduleMeta) {\n    return sourceUrl(identifierName(moduleMeta.type) + \"/module.ngfactory.js\");\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @return {?}\n */\nfunction templateJitUrl(ngModuleType, compMeta) {\n    return sourceUrl(identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".ngfactory.js\");\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A path is an ordered set of elements. Typically a path is to  a\n * particular offset in a source file. The head of the list is the top\n * most node. The tail is the node that contains the offset directly.\n *\n * For example, the expresion `a + b + c` might have an ast that looks\n * like:\n *     +\n *    / \\\n *   a   +\n *      / \\\n *     b   c\n *\n * The path to the node at offset 9 would be `['+' at 1-10, '+' at 7-10,\n * 'c' at 9-10]` and the path the node at offset 1 would be\n * `['+' at 1-10, 'a' at 1-2]`.\n */\nvar AstPath = (function () {\n    function AstPath(path, position) {\n        if (position === void 0) { position = -1; }\n        this.path = path;\n        this.position = position;\n    }\n    Object.defineProperty(AstPath.prototype, \"empty\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return !this.path || !this.path.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"head\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"tail\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.parentOf = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        return node && this.path[this.path.indexOf(node) - 1];\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.childOf = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.path[this.path.indexOf(node) + 1]; };\n    /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    AstPath.prototype.first = /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    function (ctor) {\n        for (var /** @type {?} */ i = this.path.length - 1; i >= 0; i--) {\n            var /** @type {?} */ item = this.path[i];\n            if (item instanceof ctor)\n                return /** @type {?} */ (item);\n        }\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.push = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { this.path.push(node); };\n    /**\n     * @return {?}\n     */\n    AstPath.prototype.pop = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((this.path.pop())); };\n    return AstPath;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar Text = (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Expansion = (function () {\n    function Expansion(switchValue, type, cases, sourceSpan, switchValueSourceSpan) {\n        this.switchValue = switchValue;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n        this.switchValueSourceSpan = switchValueSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Expansion.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitExpansion(this, context); };\n    return Expansion;\n}());\nvar ExpansionCase = (function () {\n    function ExpansionCase(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n        this.value = value;\n        this.expression = expression;\n        this.sourceSpan = sourceSpan;\n        this.valueSourceSpan = valueSourceSpan;\n        this.expSourceSpan = expSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpansionCase.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitExpansionCase(this, context); };\n    return ExpansionCase;\n}());\nvar Attribute$1 = (function () {\n    function Attribute(name, value, sourceSpan, valueSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n        this.valueSpan = valueSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Attribute.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitAttribute(this, context); };\n    return Attribute;\n}());\nvar Element = (function () {\n    function Element(name, attrs, children, sourceSpan, startSourceSpan, endSourceSpan) {\n        if (startSourceSpan === void 0) { startSourceSpan = null; }\n        if (endSourceSpan === void 0) { endSourceSpan = null; }\n        this.name = name;\n        this.attrs = attrs;\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Element.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitElement(this, context); };\n    return Element;\n}());\nvar Comment = (function () {\n    function Comment(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Comment.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitComment(this, context); };\n    return Comment;\n}());\n/**\n * @record\n */\n\n/**\n * @param {?} visitor\n * @param {?} nodes\n * @param {?=} context\n * @return {?}\n */\nfunction visitAll(visitor, nodes, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return /** @type {?} */ ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    nodes.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\nvar RecursiveVisitor = (function () {\n    function RecursiveVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitAttribute = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitComment = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansion = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) { visit(ast.cases); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansionCase = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitChildren = /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children)\n                results.push(visitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveVisitor;\n}());\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction spanOf(ast) {\n    var /** @type {?} */ start = ast.sourceSpan.start.offset;\n    var /** @type {?} */ end = ast.sourceSpan.end.offset;\n    if (ast instanceof Element) {\n        if (ast.endSourceSpan) {\n            end = ast.endSourceSpan.end.offset;\n        }\n        else if (ast.children && ast.children.length) {\n            end = spanOf(ast.children[ast.children.length - 1]).end;\n        }\n    }\n    return { start: start, end: end };\n}\n/**\n * @param {?} nodes\n * @param {?} position\n * @return {?}\n */\nfunction findNode(nodes, position) {\n    var /** @type {?} */ path = [];\n    var /** @type {?} */ visitor = new (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        class_1.prototype.visit = /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        function (ast, context) {\n            var /** @type {?} */ span = spanOf(ast);\n            if (span.start <= position && position < span.end) {\n                path.push(ast);\n            }\n            else {\n                // Returning a value here will result in the children being skipped.\n                return true;\n            }\n        };\n        return class_1;\n    }(RecursiveVisitor));\n    visitAll(visitor, nodes);\n    return new AstPath(path, position);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertArrayOfStrings(identifier, value) {\n    if (value == null) {\n        return;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n    }\n    for (var /** @type {?} */ i = 0; i < value.length; i += 1) {\n        if (typeof value[i] !== 'string') {\n            throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n        }\n    }\n}\nvar INTERPOLATION_BLACKLIST_REGEXPS = [\n    /^\\s*$/,\n    /[<>]/,\n    /^[{}]$/,\n    /&(#|[a-z])/i,\n    /^\\/\\//,\n];\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertInterpolationSymbols(identifier, value) {\n    if (value != null && !(Array.isArray(value) && value.length == 2)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array, [start, end].\");\n    }\n    else if (value != null) {\n        var /** @type {?} */ start_1 = /** @type {?} */ (value[0]);\n        var /** @type {?} */ end_1 = /** @type {?} */ (value[1]);\n        // black list checking\n        INTERPOLATION_BLACKLIST_REGEXPS.forEach(function (regexp) {\n            if (regexp.test(start_1) || regexp.test(end_1)) {\n                throw new Error(\"['\" + start_1 + \"', '\" + end_1 + \"'] contains unusable interpolation symbol.\");\n            }\n        });\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar InterpolationConfig = (function () {\n    function InterpolationConfig(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    /**\n     * @param {?} markers\n     * @return {?}\n     */\n    InterpolationConfig.fromArray = /**\n     * @param {?} markers\n     * @return {?}\n     */\n    function (markers) {\n        if (!markers) {\n            return DEFAULT_INTERPOLATION_CONFIG;\n        }\n        assertInterpolationSymbols('interpolation', markers);\n        return new InterpolationConfig(markers[0], markers[1]);\n    };\n    return InterpolationConfig;\n}());\nvar DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar StyleWithImports = (function () {\n    function StyleWithImports(style, styleUrls) {\n        this.style = style;\n        this.styleUrls = styleUrls;\n    }\n    return StyleWithImports;\n}());\n/**\n * @param {?} url\n * @return {?}\n */\nfunction isStyleUrlResolvable(url) {\n    if (url == null || url.length === 0 || url[0] == '/')\n        return false;\n    var /** @type {?} */ schemeMatch = url.match(URL_WITH_SCHEMA_REGEXP);\n    return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n}\n/**\n * Rewrites stylesheets by resolving and removing the \\@import urls that\n * are either relative or don't have a `package:` scheme\n * @param {?} resolver\n * @param {?} baseUrl\n * @param {?} cssText\n * @return {?}\n */\nfunction extractStyleUrls(resolver, baseUrl, cssText) {\n    var /** @type {?} */ foundUrls = [];\n    var /** @type {?} */ modifiedCssText = cssText.replace(CSS_STRIPPABLE_COMMENT_REGEXP, '')\n        .replace(CSS_IMPORT_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ url = m[1] || m[2];\n        if (!isStyleUrlResolvable(url)) {\n            // Do not attempt to resolve non-package absolute URLs with URI\n            // scheme\n            return m[0];\n        }\n        foundUrls.push(resolver.resolve(baseUrl, url));\n        return '';\n    });\n    return new StyleWithImports(modifiedCssText, foundUrls);\n}\nvar CSS_IMPORT_REGEXP = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\nvar CSS_STRIPPABLE_COMMENT_REGEXP = /\\/\\*(?!#\\s*(?:sourceURL|sourceMappingURL)=)[\\s\\S]+?\\*\\//g;\nvar URL_WITH_SCHEMA_REGEXP = /^([^:/?#]+):/;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar TagContentType = {\n    RAW_TEXT: 0,\n    ESCAPABLE_RAW_TEXT: 1,\n    PARSABLE_DATA: 2,\n};\nTagContentType[TagContentType.RAW_TEXT] = \"RAW_TEXT\";\nTagContentType[TagContentType.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTagContentType[TagContentType.PARSABLE_DATA] = \"PARSABLE_DATA\";\n/**\n * @record\n */\n\n/**\n * @param {?} elementName\n * @return {?}\n */\nfunction splitNsName(elementName) {\n    if (elementName[0] != ':') {\n        return [null, elementName];\n    }\n    var /** @type {?} */ colonIndex = elementName.indexOf(':', 1);\n    if (colonIndex == -1) {\n        throw new Error(\"Unsupported format \\\"\" + elementName + \"\\\" expecting \\\":namespace:name\\\"\");\n    }\n    return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContainer(tagName) {\n    return splitNsName(tagName)[1] === 'ng-container';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContent(tagName) {\n    return splitNsName(tagName)[1] === 'ng-content';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgTemplate(tagName) {\n    return splitNsName(tagName)[1] === 'ng-template';\n}\n/**\n * @param {?} fullName\n * @return {?}\n */\nfunction getNsPrefix(fullName) {\n    return fullName === null ? null : splitNsName(fullName)[0];\n}\n/**\n * @param {?} prefix\n * @param {?} localName\n * @return {?}\n */\nfunction mergeNsAndName(prefix, localName) {\n    return prefix ? \":\" + prefix + \":\" + localName : localName;\n}\n// see http://www.w3.org/TR/html51/syntax.html#named-character-references\n// see https://html.spec.whatwg.org/multipage/entities.json\n// This list is not exhaustive to keep the compiler footprint low.\n// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not\n// exist.\nvar NAMED_ENTITIES = {\n    'Aacute': '\\u00C1',\n    'aacute': '\\u00E1',\n    'Acirc': '\\u00C2',\n    'acirc': '\\u00E2',\n    'acute': '\\u00B4',\n    'AElig': '\\u00C6',\n    'aelig': '\\u00E6',\n    'Agrave': '\\u00C0',\n    'agrave': '\\u00E0',\n    'alefsym': '\\u2135',\n    'Alpha': '\\u0391',\n    'alpha': '\\u03B1',\n    'amp': '&',\n    'and': '\\u2227',\n    'ang': '\\u2220',\n    'apos': '\\u0027',\n    'Aring': '\\u00C5',\n    'aring': '\\u00E5',\n    'asymp': '\\u2248',\n    'Atilde': '\\u00C3',\n    'atilde': '\\u00E3',\n    'Auml': '\\u00C4',\n    'auml': '\\u00E4',\n    'bdquo': '\\u201E',\n    'Beta': '\\u0392',\n    'beta': '\\u03B2',\n    'brvbar': '\\u00A6',\n    'bull': '\\u2022',\n    'cap': '\\u2229',\n    'Ccedil': '\\u00C7',\n    'ccedil': '\\u00E7',\n    'cedil': '\\u00B8',\n    'cent': '\\u00A2',\n    'Chi': '\\u03A7',\n    'chi': '\\u03C7',\n    'circ': '\\u02C6',\n    'clubs': '\\u2663',\n    'cong': '\\u2245',\n    'copy': '\\u00A9',\n    'crarr': '\\u21B5',\n    'cup': '\\u222A',\n    'curren': '\\u00A4',\n    'dagger': '\\u2020',\n    'Dagger': '\\u2021',\n    'darr': '\\u2193',\n    'dArr': '\\u21D3',\n    'deg': '\\u00B0',\n    'Delta': '\\u0394',\n    'delta': '\\u03B4',\n    'diams': '\\u2666',\n    'divide': '\\u00F7',\n    'Eacute': '\\u00C9',\n    'eacute': '\\u00E9',\n    'Ecirc': '\\u00CA',\n    'ecirc': '\\u00EA',\n    'Egrave': '\\u00C8',\n    'egrave': '\\u00E8',\n    'empty': '\\u2205',\n    'emsp': '\\u2003',\n    'ensp': '\\u2002',\n    'Epsilon': '\\u0395',\n    'epsilon': '\\u03B5',\n    'equiv': '\\u2261',\n    'Eta': '\\u0397',\n    'eta': '\\u03B7',\n    'ETH': '\\u00D0',\n    'eth': '\\u00F0',\n    'Euml': '\\u00CB',\n    'euml': '\\u00EB',\n    'euro': '\\u20AC',\n    'exist': '\\u2203',\n    'fnof': '\\u0192',\n    'forall': '\\u2200',\n    'frac12': '\\u00BD',\n    'frac14': '\\u00BC',\n    'frac34': '\\u00BE',\n    'frasl': '\\u2044',\n    'Gamma': '\\u0393',\n    'gamma': '\\u03B3',\n    'ge': '\\u2265',\n    'gt': '>',\n    'harr': '\\u2194',\n    'hArr': '\\u21D4',\n    'hearts': '\\u2665',\n    'hellip': '\\u2026',\n    'Iacute': '\\u00CD',\n    'iacute': '\\u00ED',\n    'Icirc': '\\u00CE',\n    'icirc': '\\u00EE',\n    'iexcl': '\\u00A1',\n    'Igrave': '\\u00CC',\n    'igrave': '\\u00EC',\n    'image': '\\u2111',\n    'infin': '\\u221E',\n    'int': '\\u222B',\n    'Iota': '\\u0399',\n    'iota': '\\u03B9',\n    'iquest': '\\u00BF',\n    'isin': '\\u2208',\n    'Iuml': '\\u00CF',\n    'iuml': '\\u00EF',\n    'Kappa': '\\u039A',\n    'kappa': '\\u03BA',\n    'Lambda': '\\u039B',\n    'lambda': '\\u03BB',\n    'lang': '\\u27E8',\n    'laquo': '\\u00AB',\n    'larr': '\\u2190',\n    'lArr': '\\u21D0',\n    'lceil': '\\u2308',\n    'ldquo': '\\u201C',\n    'le': '\\u2264',\n    'lfloor': '\\u230A',\n    'lowast': '\\u2217',\n    'loz': '\\u25CA',\n    'lrm': '\\u200E',\n    'lsaquo': '\\u2039',\n    'lsquo': '\\u2018',\n    'lt': '<',\n    'macr': '\\u00AF',\n    'mdash': '\\u2014',\n    'micro': '\\u00B5',\n    'middot': '\\u00B7',\n    'minus': '\\u2212',\n    'Mu': '\\u039C',\n    'mu': '\\u03BC',\n    'nabla': '\\u2207',\n    'nbsp': '\\u00A0',\n    'ndash': '\\u2013',\n    'ne': '\\u2260',\n    'ni': '\\u220B',\n    'not': '\\u00AC',\n    'notin': '\\u2209',\n    'nsub': '\\u2284',\n    'Ntilde': '\\u00D1',\n    'ntilde': '\\u00F1',\n    'Nu': '\\u039D',\n    'nu': '\\u03BD',\n    'Oacute': '\\u00D3',\n    'oacute': '\\u00F3',\n    'Ocirc': '\\u00D4',\n    'ocirc': '\\u00F4',\n    'OElig': '\\u0152',\n    'oelig': '\\u0153',\n    'Ograve': '\\u00D2',\n    'ograve': '\\u00F2',\n    'oline': '\\u203E',\n    'Omega': '\\u03A9',\n    'omega': '\\u03C9',\n    'Omicron': '\\u039F',\n    'omicron': '\\u03BF',\n    'oplus': '\\u2295',\n    'or': '\\u2228',\n    'ordf': '\\u00AA',\n    'ordm': '\\u00BA',\n    'Oslash': '\\u00D8',\n    'oslash': '\\u00F8',\n    'Otilde': '\\u00D5',\n    'otilde': '\\u00F5',\n    'otimes': '\\u2297',\n    'Ouml': '\\u00D6',\n    'ouml': '\\u00F6',\n    'para': '\\u00B6',\n    'permil': '\\u2030',\n    'perp': '\\u22A5',\n    'Phi': '\\u03A6',\n    'phi': '\\u03C6',\n    'Pi': '\\u03A0',\n    'pi': '\\u03C0',\n    'piv': '\\u03D6',\n    'plusmn': '\\u00B1',\n    'pound': '\\u00A3',\n    'prime': '\\u2032',\n    'Prime': '\\u2033',\n    'prod': '\\u220F',\n    'prop': '\\u221D',\n    'Psi': '\\u03A8',\n    'psi': '\\u03C8',\n    'quot': '\\u0022',\n    'radic': '\\u221A',\n    'rang': '\\u27E9',\n    'raquo': '\\u00BB',\n    'rarr': '\\u2192',\n    'rArr': '\\u21D2',\n    'rceil': '\\u2309',\n    'rdquo': '\\u201D',\n    'real': '\\u211C',\n    'reg': '\\u00AE',\n    'rfloor': '\\u230B',\n    'Rho': '\\u03A1',\n    'rho': '\\u03C1',\n    'rlm': '\\u200F',\n    'rsaquo': '\\u203A',\n    'rsquo': '\\u2019',\n    'sbquo': '\\u201A',\n    'Scaron': '\\u0160',\n    'scaron': '\\u0161',\n    'sdot': '\\u22C5',\n    'sect': '\\u00A7',\n    'shy': '\\u00AD',\n    'Sigma': '\\u03A3',\n    'sigma': '\\u03C3',\n    'sigmaf': '\\u03C2',\n    'sim': '\\u223C',\n    'spades': '\\u2660',\n    'sub': '\\u2282',\n    'sube': '\\u2286',\n    'sum': '\\u2211',\n    'sup': '\\u2283',\n    'sup1': '\\u00B9',\n    'sup2': '\\u00B2',\n    'sup3': '\\u00B3',\n    'supe': '\\u2287',\n    'szlig': '\\u00DF',\n    'Tau': '\\u03A4',\n    'tau': '\\u03C4',\n    'there4': '\\u2234',\n    'Theta': '\\u0398',\n    'theta': '\\u03B8',\n    'thetasym': '\\u03D1',\n    'thinsp': '\\u2009',\n    'THORN': '\\u00DE',\n    'thorn': '\\u00FE',\n    'tilde': '\\u02DC',\n    'times': '\\u00D7',\n    'trade': '\\u2122',\n    'Uacute': '\\u00DA',\n    'uacute': '\\u00FA',\n    'uarr': '\\u2191',\n    'uArr': '\\u21D1',\n    'Ucirc': '\\u00DB',\n    'ucirc': '\\u00FB',\n    'Ugrave': '\\u00D9',\n    'ugrave': '\\u00F9',\n    'uml': '\\u00A8',\n    'upsih': '\\u03D2',\n    'Upsilon': '\\u03A5',\n    'upsilon': '\\u03C5',\n    'Uuml': '\\u00DC',\n    'uuml': '\\u00FC',\n    'weierp': '\\u2118',\n    'Xi': '\\u039E',\n    'xi': '\\u03BE',\n    'Yacute': '\\u00DD',\n    'yacute': '\\u00FD',\n    'yen': '\\u00A5',\n    'yuml': '\\u00FF',\n    'Yuml': '\\u0178',\n    'Zeta': '\\u0396',\n    'zeta': '\\u03B6',\n    'zwj': '\\u200D',\n    'zwnj': '\\u200C',\n};\n// The &ngsp; pseudo-entity is denoting a space. see:\n// https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart\nvar NGSP_UNICODE = '\\uE500';\nNAMED_ENTITIES['ngsp'] = NGSP_UNICODE;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NG_CONTENT_SELECT_ATTR = 'select';\nvar LINK_ELEMENT = 'link';\nvar LINK_STYLE_REL_ATTR = 'rel';\nvar LINK_STYLE_HREF_ATTR = 'href';\nvar LINK_STYLE_REL_VALUE = 'stylesheet';\nvar STYLE_ELEMENT = 'style';\nvar SCRIPT_ELEMENT = 'script';\nvar NG_NON_BINDABLE_ATTR = 'ngNonBindable';\nvar NG_PROJECT_AS = 'ngProjectAs';\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction preparseElement(ast) {\n    var /** @type {?} */ selectAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ hrefAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ relAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ nonBindable = false;\n    var /** @type {?} */ projectAs = /** @type {?} */ ((null));\n    ast.attrs.forEach(function (attr) {\n        var /** @type {?} */ lcAttrName = attr.name.toLowerCase();\n        if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n            selectAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n            hrefAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n            relAttr = attr.value;\n        }\n        else if (attr.name == NG_NON_BINDABLE_ATTR) {\n            nonBindable = true;\n        }\n        else if (attr.name == NG_PROJECT_AS) {\n            if (attr.value.length > 0) {\n                projectAs = attr.value;\n            }\n        }\n    });\n    selectAttr = normalizeNgContentSelect(selectAttr);\n    var /** @type {?} */ nodeName = ast.name.toLowerCase();\n    var /** @type {?} */ type = PreparsedElementType.OTHER;\n    if (isNgContent(nodeName)) {\n        type = PreparsedElementType.NG_CONTENT;\n    }\n    else if (nodeName == STYLE_ELEMENT) {\n        type = PreparsedElementType.STYLE;\n    }\n    else if (nodeName == SCRIPT_ELEMENT) {\n        type = PreparsedElementType.SCRIPT;\n    }\n    else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n        type = PreparsedElementType.STYLESHEET;\n    }\n    return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n}\n/** @enum {number} */\nvar PreparsedElementType = {\n    NG_CONTENT: 0,\n    STYLE: 1,\n    STYLESHEET: 2,\n    SCRIPT: 3,\n    OTHER: 4,\n};\nPreparsedElementType[PreparsedElementType.NG_CONTENT] = \"NG_CONTENT\";\nPreparsedElementType[PreparsedElementType.STYLE] = \"STYLE\";\nPreparsedElementType[PreparsedElementType.STYLESHEET] = \"STYLESHEET\";\nPreparsedElementType[PreparsedElementType.SCRIPT] = \"SCRIPT\";\nPreparsedElementType[PreparsedElementType.OTHER] = \"OTHER\";\nvar PreparsedElement = (function () {\n    function PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n        this.type = type;\n        this.selectAttr = selectAttr;\n        this.hrefAttr = hrefAttr;\n        this.nonBindable = nonBindable;\n        this.projectAs = projectAs;\n    }\n    return PreparsedElement;\n}());\n/**\n * @param {?} selectAttr\n * @return {?}\n */\nfunction normalizeNgContentSelect(selectAttr) {\n    if (selectAttr === null || selectAttr.length === 0) {\n        return '*';\n    }\n    return selectAttr;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar DirectiveNormalizer = (function () {\n    function DirectiveNormalizer(_resourceLoader, _urlResolver, _htmlParser, _config) {\n        this._resourceLoader = _resourceLoader;\n        this._urlResolver = _urlResolver;\n        this._htmlParser = _htmlParser;\n        this._config = _config;\n        this._resourceLoaderCache = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () { this._resourceLoaderCache.clear(); };\n    /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCacheFor = /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    function (normalizedDirective) {\n        var _this = this;\n        if (!normalizedDirective.isComponent) {\n            return;\n        }\n        var /** @type {?} */ template = /** @type {?} */ ((normalizedDirective.template));\n        this._resourceLoaderCache.delete(/** @type {?} */ ((template.templateUrl)));\n        template.externalStylesheets.forEach(function (stylesheet) { _this._resourceLoaderCache.delete(/** @type {?} */ ((stylesheet.moduleUrl))); });\n    };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._fetch = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) {\n        var /** @type {?} */ result = this._resourceLoaderCache.get(url);\n        if (!result) {\n            result = this._resourceLoader.get(url);\n            this._resourceLoaderCache.set(url, result);\n        }\n        return result;\n    };\n    /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplate = /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    function (prenormData) {\n        var _this = this;\n        if (isDefined(prenormData.template)) {\n            if (isDefined(prenormData.templateUrl)) {\n                throw syntaxError(\"'\" + stringify(prenormData.componentType) + \"' component cannot define both template and templateUrl\");\n            }\n            if (typeof prenormData.template !== 'string') {\n                throw syntaxError(\"The template specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else if (isDefined(prenormData.templateUrl)) {\n            if (typeof prenormData.templateUrl !== 'string') {\n                throw syntaxError(\"The templateUrl specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else {\n            throw syntaxError(\"No template specified for component \" + stringify(prenormData.componentType));\n        }\n        if (isDefined(prenormData.preserveWhitespaces) &&\n            typeof prenormData.preserveWhitespaces !== 'boolean') {\n            throw syntaxError(\"The preserveWhitespaces option for component \" + stringify(prenormData.componentType) + \" must be a boolean\");\n        }\n        return SyncAsync.then(this._preParseTemplate(prenormData), function (preparsedTemplate) { return _this._normalizeTemplateMetadata(prenormData, preparsedTemplate); });\n    };\n    /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._preParseTemplate = /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    function (prenomData) {\n        var _this = this;\n        var /** @type {?} */ template;\n        var /** @type {?} */ templateUrl;\n        if (prenomData.template != null) {\n            template = prenomData.template;\n            templateUrl = prenomData.moduleUrl;\n        }\n        else {\n            templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, /** @type {?} */ ((prenomData.templateUrl)));\n            template = this._fetch(templateUrl);\n        }\n        return SyncAsync.then(template, function (template) { return _this._preparseLoadedTemplate(prenomData, template, templateUrl); });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._preparseLoadedTemplate = /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    function (prenormData, template, templateAbsUrl) {\n        var /** @type {?} */ isInline = !!prenormData.template;\n        var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((prenormData.interpolation)));\n        var /** @type {?} */ rootNodesAndErrors = this._htmlParser.parse(template, templateSourceUrl({ reference: prenormData.ngModuleType }, { type: { reference: prenormData.componentType } }, { isInline: isInline, templateUrl: templateAbsUrl }), true, interpolationConfig);\n        if (rootNodesAndErrors.errors.length > 0) {\n            var /** @type {?} */ errorString = rootNodesAndErrors.errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString);\n        }\n        var /** @type {?} */ templateMetadataStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: prenormData.styles, moduleUrl: prenormData.moduleUrl }));\n        var /** @type {?} */ visitor = new TemplatePreparseVisitor();\n        visitAll(visitor, rootNodesAndErrors.rootNodes);\n        var /** @type {?} */ templateStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n        var /** @type {?} */ styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n        var /** @type {?} */ inlineStyleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n        var /** @type {?} */ styleUrls = this\n            ._normalizeStylesheet(new CompileStylesheetMetadata({ styleUrls: prenormData.styleUrls, moduleUrl: prenormData.moduleUrl }))\n            .styleUrls;\n        return {\n            template: template,\n            templateUrl: templateAbsUrl, isInline: isInline,\n            htmlAst: rootNodesAndErrors, styles: styles, inlineStyleUrls: inlineStyleUrls, styleUrls: styleUrls,\n            ngContentSelectors: visitor.ngContentSelectors,\n        };\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeTemplateMetadata = /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @return {?}\n     */\n    function (prenormData, preparsedTemplate) {\n        var _this = this;\n        return SyncAsync.then(this._loadMissingExternalStylesheets(preparsedTemplate.styleUrls.concat(preparsedTemplate.inlineStyleUrls)), function (externalStylesheets) {\n            return _this._normalizeLoadedTemplateMetadata(prenormData, preparsedTemplate, externalStylesheets);\n        });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @param {?} stylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeLoadedTemplateMetadata = /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @param {?} stylesheets\n     * @return {?}\n     */\n    function (prenormData, preparsedTemplate, stylesheets) {\n        var _this = this;\n        // Algorithm:\n        // - produce exactly 1 entry per original styleUrl in\n        // CompileTemplateMetadata.externalStylesheets whith all styles inlined\n        // - inline all styles that are referenced by the template into CompileTemplateMetadata.styles.\n        // Reason: be able to determine how many stylesheets there are even without loading\n        // the template nor the stylesheets, so we can create a stub for TypeScript always synchronously\n        // (as resouce loading may be async)\n        var /** @type {?} */ styles = preparsedTemplate.styles.slice();\n        this._inlineStyles(preparsedTemplate.inlineStyleUrls, stylesheets, styles);\n        var /** @type {?} */ styleUrls = preparsedTemplate.styleUrls;\n        var /** @type {?} */ externalStylesheets = styleUrls.map(function (styleUrl) {\n            var /** @type {?} */ stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            var /** @type {?} */ styles = stylesheet.styles.slice();\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, styles);\n            return new CompileStylesheetMetadata({ moduleUrl: styleUrl, styles: styles });\n        });\n        var /** @type {?} */ encapsulation = prenormData.encapsulation;\n        if (encapsulation == null) {\n            encapsulation = this._config.defaultEncapsulation;\n        }\n        if (encapsulation === ViewEncapsulation.Emulated && styles.length === 0 &&\n            styleUrls.length === 0) {\n            encapsulation = ViewEncapsulation.None;\n        }\n        return new CompileTemplateMetadata({\n            encapsulation: encapsulation,\n            template: preparsedTemplate.template,\n            templateUrl: preparsedTemplate.templateUrl,\n            htmlAst: preparsedTemplate.htmlAst, styles: styles, styleUrls: styleUrls,\n            ngContentSelectors: preparsedTemplate.ngContentSelectors,\n            animations: prenormData.animations,\n            interpolation: prenormData.interpolation,\n            isInline: preparsedTemplate.isInline, externalStylesheets: externalStylesheets,\n            preserveWhitespaces: preserveWhitespacesDefault(prenormData.preserveWhitespaces, this._config.preserveWhitespaces),\n        });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?} stylesheets\n     * @param {?} targetStyles\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._inlineStyles = /**\n     * @param {?} styleUrls\n     * @param {?} stylesheets\n     * @param {?} targetStyles\n     * @return {?}\n     */\n    function (styleUrls, stylesheets, targetStyles) {\n        var _this = this;\n        styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            stylesheet.styles.forEach(function (style) { return targetStyles.push(style); });\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, targetStyles);\n        });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._loadMissingExternalStylesheets = /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    function (styleUrls, loadedStylesheets) {\n        var _this = this;\n        if (loadedStylesheets === void 0) { loadedStylesheets = new Map(); }\n        return SyncAsync.then(SyncAsync.all(styleUrls.filter(function (styleUrl) { return !loadedStylesheets.has(styleUrl); })\n            .map(function (styleUrl) {\n            return SyncAsync.then(_this._fetch(styleUrl), function (loadedStyle) {\n                var /** @type {?} */ stylesheet = _this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n                loadedStylesheets.set(styleUrl, stylesheet);\n                return _this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n            });\n        })), function (_) { return loadedStylesheets; });\n    };\n    /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeStylesheet = /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    function (stylesheet) {\n        var _this = this;\n        var /** @type {?} */ moduleUrl = /** @type {?} */ ((stylesheet.moduleUrl));\n        var /** @type {?} */ allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n            .map(function (url) { return _this._urlResolver.resolve(moduleUrl, url); });\n        var /** @type {?} */ allStyles = stylesheet.styles.map(function (style) {\n            var /** @type {?} */ styleWithImports = extractStyleUrls(_this._urlResolver, moduleUrl, style);\n            allStyleUrls.push.apply(allStyleUrls, styleWithImports.styleUrls);\n            return styleWithImports.style;\n        });\n        return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: moduleUrl });\n    };\n    return DirectiveNormalizer;\n}());\nvar TemplatePreparseVisitor = (function () {\n    function TemplatePreparseVisitor() {\n        this.ngContentSelectors = [];\n        this.styles = [];\n        this.styleUrls = [];\n        this.ngNonBindableStackCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        switch (preparsedElement.type) {\n            case PreparsedElementType.NG_CONTENT:\n                if (this.ngNonBindableStackCount === 0) {\n                    this.ngContentSelectors.push(preparsedElement.selectAttr);\n                }\n                break;\n            case PreparsedElementType.STYLE:\n                var /** @type {?} */ textContent_1 = '';\n                ast.children.forEach(function (child) {\n                    if (child instanceof Text) {\n                        textContent_1 += child.value;\n                    }\n                });\n                this.styles.push(textContent_1);\n                break;\n            case PreparsedElementType.STYLESHEET:\n                this.styleUrls.push(preparsedElement.hrefAttr);\n                break;\n            default:\n                break;\n        }\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount++;\n        }\n        visitAll(this, ast.children);\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount--;\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansion = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { visitAll(this, ast.cases); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansionCase = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        visitAll(this, ast.expression);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitComment = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitAttribute = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    return TemplatePreparseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar QUERY_METADATA_IDENTIFIERS = [\n    createViewChild,\n    createViewChildren,\n    createContentChild,\n    createContentChildren,\n];\nvar DirectiveResolver = (function () {\n    function DirectiveResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    DirectiveResolver.prototype.isDirective = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    DirectiveResolver.prototype.resolve = /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        if (typeMetadata) {\n            var /** @type {?} */ metadata = findLast(typeMetadata, isDirectiveMetadata);\n            if (metadata) {\n                var /** @type {?} */ propertyMetadata = this._reflector.propMetadata(type);\n                return this._mergeWithPropertyMetadata(metadata, propertyMetadata, type);\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Directive annotation found on \" + stringify(type));\n        }\n        return null;\n    };\n    /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._mergeWithPropertyMetadata = /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (dm, propertyMetadata, directiveType) {\n        var /** @type {?} */ inputs = [];\n        var /** @type {?} */ outputs = [];\n        var /** @type {?} */ host = {};\n        var /** @type {?} */ queries = {};\n        Object.keys(propertyMetadata).forEach(function (propName) {\n            var /** @type {?} */ input = findLast(propertyMetadata[propName], function (a) { return createInput.isTypeOf(a); });\n            if (input) {\n                if (input.bindingPropertyName) {\n                    inputs.push(propName + \": \" + input.bindingPropertyName);\n                }\n                else {\n                    inputs.push(propName);\n                }\n            }\n            var /** @type {?} */ output = findLast(propertyMetadata[propName], function (a) { return createOutput.isTypeOf(a); });\n            if (output) {\n                if (output.bindingPropertyName) {\n                    outputs.push(propName + \": \" + output.bindingPropertyName);\n                }\n                else {\n                    outputs.push(propName);\n                }\n            }\n            var /** @type {?} */ hostBindings = propertyMetadata[propName].filter(function (a) { return createHostBinding.isTypeOf(a); });\n            hostBindings.forEach(function (hostBinding) {\n                if (hostBinding.hostPropertyName) {\n                    var /** @type {?} */ startWith = hostBinding.hostPropertyName[0];\n                    if (startWith === '(') {\n                        throw new Error(\"@HostBinding can not bind to events. Use @HostListener instead.\");\n                    }\n                    else if (startWith === '[') {\n                        throw new Error(\"@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.\");\n                    }\n                    host[\"[\" + hostBinding.hostPropertyName + \"]\"] = propName;\n                }\n                else {\n                    host[\"[\" + propName + \"]\"] = propName;\n                }\n            });\n            var /** @type {?} */ hostListeners = propertyMetadata[propName].filter(function (a) { return createHostListener.isTypeOf(a); });\n            hostListeners.forEach(function (hostListener) {\n                var /** @type {?} */ args = hostListener.args || [];\n                host[\"(\" + hostListener.eventName + \")\"] = propName + \"(\" + args.join(',') + \")\";\n            });\n            var /** @type {?} */ query = findLast(propertyMetadata[propName], function (a) { return QUERY_METADATA_IDENTIFIERS.some(function (i) { return i.isTypeOf(a); }); });\n            if (query) {\n                queries[propName] = query;\n            }\n        });\n        return this._merge(dm, inputs, outputs, host, queries, directiveType);\n    };\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    DirectiveResolver.prototype._extractPublicName = /**\n     * @param {?} def\n     * @return {?}\n     */\n    function (def) { return splitAtColon(def, [/** @type {?} */ ((null)), def])[1].trim(); };\n    /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    DirectiveResolver.prototype._dedupeBindings = /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    function (bindings) {\n        var /** @type {?} */ names = new Set();\n        var /** @type {?} */ reversedResult = [];\n        // go last to first to allow later entries to overwrite previous entries\n        for (var /** @type {?} */ i = bindings.length - 1; i >= 0; i--) {\n            var /** @type {?} */ binding = bindings[i];\n            var /** @type {?} */ name_1 = this._extractPublicName(binding);\n            if (!names.has(name_1)) {\n                names.add(name_1);\n                reversedResult.push(binding);\n            }\n        }\n        return reversedResult.reverse();\n    };\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._merge = /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directive, inputs, outputs, host, queries, directiveType) {\n        var /** @type {?} */ mergedInputs = this._dedupeBindings(directive.inputs ? directive.inputs.concat(inputs) : inputs);\n        var /** @type {?} */ mergedOutputs = this._dedupeBindings(directive.outputs ? directive.outputs.concat(outputs) : outputs);\n        var /** @type {?} */ mergedHost = directive.host ? __assign({}, directive.host, host) : host;\n        var /** @type {?} */ mergedQueries = directive.queries ? __assign({}, directive.queries, queries) : queries;\n        if (createComponent.isTypeOf(directive)) {\n            var /** @type {?} */ comp = /** @type {?} */ (directive);\n            return createComponent({\n                selector: comp.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: comp.exportAs,\n                moduleId: comp.moduleId,\n                queries: mergedQueries,\n                changeDetection: comp.changeDetection,\n                providers: comp.providers,\n                viewProviders: comp.viewProviders,\n                entryComponents: comp.entryComponents,\n                template: comp.template,\n                templateUrl: comp.templateUrl,\n                styles: comp.styles,\n                styleUrls: comp.styleUrls,\n                encapsulation: comp.encapsulation,\n                animations: comp.animations,\n                interpolation: comp.interpolation,\n                preserveWhitespaces: directive.preserveWhitespaces,\n            });\n        }\n        else {\n            return createDirective({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                queries: mergedQueries,\n                providers: directive.providers\n            });\n        }\n    };\n    return DirectiveResolver;\n}());\n/**\n * @param {?} type\n * @return {?}\n */\nfunction isDirectiveMetadata(type) {\n    return createDirective.isTypeOf(type) || createComponent.isTypeOf(type);\n}\n/**\n * @template T\n * @param {?} arr\n * @param {?} condition\n * @return {?}\n */\nfunction findLast(arr, condition) {\n    for (var /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n        if (condition(arr[i])) {\n            return arr[i];\n        }\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar $EOF = 0;\nvar $TAB = 9;\nvar $LF = 10;\nvar $VTAB = 11;\nvar $FF = 12;\nvar $CR = 13;\nvar $SPACE = 32;\nvar $BANG = 33;\nvar $DQ = 34;\nvar $HASH = 35;\nvar $$ = 36;\nvar $PERCENT = 37;\nvar $AMPERSAND = 38;\nvar $SQ = 39;\nvar $LPAREN = 40;\nvar $RPAREN = 41;\nvar $STAR = 42;\nvar $PLUS = 43;\nvar $COMMA = 44;\nvar $MINUS = 45;\nvar $PERIOD = 46;\nvar $SLASH = 47;\nvar $COLON = 58;\nvar $SEMICOLON = 59;\nvar $LT = 60;\nvar $EQ = 61;\nvar $GT = 62;\nvar $QUESTION = 63;\nvar $0 = 48;\nvar $9 = 57;\nvar $A = 65;\nvar $E = 69;\nvar $F = 70;\nvar $X = 88;\nvar $Z = 90;\nvar $LBRACKET = 91;\nvar $BACKSLASH = 92;\nvar $RBRACKET = 93;\nvar $CARET = 94;\nvar $_ = 95;\nvar $a = 97;\nvar $e = 101;\nvar $f = 102;\nvar $n = 110;\nvar $r = 114;\nvar $t = 116;\nvar $u = 117;\nvar $v = 118;\nvar $x = 120;\nvar $z = 122;\nvar $LBRACE = 123;\nvar $BAR = 124;\nvar $RBRACE = 125;\nvar $NBSP = 160;\n\n\n\nvar $BT = 96;\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isWhitespace(code) {\n    return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigit(code) {\n    return $0 <= code && code <= $9;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiLetter(code) {\n    return code >= $a && code <= $z || code >= $A && code <= $Z;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiHexDigit(code) {\n    return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TokenType = {\n    Character: 0,\n    Identifier: 1,\n    Keyword: 2,\n    String: 3,\n    Operator: 4,\n    Number: 5,\n    Error: 6,\n};\nTokenType[TokenType.Character] = \"Character\";\nTokenType[TokenType.Identifier] = \"Identifier\";\nTokenType[TokenType.Keyword] = \"Keyword\";\nTokenType[TokenType.String] = \"String\";\nTokenType[TokenType.Operator] = \"Operator\";\nTokenType[TokenType.Number] = \"Number\";\nTokenType[TokenType.Error] = \"Error\";\nvar KEYWORDS = ['var', 'let', 'as', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\nvar Lexer = (function () {\n    function Lexer() {\n    }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    Lexer.prototype.tokenize = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) {\n        var /** @type {?} */ scanner = new _Scanner(text);\n        var /** @type {?} */ tokens = [];\n        var /** @type {?} */ token = scanner.scanToken();\n        while (token != null) {\n            tokens.push(token);\n            token = scanner.scanToken();\n        }\n        return tokens;\n    };\n    return Lexer;\n}());\nvar Token = (function () {\n    function Token(index, type, numValue, strValue) {\n        this.index = index;\n        this.type = type;\n        this.numValue = numValue;\n        this.strValue = strValue;\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    Token.prototype.isCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        return this.type == TokenType.Character && this.numValue == code;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isNumber = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Number; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isString = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.String; };\n    /**\n     * @param {?} operater\n     * @return {?}\n     */\n    Token.prototype.isOperator = /**\n     * @param {?} operater\n     * @return {?}\n     */\n    function (operater) {\n        return this.type == TokenType.Operator && this.strValue == operater;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isIdentifier = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Identifier; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeyword = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordLet = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'let'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordAs = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'as'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordNull = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'null'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordUndefined = /**\n     * @return {?}\n     */\n    function () {\n        return this.type == TokenType.Keyword && this.strValue == 'undefined';\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordTrue = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'true'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordFalse = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'false'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordThis = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'this'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isError = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Error; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toNumber = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Number ? this.numValue : -1; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        switch (this.type) {\n            case TokenType.Character:\n            case TokenType.Identifier:\n            case TokenType.Keyword:\n            case TokenType.Operator:\n            case TokenType.String:\n            case TokenType.Error:\n                return this.strValue;\n            case TokenType.Number:\n                return this.numValue.toString();\n            default:\n                return null;\n        }\n    };\n    return Token;\n}());\n/**\n * @param {?} index\n * @param {?} code\n * @return {?}\n */\nfunction newCharacterToken(index, code) {\n    return new Token(index, TokenType.Character, code, String.fromCharCode(code));\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newIdentifierToken(index, text) {\n    return new Token(index, TokenType.Identifier, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newKeywordToken(index, text) {\n    return new Token(index, TokenType.Keyword, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newOperatorToken(index, text) {\n    return new Token(index, TokenType.Operator, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newStringToken(index, text) {\n    return new Token(index, TokenType.String, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} n\n * @return {?}\n */\nfunction newNumberToken(index, n) {\n    return new Token(index, TokenType.Number, n, '');\n}\n/**\n * @param {?} index\n * @param {?} message\n * @return {?}\n */\nfunction newErrorToken(index, message) {\n    return new Token(index, TokenType.Error, 0, message);\n}\nvar EOF = new Token(-1, TokenType.Character, 0, '');\nvar _Scanner = (function () {\n    function _Scanner(input) {\n        this.input = input;\n        this.peek = 0;\n        this.index = -1;\n        this.length = input.length;\n        this.advance();\n    }\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.advance = /**\n     * @return {?}\n     */\n    function () {\n        this.peek = ++this.index >= this.length ? $EOF : this.input.charCodeAt(this.index);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanToken = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ input = this.input, /** @type {?} */ length = this.length;\n        var /** @type {?} */ peek = this.peek, /** @type {?} */ index = this.index;\n        // Skip whitespace.\n        while (peek <= $SPACE) {\n            if (++index >= length) {\n                peek = $EOF;\n                break;\n            }\n            else {\n                peek = input.charCodeAt(index);\n            }\n        }\n        this.peek = peek;\n        this.index = index;\n        if (index >= length) {\n            return null;\n        }\n        // Handle identifiers and numbers.\n        if (isIdentifierStart(peek))\n            return this.scanIdentifier();\n        if (isDigit(peek))\n            return this.scanNumber(index);\n        var /** @type {?} */ start = index;\n        switch (peek) {\n            case $PERIOD:\n                this.advance();\n                return isDigit(this.peek) ? this.scanNumber(start) :\n                    newCharacterToken(start, $PERIOD);\n            case $LPAREN:\n            case $RPAREN:\n            case $LBRACE:\n            case $RBRACE:\n            case $LBRACKET:\n            case $RBRACKET:\n            case $COMMA:\n            case $COLON:\n            case $SEMICOLON:\n                return this.scanCharacter(start, peek);\n            case $SQ:\n            case $DQ:\n                return this.scanString();\n            case $HASH:\n            case $PLUS:\n            case $MINUS:\n            case $STAR:\n            case $SLASH:\n            case $PERCENT:\n            case $CARET:\n                return this.scanOperator(start, String.fromCharCode(peek));\n            case $QUESTION:\n                return this.scanComplexOperator(start, '?', $PERIOD, '.');\n            case $LT:\n            case $GT:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=');\n            case $BANG:\n            case $EQ:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=', $EQ, '=');\n            case $AMPERSAND:\n                return this.scanComplexOperator(start, '&', $AMPERSAND, '&');\n            case $BAR:\n                return this.scanComplexOperator(start, '|', $BAR, '|');\n            case $NBSP:\n                while (isWhitespace(this.peek))\n                    this.advance();\n                return this.scanToken();\n        }\n        this.advance();\n        return this.error(\"Unexpected character [\" + String.fromCharCode(peek) + \"]\", 0);\n    };\n    /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    _Scanner.prototype.scanCharacter = /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    function (start, code) {\n        this.advance();\n        return newCharacterToken(start, code);\n    };\n    /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    _Scanner.prototype.scanOperator = /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    function (start, str) {\n        this.advance();\n        return newOperatorToken(start, str);\n    };\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param start start index in the expression\n     * @param one first symbol (always part of the operator)\n     * @param twoCode code point for the second symbol\n     * @param two second symbol (part of the operator when the second code point matches)\n     * @param threeCode code point for the third symbol\n     * @param three third symbol (part of the operator when provided and matches source expression)\n     */\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    _Scanner.prototype.scanComplexOperator = /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    function (start, one, twoCode, two, threeCode, three) {\n        this.advance();\n        var /** @type {?} */ str = one;\n        if (this.peek == twoCode) {\n            this.advance();\n            str += two;\n        }\n        if (threeCode != null && this.peek == threeCode) {\n            this.advance();\n            str += three;\n        }\n        return newOperatorToken(start, str);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanIdentifier = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.index;\n        this.advance();\n        while (isIdentifierPart(this.peek))\n            this.advance();\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n            newIdentifierToken(start, str);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Scanner.prototype.scanNumber = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ simple = (this.index === start);\n        this.advance(); // Skip initial digit.\n        while (true) {\n            if (isDigit(this.peek)) {\n                // Do nothing.\n            }\n            else if (this.peek == $PERIOD) {\n                simple = false;\n            }\n            else if (isExponentStart(this.peek)) {\n                this.advance();\n                if (isExponentSign(this.peek))\n                    this.advance();\n                if (!isDigit(this.peek))\n                    return this.error('Invalid exponent', -1);\n                simple = false;\n            }\n            else {\n                break;\n            }\n            this.advance();\n        }\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        var /** @type {?} */ value = simple ? parseIntAutoRadix(str) : parseFloat(str);\n        return newNumberToken(start, value);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.index;\n        var /** @type {?} */ quote = this.peek;\n        this.advance(); // Skip initial quote.\n        var /** @type {?} */ buffer = '';\n        var /** @type {?} */ marker = this.index;\n        var /** @type {?} */ input = this.input;\n        while (this.peek != quote) {\n            if (this.peek == $BACKSLASH) {\n                buffer += input.substring(marker, this.index);\n                this.advance();\n                var /** @type {?} */ unescapedCode = void 0;\n                // Workaround for TS2.1-introduced type strictness\n                this.peek = this.peek;\n                if (this.peek == $u) {\n                    // 4 character hex code for unicode character.\n                    var /** @type {?} */ hex = input.substring(this.index + 1, this.index + 5);\n                    if (/^[0-9a-f]+$/i.test(hex)) {\n                        unescapedCode = parseInt(hex, 16);\n                    }\n                    else {\n                        return this.error(\"Invalid unicode escape [\\\\u\" + hex + \"]\", 0);\n                    }\n                    for (var /** @type {?} */ i = 0; i < 5; i++) {\n                        this.advance();\n                    }\n                }\n                else {\n                    unescapedCode = unescape(this.peek);\n                    this.advance();\n                }\n                buffer += String.fromCharCode(unescapedCode);\n                marker = this.index;\n            }\n            else if (this.peek == $EOF) {\n                return this.error('Unterminated quote', 0);\n            }\n            else {\n                this.advance();\n            }\n        }\n        var /** @type {?} */ last = input.substring(marker, this.index);\n        this.advance(); // Skip terminating quote.\n        return newStringToken(start, buffer + last);\n    };\n    /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    _Scanner.prototype.error = /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    function (message, offset) {\n        var /** @type {?} */ position = this.index + offset;\n        return newErrorToken(position, \"Lexer Error: \" + message + \" at column \" + position + \" in expression [\" + this.input + \"]\");\n    };\n    return _Scanner;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierStart(code) {\n    return ($a <= code && code <= $z) || ($A <= code && code <= $Z) ||\n        (code == $_) || (code == $$);\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction isIdentifier(input) {\n    if (input.length == 0)\n        return false;\n    var /** @type {?} */ scanner = new _Scanner(input);\n    if (!isIdentifierStart(scanner.peek))\n        return false;\n    scanner.advance();\n    while (scanner.peek !== $EOF) {\n        if (!isIdentifierPart(scanner.peek))\n            return false;\n        scanner.advance();\n    }\n    return true;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierPart(code) {\n    return isAsciiLetter(code) || isDigit(code) || (code == $_) ||\n        (code == $$);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentStart(code) {\n    return code == $e || code == $E;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentSign(code) {\n    return code == $MINUS || code == $PLUS;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isQuote(code) {\n    return code === $SQ || code === $DQ || code === $BT;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction unescape(code) {\n    switch (code) {\n        case $n:\n            return $LF;\n        case $f:\n            return $FF;\n        case $r:\n            return $CR;\n        case $t:\n            return $TAB;\n        case $v:\n            return $VTAB;\n        default:\n            return code;\n    }\n}\n/**\n * @param {?} text\n * @return {?}\n */\nfunction parseIntAutoRadix(text) {\n    var /** @type {?} */ result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ParserError = (function () {\n    function ParserError(message, input, errLocation, ctxLocation) {\n        this.input = input;\n        this.errLocation = errLocation;\n        this.ctxLocation = ctxLocation;\n        this.message = \"Parser Error: \" + message + \" \" + errLocation + \" [\" + input + \"] in \" + ctxLocation;\n    }\n    return ParserError;\n}());\nvar ParseSpan = (function () {\n    function ParseSpan(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    return ParseSpan;\n}());\nvar AST = (function () {\n    function AST(span) {\n        this.span = span;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    AST.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return null;\n    };\n    /**\n     * @return {?}\n     */\n    AST.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return 'AST'; };\n    return AST;\n}());\n/**\n * Represents a quoted expression of the form:\n *\n * quote = prefix `:` uninterpretedExpression\n * prefix = identifier\n * uninterpretedExpression = arbitrary string\n *\n * A quoted expression is meant to be pre-processed by an AST transformer that\n * converts it into another AST that no longer contains quoted expressions.\n * It is meant to allow third-party developers to extend Angular template\n * expression language. The `uninterpretedExpression` part of the quote is\n * therefore not interpreted by the Angular's own expression parser.\n */\nvar Quote = (function (_super) {\n    __extends(Quote, _super);\n    function Quote(span, prefix, uninterpretedExpression, location) {\n        var _this = _super.call(this, span) || this;\n        _this.prefix = prefix;\n        _this.uninterpretedExpression = uninterpretedExpression;\n        _this.location = location;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Quote.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitQuote(this, context);\n    };\n    /**\n     * @return {?}\n     */\n    Quote.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return 'Quote'; };\n    return Quote;\n}(AST));\nvar EmptyExpr = (function (_super) {\n    __extends(EmptyExpr, _super);\n    function EmptyExpr() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    EmptyExpr.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        // do nothing\n    };\n    return EmptyExpr;\n}(AST));\nvar ImplicitReceiver = (function (_super) {\n    __extends(ImplicitReceiver, _super);\n    function ImplicitReceiver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ImplicitReceiver.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitImplicitReceiver(this, context);\n    };\n    return ImplicitReceiver;\n}(AST));\n/**\n * Multiple expressions separated by a semicolon.\n */\nvar Chain = (function (_super) {\n    __extends(Chain, _super);\n    function Chain(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Chain.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitChain(this, context);\n    };\n    return Chain;\n}(AST));\nvar Conditional = (function (_super) {\n    __extends(Conditional, _super);\n    function Conditional(span, condition, trueExp, falseExp) {\n        var _this = _super.call(this, span) || this;\n        _this.condition = condition;\n        _this.trueExp = trueExp;\n        _this.falseExp = falseExp;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Conditional.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitConditional(this, context);\n    };\n    return Conditional;\n}(AST));\nvar PropertyRead = (function (_super) {\n    __extends(PropertyRead, _super);\n    function PropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyRead(this, context);\n    };\n    return PropertyRead;\n}(AST));\nvar PropertyWrite = (function (_super) {\n    __extends(PropertyWrite, _super);\n    function PropertyWrite(span, receiver, name, value) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyWrite.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyWrite(this, context);\n    };\n    return PropertyWrite;\n}(AST));\nvar SafePropertyRead = (function (_super) {\n    __extends(SafePropertyRead, _super);\n    function SafePropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafePropertyRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafePropertyRead(this, context);\n    };\n    return SafePropertyRead;\n}(AST));\nvar KeyedRead = (function (_super) {\n    __extends(KeyedRead, _super);\n    function KeyedRead(span, obj, key) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedRead(this, context);\n    };\n    return KeyedRead;\n}(AST));\nvar KeyedWrite = (function (_super) {\n    __extends(KeyedWrite, _super);\n    function KeyedWrite(span, obj, key, value) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedWrite.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedWrite(this, context);\n    };\n    return KeyedWrite;\n}(AST));\nvar BindingPipe = (function (_super) {\n    __extends(BindingPipe, _super);\n    function BindingPipe(span, exp, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.exp = exp;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    BindingPipe.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPipe(this, context);\n    };\n    return BindingPipe;\n}(AST));\nvar LiteralPrimitive = (function (_super) {\n    __extends(LiteralPrimitive, _super);\n    function LiteralPrimitive(span, value) {\n        var _this = _super.call(this, span) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralPrimitive.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralPrimitive(this, context);\n    };\n    return LiteralPrimitive;\n}(AST));\nvar LiteralArray = (function (_super) {\n    __extends(LiteralArray, _super);\n    function LiteralArray(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralArray.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralArray(this, context);\n    };\n    return LiteralArray;\n}(AST));\nvar LiteralMap = (function (_super) {\n    __extends(LiteralMap, _super);\n    function LiteralMap(span, keys, values) {\n        var _this = _super.call(this, span) || this;\n        _this.keys = keys;\n        _this.values = values;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralMap.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralMap(this, context);\n    };\n    return LiteralMap;\n}(AST));\nvar Interpolation = (function (_super) {\n    __extends(Interpolation, _super);\n    function Interpolation(span, strings, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.strings = strings;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Interpolation.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitInterpolation(this, context);\n    };\n    return Interpolation;\n}(AST));\nvar Binary = (function (_super) {\n    __extends(Binary, _super);\n    function Binary(span, operation, left, right) {\n        var _this = _super.call(this, span) || this;\n        _this.operation = operation;\n        _this.left = left;\n        _this.right = right;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Binary.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitBinary(this, context);\n    };\n    return Binary;\n}(AST));\nvar PrefixNot = (function (_super) {\n    __extends(PrefixNot, _super);\n    function PrefixNot(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PrefixNot.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPrefixNot(this, context);\n    };\n    return PrefixNot;\n}(AST));\nvar NonNullAssert = (function (_super) {\n    __extends(NonNullAssert, _super);\n    function NonNullAssert(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    NonNullAssert.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitNonNullAssert(this, context);\n    };\n    return NonNullAssert;\n}(AST));\nvar MethodCall = (function (_super) {\n    __extends(MethodCall, _super);\n    function MethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    MethodCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitMethodCall(this, context);\n    };\n    return MethodCall;\n}(AST));\nvar SafeMethodCall = (function (_super) {\n    __extends(SafeMethodCall, _super);\n    function SafeMethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafeMethodCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafeMethodCall(this, context);\n    };\n    return SafeMethodCall;\n}(AST));\nvar FunctionCall = (function (_super) {\n    __extends(FunctionCall, _super);\n    function FunctionCall(span, target, args) {\n        var _this = _super.call(this, span) || this;\n        _this.target = target;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    FunctionCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitFunctionCall(this, context);\n    };\n    return FunctionCall;\n}(AST));\nvar ASTWithSource = (function (_super) {\n    __extends(ASTWithSource, _super);\n    function ASTWithSource(ast, source, location, errors) {\n        var _this = _super.call(this, new ParseSpan(0, source == null ? 0 : source.length)) || this;\n        _this.ast = ast;\n        _this.source = source;\n        _this.location = location;\n        _this.errors = errors;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ASTWithSource.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return this.ast.visit(visitor, context);\n    };\n    /**\n     * @return {?}\n     */\n    ASTWithSource.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this.source + \" in \" + this.location; };\n    return ASTWithSource;\n}(AST));\nvar TemplateBinding = (function () {\n    function TemplateBinding(span, key, keyIsVar, name, expression) {\n        this.span = span;\n        this.key = key;\n        this.keyIsVar = keyIsVar;\n        this.name = name;\n        this.expression = expression;\n    }\n    return TemplateBinding;\n}());\n/**\n * @record\n */\n\nvar NullAstVisitor = (function () {\n    function NullAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return NullAstVisitor;\n}());\nvar RecursiveAstVisitor = (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.left.visit(this);\n        ast.right.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.visitAll(ast.expressions, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visit(this);\n        ast.trueExp.visit(this);\n        ast.falseExp.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        /** @type {?} */ ((ast.target)).visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.visitAll(ast.values, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAll = /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    function (asts, context) {\n        var _this = this;\n        asts.forEach(function (ast) { return ast.visit(_this, context); });\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    return RecursiveAstVisitor;\n}());\nvar AstTransformer = (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Interpolation(ast.span, ast.strings, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralPrimitive(ast.span, ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PropertyWrite(ast.span, ast.receiver.visit(this), ast.name, ast.value.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new SafePropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new MethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new SafeMethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new FunctionCall(ast.span, /** @type {?} */ ((ast.target)).visit(this), this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralArray(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralMap(ast.span, ast.keys, this.visitAll(ast.values));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Binary(ast.span, ast.operation, ast.left.visit(this), ast.right.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PrefixNot(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new NonNullAssert(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Conditional(ast.span, ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new BindingPipe(ast.span, ast.exp.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new KeyedRead(ast.span, ast.obj.visit(this), ast.key.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new KeyedWrite(ast.span, ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));\n    };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var /** @type {?} */ res = new Array(asts.length);\n        for (var /** @type {?} */ i = 0; i < asts.length; ++i) {\n            res[i] = asts[i].visit(this);\n        }\n        return res;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Chain(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Quote(ast.span, ast.prefix, ast.uninterpretedExpression, ast.location);\n    };\n    return AstTransformer;\n}());\n/**\n * @param {?} ast\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nfunction visitAstChildren(ast, visitor, context) {\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function visit(ast) {\n        visitor.visit && visitor.visit(ast, context) || ast.visit(visitor, context);\n    }\n    /**\n     * @template T\n     * @param {?} asts\n     * @return {?}\n     */\n    function visitAll(asts) { asts.forEach(visit); }\n    ast.visit({\n        visitBinary: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.left);\n            visit(ast.right);\n        },\n        visitChain: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitConditional: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.condition);\n            visit(ast.trueExp);\n            visit(ast.falseExp);\n        },\n        visitFunctionCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            if (ast.target) {\n                visit(ast.target);\n            }\n            visitAll(ast.args);\n        },\n        visitImplicitReceiver: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitInterpolation: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitKeyedRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n        },\n        visitKeyedWrite: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n            visit(ast.obj);\n        },\n        visitLiteralArray: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitLiteralMap: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitLiteralPrimitive: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitMethodCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitPipe: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.exp);\n            visitAll(ast.args);\n        },\n        visitPrefixNot: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.expression); },\n        visitNonNullAssert: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.expression); },\n        visitPropertyRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.receiver); },\n        visitPropertyWrite: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visit(ast.value);\n        },\n        visitQuote: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitSafeMethodCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitSafePropertyRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.receiver); },\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SplitInterpolation = (function () {\n    function SplitInterpolation(strings, expressions, offsets) {\n        this.strings = strings;\n        this.expressions = expressions;\n        this.offsets = offsets;\n    }\n    return SplitInterpolation;\n}());\nvar TemplateBindingParseResult = (function () {\n    function TemplateBindingParseResult(templateBindings, warnings, errors) {\n        this.templateBindings = templateBindings;\n        this.warnings = warnings;\n        this.errors = errors;\n    }\n    return TemplateBindingParseResult;\n}());\n/**\n * @param {?} config\n * @return {?}\n */\nfunction _createInterpolateRegExp(config) {\n    var /** @type {?} */ pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n    return new RegExp(pattern, 'g');\n}\nvar Parser = (function () {\n    function Parser(_lexer) {\n        this._lexer = _lexer;\n        this.errors = [];\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseAction = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(this._stripComments(input));\n        var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseBinding = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseSimpleBinding = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        var /** @type {?} */ errors = SimpleExpressionChecker.check(ast);\n        if (errors.length > 0) {\n            this._reportError(\"Host binding expression cannot contain \" + errors.join(' '), input, location);\n        }\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    Parser.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    function (message, input, errLocation, ctxLocation) {\n        this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._parseBindingAst = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        // Quotes expressions use 3rd-party expression language. We don't want to use\n        // our lexer or parser for that, so we check for that ahead of time.\n        var /** @type {?} */ quote = this._parseQuote(input, location);\n        if (quote != null) {\n            return quote;\n        }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n        return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype._parseQuote = /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (input, location) {\n        if (input == null)\n            return null;\n        var /** @type {?} */ prefixSeparatorIndex = input.indexOf(':');\n        if (prefixSeparatorIndex == -1)\n            return null;\n        var /** @type {?} */ prefix = input.substring(0, prefixSeparatorIndex).trim();\n        if (!isIdentifier(prefix))\n            return null;\n        var /** @type {?} */ uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n        return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.parseTemplateBindings = /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (prefixToken, input, location) {\n        var /** @type {?} */ tokens = this._lexer.tokenize(input);\n        if (prefixToken) {\n            // Prefix the tokens with the tokens from prefixToken but have them take no space (0 index).\n            var /** @type {?} */ prefixTokens = this._lexer.tokenize(prefixToken).map(function (t) {\n                t.index = 0;\n                return t;\n            });\n            tokens.unshift.apply(tokens, prefixTokens);\n        }\n        return new _ParseAST(input, location, tokens, input.length, false, this.errors, 0)\n            .parseTemplateBindings();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ split = this.splitInterpolation(input, location, interpolationConfig);\n        if (split == null)\n            return null;\n        var /** @type {?} */ expressions = [];\n        for (var /** @type {?} */ i = 0; i < split.expressions.length; ++i) {\n            var /** @type {?} */ expressionText = split.expressions[i];\n            var /** @type {?} */ sourceToLex = this._stripComments(expressionText);\n            var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n            var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n                .parseChain();\n            expressions.push(ast);\n        }\n        return new ASTWithSource(new Interpolation(new ParseSpan(0, input == null ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.splitInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length <= 1) {\n            return null;\n        }\n        var /** @type {?} */ strings = [];\n        var /** @type {?} */ expressions = [];\n        var /** @type {?} */ offsets = [];\n        var /** @type {?} */ offset = 0;\n        for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n            var /** @type {?} */ part = parts[i];\n            if (i % 2 === 0) {\n                // fixed string\n                strings.push(part);\n                offset += part.length;\n            }\n            else if (part.trim().length > 0) {\n                offset += interpolationConfig.start.length;\n                expressions.push(part);\n                offsets.push(offset);\n                offset += part.length + interpolationConfig.end.length;\n            }\n            else {\n                this._reportError('Blank expressions are not allowed in interpolated strings', input, \"at column \" + this._findInterpolationErrorColumn(parts, i, interpolationConfig) + \" in\", location);\n                expressions.push('$implict');\n                offsets.push(offset);\n            }\n        }\n        return new SplitInterpolation(strings, expressions, offsets);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.wrapLiteralPrimitive = /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (input, location) {\n        return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, input == null ? 0 : input.length), input), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._stripComments = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        var /** @type {?} */ i = this._commentStart(input);\n        return i != null ? input.substring(0, i).trim() : input;\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._commentStart = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        var /** @type {?} */ outerQuote = null;\n        for (var /** @type {?} */ i = 0; i < input.length - 1; i++) {\n            var /** @type {?} */ char = input.charCodeAt(i);\n            var /** @type {?} */ nextChar = input.charCodeAt(i + 1);\n            if (char === $SLASH && nextChar == $SLASH && outerQuote == null)\n                return i;\n            if (outerQuote === char) {\n                outerQuote = null;\n            }\n            else if (outerQuote == null && isQuote(char)) {\n                outerQuote = char;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._checkNoInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length > 1) {\n            this._reportError(\"Got interpolation (\" + interpolationConfig.start + interpolationConfig.end + \") where expression was expected\", input, \"at column \" + this._findInterpolationErrorColumn(parts, 1, interpolationConfig) + \" in\", location);\n        }\n    };\n    /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._findInterpolationErrorColumn = /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (parts, partInErrIdx, interpolationConfig) {\n        var /** @type {?} */ errLocation = '';\n        for (var /** @type {?} */ j = 0; j < partInErrIdx; j++) {\n            errLocation += j % 2 === 0 ?\n                parts[j] :\n                \"\" + interpolationConfig.start + parts[j] + interpolationConfig.end;\n        }\n        return errLocation.length;\n    };\n    return Parser;\n}());\nvar _ParseAST = (function () {\n    function _ParseAST(input, location, tokens, inputLength, parseAction, errors, offset) {\n        this.input = input;\n        this.location = location;\n        this.tokens = tokens;\n        this.inputLength = inputLength;\n        this.parseAction = parseAction;\n        this.errors = errors;\n        this.offset = offset;\n        this.rparensExpected = 0;\n        this.rbracketsExpected = 0;\n        this.rbracesExpected = 0;\n        this.index = 0;\n    }\n    /**\n     * @param {?} offset\n     * @return {?}\n     */\n    _ParseAST.prototype.peek = /**\n     * @param {?} offset\n     * @return {?}\n     */\n    function (offset) {\n        var /** @type {?} */ i = this.index + offset;\n        return i < this.tokens.length ? this.tokens[i] : EOF;\n    };\n    Object.defineProperty(_ParseAST.prototype, \"next\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.peek(0); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_ParseAST.prototype, \"inputIndex\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return (this.index < this.tokens.length) ? this.next.index + this.offset :\n                this.inputLength + this.offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _ParseAST.prototype.span = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) { return new ParseSpan(start, this.inputIndex); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.advance = /**\n     * @return {?}\n     */\n    function () { this.index++; };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        if (this.next.isCharacter(code)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordLet = /**\n     * @return {?}\n     */\n    function () { return this.next.isKeywordLet(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordAs = /**\n     * @return {?}\n     */\n    function () { return this.next.isKeywordAs(); };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.expectCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        if (this.optionalCharacter(code))\n            return;\n        this.error(\"Missing expected \" + String.fromCharCode(code));\n    };\n    /**\n     * @param {?} op\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalOperator = /**\n     * @param {?} op\n     * @return {?}\n     */\n    function (op) {\n        if (this.next.isOperator(op)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @param {?} operator\n     * @return {?}\n     */\n    _ParseAST.prototype.expectOperator = /**\n     * @param {?} operator\n     * @return {?}\n     */\n    function (operator) {\n        if (this.optionalOperator(operator))\n            return;\n        this.error(\"Missing expected operator \" + operator);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeyword = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier or keyword\");\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeywordOrString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier, keyword, or string\");\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseChain = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ exprs = [];\n        var /** @type {?} */ start = this.inputIndex;\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ expr = this.parsePipe();\n            exprs.push(expr);\n            if (this.optionalCharacter($SEMICOLON)) {\n                if (!this.parseAction) {\n                    this.error('Binding expression cannot contain chained expression');\n                }\n                while (this.optionalCharacter($SEMICOLON)) {\n                } // read all semicolons\n            }\n            else if (this.index < this.tokens.length) {\n                this.error(\"Unexpected token '\" + this.next + \"'\");\n            }\n        }\n        if (exprs.length == 0)\n            return new EmptyExpr(this.span(start));\n        if (exprs.length == 1)\n            return exprs[0];\n        return new Chain(this.span(start), exprs);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePipe = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = this.parseExpression();\n        if (this.optionalOperator('|')) {\n            if (this.parseAction) {\n                this.error('Cannot have a pipe in an action expression');\n            }\n            do {\n                var /** @type {?} */ name_1 = this.expectIdentifierOrKeyword();\n                var /** @type {?} */ args = [];\n                while (this.optionalCharacter($COLON)) {\n                    args.push(this.parseExpression());\n                }\n                result = new BindingPipe(this.span(result.span.start), result, name_1, args);\n            } while (this.optionalOperator('|'));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpression = /**\n     * @return {?}\n     */\n    function () { return this.parseConditional(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseConditional = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.inputIndex;\n        var /** @type {?} */ result = this.parseLogicalOr();\n        if (this.optionalOperator('?')) {\n            var /** @type {?} */ yes = this.parsePipe();\n            var /** @type {?} */ no = void 0;\n            if (!this.optionalCharacter($COLON)) {\n                var /** @type {?} */ end = this.inputIndex;\n                var /** @type {?} */ expression = this.input.substring(start, end);\n                this.error(\"Conditional expression \" + expression + \" requires all 3 expressions\");\n                no = new EmptyExpr(this.span(start));\n            }\n            else {\n                no = this.parsePipe();\n            }\n            return new Conditional(this.span(start), result, yes, no);\n        }\n        else {\n            return result;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalOr = /**\n     * @return {?}\n     */\n    function () {\n        // '||'\n        var /** @type {?} */ result = this.parseLogicalAnd();\n        while (this.optionalOperator('||')) {\n            var /** @type {?} */ right = this.parseLogicalAnd();\n            result = new Binary(this.span(result.span.start), '||', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalAnd = /**\n     * @return {?}\n     */\n    function () {\n        // '&&'\n        var /** @type {?} */ result = this.parseEquality();\n        while (this.optionalOperator('&&')) {\n            var /** @type {?} */ right = this.parseEquality();\n            result = new Binary(this.span(result.span.start), '&&', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseEquality = /**\n     * @return {?}\n     */\n    function () {\n        // '==','!=','===','!=='\n        var /** @type {?} */ result = this.parseRelational();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '==':\n                case '===':\n                case '!=':\n                case '!==':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseRelational();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseRelational = /**\n     * @return {?}\n     */\n    function () {\n        // '<', '>', '<=', '>='\n        var /** @type {?} */ result = this.parseAdditive();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '<':\n                case '>':\n                case '<=':\n                case '>=':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseAdditive();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAdditive = /**\n     * @return {?}\n     */\n    function () {\n        // '+', '-'\n        var /** @type {?} */ result = this.parseMultiplicative();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '+':\n                case '-':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseMultiplicative();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseMultiplicative = /**\n     * @return {?}\n     */\n    function () {\n        // '*', '%', '/'\n        var /** @type {?} */ result = this.parsePrefix();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '*':\n                case '%':\n                case '/':\n                    this.advance();\n                    var /** @type {?} */ right = this.parsePrefix();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrefix = /**\n     * @return {?}\n     */\n    function () {\n        if (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ operator = this.next.strValue;\n            var /** @type {?} */ result = void 0;\n            switch (operator) {\n                case '+':\n                    this.advance();\n                    return this.parsePrefix();\n                case '-':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n                case '!':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new PrefixNot(this.span(start), result);\n            }\n        }\n        return this.parseCallChain();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallChain = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = this.parsePrimary();\n        while (true) {\n            if (this.optionalCharacter($PERIOD)) {\n                result = this.parseAccessMemberOrMethodCall(result, false);\n            }\n            else if (this.optionalOperator('?.')) {\n                result = this.parseAccessMemberOrMethodCall(result, true);\n            }\n            else if (this.optionalCharacter($LBRACKET)) {\n                this.rbracketsExpected++;\n                var /** @type {?} */ key = this.parsePipe();\n                this.rbracketsExpected--;\n                this.expectCharacter($RBRACKET);\n                if (this.optionalOperator('=')) {\n                    var /** @type {?} */ value = this.parseConditional();\n                    result = new KeyedWrite(this.span(result.span.start), result, key, value);\n                }\n                else {\n                    result = new KeyedRead(this.span(result.span.start), result, key);\n                }\n            }\n            else if (this.optionalCharacter($LPAREN)) {\n                this.rparensExpected++;\n                var /** @type {?} */ args = this.parseCallArguments();\n                this.rparensExpected--;\n                this.expectCharacter($RPAREN);\n                result = new FunctionCall(this.span(result.span.start), result, args);\n            }\n            else if (this.optionalOperator('!')) {\n                result = new NonNullAssert(this.span(result.span.start), result);\n            }\n            else {\n                return result;\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrimary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.inputIndex;\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ result = this.parsePipe();\n            this.rparensExpected--;\n            this.expectCharacter($RPAREN);\n            return result;\n        }\n        else if (this.next.isKeywordNull()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), null);\n        }\n        else if (this.next.isKeywordUndefined()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), void 0);\n        }\n        else if (this.next.isKeywordTrue()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), true);\n        }\n        else if (this.next.isKeywordFalse()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), false);\n        }\n        else if (this.next.isKeywordThis()) {\n            this.advance();\n            return new ImplicitReceiver(this.span(start));\n        }\n        else if (this.optionalCharacter($LBRACKET)) {\n            this.rbracketsExpected++;\n            var /** @type {?} */ elements = this.parseExpressionList($RBRACKET);\n            this.rbracketsExpected--;\n            this.expectCharacter($RBRACKET);\n            return new LiteralArray(this.span(start), elements);\n        }\n        else if (this.next.isCharacter($LBRACE)) {\n            return this.parseLiteralMap();\n        }\n        else if (this.next.isIdentifier()) {\n            return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n        }\n        else if (this.next.isNumber()) {\n            var /** @type {?} */ value = this.next.toNumber();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), value);\n        }\n        else if (this.next.isString()) {\n            var /** @type {?} */ literalValue = this.next.toString();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), literalValue);\n        }\n        else if (this.index >= this.tokens.length) {\n            this.error(\"Unexpected end of expression: \" + this.input);\n            return new EmptyExpr(this.span(start));\n        }\n        else {\n            this.error(\"Unexpected token \" + this.next);\n            return new EmptyExpr(this.span(start));\n        }\n    };\n    /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpressionList = /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    function (terminator) {\n        var /** @type {?} */ result = [];\n        if (!this.next.isCharacter(terminator)) {\n            do {\n                result.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLiteralMap = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ keys = [];\n        var /** @type {?} */ values = [];\n        var /** @type {?} */ start = this.inputIndex;\n        this.expectCharacter($LBRACE);\n        if (!this.optionalCharacter($RBRACE)) {\n            this.rbracesExpected++;\n            do {\n                var /** @type {?} */ quoted = this.next.isString();\n                var /** @type {?} */ key = this.expectIdentifierOrKeywordOrString();\n                keys.push({ key: key, quoted: quoted });\n                this.expectCharacter($COLON);\n                values.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n            this.rbracesExpected--;\n            this.expectCharacter($RBRACE);\n        }\n        return new LiteralMap(this.span(start), keys, values);\n    };\n    /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAccessMemberOrMethodCall = /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    function (receiver, isSafe) {\n        if (isSafe === void 0) { isSafe = false; }\n        var /** @type {?} */ start = receiver.span.start;\n        var /** @type {?} */ id = this.expectIdentifierOrKeyword();\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ args = this.parseCallArguments();\n            this.expectCharacter($RPAREN);\n            this.rparensExpected--;\n            var /** @type {?} */ span = this.span(start);\n            return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                new MethodCall(span, receiver, id, args);\n        }\n        else {\n            if (isSafe) {\n                if (this.optionalOperator('=')) {\n                    this.error('The \\'?.\\' operator cannot be used in the assignment');\n                    return new EmptyExpr(this.span(start));\n                }\n                else {\n                    return new SafePropertyRead(this.span(start), receiver, id);\n                }\n            }\n            else {\n                if (this.optionalOperator('=')) {\n                    if (!this.parseAction) {\n                        this.error('Bindings cannot contain assignments');\n                        return new EmptyExpr(this.span(start));\n                    }\n                    var /** @type {?} */ value = this.parseConditional();\n                    return new PropertyWrite(this.span(start), receiver, id, value);\n                }\n                else {\n                    return new PropertyRead(this.span(start), receiver, id);\n                }\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallArguments = /**\n     * @return {?}\n     */\n    function () {\n        if (this.next.isCharacter($RPAREN))\n            return [];\n        var /** @type {?} */ positionals = [];\n        do {\n            positionals.push(this.parsePipe());\n        } while (this.optionalCharacter($COMMA));\n        return /** @type {?} */ (positionals);\n    };\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     */\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    _ParseAST.prototype.expectTemplateBindingKey = /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = '';\n        var /** @type {?} */ operatorFound = false;\n        do {\n            result += this.expectIdentifierOrKeywordOrString();\n            operatorFound = this.optionalOperator('-');\n            if (operatorFound) {\n                result += '-';\n            }\n        } while (operatorFound);\n        return result.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseTemplateBindings = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ bindings = [];\n        var /** @type {?} */ prefix = /** @type {?} */ ((null));\n        var /** @type {?} */ warnings = [];\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ keyIsVar = this.peekKeywordLet();\n            if (keyIsVar) {\n                this.advance();\n            }\n            var /** @type {?} */ rawKey = this.expectTemplateBindingKey();\n            var /** @type {?} */ key = rawKey;\n            if (!keyIsVar) {\n                if (prefix == null) {\n                    prefix = key;\n                }\n                else {\n                    key = prefix + key[0].toUpperCase() + key.substring(1);\n                }\n            }\n            this.optionalCharacter($COLON);\n            var /** @type {?} */ name_2 = /** @type {?} */ ((null));\n            var /** @type {?} */ expression = /** @type {?} */ ((null));\n            if (keyIsVar) {\n                if (this.optionalOperator('=')) {\n                    name_2 = this.expectTemplateBindingKey();\n                }\n                else {\n                    name_2 = '\\$implicit';\n                }\n            }\n            else if (this.peekKeywordAs()) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                name_2 = rawKey;\n                key = this.expectTemplateBindingKey(); // read local var name\n                keyIsVar = true;\n            }\n            else if (this.next !== EOF && !this.peekKeywordLet()) {\n                var /** @type {?} */ start_1 = this.inputIndex;\n                var /** @type {?} */ ast = this.parsePipe();\n                var /** @type {?} */ source = this.input.substring(start_1 - this.offset, this.inputIndex - this.offset);\n                expression = new ASTWithSource(ast, source, this.location, this.errors);\n            }\n            bindings.push(new TemplateBinding(this.span(start), key, keyIsVar, name_2, expression));\n            if (this.peekKeywordAs() && !keyIsVar) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                var /** @type {?} */ letName = this.expectTemplateBindingKey(); // read local var name\n                bindings.push(new TemplateBinding(this.span(letStart), letName, true, key, /** @type {?} */ ((null))));\n            }\n            if (!this.optionalCharacter($SEMICOLON)) {\n                this.optionalCharacter($COMMA);\n            }\n        }\n        return new TemplateBindingParseResult(bindings, warnings, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.error = /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    function (message, index) {\n        if (index === void 0) { index = null; }\n        this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n        this.skip();\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.locationText = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        if (index === void 0) { index = null; }\n        if (index == null)\n            index = this.index;\n        return (index < this.tokens.length) ? \"at column \" + (this.tokens[index].index + 1) + \" in\" :\n            \"at the end of the expression\";\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.skip = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        while (this.index < this.tokens.length && !n.isCharacter($SEMICOLON) &&\n            (this.rparensExpected <= 0 || !n.isCharacter($RPAREN)) &&\n            (this.rbracesExpected <= 0 || !n.isCharacter($RBRACE)) &&\n            (this.rbracketsExpected <= 0 || !n.isCharacter($RBRACKET))) {\n            if (this.next.isError()) {\n                this.errors.push(new ParserError(/** @type {?} */ ((this.next.toString())), this.input, this.locationText(), this.location));\n            }\n            this.advance();\n            n = this.next;\n        }\n    };\n    return _ParseAST;\n}());\nvar SimpleExpressionChecker = (function () {\n    function SimpleExpressionChecker() {\n        this.errors = [];\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    SimpleExpressionChecker.check = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ s = new SimpleExpressionChecker();\n        ast.visit(s);\n        return s.errors;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.visitAll(ast.expressions); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.visitAll(ast.values); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.errors.push('pipes'); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var _this = this;\n        return asts.map(function (node) { return node.visit(_this); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return SimpleExpressionChecker;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParseLocation = (function () {\n    function ParseLocation(file, offset, line, col) {\n        this.file = file;\n        this.offset = offset;\n        this.line = line;\n        this.col = col;\n    }\n    /**\n     * @return {?}\n     */\n    ParseLocation.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.offset != null ? this.file.url + \"@\" + this.line + \":\" + this.col : this.file.url;\n    };\n    /**\n     * @param {?} delta\n     * @return {?}\n     */\n    ParseLocation.prototype.moveBy = /**\n     * @param {?} delta\n     * @return {?}\n     */\n    function (delta) {\n        var /** @type {?} */ source = this.file.content;\n        var /** @type {?} */ len = source.length;\n        var /** @type {?} */ offset = this.offset;\n        var /** @type {?} */ line = this.line;\n        var /** @type {?} */ col = this.col;\n        while (offset > 0 && delta < 0) {\n            offset--;\n            delta++;\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            if (ch == $LF) {\n                line--;\n                var /** @type {?} */ priorLine = source.substr(0, offset - 1).lastIndexOf(String.fromCharCode($LF));\n                col = priorLine > 0 ? offset - priorLine : offset;\n            }\n            else {\n                col--;\n            }\n        }\n        while (offset < len && delta > 0) {\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            offset++;\n            delta--;\n            if (ch == $LF) {\n                line++;\n                col = 0;\n            }\n            else {\n                col++;\n            }\n        }\n        return new ParseLocation(this.file, offset, line, col);\n    };\n    // Return the source around the location\n    // Up to `maxChars` or `maxLines` on each side of the location\n    /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    ParseLocation.prototype.getContext = /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    function (maxChars, maxLines) {\n        var /** @type {?} */ content = this.file.content;\n        var /** @type {?} */ startOffset = this.offset;\n        if (startOffset != null) {\n            if (startOffset > content.length - 1) {\n                startOffset = content.length - 1;\n            }\n            var /** @type {?} */ endOffset = startOffset;\n            var /** @type {?} */ ctxChars = 0;\n            var /** @type {?} */ ctxLines = 0;\n            while (ctxChars < maxChars && startOffset > 0) {\n                startOffset--;\n                ctxChars++;\n                if (content[startOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            ctxChars = 0;\n            ctxLines = 0;\n            while (ctxChars < maxChars && endOffset < content.length - 1) {\n                endOffset++;\n                ctxChars++;\n                if (content[endOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            return {\n                before: content.substring(startOffset, this.offset),\n                after: content.substring(this.offset, endOffset + 1),\n            };\n        }\n        return null;\n    };\n    return ParseLocation;\n}());\nvar ParseSourceFile = (function () {\n    function ParseSourceFile(content, url) {\n        this.content = content;\n        this.url = url;\n    }\n    return ParseSourceFile;\n}());\nvar ParseSourceSpan = (function () {\n    function ParseSourceSpan(start, end, details) {\n        if (details === void 0) { details = null; }\n        this.start = start;\n        this.end = end;\n        this.details = details;\n    }\n    /**\n     * @return {?}\n     */\n    ParseSourceSpan.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.start.file.content.substring(this.start.offset, this.end.offset);\n    };\n    return ParseSourceSpan;\n}());\n/** @enum {number} */\nvar ParseErrorLevel = {\n    WARNING: 0,\n    ERROR: 1,\n};\nParseErrorLevel[ParseErrorLevel.WARNING] = \"WARNING\";\nParseErrorLevel[ParseErrorLevel.ERROR] = \"ERROR\";\nvar ParseError = (function () {\n    function ParseError(span, msg, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this.span = span;\n        this.msg = msg;\n        this.level = level;\n    }\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.contextualMessage = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ ctx = this.span.start.getContext(100, 3);\n        return ctx ? \" (\\\"\" + ctx.before + \"[\" + ParseErrorLevel[this.level] + \" ->]\" + ctx.after + \"\\\")\" : '';\n    };\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ details = this.span.details ? \", \" + this.span.details : '';\n        return \"\" + this.msg + this.contextualMessage() + \": \" + this.span.start + details;\n    };\n    return ParseError;\n}());\n/**\n * @param {?} kind\n * @param {?} type\n * @return {?}\n */\nfunction typeSourceSpan(kind, type) {\n    var /** @type {?} */ moduleUrl = identifierModuleUrl(type);\n    var /** @type {?} */ sourceFileName = moduleUrl != null ? \"in \" + kind + \" \" + identifierName(type) + \" in \" + moduleUrl :\n        \"in \" + kind + \" \" + identifierName(type);\n    var /** @type {?} */ sourceFile = new ParseSourceFile('', sourceFileName);\n    return new ParseSourceSpan(new ParseLocation(sourceFile, -1, -1, -1), new ParseLocation(sourceFile, -1, -1, -1));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TokenType$1 = {\n    TAG_OPEN_START: 0,\n    TAG_OPEN_END: 1,\n    TAG_OPEN_END_VOID: 2,\n    TAG_CLOSE: 3,\n    TEXT: 4,\n    ESCAPABLE_RAW_TEXT: 5,\n    RAW_TEXT: 6,\n    COMMENT_START: 7,\n    COMMENT_END: 8,\n    CDATA_START: 9,\n    CDATA_END: 10,\n    ATTR_NAME: 11,\n    ATTR_VALUE: 12,\n    DOC_TYPE: 13,\n    EXPANSION_FORM_START: 14,\n    EXPANSION_CASE_VALUE: 15,\n    EXPANSION_CASE_EXP_START: 16,\n    EXPANSION_CASE_EXP_END: 17,\n    EXPANSION_FORM_END: 18,\n    EOF: 19,\n};\nTokenType$1[TokenType$1.TAG_OPEN_START] = \"TAG_OPEN_START\";\nTokenType$1[TokenType$1.TAG_OPEN_END] = \"TAG_OPEN_END\";\nTokenType$1[TokenType$1.TAG_OPEN_END_VOID] = \"TAG_OPEN_END_VOID\";\nTokenType$1[TokenType$1.TAG_CLOSE] = \"TAG_CLOSE\";\nTokenType$1[TokenType$1.TEXT] = \"TEXT\";\nTokenType$1[TokenType$1.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTokenType$1[TokenType$1.RAW_TEXT] = \"RAW_TEXT\";\nTokenType$1[TokenType$1.COMMENT_START] = \"COMMENT_START\";\nTokenType$1[TokenType$1.COMMENT_END] = \"COMMENT_END\";\nTokenType$1[TokenType$1.CDATA_START] = \"CDATA_START\";\nTokenType$1[TokenType$1.CDATA_END] = \"CDATA_END\";\nTokenType$1[TokenType$1.ATTR_NAME] = \"ATTR_NAME\";\nTokenType$1[TokenType$1.ATTR_VALUE] = \"ATTR_VALUE\";\nTokenType$1[TokenType$1.DOC_TYPE] = \"DOC_TYPE\";\nTokenType$1[TokenType$1.EXPANSION_FORM_START] = \"EXPANSION_FORM_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_VALUE] = \"EXPANSION_CASE_VALUE\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_START] = \"EXPANSION_CASE_EXP_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_END] = \"EXPANSION_CASE_EXP_END\";\nTokenType$1[TokenType$1.EXPANSION_FORM_END] = \"EXPANSION_FORM_END\";\nTokenType$1[TokenType$1.EOF] = \"EOF\";\nvar Token$1 = (function () {\n    function Token(type, parts, sourceSpan) {\n        this.type = type;\n        this.parts = parts;\n        this.sourceSpan = sourceSpan;\n    }\n    return Token;\n}());\nvar TokenError = (function (_super) {\n    __extends(TokenError, _super);\n    function TokenError(errorMsg, tokenType, span) {\n        var _this = _super.call(this, span, errorMsg) || this;\n        _this.tokenType = tokenType;\n        return _this;\n    }\n    return TokenError;\n}(ParseError));\nvar TokenizeResult = (function () {\n    function TokenizeResult(tokens, errors) {\n        this.tokens = tokens;\n        this.errors = errors;\n    }\n    return TokenizeResult;\n}());\n/**\n * @param {?} source\n * @param {?} url\n * @param {?} getTagDefinition\n * @param {?=} tokenizeExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nfunction tokenize(source, url, getTagDefinition, tokenizeExpansionForms, interpolationConfig) {\n    if (tokenizeExpansionForms === void 0) { tokenizeExpansionForms = false; }\n    if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n    return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n        .tokenize();\n}\nvar _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n/**\n * @param {?} charCode\n * @return {?}\n */\nfunction _unexpectedCharacterErrorMsg(charCode) {\n    var /** @type {?} */ char = charCode === $EOF ? 'EOF' : String.fromCharCode(charCode);\n    return \"Unexpected character \\\"\" + char + \"\\\"\";\n}\n/**\n * @param {?} entitySrc\n * @return {?}\n */\nfunction _unknownEntityErrorMsg(entitySrc) {\n    return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\n}\nvar _ControlFlowError = (function () {\n    function _ControlFlowError(error) {\n        this.error = error;\n    }\n    return _ControlFlowError;\n}());\nvar _Tokenizer = (function () {\n    /**\n     * @param _file The html source\n     * @param _getTagDefinition\n     * @param _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n     * @param _interpolationConfig\n     */\n    function _Tokenizer(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig) {\n        if (_interpolationConfig === void 0) { _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._file = _file;\n        this._getTagDefinition = _getTagDefinition;\n        this._tokenizeIcu = _tokenizeIcu;\n        this._interpolationConfig = _interpolationConfig;\n        this._peek = -1;\n        this._nextPeek = -1;\n        this._index = -1;\n        this._line = 0;\n        this._column = -1;\n        this._expansionCaseStack = [];\n        this._inInterpolation = false;\n        this.tokens = [];\n        this.errors = [];\n        this._input = _file.content;\n        this._length = _file.content.length;\n        this._advance();\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    _Tokenizer.prototype._processCarriageReturns = /**\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n        // In order to keep the original position in the source, we can not\n        // pre-process it.\n        // Instead CRs are processed right before instantiating the tokens.\n        return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype.tokenize = /**\n     * @return {?}\n     */\n    function () {\n        while (this._peek !== $EOF) {\n            var /** @type {?} */ start = this._getLocation();\n            try {\n                if (this._attemptCharCode($LT)) {\n                    if (this._attemptCharCode($BANG)) {\n                        if (this._attemptCharCode($LBRACKET)) {\n                            this._consumeCdata(start);\n                        }\n                        else if (this._attemptCharCode($MINUS)) {\n                            this._consumeComment(start);\n                        }\n                        else {\n                            this._consumeDocType(start);\n                        }\n                    }\n                    else if (this._attemptCharCode($SLASH)) {\n                        this._consumeTagClose(start);\n                    }\n                    else {\n                        this._consumeTagOpen(start);\n                    }\n                }\n                else if (!(this._tokenizeIcu && this._tokenizeExpansionForm())) {\n                    this._consumeText();\n                }\n            }\n            catch (/** @type {?} */ e) {\n                if (e instanceof _ControlFlowError) {\n                    this.errors.push(e.error);\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        this._beginToken(TokenType$1.EOF);\n        this._endToken([]);\n        return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n    };\n    /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    _Tokenizer.prototype._tokenizeExpansionForm = /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    function () {\n        if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n            this._consumeExpansionFormStart();\n            return true;\n        }\n        if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n            this._consumeExpansionCaseStart();\n            return true;\n        }\n        if (this._peek === $RBRACE) {\n            if (this._isInExpansionCase()) {\n                this._consumeExpansionCaseEnd();\n                return true;\n            }\n            if (this._isInExpansionForm()) {\n                this._consumeExpansionFormEnd();\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._getLocation = /**\n     * @return {?}\n     */\n    function () {\n        return new ParseLocation(this._file, this._index, this._line, this._column);\n    };\n    /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._getSpan = /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    function (start, end) {\n        if (start === void 0) { start = this._getLocation(); }\n        if (end === void 0) { end = this._getLocation(); }\n        return new ParseSourceSpan(start, end);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._beginToken = /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    function (type, start) {\n        if (start === void 0) { start = this._getLocation(); }\n        this._currentTokenStart = start;\n        this._currentTokenType = type;\n    };\n    /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._endToken = /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    function (parts, end) {\n        if (end === void 0) { end = this._getLocation(); }\n        var /** @type {?} */ token = new Token$1(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n        this.tokens.push(token);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return token;\n    };\n    /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    _Tokenizer.prototype._createError = /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    function (msg, span) {\n        if (this._isInExpansionForm()) {\n            msg += \" (Do you have an unescaped \\\"{\\\" in your template? Use \\\"{{ '{' }}\\\") to escape it.)\";\n        }\n        var /** @type {?} */ error = new TokenError(msg, this._currentTokenType, span);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return new _ControlFlowError(error);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._advance = /**\n     * @return {?}\n     */\n    function () {\n        if (this._index >= this._length) {\n            throw this._createError(_unexpectedCharacterErrorMsg($EOF), this._getSpan());\n        }\n        if (this._peek === $LF) {\n            this._line++;\n            this._column = 0;\n        }\n        else if (this._peek !== $LF && this._peek !== $CR) {\n            this._column++;\n        }\n        this._index++;\n        this._peek = this._index >= this._length ? $EOF : this._input.charCodeAt(this._index);\n        this._nextPeek =\n            this._index + 1 >= this._length ? $EOF : this._input.charCodeAt(this._index + 1);\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCode = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        if (this._peek === charCode) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeCaseInsensitive = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCode = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptCharCode(charCode)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n        }\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStr = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        var /** @type {?} */ len = chars.length;\n        if (this._index + len > this._length) {\n            return false;\n        }\n        var /** @type {?} */ initialPosition = this._savePosition();\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            if (!this._attemptCharCode(chars.charCodeAt(i))) {\n                // If attempting to parse the string fails, we want to reset the parser\n                // to where it was before the attempt\n                this._restorePosition(initialPosition);\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStrCaseInsensitive = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        for (var /** @type {?} */ i = 0; i < chars.length; i++) {\n            if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireStr = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptStr(chars)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeUntilFn = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        while (!predicate(this._peek)) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCodeUntilFn = /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    function (predicate, len) {\n        var /** @type {?} */ start = this._getLocation();\n        this._attemptCharCodeUntilFn(predicate);\n        if (this._index - start.offset < len) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n        }\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptUntilChar = /**\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        while (this._peek !== char) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._readChar = /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    function (decodeEntities) {\n        if (decodeEntities && this._peek === $AMPERSAND) {\n            return this._decodeEntity();\n        }\n        else {\n            var /** @type {?} */ index = this._index;\n            this._advance();\n            return this._input[index];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._decodeEntity = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._advance();\n        if (this._attemptCharCode($HASH)) {\n            var /** @type {?} */ isHex = this._attemptCharCode($x) || this._attemptCharCode($X);\n            var /** @type {?} */ numberStart = this._getLocation().offset;\n            this._attemptCharCodeUntilFn(isDigitEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            this._advance();\n            var /** @type {?} */ strNum = this._input.substring(numberStart, this._index - 1);\n            try {\n                var /** @type {?} */ charCode = parseInt(strNum, isHex ? 16 : 10);\n                return String.fromCharCode(charCode);\n            }\n            catch (/** @type {?} */ e) {\n                var /** @type {?} */ entity = this._input.substring(start.offset + 1, this._index - 1);\n                throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n            }\n        }\n        else {\n            var /** @type {?} */ startPosition = this._savePosition();\n            this._attemptCharCodeUntilFn(isNamedEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                this._restorePosition(startPosition);\n                return '&';\n            }\n            this._advance();\n            var /** @type {?} */ name_1 = this._input.substring(start.offset + 1, this._index - 1);\n            var /** @type {?} */ char = NAMED_ENTITIES[name_1];\n            if (!char) {\n                throw this._createError(_unknownEntityErrorMsg(name_1), this._getSpan(start));\n            }\n            return char;\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawText = /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    function (decodeEntities, firstCharOfEnd, attemptEndRest) {\n        var /** @type {?} */ tagCloseStart;\n        var /** @type {?} */ textStart = this._getLocation();\n        this._beginToken(decodeEntities ? TokenType$1.ESCAPABLE_RAW_TEXT : TokenType$1.RAW_TEXT, textStart);\n        var /** @type {?} */ parts = [];\n        while (true) {\n            tagCloseStart = this._getLocation();\n            if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n                break;\n            }\n            if (this._index > tagCloseStart.offset) {\n                // add the characters consumed by the previous if statement to the output\n                parts.push(this._input.substring(tagCloseStart.offset, this._index));\n            }\n            while (this._peek !== firstCharOfEnd) {\n                parts.push(this._readChar(decodeEntities));\n            }\n        }\n        return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeComment = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.COMMENT_START, start);\n        this._requireCharCode($MINUS);\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $MINUS, function () { return _this._attemptStr('->'); });\n        this._beginToken(TokenType$1.COMMENT_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeCdata = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.CDATA_START, start);\n        this._requireStr('CDATA[');\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $RBRACKET, function () { return _this._attemptStr(']>'); });\n        this._beginToken(TokenType$1.CDATA_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeDocType = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.DOC_TYPE, start);\n        this._attemptUntilChar($GT);\n        this._advance();\n        this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumePrefixAndName = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ nameOrPrefixStart = this._index;\n        var /** @type {?} */ prefix = /** @type {?} */ ((null));\n        while (this._peek !== $COLON && !isPrefixEnd(this._peek)) {\n            this._advance();\n        }\n        var /** @type {?} */ nameStart;\n        if (this._peek === $COLON) {\n            this._advance();\n            prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n            nameStart = this._index;\n        }\n        else {\n            nameStart = nameOrPrefixStart;\n        }\n        this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n        var /** @type {?} */ name = this._input.substring(nameStart, this._index);\n        return [prefix, name];\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpen = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ savedPos = this._savePosition();\n        var /** @type {?} */ tagName;\n        var /** @type {?} */ lowercaseTagName;\n        try {\n            if (!isAsciiLetter(this._peek)) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            var /** @type {?} */ nameStart = this._index;\n            this._consumeTagOpenStart(start);\n            tagName = this._input.substring(nameStart, this._index);\n            lowercaseTagName = tagName.toLowerCase();\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            while (this._peek !== $SLASH && this._peek !== $GT) {\n                this._consumeAttributeName();\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n                if (this._attemptCharCode($EQ)) {\n                    this._attemptCharCodeUntilFn(isNotWhitespace);\n                    this._consumeAttributeValue();\n                }\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n            }\n            this._consumeTagOpenEnd();\n        }\n        catch (/** @type {?} */ e) {\n            if (e instanceof _ControlFlowError) {\n                // When the start tag is invalid, assume we want a \"<\"\n                this._restorePosition(savedPos);\n                // Back to back text tokens are merged at the end\n                this._beginToken(TokenType$1.TEXT, start);\n                this._endToken(['<']);\n                return;\n            }\n            throw e;\n        }\n        var /** @type {?} */ contentTokenType = this._getTagDefinition(tagName).contentType;\n        if (contentTokenType === TagContentType.RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, false);\n        }\n        else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, true);\n        }\n    };\n    /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawTextWithTagClose = /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    function (lowercaseTagName, decodeEntities) {\n        var _this = this;\n        var /** @type {?} */ textToken = this._consumeRawText(decodeEntities, $LT, function () {\n            if (!_this._attemptCharCode($SLASH))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            return _this._attemptCharCode($GT);\n        });\n        this._beginToken(TokenType$1.TAG_CLOSE, textToken.sourceSpan.end);\n        this._endToken([/** @type {?} */ ((null)), lowercaseTagName]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenStart = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.TAG_OPEN_START, start);\n        var /** @type {?} */ parts = this._consumePrefixAndName();\n        this._endToken(parts);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeName = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.ATTR_NAME);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeValue = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.ATTR_VALUE);\n        var /** @type {?} */ value;\n        if (this._peek === $SQ || this._peek === $DQ) {\n            var /** @type {?} */ quoteChar = this._peek;\n            this._advance();\n            var /** @type {?} */ parts = [];\n            while (this._peek !== quoteChar) {\n                parts.push(this._readChar(true));\n            }\n            value = parts.join('');\n            this._advance();\n        }\n        else {\n            var /** @type {?} */ valueStart = this._index;\n            this._requireCharCodeUntilFn(isNameEnd, 1);\n            value = this._input.substring(valueStart, this._index);\n        }\n        this._endToken([this._processCarriageReturns(value)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenEnd = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tokenType = this._attemptCharCode($SLASH) ? TokenType$1.TAG_OPEN_END_VOID : TokenType$1.TAG_OPEN_END;\n        this._beginToken(tokenType);\n        this._requireCharCode($GT);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagClose = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.TAG_CLOSE, start);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._requireCharCode($GT);\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormStart = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_FORM_START);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ condition = this._readUntil($COMMA);\n        this._endToken([condition], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ type = this._readUntil($COMMA);\n        this._endToken([type], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseStart = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_VALUE, this._getLocation());\n        var /** @type {?} */ value = this._readUntil($LBRACE).trim();\n        this._endToken([value], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_CASE_EXP_START);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseEnd = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormEnd = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeText = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._beginToken(TokenType$1.TEXT, start);\n        var /** @type {?} */ parts = [];\n        do {\n            if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n                parts.push(this._interpolationConfig.start);\n                this._inInterpolation = true;\n            }\n            else if (this._interpolationConfig && this._inInterpolation &&\n                this._attemptStr(this._interpolationConfig.end)) {\n                parts.push(this._interpolationConfig.end);\n                this._inInterpolation = false;\n            }\n            else {\n                parts.push(this._readChar(true));\n            }\n        } while (!this._isTextEnd());\n        this._endToken([this._processCarriageReturns(parts.join(''))]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isTextEnd = /**\n     * @return {?}\n     */\n    function () {\n        if (this._peek === $LT || this._peek === $EOF) {\n            return true;\n        }\n        if (this._tokenizeIcu && !this._inInterpolation) {\n            if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                // start of an expansion form\n                return true;\n            }\n            if (this._peek === $RBRACE && this._isInExpansionCase()) {\n                // end of and expansion case\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._savePosition = /**\n     * @return {?}\n     */\n    function () {\n        return [this._peek, this._index, this._column, this._line, this.tokens.length];\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._readUntil = /**\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        var /** @type {?} */ start = this._index;\n        this._attemptUntilChar(char);\n        return this._input.substring(start, this._index);\n    };\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    _Tokenizer.prototype._restorePosition = /**\n     * @param {?} position\n     * @return {?}\n     */\n    function (position) {\n        this._peek = position[0];\n        this._index = position[1];\n        this._column = position[2];\n        this._line = position[3];\n        var /** @type {?} */ nbTokens = position[4];\n        if (nbTokens < this.tokens.length) {\n            // remove any extra tokens\n            this.tokens = this.tokens.slice(0, nbTokens);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionCase = /**\n     * @return {?}\n     */\n    function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_CASE_EXP_START;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionForm = /**\n     * @return {?}\n     */\n    function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_FORM_START;\n    };\n    return _Tokenizer;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNotWhitespace(code) {\n    return !isWhitespace(code) || code === $EOF;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNameEnd(code) {\n    return isWhitespace(code) || code === $GT || code === $SLASH ||\n        code === $SQ || code === $DQ || code === $EQ;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isPrefixEnd(code) {\n    return (code < $a || $z < code) && (code < $A || $Z < code) &&\n        (code < $0 || code > $9);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigitEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiHexDigit(code);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNamedEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiLetter(code);\n}\n/**\n * @param {?} input\n * @param {?} offset\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction isExpansionFormStart(input, offset, interpolationConfig) {\n    var /** @type {?} */ isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n    return input.charCodeAt(offset) == $LBRACE && !isInterpolationStart;\n}\n/**\n * @param {?} peek\n * @return {?}\n */\nfunction isExpansionCaseStart(peek) {\n    return peek === $EQ || isAsciiLetter(peek) || isDigit(peek);\n}\n/**\n * @param {?} code1\n * @param {?} code2\n * @return {?}\n */\nfunction compareCharCodeCaseInsensitive(code1, code2) {\n    return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction toUpperCaseCharCode(code) {\n    return code >= $a && code <= $z ? code - $a + $A : code;\n}\n/**\n * @param {?} srcTokens\n * @return {?}\n */\nfunction mergeTextTokens(srcTokens) {\n    var /** @type {?} */ dstTokens = [];\n    var /** @type {?} */ lastDstToken = undefined;\n    for (var /** @type {?} */ i = 0; i < srcTokens.length; i++) {\n        var /** @type {?} */ token = srcTokens[i];\n        if (lastDstToken && lastDstToken.type == TokenType$1.TEXT && token.type == TokenType$1.TEXT) {\n            lastDstToken.parts[0] += token.parts[0];\n            lastDstToken.sourceSpan.end = token.sourceSpan.end;\n        }\n        else {\n            lastDstToken = token;\n            dstTokens.push(lastDstToken);\n        }\n    }\n    return dstTokens;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TreeError = (function (_super) {\n    __extends(TreeError, _super);\n    function TreeError(elementName, span, msg) {\n        var _this = _super.call(this, span, msg) || this;\n        _this.elementName = elementName;\n        return _this;\n    }\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    TreeError.create = /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    function (elementName, span, msg) {\n        return new TreeError(elementName, span, msg);\n    };\n    return TreeError;\n}(ParseError));\nvar ParseTreeResult = (function () {\n    function ParseTreeResult(rootNodes, errors) {\n        this.rootNodes = rootNodes;\n        this.errors = errors;\n    }\n    return ParseTreeResult;\n}());\nvar Parser$1 = (function () {\n    function Parser(getTagDefinition) {\n        this.getTagDefinition = getTagDefinition;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ tokensAndErrors = tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n        var /** @type {?} */ treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n        return new ParseTreeResult(treeAndErrors.rootNodes, (/** @type {?} */ (tokensAndErrors.errors)).concat(treeAndErrors.errors));\n    };\n    return Parser;\n}());\nvar _TreeBuilder = (function () {\n    function _TreeBuilder(tokens, getTagDefinition) {\n        this.tokens = tokens;\n        this.getTagDefinition = getTagDefinition;\n        this._index = -1;\n        this._rootNodes = [];\n        this._errors = [];\n        this._elementStack = [];\n        this._advance();\n    }\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype.build = /**\n     * @return {?}\n     */\n    function () {\n        while (this._peek.type !== TokenType$1.EOF) {\n            if (this._peek.type === TokenType$1.TAG_OPEN_START) {\n                this._consumeStartTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TAG_CLOSE) {\n                this._consumeEndTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.CDATA_START) {\n                this._closeVoidElement();\n                this._consumeCdata(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.COMMENT_START) {\n                this._closeVoidElement();\n                this._consumeComment(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TEXT || this._peek.type === TokenType$1.RAW_TEXT ||\n                this._peek.type === TokenType$1.ESCAPABLE_RAW_TEXT) {\n                this._closeVoidElement();\n                this._consumeText(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.EXPANSION_FORM_START) {\n                this._consumeExpansion(this._advance());\n            }\n            else {\n                // Skip all other tokens...\n                this._advance();\n            }\n        }\n        return new ParseTreeResult(this._rootNodes, this._errors);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advance = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ prev = this._peek;\n        if (this._index < this.tokens.length - 1) {\n            // Note: there is always an EOF token at the end\n            this._index++;\n        }\n        this._peek = this.tokens[this._index];\n        return prev;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advanceIf = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (this._peek.type === type) {\n            return this._advance();\n        }\n        return null;\n    };\n    /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeCdata = /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    function (startToken) {\n        this._consumeText(this._advance());\n        this._advanceIf(TokenType$1.CDATA_END);\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeComment = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ text = this._advanceIf(TokenType$1.RAW_TEXT);\n        this._advanceIf(TokenType$1.COMMENT_END);\n        var /** @type {?} */ value = text != null ? text.parts[0].trim() : null;\n        this._addToParent(new Comment(value, token.sourceSpan));\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeExpansion = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ switchValue = this._advance();\n        var /** @type {?} */ type = this._advance();\n        var /** @type {?} */ cases = [];\n        // read =\n        while (this._peek.type === TokenType$1.EXPANSION_CASE_VALUE) {\n            var /** @type {?} */ expCase = this._parseExpansionCase();\n            if (!expCase)\n                return; // error\n            cases.push(expCase);\n        }\n        // read the final }\n        if (this._peek.type !== TokenType$1.EXPANSION_FORM_END) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n            return;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n        this._addToParent(new Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n        this._advance();\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._parseExpansionCase = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ value = this._advance();\n        // read {\n        if (this._peek.type !== TokenType$1.EXPANSION_CASE_EXP_START) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '{'.\"));\n            return null;\n        }\n        // read until }\n        var /** @type {?} */ start = this._advance();\n        var /** @type {?} */ exp = this._collectExpansionExpTokens(start);\n        if (!exp)\n            return null;\n        var /** @type {?} */ end = this._advance();\n        exp.push(new Token$1(TokenType$1.EOF, [], end.sourceSpan));\n        // parse everything in between { and }\n        var /** @type {?} */ parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n        if (parsedExp.errors.length > 0) {\n            this._errors = this._errors.concat(/** @type {?} */ (parsedExp.errors));\n            return null;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n        var /** @type {?} */ expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n        return new ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _TreeBuilder.prototype._collectExpansionExpTokens = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ exp = [];\n        var /** @type {?} */ expansionFormStack = [TokenType$1.EXPANSION_CASE_EXP_START];\n        while (true) {\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_START ||\n                this._peek.type === TokenType$1.EXPANSION_CASE_EXP_START) {\n                expansionFormStack.push(this._peek.type);\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_CASE_EXP_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_CASE_EXP_START)) {\n                    expansionFormStack.pop();\n                    if (expansionFormStack.length == 0)\n                        return exp;\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_FORM_START)) {\n                    expansionFormStack.pop();\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EOF) {\n                this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                return null;\n            }\n            exp.push(this._advance());\n        }\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeText = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ text = token.parts[0];\n        if (text.length > 0 && text[0] == '\\n') {\n            var /** @type {?} */ parent_1 = this._getParentElement();\n            if (parent_1 != null && parent_1.children.length == 0 &&\n                this.getTagDefinition(parent_1.name).ignoreFirstLf) {\n                text = text.substring(1);\n            }\n        }\n        if (text.length > 0) {\n            this._addToParent(new Text(text, token.sourceSpan));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._closeVoidElement = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ el = this._getParentElement();\n        if (el && this.getTagDefinition(el.name).isVoid) {\n            this._elementStack.pop();\n        }\n    };\n    /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeStartTag = /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    function (startTagToken) {\n        var /** @type {?} */ prefix = startTagToken.parts[0];\n        var /** @type {?} */ name = startTagToken.parts[1];\n        var /** @type {?} */ attrs = [];\n        while (this._peek.type === TokenType$1.ATTR_NAME) {\n            attrs.push(this._consumeAttr(this._advance()));\n        }\n        var /** @type {?} */ fullName = this._getElementFullName(prefix, name, this._getParentElement());\n        var /** @type {?} */ selfClosing = false;\n        // Note: There could have been a tokenizer error\n        // so that we don't get a token for the end tag...\n        if (this._peek.type === TokenType$1.TAG_OPEN_END_VOID) {\n            this._advance();\n            selfClosing = true;\n            var /** @type {?} */ tagDef = this.getTagDefinition(fullName);\n            if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n                this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\n            }\n        }\n        else if (this._peek.type === TokenType$1.TAG_OPEN_END) {\n            this._advance();\n            selfClosing = false;\n        }\n        var /** @type {?} */ end = this._peek.sourceSpan.start;\n        var /** @type {?} */ span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n        var /** @type {?} */ el = new Element(fullName, attrs, [], span, span, undefined);\n        this._pushElement(el);\n        if (selfClosing) {\n            this._popElement(fullName);\n            el.endSourceSpan = span;\n        }\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _TreeBuilder.prototype._pushElement = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var /** @type {?} */ parentEl = this._getParentElement();\n        if (parentEl && this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n            this._elementStack.pop();\n        }\n        var /** @type {?} */ tagDef = this.getTagDefinition(el.name);\n        var _a = this._getParentElementSkippingContainers(), parent = _a.parent, container = _a.container;\n        if (parent && tagDef.requireExtraParent(parent.name)) {\n            var /** @type {?} */ newParent = new Element(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n            this._insertBeforeContainer(parent, container, newParent);\n        }\n        this._addToParent(el);\n        this._elementStack.push(el);\n    };\n    /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeEndTag = /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    function (endTagToken) {\n        var /** @type {?} */ fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n        if (this._getParentElement()) {\n            /** @type {?} */ ((this._getParentElement())).endSourceSpan = endTagToken.sourceSpan;\n        }\n        if (this.getTagDefinition(fullName).isVoid) {\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n        }\n        else if (!this._popElement(fullName)) {\n            var /** @type {?} */ errMsg = \"Unexpected closing tag \\\"\" + fullName + \"\\\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags\";\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n        }\n    };\n    /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._popElement = /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    function (fullName) {\n        for (var /** @type {?} */ stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n            var /** @type {?} */ el = this._elementStack[stackIndex];\n            if (el.name == fullName) {\n                this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n                return true;\n            }\n            if (!this.getTagDefinition(el.name).closedByParent) {\n                return false;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeAttr = /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    function (attrName) {\n        var /** @type {?} */ fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n        var /** @type {?} */ end = attrName.sourceSpan.end;\n        var /** @type {?} */ value = '';\n        var /** @type {?} */ valueSpan = /** @type {?} */ ((undefined));\n        if (this._peek.type === TokenType$1.ATTR_VALUE) {\n            var /** @type {?} */ valueToken = this._advance();\n            value = valueToken.parts[0];\n            end = valueToken.sourceSpan.end;\n            valueSpan = valueToken.sourceSpan;\n        }\n        return new Attribute$1(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElement = /**\n     * @return {?}\n     */\n    function () {\n        return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n    };\n    /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElementSkippingContainers = /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ container = null;\n        for (var /** @type {?} */ i = this._elementStack.length - 1; i >= 0; i--) {\n            if (!isNgContainer(this._elementStack[i].name)) {\n                return { parent: this._elementStack[i], container: container };\n            }\n            container = this._elementStack[i];\n        }\n        return { parent: null, container: container };\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._addToParent = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        var /** @type {?} */ parent = this._getParentElement();\n        if (parent != null) {\n            parent.children.push(node);\n        }\n        else {\n            this._rootNodes.push(node);\n        }\n    };\n    /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._insertBeforeContainer = /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    function (parent, container, node) {\n        if (!container) {\n            this._addToParent(node);\n            this._elementStack.push(node);\n        }\n        else {\n            if (parent) {\n                // replace the container with the new node in the children\n                var /** @type {?} */ index = parent.children.indexOf(container);\n                parent.children[index] = node;\n            }\n            else {\n                this._rootNodes.push(node);\n            }\n            node.children.push(container);\n            this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n        }\n    };\n    /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getElementFullName = /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    function (prefix, localName, parentElement) {\n        if (prefix == null) {\n            prefix = /** @type {?} */ ((this.getTagDefinition(localName).implicitNamespacePrefix));\n            if (prefix == null && parentElement != null) {\n                prefix = getNsPrefix(parentElement.name);\n            }\n        }\n        return mergeNsAndName(prefix, localName);\n    };\n    return _TreeBuilder;\n}());\n/**\n * @param {?} stack\n * @param {?} element\n * @return {?}\n */\nfunction lastOnStack(stack, element) {\n    return stack.length > 0 && stack[stack.length - 1] === element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest(message) {\n    return message.id || sha1(serializeNodes(message.nodes).join('') + (\"[\" + message.meaning + \"]\"));\n}\n/**\n * @param {?} message\n * @return {?}\n */\nfunction decimalDigest(message) {\n    if (message.id) {\n        return message.id;\n    }\n    var /** @type {?} */ visitor = new _SerializerIgnoreIcuExpVisitor();\n    var /** @type {?} */ parts = message.nodes.map(function (a) { return a.visit(visitor, null); });\n    return computeMsgId(parts.join(''), message.meaning);\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * \\@internal\n */\nvar _SerializerVisitor = (function () {\n    function _SerializerVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        return \"[\" + container.children.map(function (child) { return child.visit(_this); }).join(', ') + \"]\";\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        return \"{\" + icu.expression + \", \" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        return ph.isVoid ?\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\"/>\" :\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\">\" + ph.children.map(function (child) { return child.visit(_this); }).join(', ') + \"</ph name=\\\"\" + ph.closeName + \"\\\">\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return ph.value ? \"<ph name=\\\"\" + ph.name + \"\\\">\" + ph.value + \"</ph>\" : \"<ph name=\\\"\" + ph.name + \"\\\"/>\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return \"<ph icu name=\\\"\" + ph.name + \"\\\">\" + ph.value.visit(this) + \"</ph>\";\n    };\n    return _SerializerVisitor;\n}());\nvar serializerVisitor = new _SerializerVisitor();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serializeNodes(nodes) {\n    return nodes.map(function (a) { return a.visit(serializerVisitor, null); });\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n *\n * \\@internal\n */\nvar _SerializerIgnoreIcuExpVisitor = (function (_super) {\n    __extends(_SerializerIgnoreIcuExpVisitor, _super);\n    function _SerializerIgnoreIcuExpVisitor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerIgnoreIcuExpVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // Do not take the expression into account\n        return \"{\" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    return _SerializerIgnoreIcuExpVisitor;\n}(_SerializerVisitor));\n/**\n * Compute the SHA1 of the given string\n *\n * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n * @param {?} str\n * @return {?}\n */\nfunction sha1(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var /** @type {?} */ words32 = stringToWords32(utf8, Endian.Big);\n    var /** @type {?} */ len = utf8.length * 8;\n    var /** @type {?} */ w = new Array(80);\n    var _a = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], a = _a[0], b = _a[1], c = _a[2], d = _a[3], e = _a[4];\n    words32[len >> 5] |= 0x80 << (24 - len % 32);\n    words32[((len + 64 >> 9) << 4) + 15] = len;\n    for (var /** @type {?} */ i = 0; i < words32.length; i += 16) {\n        var _b = [a, b, c, d, e], h0 = _b[0], h1 = _b[1], h2 = _b[2], h3 = _b[3], h4 = _b[4];\n        for (var /** @type {?} */ j = 0; j < 80; j++) {\n            if (j < 16) {\n                w[j] = words32[i + j];\n            }\n            else {\n                w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            }\n            var _c = fk(j, b, c, d), f = _c[0], k = _c[1];\n            var /** @type {?} */ temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n            _d = [d, c, rol32(b, 30), a, temp], e = _d[0], d = _d[1], c = _d[2], b = _d[3], a = _d[4];\n        }\n        _e = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)], a = _e[0], b = _e[1], c = _e[2], d = _e[3], e = _e[4];\n    }\n    return byteStringToHexString(words32ToByteString([a, b, c, d, e]));\n    var _d, _e;\n}\n/**\n * @param {?} index\n * @param {?} b\n * @param {?} c\n * @param {?} d\n * @return {?}\n */\nfunction fk(index, b, c, d) {\n    if (index < 20) {\n        return [(b & c) | (~b & d), 0x5a827999];\n    }\n    if (index < 40) {\n        return [b ^ c ^ d, 0x6ed9eba1];\n    }\n    if (index < 60) {\n        return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n    }\n    return [b ^ c ^ d, 0xca62c1d6];\n}\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n * @param {?} str\n * @return {?}\n */\nfunction fingerprint(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var _a = [hash32(utf8, 0), hash32(utf8, 102072)], hi = _a[0], lo = _a[1];\n    if (hi == 0 && (lo == 0 || lo == 1)) {\n        hi = hi ^ 0x130f9bef;\n        lo = lo ^ -0x6b5f56d8;\n    }\n    return [hi, lo];\n}\n/**\n * @param {?} msg\n * @param {?} meaning\n * @return {?}\n */\nfunction computeMsgId(msg, meaning) {\n    var _a = fingerprint(msg), hi = _a[0], lo = _a[1];\n    if (meaning) {\n        var _b = fingerprint(meaning), him = _b[0], lom = _b[1];\n        _c = add64(rol64([hi, lo], 1), [him, lom]), hi = _c[0], lo = _c[1];\n    }\n    return byteStringToDecString(words32ToByteString([hi & 0x7fffffff, lo]));\n    var _c;\n}\n/**\n * @param {?} str\n * @param {?} c\n * @return {?}\n */\nfunction hash32(str, c) {\n    var _a = [0x9e3779b9, 0x9e3779b9], a = _a[0], b = _a[1];\n    var /** @type {?} */ i;\n    var /** @type {?} */ len = str.length;\n    for (i = 0; i + 12 <= len; i += 12) {\n        a = add32(a, wordAt(str, i, Endian.Little));\n        b = add32(b, wordAt(str, i + 4, Endian.Little));\n        c = add32(c, wordAt(str, i + 8, Endian.Little));\n        _b = mix([a, b, c]), a = _b[0], b = _b[1], c = _b[2];\n    }\n    a = add32(a, wordAt(str, i, Endian.Little));\n    b = add32(b, wordAt(str, i + 4, Endian.Little));\n    // the first byte of c is reserved for the length\n    c = add32(c, len);\n    c = add32(c, wordAt(str, i + 8, Endian.Little) << 8);\n    return mix([a, b, c])[2];\n    var _b;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction mix(_a) {\n    var a = _a[0], b = _a[1], c = _a[2];\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 13;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 8;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 13;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 12;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 16;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 5;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 3;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 10;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 15;\n    return [a, b, c];\n}\n/** @enum {number} */\nvar Endian = {\n    Little: 0,\n    Big: 1,\n};\nEndian[Endian.Little] = \"Little\";\nEndian[Endian.Big] = \"Big\";\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32(a, b) {\n    return add32to64(a, b)[1];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32to64(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) + (b & 0xffff);\n    var /** @type {?} */ high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n    return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\n/**\n * @param {?} __0\n * @param {?} __1\n * @return {?}\n */\nfunction add64(_a, _b) {\n    var ah = _a[0], al = _a[1];\n    var bh = _b[0], bl = _b[1];\n    var _c = add32to64(al, bl), carry = _c[0], l = _c[1];\n    var /** @type {?} */ h = add32(add32(ah, bh), carry);\n    return [h, l];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction sub32(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) - (b & 0xffff);\n    var /** @type {?} */ high = (a >> 16) - (b >> 16) + (low >> 16);\n    return (high << 16) | (low & 0xffff);\n}\n/**\n * @param {?} a\n * @param {?} count\n * @return {?}\n */\nfunction rol32(a, count) {\n    return (a << count) | (a >>> (32 - count));\n}\n/**\n * @param {?} __0\n * @param {?} count\n * @return {?}\n */\nfunction rol64(_a, count) {\n    var hi = _a[0], lo = _a[1];\n    var /** @type {?} */ h = (hi << count) | (lo >>> (32 - count));\n    var /** @type {?} */ l = (lo << count) | (hi >>> (32 - count));\n    return [h, l];\n}\n/**\n * @param {?} str\n * @param {?} endian\n * @return {?}\n */\nfunction stringToWords32(str, endian) {\n    var /** @type {?} */ words32 = Array((str.length + 3) >>> 2);\n    for (var /** @type {?} */ i = 0; i < words32.length; i++) {\n        words32[i] = wordAt(str, i * 4, endian);\n    }\n    return words32;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @return {?}\n */\nfunction byteAt(str, index) {\n    return index >= str.length ? 0 : str.charCodeAt(index) & 0xff;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @param {?} endian\n * @return {?}\n */\nfunction wordAt(str, index, endian) {\n    var /** @type {?} */ word = 0;\n    if (endian === Endian.Big) {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << (24 - 8 * i);\n        }\n    }\n    else {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << 8 * i;\n        }\n    }\n    return word;\n}\n/**\n * @param {?} words32\n * @return {?}\n */\nfunction words32ToByteString(words32) {\n    return words32.reduce(function (str, word) { return str + word32ToByteString(word); }, '');\n}\n/**\n * @param {?} word\n * @return {?}\n */\nfunction word32ToByteString(word) {\n    var /** @type {?} */ str = '';\n    for (var /** @type {?} */ i = 0; i < 4; i++) {\n        str += String.fromCharCode((word >>> 8 * (3 - i)) & 0xff);\n    }\n    return str;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToHexString(str) {\n    var /** @type {?} */ hex = '';\n    for (var /** @type {?} */ i = 0; i < str.length; i++) {\n        var /** @type {?} */ b = byteAt(str, i);\n        hex += (b >>> 4).toString(16) + (b & 0x0f).toString(16);\n    }\n    return hex.toLowerCase();\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToDecString(str) {\n    var /** @type {?} */ decimal = '';\n    var /** @type {?} */ toThePower = '1';\n    for (var /** @type {?} */ i = str.length - 1; i >= 0; i--) {\n        decimal = addBigInt(decimal, numberTimesBigInt(byteAt(str, i), toThePower));\n        toThePower = numberTimesBigInt(256, toThePower);\n    }\n    return decimal.split('').reverse().join('');\n}\n/**\n * @param {?} x\n * @param {?} y\n * @return {?}\n */\nfunction addBigInt(x, y) {\n    var /** @type {?} */ sum = '';\n    var /** @type {?} */ len = Math.max(x.length, y.length);\n    for (var /** @type {?} */ i = 0, /** @type {?} */ carry = 0; i < len || carry; i++) {\n        var /** @type {?} */ tmpSum = carry + +(x[i] || 0) + +(y[i] || 0);\n        if (tmpSum >= 10) {\n            carry = 1;\n            sum += tmpSum - 10;\n        }\n        else {\n            carry = 0;\n            sum += tmpSum;\n        }\n    }\n    return sum;\n}\n/**\n * @param {?} num\n * @param {?} b\n * @return {?}\n */\nfunction numberTimesBigInt(num, b) {\n    var /** @type {?} */ product = '';\n    var /** @type {?} */ bToThePower = b;\n    for (; num !== 0; num = num >>> 1) {\n        if (num & 1)\n            product = addBigInt(product, bToThePower);\n        bToThePower = addBigInt(bToThePower, bToThePower);\n    }\n    return product;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar Message = (function () {\n    /**\n     * @param nodes message AST\n     * @param placeholders maps placeholder names to static content\n     * @param placeholderToMessage maps placeholder names to messages (used for nested ICU messages)\n     * @param meaning\n     * @param description\n     * @param id\n     */\n    function Message(nodes, placeholders, placeholderToMessage, meaning, description, id) {\n        this.nodes = nodes;\n        this.placeholders = placeholders;\n        this.placeholderToMessage = placeholderToMessage;\n        this.meaning = meaning;\n        this.description = description;\n        this.id = id;\n        if (nodes.length) {\n            this.sources = [{\n                    filePath: nodes[0].sourceSpan.start.file.url,\n                    startLine: nodes[0].sourceSpan.start.line + 1,\n                    startCol: nodes[0].sourceSpan.start.col + 1,\n                    endLine: nodes[nodes.length - 1].sourceSpan.end.line + 1,\n                    endCol: nodes[0].sourceSpan.start.col + 1\n                }];\n        }\n        else {\n            this.sources = [];\n        }\n    }\n    return Message;\n}());\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar Text$1 = (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Container = (function () {\n    function Container(children, sourceSpan) {\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Container.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitContainer(this, context); };\n    return Container;\n}());\nvar Icu = (function () {\n    function Icu(expression, type, cases, sourceSpan) {\n        this.expression = expression;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Icu.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitIcu(this, context); };\n    return Icu;\n}());\nvar TagPlaceholder = (function () {\n    function TagPlaceholder(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n        this.tag = tag;\n        this.attrs = attrs;\n        this.startName = startName;\n        this.closeName = closeName;\n        this.children = children;\n        this.isVoid = isVoid;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    TagPlaceholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitTagPlaceholder(this, context); };\n    return TagPlaceholder;\n}());\nvar Placeholder = (function () {\n    function Placeholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Placeholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitPlaceholder(this, context); };\n    return Placeholder;\n}());\nvar IcuPlaceholder = (function () {\n    function IcuPlaceholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    IcuPlaceholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitIcuPlaceholder(this, context); };\n    return IcuPlaceholder;\n}());\n/**\n * @record\n */\n\nvar CloneVisitor = (function () {\n    function CloneVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ children = container.children.map(function (n) { return n.visit(_this, context); });\n        return new Container(children, container.sourceSpan);\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = {};\n        Object.keys(icu.cases).forEach(function (key) { return cases[key] = icu.cases[key].visit(_this, context); });\n        var /** @type {?} */ msg = new Icu(icu.expression, icu.type, cases, icu.sourceSpan);\n        msg.expressionPlaceholder = icu.expressionPlaceholder;\n        return msg;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, context); });\n        return new TagPlaceholder(ph.tag, ph.attrs, ph.startName, ph.closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return new Placeholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return new IcuPlaceholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    return CloneVisitor;\n}());\nvar RecurseVisitor = (function () {\n    function RecurseVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        container.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        Object.keys(icu.cases).forEach(function (k) { icu.cases[k].visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        ph.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { };\n    return RecurseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlTagDefinition = (function () {\n    function HtmlTagDefinition(_a) {\n        var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, _c = _b.contentType, contentType = _c === void 0 ? TagContentType.PARSABLE_DATA : _c, _d = _b.closedByParent, closedByParent = _d === void 0 ? false : _d, _e = _b.isVoid, isVoid = _e === void 0 ? false : _e, _f = _b.ignoreFirstLf, ignoreFirstLf = _f === void 0 ? false : _f;\n        var _this = this;\n        this.closedByChildren = {};\n        this.closedByParent = false;\n        this.canSelfClose = false;\n        if (closedByChildren && closedByChildren.length > 0) {\n            closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\n        }\n        this.isVoid = isVoid;\n        this.closedByParent = closedByParent || isVoid;\n        if (requiredParents && requiredParents.length > 0) {\n            this.requiredParents = {};\n            // The first parent is the list is automatically when none of the listed parents are present\n            this.parentToAdd = requiredParents[0];\n            requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\n        }\n        this.implicitNamespacePrefix = implicitNamespacePrefix || null;\n        this.contentType = contentType;\n        this.ignoreFirstLf = ignoreFirstLf;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.requireExtraParent = /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    function (currentParent) {\n        if (!this.requiredParents) {\n            return false;\n        }\n        if (!currentParent) {\n            return true;\n        }\n        var /** @type {?} */ lcParent = currentParent.toLowerCase();\n        var /** @type {?} */ isParentTemplate = lcParent === 'template' || currentParent === 'ng-template';\n        return !isParentTemplate && this.requiredParents[lcParent] != true;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.isClosedByChild = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.isVoid || name.toLowerCase() in this.closedByChildren;\n    };\n    return HtmlTagDefinition;\n}());\n// see http://www.w3.org/TR/html51/syntax.html#optional-tags\n// This implementation does not fully conform to the HTML5 spec.\nvar TAG_DEFINITIONS = {\n    'base': new HtmlTagDefinition({ isVoid: true }),\n    'meta': new HtmlTagDefinition({ isVoid: true }),\n    'area': new HtmlTagDefinition({ isVoid: true }),\n    'embed': new HtmlTagDefinition({ isVoid: true }),\n    'link': new HtmlTagDefinition({ isVoid: true }),\n    'img': new HtmlTagDefinition({ isVoid: true }),\n    'input': new HtmlTagDefinition({ isVoid: true }),\n    'param': new HtmlTagDefinition({ isVoid: true }),\n    'hr': new HtmlTagDefinition({ isVoid: true }),\n    'br': new HtmlTagDefinition({ isVoid: true }),\n    'source': new HtmlTagDefinition({ isVoid: true }),\n    'track': new HtmlTagDefinition({ isVoid: true }),\n    'wbr': new HtmlTagDefinition({ isVoid: true }),\n    'p': new HtmlTagDefinition({\n        closedByChildren: [\n            'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset', 'footer', 'form',\n            'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr',\n            'main', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'\n        ],\n        closedByParent: true\n    }),\n    'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n    'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n    'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n    'tr': new HtmlTagDefinition({\n        closedByChildren: ['tr'],\n        requiredParents: ['tbody', 'tfoot', 'thead'],\n        closedByParent: true\n    }),\n    'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n    'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n    'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n    'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n    'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n    'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n    'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n    'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n    'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n    'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'style': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'script': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'title': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT }),\n    'textarea': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n};\nvar _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getHtmlTagDefinition(tagName) {\n    return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TAG_TO_PLACEHOLDER_NAMES = {\n    'A': 'LINK',\n    'B': 'BOLD_TEXT',\n    'BR': 'LINE_BREAK',\n    'EM': 'EMPHASISED_TEXT',\n    'H1': 'HEADING_LEVEL1',\n    'H2': 'HEADING_LEVEL2',\n    'H3': 'HEADING_LEVEL3',\n    'H4': 'HEADING_LEVEL4',\n    'H5': 'HEADING_LEVEL5',\n    'H6': 'HEADING_LEVEL6',\n    'HR': 'HORIZONTAL_RULE',\n    'I': 'ITALIC_TEXT',\n    'LI': 'LIST_ITEM',\n    'LINK': 'MEDIA_LINK',\n    'OL': 'ORDERED_LIST',\n    'P': 'PARAGRAPH',\n    'Q': 'QUOTATION',\n    'S': 'STRIKETHROUGH_TEXT',\n    'SMALL': 'SMALL_TEXT',\n    'SUB': 'SUBSTRIPT',\n    'SUP': 'SUPERSCRIPT',\n    'TBODY': 'TABLE_BODY',\n    'TD': 'TABLE_CELL',\n    'TFOOT': 'TABLE_FOOTER',\n    'TH': 'TABLE_HEADER_CELL',\n    'THEAD': 'TABLE_HEADER',\n    'TR': 'TABLE_ROW',\n    'TT': 'MONOSPACED_TEXT',\n    'U': 'UNDERLINED_TEXT',\n    'UL': 'UNORDERED_LIST',\n};\n/**\n * Creates unique names for placeholder with different content.\n *\n * Returns the same placeholder name when the content is identical.\n *\n * \\@internal\n */\nvar PlaceholderRegistry = (function () {\n    function PlaceholderRegistry() {\n        this._placeHolderNameCounts = {};\n        this._signatureToName = {};\n    }\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getStartTagPlaceholderName = /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    function (tag, attrs, isVoid) {\n        var /** @type {?} */ signature = this._hashTag(tag, attrs, isVoid);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(isVoid ? baseName : \"START_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getCloseTagPlaceholderName = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var /** @type {?} */ signature = this._hashClosingTag(tag);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(\"CLOSE_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getPlaceholderName = /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    function (name, content) {\n        var /** @type {?} */ upperName = name.toUpperCase();\n        var /** @type {?} */ signature = \"PH: \" + upperName + \"=\" + content;\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ uniqueName = this._generateUniqueName(upperName);\n        this._signatureToName[signature] = uniqueName;\n        return uniqueName;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getUniquePlaceholder = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this._generateUniqueName(name.toUpperCase());\n    };\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashTag = /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    function (tag, attrs, isVoid) {\n        var /** @type {?} */ start = \"<\" + tag;\n        var /** @type {?} */ strAttrs = Object.keys(attrs).sort().map(function (name) { return \" \" + name + \"=\" + attrs[name]; }).join('');\n        var /** @type {?} */ end = isVoid ? '/>' : \"></\" + tag + \">\";\n        return start + strAttrs + end;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashClosingTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) { return this._hashTag(\"/\" + tag, {}, false); };\n    /**\n     * @param {?} base\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._generateUniqueName = /**\n     * @param {?} base\n     * @return {?}\n     */\n    function (base) {\n        var /** @type {?} */ seen = this._placeHolderNameCounts.hasOwnProperty(base);\n        if (!seen) {\n            this._placeHolderNameCounts[base] = 1;\n            return base;\n        }\n        var /** @type {?} */ id = this._placeHolderNameCounts[base];\n        this._placeHolderNameCounts[base] = id + 1;\n        return base + \"_\" + id;\n    };\n    return PlaceholderRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _expParser = new Parser(new Lexer());\n/**\n * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction createI18nMessageFactory(interpolationConfig) {\n    var /** @type {?} */ visitor = new _I18nVisitor(_expParser, interpolationConfig);\n    return function (nodes, meaning, description, id) {\n        return visitor.toI18nMessage(nodes, meaning, description, id);\n    };\n}\nvar _I18nVisitor = (function () {\n    function _I18nVisitor(_expressionParser, _interpolationConfig) {\n        this._expressionParser = _expressionParser;\n        this._interpolationConfig = _interpolationConfig;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    _I18nVisitor.prototype.toI18nMessage = /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    function (nodes, meaning, description, id) {\n        this._isIcu = nodes.length == 1 && nodes[0] instanceof Expansion;\n        this._icuDepth = 0;\n        this._placeholderRegistry = new PlaceholderRegistry();\n        this._placeholderToContent = {};\n        this._placeholderToMessage = {};\n        var /** @type {?} */ i18nodes = visitAll(this, nodes, {});\n        return new Message(i18nodes, this._placeholderToContent, this._placeholderToMessage, meaning, description, id);\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var /** @type {?} */ children = visitAll(this, el.children);\n        var /** @type {?} */ attrs = {};\n        el.attrs.forEach(function (attr) {\n            // Do not visit the attributes, translatable ones are top-level ASTs\n            attrs[attr.name] = attr.value;\n        });\n        var /** @type {?} */ isVoid = getHtmlTagDefinition(el.name).isVoid;\n        var /** @type {?} */ startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n        this._placeholderToContent[startPhName] = /** @type {?} */ ((el.sourceSpan)).toString();\n        var /** @type {?} */ closePhName = '';\n        if (!isVoid) {\n            closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n            this._placeholderToContent[closePhName] = \"</\" + el.name + \">\";\n        }\n        return new TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, /** @type {?} */ ((el.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        return this._visitTextWithInterpolation(text.value, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        this._icuDepth++;\n        var /** @type {?} */ i18nIcuCases = {};\n        var /** @type {?} */ i18nIcu = new Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n        icu.cases.forEach(function (caze) {\n            i18nIcuCases[caze.value] = new Container(caze.expression.map(function (node) { return node.visit(_this, {}); }), caze.expSourceSpan);\n        });\n        this._icuDepth--;\n        if (this._isIcu || this._icuDepth > 0) {\n            // Returns an ICU node when:\n            // - the message (vs a part of the message) is an ICU message, or\n            // - the ICU message is nested.\n            var /** @type {?} */ expPh = this._placeholderRegistry.getUniquePlaceholder(\"VAR_\" + icu.type);\n            i18nIcu.expressionPlaceholder = expPh;\n            this._placeholderToContent[expPh] = icu.switchValue;\n            return i18nIcu;\n        }\n        // Else returns a placeholder\n        // ICU placeholders should not be replaced with their original content but with the their\n        // translations. We need to create a new visitor (they are not re-entrant) to compute the\n        // message id.\n        // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n        var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n        var /** @type {?} */ visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n        this._placeholderToMessage[phName] = visitor.toI18nMessage([icu], '', '', '');\n        return new IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        throw new Error('Unreachable code');\n    };\n    /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _I18nVisitor.prototype._visitTextWithInterpolation = /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (text, sourceSpan) {\n        var /** @type {?} */ splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n        if (!splitInterpolation) {\n            // No expression, return a single text\n            return new Text$1(text, sourceSpan);\n        }\n        // Return a group of text + expressions\n        var /** @type {?} */ nodes = [];\n        var /** @type {?} */ container = new Container(nodes, sourceSpan);\n        var _a = this._interpolationConfig, sDelimiter = _a.start, eDelimiter = _a.end;\n        for (var /** @type {?} */ i = 0; i < splitInterpolation.strings.length - 1; i++) {\n            var /** @type {?} */ expression = splitInterpolation.expressions[i];\n            var /** @type {?} */ baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n            var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n            if (splitInterpolation.strings[i].length) {\n                // No need to add empty strings\n                nodes.push(new Text$1(splitInterpolation.strings[i], sourceSpan));\n            }\n            nodes.push(new Placeholder(expression, phName, sourceSpan));\n            this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n        }\n        // The last index contains no expression\n        var /** @type {?} */ lastStringIdx = splitInterpolation.strings.length - 1;\n        if (splitInterpolation.strings[lastStringIdx].length) {\n            nodes.push(new Text$1(splitInterpolation.strings[lastStringIdx], sourceSpan));\n        }\n        return container;\n    };\n    return _I18nVisitor;\n}());\nvar _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*(\"|')([\\s\\S]*?)\\1[\\s\\S]*\\)/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction _extractPlaceholderName(input) {\n    return input.split(_CUSTOM_PH_EXP)[2];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An i18n error.\n */\nvar I18nError = (function (_super) {\n    __extends(I18nError, _super);\n    function I18nError(span, msg) {\n        return _super.call(this, span, msg) || this;\n    }\n    return I18nError;\n}(ParseError));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _I18N_ATTR = 'i18n';\nvar _I18N_ATTR_PREFIX = 'i18n-';\nvar _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\nvar MEANING_SEPARATOR = '|';\nvar ID_SEPARATOR = '@@';\nvar i18nCommentsWarned = false;\n/**\n * Extract translatable messages from an html AST\n * @param {?} nodes\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.extract(nodes, interpolationConfig);\n}\n/**\n * @param {?} nodes\n * @param {?} translations\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.merge(nodes, translations, interpolationConfig);\n}\nvar ExtractionResult = (function () {\n    function ExtractionResult(messages, errors) {\n        this.messages = messages;\n        this.errors = errors;\n    }\n    return ExtractionResult;\n}());\n/** @enum {number} */\nvar _VisitorMode = {\n    Extract: 0,\n    Merge: 1,\n};\n_VisitorMode[_VisitorMode.Extract] = \"Extract\";\n_VisitorMode[_VisitorMode.Merge] = \"Merge\";\n/**\n * This Visitor is used:\n * 1. to extract all the translatable strings from an html AST (see `extract()`),\n * 2. to replace the translatable strings with the actual translations (see `merge()`)\n *\n * \\@internal\n */\nvar _Visitor = (function () {\n    function _Visitor(_implicitTags, _implicitAttrs) {\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n    }\n    /**\n     * Extracts the messages from the tree\n     */\n    /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.extract = /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (nodes, interpolationConfig) {\n        var _this = this;\n        this._init(_VisitorMode.Extract, interpolationConfig);\n        nodes.forEach(function (node) { return node.visit(_this, null); });\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ExtractionResult(this._messages, this._errors);\n    };\n    /**\n     * Returns a tree where all translatable nodes are translated\n     */\n    /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.merge = /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (nodes, translations, interpolationConfig) {\n        this._init(_VisitorMode.Merge, interpolationConfig);\n        this._translations = translations;\n        // Construct a single fake root element\n        var /** @type {?} */ wrapper = new Element('wrapper', [], nodes, /** @type {?} */ ((undefined)), undefined, undefined);\n        var /** @type {?} */ translatedNode = wrapper.visit(this, null);\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ParseTreeResult(translatedNode.children, this._errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        // Parse cases for translatable html attributes\n        var /** @type {?} */ expression = visitAll(this, icuCase.expression, context);\n        if (this._mode === _VisitorMode.Merge) {\n            return new ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n        }\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        this._mayBeAddBlockChildren(icu);\n        var /** @type {?} */ wasInIcu = this._inIcu;\n        if (!this._inIcu) {\n            // nested ICU messages should not be extracted but top-level translated as a whole\n            if (this._isInTranslatableSection) {\n                this._addMessage([icu]);\n            }\n            this._inIcu = true;\n        }\n        var /** @type {?} */ cases = visitAll(this, icu.cases, context);\n        if (this._mode === _VisitorMode.Merge) {\n            icu = new Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n        }\n        this._inIcu = wasInIcu;\n        return icu;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) {\n        var /** @type {?} */ isOpening = _isOpeningComment(comment);\n        if (isOpening && this._isInTranslatableSection) {\n            this._reportError(comment, 'Could not start a block inside a translatable section');\n            return;\n        }\n        var /** @type {?} */ isClosing = _isClosingComment(comment);\n        if (isClosing && !this._inI18nBlock) {\n            this._reportError(comment, 'Trying to close an unopened block');\n            return;\n        }\n        if (!this._inI18nNode && !this._inIcu) {\n            if (!this._inI18nBlock) {\n                if (isOpening) {\n                    // deprecated from v5 you should use <ng-container i18n> instead of i18n comments\n                    if (!i18nCommentsWarned && /** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n                        i18nCommentsWarned = true;\n                        var /** @type {?} */ details = comment.sourceSpan.details ? \", \" + comment.sourceSpan.details : '';\n                        // TODO(ocombe): use a log service once there is a public one available\n                        console.warn(\"I18n comments are deprecated, use an <ng-container> element instead (\" + comment.sourceSpan.start + details + \")\");\n                    }\n                    this._inI18nBlock = true;\n                    this._blockStartDepth = this._depth;\n                    this._blockChildren = [];\n                    this._blockMeaningAndDesc = /** @type {?} */ ((comment.value)).replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n                    this._openTranslatableSection(comment);\n                }\n            }\n            else {\n                if (isClosing) {\n                    if (this._depth == this._blockStartDepth) {\n                        this._closeTranslatableSection(comment, this._blockChildren);\n                        this._inI18nBlock = false;\n                        var /** @type {?} */ message = /** @type {?} */ ((this._addMessage(this._blockChildren, this._blockMeaningAndDesc)));\n                        // merge attributes in sections\n                        var /** @type {?} */ nodes = this._translateMessage(comment, message);\n                        return visitAll(this, nodes);\n                    }\n                    else {\n                        this._reportError(comment, 'I18N blocks should not cross element boundaries');\n                        return;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        if (this._isInTranslatableSection) {\n            this._mayBeAddBlockChildren(text);\n        }\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var _this = this;\n        this._mayBeAddBlockChildren(el);\n        this._depth++;\n        var /** @type {?} */ wasInI18nNode = this._inI18nNode;\n        var /** @type {?} */ wasInImplicitNode = this._inImplicitNode;\n        var /** @type {?} */ childNodes = [];\n        var /** @type {?} */ translatedChildNodes = /** @type {?} */ ((undefined));\n        // Extract:\n        // - top level nodes with the (implicit) \"i18n\" attribute if not already in a section\n        // - ICU messages\n        var /** @type {?} */ i18nAttr = _getI18nAttr(el);\n        var /** @type {?} */ i18nMeta = i18nAttr ? i18nAttr.value : '';\n        var /** @type {?} */ isImplicit = this._implicitTags.some(function (tag) { return el.name === tag; }) && !this._inIcu &&\n            !this._isInTranslatableSection;\n        var /** @type {?} */ isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n        this._inImplicitNode = wasInImplicitNode || isImplicit;\n        if (!this._isInTranslatableSection && !this._inIcu) {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._inI18nNode = true;\n                var /** @type {?} */ message = /** @type {?} */ ((this._addMessage(el.children, i18nMeta)));\n                translatedChildNodes = this._translateMessage(el, message);\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                var /** @type {?} */ isTranslatable = i18nAttr || isTopLevelImplicit;\n                if (isTranslatable)\n                    this._openTranslatableSection(el);\n                visitAll(this, el.children);\n                if (isTranslatable)\n                    this._closeTranslatableSection(el, el.children);\n            }\n        }\n        else {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                // Descend into child nodes for extraction\n                visitAll(this, el.children);\n            }\n        }\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ visitNodes = translatedChildNodes || el.children;\n            visitNodes.forEach(function (child) {\n                var /** @type {?} */ visited = child.visit(_this, context);\n                if (visited && !_this._isInTranslatableSection) {\n                    // Do not add the children from translatable sections (= i18n blocks here)\n                    // They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)\n                    childNodes = childNodes.concat(visited);\n                }\n            });\n        }\n        this._visitAttributesOf(el);\n        this._depth--;\n        this._inI18nNode = wasInI18nNode;\n        this._inImplicitNode = wasInImplicitNode;\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ translatedAttrs = this._translateAttributes(el);\n            return new Element(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        throw new Error('unreachable code');\n    };\n    /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype._init = /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (mode, interpolationConfig) {\n        this._mode = mode;\n        this._inI18nBlock = false;\n        this._inI18nNode = false;\n        this._depth = 0;\n        this._inIcu = false;\n        this._msgCountAtSectionStart = undefined;\n        this._errors = [];\n        this._messages = [];\n        this._inImplicitNode = false;\n        this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._visitAttributesOf = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var _this = this;\n        var /** @type {?} */ explicitAttrNameToValue = {};\n        var /** @type {?} */ implicitAttrNames = this._implicitAttrs[el.name] || [];\n        el.attrs.filter(function (attr) { return attr.name.startsWith(_I18N_ATTR_PREFIX); })\n            .forEach(function (attr) {\n            return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                attr.value;\n        });\n        el.attrs.forEach(function (attr) {\n            if (attr.name in explicitAttrNameToValue) {\n                _this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n            }\n            else if (implicitAttrNames.some(function (name) { return attr.name === name; })) {\n                _this._addMessage([attr]);\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    _Visitor.prototype._addMessage = /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    function (ast, msgMeta) {\n        if (ast.length == 0 ||\n            ast.length == 1 && ast[0] instanceof Attribute$1 && !(/** @type {?} */ (ast[0])).value) {\n            // Do not create empty messages\n            return null;\n        }\n        var _a = _parseMessageMeta(msgMeta), meaning = _a.meaning, description = _a.description, id = _a.id;\n        var /** @type {?} */ message = this._createI18nMessage(ast, meaning, description, id);\n        this._messages.push(message);\n        return message;\n    };\n    /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    _Visitor.prototype._translateMessage = /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    function (el, message) {\n        if (message && this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ nodes = this._translations.get(message);\n            if (nodes) {\n                return nodes;\n            }\n            this._reportError(el, \"Translation unavailable for message id=\\\"\" + this._translations.digest(message) + \"\\\"\");\n        }\n        return [];\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._translateAttributes = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var _this = this;\n        var /** @type {?} */ attributes = el.attrs;\n        var /** @type {?} */ i18nParsedMessageMeta = {};\n        attributes.forEach(function (attr) {\n            if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                    _parseMessageMeta(attr.value);\n            }\n        });\n        var /** @type {?} */ translatedAttributes = [];\n        attributes.forEach(function (attr) {\n            if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                // strip i18n specific attributes\n                return;\n            }\n            if (attr.value && attr.value != '' && i18nParsedMessageMeta.hasOwnProperty(attr.name)) {\n                var _a = i18nParsedMessageMeta[attr.name], meaning = _a.meaning, description = _a.description, id = _a.id;\n                var /** @type {?} */ message = _this._createI18nMessage([attr], meaning, description, id);\n                var /** @type {?} */ nodes = _this._translations.get(message);\n                if (nodes) {\n                    if (nodes.length == 0) {\n                        translatedAttributes.push(new Attribute$1(attr.name, '', attr.sourceSpan));\n                    }\n                    else if (nodes[0] instanceof Text) {\n                        var /** @type {?} */ value = (/** @type {?} */ (nodes[0])).value;\n                        translatedAttributes.push(new Attribute$1(attr.name, value, attr.sourceSpan));\n                    }\n                    else {\n                        _this._reportError(el, \"Unexpected translation for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                    }\n                }\n                else {\n                    _this._reportError(el, \"Translation unavailable for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                }\n            }\n            else {\n                translatedAttributes.push(attr);\n            }\n        });\n        return translatedAttributes;\n    };\n    /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._mayBeAddBlockChildren = /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n            this._blockChildren.push(node);\n        }\n    };\n    /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._openTranslatableSection = /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section start');\n        }\n        else {\n            this._msgCountAtSectionStart = this._messages.length;\n        }\n    };\n    Object.defineProperty(_Visitor.prototype, \"_isInTranslatableSection\", {\n        get: /**\n         * A translatable section could be:\n         * - the content of translatable element,\n         * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n         * @return {?}\n         */\n        function () {\n            return this._msgCountAtSectionStart !== void 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    _Visitor.prototype._closeTranslatableSection = /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    function (node, directChildren) {\n        if (!this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section end');\n            return;\n        }\n        var /** @type {?} */ startIndex = this._msgCountAtSectionStart;\n        var /** @type {?} */ significantChildren = directChildren.reduce(function (count, node) { return count + (node instanceof Comment ? 0 : 1); }, 0);\n        if (significantChildren == 1) {\n            for (var /** @type {?} */ i = this._messages.length - 1; i >= /** @type {?} */ ((startIndex)); i--) {\n                var /** @type {?} */ ast = this._messages[i].nodes;\n                if (!(ast.length == 1 && ast[0] instanceof Text$1)) {\n                    this._messages.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this._msgCountAtSectionStart = undefined;\n    };\n    /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    _Visitor.prototype._reportError = /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    function (node, msg) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), msg));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isOpeningComment(n) {\n    return !!(n instanceof Comment && n.value && n.value.startsWith('i18n'));\n}\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isClosingComment(n) {\n    return !!(n instanceof Comment && n.value && n.value === '/i18n');\n}\n/**\n * @param {?} p\n * @return {?}\n */\nfunction _getI18nAttr(p) {\n    return p.attrs.find(function (attr) { return attr.name === _I18N_ATTR; }) || null;\n}\n/**\n * @param {?=} i18n\n * @return {?}\n */\nfunction _parseMessageMeta(i18n) {\n    if (!i18n)\n        return { meaning: '', description: '', id: '' };\n    var /** @type {?} */ idIndex = i18n.indexOf(ID_SEPARATOR);\n    var /** @type {?} */ descIndex = i18n.indexOf(MEANING_SEPARATOR);\n    var _a = (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''], meaningAndDesc = _a[0], id = _a[1];\n    var _b = (descIndex > -1) ?\n        [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n        ['', meaningAndDesc], meaning = _b[0], description = _b[1];\n    return { meaning: meaning, description: description, id: id };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlTagDefinition = (function () {\n    function XmlTagDefinition() {\n        this.closedByParent = false;\n        this.contentType = TagContentType.PARSABLE_DATA;\n        this.isVoid = false;\n        this.ignoreFirstLf = false;\n        this.canSelfClose = true;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.requireExtraParent = /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    function (currentParent) { return false; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.isClosedByChild = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return false; };\n    return XmlTagDefinition;\n}());\nvar _TAG_DEFINITION = new XmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getXmlTagDefinition(tagName) {\n    return _TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlParser = (function (_super) {\n    __extends(XmlParser, _super);\n    function XmlParser() {\n        return _super.call(this, getXmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    XmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms);\n    };\n    return XmlParser;\n}(Parser$1));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar Serializer = (function () {\n    function Serializer() {\n    }\n    // Creates a name mapper, see `PlaceholderMapper`\n    // Returning `null` means that no name mapping is used.\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Serializer.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return null; };\n    return Serializer;\n}());\n/**\n * A `PlaceholderMapper` converts placeholder names from internal to serialized representation and\n * back.\n *\n * It should be used for serialization format that put constraints on the placeholder names.\n * @record\n */\n\n/**\n * A simple mapper that take a function to transform an internal name to a public name\n */\nvar SimplePlaceholderMapper = (function (_super) {\n    __extends(SimplePlaceholderMapper, _super);\n    // create a mapping from the message\n    function SimplePlaceholderMapper(message, mapName) {\n        var _this = _super.call(this) || this;\n        _this.mapName = mapName;\n        _this.internalToPublic = {};\n        _this.publicToNextId = {};\n        _this.publicToInternal = {};\n        message.nodes.forEach(function (node) { return node.visit(_this); });\n        return _this;\n    }\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toPublicName = /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    function (internalName) {\n        return this.internalToPublic.hasOwnProperty(internalName) ?\n            this.internalToPublic[internalName] :\n            null;\n    };\n    /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toInternalName = /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    function (publicName) {\n        return this.publicToInternal.hasOwnProperty(publicName) ? this.publicToInternal[publicName] :\n            null;\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return null; };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        this.visitPlaceholderName(ph.startName);\n        _super.prototype.visitTagPlaceholder.call(this, ph, context);\n        this.visitPlaceholderName(ph.closeName);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { this.visitPlaceholderName(ph.name); };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        this.visitPlaceholderName(ph.name);\n    };\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholderName = /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    function (internalName) {\n        if (!internalName || this.internalToPublic.hasOwnProperty(internalName)) {\n            return;\n        }\n        var /** @type {?} */ publicName = this.mapName(internalName);\n        if (this.publicToInternal.hasOwnProperty(publicName)) {\n            // Create a new XMB when it has already been used\n            var /** @type {?} */ nextId = this.publicToNextId[publicName];\n            this.publicToNextId[publicName] = nextId + 1;\n            publicName = publicName + \"_\" + nextId;\n        }\n        else {\n            this.publicToNextId[publicName] = 1;\n        }\n        this.internalToPublic[internalName] = publicName;\n        this.publicToInternal[publicName] = internalName;\n    };\n    return SimplePlaceholderMapper;\n}(RecurseVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\nvar _Visitor$1 = (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    _Visitor.prototype.visitTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var _this = this;\n        var /** @type {?} */ strAttrs = this._serializeAttributes(tag.attrs);\n        if (tag.children.length == 0) {\n            return \"<\" + tag.name + strAttrs + \"/>\";\n        }\n        var /** @type {?} */ strChildren = tag.children.map(function (node) { return node.visit(_this); });\n        return \"<\" + tag.name + strAttrs + \">\" + strChildren.join('') + \"</\" + tag.name + \">\";\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) { return text.value; };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    _Visitor.prototype.visitDeclaration = /**\n     * @param {?} decl\n     * @return {?}\n     */\n    function (decl) {\n        return \"<?xml\" + this._serializeAttributes(decl.attrs) + \" ?>\";\n    };\n    /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    _Visitor.prototype._serializeAttributes = /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    function (attrs) {\n        var /** @type {?} */ strAttrs = Object.keys(attrs).map(function (name) { return name + \"=\\\"\" + attrs[name] + \"\\\"\"; }).join(' ');\n        return strAttrs.length > 0 ? ' ' + strAttrs : '';\n    };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    _Visitor.prototype.visitDoctype = /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    function (doctype) {\n        return \"<!DOCTYPE \" + doctype.rootTag + \" [\\n\" + doctype.dtd + \"\\n]>\";\n    };\n    return _Visitor;\n}());\nvar _visitor = new _Visitor$1();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serialize(nodes) {\n    return nodes.map(function (node) { return node.visit(_visitor); }).join('');\n}\n/**\n * @record\n */\n\nvar Declaration = (function () {\n    function Declaration(unescapedAttrs) {\n        var _this = this;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Declaration.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitDeclaration(this); };\n    return Declaration;\n}());\nvar Doctype = (function () {\n    function Doctype(rootTag, dtd) {\n        this.rootTag = rootTag;\n        this.dtd = dtd;\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Doctype.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitDoctype(this); };\n    return Doctype;\n}());\nvar Tag = (function () {\n    function Tag(name, unescapedAttrs, children) {\n        if (unescapedAttrs === void 0) { unescapedAttrs = {}; }\n        if (children === void 0) { children = []; }\n        var _this = this;\n        this.name = name;\n        this.children = children;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Tag.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitTag(this); };\n    return Tag;\n}());\nvar Text$2 = (function () {\n    function Text(unescapedValue) {\n        this.value = _escapeXml(unescapedValue);\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitText(this); };\n    return Text;\n}());\nvar CR = (function (_super) {\n    __extends(CR, _super);\n    function CR(ws) {\n        if (ws === void 0) { ws = 0; }\n        return _super.call(this, \"\\n\" + new Array(ws + 1).join(' ')) || this;\n    }\n    return CR;\n}(Text$2));\nvar _ESCAPED_CHARS = [\n    [/&/g, '&amp;'],\n    [/\"/g, '&quot;'],\n    [/'/g, '&apos;'],\n    [/</g, '&lt;'],\n    [/>/g, '&gt;'],\n];\n/**\n * @param {?} text\n * @return {?}\n */\nfunction _escapeXml(text) {\n    return _ESCAPED_CHARS.reduce(function (text, entry) { return text.replace(entry[0], entry[1]); }, text);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION = '1.2';\nvar _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG = 'en';\nvar _PLACEHOLDER_TAG = 'x';\nvar _FILE_TAG = 'file';\nvar _SOURCE_TAG = 'source';\nvar _TARGET_TAG = 'target';\nvar _UNIT_TAG = 'trans-unit';\nvar _CONTEXT_GROUP_TAG = 'context-group';\nvar _CONTEXT_TAG = 'context';\nvar Xliff = (function (_super) {\n    __extends(Xliff, _super);\n    function Xliff() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor();\n        var /** @type {?} */ transUnits = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ contextTags = [];\n            message.sources.forEach(function (source) {\n                var /** @type {?} */ contextGroupTag = new Tag(_CONTEXT_GROUP_TAG, { purpose: 'location' });\n                contextGroupTag.children.push(new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'sourcefile' }, [new Text$2(source.filePath)]), new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'linenumber' }, [new Text$2(\"\" + source.startLine)]), new CR(8));\n                contextTags.push(new CR(8), contextGroupTag);\n            });\n            var /** @type {?} */ transUnit = new Tag(_UNIT_TAG, { id: message.id, datatype: 'html' });\n            (_a = transUnit.children).push.apply(_a, [new CR(8), new Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes))].concat(contextTags));\n            if (message.description) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'description' }, [new Text$2(message.description)]));\n            }\n            if (message.meaning) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'meaning' }, [new Text$2(message.meaning)]));\n            }\n            transUnit.children.push(new CR(6));\n            transUnits.push(new CR(6), transUnit);\n            var _a;\n        });\n        var /** @type {?} */ body = new Tag('body', {}, transUnits.concat([new CR(4)]));\n        var /** @type {?} */ file = new Tag('file', {\n            'source-language': locale || _DEFAULT_SOURCE_LANG,\n            datatype: 'plaintext',\n            original: 'ng2.template',\n        }, [new CR(4), body, new CR(2)]);\n        var /** @type {?} */ xliff = new Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliffParser = new XliffParser();\n        var _a = xliffParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest(message); };\n    return Xliff;\n}(Serializer));\nvar _WriteVisitor = (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ ctype = getCtypeForTag(ph.tag);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \"/>\" })];\n        }\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \">\" });\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.closeName, ctype: ctype, 'equiv-text': \"</\" + ph.tag + \">\" });\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': \"{{\" + ph.value + \"}}\" })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ equivText = \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\";\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': equivText })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar XliffParser = (function () {\n    function XliffParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    XliffParser.prototype.parse = /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG:\n                this._unitMlString = /** @type {?} */ ((null));\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG:\n                // ignore source message\n                break;\n            case _TARGET_TAG:\n                var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _FILE_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'target-language'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                visitAll(this, element.children, null);\n                break;\n            default:\n                // TODO(vicb): assert file structure, xliff version\n                // For now only recurse on unhandled nodes\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XliffParser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XliffParser;\n}());\nvar XmlToI18n = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'id'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"id\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getCtypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n            return 'lb';\n        case 'img':\n            return 'image';\n        default:\n            return \"x-\" + tag;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION$1 = '2.0';\nvar _XMLNS$1 = 'urn:oasis:names:tc:xliff:document:2.0';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG$1 = 'en';\nvar _PLACEHOLDER_TAG$1 = 'ph';\nvar _PLACEHOLDER_SPANNING_TAG = 'pc';\nvar _XLIFF_TAG = 'xliff';\nvar _SOURCE_TAG$1 = 'source';\nvar _TARGET_TAG$1 = 'target';\nvar _UNIT_TAG$1 = 'unit';\nvar Xliff2 = (function (_super) {\n    __extends(Xliff2, _super);\n    function Xliff2() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff2.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor$1();\n        var /** @type {?} */ units = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ unit = new Tag(_UNIT_TAG$1, { id: message.id });\n            var /** @type {?} */ notes = new Tag('notes');\n            if (message.description || message.meaning) {\n                if (message.description) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'description' }, [new Text$2(message.description)]));\n                }\n                if (message.meaning) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'meaning' }, [new Text$2(message.meaning)]));\n                }\n            }\n            message.sources.forEach(function (source) {\n                notes.children.push(new CR(8), new Tag('note', { category: 'location' }, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            notes.children.push(new CR(6));\n            unit.children.push(new CR(6), notes);\n            var /** @type {?} */ segment = new Tag('segment');\n            segment.children.push(new CR(8), new Tag(_SOURCE_TAG$1, {}, visitor.serialize(message.nodes)), new CR(6));\n            unit.children.push(new CR(6), segment, new CR(4));\n            units.push(new CR(4), unit);\n        });\n        var /** @type {?} */ file = new Tag('file', { 'original': 'ng.template', id: 'ngi18n' }, units.concat([new CR(2)]));\n        var /** @type {?} */ xliff = new Tag(_XLIFF_TAG, { version: _VERSION$1, xmlns: _XMLNS$1, srcLang: locale || _DEFAULT_SOURCE_LANG$1 }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliff2Parser = new Xliff2Parser();\n        var _a = xliff2Parser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$1();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff2 parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return decimalDigest(message); };\n    return Xliff2;\n}(Serializer));\nvar _WriteVisitor$1 = (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ type = getTypeForTag(ph.tag);\n        if (ph.isVoid) {\n            var /** @type {?} */ tagPh = new Tag(_PLACEHOLDER_TAG$1, {\n                id: (this._nextPlaceholderId++).toString(),\n                equiv: ph.startName,\n                type: type,\n                disp: \"<\" + ph.tag + \"/>\",\n            });\n            return [tagPh];\n        }\n        var /** @type {?} */ tagPc = new Tag(_PLACEHOLDER_SPANNING_TAG, {\n            id: (this._nextPlaceholderId++).toString(),\n            equivStart: ph.startName,\n            equivEnd: ph.closeName,\n            type: type,\n            dispStart: \"<\" + ph.tag + \">\",\n            dispEnd: \"</\" + ph.tag + \">\",\n        });\n        var /** @type {?} */ nodes = [].concat.apply([], ph.children.map(function (node) { return node.visit(_this); }));\n        if (nodes.length) {\n            nodes.forEach(function (node) { return tagPc.children.push(node); });\n        }\n        else {\n            tagPc.children.push(new Text$2(''));\n        }\n        return [tagPc];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, {\n                id: idStr,\n                equiv: ph.name,\n                disp: \"{{\" + ph.value + \"}}\",\n            })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ cases = Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ');\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, { id: idStr, equiv: ph.name, disp: \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + cases + \"}\" })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        this._nextPlaceholderId = 0;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar Xliff2Parser = (function () {\n    function Xliff2Parser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2Parser.prototype.parse = /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG$1:\n                this._unitMlString = null;\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG$1 + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG$1:\n                // ignore source message\n                break;\n            case _TARGET_TAG$1:\n                var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _XLIFF_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'trgLang'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                var /** @type {?} */ versionAttr = element.attrs.find(function (attr) { return attr.name === 'version'; });\n                if (versionAttr) {\n                    var /** @type {?} */ version = versionAttr.value;\n                    if (version !== '2.0') {\n                        this._addError(element, \"The XLIFF file version \" + version + \" is not compatible with XLIFF 2.0 serializer\");\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                    }\n                }\n                break;\n            default:\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2Parser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return Xliff2Parser;\n}());\nvar XmlToI18n$1 = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] : [].concat.apply([], visitAll(this, xmlIcu.rootNodes));\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var _this = this;\n        switch (el.name) {\n            case _PLACEHOLDER_TAG$1:\n                var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'equiv'; });\n                if (nameAttr) {\n                    return [new Placeholder('', nameAttr.value, el.sourceSpan)];\n                }\n                this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equiv\\\" attribute\");\n                break;\n            case _PLACEHOLDER_SPANNING_TAG:\n                var /** @type {?} */ startAttr = el.attrs.find(function (attr) { return attr.name === 'equivStart'; });\n                var /** @type {?} */ endAttr = el.attrs.find(function (attr) { return attr.name === 'equivEnd'; });\n                if (!startAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivStart\\\" attribute\");\n                }\n                else if (!endAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivEnd\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ startId = startAttr.value;\n                    var /** @type {?} */ endId = endAttr.value;\n                    var /** @type {?} */ nodes = [];\n                    return nodes.concat.apply(nodes, [new Placeholder('', startId, el.sourceSpan)].concat(el.children.map(function (node) { return node.visit(_this, null); }), [new Placeholder('', endId, el.sourceSpan)]));\n                }\n                break;\n            default:\n                this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: [].concat.apply([], visitAll(this, icuCase.expression)),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getTypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n        case 'b':\n        case 'i':\n        case 'u':\n            return 'fmt';\n        case 'img':\n            return 'image';\n        case 'a':\n            return 'link';\n        default:\n            return 'other';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _MESSAGES_TAG = 'messagebundle';\nvar _MESSAGE_TAG = 'msg';\nvar _PLACEHOLDER_TAG$2 = 'ph';\nvar _EXEMPLE_TAG = 'ex';\nvar _SOURCE_TAG$2 = 'source';\nvar _DOCTYPE = \"<!ELEMENT messagebundle (msg)*>\\n<!ATTLIST messagebundle class CDATA #IMPLIED>\\n\\n<!ELEMENT msg (#PCDATA|ph|source)*>\\n<!ATTLIST msg id CDATA #IMPLIED>\\n<!ATTLIST msg seq CDATA #IMPLIED>\\n<!ATTLIST msg name CDATA #IMPLIED>\\n<!ATTLIST msg desc CDATA #IMPLIED>\\n<!ATTLIST msg meaning CDATA #IMPLIED>\\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\\n<!ATTLIST msg xml:space (default|preserve) \\\"default\\\">\\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\\n\\n<!ELEMENT source (#PCDATA)>\\n\\n<!ELEMENT ph (#PCDATA|ex)*>\\n<!ATTLIST ph name CDATA #REQUIRED>\\n\\n<!ELEMENT ex (#PCDATA)>\";\nvar Xmb = (function (_super) {\n    __extends(Xmb, _super);\n    function Xmb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xmb.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ exampleVisitor = new ExampleVisitor();\n        var /** @type {?} */ visitor = new _Visitor$2();\n        var /** @type {?} */ rootNode = new Tag(_MESSAGES_TAG);\n        messages.forEach(function (message) {\n            var /** @type {?} */ attrs = { id: message.id };\n            if (message.description) {\n                attrs['desc'] = message.description;\n            }\n            if (message.meaning) {\n                attrs['meaning'] = message.meaning;\n            }\n            var /** @type {?} */ sourceTags = [];\n            message.sources.forEach(function (source) {\n                sourceTags.push(new Tag(_SOURCE_TAG$2, {}, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            rootNode.children.push(new CR(2), new Tag(_MESSAGE_TAG, attrs, sourceTags.concat(visitor.serialize(message.nodes))));\n        });\n        rootNode.children.push(new CR());\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }),\n            new CR(),\n            new Doctype(_MESSAGES_TAG, _DOCTYPE),\n            new CR(),\n            exampleVisitor.addDefaultExamples(rootNode),\n            new CR(),\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xmb.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        throw new Error('Unsupported');\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xmb;\n}(Serializer));\nvar _Visitor$2 = (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ startEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"<\" + ph.tag + \">\")]);\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.startName }, [startEx]);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        var /** @type {?} */ closeEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"</\" + ph.tag + \">\")]);\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.closeName }, [closeEx]);\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"{{\" + ph.value + \"}}\")]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [\n            new Text$2(\"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\")\n        ]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _Visitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest$1(message) {\n    return decimalDigest(message);\n}\nvar ExampleVisitor = (function () {\n    function ExampleVisitor() {\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    ExampleVisitor.prototype.addDefaultExamples = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        node.visit(this);\n        return node;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var _this = this;\n        if (tag.name === _PLACEHOLDER_TAG$2) {\n            if (!tag.children || tag.children.length == 0) {\n                var /** @type {?} */ exText = new Text$2(tag.attrs['name'] || '...');\n                tag.children = [new Tag(_EXEMPLE_TAG, {}, [exText])];\n            }\n        }\n        else if (tag.children) {\n            tag.children.forEach(function (node) { return node.visit(_this); });\n        }\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) { };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDeclaration = /**\n     * @param {?} decl\n     * @return {?}\n     */\n    function (decl) { };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDoctype = /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    function (doctype) { };\n    return ExampleVisitor;\n}());\n/**\n * @param {?} internalName\n * @return {?}\n */\nfunction toPublicName(internalName) {\n    return internalName.toUpperCase().replace(/[^A-Z0-9_]/g, '_');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _TRANSLATIONS_TAG = 'translationbundle';\nvar _TRANSLATION_TAG = 'translation';\nvar _PLACEHOLDER_TAG$3 = 'ph';\nvar Xtb = (function (_super) {\n    __extends(Xtb, _super);\n    function Xtb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xtb.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) { throw new Error('Unsupported'); };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xtb.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xtb to xml nodes\n        var /** @type {?} */ xtbParser = new XtbParser();\n        var _a = xtbParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$2();\n        // Because we should be able to load xtb files that rely on features not supported by angular,\n        // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n        // converted\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var /** @type {?} */ valueFn = function () {\n                var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, errors = _a.errors;\n                if (errors.length) {\n                    throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n                }\n                return i18nNodes;\n            };\n            createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n        });\n        if (errors.length) {\n            throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xtb;\n}(Serializer));\n/**\n * @param {?} messages\n * @param {?} id\n * @param {?} valueFn\n * @return {?}\n */\nfunction createLazyProperty(messages, id, valueFn) {\n    Object.defineProperty(messages, id, {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n            var /** @type {?} */ value = valueFn();\n            Object.defineProperty(messages, id, { enumerable: true, value: value });\n            return value;\n        },\n        set: function (_) { throw new Error('Could not overwrite an XTB translation'); },\n    });\n}\nvar XtbParser = (function () {\n    function XtbParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    XtbParser.prototype.parse = /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    function (xtb, url) {\n        this._bundleDepth = 0;\n        this._msgIdToHtml = {};\n        // We can not parse the ICU messages at this point as some messages might not originate\n        // from Angular that could not be lex'd.\n        var /** @type {?} */ xml = new XmlParser().parse(xtb, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _TRANSLATIONS_TAG:\n                this._bundleDepth++;\n                if (this._bundleDepth > 1) {\n                    this._addError(element, \"<\" + _TRANSLATIONS_TAG + \"> elements can not be nested\");\n                }\n                var /** @type {?} */ langAttr = element.attrs.find(function (attr) { return attr.name === 'lang'; });\n                if (langAttr) {\n                    this._locale = langAttr.value;\n                }\n                visitAll(this, element.children, null);\n                this._bundleDepth--;\n                break;\n            case _TRANSLATION_TAG:\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _TRANSLATION_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                        var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                        var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                        var /** @type {?} */ innerText = content.slice(/** @type {?} */ ((innerTextStart)), /** @type {?} */ ((innerTextEnd)));\n                        this._msgIdToHtml[id] = innerText;\n                    }\n                }\n                break;\n            default:\n                this._addError(element, 'Unexpected tag');\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XtbParser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XtbParser;\n}());\nvar XmlToI18n$2 = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG$3) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'name'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG$3 + \"> misses the \\\"name\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlParser = (function (_super) {\n    __extends(HtmlParser, _super);\n    function HtmlParser() {\n        return _super.call(this, getHtmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    HtmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms, interpolationConfig);\n    };\n    return HtmlParser;\n}(Parser$1));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for translated messages\n */\nvar TranslationBundle = (function () {\n    function TranslationBundle(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        if (missingTranslationStrategy === void 0) { missingTranslationStrategy = MissingTranslationStrategy.Warning; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this.digest = digest;\n        this.mapperFactory = mapperFactory;\n        this._i18nToHtml = new I18nToHtmlVisitor(_i18nNodesByMsgId, locale, digest, /** @type {?} */ ((mapperFactory)), missingTranslationStrategy, console);\n    }\n    // Creates a `TranslationBundle` by parsing the given `content` with the `serializer`.\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    TranslationBundle.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    function (content, url, serializer, missingTranslationStrategy, console) {\n        var _a = serializer.load(content, url), locale = _a.locale, i18nNodesByMsgId = _a.i18nNodesByMsgId;\n        var /** @type {?} */ digestFn = function (m) { return serializer.digest(m); };\n        var /** @type {?} */ mapperFactory = function (m) { return /** @type {?} */ ((serializer.createNameMapper(m))); };\n        return new TranslationBundle(i18nNodesByMsgId, locale, digestFn, mapperFactory, missingTranslationStrategy, console);\n    };\n    // Returns the translation as HTML nodes from the given source message.\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.get = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        var /** @type {?} */ html = this._i18nToHtml.convert(srcMsg);\n        if (html.errors.length) {\n            throw new Error(html.errors.join('\\n'));\n        }\n        return html.nodes;\n    };\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.has = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) { return this.digest(srcMsg) in this._i18nNodesByMsgId; };\n    return TranslationBundle;\n}());\nvar I18nToHtmlVisitor = (function () {\n    function I18nToHtmlVisitor(_i18nNodesByMsgId, _locale, _digest, _mapperFactory, _missingTranslationStrategy, _console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this._locale = _locale;\n        this._digest = _digest;\n        this._mapperFactory = _mapperFactory;\n        this._missingTranslationStrategy = _missingTranslationStrategy;\n        this._console = _console;\n        this._contextStack = [];\n        this._errors = [];\n    }\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.convert = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        this._contextStack.length = 0;\n        this._errors.length = 0;\n        // i18n to text\n        var /** @type {?} */ text = this._convertToText(srcMsg);\n        // text to html\n        var /** @type {?} */ url = srcMsg.nodes[0].sourceSpan.start.file.url;\n        var /** @type {?} */ html = new HtmlParser().parse(text, url, true);\n        return {\n            nodes: html.rootNodes,\n            errors: this._errors.concat(html.errors),\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        return container.children.map(function (n) { return n.visit(_this); }).join('');\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // TODO(vicb): Once all format switch to using expression placeholders\n        // we should throw when the placeholder is not in the source message\n        var /** @type {?} */ exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n            this._srcMsg.placeholders[icu.expression] :\n            icu.expression;\n        return \"{\" + exp + \", \" + icu.type + \", \" + cases.join(' ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ phName = this._mapper(ph.name);\n        if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n            return this._srcMsg.placeholders[phName];\n        }\n        if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n            return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n        }\n        this._addError(ph, \"Unknown placeholder \\\"\" + ph.name + \"\\\"\");\n        return '';\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ tag = \"\" + ph.tag;\n        var /** @type {?} */ attrs = Object.keys(ph.attrs).map(function (name) { return name + \"=\\\"\" + ph.attrs[name] + \"\\\"\"; }).join(' ');\n        if (ph.isVoid) {\n            return \"<\" + tag + \" \" + attrs + \"/>\";\n        }\n        var /** @type {?} */ children = ph.children.map(function (c) { return c.visit(_this); }).join('');\n        return \"<\" + tag + \" \" + attrs + \">\" + children + \"</\" + tag + \">\";\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        // An ICU placeholder references the source message to be serialized\n        return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n    };\n    /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._convertToText = /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        var _this = this;\n        var /** @type {?} */ id = this._digest(srcMsg);\n        var /** @type {?} */ mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n        var /** @type {?} */ nodes;\n        this._contextStack.push({ msg: this._srcMsg, mapper: this._mapper });\n        this._srcMsg = srcMsg;\n        if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n            // When there is a translation use its nodes as the source\n            // And create a mapper to convert serialized placeholder names to internal names\n            nodes = this._i18nNodesByMsgId[id];\n            this._mapper = function (name) { return mapper ? /** @type {?} */ ((mapper.toInternalName(name))) : name; };\n        }\n        else {\n            // When no translation has been found\n            // - report an error / a warning / nothing,\n            // - use the nodes from the original message\n            // - placeholders are already internal and need no mapper\n            if (this._missingTranslationStrategy === MissingTranslationStrategy.Error) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._addError(srcMsg.nodes[0], \"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            else if (this._console &&\n                this._missingTranslationStrategy === MissingTranslationStrategy.Warning) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._console.warn(\"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            nodes = srcMsg.nodes;\n            this._mapper = function (name) { return name; };\n        }\n        var /** @type {?} */ text = nodes.map(function (node) { return node.visit(_this); }).join('');\n        var /** @type {?} */ context = /** @type {?} */ ((this._contextStack.pop()));\n        this._srcMsg = context.msg;\n        this._mapper = context.mapper;\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._addError = /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    function (el, msg) {\n        this._errors.push(new I18nError(el.sourceSpan, msg));\n    };\n    return I18nToHtmlVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar I18NHtmlParser = (function () {\n    function I18NHtmlParser(_htmlParser, translations, translationsFormat, missingTranslation, console) {\n        if (missingTranslation === void 0) { missingTranslation = MissingTranslationStrategy.Warning; }\n        this._htmlParser = _htmlParser;\n        if (translations) {\n            var /** @type {?} */ serializer = createSerializer(translationsFormat);\n            this._translationBundle =\n                TranslationBundle.load(translations, 'i18n', serializer, missingTranslation, console);\n        }\n        else {\n            this._translationBundle =\n                new TranslationBundle({}, null, digest, undefined, missingTranslation, console);\n        }\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    I18NHtmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n        if (parseResult.errors.length) {\n            return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n        }\n        return mergeTranslations(parseResult.rootNodes, this._translationBundle, interpolationConfig, [], {});\n    };\n    return I18NHtmlParser;\n}());\n/**\n * @param {?=} format\n * @return {?}\n */\nfunction createSerializer(format) {\n    format = (format || 'xlf').toLowerCase();\n    switch (format) {\n        case 'xmb':\n            return new Xmb();\n        case 'xtb':\n            return new Xtb();\n        case 'xliff2':\n        case 'xlf2':\n            return new Xliff2();\n        case 'xliff':\n        case 'xlf':\n        default:\n            return new Xliff();\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nvar GENERATED_FILE = /\\.ngfactory\\.|\\.ngsummary\\./;\nvar JIT_SUMMARY_FILE = /\\.ngsummary\\./;\nvar JIT_SUMMARY_NAME = /NgSummary$/;\n/**\n * @param {?} filePath\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction ngfactoryFilePath(filePath, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(filePath, forceSourceFile);\n    return urlWithSuffix[0] + \".ngfactory\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripGeneratedFileSuffix(filePath) {\n    return filePath.replace(GENERATED_FILE, '.');\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction isGeneratedFile(filePath) {\n    return GENERATED_FILE.test(filePath);\n}\n/**\n * @param {?} path\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction splitTypescriptSuffix(path, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    if (path.endsWith('.d.ts')) {\n        return [path.slice(0, -5), forceSourceFile ? '.ts' : '.d.ts'];\n    }\n    var /** @type {?} */ lastDot = path.lastIndexOf('.');\n    if (lastDot !== -1) {\n        return [path.substring(0, lastDot), path.substring(lastDot)];\n    }\n    return [path, ''];\n}\n/**\n * @param {?} fileName\n * @return {?}\n */\nfunction summaryFileName(fileName) {\n    var /** @type {?} */ fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n    return fileNameWithoutSuffix + \".ngsummary.json\";\n}\n/**\n * @param {?} fileName\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction summaryForJitFileName(fileName, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(stripGeneratedFileSuffix(fileName), forceSourceFile);\n    return urlWithSuffix[0] + \".ngsummary\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripSummaryForJitFileSuffix(filePath) {\n    return filePath.replace(JIT_SUMMARY_FILE, '.');\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction summaryForJitName(symbolName) {\n    return symbolName + \"NgSummary\";\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction stripSummaryForJitNameSuffix(symbolName) {\n    return symbolName.replace(JIT_SUMMARY_NAME, '');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar CORE = '@angular/core';\nvar Identifiers = (function () {\n    function Identifiers() {\n    }\n    Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n        name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n        moduleName: CORE,\n    };\n    Identifiers.ElementRef = { name: 'ElementRef', moduleName: CORE };\n    Identifiers.NgModuleRef = { name: 'NgModuleRef', moduleName: CORE };\n    Identifiers.ViewContainerRef = { name: 'ViewContainerRef', moduleName: CORE };\n    Identifiers.ChangeDetectorRef = {\n        name: 'ChangeDetectorRef',\n        moduleName: CORE,\n    };\n    Identifiers.QueryList = { name: 'QueryList', moduleName: CORE };\n    Identifiers.TemplateRef = { name: 'TemplateRef', moduleName: CORE };\n    Identifiers.CodegenComponentFactoryResolver = {\n        name: 'ɵCodegenComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactoryResolver = {\n        name: 'ComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactory = { name: 'ComponentFactory', moduleName: CORE };\n    Identifiers.ComponentRef = { name: 'ComponentRef', moduleName: CORE };\n    Identifiers.NgModuleFactory = { name: 'NgModuleFactory', moduleName: CORE };\n    Identifiers.createModuleFactory = {\n        name: 'ɵcmf',\n        moduleName: CORE,\n    };\n    Identifiers.moduleDef = {\n        name: 'ɵmod',\n        moduleName: CORE,\n    };\n    Identifiers.moduleProviderDef = {\n        name: 'ɵmpd',\n        moduleName: CORE,\n    };\n    Identifiers.RegisterModuleFactoryFn = {\n        name: 'ɵregisterModuleFactory',\n        moduleName: CORE,\n    };\n    Identifiers.Injector = { name: 'Injector', moduleName: CORE };\n    Identifiers.ViewEncapsulation = {\n        name: 'ViewEncapsulation',\n        moduleName: CORE,\n    };\n    Identifiers.ChangeDetectionStrategy = {\n        name: 'ChangeDetectionStrategy',\n        moduleName: CORE,\n    };\n    Identifiers.SecurityContext = {\n        name: 'SecurityContext',\n        moduleName: CORE,\n    };\n    Identifiers.LOCALE_ID = { name: 'LOCALE_ID', moduleName: CORE };\n    Identifiers.TRANSLATIONS_FORMAT = {\n        name: 'TRANSLATIONS_FORMAT',\n        moduleName: CORE,\n    };\n    Identifiers.inlineInterpolate = {\n        name: 'ɵinlineInterpolate',\n        moduleName: CORE,\n    };\n    Identifiers.interpolate = { name: 'ɵinterpolate', moduleName: CORE };\n    Identifiers.EMPTY_ARRAY = { name: 'ɵEMPTY_ARRAY', moduleName: CORE };\n    Identifiers.EMPTY_MAP = { name: 'ɵEMPTY_MAP', moduleName: CORE };\n    Identifiers.Renderer = { name: 'Renderer', moduleName: CORE };\n    Identifiers.viewDef = { name: 'ɵvid', moduleName: CORE };\n    Identifiers.elementDef = { name: 'ɵeld', moduleName: CORE };\n    Identifiers.anchorDef = { name: 'ɵand', moduleName: CORE };\n    Identifiers.textDef = { name: 'ɵted', moduleName: CORE };\n    Identifiers.directiveDef = { name: 'ɵdid', moduleName: CORE };\n    Identifiers.providerDef = { name: 'ɵprd', moduleName: CORE };\n    Identifiers.queryDef = { name: 'ɵqud', moduleName: CORE };\n    Identifiers.pureArrayDef = { name: 'ɵpad', moduleName: CORE };\n    Identifiers.pureObjectDef = { name: 'ɵpod', moduleName: CORE };\n    Identifiers.purePipeDef = { name: 'ɵppd', moduleName: CORE };\n    Identifiers.pipeDef = { name: 'ɵpid', moduleName: CORE };\n    Identifiers.nodeValue = { name: 'ɵnov', moduleName: CORE };\n    Identifiers.ngContentDef = { name: 'ɵncd', moduleName: CORE };\n    Identifiers.unwrapValue = { name: 'ɵunv', moduleName: CORE };\n    Identifiers.createRendererType2 = { name: 'ɵcrt', moduleName: CORE };\n    // type only\n    Identifiers.RendererType2 = {\n        name: 'RendererType2',\n        moduleName: CORE,\n    };\n    // type only\n    Identifiers.ViewDefinition = {\n        name: 'ɵViewDefinition',\n        moduleName: CORE,\n    };\n    Identifiers.createComponentFactory = { name: 'ɵccf', moduleName: CORE };\n    return Identifiers;\n}());\n/**\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForReference(reference) {\n    return { identifier: { reference: reference } };\n}\n/**\n * @param {?} reflector\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForExternalReference(reflector, reference) {\n    return createTokenForReference(reflector.resolveExternalReference(reference));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar LifecycleHooks = {\n    OnInit: 0,\n    OnDestroy: 1,\n    DoCheck: 2,\n    OnChanges: 3,\n    AfterContentInit: 4,\n    AfterContentChecked: 5,\n    AfterViewInit: 6,\n    AfterViewChecked: 7,\n};\nLifecycleHooks[LifecycleHooks.OnInit] = \"OnInit\";\nLifecycleHooks[LifecycleHooks.OnDestroy] = \"OnDestroy\";\nLifecycleHooks[LifecycleHooks.DoCheck] = \"DoCheck\";\nLifecycleHooks[LifecycleHooks.OnChanges] = \"OnChanges\";\nLifecycleHooks[LifecycleHooks.AfterContentInit] = \"AfterContentInit\";\nLifecycleHooks[LifecycleHooks.AfterContentChecked] = \"AfterContentChecked\";\nLifecycleHooks[LifecycleHooks.AfterViewInit] = \"AfterViewInit\";\nLifecycleHooks[LifecycleHooks.AfterViewChecked] = \"AfterViewChecked\";\nvar LIFECYCLE_HOOKS_VALUES = [\n    LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n    LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n    LifecycleHooks.AfterViewChecked\n];\n/**\n * @param {?} reflector\n * @param {?} hook\n * @param {?} token\n * @return {?}\n */\nfunction hasLifecycleHook(reflector, hook, token) {\n    return reflector.hasLifecycleHook(token, getHookName(hook));\n}\n/**\n * @param {?} reflector\n * @param {?} token\n * @return {?}\n */\nfunction getAllLifecycleHooks(reflector, token) {\n    return LIFECYCLE_HOOKS_VALUES.filter(function (hook) { return hasLifecycleHook(reflector, hook, token); });\n}\n/**\n * @param {?} hook\n * @return {?}\n */\nfunction getHookName(hook) {\n    switch (hook) {\n        case LifecycleHooks.OnInit:\n            return 'ngOnInit';\n        case LifecycleHooks.OnDestroy:\n            return 'ngOnDestroy';\n        case LifecycleHooks.DoCheck:\n            return 'ngDoCheck';\n        case LifecycleHooks.OnChanges:\n            return 'ngOnChanges';\n        case LifecycleHooks.AfterContentInit:\n            return 'ngAfterContentInit';\n        case LifecycleHooks.AfterContentChecked:\n            return 'ngAfterContentChecked';\n        case LifecycleHooks.AfterViewInit:\n            return 'ngAfterViewInit';\n        case LifecycleHooks.AfterViewChecked:\n            return 'ngAfterViewChecked';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' +\n    '([-\\\\w]+)|' +\n    '(?:\\\\.([-\\\\w]+))|' +\n    '(?:\\\\[([-.\\\\w*]+)(?:=([\\\"\\']?)([^\\\\]\\\"\\']*)\\\\5)?\\\\])|' +\n    '(\\\\))|' +\n    '(\\\\s*,\\\\s*)', // \",\"\n'g');\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nvar CssSelector = (function () {\n    function CssSelector() {\n        this.element = null;\n        this.classNames = [];\n        this.attrs = [];\n        this.notSelectors = [];\n    }\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CssSelector.parse = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ _addResult = function (res, cssSel) {\n            if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n                cssSel.attrs.length == 0) {\n                cssSel.element = '*';\n            }\n            res.push(cssSel);\n        };\n        var /** @type {?} */ cssSelector = new CssSelector();\n        var /** @type {?} */ match;\n        var /** @type {?} */ current = cssSelector;\n        var /** @type {?} */ inNot = false;\n        _SELECTOR_REGEXP.lastIndex = 0;\n        while (match = _SELECTOR_REGEXP.exec(selector)) {\n            if (match[1]) {\n                if (inNot) {\n                    throw new Error('Nesting :not is not allowed in a selector');\n                }\n                inNot = true;\n                current = new CssSelector();\n                cssSelector.notSelectors.push(current);\n            }\n            if (match[2]) {\n                current.setElement(match[2]);\n            }\n            if (match[3]) {\n                current.addClassName(match[3]);\n            }\n            if (match[4]) {\n                current.addAttribute(match[4], match[6]);\n            }\n            if (match[7]) {\n                inNot = false;\n                current = cssSelector;\n            }\n            if (match[8]) {\n                if (inNot) {\n                    throw new Error('Multiple selectors in :not are not supported');\n                }\n                _addResult(results, cssSelector);\n                cssSelector = current = new CssSelector();\n            }\n        }\n        _addResult(results, cssSelector);\n        return results;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.isElementSelector = /**\n     * @return {?}\n     */\n    function () {\n        return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n            this.notSelectors.length === 0;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.hasElementSelector = /**\n     * @return {?}\n     */\n    function () { return !!this.element; };\n    /**\n     * @param {?=} element\n     * @return {?}\n     */\n    CssSelector.prototype.setElement = /**\n     * @param {?=} element\n     * @return {?}\n     */\n    function (element) {\n        if (element === void 0) { element = null; }\n        this.element = element;\n    };\n    /** Gets a template string for an element that matches the selector. */\n    /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    CssSelector.prototype.getMatchingElementTemplate = /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tagName = this.element || 'div';\n        var /** @type {?} */ classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\n        var /** @type {?} */ attrs = '';\n        for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n            var /** @type {?} */ attrName = this.attrs[i];\n            var /** @type {?} */ attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\n            attrs += \" \" + attrName + attrValue;\n        }\n        return getHtmlTagDefinition(tagName).isVoid ? \"<\" + tagName + classAttr + attrs + \"/>\" :\n            \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\n    };\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    CssSelector.prototype.addAttribute = /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    function (name, value) {\n        if (value === void 0) { value = ''; }\n        this.attrs.push(name, value && value.toLowerCase() || '');\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    CssSelector.prototype.addClassName = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { this.classNames.push(name.toLowerCase()); };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ res = this.element || '';\n        if (this.classNames) {\n            this.classNames.forEach(function (klass) { return res += \".\" + klass; });\n        }\n        if (this.attrs) {\n            for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n                var /** @type {?} */ name_1 = this.attrs[i];\n                var /** @type {?} */ value = this.attrs[i + 1];\n                res += \"[\" + name_1 + (value ? '=' + value : '') + \"]\";\n            }\n        }\n        this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\n        return res;\n    };\n    return CssSelector;\n}());\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nvar SelectorMatcher = (function () {\n    function SelectorMatcher() {\n        this._elementMap = new Map();\n        this._elementPartialMap = new Map();\n        this._classMap = new Map();\n        this._classPartialMap = new Map();\n        this._attrValueMap = new Map();\n        this._attrValuePartialMap = new Map();\n        this._listContexts = [];\n    }\n    /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    SelectorMatcher.createNotMatcher = /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    function (notSelectors) {\n        var /** @type {?} */ notMatcher = new SelectorMatcher();\n        notMatcher.addSelectables(notSelectors, null);\n        return notMatcher;\n    };\n    /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    SelectorMatcher.prototype.addSelectables = /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    function (cssSelectors, callbackCtxt) {\n        var /** @type {?} */ listContext = /** @type {?} */ ((null));\n        if (cssSelectors.length > 1) {\n            listContext = new SelectorListContext(cssSelectors);\n            this._listContexts.push(listContext);\n        }\n        for (var /** @type {?} */ i = 0; i < cssSelectors.length; i++) {\n            this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n        }\n    };\n    /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addSelectable = /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    function (cssSelector, callbackCtxt, listContext) {\n        var /** @type {?} */ matcher = this;\n        var /** @type {?} */ element = cssSelector.element;\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        var /** @type {?} */ selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n        if (element) {\n            var /** @type {?} */ isTerminal = attrs.length === 0 && classNames.length === 0;\n            if (isTerminal) {\n                this._addTerminal(matcher._elementMap, element, selectable);\n            }\n            else {\n                matcher = this._addPartial(matcher._elementPartialMap, element);\n            }\n        }\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ isTerminal = attrs.length === 0 && i === classNames.length - 1;\n                var /** @type {?} */ className = classNames[i];\n                if (isTerminal) {\n                    this._addTerminal(matcher._classMap, className, selectable);\n                }\n                else {\n                    matcher = this._addPartial(matcher._classPartialMap, className);\n                }\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ isTerminal = i === attrs.length - 2;\n                var /** @type {?} */ name_2 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                if (isTerminal) {\n                    var /** @type {?} */ terminalMap = matcher._attrValueMap;\n                    var /** @type {?} */ terminalValuesMap = terminalMap.get(name_2);\n                    if (!terminalValuesMap) {\n                        terminalValuesMap = new Map();\n                        terminalMap.set(name_2, terminalValuesMap);\n                    }\n                    this._addTerminal(terminalValuesMap, value, selectable);\n                }\n                else {\n                    var /** @type {?} */ partialMap = matcher._attrValuePartialMap;\n                    var /** @type {?} */ partialValuesMap = partialMap.get(name_2);\n                    if (!partialValuesMap) {\n                        partialValuesMap = new Map();\n                        partialMap.set(name_2, partialValuesMap);\n                    }\n                    matcher = this._addPartial(partialValuesMap, value);\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addTerminal = /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    function (map, name, selectable) {\n        var /** @type {?} */ terminalList = map.get(name);\n        if (!terminalList) {\n            terminalList = [];\n            map.set(name, terminalList);\n        }\n        terminalList.push(selectable);\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addPartial = /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    function (map, name) {\n        var /** @type {?} */ matcher = map.get(name);\n        if (!matcher) {\n            matcher = new SelectorMatcher();\n            map.set(name, matcher);\n        }\n        return matcher;\n    };\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param cssSelector A css selector\n     * @param matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return boolean true if a match was found\n    */\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    SelectorMatcher.prototype.match = /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    function (cssSelector, matchedCallback) {\n        var /** @type {?} */ result = false;\n        var /** @type {?} */ element = /** @type {?} */ ((cssSelector.element));\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        for (var /** @type {?} */ i = 0; i < this._listContexts.length; i++) {\n            this._listContexts[i].alreadyMatched = false;\n        }\n        result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n        result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n            result;\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ className = classNames[i];\n                result =\n                    this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n                result =\n                    this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n                        result;\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ name_3 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                var /** @type {?} */ terminalValuesMap = /** @type {?} */ ((this._attrValueMap.get(name_3)));\n                if (value) {\n                    result =\n                        this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n                var /** @type {?} */ partialValuesMap = /** @type {?} */ ((this._attrValuePartialMap.get(name_3)));\n                if (value) {\n                    result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n            }\n        }\n        return result;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchTerminal = /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ selectables = map.get(name) || [];\n        var /** @type {?} */ starSelectables = /** @type {?} */ ((map.get('*')));\n        if (starSelectables) {\n            selectables = selectables.concat(starSelectables);\n        }\n        if (selectables.length === 0) {\n            return false;\n        }\n        var /** @type {?} */ selectable;\n        var /** @type {?} */ result = false;\n        for (var /** @type {?} */ i = 0; i < selectables.length; i++) {\n            selectable = selectables[i];\n            result = selectable.finalize(cssSelector, matchedCallback) || result;\n        }\n        return result;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchPartial = /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ nestedSelector = map.get(name);\n        if (!nestedSelector) {\n            return false;\n        }\n        // TODO(perf): get rid of recursion and measure again\n        // TODO(perf): don't pass the whole selector into the recursion,\n        // but only the not processed parts\n        return nestedSelector.match(cssSelector, matchedCallback);\n    };\n    return SelectorMatcher;\n}());\nvar SelectorListContext = (function () {\n    function SelectorListContext(selectors) {\n        this.selectors = selectors;\n        this.alreadyMatched = false;\n    }\n    return SelectorListContext;\n}());\nvar SelectorContext = (function () {\n    function SelectorContext(selector, cbContext, listContext) {\n        this.selector = selector;\n        this.cbContext = cbContext;\n        this.listContext = listContext;\n        this.notSelectors = selector.notSelectors;\n    }\n    /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    SelectorContext.prototype.finalize = /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    function (cssSelector, callback) {\n        var /** @type {?} */ result = true;\n        if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n            var /** @type {?} */ notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n            result = !notMatcher.match(cssSelector, null);\n        }\n        if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n            if (this.listContext) {\n                this.listContext.alreadyMatched = true;\n            }\n            callback(this.selector, this.cbContext);\n        }\n        return result;\n    };\n    return SelectorContext;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ERROR_COMPONENT_TYPE = 'ngComponentType';\nvar CompileMetadataResolver = (function () {\n    function CompileMetadataResolver(_config, _htmlParser, _ngModuleResolver, _directiveResolver, _pipeResolver, _summaryResolver, _schemaRegistry, _directiveNormalizer, _console, _staticSymbolCache, _reflector, _errorCollector) {\n        this._config = _config;\n        this._htmlParser = _htmlParser;\n        this._ngModuleResolver = _ngModuleResolver;\n        this._directiveResolver = _directiveResolver;\n        this._pipeResolver = _pipeResolver;\n        this._summaryResolver = _summaryResolver;\n        this._schemaRegistry = _schemaRegistry;\n        this._directiveNormalizer = _directiveNormalizer;\n        this._console = _console;\n        this._staticSymbolCache = _staticSymbolCache;\n        this._reflector = _reflector;\n        this._errorCollector = _errorCollector;\n        this._nonNormalizedDirectiveCache = new Map();\n        this._directiveCache = new Map();\n        this._summaryCache = new Map();\n        this._pipeCache = new Map();\n        this._ngModuleCache = new Map();\n        this._ngModuleOfTypes = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getReflector = /**\n     * @return {?}\n     */\n    function () { return this._reflector; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCacheFor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ dirMeta = this._directiveCache.get(type);\n        this._directiveCache.delete(type);\n        this._nonNormalizedDirectiveCache.delete(type);\n        this._summaryCache.delete(type);\n        this._pipeCache.delete(type);\n        this._ngModuleOfTypes.delete(type);\n        // Clear all of the NgModule as they contain transitive information!\n        this._ngModuleCache.clear();\n        if (dirMeta) {\n            this._directiveNormalizer.clearCacheFor(dirMeta);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () {\n        this._directiveCache.clear();\n        this._nonNormalizedDirectiveCache.clear();\n        this._summaryCache.clear();\n        this._pipeCache.clear();\n        this._ngModuleCache.clear();\n        this._ngModuleOfTypes.clear();\n        this._directiveNormalizer.clearCache();\n    };\n    /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._createProxyClass = /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    function (baseType, name) {\n        var /** @type {?} */ delegate = null;\n        var /** @type {?} */ proxyClass = /** @type {?} */ (function () {\n            if (!delegate) {\n                throw new Error(\"Illegal state: Class \" + name + \" for type \" + stringify(baseType) + \" is not compiled yet!\");\n            }\n            return delegate.apply(this, arguments);\n        });\n        proxyClass.setDelegate = function (d) {\n            delegate = d;\n            (/** @type {?} */ (proxyClass)).prototype = d.prototype;\n        };\n        // Make stringify work correctly\n        (/** @type {?} */ (proxyClass)).overriddenName = name;\n        return proxyClass;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getGeneratedClass = /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    function (dirType, name) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n        }\n        else {\n            return this._createProxyClass(dirType, name);\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentViewClass = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        return this.getGeneratedClass(dirType, viewClassName(dirType, 0));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentViewClass = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        return this.getGeneratedClass(dirType, hostViewClassName(dirType));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentType = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        var /** @type {?} */ name = identifierName({ reference: dirType }) + \"_Host\";\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(dirType.filePath, name);\n        }\n        else {\n            var /** @type {?} */ HostClass = /** @type {?} */ (function HostClass() { });\n            HostClass.overriddenName = name;\n            return HostClass;\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getRendererType = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), rendererTypeName(dirType));\n        }\n        else {\n            // returning an object as proxy,\n            // that we fill later during runtime compilation.\n            return /** @type {?} */ ({});\n        }\n    };\n    /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentFactory = /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    function (selector, dirType, inputs, outputs) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), componentFactoryName(dirType));\n        }\n        else {\n            var /** @type {?} */ hostView = this.getHostComponentViewClass(dirType);\n            // Note: ngContentSelectors will be filled later once the template is\n            // loaded.\n            var /** @type {?} */ createComponentFactory = this._reflector.resolveExternalReference(Identifiers.createComponentFactory);\n            return createComponentFactory(selector, dirType, /** @type {?} */ (hostView), inputs, outputs, []);\n        }\n    };\n    /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.initComponentFactory = /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    function (factory, ngContentSelectors) {\n        if (!(factory instanceof StaticSymbol)) {\n            (_a = (/** @type {?} */ (factory)).ngContentSelectors).push.apply(_a, ngContentSelectors);\n        }\n        var _a;\n    };\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadSummary = /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    function (type, kind) {\n        var /** @type {?} */ typeSummary = this._summaryCache.get(type);\n        if (!typeSummary) {\n            var /** @type {?} */ summary = this._summaryResolver.resolveSummary(type);\n            typeSummary = summary ? summary.type : null;\n            this._summaryCache.set(type, typeSummary || null);\n        }\n        return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?=} hostViewType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentMetadata = /**\n     * @param {?} compMeta\n     * @param {?=} hostViewType\n     * @return {?}\n     */\n    function (compMeta, hostViewType) {\n        var /** @type {?} */ hostType = this.getHostComponentType(compMeta.type.reference);\n        if (!hostViewType) {\n            hostViewType = this.getHostComponentViewClass(hostType);\n        }\n        // Note: ! is ok here as this method should only be called with normalized directive\n        // metadata, which always fills in the selector.\n        var /** @type {?} */ template = CssSelector.parse(/** @type {?} */ ((compMeta.selector)))[0].getMatchingElementTemplate();\n        var /** @type {?} */ templateUrl = '';\n        var /** @type {?} */ htmlAst = this._htmlParser.parse(template, templateUrl);\n        return CompileDirectiveMetadata.create({\n            isHost: true,\n            type: { reference: hostType, diDeps: [], lifecycleHooks: [] },\n            template: new CompileTemplateMetadata({\n                encapsulation: ViewEncapsulation.None,\n                template: template,\n                templateUrl: templateUrl,\n                htmlAst: htmlAst,\n                styles: [],\n                styleUrls: [],\n                ngContentSelectors: [],\n                animations: [],\n                isInline: true,\n                externalStylesheets: [],\n                interpolation: null,\n                preserveWhitespaces: false,\n            }),\n            exportAs: null,\n            changeDetection: ChangeDetectionStrategy.Default,\n            inputs: [],\n            outputs: [],\n            host: {},\n            isComponent: true,\n            selector: '*',\n            providers: [],\n            viewProviders: [],\n            queries: [],\n            viewQueries: [],\n            componentViewType: hostViewType,\n            rendererType: /** @type {?} */ ({ id: '__Host__', encapsulation: ViewEncapsulation.None, styles: [], data: {} }),\n            entryComponents: [],\n            componentFactory: null\n        });\n    };\n    /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadDirectiveMetadata = /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (ngModuleType, directiveType, isSync) {\n        var _this = this;\n        if (this._directiveCache.has(directiveType)) {\n            return null;\n        }\n        directiveType = resolveForwardRef(directiveType);\n        var _a = /** @type {?} */ ((this.getNonNormalizedDirectiveMetadata(directiveType))), annotation = _a.annotation, metadata = _a.metadata;\n        var /** @type {?} */ createDirectiveMetadata = function (templateMetadata) {\n            var /** @type {?} */ normalizedDirMeta = new CompileDirectiveMetadata({\n                isHost: false,\n                type: metadata.type,\n                isComponent: metadata.isComponent,\n                selector: metadata.selector,\n                exportAs: metadata.exportAs,\n                changeDetection: metadata.changeDetection,\n                inputs: metadata.inputs,\n                outputs: metadata.outputs,\n                hostListeners: metadata.hostListeners,\n                hostProperties: metadata.hostProperties,\n                hostAttributes: metadata.hostAttributes,\n                providers: metadata.providers,\n                viewProviders: metadata.viewProviders,\n                queries: metadata.queries,\n                viewQueries: metadata.viewQueries,\n                entryComponents: metadata.entryComponents,\n                componentViewType: metadata.componentViewType,\n                rendererType: metadata.rendererType,\n                componentFactory: metadata.componentFactory,\n                template: templateMetadata\n            });\n            if (templateMetadata) {\n                _this.initComponentFactory(/** @type {?} */ ((metadata.componentFactory)), templateMetadata.ngContentSelectors);\n            }\n            _this._directiveCache.set(directiveType, normalizedDirMeta);\n            _this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n            return null;\n        };\n        if (metadata.isComponent) {\n            var /** @type {?} */ template = /** @type {?} */ ((metadata.template));\n            var /** @type {?} */ templateMeta = this._directiveNormalizer.normalizeTemplate({\n                ngModuleType: ngModuleType,\n                componentType: directiveType,\n                moduleUrl: this._reflector.componentModuleUrl(directiveType, annotation),\n                encapsulation: template.encapsulation,\n                template: template.template,\n                templateUrl: template.templateUrl,\n                styles: template.styles,\n                styleUrls: template.styleUrls,\n                animations: template.animations,\n                interpolation: template.interpolation,\n                preserveWhitespaces: template.preserveWhitespaces\n            });\n            if (isPromise(templateMeta) && isSync) {\n                this._reportError(componentStillLoadingError(directiveType), directiveType);\n                return null;\n            }\n            return SyncAsync.then(templateMeta, createDirectiveMetadata);\n        }\n        else {\n            // directive\n            createDirectiveMetadata(null);\n            return null;\n        }\n    };\n    /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNonNormalizedDirectiveMetadata = /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directiveType) {\n        var _this = this;\n        directiveType = resolveForwardRef(directiveType);\n        if (!directiveType) {\n            return null;\n        }\n        var /** @type {?} */ cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n        if (cacheEntry) {\n            return cacheEntry;\n        }\n        var /** @type {?} */ dirMeta = this._directiveResolver.resolve(directiveType, false);\n        if (!dirMeta) {\n            return null;\n        }\n        var /** @type {?} */ nonNormalizedTemplateMetadata = /** @type {?} */ ((undefined));\n        if (createComponent.isTypeOf(dirMeta)) {\n            // component\n            var /** @type {?} */ compMeta = /** @type {?} */ (dirMeta);\n            assertArrayOfStrings('styles', compMeta.styles);\n            assertArrayOfStrings('styleUrls', compMeta.styleUrls);\n            assertInterpolationSymbols('interpolation', compMeta.interpolation);\n            var /** @type {?} */ animations = compMeta.animations;\n            nonNormalizedTemplateMetadata = new CompileTemplateMetadata({\n                encapsulation: noUndefined(compMeta.encapsulation),\n                template: noUndefined(compMeta.template),\n                templateUrl: noUndefined(compMeta.templateUrl),\n                htmlAst: null,\n                styles: compMeta.styles || [],\n                styleUrls: compMeta.styleUrls || [],\n                animations: animations || [],\n                interpolation: noUndefined(compMeta.interpolation),\n                isInline: !!compMeta.template,\n                externalStylesheets: [],\n                ngContentSelectors: [],\n                preserveWhitespaces: noUndefined(dirMeta.preserveWhitespaces),\n            });\n        }\n        var /** @type {?} */ changeDetectionStrategy = /** @type {?} */ ((null));\n        var /** @type {?} */ viewProviders = [];\n        var /** @type {?} */ entryComponentMetadata = [];\n        var /** @type {?} */ selector = dirMeta.selector;\n        if (createComponent.isTypeOf(dirMeta)) {\n            // Component\n            var /** @type {?} */ compMeta = /** @type {?} */ (dirMeta);\n            changeDetectionStrategy = /** @type {?} */ ((compMeta.changeDetection));\n            if (compMeta.viewProviders) {\n                viewProviders = this._getProvidersMetadata(compMeta.viewProviders, entryComponentMetadata, \"viewProviders for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n            }\n            if (compMeta.entryComponents) {\n                entryComponentMetadata = flattenAndDedupeArray(compMeta.entryComponents)\n                    .map(function (type) { return /** @type {?} */ ((_this._getEntryComponentMetadata(type))); })\n                    .concat(entryComponentMetadata);\n            }\n            if (!selector) {\n                selector = this._schemaRegistry.getDefaultComponentElementName();\n            }\n        }\n        else {\n            // Directive\n            if (!selector) {\n                this._reportError(syntaxError(\"Directive \" + stringifyType(directiveType) + \" has no selector, please add it!\"), directiveType);\n                selector = 'error';\n            }\n        }\n        var /** @type {?} */ providers = [];\n        if (dirMeta.providers != null) {\n            providers = this._getProvidersMetadata(dirMeta.providers, entryComponentMetadata, \"providers for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n        }\n        var /** @type {?} */ queries = [];\n        var /** @type {?} */ viewQueries = [];\n        if (dirMeta.queries != null) {\n            queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n            viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n        }\n        var /** @type {?} */ metadata = CompileDirectiveMetadata.create({\n            isHost: false,\n            selector: selector,\n            exportAs: noUndefined(dirMeta.exportAs),\n            isComponent: !!nonNormalizedTemplateMetadata,\n            type: this._getTypeMetadata(directiveType),\n            template: nonNormalizedTemplateMetadata,\n            changeDetection: changeDetectionStrategy,\n            inputs: dirMeta.inputs || [],\n            outputs: dirMeta.outputs || [],\n            host: dirMeta.host || {},\n            providers: providers || [],\n            viewProviders: viewProviders || [],\n            queries: queries || [],\n            viewQueries: viewQueries || [],\n            entryComponents: entryComponentMetadata,\n            componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                null,\n            rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : null,\n            componentFactory: null\n        });\n        if (nonNormalizedTemplateMetadata) {\n            metadata.componentFactory =\n                this.getComponentFactory(selector, directiveType, metadata.inputs, metadata.outputs);\n        }\n        cacheEntry = { metadata: metadata, annotation: dirMeta };\n        this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n        return cacheEntry;\n    };\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveMetadata = /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directiveType) {\n        var /** @type {?} */ dirMeta = /** @type {?} */ ((this._directiveCache.get(directiveType)));\n        if (!dirMeta) {\n            this._reportError(syntaxError(\"Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive \" + stringifyType(directiveType) + \".\"), directiveType);\n        }\n        return dirMeta;\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveSummary = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        var /** @type {?} */ dirSummary = /** @type {?} */ (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (!dirSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for directive \" + stringifyType(dirType) + \".\"), dirType);\n        }\n        return dirSummary;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isDirective = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Directive) ||\n            this._directiveResolver.isDirective(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isPipe = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Pipe) ||\n            this._pipeResolver.isPipe(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isNgModule = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.NgModule) ||\n            this._ngModuleResolver.isNgModule(type);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleSummary = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        var /** @type {?} */ moduleSummary = /** @type {?} */ (this._loadSummary(moduleType, CompileSummaryKind.NgModule));\n        if (!moduleSummary) {\n            var /** @type {?} */ moduleMeta = this.getNgModuleMetadata(moduleType, false);\n            moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n            if (moduleSummary) {\n                this._summaryCache.set(moduleType, moduleSummary);\n            }\n        }\n        return moduleSummary;\n    };\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     */\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadNgModuleDirectiveAndPipeMetadata = /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (moduleType, isSync, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n        var /** @type {?} */ loading = [];\n        if (ngModule) {\n            ngModule.declaredDirectives.forEach(function (id) {\n                var /** @type {?} */ promise = _this.loadDirectiveMetadata(moduleType, id.reference, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            ngModule.declaredPipes.forEach(function (id) { return _this._loadPipeMetadata(id.reference); });\n        }\n        return Promise.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleMetadata = /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (moduleType, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        moduleType = resolveForwardRef(moduleType);\n        var /** @type {?} */ compileMeta = this._ngModuleCache.get(moduleType);\n        if (compileMeta) {\n            return compileMeta;\n        }\n        var /** @type {?} */ meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n        if (!meta) {\n            return null;\n        }\n        var /** @type {?} */ declaredDirectives = [];\n        var /** @type {?} */ exportedNonModuleIdentifiers = [];\n        var /** @type {?} */ declaredPipes = [];\n        var /** @type {?} */ importedModules = [];\n        var /** @type {?} */ exportedModules = [];\n        var /** @type {?} */ providers = [];\n        var /** @type {?} */ entryComponents = [];\n        var /** @type {?} */ bootstrapComponents = [];\n        var /** @type {?} */ schemas = [];\n        if (meta.imports) {\n            flattenAndDedupeArray(meta.imports).forEach(function (importedType) {\n                var /** @type {?} */ importedModuleType = /** @type {?} */ ((undefined));\n                if (isValidType(importedType)) {\n                    importedModuleType = importedType;\n                }\n                else if (importedType && importedType.ngModule) {\n                    var /** @type {?} */ moduleWithProviders = importedType;\n                    importedModuleType = moduleWithProviders.ngModule;\n                    if (moduleWithProviders.providers) {\n                        providers.push.apply(providers, _this._getProvidersMetadata(moduleWithProviders.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(importedModuleType) + \"'\", [], importedType));\n                    }\n                }\n                if (importedModuleType) {\n                    if (_this._checkSelfImport(moduleType, importedModuleType))\n                        return;\n                    var /** @type {?} */ importedModuleSummary = _this.getNgModuleSummary(importedModuleType);\n                    if (!importedModuleSummary) {\n                        _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(importedType) + \" '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'. Please add a @NgModule annotation.\"), moduleType);\n                        return;\n                    }\n                    importedModules.push(importedModuleSummary);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n            });\n        }\n        if (meta.exports) {\n            flattenAndDedupeArray(meta.exports).forEach(function (exportedType) {\n                if (!isValidType(exportedType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(exportedType) + \"' exported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ exportedModuleSummary = _this.getNgModuleSummary(exportedType);\n                if (exportedModuleSummary) {\n                    exportedModules.push(exportedModuleSummary);\n                }\n                else {\n                    exportedNonModuleIdentifiers.push(_this._getIdentifierMetadata(exportedType));\n                }\n            });\n        }\n        // Note: This will be modified later, so we rely on\n        // getting a new instance every time!\n        var /** @type {?} */ transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n        if (meta.declarations) {\n            flattenAndDedupeArray(meta.declarations).forEach(function (declaredType) {\n                if (!isValidType(declaredType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ declaredIdentifier = _this._getIdentifierMetadata(declaredType);\n                if (_this.isDirective(declaredType)) {\n                    transitiveModule.addDirective(declaredIdentifier);\n                    declaredDirectives.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else if (_this.isPipe(declaredType)) {\n                    transitiveModule.addPipe(declaredIdentifier);\n                    transitiveModule.pipes.push(declaredIdentifier);\n                    declaredPipes.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(declaredType) + \" '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\"), moduleType);\n                    return;\n                }\n            });\n        }\n        var /** @type {?} */ exportedDirectives = [];\n        var /** @type {?} */ exportedPipes = [];\n        exportedNonModuleIdentifiers.forEach(function (exportedId) {\n            if (transitiveModule.directivesSet.has(exportedId.reference)) {\n                exportedDirectives.push(exportedId);\n                transitiveModule.addExportedDirective(exportedId);\n            }\n            else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n                exportedPipes.push(exportedId);\n                transitiveModule.addExportedPipe(exportedId);\n            }\n            else {\n                _this._reportError(syntaxError(\"Can't export \" + _this._getTypeDescriptor(exportedId.reference) + \" \" + stringifyType(exportedId.reference) + \" from \" + stringifyType(moduleType) + \" as it was neither declared nor imported!\"), moduleType);\n                return;\n            }\n        });\n        // The providers of the module have to go last\n        // so that they overwrite any other provider we already added.\n        if (meta.providers) {\n            providers.push.apply(providers, this._getProvidersMetadata(meta.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(moduleType) + \"'\", [], moduleType));\n        }\n        if (meta.entryComponents) {\n            entryComponents.push.apply(entryComponents, flattenAndDedupeArray(meta.entryComponents)\n                .map(function (type) { return /** @type {?} */ ((_this._getEntryComponentMetadata(type))); }));\n        }\n        if (meta.bootstrap) {\n            flattenAndDedupeArray(meta.bootstrap).forEach(function (type) {\n                if (!isValidType(type)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(type) + \"' used in the bootstrap property of module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                bootstrapComponents.push(_this._getIdentifierMetadata(type));\n            });\n        }\n        entryComponents.push.apply(entryComponents, bootstrapComponents.map(function (type) { return /** @type {?} */ ((_this._getEntryComponentMetadata(type.reference))); }));\n        if (meta.schemas) {\n            schemas.push.apply(schemas, flattenAndDedupeArray(meta.schemas));\n        }\n        compileMeta = new CompileNgModuleMetadata({\n            type: this._getTypeMetadata(moduleType),\n            providers: providers,\n            entryComponents: entryComponents,\n            bootstrapComponents: bootstrapComponents,\n            schemas: schemas,\n            declaredDirectives: declaredDirectives,\n            exportedDirectives: exportedDirectives,\n            declaredPipes: declaredPipes,\n            exportedPipes: exportedPipes,\n            importedModules: importedModules,\n            exportedModules: exportedModules,\n            transitiveModule: transitiveModule,\n            id: meta.id || null,\n        });\n        entryComponents.forEach(function (id) { return transitiveModule.addEntryComponent(id); });\n        providers.forEach(function (provider) { return transitiveModule.addProvider(provider, /** @type {?} */ ((compileMeta)).type); });\n        transitiveModule.addModule(compileMeta.type);\n        this._ngModuleCache.set(moduleType, compileMeta);\n        return compileMeta;\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._checkSelfImport = /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    function (moduleType, importedModuleType) {\n        if (moduleType === importedModuleType) {\n            this._reportError(syntaxError(\"'\" + stringifyType(moduleType) + \"' module can't import itself\"), moduleType);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeDescriptor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (this.isDirective(type)) {\n            return 'directive';\n        }\n        if (this.isPipe(type)) {\n            return 'pipe';\n        }\n        if (this.isNgModule(type)) {\n            return 'module';\n        }\n        if ((/** @type {?} */ (type)).provide) {\n            return 'provider';\n        }\n        return 'value';\n    };\n    /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._addTypeToModule = /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (type, moduleType) {\n        var /** @type {?} */ oldModule = this._ngModuleOfTypes.get(type);\n        if (oldModule && oldModule !== moduleType) {\n            this._reportError(syntaxError(\"Type \" + stringifyType(type) + \" is part of the declarations of 2 modules: \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \"! \" +\n                (\"Please consider moving \" + stringifyType(type) + \" to a higher module that imports \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \". \") +\n                (\"You can also create a new NgModule that exports and includes \" + stringifyType(type) + \" then import that NgModule in \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \".\")), moduleType);\n            return;\n        }\n        this._ngModuleOfTypes.set(type, moduleType);\n    };\n    /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata = /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    function (importedModules, exportedModules) {\n        // collect `providers` / `entryComponents` from all imported and all exported modules\n        var /** @type {?} */ result = new TransitiveCompileNgModuleMetadata();\n        var /** @type {?} */ modulesByToken = new Map();\n        importedModules.concat(exportedModules).forEach(function (modSummary) {\n            modSummary.modules.forEach(function (mod) { return result.addModule(mod); });\n            modSummary.entryComponents.forEach(function (comp) { return result.addEntryComponent(comp); });\n            var /** @type {?} */ addedTokens = new Set();\n            modSummary.providers.forEach(function (entry) {\n                var /** @type {?} */ tokenRef = tokenReference(entry.provider.token);\n                var /** @type {?} */ prevModules = modulesByToken.get(tokenRef);\n                if (!prevModules) {\n                    prevModules = new Set();\n                    modulesByToken.set(tokenRef, prevModules);\n                }\n                var /** @type {?} */ moduleRef = entry.module.reference;\n                // Note: the providers of one module may still contain multiple providers\n                // per token (e.g. for multi providers), and we need to preserve these.\n                if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n                    prevModules.add(moduleRef);\n                    addedTokens.add(tokenRef);\n                    result.addProvider(entry.provider, entry.module);\n                }\n            });\n        });\n        exportedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addExportedDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addExportedPipe(id); });\n        });\n        importedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addPipe(id); });\n        });\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getIdentifierMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        type = resolveForwardRef(type);\n        return { reference: type };\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isInjectable = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ annotations = this._reflector.annotations(type);\n        return annotations.some(function (ann) { return createInjectable.isTypeOf(ann); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getInjectableSummary = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return {\n            summaryKind: CompileSummaryKind.Injectable,\n            type: this._getTypeMetadata(type, null, false)\n        };\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getInjectableMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    function (type, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        var /** @type {?} */ typeSummary = this._loadSummary(type, CompileSummaryKind.Injectable);\n        if (typeSummary) {\n            return typeSummary.type;\n        }\n        return this._getTypeMetadata(type, dependencies);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (type, dependencies, throwOnUnknownDeps) {\n        if (dependencies === void 0) { dependencies = null; }\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ identifier = this._getIdentifierMetadata(type);\n        return {\n            reference: identifier.reference,\n            diDeps: this._getDependenciesMetadata(identifier.reference, dependencies, throwOnUnknownDeps),\n            lifecycleHooks: getAllLifecycleHooks(this._reflector, identifier.reference),\n        };\n    };\n    /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getFactoryMetadata = /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    function (factory, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        factory = resolveForwardRef(factory);\n        return { reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies) };\n    };\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeMetadata = /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            this._reportError(syntaxError(\"Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeMeta || null;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeSummary = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeSummary = /** @type {?} */ (this._loadSummary(pipeType, CompileSummaryKind.Pipe));\n        if (!pipeSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeSummary;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getOrLoadPipeMetadata = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            pipeMeta = this._loadPipeMetadata(pipeType);\n        }\n        return pipeMeta;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadPipeMetadata = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        pipeType = resolveForwardRef(pipeType);\n        var /** @type {?} */ pipeAnnotation = /** @type {?} */ ((this._pipeResolver.resolve(pipeType)));\n        var /** @type {?} */ pipeMeta = new CompilePipeMetadata({\n            type: this._getTypeMetadata(pipeType),\n            name: pipeAnnotation.name,\n            pure: !!pipeAnnotation.pure\n        });\n        this._pipeCache.set(pipeType, pipeMeta);\n        this._summaryCache.set(pipeType, pipeMeta.toSummary());\n        return pipeMeta;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getDependenciesMetadata = /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (typeOrFunc, dependencies, throwOnUnknownDeps) {\n        var _this = this;\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ hasUnknownDeps = false;\n        var /** @type {?} */ params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n        var /** @type {?} */ dependenciesMetadata = params.map(function (param) {\n            var /** @type {?} */ isAttribute = false;\n            var /** @type {?} */ isHost = false;\n            var /** @type {?} */ isSelf = false;\n            var /** @type {?} */ isSkipSelf = false;\n            var /** @type {?} */ isOptional = false;\n            var /** @type {?} */ token = null;\n            if (Array.isArray(param)) {\n                param.forEach(function (paramEntry) {\n                    if (createHost.isTypeOf(paramEntry)) {\n                        isHost = true;\n                    }\n                    else if (createSelf.isTypeOf(paramEntry)) {\n                        isSelf = true;\n                    }\n                    else if (createSkipSelf.isTypeOf(paramEntry)) {\n                        isSkipSelf = true;\n                    }\n                    else if (createOptional.isTypeOf(paramEntry)) {\n                        isOptional = true;\n                    }\n                    else if (createAttribute.isTypeOf(paramEntry)) {\n                        isAttribute = true;\n                        token = paramEntry.attributeName;\n                    }\n                    else if (createInject.isTypeOf(paramEntry)) {\n                        token = paramEntry.token;\n                    }\n                    else if (createInjectionToken.isTypeOf(paramEntry) || paramEntry instanceof StaticSymbol) {\n                        token = paramEntry;\n                    }\n                    else if (isValidType(paramEntry) && token == null) {\n                        token = paramEntry;\n                    }\n                });\n            }\n            else {\n                token = param;\n            }\n            if (token == null) {\n                hasUnknownDeps = true;\n                return /** @type {?} */ ((null));\n            }\n            return {\n                isAttribute: isAttribute,\n                isHost: isHost,\n                isSelf: isSelf,\n                isSkipSelf: isSkipSelf,\n                isOptional: isOptional,\n                token: _this._getTokenMetadata(token)\n            };\n        });\n        if (hasUnknownDeps) {\n            var /** @type {?} */ depsTokens = dependenciesMetadata.map(function (dep) { return dep ? stringifyType(dep.token) : '?'; }).join(', ');\n            var /** @type {?} */ message = \"Can't resolve all parameters for \" + stringifyType(typeOrFunc) + \": (\" + depsTokens + \").\";\n            if (throwOnUnknownDeps || this._config.strictInjectionParameters) {\n                this._reportError(syntaxError(message), typeOrFunc);\n            }\n            else {\n                this._console.warn(\"Warning: \" + message + \" This will become an error in Angular v6.x\");\n            }\n        }\n        return dependenciesMetadata;\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTokenMetadata = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        token = resolveForwardRef(token);\n        var /** @type {?} */ compileToken;\n        if (typeof token === 'string') {\n            compileToken = { value: token };\n        }\n        else {\n            compileToken = { identifier: { reference: token } };\n        }\n        return compileToken;\n    };\n    /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getProvidersMetadata = /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    function (providers, targetEntryComponents, debugInfo, compileProviders, type) {\n        var _this = this;\n        if (compileProviders === void 0) { compileProviders = []; }\n        providers.forEach(function (provider, providerIdx) {\n            if (Array.isArray(provider)) {\n                _this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n            }\n            else {\n                provider = resolveForwardRef(provider);\n                var /** @type {?} */ providerMeta = /** @type {?} */ ((undefined));\n                if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n                    _this._validateProvider(provider);\n                    providerMeta = new ProviderMeta(provider.provide, provider);\n                }\n                else if (isValidType(provider)) {\n                    providerMeta = new ProviderMeta(provider, { useClass: provider });\n                }\n                else if (provider === void 0) {\n                    _this._reportError(syntaxError(\"Encountered undefined provider! Usually this means you have a circular dependencies (might be caused by using 'barrel' index.ts files.\"));\n                    return;\n                }\n                else {\n                    var /** @type {?} */ providersInfo = (/** @type {?} */ (providers.reduce(function (soFar, seenProvider, seenProviderIdx) {\n                        if (seenProviderIdx < providerIdx) {\n                            soFar.push(\"\" + stringifyType(seenProvider));\n                        }\n                        else if (seenProviderIdx == providerIdx) {\n                            soFar.push(\"?\" + stringifyType(seenProvider) + \"?\");\n                        }\n                        else if (seenProviderIdx == providerIdx + 1) {\n                            soFar.push('...');\n                        }\n                        return soFar;\n                    }, [])))\n                        .join(', ');\n                    _this._reportError(syntaxError(\"Invalid \" + (debugInfo ? debugInfo : 'provider') + \" - only instances of Provider and Type are allowed, got: [\" + providersInfo + \"]\"), type);\n                    return;\n                }\n                if (providerMeta.token ===\n                    _this._reflector.resolveExternalReference(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n                    targetEntryComponents.push.apply(targetEntryComponents, _this._getEntryComponentsFromProvider(providerMeta, type));\n                }\n                else {\n                    compileProviders.push(_this.getProviderMetadata(providerMeta));\n                }\n            }\n        });\n        return compileProviders;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._validateProvider = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n            this._reportError(syntaxError(\"Invalid provider for \" + stringifyType(provider.provide) + \". useClass cannot be \" + provider.useClass + \".\\n           Usually it happens when:\\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\\n           2. Class was used before it was declared. Use forwardRef in this case.\"));\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentsFromProvider = /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    function (provider, type) {\n        var _this = this;\n        var /** @type {?} */ components = [];\n        var /** @type {?} */ collectedIdentifiers = [];\n        if (provider.useFactory || provider.useExisting || provider.useClass) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!\"), type);\n            return [];\n        }\n        if (!provider.multi) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!\"), type);\n            return [];\n        }\n        extractIdentifiers(provider.useValue, collectedIdentifiers);\n        collectedIdentifiers.forEach(function (identifier) {\n            var /** @type {?} */ entry = _this._getEntryComponentMetadata(identifier.reference, false);\n            if (entry) {\n                components.push(entry);\n            }\n        });\n        return components;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentMetadata = /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (dirType, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n        if (dirMeta && dirMeta.metadata.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirMeta.metadata.componentFactory)) };\n        }\n        var /** @type {?} */ dirSummary = /** @type {?} */ (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (dirSummary && dirSummary.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirSummary.componentFactory)) };\n        }\n        if (throwIfNotFound) {\n            throw syntaxError(dirType.name + \" cannot be used as an entry component.\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getProviderMetadata = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        var /** @type {?} */ compileDeps = /** @type {?} */ ((undefined));\n        var /** @type {?} */ compileTypeMetadata = /** @type {?} */ ((null));\n        var /** @type {?} */ compileFactoryMetadata = /** @type {?} */ ((null));\n        var /** @type {?} */ token = this._getTokenMetadata(provider.token);\n        if (provider.useClass) {\n            compileTypeMetadata = this._getInjectableMetadata(provider.useClass, provider.dependencies);\n            compileDeps = compileTypeMetadata.diDeps;\n            if (provider.token === provider.useClass) {\n                // use the compileTypeMetadata as it contains information about lifecycleHooks...\n                token = { identifier: compileTypeMetadata };\n            }\n        }\n        else if (provider.useFactory) {\n            compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n            compileDeps = compileFactoryMetadata.diDeps;\n        }\n        return {\n            token: token,\n            useClass: compileTypeMetadata,\n            useValue: provider.useValue,\n            useFactory: compileFactoryMetadata,\n            useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : undefined,\n            deps: compileDeps,\n            multi: provider.multi\n        };\n    };\n    /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueriesMetadata = /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (queries, isViewQuery, directiveType) {\n        var _this = this;\n        var /** @type {?} */ res = [];\n        Object.keys(queries).forEach(function (propertyName) {\n            var /** @type {?} */ query = queries[propertyName];\n            if (query.isViewQuery === isViewQuery) {\n                res.push(_this._getQueryMetadata(query, propertyName, directiveType));\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._queryVarBindings = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) { return selector.split(/\\s*,\\s*/); };\n    /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueryMetadata = /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (q, propertyName, typeOrFunc) {\n        var _this = this;\n        var /** @type {?} */ selectors;\n        if (typeof q.selector === 'string') {\n            selectors =\n                this._queryVarBindings(q.selector).map(function (varName) { return _this._getTokenMetadata(varName); });\n        }\n        else {\n            if (!q.selector) {\n                this._reportError(syntaxError(\"Can't construct a query for the property \\\"\" + propertyName + \"\\\" of \\\"\" + stringifyType(typeOrFunc) + \"\\\" since the query selector wasn't defined.\"), typeOrFunc);\n                selectors = [];\n            }\n            else {\n                selectors = [this._getTokenMetadata(q.selector)];\n            }\n        }\n        return {\n            selectors: selectors,\n            first: q.first,\n            descendants: q.descendants, propertyName: propertyName,\n            read: q.read ? this._getTokenMetadata(q.read) : /** @type {?} */ ((null))\n        };\n    };\n    /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._reportError = /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    function (error, type, otherType) {\n        if (this._errorCollector) {\n            this._errorCollector(error, type);\n            if (otherType) {\n                this._errorCollector(error, otherType);\n            }\n        }\n        else {\n            throw error;\n        }\n    };\n    return CompileMetadataResolver;\n}());\n/**\n * @param {?} tree\n * @param {?=} out\n * @return {?}\n */\nfunction flattenArray(tree, out) {\n    if (out === void 0) { out = []; }\n    if (tree) {\n        for (var /** @type {?} */ i = 0; i < tree.length; i++) {\n            var /** @type {?} */ item = resolveForwardRef(tree[i]);\n            if (Array.isArray(item)) {\n                flattenArray(item, out);\n            }\n            else {\n                out.push(item);\n            }\n        }\n    }\n    return out;\n}\n/**\n * @param {?} array\n * @return {?}\n */\nfunction dedupeArray(array) {\n    if (array) {\n        return Array.from(new Set(array));\n    }\n    return [];\n}\n/**\n * @param {?} tree\n * @return {?}\n */\nfunction flattenAndDedupeArray(tree) {\n    return dedupeArray(flattenArray(tree));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValidType(value) {\n    return (value instanceof StaticSymbol) || (value instanceof Type);\n}\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nfunction extractIdentifiers(value, targetIdentifiers) {\n    visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\nvar _CompileValueConverter = (function (_super) {\n    __extends(_CompileValueConverter, _super);\n    function _CompileValueConverter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    _CompileValueConverter.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    function (value, targetIdentifiers) {\n        targetIdentifiers.push({ reference: value });\n    };\n    return _CompileValueConverter;\n}(ValueTransformer));\n/**\n * @param {?} type\n * @return {?}\n */\nfunction stringifyType(type) {\n    if (type instanceof StaticSymbol) {\n        return type.name + \" in \" + type.filePath;\n    }\n    else {\n        return stringify(type);\n    }\n}\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n * @param {?} compType\n * @return {?}\n */\nfunction componentStillLoadingError(compType) {\n    var /** @type {?} */ error = Error(\"Can't compile synchronously as \" + stringify(compType) + \" is still being loaded!\");\n    (/** @type {?} */ (error))[ERROR_COMPONENT_TYPE] = compType;\n    return error;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar TypeModifier = {\n    Const: 0,\n};\nTypeModifier[TypeModifier.Const] = \"Const\";\n/**\n * @abstract\n */\nvar Type$1 = (function () {\n    function Type(modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Type.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Type;\n}());\n/** @enum {number} */\nvar BuiltinTypeName = {\n    Dynamic: 0,\n    Bool: 1,\n    String: 2,\n    Int: 3,\n    Number: 4,\n    Function: 5,\n    Inferred: 6,\n};\nBuiltinTypeName[BuiltinTypeName.Dynamic] = \"Dynamic\";\nBuiltinTypeName[BuiltinTypeName.Bool] = \"Bool\";\nBuiltinTypeName[BuiltinTypeName.String] = \"String\";\nBuiltinTypeName[BuiltinTypeName.Int] = \"Int\";\nBuiltinTypeName[BuiltinTypeName.Number] = \"Number\";\nBuiltinTypeName[BuiltinTypeName.Function] = \"Function\";\nBuiltinTypeName[BuiltinTypeName.Inferred] = \"Inferred\";\nvar BuiltinType = (function (_super) {\n    __extends(BuiltinType, _super);\n    function BuiltinType(name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BuiltinType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBuiltintType(this, context);\n    };\n    return BuiltinType;\n}(Type$1));\nvar ExpressionType = (function (_super) {\n    __extends(ExpressionType, _super);\n    function ExpressionType(value, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExpressionType(this, context);\n    };\n    return ExpressionType;\n}(Type$1));\nvar ArrayType = (function (_super) {\n    __extends(ArrayType, _super);\n    function ArrayType(of, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.of = of;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ArrayType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitArrayType(this, context);\n    };\n    return ArrayType;\n}(Type$1));\nvar MapType = (function (_super) {\n    __extends(MapType, _super);\n    function MapType(valueType, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.valueType = valueType || null;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    MapType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitMapType(this, context); };\n    return MapType;\n}(Type$1));\nvar DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\nvar INFERRED_TYPE = new BuiltinType(BuiltinTypeName.Inferred);\nvar BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\nvar INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\nvar NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\nvar STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\nvar FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\n/**\n * @record\n */\n\n/** @enum {number} */\nvar BinaryOperator = {\n    Equals: 0,\n    NotEquals: 1,\n    Identical: 2,\n    NotIdentical: 3,\n    Minus: 4,\n    Plus: 5,\n    Divide: 6,\n    Multiply: 7,\n    Modulo: 8,\n    And: 9,\n    Or: 10,\n    Lower: 11,\n    LowerEquals: 12,\n    Bigger: 13,\n    BiggerEquals: 14,\n};\nBinaryOperator[BinaryOperator.Equals] = \"Equals\";\nBinaryOperator[BinaryOperator.NotEquals] = \"NotEquals\";\nBinaryOperator[BinaryOperator.Identical] = \"Identical\";\nBinaryOperator[BinaryOperator.NotIdentical] = \"NotIdentical\";\nBinaryOperator[BinaryOperator.Minus] = \"Minus\";\nBinaryOperator[BinaryOperator.Plus] = \"Plus\";\nBinaryOperator[BinaryOperator.Divide] = \"Divide\";\nBinaryOperator[BinaryOperator.Multiply] = \"Multiply\";\nBinaryOperator[BinaryOperator.Modulo] = \"Modulo\";\nBinaryOperator[BinaryOperator.And] = \"And\";\nBinaryOperator[BinaryOperator.Or] = \"Or\";\nBinaryOperator[BinaryOperator.Lower] = \"Lower\";\nBinaryOperator[BinaryOperator.LowerEquals] = \"LowerEquals\";\nBinaryOperator[BinaryOperator.Bigger] = \"Bigger\";\nBinaryOperator[BinaryOperator.BiggerEquals] = \"BiggerEquals\";\n/**\n * @template T\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nfunction nullSafeIsEquivalent(base, other) {\n    if (base == null || other == null) {\n        return base == other;\n    }\n    return base.isEquivalent(other);\n}\n/**\n * @template T\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nfunction areAllEquivalent(base, other) {\n    var /** @type {?} */ len = base.length;\n    if (len !== other.length) {\n        return false;\n    }\n    for (var /** @type {?} */ i = 0; i < len; i++) {\n        if (!base[i].isEquivalent(other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @abstract\n */\nvar Expression = (function () {\n    function Expression(type, sourceSpan) {\n        this.type = type || null;\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.prop = /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (name, sourceSpan) {\n        return new ReadPropExpr(this, name, null, sourceSpan);\n    };\n    /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.key = /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (index, type, sourceSpan) {\n        return new ReadKeyExpr(this, index, type, sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callMethod = /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (name, params, sourceSpan) {\n        return new InvokeMethodExpr(this, name, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callFn = /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (params, sourceSpan) {\n        return new InvokeFunctionExpr(this, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.instantiate = /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (params, type, sourceSpan) {\n        return new InstantiateExpr(this, params, type, sourceSpan);\n    };\n    /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.conditional = /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        return new ConditionalExpr(this, trueCase, falseCase, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.equals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.identical = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notIdentical = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.minus = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.plus = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.divide = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.multiply = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.modulo = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.and = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.And, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.or = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lower = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lowerEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.bigger = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.biggerEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.isBlank = /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (sourceSpan) {\n        // Note: We use equals by purpose here to compare to null and undefined in JS.\n        // We use the typed null to allow strictNullChecks to narrow types.\n        return this.equals(TYPED_NULL_EXPR, sourceSpan);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.cast = /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (type, sourceSpan) {\n        return new CastExpr(this, type, sourceSpan);\n    };\n    /**\n     * @return {?}\n     */\n    Expression.prototype.toStmt = /**\n     * @return {?}\n     */\n    function () { return new ExpressionStatement(this, null); };\n    return Expression;\n}());\n/** @enum {number} */\nvar BuiltinVar = {\n    This: 0,\n    Super: 1,\n    CatchError: 2,\n    CatchStack: 3,\n};\nBuiltinVar[BuiltinVar.This] = \"This\";\nBuiltinVar[BuiltinVar.Super] = \"Super\";\nBuiltinVar[BuiltinVar.CatchError] = \"CatchError\";\nBuiltinVar[BuiltinVar.CatchStack] = \"CatchStack\";\nvar ReadVarExpr = (function (_super) {\n    __extends(ReadVarExpr, _super);\n    function ReadVarExpr(name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        if (typeof name === 'string') {\n            _this.name = name;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = /** @type {?} */ (name);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadVarExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadVarExpr && this.name === e.name && this.builtin === e.builtin;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadVarExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadVarExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadVarExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (!this.name) {\n            throw new Error(\"Built in variable \" + this.builtin + \" can not be assigned to.\");\n        }\n        return new WriteVarExpr(this.name, value, null, this.sourceSpan);\n    };\n    return ReadVarExpr;\n}(Expression));\nvar WriteVarExpr = (function (_super) {\n    __extends(WriteVarExpr, _super);\n    function WriteVarExpr(name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WriteVarExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WriteVarExpr && this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteVarExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWriteVarExpr(this, context);\n    };\n    /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    WriteVarExpr.prototype.toDeclStmt = /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    function (type, modifiers) {\n        return new DeclareVarStmt(this.name, this.value, type, modifiers, this.sourceSpan);\n    };\n    return WriteVarExpr;\n}(Expression));\nvar WriteKeyExpr = (function (_super) {\n    __extends(WriteKeyExpr, _super);\n    function WriteKeyExpr(receiver, index, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WriteKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index) && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWriteKeyExpr(this, context);\n    };\n    return WriteKeyExpr;\n}(Expression));\nvar WritePropExpr = (function (_super) {\n    __extends(WritePropExpr, _super);\n    function WritePropExpr(receiver, name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WritePropExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WritePropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WritePropExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWritePropExpr(this, context);\n    };\n    return WritePropExpr;\n}(Expression));\n/** @enum {number} */\nvar BuiltinMethod = {\n    ConcatArray: 0,\n    SubscribeObservable: 1,\n    Bind: 2,\n};\nBuiltinMethod[BuiltinMethod.ConcatArray] = \"ConcatArray\";\nBuiltinMethod[BuiltinMethod.SubscribeObservable] = \"SubscribeObservable\";\nBuiltinMethod[BuiltinMethod.Bind] = \"Bind\";\nvar InvokeMethodExpr = (function (_super) {\n    __extends(InvokeMethodExpr, _super);\n    function InvokeMethodExpr(receiver, method, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.args = args;\n        if (typeof method === 'string') {\n            _this.name = method;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = /** @type {?} */ (method);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InvokeMethodExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.builtin === e.builtin && areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInvokeMethodExpr(this, context);\n    };\n    return InvokeMethodExpr;\n}(Expression));\nvar InvokeFunctionExpr = (function (_super) {\n    __extends(InvokeFunctionExpr, _super);\n    function InvokeFunctionExpr(fn, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.fn = fn;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InvokeFunctionExpr && this.fn.isEquivalent(e.fn) &&\n            areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInvokeFunctionExpr(this, context);\n    };\n    return InvokeFunctionExpr;\n}(Expression));\nvar InstantiateExpr = (function (_super) {\n    __extends(InstantiateExpr, _super);\n    function InstantiateExpr(classExpr, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.classExpr = classExpr;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InstantiateExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InstantiateExpr && this.classExpr.isEquivalent(e.classExpr) &&\n            areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InstantiateExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInstantiateExpr(this, context);\n    };\n    return InstantiateExpr;\n}(Expression));\nvar LiteralExpr = (function (_super) {\n    __extends(LiteralExpr, _super);\n    function LiteralExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralExpr && this.value === e.value;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralExpr(this, context);\n    };\n    return LiteralExpr;\n}(Expression));\nvar ExternalExpr = (function (_super) {\n    __extends(ExternalExpr, _super);\n    function ExternalExpr(value, type, typeParams, sourceSpan) {\n        if (typeParams === void 0) { typeParams = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        _this.typeParams = typeParams;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ExternalExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ExternalExpr && this.value.name === e.value.name &&\n            this.value.moduleName === e.value.moduleName && this.value.runtime === e.value.runtime;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExternalExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExternalExpr(this, context);\n    };\n    return ExternalExpr;\n}(Expression));\nvar ExternalReference = (function () {\n    function ExternalReference(moduleName, name, runtime) {\n        this.moduleName = moduleName;\n        this.name = name;\n        this.runtime = runtime;\n    }\n    return ExternalReference;\n}());\nvar ConditionalExpr = (function (_super) {\n    __extends(ConditionalExpr, _super);\n    function ConditionalExpr(condition, trueCase, falseCase, type, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        var _this = _super.call(this, type || trueCase.type, sourceSpan) || this;\n        _this.condition = condition;\n        _this.falseCase = falseCase;\n        _this.trueCase = trueCase;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ConditionalExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ConditionalExpr && this.condition.isEquivalent(e.condition) &&\n            this.trueCase.isEquivalent(e.trueCase) && nullSafeIsEquivalent(this.falseCase, e.falseCase);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ConditionalExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitConditionalExpr(this, context);\n    };\n    return ConditionalExpr;\n}(Expression));\nvar NotExpr = (function (_super) {\n    __extends(NotExpr, _super);\n    function NotExpr(condition, sourceSpan) {\n        var _this = _super.call(this, BOOL_TYPE, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NotExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof NotExpr && this.condition.isEquivalent(e.condition);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NotExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitNotExpr(this, context);\n    };\n    return NotExpr;\n}(Expression));\nvar AssertNotNull = (function (_super) {\n    __extends(AssertNotNull, _super);\n    function AssertNotNull(condition, sourceSpan) {\n        var _this = _super.call(this, condition.type, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    AssertNotNull.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof AssertNotNull && this.condition.isEquivalent(e.condition);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AssertNotNull.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitAssertNotNullExpr(this, context);\n    };\n    return AssertNotNull;\n}(Expression));\nvar CastExpr = (function (_super) {\n    __extends(CastExpr, _super);\n    function CastExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    CastExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof CastExpr && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CastExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCastExpr(this, context);\n    };\n    return CastExpr;\n}(Expression));\nvar FnParam = (function () {\n    function FnParam(name, type) {\n        if (type === void 0) { type = null; }\n        this.name = name;\n        this.type = type;\n    }\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    FnParam.prototype.isEquivalent = /**\n     * @param {?} param\n     * @return {?}\n     */\n    function (param) { return this.name === param.name; };\n    return FnParam;\n}());\nvar FunctionExpr = (function (_super) {\n    __extends(FunctionExpr, _super);\n    function FunctionExpr(params, statements, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.params = params;\n        _this.statements = statements;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    FunctionExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof FunctionExpr && areAllEquivalent(this.params, e.params) &&\n            areAllEquivalent(this.statements, e.statements);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    FunctionExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitFunctionExpr(this, context);\n    };\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    FunctionExpr.prototype.toDeclStmt = /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    function (name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers, this.sourceSpan);\n    };\n    return FunctionExpr;\n}(Expression));\nvar BinaryOperatorExpr = (function (_super) {\n    __extends(BinaryOperatorExpr, _super);\n    function BinaryOperatorExpr(operator, lhs, rhs, type, sourceSpan) {\n        var _this = _super.call(this, type || lhs.type, sourceSpan) || this;\n        _this.operator = operator;\n        _this.rhs = rhs;\n        _this.lhs = lhs;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof BinaryOperatorExpr && this.operator === e.operator &&\n            this.lhs.isEquivalent(e.lhs) && this.rhs.isEquivalent(e.rhs);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBinaryOperatorExpr(this, context);\n    };\n    return BinaryOperatorExpr;\n}(Expression));\nvar ReadPropExpr = (function (_super) {\n    __extends(ReadPropExpr, _super);\n    function ReadPropExpr(receiver, name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadPropExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadPropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadPropExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadPropExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadPropExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return new WritePropExpr(this.receiver, this.name, value, null, this.sourceSpan);\n    };\n    return ReadPropExpr;\n}(Expression));\nvar ReadKeyExpr = (function (_super) {\n    __extends(ReadKeyExpr, _super);\n    function ReadKeyExpr(receiver, index, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadKeyExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return new WriteKeyExpr(this.receiver, this.index, value, null, this.sourceSpan);\n    };\n    return ReadKeyExpr;\n}(Expression));\nvar LiteralArrayExpr = (function (_super) {\n    __extends(LiteralArrayExpr, _super);\n    function LiteralArrayExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralArrayExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralArrayExpr(this, context);\n    };\n    return LiteralArrayExpr;\n}(Expression));\nvar LiteralMapEntry = (function () {\n    function LiteralMapEntry(key, value, quoted) {\n        this.key = key;\n        this.value = value;\n        this.quoted = quoted;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralMapEntry.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return this.key === e.key && this.value.isEquivalent(e.value);\n    };\n    return LiteralMapEntry;\n}());\nvar LiteralMapExpr = (function (_super) {\n    __extends(LiteralMapExpr, _super);\n    function LiteralMapExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        _this.valueType = null;\n        if (type) {\n            _this.valueType = type.valueType;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralMapExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralMapExpr(this, context);\n    };\n    return LiteralMapExpr;\n}(Expression));\nvar CommaExpr = (function (_super) {\n    __extends(CommaExpr, _super);\n    function CommaExpr(parts, sourceSpan) {\n        var _this = _super.call(this, parts[parts.length - 1].type, sourceSpan) || this;\n        _this.parts = parts;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    CommaExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof CommaExpr && areAllEquivalent(this.parts, e.parts);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommaExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCommaExpr(this, context);\n    };\n    return CommaExpr;\n}(Expression));\n/**\n * @record\n */\n\nvar THIS_EXPR = new ReadVarExpr(BuiltinVar.This, null, null);\nvar SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super, null, null);\nvar CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError, null, null);\nvar CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack, null, null);\nvar NULL_EXPR = new LiteralExpr(null, null, null);\nvar TYPED_NULL_EXPR = new LiteralExpr(null, INFERRED_TYPE, null);\n/** @enum {number} */\nvar StmtModifier = {\n    Final: 0,\n    Private: 1,\n    Exported: 2,\n};\nStmtModifier[StmtModifier.Final] = \"Final\";\nStmtModifier[StmtModifier.Private] = \"Private\";\nStmtModifier[StmtModifier.Exported] = \"Exported\";\n/**\n * @abstract\n */\nvar Statement = (function () {\n    function Statement(modifiers, sourceSpan) {\n        this.modifiers = modifiers || [];\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Statement.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Statement;\n}());\nvar DeclareVarStmt = (function (_super) {\n    __extends(DeclareVarStmt, _super);\n    function DeclareVarStmt(name, value, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        _this.type = type || value.type;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof DeclareVarStmt && this.name === stmt.name &&\n            this.value.isEquivalent(stmt.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareVarStmt(this, context);\n    };\n    return DeclareVarStmt;\n}(Statement));\nvar DeclareFunctionStmt = (function (_super) {\n    __extends(DeclareFunctionStmt, _super);\n    function DeclareFunctionStmt(name, params, statements, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.statements = statements;\n        _this.type = type || null;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof DeclareFunctionStmt && areAllEquivalent(this.params, stmt.params) &&\n            areAllEquivalent(this.statements, stmt.statements);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareFunctionStmt(this, context);\n    };\n    return DeclareFunctionStmt;\n}(Statement));\nvar ExpressionStatement = (function (_super) {\n    __extends(ExpressionStatement, _super);\n    function ExpressionStatement(expr, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.expr = expr;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ExpressionStatement.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ExpressionStatement && this.expr.isEquivalent(stmt.expr);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionStatement.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExpressionStmt(this, context);\n    };\n    return ExpressionStatement;\n}(Statement));\nvar ReturnStatement = (function (_super) {\n    __extends(ReturnStatement, _super);\n    function ReturnStatement(value, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ReturnStatement.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ReturnStatement && this.value.isEquivalent(stmt.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReturnStatement.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReturnStmt(this, context);\n    };\n    return ReturnStatement;\n}(Statement));\nvar AbstractClassPart = (function () {\n    function AbstractClassPart(type, modifiers) {\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n        this.type = type || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    AbstractClassPart.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return AbstractClassPart;\n}());\nvar ClassField = (function (_super) {\n    __extends(ClassField, _super);\n    function ClassField(name, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} f\n     * @return {?}\n     */\n    ClassField.prototype.isEquivalent = /**\n     * @param {?} f\n     * @return {?}\n     */\n    function (f) { return this.name === f.name; };\n    return ClassField;\n}(AbstractClassPart));\nvar ClassMethod = (function (_super) {\n    __extends(ClassMethod, _super);\n    function ClassMethod(name, params, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.body = body;\n        return _this;\n    }\n    /**\n     * @param {?} m\n     * @return {?}\n     */\n    ClassMethod.prototype.isEquivalent = /**\n     * @param {?} m\n     * @return {?}\n     */\n    function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassMethod;\n}(AbstractClassPart));\nvar ClassGetter = (function (_super) {\n    __extends(ClassGetter, _super);\n    function ClassGetter(name, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.body = body;\n        return _this;\n    }\n    /**\n     * @param {?} m\n     * @return {?}\n     */\n    ClassGetter.prototype.isEquivalent = /**\n     * @param {?} m\n     * @return {?}\n     */\n    function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassGetter;\n}(AbstractClassPart));\nvar ClassStmt = (function (_super) {\n    __extends(ClassStmt, _super);\n    function ClassStmt(name, parent, fields, getters, constructorMethod, methods, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.parent = parent;\n        _this.fields = fields;\n        _this.getters = getters;\n        _this.constructorMethod = constructorMethod;\n        _this.methods = methods;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ClassStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ClassStmt && this.name === stmt.name &&\n            nullSafeIsEquivalent(this.parent, stmt.parent) &&\n            areAllEquivalent(this.fields, stmt.fields) &&\n            areAllEquivalent(this.getters, stmt.getters) &&\n            this.constructorMethod.isEquivalent(stmt.constructorMethod) &&\n            areAllEquivalent(this.methods, stmt.methods);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ClassStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareClassStmt(this, context);\n    };\n    return ClassStmt;\n}(Statement));\nvar IfStmt = (function (_super) {\n    __extends(IfStmt, _super);\n    function IfStmt(condition, trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = []; }\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.condition = condition;\n        _this.trueCase = trueCase;\n        _this.falseCase = falseCase;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    IfStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof IfStmt && this.condition.isEquivalent(stmt.condition) &&\n            areAllEquivalent(this.trueCase, stmt.trueCase) &&\n            areAllEquivalent(this.falseCase, stmt.falseCase);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    IfStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitIfStmt(this, context);\n    };\n    return IfStmt;\n}(Statement));\nvar CommentStmt = (function (_super) {\n    __extends(CommentStmt, _super);\n    function CommentStmt(comment, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.comment = comment;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    CommentStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) { return stmt instanceof CommentStmt; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommentStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCommentStmt(this, context);\n    };\n    return CommentStmt;\n}(Statement));\nvar TryCatchStmt = (function (_super) {\n    __extends(TryCatchStmt, _super);\n    function TryCatchStmt(bodyStmts, catchStmts, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.bodyStmts = bodyStmts;\n        _this.catchStmts = catchStmts;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    TryCatchStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof TryCatchStmt && areAllEquivalent(this.bodyStmts, stmt.bodyStmts) &&\n            areAllEquivalent(this.catchStmts, stmt.catchStmts);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TryCatchStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitTryCatchStmt(this, context);\n    };\n    return TryCatchStmt;\n}(Statement));\nvar ThrowStmt = (function (_super) {\n    __extends(ThrowStmt, _super);\n    function ThrowStmt(error, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.error = error;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ThrowStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof TryCatchStmt && this.error.isEquivalent(stmt.error);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ThrowStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitThrowStmt(this, context);\n    };\n    return ThrowStmt;\n}(Statement));\n/**\n * @record\n */\n\nvar AstTransformer$1 = (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) { return expr; };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) { return stmt; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WriteVarExpr(expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeMethodExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ method = ast.builtin || ast.name;\n        return this.transformExpr(new InvokeMethodExpr(ast.receiver.visitExpression(this, context), /** @type {?} */ ((method)), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), /** @type {?} */ ((ast.falseCase)).visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new NotExpr(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new AssertNotNull(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new CastExpr(ast.value.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new FunctionExpr(ast.params, this.visitAllStatements(ast.statements, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ entries = ast.entries.map(function (entry) {\n            return new LiteralMapEntry(entry.key, entry.value.visitExpression(_this, context), entry.quoted);\n        });\n        var /** @type {?} */ mapType = new MapType(ast.valueType, null);\n        return this.transformExpr(new LiteralMapExpr(entries, mapType, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new CommaExpr(this.visitAllExpressions(ast.parts, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllExpressions = /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    function (exprs, context) {\n        var _this = this;\n        return exprs.map(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new DeclareVarStmt(stmt.name, stmt.value.visitExpression(this, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new DeclareFunctionStmt(stmt.name, stmt.params, this.visitAllStatements(stmt.statements, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ExpressionStatement(stmt.expr.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ReturnStatement(stmt.value.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        var _this = this;\n        var /** @type {?} */ parent = /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        var /** @type {?} */ getters = stmt.getters.map(function (getter) {\n            return new ClassGetter(getter.name, _this.visitAllStatements(getter.body, context), getter.type, getter.modifiers);\n        });\n        var /** @type {?} */ ctorMethod = stmt.constructorMethod &&\n            new ClassMethod(stmt.constructorMethod.name, stmt.constructorMethod.params, this.visitAllStatements(stmt.constructorMethod.body, context), stmt.constructorMethod.type, stmt.constructorMethod.modifiers);\n        var /** @type {?} */ methods = stmt.methods.map(function (method) {\n            return new ClassMethod(method.name, method.params, _this.visitAllStatements(method.body, context), method.type, method.modifiers);\n        });\n        return this.transformStmt(new ClassStmt(stmt.name, parent, stmt.fields, getters, ctorMethod, methods, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ThrowStmt(stmt.error.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(stmt, context);\n    };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllStatements = /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmts, context) {\n        var _this = this;\n        return stmts.map(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return AstTransformer;\n}());\nvar RecursiveAstVisitor$1 = (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitType = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpression = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if (ast.type) {\n            ast.type.visitType(this, context);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBuiltintType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpressionType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) {\n        type.value.visitExpression(this, context);\n        return this.visitType(type, context);\n    };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitArrayType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMapType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWritePropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeMethodExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.fn.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.classExpr.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        if (ast.typeParams) {\n            ast.typeParams.forEach(function (type) { return type.visitType(_this, context); });\n        }\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        ast.trueCase.visitExpression(this, context); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllStatements(ast.statements, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.lhs.visitExpression(this, context);\n        ast.rhs.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllExpressions(ast.entries, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        ast.entries.forEach(function (entry) { return entry.value.visitExpression(_this, context); });\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllExpressions(ast.parts, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllExpressions = /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    function (exprs, context) {\n        var _this = this;\n        exprs.forEach(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        this.visitAllStatements(stmt.statements, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.expr.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        var _this = this;\n        /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        stmt.getters.forEach(function (getter) { return _this.visitAllStatements(getter.body, context); });\n        if (stmt.constructorMethod) {\n            this.visitAllStatements(stmt.constructorMethod.body, context);\n        }\n        stmt.methods.forEach(function (method) { return _this.visitAllStatements(method.body, context); });\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.condition.visitExpression(this, context);\n        this.visitAllStatements(stmt.trueCase, context);\n        this.visitAllStatements(stmt.falseCase, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        this.visitAllStatements(stmt.bodyStmts, context);\n        this.visitAllStatements(stmt.catchStmts, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.error.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) { return stmt; };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllStatements = /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmts, context) {\n        var _this = this;\n        stmts.forEach(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return RecursiveAstVisitor;\n}());\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction findReadVarNames(stmts) {\n    var /** @type {?} */ visitor = new _ReadVarVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.varNames;\n}\nvar _ReadVarVisitor = (function (_super) {\n    __extends(_ReadVarVisitor, _super);\n    function _ReadVarVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.varNames = new Set();\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        // Don't descend into nested functions\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        // Don't descend into nested classes\n        return stmt;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if (ast.name) {\n            this.varNames.add(ast.name);\n        }\n        return null;\n    };\n    return _ReadVarVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction collectExternalReferences(stmts) {\n    var /** @type {?} */ visitor = new _FindExternalReferencesVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.externalReferences;\n}\nvar _FindExternalReferencesVisitor = (function (_super) {\n    __extends(_FindExternalReferencesVisitor, _super);\n    function _FindExternalReferencesVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.externalReferences = [];\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @param {?} context\n     * @return {?}\n     */\n    _FindExternalReferencesVisitor.prototype.visitExternalExpr = /**\n     * @param {?} e\n     * @param {?} context\n     * @return {?}\n     */\n    function (e, context) {\n        this.externalReferences.push(e.value);\n        return _super.prototype.visitExternalExpr.call(this, e, context);\n    };\n    return _FindExternalReferencesVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmt\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToStatementIfNeeded(stmt, sourceSpan) {\n    if (!sourceSpan) {\n        return stmt;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return stmt.visitStatement(transformer, null);\n}\n/**\n * @param {?} expr\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToExpressionIfNeeded(expr, sourceSpan) {\n    if (!sourceSpan) {\n        return expr;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return expr.visitExpression(transformer, null);\n}\nvar _ApplySourceSpanTransformer = (function (_super) {\n    __extends(_ApplySourceSpanTransformer, _super);\n    function _ApplySourceSpanTransformer(sourceSpan) {\n        var _this = _super.call(this) || this;\n        _this.sourceSpan = sourceSpan;\n        return _this;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype._clone = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) {\n        var /** @type {?} */ clone = Object.create(obj.constructor.prototype);\n        for (var /** @type {?} */ prop in obj) {\n            clone[prop] = obj[prop];\n        }\n        return clone;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        if (!expr.sourceSpan) {\n            expr = this._clone(expr);\n            expr.sourceSpan = this.sourceSpan;\n        }\n        return expr;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        if (!stmt.sourceSpan) {\n            stmt = this._clone(stmt);\n            stmt.sourceSpan = this.sourceSpan;\n        }\n        return stmt;\n    };\n    return _ApplySourceSpanTransformer;\n}(AstTransformer$1));\n/**\n * @param {?} name\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction variable(name, type, sourceSpan) {\n    return new ReadVarExpr(name, type, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction importExpr(id, typeParams, sourceSpan) {\n    if (typeParams === void 0) { typeParams = null; }\n    return new ExternalExpr(id, null, typeParams, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction importType(id, typeParams, typeModifiers) {\n    if (typeParams === void 0) { typeParams = null; }\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return id != null ? expressionType(importExpr(id, typeParams, null), typeModifiers) : null;\n}\n/**\n * @param {?} expr\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction expressionType(expr, typeModifiers) {\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return new ExpressionType(expr, typeModifiers);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literalArr(values, type, sourceSpan) {\n    return new LiteralArrayExpr(values, type, sourceSpan);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @return {?}\n */\nfunction literalMap(values, type) {\n    if (type === void 0) { type = null; }\n    return new LiteralMapExpr(values.map(function (e) { return new LiteralMapEntry(e.key, e.value, e.quoted); }), type, null);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction not(expr, sourceSpan) {\n    return new NotExpr(expr, sourceSpan);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction assertNotNull(expr, sourceSpan) {\n    return new AssertNotNull(expr, sourceSpan);\n}\n/**\n * @param {?} params\n * @param {?} body\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction fn(params, body, type, sourceSpan) {\n    return new FunctionExpr(params, body, type, sourceSpan);\n}\n/**\n * @param {?} value\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literal(value, type, sourceSpan) {\n    return new LiteralExpr(value, type, sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ProviderError = (function (_super) {\n    __extends(ProviderError, _super);\n    function ProviderError(message, span) {\n        return _super.call(this, span, message) || this;\n    }\n    return ProviderError;\n}(ParseError));\n/**\n * @record\n */\n\nvar ProviderViewContext = (function () {\n    function ProviderViewContext(reflector, component) {\n        var _this = this;\n        this.reflector = reflector;\n        this.component = component;\n        this.errors = [];\n        this.viewQueries = _getViewQueries(component);\n        this.viewProviders = new Map();\n        component.viewProviders.forEach(function (provider) {\n            if (_this.viewProviders.get(tokenReference(provider.token)) == null) {\n                _this.viewProviders.set(tokenReference(provider.token), true);\n            }\n        });\n    }\n    return ProviderViewContext;\n}());\nvar ProviderElementContext = (function () {\n    function ProviderElementContext(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, isTemplate, contentQueryStartId, _sourceSpan) {\n        var _this = this;\n        this.viewContext = viewContext;\n        this._parent = _parent;\n        this._isViewRoot = _isViewRoot;\n        this._directiveAsts = _directiveAsts;\n        this._sourceSpan = _sourceSpan;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._queriedTokens = new Map();\n        this.transformedHasViewContainer = false;\n        this._attrs = {};\n        attrs.forEach(function (attrAst) { return _this._attrs[attrAst.name] = attrAst.value; });\n        var /** @type {?} */ directivesMeta = _directiveAsts.map(function (directiveAst) { return directiveAst.directive; });\n        this._allProviders =\n            _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n        this._contentQueries = _getContentQueries(contentQueryStartId, directivesMeta);\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._addQueryReadsTo(provider.token, provider.token, _this._queriedTokens);\n        });\n        if (isTemplate) {\n            var /** @type {?} */ templateRefId = createTokenForExternalReference(this.viewContext.reflector, Identifiers.TemplateRef);\n            this._addQueryReadsTo(templateRefId, templateRefId, this._queriedTokens);\n        }\n        refs.forEach(function (refAst) {\n            var /** @type {?} */ defaultQueryValue = refAst.value ||\n                createTokenForExternalReference(_this.viewContext.reflector, Identifiers.ElementRef);\n            _this._addQueryReadsTo({ value: refAst.name }, defaultQueryValue, _this._queriedTokens);\n        });\n        if (this._queriedTokens.get(this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef))) {\n            this.transformedHasViewContainer = true;\n        }\n        // create the providers that we know are eager first\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            var /** @type {?} */ eager = provider.eager || _this._queriedTokens.get(tokenReference(provider.token));\n            if (eager) {\n                _this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ProviderElementContext.prototype.afterElement = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // collect lazy providers\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n        });\n    };\n    Object.defineProperty(ProviderElementContext.prototype, \"transformProviders\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // Note: Maps keep their insertion order.\n            var /** @type {?} */ lazyProviders = [];\n            var /** @type {?} */ eagerProviders = [];\n            this._transformedProviders.forEach(function (provider) {\n                if (provider.eager) {\n                    eagerProviders.push(provider);\n                }\n                else {\n                    lazyProviders.push(provider);\n                }\n            });\n            return lazyProviders.concat(eagerProviders);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedDirectiveAsts\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ sortedProviderTypes = this.transformProviders.map(function (provider) { return provider.token.identifier; });\n            var /** @type {?} */ sortedDirectives = this._directiveAsts.slice();\n            sortedDirectives.sort(function (dir1, dir2) {\n                return sortedProviderTypes.indexOf(dir1.directive.type) -\n                    sortedProviderTypes.indexOf(dir2.directive.type);\n            });\n            return sortedDirectives;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"queryMatches\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ allMatches = [];\n            this._queriedTokens.forEach(function (matches) { allMatches.push.apply(allMatches, matches); });\n            return allMatches;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    ProviderElementContext.prototype._addQueryReadsTo = /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    function (token, defaultValue, queryReadTokens) {\n        this._getQueriesFor(token).forEach(function (query) {\n            var /** @type {?} */ queryValue = query.meta.read || defaultValue;\n            var /** @type {?} */ tokenRef = tokenReference(queryValue);\n            var /** @type {?} */ queryMatches = queryReadTokens.get(tokenRef);\n            if (!queryMatches) {\n                queryMatches = [];\n                queryReadTokens.set(tokenRef, queryMatches);\n            }\n            queryMatches.push({ queryId: query.queryId, value: queryValue });\n        });\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getQueriesFor = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ result = [];\n        var /** @type {?} */ currentEl = this;\n        var /** @type {?} */ distance = 0;\n        var /** @type {?} */ queries;\n        while (currentEl !== null) {\n            queries = currentEl._contentQueries.get(tokenReference(token));\n            if (queries) {\n                result.push.apply(result, queries.filter(function (query) { return query.meta.descendants || distance <= 1; }));\n            }\n            if (currentEl._directiveAsts.length > 0) {\n                distance++;\n            }\n            currentEl = currentEl._parent;\n        }\n        queries = this.viewContext.viewQueries.get(tokenReference(token));\n        if (queries) {\n            result.push.apply(result, queries);\n        }\n        return result;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getOrCreateLocalProvider = /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    function (requestingProviderType, token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider || ((requestingProviderType === ProviderAstType.Directive ||\n            requestingProviderType === ProviderAstType.PublicService) &&\n            resolvedProvider.providerType === ProviderAstType.PrivateService) ||\n            ((requestingProviderType === ProviderAstType.PrivateService ||\n                requestingProviderType === ProviderAstType.PublicService) &&\n                resolvedProvider.providerType === ProviderAstType.Builtin)) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this.viewContext.errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), this._sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, { token: provider.useExisting }, eager)));\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getLocalDependency = /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        if (dep.isAttribute) {\n            var /** @type {?} */ attrValue = this._attrs[/** @type {?} */ ((dep.token)).value];\n            return { isValue: true, value: attrValue == null ? null : attrValue };\n        }\n        if (dep.token != null) {\n            // access builtints\n            if ((requestingProviderType === ProviderAstType.Directive ||\n                requestingProviderType === ProviderAstType.Component)) {\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.Renderer) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ElementRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ChangeDetectorRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                    return dep;\n                }\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                    (/** @type {?} */ (this)).transformedHasViewContainer = true;\n                }\n            }\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.viewContext.reflector.resolveExternalReference(Identifiers.Injector)) {\n                return dep;\n            }\n            // access providers\n            if (this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager) != null) {\n                return dep;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getDependency = /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ currElement = this;\n        var /** @type {?} */ currEager = eager;\n        var /** @type {?} */ result = null;\n        if (!dep.isSkipSelf) {\n            result = this._getLocalDependency(requestingProviderType, dep, eager);\n        }\n        if (dep.isSelf) {\n            if (!result && dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n        }\n        else {\n            // check parent elements\n            while (!result && currElement._parent) {\n                var /** @type {?} */ prevElement = currElement;\n                currElement = currElement._parent;\n                if (prevElement._isViewRoot) {\n                    currEager = false;\n                }\n                result = currElement._getLocalDependency(ProviderAstType.PublicService, dep, currEager);\n            }\n            // check @Host restriction\n            if (!result) {\n                if (!dep.isHost || this.viewContext.component.isHost ||\n                    this.viewContext.component.type.reference === tokenReference(/** @type {?} */ ((dep.token))) ||\n                    this.viewContext.viewProviders.get(tokenReference(/** @type {?} */ ((dep.token)))) != null) {\n                    result = dep;\n                }\n                else {\n                    result = dep.isOptional ? result = { isValue: true, value: null } : null;\n                }\n            }\n        }\n        if (!result) {\n            this.viewContext.errors.push(new ProviderError(\"No provider for \" + tokenName((/** @type {?} */ ((dep.token)))), this._sourceSpan));\n        }\n        return result;\n    };\n    return ProviderElementContext;\n}());\nvar NgModuleProviderAnalyzer = (function () {\n    function NgModuleProviderAnalyzer(reflector, ngModule, extraProviders, sourceSpan) {\n        var _this = this;\n        this.reflector = reflector;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._errors = [];\n        this._allProviders = new Map();\n        ngModule.transitiveModule.modules.forEach(function (ngModuleType) {\n            var /** @type {?} */ ngModuleProvider = { token: { identifier: ngModuleType }, useClass: ngModuleType };\n            _resolveProviders([ngModuleProvider], ProviderAstType.PublicService, true, sourceSpan, _this._errors, _this._allProviders);\n        });\n        _resolveProviders(ngModule.transitiveModule.providers.map(function (entry) { return entry.provider; }).concat(extraProviders), ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders);\n    }\n    /**\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype.parse = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.token, provider.eager);\n        });\n        if (this._errors.length > 0) {\n            var /** @type {?} */ errorString = this._errors.join('\\n');\n            throw new Error(\"Provider parse errors:\\n\" + errorString);\n        }\n        // Note: Maps keep their insertion order.\n        var /** @type {?} */ lazyProviders = [];\n        var /** @type {?} */ eagerProviders = [];\n        this._transformedProviders.forEach(function (provider) {\n            if (provider.eager) {\n                eagerProviders.push(provider);\n            }\n            else {\n                lazyProviders.push(provider);\n            }\n        });\n        return lazyProviders.concat(eagerProviders);\n    };\n    /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider = /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    function (token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this._errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), resolvedProvider.sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = _this._getDependency({ token: provider.useExisting }, eager, resolvedProvider.sourceSpan);\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getDependency = /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    function (dep, eager, requestorSourceSpan) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ foundLocal = false;\n        if (!dep.isSkipSelf && dep.token != null) {\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.reflector.resolveExternalReference(Identifiers.Injector) ||\n                tokenReference(dep.token) ===\n                    this.reflector.resolveExternalReference(Identifiers.ComponentFactoryResolver)) {\n                foundLocal = true;\n                // access providers\n            }\n            else if (this._getOrCreateLocalProvider(dep.token, eager) != null) {\n                foundLocal = true;\n            }\n        }\n        var /** @type {?} */ result = dep;\n        if (dep.isSelf && !foundLocal) {\n            if (dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n            else {\n                this._errors.push(new ProviderError(\"No provider for \" + tokenName((/** @type {?} */ ((dep.token)))), requestorSourceSpan));\n            }\n        }\n        return result;\n    };\n    return NgModuleProviderAnalyzer;\n}());\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProvider(provider, _a) {\n    var useExisting = _a.useExisting, useValue = _a.useValue, deps = _a.deps;\n    return {\n        token: provider.token,\n        useClass: provider.useClass,\n        useExisting: useExisting,\n        useFactory: provider.useFactory,\n        useValue: useValue,\n        deps: deps,\n        multi: provider.multi\n    };\n}\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProviderAst(provider, _a) {\n    var eager = _a.eager, providers = _a.providers;\n    return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan);\n}\n/**\n * @param {?} directives\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @return {?}\n */\nfunction _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n    var /** @type {?} */ providersByToken = new Map();\n    directives.forEach(function (directive) {\n        var /** @type {?} */ dirProvider = { token: { identifier: directive.type }, useClass: directive.type };\n        _resolveProviders([dirProvider], directive.isComponent ? ProviderAstType.Component : ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken);\n    });\n    // Note: directives need to be able to overwrite providers of a component!\n    var /** @type {?} */ directivesWithComponentFirst = directives.filter(function (dir) { return dir.isComponent; }).concat(directives.filter(function (dir) { return !dir.isComponent; }));\n    directivesWithComponentFirst.forEach(function (directive) {\n        _resolveProviders(directive.providers, ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken);\n        _resolveProviders(directive.viewProviders, ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken);\n    });\n    return providersByToken;\n}\n/**\n * @param {?} providers\n * @param {?} providerType\n * @param {?} eager\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @param {?} targetProvidersByToken\n * @return {?}\n */\nfunction _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken) {\n    providers.forEach(function (provider) {\n        var /** @type {?} */ resolvedProvider = targetProvidersByToken.get(tokenReference(provider.token));\n        if (resolvedProvider != null && !!resolvedProvider.multiProvider !== !!provider.multi) {\n            targetErrors.push(new ProviderError(\"Mixing multi and non multi provider is not possible for token \" + tokenName(resolvedProvider.token), sourceSpan));\n        }\n        if (!resolvedProvider) {\n            var /** @type {?} */ lifecycleHooks = provider.token.identifier &&\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks ?\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks :\n                [];\n            var /** @type {?} */ isUseValue = !(provider.useClass || provider.useExisting || provider.useFactory);\n            resolvedProvider = new ProviderAst(provider.token, !!provider.multi, eager || isUseValue, [provider], providerType, lifecycleHooks, sourceSpan);\n            targetProvidersByToken.set(tokenReference(provider.token), resolvedProvider);\n        }\n        else {\n            if (!provider.multi) {\n                resolvedProvider.providers.length = 0;\n            }\n            resolvedProvider.providers.push(provider);\n        }\n    });\n}\n/**\n * @param {?} component\n * @return {?}\n */\nfunction _getViewQueries(component) {\n    // Note: queries start with id 1 so we can use the number in a Bloom filter!\n    var /** @type {?} */ viewQueryId = 1;\n    var /** @type {?} */ viewQueries = new Map();\n    if (component.viewQueries) {\n        component.viewQueries.forEach(function (query) { return _addQueryToTokenMap(viewQueries, { meta: query, queryId: viewQueryId++ }); });\n    }\n    return viewQueries;\n}\n/**\n * @param {?} contentQueryStartId\n * @param {?} directives\n * @return {?}\n */\nfunction _getContentQueries(contentQueryStartId, directives) {\n    var /** @type {?} */ contentQueryId = contentQueryStartId;\n    var /** @type {?} */ contentQueries = new Map();\n    directives.forEach(function (directive, directiveIndex) {\n        if (directive.queries) {\n            directive.queries.forEach(function (query) { return _addQueryToTokenMap(contentQueries, { meta: query, queryId: contentQueryId++ }); });\n        }\n    });\n    return contentQueries;\n}\n/**\n * @param {?} map\n * @param {?} query\n * @return {?}\n */\nfunction _addQueryToTokenMap(map, query) {\n    query.meta.selectors.forEach(function (token) {\n        var /** @type {?} */ entry = map.get(tokenReference(token));\n        if (!entry) {\n            entry = [];\n            map.set(tokenReference(token), entry);\n        }\n        entry.push(query);\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUOTED_KEYS = '$quoted$';\n/**\n * @param {?} ctx\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nfunction convertValueToOutputAst(ctx, value, type) {\n    if (type === void 0) { type = null; }\n    return visitValue(value, new _ValueOutputAstTransformer(ctx), type);\n}\nvar _ValueOutputAstTransformer = (function () {\n    function _ValueOutputAstTransformer(ctx) {\n        this.ctx = ctx;\n    }\n    /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitArray = /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    function (arr, type) {\n        var _this = this;\n        return literalArr(arr.map(function (value) { return visitValue(value, _this, null); }), type);\n    };\n    /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    function (map, type) {\n        var _this = this;\n        var /** @type {?} */ entries = [];\n        var /** @type {?} */ quotedSet = new Set(map && map[QUOTED_KEYS]);\n        Object.keys(map).forEach(function (key) {\n            entries.push(new LiteralMapEntry(key, visitValue(map[key], _this, null), quotedSet.has(key)));\n        });\n        return new LiteralMapExpr(entries, type);\n    };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitPrimitive = /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    function (value, type) { return literal(value, type); };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    function (value, type) {\n        if (value instanceof Expression) {\n            return value;\n        }\n        else {\n            return this.ctx.importExpr(value);\n        }\n    };\n    return _ValueOutputAstTransformer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} ctx\n * @param {?} providerAst\n * @return {?}\n */\nfunction providerDef(ctx, providerAst) {\n    var /** @type {?} */ flags = 0;\n    if (!providerAst.eager) {\n        flags |= 4096 /* LazyProvider */;\n    }\n    if (providerAst.providerType === ProviderAstType.PrivateService) {\n        flags |= 8192 /* PrivateProvider */;\n    }\n    providerAst.lifecycleHooks.forEach(function (lifecycleHook) {\n        // for regular providers, we only support ngOnDestroy\n        if (lifecycleHook === LifecycleHooks.OnDestroy ||\n            providerAst.providerType === ProviderAstType.Directive ||\n            providerAst.providerType === ProviderAstType.Component) {\n            flags |= lifecycleHookToNodeFlag(lifecycleHook);\n        }\n    });\n    var _a = providerAst.multiProvider ?\n        multiProviderDef(ctx, flags, providerAst.providers) :\n        singleProviderDef(ctx, flags, providerAst.providerType, providerAst.providers[0]), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return {\n        providerExpr: providerExpr,\n        flags: providerFlags, depsExpr: depsExpr,\n        tokenExpr: tokenExpr(ctx, providerAst.token),\n    };\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providers\n * @return {?}\n */\nfunction multiProviderDef(ctx, flags, providers) {\n    var /** @type {?} */ allDepDefs = [];\n    var /** @type {?} */ allParams = [];\n    var /** @type {?} */ exprs = providers.map(function (provider, providerIndex) {\n        var /** @type {?} */ expr;\n        if (provider.useClass) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useClass.diDeps);\n            expr = ctx.importExpr(provider.useClass.reference).instantiate(depExprs);\n        }\n        else if (provider.useFactory) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useFactory.diDeps);\n            expr = ctx.importExpr(provider.useFactory.reference).callFn(depExprs);\n        }\n        else if (provider.useExisting) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, [{ token: provider.useExisting }]);\n            expr = depExprs[0];\n        }\n        else {\n            expr = convertValueToOutputAst(ctx, provider.useValue);\n        }\n        return expr;\n    });\n    var /** @type {?} */ providerExpr = fn(allParams, [new ReturnStatement(literalArr(exprs))], INFERRED_TYPE);\n    return {\n        providerExpr: providerExpr,\n        flags: flags | 1024 /* TypeFactoryProvider */,\n        depsExpr: literalArr(allDepDefs)\n    };\n    /**\n     * @param {?} providerIndex\n     * @param {?} deps\n     * @return {?}\n     */\n    function convertDeps(providerIndex, deps) {\n        return deps.map(function (dep, depIndex) {\n            var /** @type {?} */ paramName = \"p\" + providerIndex + \"_\" + depIndex;\n            allParams.push(new FnParam(paramName, DYNAMIC_TYPE));\n            allDepDefs.push(depDef(ctx, dep));\n            return variable(paramName);\n        });\n    }\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providerType\n * @param {?} providerMeta\n * @return {?}\n */\nfunction singleProviderDef(ctx, flags, providerType, providerMeta) {\n    var /** @type {?} */ providerExpr;\n    var /** @type {?} */ deps;\n    if (providerType === ProviderAstType.Directive || providerType === ProviderAstType.Component) {\n        providerExpr = ctx.importExpr(/** @type {?} */ ((providerMeta.useClass)).reference);\n        flags |= 16384 /* TypeDirective */;\n        deps = providerMeta.deps || /** @type {?} */ ((providerMeta.useClass)).diDeps;\n    }\n    else {\n        if (providerMeta.useClass) {\n            providerExpr = ctx.importExpr(providerMeta.useClass.reference);\n            flags |= 512 /* TypeClassProvider */;\n            deps = providerMeta.deps || providerMeta.useClass.diDeps;\n        }\n        else if (providerMeta.useFactory) {\n            providerExpr = ctx.importExpr(providerMeta.useFactory.reference);\n            flags |= 1024 /* TypeFactoryProvider */;\n            deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n        }\n        else if (providerMeta.useExisting) {\n            providerExpr = NULL_EXPR;\n            flags |= 2048 /* TypeUseExistingProvider */;\n            deps = [{ token: providerMeta.useExisting }];\n        }\n        else {\n            providerExpr = convertValueToOutputAst(ctx, providerMeta.useValue);\n            flags |= 256 /* TypeValueProvider */;\n            deps = [];\n        }\n    }\n    var /** @type {?} */ depsExpr = literalArr(deps.map(function (dep) { return depDef(ctx, dep); }));\n    return { providerExpr: providerExpr, flags: flags, depsExpr: depsExpr };\n}\n/**\n * @param {?} ctx\n * @param {?} tokenMeta\n * @return {?}\n */\nfunction tokenExpr(ctx, tokenMeta) {\n    return tokenMeta.identifier ? ctx.importExpr(tokenMeta.identifier.reference) :\n        literal(tokenMeta.value);\n}\n/**\n * @param {?} ctx\n * @param {?} dep\n * @return {?}\n */\nfunction depDef(ctx, dep) {\n    // Note: the following fields have already been normalized out by provider_analyzer:\n    // - isAttribute, isSelf, isHost\n    var /** @type {?} */ expr = dep.isValue ? convertValueToOutputAst(ctx, dep.value) : tokenExpr(ctx, /** @type {?} */ ((dep.token)));\n    var /** @type {?} */ flags = 0;\n    if (dep.isSkipSelf) {\n        flags |= 1 /* SkipSelf */;\n    }\n    if (dep.isOptional) {\n        flags |= 2 /* Optional */;\n    }\n    if (dep.isValue) {\n        flags |= 8 /* Value */;\n    }\n    return flags === 0 /* None */ ? expr : literalArr([literal(flags), expr]);\n}\n/**\n * @param {?} lifecycleHook\n * @return {?}\n */\nfunction lifecycleHookToNodeFlag(lifecycleHook) {\n    var /** @type {?} */ nodeFlag = 0;\n    switch (lifecycleHook) {\n        case LifecycleHooks.AfterContentChecked:\n            nodeFlag = 2097152 /* AfterContentChecked */;\n            break;\n        case LifecycleHooks.AfterContentInit:\n            nodeFlag = 1048576 /* AfterContentInit */;\n            break;\n        case LifecycleHooks.AfterViewChecked:\n            nodeFlag = 8388608 /* AfterViewChecked */;\n            break;\n        case LifecycleHooks.AfterViewInit:\n            nodeFlag = 4194304 /* AfterViewInit */;\n            break;\n        case LifecycleHooks.DoCheck:\n            nodeFlag = 262144 /* DoCheck */;\n            break;\n        case LifecycleHooks.OnChanges:\n            nodeFlag = 524288 /* OnChanges */;\n            break;\n        case LifecycleHooks.OnDestroy:\n            nodeFlag = 131072 /* OnDestroy */;\n            break;\n        case LifecycleHooks.OnInit:\n            nodeFlag = 65536 /* OnInit */;\n            break;\n    }\n    return nodeFlag;\n}\n/**\n * @param {?} reflector\n * @param {?} ctx\n * @param {?} flags\n * @param {?} entryComponents\n * @return {?}\n */\nfunction componentFactoryResolverProviderDef(reflector, ctx, flags, entryComponents) {\n    var /** @type {?} */ entryComponentFactories = entryComponents.map(function (entryComponent) { return ctx.importExpr(entryComponent.componentFactory); });\n    var /** @type {?} */ token = createTokenForExternalReference(reflector, Identifiers.ComponentFactoryResolver);\n    var /** @type {?} */ classMeta = {\n        diDeps: [\n            { isValue: true, value: literalArr(entryComponentFactories) },\n            { token: token, isSkipSelf: true, isOptional: true },\n            { token: createTokenForExternalReference(reflector, Identifiers.NgModuleRef) },\n        ],\n        lifecycleHooks: [],\n        reference: reflector.resolveExternalReference(Identifiers.CodegenComponentFactoryResolver)\n    };\n    var _a = singleProviderDef(ctx, flags, ProviderAstType.PrivateService, {\n        token: token,\n        multi: false,\n        useClass: classMeta,\n    }), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return { providerExpr: providerExpr, flags: providerFlags, depsExpr: depsExpr, tokenExpr: tokenExpr(ctx, token) };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NgModuleCompileResult = (function () {\n    function NgModuleCompileResult(ngModuleFactoryVar) {\n        this.ngModuleFactoryVar = ngModuleFactoryVar;\n    }\n    return NgModuleCompileResult;\n}());\nvar LOG_VAR = variable('_l');\nvar NgModuleCompiler = (function () {\n    function NgModuleCompiler(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.compile = /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    function (ctx, ngModuleMeta, extraProviders) {\n        var /** @type {?} */ sourceSpan = typeSourceSpan('NgModule', ngModuleMeta.type);\n        var /** @type {?} */ entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents;\n        var /** @type {?} */ bootstrapComponents = ngModuleMeta.bootstrapComponents;\n        var /** @type {?} */ providerParser = new NgModuleProviderAnalyzer(this.reflector, ngModuleMeta, extraProviders, sourceSpan);\n        var /** @type {?} */ providerDefs = [componentFactoryResolverProviderDef(this.reflector, ctx, 0 /* None */, entryComponentFactories)]\n            .concat(providerParser.parse().map(function (provider) { return providerDef(ctx, provider); }))\n            .map(function (_a) {\n            var providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            return importExpr(Identifiers.moduleProviderDef).callFn([\n                literal(flags), tokenExpr, providerExpr, depsExpr\n            ]);\n        });\n        var /** @type {?} */ ngModuleDef = importExpr(Identifiers.moduleDef).callFn([literalArr(providerDefs)]);\n        var /** @type {?} */ ngModuleDefFactory = fn([new FnParam(/** @type {?} */ ((LOG_VAR.name)))], [new ReturnStatement(ngModuleDef)], INFERRED_TYPE);\n        var /** @type {?} */ ngModuleFactoryVar = identifierName(ngModuleMeta.type) + \"NgFactory\";\n        this._createNgModuleFactory(ctx, ngModuleMeta.type.reference, importExpr(Identifiers.createModuleFactory).callFn([\n            ctx.importExpr(ngModuleMeta.type.reference),\n            literalArr(bootstrapComponents.map(function (id) { return ctx.importExpr(id.reference); })),\n            ngModuleDefFactory\n        ]));\n        if (ngModuleMeta.id) {\n            var /** @type {?} */ registerFactoryStmt = importExpr(Identifiers.RegisterModuleFactoryFn)\n                .callFn([literal(ngModuleMeta.id), variable(ngModuleFactoryVar)])\n                .toStmt();\n            ctx.statements.push(registerFactoryStmt);\n        }\n        return new NgModuleCompileResult(ngModuleFactoryVar);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.createStub = /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    function (ctx, ngModuleReference) {\n        this._createNgModuleFactory(ctx, ngModuleReference, NULL_EXPR);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    NgModuleCompiler.prototype._createNgModuleFactory = /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    function (ctx, reference, value) {\n        var /** @type {?} */ ngModuleFactoryVar = identifierName({ reference: reference }) + \"NgFactory\";\n        var /** @type {?} */ ngModuleFactoryStmt = variable(ngModuleFactoryVar)\n            .set(value)\n            .toDeclStmt(importType(Identifiers.NgModuleFactory, [/** @type {?} */ ((expressionType(ctx.importExpr(reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]);\n        ctx.statements.push(ngModuleFactoryStmt);\n    };\n    return NgModuleCompiler;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Resolves types to {\\@link NgModule}.\n */\nvar NgModuleResolver = (function () {\n    function NgModuleResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    NgModuleResolver.prototype.isNgModule = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this._reflector.annotations(type).some(createNgModule.isTypeOf); };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    NgModuleResolver.prototype.resolve = /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModuleMeta = findLast(this._reflector.annotations(type), createNgModule.isTypeOf);\n        if (ngModuleMeta) {\n            return ngModuleMeta;\n        }\n        else {\n            if (throwIfNotFound) {\n                throw new Error(\"No NgModule metadata found for '\" + stringify(type) + \"'.\");\n            }\n            return null;\n        }\n    };\n    return NgModuleResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\nvar VERSION$1 = 3;\nvar JS_B64_PREFIX = '# sourceMappingURL=data:application/json;base64,';\nvar SourceMapGenerator = (function () {\n    function SourceMapGenerator(file) {\n        if (file === void 0) { file = null; }\n        this.file = file;\n        this.sourcesContent = new Map();\n        this.lines = [];\n        this.lastCol0 = 0;\n        this.hasMappings = false;\n    }\n    // The content is `null` when the content is expected to be loaded using the URL\n    /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addSource = /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    function (url, content) {\n        if (content === void 0) { content = null; }\n        if (!this.sourcesContent.has(url)) {\n            this.sourcesContent.set(url, content);\n        }\n        return this;\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addLine = /**\n     * @return {?}\n     */\n    function () {\n        this.lines.push([]);\n        this.lastCol0 = 0;\n        return this;\n    };\n    /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addMapping = /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    function (col0, sourceUrl, sourceLine0, sourceCol0) {\n        if (!this.currentLine) {\n            throw new Error(\"A line must be added before mappings can be added\");\n        }\n        if (sourceUrl != null && !this.sourcesContent.has(sourceUrl)) {\n            throw new Error(\"Unknown source file \\\"\" + sourceUrl + \"\\\"\");\n        }\n        if (col0 == null) {\n            throw new Error(\"The column in the generated code must be provided\");\n        }\n        if (col0 < this.lastCol0) {\n            throw new Error(\"Mapping should be added in output order\");\n        }\n        if (sourceUrl && (sourceLine0 == null || sourceCol0 == null)) {\n            throw new Error(\"The source location must be provided when a source url is provided\");\n        }\n        this.hasMappings = true;\n        this.lastCol0 = col0;\n        this.currentLine.push({ col0: col0, sourceUrl: sourceUrl, sourceLine0: sourceLine0, sourceCol0: sourceCol0 });\n        return this;\n    };\n    Object.defineProperty(SourceMapGenerator.prototype, \"currentLine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.lines.slice(-1)[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJSON = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.hasMappings) {\n            return null;\n        }\n        var /** @type {?} */ sourcesIndex = new Map();\n        var /** @type {?} */ sources = [];\n        var /** @type {?} */ sourcesContent = [];\n        Array.from(this.sourcesContent.keys()).forEach(function (url, i) {\n            sourcesIndex.set(url, i);\n            sources.push(url);\n            sourcesContent.push(_this.sourcesContent.get(url) || null);\n        });\n        var /** @type {?} */ mappings = '';\n        var /** @type {?} */ lastCol0 = 0;\n        var /** @type {?} */ lastSourceIndex = 0;\n        var /** @type {?} */ lastSourceLine0 = 0;\n        var /** @type {?} */ lastSourceCol0 = 0;\n        this.lines.forEach(function (segments) {\n            lastCol0 = 0;\n            mappings += segments\n                .map(function (segment) {\n                // zero-based starting column of the line in the generated code\n                var /** @type {?} */ segAsStr = toBase64VLQ(segment.col0 - lastCol0);\n                lastCol0 = segment.col0;\n                if (segment.sourceUrl != null) {\n                    // zero-based index into the “sources” list\n                    segAsStr +=\n                        toBase64VLQ(/** @type {?} */ ((sourcesIndex.get(segment.sourceUrl))) - lastSourceIndex);\n                    lastSourceIndex = /** @type {?} */ ((sourcesIndex.get(segment.sourceUrl)));\n                    // the zero-based starting line in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceLine0)) - lastSourceLine0);\n                    lastSourceLine0 = /** @type {?} */ ((segment.sourceLine0));\n                    // the zero-based starting column in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceCol0)) - lastSourceCol0);\n                    lastSourceCol0 = /** @type {?} */ ((segment.sourceCol0));\n                }\n                return segAsStr;\n            })\n                .join(',');\n            mappings += ';';\n        });\n        mappings = mappings.slice(0, -1);\n        return {\n            'file': this.file || '',\n            'version': VERSION$1,\n            'sourceRoot': '',\n            'sources': sources,\n            'sourcesContent': sourcesContent,\n            'mappings': mappings,\n        };\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJsComment = /**\n     * @return {?}\n     */\n    function () {\n        return this.hasMappings ? '//' + JS_B64_PREFIX + toBase64String(JSON.stringify(this, null, 0)) :\n            '';\n    };\n    return SourceMapGenerator;\n}());\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64String(value) {\n    var /** @type {?} */ b64 = '';\n    value = utf8Encode(value);\n    for (var /** @type {?} */ i = 0; i < value.length;) {\n        var /** @type {?} */ i1 = value.charCodeAt(i++);\n        var /** @type {?} */ i2 = value.charCodeAt(i++);\n        var /** @type {?} */ i3 = value.charCodeAt(i++);\n        b64 += toBase64Digit(i1 >> 2);\n        b64 += toBase64Digit(((i1 & 3) << 4) | (isNaN(i2) ? 0 : i2 >> 4));\n        b64 += isNaN(i2) ? '=' : toBase64Digit(((i2 & 15) << 2) | (i3 >> 6));\n        b64 += isNaN(i2) || isNaN(i3) ? '=' : toBase64Digit(i3 & 63);\n    }\n    return b64;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64VLQ(value) {\n    value = value < 0 ? ((-value) << 1) + 1 : value << 1;\n    var /** @type {?} */ out = '';\n    do {\n        var /** @type {?} */ digit = value & 31;\n        value = value >> 5;\n        if (value > 0) {\n            digit = digit | 32;\n        }\n        out += toBase64Digit(digit);\n    } while (value > 0);\n    return out;\n}\nvar B64_DIGITS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64Digit(value) {\n    if (value < 0 || value >= 64) {\n        throw new Error(\"Can only encode value in the range [0, 63]\");\n    }\n    return B64_DIGITS[value];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\nvar _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\nvar _INDENT_WITH = '  ';\nvar CATCH_ERROR_VAR$1 = variable('error', null, null);\nvar CATCH_STACK_VAR$1 = variable('stack', null, null);\n/**\n * @record\n */\n\nvar _EmittedLine = (function () {\n    function _EmittedLine(indent) {\n        this.indent = indent;\n        this.partsLength = 0;\n        this.parts = [];\n        this.srcSpans = [];\n    }\n    return _EmittedLine;\n}());\nvar EmitterVisitorContext = (function () {\n    function EmitterVisitorContext(_indent) {\n        this._indent = _indent;\n        this._classes = [];\n        this._preambleLineCount = 0;\n        this._lines = [new _EmittedLine(_indent)];\n    }\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.createRoot = /**\n     * @return {?}\n     */\n    function () { return new EmitterVisitorContext(0); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"_currentLine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._lines[this._lines.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.println = /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    function (from, lastPart) {\n        if (lastPart === void 0) { lastPart = ''; }\n        this.print(from || null, lastPart, true);\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineIsEmpty = /**\n     * @return {?}\n     */\n    function () { return this._currentLine.parts.length === 0; };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineLength = /**\n     * @return {?}\n     */\n    function () {\n        return this._currentLine.indent * _INDENT_WITH.length + this._currentLine.partsLength;\n    };\n    /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.print = /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    function (from, part, newLine) {\n        if (newLine === void 0) { newLine = false; }\n        if (part.length > 0) {\n            this._currentLine.parts.push(part);\n            this._currentLine.partsLength += part.length;\n            this._currentLine.srcSpans.push(from && from.sourceSpan || null);\n        }\n        if (newLine) {\n            this._lines.push(new _EmittedLine(this._indent));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.removeEmptyLastLine = /**\n     * @return {?}\n     */\n    function () {\n        if (this.lineIsEmpty()) {\n            this._lines.pop();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.incIndent = /**\n     * @return {?}\n     */\n    function () {\n        this._indent++;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.decIndent = /**\n     * @return {?}\n     */\n    function () {\n        this._indent--;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.pushClass = /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    function (clazz) { this._classes.push(clazz); };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.popClass = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((this._classes.pop())); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"currentClass\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSource = /**\n     * @return {?}\n     */\n    function () {\n        return this.sourceLines\n            .map(function (l) { return l.parts.length > 0 ? _createIndent(l.indent) + l.parts.join('') : ''; })\n            .join('\\n');\n    };\n    /**\n     * @param {?} sourceFilePath\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSourceMapGenerator = /**\n     * @param {?} sourceFilePath\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    function (sourceFilePath, genFilePath, startsAtLine) {\n        if (startsAtLine === void 0) { startsAtLine = 0; }\n        var /** @type {?} */ map = new SourceMapGenerator(genFilePath);\n        var /** @type {?} */ firstOffsetMapped = false;\n        var /** @type {?} */ mapFirstOffsetIfNeeded = function () {\n            if (!firstOffsetMapped) {\n                // Add a single space so that tools won't try to load the file from disk.\n                // Note: We are using virtual urls like `ng:///`, so we have to\n                // provide a content here.\n                map.addSource(sourceFilePath, ' ').addMapping(0, sourceFilePath, 0, 0);\n                firstOffsetMapped = true;\n            }\n        };\n        for (var /** @type {?} */ i = 0; i < startsAtLine; i++) {\n            map.addLine();\n            mapFirstOffsetIfNeeded();\n        }\n        this.sourceLines.forEach(function (line, lineIdx) {\n            map.addLine();\n            var /** @type {?} */ spans = line.srcSpans;\n            var /** @type {?} */ parts = line.parts;\n            var /** @type {?} */ col0 = line.indent * _INDENT_WITH.length;\n            var /** @type {?} */ spanIdx = 0;\n            // skip leading parts without source spans\n            while (spanIdx < spans.length && !spans[spanIdx]) {\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n            }\n            if (spanIdx < spans.length && lineIdx === 0 && col0 === 0) {\n                firstOffsetMapped = true;\n            }\n            else {\n                mapFirstOffsetIfNeeded();\n            }\n            while (spanIdx < spans.length) {\n                var /** @type {?} */ span = /** @type {?} */ ((spans[spanIdx]));\n                var /** @type {?} */ source = span.start.file;\n                var /** @type {?} */ sourceLine = span.start.line;\n                var /** @type {?} */ sourceCol = span.start.col;\n                map.addSource(source.url, source.content)\n                    .addMapping(col0, source.url, sourceLine, sourceCol);\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n                // assign parts without span or the same span to the previous segment\n                while (spanIdx < spans.length && (span === spans[spanIdx] || !spans[spanIdx])) {\n                    col0 += parts[spanIdx].length;\n                    spanIdx++;\n                }\n            }\n        });\n        return map;\n    };\n    /**\n     * @param {?} count\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.setPreambleLineCount = /**\n     * @param {?} count\n     * @return {?}\n     */\n    function (count) { return this._preambleLineCount = count; };\n    /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.spanOf = /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    function (line, column) {\n        var /** @type {?} */ emittedLine = this._lines[line - this._preambleLineCount];\n        if (emittedLine) {\n            var /** @type {?} */ columnsLeft = column - _createIndent(emittedLine.indent).length;\n            for (var /** @type {?} */ partIndex = 0; partIndex < emittedLine.parts.length; partIndex++) {\n                var /** @type {?} */ part = emittedLine.parts[partIndex];\n                if (part.length > columnsLeft) {\n                    return emittedLine.srcSpans[partIndex];\n                }\n                columnsLeft -= part.length;\n            }\n        }\n        return null;\n    };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"sourceLines\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (this._lines.length && this._lines[this._lines.length - 1].parts.length === 0) {\n                return this._lines.slice(0, -1);\n            }\n            return this._lines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EmitterVisitorContext;\n}());\n/**\n * @abstract\n */\nvar AbstractEmitterVisitor = (function () {\n    function AbstractEmitterVisitor(_escapeDollarInStrings) {\n        this._escapeDollarInStrings = _escapeDollarInStrings;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        stmt.expr.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"return \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"if (\");\n        stmt.condition.visitExpression(this, ctx);\n        ctx.print(stmt, \") {\");\n        var /** @type {?} */ hasElseCase = stmt.falseCase != null && stmt.falseCase.length > 0;\n        if (stmt.trueCase.length <= 1 && !hasElseCase) {\n            ctx.print(stmt, \" \");\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.removeEmptyLastLine();\n            ctx.print(stmt, \" \");\n        }\n        else {\n            ctx.println();\n            ctx.incIndent();\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.decIndent();\n            if (hasElseCase) {\n                ctx.println(stmt, \"} else {\");\n                ctx.incIndent();\n                this.visitAllStatements(stmt.falseCase, ctx);\n                ctx.decIndent();\n            }\n        }\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"throw \");\n        stmt.error.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ lines = stmt.comment.split('\\n');\n        lines.forEach(function (line) { ctx.println(stmt, \"// \" + line); });\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        ctx.print(expr, expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \"[\");\n        expr.index.visitExpression(this, ctx);\n        ctx.print(expr, \"] = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \".\" + expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeMethodExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ name = expr.name;\n        if (expr.builtin != null) {\n            name = this.getBuiltinMethodName(expr.builtin);\n            if (name == null) {\n                // some builtins just mean to skip the call.\n                return null;\n            }\n        }\n        ctx.print(expr, \".\" + name + \"(\");\n        this.visitAllExpressions(expr.args, ctx, \",\");\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        expr.fn.visitExpression(this, ctx);\n        ctx.print(expr, \"(\");\n        this.visitAllExpressions(expr.args, ctx, ',');\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    varName = 'super';\n                    break;\n                case BuiltinVar.This:\n                    varName = 'this';\n                    break;\n                case BuiltinVar.CatchError:\n                    varName = /** @type {?} */ ((CATCH_ERROR_VAR$1.name));\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = /** @type {?} */ ((CATCH_STACK_VAR$1.name));\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        ctx.print(ast, varName);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        ast.classExpr.visitExpression(this, ctx);\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (typeof value === 'string') {\n            ctx.print(ast, escapeIdentifier(value, this._escapeDollarInStrings));\n        }\n        else {\n            ctx.print(ast, \"\" + value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        ast.condition.visitExpression(this, ctx);\n        ctx.print(ast, '? ');\n        ast.trueCase.visitExpression(this, ctx);\n        ctx.print(ast, ': '); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, '!');\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ opStr;\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                opStr = '==';\n                break;\n            case BinaryOperator.Identical:\n                opStr = '===';\n                break;\n            case BinaryOperator.NotEquals:\n                opStr = '!=';\n                break;\n            case BinaryOperator.NotIdentical:\n                opStr = '!==';\n                break;\n            case BinaryOperator.And:\n                opStr = '&&';\n                break;\n            case BinaryOperator.Or:\n                opStr = '||';\n                break;\n            case BinaryOperator.Plus:\n                opStr = '+';\n                break;\n            case BinaryOperator.Minus:\n                opStr = '-';\n                break;\n            case BinaryOperator.Divide:\n                opStr = '/';\n                break;\n            case BinaryOperator.Multiply:\n                opStr = '*';\n                break;\n            case BinaryOperator.Modulo:\n                opStr = '%';\n                break;\n            case BinaryOperator.Lower:\n                opStr = '<';\n                break;\n            case BinaryOperator.LowerEquals:\n                opStr = '<=';\n                break;\n            case BinaryOperator.Bigger:\n                opStr = '>';\n                break;\n            case BinaryOperator.BiggerEquals:\n                opStr = '>=';\n                break;\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n        ctx.print(ast, \"(\");\n        ast.lhs.visitExpression(this, ctx);\n        ctx.print(ast, \" \" + opStr + \" \");\n        ast.rhs.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \".\");\n        ctx.print(ast, ast.name);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \"[\");\n        ast.index.visitExpression(this, ctx);\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"[\");\n        this.visitAllExpressions(ast.entries, ctx, ',');\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        ctx.print(ast, \"{\");\n        this.visitAllObjects(function (entry) {\n            ctx.print(ast, escapeIdentifier(entry.key, _this._escapeDollarInStrings, entry.quoted) + \":\");\n            entry.value.visitExpression(_this, ctx);\n        }, ast.entries, ctx, ',');\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, '(');\n        this.visitAllExpressions(ast.parts, ctx, ',');\n        ctx.print(ast, ')');\n        return null;\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllExpressions = /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    function (expressions, ctx, separator) {\n        var _this = this;\n        this.visitAllObjects(function (expr) { return expr.visitExpression(_this, ctx); }, expressions, ctx, separator);\n    };\n    /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllObjects = /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    function (handler, expressions, ctx, separator) {\n        var /** @type {?} */ incrementedIndent = false;\n        for (var /** @type {?} */ i = 0; i < expressions.length; i++) {\n            if (i > 0) {\n                if (ctx.lineLength() > 80) {\n                    ctx.print(null, separator, true);\n                    if (!incrementedIndent) {\n                        // continuation are marked with double indent.\n                        ctx.incIndent();\n                        ctx.incIndent();\n                        incrementedIndent = true;\n                    }\n                }\n                else {\n                    ctx.print(null, separator, false);\n                }\n            }\n            handler(expressions[i]);\n        }\n        if (incrementedIndent) {\n            // continuation are marked with double indent.\n            ctx.decIndent();\n            ctx.decIndent();\n        }\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllStatements = /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (statements, ctx) {\n        var _this = this;\n        statements.forEach(function (stmt) { return stmt.visitStatement(_this, ctx); });\n    };\n    return AbstractEmitterVisitor;\n}());\n/**\n * @param {?} input\n * @param {?} escapeDollar\n * @param {?=} alwaysQuote\n * @return {?}\n */\nfunction escapeIdentifier(input, escapeDollar, alwaysQuote) {\n    if (alwaysQuote === void 0) { alwaysQuote = true; }\n    if (input == null) {\n        return null;\n    }\n    var /** @type {?} */ body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, function () {\n        var match = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            match[_i] = arguments[_i];\n        }\n        if (match[0] == '$') {\n            return escapeDollar ? '\\\\$' : '$';\n        }\n        else if (match[0] == '\\n') {\n            return '\\\\n';\n        }\n        else if (match[0] == '\\r') {\n            return '\\\\r';\n        }\n        else {\n            return \"\\\\\" + match[0];\n        }\n    });\n    var /** @type {?} */ requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n    return requiresQuotes ? \"'\" + body + \"'\" : body;\n}\n/**\n * @param {?} count\n * @return {?}\n */\nfunction _createIndent(count) {\n    var /** @type {?} */ res = '';\n    for (var /** @type {?} */ i = 0; i < count; i++) {\n        res += _INDENT_WITH;\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction debugOutputAstAsTypeScript(ast) {\n    var /** @type {?} */ converter = new _TsEmitterVisitor();\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    var /** @type {?} */ asts = Array.isArray(ast) ? ast : [ast];\n    asts.forEach(function (ast) {\n        if (ast instanceof Statement) {\n            ast.visitStatement(converter, ctx);\n        }\n        else if (ast instanceof Expression) {\n            ast.visitExpression(converter, ctx);\n        }\n        else if (ast instanceof Type$1) {\n            ast.visitType(converter, ctx);\n        }\n        else {\n            throw new Error(\"Don't know how to print debug info for \" + ast);\n        }\n    });\n    return ctx.toSource();\n}\nvar TypeScriptEmitter = (function () {\n    function TypeScriptEmitter() {\n    }\n    /**\n     * @param {?} srcFilePath\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @param {?=} referenceFilter\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatementsAndContext = /**\n     * @param {?} srcFilePath\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @param {?=} referenceFilter\n     * @return {?}\n     */\n    function (srcFilePath, genFilePath, stmts, preamble, emitSourceMaps, referenceFilter) {\n        if (preamble === void 0) { preamble = ''; }\n        if (emitSourceMaps === void 0) { emitSourceMaps = true; }\n        var /** @type {?} */ converter = new _TsEmitterVisitor(referenceFilter);\n        var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n        converter.visitAllStatements(stmts, ctx);\n        var /** @type {?} */ preambleLines = preamble ? preamble.split('\\n') : [];\n        converter.reexports.forEach(function (reexports, exportedModuleName) {\n            var /** @type {?} */ reexportsCode = reexports.map(function (reexport) { return reexport.name + \" as \" + reexport.as; }).join(',');\n            preambleLines.push(\"export {\" + reexportsCode + \"} from '\" + exportedModuleName + \"';\");\n        });\n        converter.importsWithPrefixes.forEach(function (prefix, importedModuleName) {\n            // Note: can't write the real word for import as it screws up system.js auto detection...\n            preambleLines.push(\"imp\" +\n                (\"ort * as \" + prefix + \" from '\" + importedModuleName + \"';\"));\n        });\n        var /** @type {?} */ sm = emitSourceMaps ?\n            ctx.toSourceMapGenerator(srcFilePath, genFilePath, preambleLines.length).toJsComment() :\n            '';\n        var /** @type {?} */ lines = preambleLines.concat([ctx.toSource(), sm]);\n        if (sm) {\n            // always add a newline at the end, as some tools have bugs without it.\n            lines.push('');\n        }\n        ctx.setPreambleLineCount(preambleLines.length);\n        return { sourceText: lines.join('\\n'), context: ctx };\n    };\n    /**\n     * @param {?} srcFilePath\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatements = /**\n     * @param {?} srcFilePath\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    function (srcFilePath, genFilePath, stmts, preamble) {\n        if (preamble === void 0) { preamble = ''; }\n        return this.emitStatementsAndContext(srcFilePath, genFilePath, stmts, preamble).sourceText;\n    };\n    return TypeScriptEmitter;\n}());\nvar _TsEmitterVisitor = (function (_super) {\n    __extends(_TsEmitterVisitor, _super);\n    function _TsEmitterVisitor(referenceFilter) {\n        var _this = _super.call(this, false) || this;\n        _this.referenceFilter = referenceFilter;\n        _this.typeExpression = 0;\n        _this.importsWithPrefixes = new Map();\n        _this.reexports = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitType = /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    function (t, ctx, defaultType) {\n        if (defaultType === void 0) { defaultType = 'any'; }\n        if (t) {\n            this.typeExpression++;\n            t.visitType(this, ctx);\n            this.typeExpression--;\n        }\n        else {\n            ctx.print(null, defaultType);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (value == null && ast.type != INFERRED_TYPE) {\n            ctx.print(ast, \"(\" + value + \" as any)\");\n            return null;\n        }\n        return _super.prototype.visitLiteralExpr.call(this, ast, ctx);\n    };\n    // Temporary workaround to support strictNullCheck enabled consumers of ngc emit.\n    // In SNC mode, [] have the type never[], so we cast here to any[].\n    // TODO: narrow the cast to a more explicit type, or use a pattern that does not\n    // start with [].concat. see https://github.com/angular/angular/pull/11846\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.entries.length === 0) {\n            ctx.print(ast, '(');\n        }\n        var /** @type {?} */ result = _super.prototype.visitLiteralArrayExpr.call(this, ast, ctx);\n        if (ast.entries.length === 0) {\n            ctx.print(ast, ' as any[])');\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        this._visitIdentifier(ast.value, ast.typeParams, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ result = _super.prototype.visitAssertNotNullExpr.call(this, ast, ctx);\n        ctx.print(ast, '!');\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported) && stmt.value instanceof ExternalExpr &&\n            !stmt.type) {\n            // check for a reexport\n            var _a = stmt.value.value, name_1 = _a.name, moduleName = _a.moduleName;\n            if (moduleName) {\n                var /** @type {?} */ reexports = this.reexports.get(moduleName);\n                if (!reexports) {\n                    reexports = [];\n                    this.reexports.set(moduleName, reexports);\n                }\n                reexports.push({ name: /** @type {?} */ ((name_1)), as: stmt.name });\n                return null;\n            }\n        }\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        if (stmt.hasModifier(StmtModifier.Final)) {\n            ctx.print(stmt, \"const\");\n        }\n        else {\n            ctx.print(stmt, \"var\");\n        }\n        ctx.print(stmt, \" \" + stmt.name);\n        this._printColonType(stmt.type, ctx);\n        ctx.print(stmt, \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(<\"); /** @type {?} */\n        ((ast.type)).visitType(this, ctx);\n        ctx.print(ast, \">\");\n        ast.value.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        this.typeExpression++;\n        ast.classExpr.visitExpression(this, ctx);\n        this.typeExpression--;\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"class \" + stmt.name);\n        if (stmt.parent != null) {\n            ctx.print(stmt, \" extends \");\n            this.typeExpression++;\n            stmt.parent.visitExpression(this, ctx);\n            this.typeExpression--;\n        }\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        stmt.fields.forEach(function (field) { return _this._visitClassField(field, ctx); });\n        if (stmt.constructorMethod != null) {\n            this._visitClassConstructor(stmt, ctx);\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(method, ctx); });\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassField = /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (field, ctx) {\n        if (field.hasModifier(StmtModifier.Private)) {\n            // comment out as a workaround for #10967\n            ctx.print(null, \"/*private*/ \");\n        }\n        ctx.print(null, field.name);\n        this._printColonType(field.type, ctx);\n        ctx.println(null, \";\");\n    };\n    /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassGetter = /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (getter, ctx) {\n        if (getter.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, \"get \" + getter.name + \"()\");\n        this._printColonType(getter.type, ctx);\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(getter.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassConstructor = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"constructor(\");\n        this._visitParams(stmt.constructorMethod.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.constructorMethod.body, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassMethod = /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (method, ctx) {\n        if (method.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, method.name + \"(\");\n        this._visitParams(method.params, ctx);\n        ctx.print(null, \")\");\n        this._printColonType(method.type, ctx, 'void');\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(method.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        this._visitParams(ast.params, ctx);\n        ctx.print(ast, \")\");\n        this._printColonType(ast.type, ctx, 'void');\n        ctx.println(ast, \" => {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.print(stmt, \")\");\n        this._printColonType(stmt.type, ctx, 'void');\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack', null)).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitBuiltintType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        var /** @type {?} */ typeStr;\n        switch (type.name) {\n            case BuiltinTypeName.Bool:\n                typeStr = 'boolean';\n                break;\n            case BuiltinTypeName.Dynamic:\n                typeStr = 'any';\n                break;\n            case BuiltinTypeName.Function:\n                typeStr = 'Function';\n                break;\n            case BuiltinTypeName.Number:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.Int:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.String:\n                typeStr = 'string';\n                break;\n            default:\n                throw new Error(\"Unsupported builtin type \" + type.name);\n        }\n        ctx.print(null, typeStr);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExpressionType = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitArrayType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        this.visitType(type.of, ctx);\n        ctx.print(null, \"[]\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitMapType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        ctx.print(null, \"{[key: string]:\");\n        this.visitType(type.valueType, ctx);\n        ctx.print(null, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.getBuiltinMethodName = /**\n     * @param {?} method\n     * @return {?}\n     */\n    function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitParams = /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (params, ctx) {\n        var _this = this;\n        this.visitAllObjects(function (param) {\n            ctx.print(null, param.name);\n            _this._printColonType(param.type, ctx);\n        }, params, ctx, ',');\n    };\n    /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitIdentifier = /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (value, typeParams, ctx) {\n        var _this = this;\n        var name = value.name, moduleName = value.moduleName;\n        if (this.referenceFilter && this.referenceFilter(value)) {\n            ctx.print(null, '(null as any)');\n            return;\n        }\n        if (moduleName) {\n            var /** @type {?} */ prefix = this.importsWithPrefixes.get(moduleName);\n            if (prefix == null) {\n                prefix = \"i\" + this.importsWithPrefixes.size;\n                this.importsWithPrefixes.set(moduleName, prefix);\n            }\n            ctx.print(null, prefix + \".\");\n        }\n        ctx.print(null, /** @type {?} */ ((name)));\n        if (this.typeExpression > 0) {\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedParameters = typeParams || [];\n            if (suppliedParameters.length > 0) {\n                ctx.print(null, \"<\");\n                this.visitAllObjects(function (type) { return type.visitType(_this, ctx); }, /** @type {?} */ ((typeParams)), ctx, ',');\n                ctx.print(null, \">\");\n            }\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._printColonType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    function (type, ctx, defaultType) {\n        if (type !== INFERRED_TYPE) {\n            ctx.print(null, ':');\n            this.visitType(type, ctx, defaultType);\n        }\n    };\n    return _TsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Resolve a `Type` for {\\@link Pipe}.\n *\n * This interface can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n */\nvar PipeResolver = (function () {\n    function PipeResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    PipeResolver.prototype.isPipe = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(createPipe.isTypeOf);\n    };\n    /**\n     * Return {@link Pipe} for a given `Type`.\n     */\n    /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    PipeResolver.prototype.resolve = /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ metas = this._reflector.annotations(resolveForwardRef(type));\n        if (metas) {\n            var /** @type {?} */ annotation = findLast(metas, createPipe.isTypeOf);\n            if (annotation) {\n                return annotation;\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Pipe decorator found on \" + stringify(type));\n        }\n        return null;\n    };\n    return PipeResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'.\n */\nvar SECURITY_SCHEMA = {};\n/**\n * @param {?} ctx\n * @param {?} specs\n * @return {?}\n */\nfunction registerContext(ctx, specs) {\n    for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n        var spec = specs_1[_i];\n        SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n    }\n}\n// Case is insignificant below, all element and attribute names are lower-cased for lookup.\nregisterContext(SecurityContext.HTML, [\n    'iframe|srcdoc',\n    '*|innerHTML',\n    '*|outerHTML',\n]);\nregisterContext(SecurityContext.STYLE, ['*|style']);\n// NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\nregisterContext(SecurityContext.URL, [\n    '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n    'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n    'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n    'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n]);\nregisterContext(SecurityContext.RESOURCE_URL, [\n    'applet|code',\n    'applet|codebase',\n    'base|href',\n    'embed|src',\n    'frame|src',\n    'head|profile',\n    'html|manifest',\n    'iframe|src',\n    'link|href',\n    'media|src',\n    'object|codebase',\n    'object|data',\n    'script|src',\n]);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @abstract\n */\nvar ElementSchemaRegistry = (function () {\n    function ElementSchemaRegistry() {\n    }\n    return ElementSchemaRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BOOLEAN = 'boolean';\nvar NUMBER = 'number';\nvar STRING = 'string';\nvar OBJECT = 'object';\n/**\n * This array represents the DOM schema. It encodes inheritance, properties, and events.\n *\n * ## Overview\n *\n * Each line represents one kind of element. The `element_inheritance` and properties are joined\n * using `element_inheritance|properties` syntax.\n *\n * ## Element Inheritance\n *\n * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n * Here the individual elements are separated by `,` (commas). Every element in the list\n * has identical properties.\n *\n * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n * specified then `\"\"` (blank) element is assumed.\n *\n * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n * elements.\n *\n * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n *\n * ## Properties\n *\n * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n * by a special character designating its type:\n *\n * - (no prefix): property is a string.\n * - `*`: property represents an event.\n * - `!`: property is a boolean.\n * - `#`: property is a number.\n * - `%`: property is an object.\n *\n * ## Query\n *\n * The class creates an internal squas representation which allows to easily answer the query of\n * if a given property exist on a given element.\n *\n * NOTE: We don't yet support querying for types or events.\n * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n *       see dom_element_schema_registry_spec.ts\n */\nvar SCHEMA = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n        ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'slot^[HTMLElement]|name',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n    ':svg:cursor^:svg:|',\n];\nvar _ATTR_TO_PROP = {\n    'class': 'className',\n    'for': 'htmlFor',\n    'formaction': 'formAction',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\nvar DomElementSchemaRegistry = (function (_super) {\n    __extends(DomElementSchemaRegistry, _super);\n    function DomElementSchemaRegistry() {\n        var _this = _super.call(this) || this;\n        _this._schema = {};\n        SCHEMA.forEach(function (encodedType) {\n            var /** @type {?} */ type = {};\n            var _a = encodedType.split('|'), strType = _a[0], strProperties = _a[1];\n            var /** @type {?} */ properties = strProperties.split(',');\n            var _b = strType.split('^'), typeNames = _b[0], superName = _b[1];\n            typeNames.split(',').forEach(function (tag) { return _this._schema[tag.toLowerCase()] = type; });\n            var /** @type {?} */ superType = superName && _this._schema[superName.toLowerCase()];\n            if (superType) {\n                Object.keys(superType).forEach(function (prop) { type[prop] = superType[prop]; });\n            }\n            properties.forEach(function (property) {\n                if (property.length > 0) {\n                    switch (property[0]) {\n                        case '*':\n                            // We don't yet support events.\n                            // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                            // will\n                            // almost certainly introduce bad XSS vulnerabilities.\n                            // type[property.substring(1)] = EVENT;\n                            break;\n                        case '!':\n                            type[property.substring(1)] = BOOLEAN;\n                            break;\n                        case '#':\n                            type[property.substring(1)] = NUMBER;\n                            break;\n                        case '%':\n                            type[property.substring(1)] = OBJECT;\n                            break;\n                        default:\n                            type[property] = STRING;\n                    }\n                }\n            });\n        });\n        return _this;\n    }\n    /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasProperty = /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    function (tagName, propName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return false;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Can't tell now as we don't know which properties a custom element will get\n                // once it is instantiated\n                return true;\n            }\n        }\n        var /** @type {?} */ elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n        return !!elementProperties[propName];\n    };\n    /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasElement = /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    function (tagName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return true;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Allow any custom elements\n                return true;\n            }\n        }\n        return !!this._schema[tagName.toLowerCase()];\n    };\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     */\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.securityContext = /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    function (tagName, propName, isAttribute) {\n        if (isAttribute) {\n            // NB: For security purposes, use the mapped property name, not the attribute name.\n            propName = this.getMappedPropName(propName);\n        }\n        // Make sure comparisons are case insensitive, so that case differences between attribute and\n        // property names do not have a security impact.\n        tagName = tagName.toLowerCase();\n        propName = propName.toLowerCase();\n        var /** @type {?} */ ctx = SECURITY_SCHEMA[tagName + '|' + propName];\n        if (ctx) {\n            return ctx;\n        }\n        ctx = SECURITY_SCHEMA['*|' + propName];\n        return ctx ? ctx : SecurityContext.NONE;\n    };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getMappedPropName = /**\n     * @param {?} propName\n     * @return {?}\n     */\n    function (propName) { return _ATTR_TO_PROP[propName] || propName; };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getDefaultComponentElementName = /**\n     * @return {?}\n     */\n    function () { return 'ng-component'; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateProperty = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateAttribute = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.allKnownElementNames = /**\n     * @return {?}\n     */\n    function () { return Object.keys(this._schema); };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = /**\n     * @param {?} propName\n     * @return {?}\n     */\n    function (propName) {\n        return dashCaseToCamelCase(propName);\n    };\n    /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue = /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    function (camelCaseProp, userProvidedProp, val) {\n        var /** @type {?} */ unit = '';\n        var /** @type {?} */ strVal = val.toString().trim();\n        var /** @type {?} */ errorMsg = /** @type {?} */ ((null));\n        if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n            if (typeof val === 'number') {\n                unit = 'px';\n            }\n            else {\n                var /** @type {?} */ valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errorMsg = \"Please provide a CSS unit value for \" + userProvidedProp + \":\" + val;\n                }\n            }\n        }\n        return { error: errorMsg, value: strVal + unit };\n    };\n    return DomElementSchemaRegistry;\n}(ElementSchemaRegistry));\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction _isPixelDimensionStyle(prop) {\n    switch (prop) {\n        case 'width':\n        case 'height':\n        case 'minWidth':\n        case 'minHeight':\n        case 'maxWidth':\n        case 'maxHeight':\n        case 'left':\n        case 'top':\n        case 'bottom':\n        case 'right':\n        case 'fontSize':\n        case 'outlineWidth':\n        case 'outlineOffset':\n        case 'paddingTop':\n        case 'paddingLeft':\n        case 'paddingBottom':\n        case 'paddingRight':\n        case 'marginTop':\n        case 'marginLeft':\n        case 'marginBottom':\n        case 'marginRight':\n        case 'borderRadius':\n        case 'borderWidth':\n        case 'borderTopWidth':\n        case 'borderLeftWidth':\n        case 'borderRightWidth':\n        case 'borderBottomWidth':\n        case 'textIndent':\n            return true;\n        default:\n            return false;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ShadowCss = (function () {\n    function ShadowCss() {\n        this.strictStyling = true;\n    }\n    /*\n    * Shim some cssText with the given selector. Returns cssText that can\n    * be included in the document via WebComponents.ShadowCSS.addCssToDocument(css).\n    *\n    * When strictStyling is true:\n    * - selector is the attribute added to all elements inside the host,\n    * - hostSelector is the attribute added to the host itself.\n    */\n    /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype.shimCssText = /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    function (cssText, selector, hostSelector) {\n        if (hostSelector === void 0) { hostSelector = ''; }\n        var /** @type {?} */ sourceMappingUrl = extractSourceMappingUrl(cssText);\n        cssText = stripComments(cssText);\n        cssText = this._insertDirectives(cssText);\n        return this._scopeCssText(cssText, selector, hostSelector) + sourceMappingUrl;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertDirectives = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        cssText = this._insertPolyfillDirectivesInCssText(cssText);\n        return this._insertPolyfillRulesInCssText(cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillDirectivesInCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentNextSelectorRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return m[2] + '{';\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillRulesInCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentRuleRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            var /** @type {?} */ rule = m[0].replace(m[1], '').replace(m[2], '');\n            return m[4] + rule;\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeCssText = /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (cssText, scopeSelector, hostSelector) {\n        var /** @type {?} */ unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n        // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n        cssText = this._insertPolyfillHostInCssText(cssText);\n        cssText = this._convertColonHost(cssText);\n        cssText = this._convertColonHostContext(cssText);\n        cssText = this._convertShadowDOMSelectors(cssText);\n        if (scopeSelector) {\n            cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n        }\n        cssText = cssText + '\\n' + unscopedRules;\n        return cssText.trim();\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._extractUnscopedRulesFromCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        var /** @type {?} */ r = '';\n        var /** @type {?} */ m;\n        _cssContentUnscopedRuleRe.lastIndex = 0;\n        while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n            var /** @type {?} */ rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n            r += rule + '\\n\\n';\n        }\n        return r;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHost = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHostContext = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonRule = /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    function (cssText, regExp, partReplacer) {\n        // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n        return cssText.replace(regExp, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            if (m[2]) {\n                var /** @type {?} */ parts = m[2].split(',');\n                var /** @type {?} */ r = [];\n                for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n                    var /** @type {?} */ p = parts[i].trim();\n                    if (!p)\n                        break;\n                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                }\n                return r.join(',');\n            }\n            else {\n                return _polyfillHostNoCombinator + m[3];\n            }\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostContextPartReplacer = /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    function (host, part, suffix) {\n        if (part.indexOf(_polyfillHost) > -1) {\n            return this._colonHostPartReplacer(host, part, suffix);\n        }\n        else {\n            return host + part + suffix + ', ' + part + ' ' + host + suffix;\n        }\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostPartReplacer = /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    function (host, part, suffix) {\n        return host + part.replace(_polyfillHost, '') + suffix;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertShadowDOMSelectors = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelectors = /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (cssText, scopeSelector, hostSelector) {\n        var _this = this;\n        return processRules(cssText, function (rule) {\n            var /** @type {?} */ selector = rule.selector;\n            var /** @type {?} */ content = rule.content;\n            if (rule.selector[0] != '@') {\n                selector =\n                    _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n            }\n            return new CssRule(selector, content);\n        });\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelector = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector, strict) {\n        var _this = this;\n        return selector.split(',')\n            .map(function (part) { return part.trim().split(_shadowDeepSelectors); })\n            .map(function (deepParts) {\n            var shallowPart = deepParts[0], otherParts = deepParts.slice(1);\n            var /** @type {?} */ applyScope = function (shallowPart) {\n                if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                    return strict ?\n                        _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                        _this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n                }\n                else {\n                    return shallowPart;\n                }\n            };\n            return [applyScope(shallowPart)].concat(otherParts).join(' ');\n        })\n            .join(', ');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._selectorNeedsScoping = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector) {\n        var /** @type {?} */ re = this._makeScopeMatcher(scopeSelector);\n        return !re.test(selector);\n    };\n    /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._makeScopeMatcher = /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    function (scopeSelector) {\n        var /** @type {?} */ lre = /\\[/g;\n        var /** @type {?} */ rre = /\\]/g;\n        scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n        return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        // Difference from webcomponents.js: scopeSelector could not be an array\n        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySimpleSelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n        _polyfillHostRe.lastIndex = 0;\n        if (_polyfillHostRe.test(selector)) {\n            var /** @type {?} */ replaceBy_1 = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\n            return selector\n                .replace(_polyfillHostNoCombinatorRe, function (hnc, selector) {\n                return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                    return before + replaceBy_1 + colon + after;\n                });\n            })\n                .replace(_polyfillHostRe, replaceBy_1 + ' ');\n        }\n        return scopeSelector + ' ' + selector;\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applyStrictSelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        var _this = this;\n        var /** @type {?} */ isRe = /\\[is=([^\\]]*)\\]/g;\n        scopeSelector = scopeSelector.replace(isRe, function (_) {\n            var parts = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                parts[_i - 1] = arguments[_i];\n            }\n            return parts[0];\n        });\n        var /** @type {?} */ attrName = '[' + scopeSelector + ']';\n        var /** @type {?} */ _scopeSelectorPart = function (p) {\n            var /** @type {?} */ scopedP = p.trim();\n            if (!scopedP) {\n                return '';\n            }\n            if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n            }\n            else {\n                // remove :host since it should be unnecessary\n                var /** @type {?} */ t = p.replace(_polyfillHostRe, '');\n                if (t.length > 0) {\n                    var /** @type {?} */ matches = t.match(/([^:]*)(:*)(.*)/);\n                    if (matches) {\n                        scopedP = matches[1] + attrName + matches[2] + matches[3];\n                    }\n                }\n            }\n            return scopedP;\n        };\n        var /** @type {?} */ safeContent = new SafeSelector(selector);\n        selector = safeContent.content();\n        var /** @type {?} */ scopedSelector = '';\n        var /** @type {?} */ startIndex = 0;\n        var /** @type {?} */ res;\n        var /** @type {?} */ sep = /( |>|\\+|~(?!=))\\s*/g;\n        var /** @type {?} */ scopeAfter = selector.indexOf(_polyfillHostNoCombinator);\n        while ((res = sep.exec(selector)) !== null) {\n            var /** @type {?} */ separator = res[1];\n            var /** @type {?} */ part = selector.slice(startIndex, res.index).trim();\n            // if a selector appears before :host-context it should not be shimmed as it\n            // matches on ancestor elements and not on elements in the host's shadow\n            var /** @type {?} */ scopedPart = startIndex >= scopeAfter ? _scopeSelectorPart(part) : part;\n            scopedSelector += scopedPart + \" \" + separator + \" \";\n            startIndex = sep.lastIndex;\n        }\n        scopedSelector += _scopeSelectorPart(selector.substring(startIndex));\n        // replace the placeholders with their original values\n        return safeContent.restore(scopedSelector);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillHostInCssText = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        return selector.replace(_colonHostContextRe, _polyfillHostContext)\n            .replace(_colonHostRe, _polyfillHost);\n    };\n    return ShadowCss;\n}());\nvar SafeSelector = (function () {\n    function SafeSelector(selector) {\n        var _this = this;\n        this.placeholders = [];\n        this.index = 0;\n        // Replaces attribute selectors with placeholders.\n        // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n        selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(keep);\n            _this.index++;\n            return replaceBy;\n        });\n        // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n        // WS and \"+\" would otherwise be interpreted as selector separators.\n        this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(exp);\n            _this.index++;\n            return pseudo + replaceBy;\n        });\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    SafeSelector.prototype.restore = /**\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        var _this = this;\n        return content.replace(/__ph-(\\d+)__/g, function (ph, index) { return _this.placeholders[+index]; });\n    };\n    /**\n     * @return {?}\n     */\n    SafeSelector.prototype.content = /**\n     * @return {?}\n     */\n    function () { return this._content; };\n    return SafeSelector;\n}());\nvar _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\nvar _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _polyfillHost = '-shadowcsshost';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g,\n    /\\/shadow-deep\\//g,\n    /\\/shadow\\//g,\n];\n// The deep combinator is deprecated in the CSS spec\n// Support for `>>>`, `deep`, `::ng-deep` is then also deprecated and will be removed in the future.\n// see https://github.com/angular/angular/pull/17677\nvar _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)|(?:::ng-deep)/g;\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stripComments(input) {\n    return input.replace(_commentRe, '');\n}\n// all comments except inline source mapping\nvar _sourceMappingUrlRe = /\\/\\*\\s*#\\s*sourceMappingURL=[\\s\\S]+?\\*\\//;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction extractSourceMappingUrl(input) {\n    var /** @type {?} */ matcher = input.match(_sourceMappingUrlRe);\n    return matcher ? matcher[0] : '';\n}\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar CssRule = (function () {\n    function CssRule(selector, content) {\n        this.selector = selector;\n        this.content = content;\n    }\n    return CssRule;\n}());\n/**\n * @param {?} input\n * @param {?} ruleCallback\n * @return {?}\n */\nfunction processRules(input, ruleCallback) {\n    var /** @type {?} */ inputWithEscapedBlocks = escapeBlocks(input);\n    var /** @type {?} */ nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ selector = m[2];\n        var /** @type {?} */ content = '';\n        var /** @type {?} */ suffix = m[4];\n        var /** @type {?} */ contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var /** @type {?} */ rule = ruleCallback(new CssRule(selector, content));\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n}\nvar StringWithEscapedBlocks = (function () {\n    function StringWithEscapedBlocks(escapedString, blocks) {\n        this.escapedString = escapedString;\n        this.blocks = blocks;\n    }\n    return StringWithEscapedBlocks;\n}());\n/**\n * @param {?} input\n * @return {?}\n */\nfunction escapeBlocks(input) {\n    var /** @type {?} */ inputParts = input.split(_curlyRe);\n    var /** @type {?} */ resultParts = [];\n    var /** @type {?} */ escapedBlocks = [];\n    var /** @type {?} */ bracketCount = 0;\n    var /** @type {?} */ currentBlockParts = [];\n    for (var /** @type {?} */ partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var /** @type {?} */ part = inputParts[partIndex];\n        if (part == CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part == OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\nvar CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\nvar StylesCompileDependency = (function () {\n    function StylesCompileDependency(name, moduleUrl, setValue) {\n        this.name = name;\n        this.moduleUrl = moduleUrl;\n        this.setValue = setValue;\n    }\n    return StylesCompileDependency;\n}());\nvar CompiledStylesheet = (function () {\n    function CompiledStylesheet(outputCtx, stylesVar, dependencies, isShimmed, meta) {\n        this.outputCtx = outputCtx;\n        this.stylesVar = stylesVar;\n        this.dependencies = dependencies;\n        this.isShimmed = isShimmed;\n        this.meta = meta;\n    }\n    return CompiledStylesheet;\n}());\nvar StyleCompiler = (function () {\n    function StyleCompiler(_urlResolver) {\n        this._urlResolver = _urlResolver;\n        this._shadowCss = new ShadowCss();\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    function (outputCtx, comp) {\n        var /** @type {?} */ template = /** @type {?} */ ((comp.template));\n        return this._compileStyles(outputCtx, comp, new CompileStylesheetMetadata({\n            styles: template.styles,\n            styleUrls: template.styleUrls,\n            moduleUrl: identifierModuleUrl(comp.type)\n        }), this.needsStyleShim(comp), true);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?=} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileStyles = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?=} shim\n     * @return {?}\n     */\n    function (outputCtx, comp, stylesheet, shim) {\n        if (shim === void 0) { shim = this.needsStyleShim(comp); }\n        return this._compileStyles(outputCtx, comp, stylesheet, shim, false);\n    };\n    /**\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.needsStyleShim = /**\n     * @param {?} comp\n     * @return {?}\n     */\n    function (comp) {\n        return /** @type {?} */ ((comp.template)).encapsulation === ViewEncapsulation.Emulated;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} shim\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    StyleCompiler.prototype._compileStyles = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} shim\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    function (outputCtx, comp, stylesheet, shim, isComponentStylesheet) {\n        var _this = this;\n        var /** @type {?} */ styleExpressions = stylesheet.styles.map(function (plainStyle) { return literal(_this._shimIfNeeded(plainStyle, shim)); });\n        var /** @type {?} */ dependencies = [];\n        stylesheet.styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ exprIndex = styleExpressions.length;\n            // Note: This placeholder will be filled later.\n            styleExpressions.push(/** @type {?} */ ((null)));\n            dependencies.push(new StylesCompileDependency(getStylesVarName(null), styleUrl, function (value) { return styleExpressions[exprIndex] = outputCtx.importExpr(value); }));\n        });\n        // styles variable contains plain strings and arrays of other styles arrays (recursive),\n        // so we set its type to dynamic.\n        var /** @type {?} */ stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n        var /** @type {?} */ stmt = variable(stylesVar)\n            .set(literalArr(styleExpressions, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])))\n            .toDeclStmt(null, isComponentStylesheet ? [StmtModifier.Final] : [\n            StmtModifier.Final, StmtModifier.Exported\n        ]);\n        outputCtx.statements.push(stmt);\n        return new CompiledStylesheet(outputCtx, stylesVar, dependencies, shim, stylesheet);\n    };\n    /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype._shimIfNeeded = /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    function (style, shim) {\n        return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;\n    };\n    return StyleCompiler;\n}());\n/**\n * @param {?} component\n * @return {?}\n */\nfunction getStylesVarName(component) {\n    var /** @type {?} */ result = \"styles\";\n    if (component) {\n        result += \"_\" + identifierName(component.type);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PRESERVE_WS_ATTR_NAME = 'ngPreserveWhitespaces';\nvar SKIP_WS_TRIM_TAGS = new Set(['pre', 'template', 'textarea', 'script', 'style']);\n// Equivalent to \\s with \\u00a0 (non-breaking space) excluded.\n// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\nvar WS_CHARS = ' \\f\\n\\r\\t\\v\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff';\nvar NO_WS_REGEXP = new RegExp(\"[^\" + WS_CHARS + \"]\");\nvar WS_REPLACE_REGEXP = new RegExp(\"[\" + WS_CHARS + \"]{2,}\", 'g');\n/**\n * @param {?} attrs\n * @return {?}\n */\nfunction hasPreserveWhitespacesAttr(attrs) {\n    return attrs.some(function (attr) { return attr.name === PRESERVE_WS_ATTR_NAME; });\n}\n/**\n * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n * and later on replaced by a space. We are re-implementing the same idea here.\n * @param {?} value\n * @return {?}\n */\nfunction replaceNgsp(value) {\n    // lexer is replacing the &ngsp; pseudo-entity with NGSP_UNICODE\n    return value.replace(new RegExp(NGSP_UNICODE, 'g'), ' ');\n}\n/**\n * This visitor can walk HTML parse tree and remove / trim text nodes using the following rules:\n * - consider spaces, tabs and new lines as whitespace characters;\n * - drop text nodes consisting of whitespace characters only;\n * - for all other text nodes replace consecutive whitespace characters with one space;\n * - convert &ngsp; pseudo-entity to a single space;\n *\n * Removal and trimming of whitespaces have positive performance impact (less code to generate\n * while compiling templates, faster view creation). At the same time it can be \"destructive\"\n * in some cases (whitespaces can influence layout). Because of the potential of breaking layout\n * this visitor is not activated by default in Angular 5 and people need to explicitly opt-in for\n * whitespace removal. The default option for whitespace removal will be revisited in Angular 6\n * and might be changed to \"on\" by default.\n */\nvar WhitespaceVisitor = (function () {\n    function WhitespaceVisitor() {\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        if (SKIP_WS_TRIM_TAGS.has(element.name) || hasPreserveWhitespacesAttr(element.attrs)) {\n            // don't descent into elements where we need to preserve whitespaces\n            // but still visit all attributes to eliminate one used as a market to preserve WS\n            return new Element(element.name, visitAll(this, element.attrs), element.children, element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n        }\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return attribute.name !== PRESERVE_WS_ATTR_NAME ? attribute : null;\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        var /** @type {?} */ isNotBlank = text.value.match(NO_WS_REGEXP);\n        if (isNotBlank) {\n            return new Text(replaceNgsp(text.value).replace(WS_REPLACE_REGEXP, ' '), text.sourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return comment; };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return expansionCase; };\n    return WhitespaceVisitor;\n}());\n/**\n * @param {?} htmlAstWithErrors\n * @return {?}\n */\nfunction removeWhitespaces(htmlAstWithErrors) {\n    return new ParseTreeResult(visitAll(new WhitespaceVisitor(), htmlAstWithErrors.rootNodes), htmlAstWithErrors.errors);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// http://cldr.unicode.org/index/cldr-spec/plural-rules\nvar PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n/**\n * Expands special forms into elements.\n *\n * For example,\n *\n * ```\n * { messages.length, plural,\n *   =0 {zero}\n *   =1 {one}\n *   other {more than one}\n * }\n * ```\n *\n * will be expanded into\n *\n * ```\n * <ng-container [ngPlural]=\"messages.length\">\n *   <ng-template ngPluralCase=\"=0\">zero</ng-template>\n *   <ng-template ngPluralCase=\"=1\">one</ng-template>\n *   <ng-template ngPluralCase=\"other\">more than one</ng-template>\n * </ng-container>\n * ```\n * @param {?} nodes\n * @return {?}\n */\nfunction expandNodes(nodes) {\n    var /** @type {?} */ expander = new _Expander();\n    return new ExpansionResult(visitAll(expander, nodes), expander.isExpanded, expander.errors);\n}\nvar ExpansionResult = (function () {\n    function ExpansionResult(nodes, expanded, errors) {\n        this.nodes = nodes;\n        this.expanded = expanded;\n        this.errors = errors;\n    }\n    return ExpansionResult;\n}());\nvar ExpansionError = (function (_super) {\n    __extends(ExpansionError, _super);\n    function ExpansionError(span, errorMsg) {\n        return _super.call(this, span, errorMsg) || this;\n    }\n    return ExpansionError;\n}(ParseError));\n/**\n * Expand expansion forms (plural, select) to directives\n *\n * \\@internal\n */\nvar _Expander = (function () {\n    function _Expander() {\n        this.isExpanded = false;\n        this.errors = [];\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { return attribute; };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return text; };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return comment; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        this.isExpanded = true;\n        return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n            _expandDefaultForm(icu, this.errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        throw new Error('Should not be reached');\n    };\n    return _Expander;\n}());\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandPluralForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n            errors.push(new ExpansionError(c.valueSourceSpan, \"Plural cases should be \\\"=<number>\\\" or one of \" + PLURAL_CASES.join(\", \")));\n        }\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        return new Element(\"ng-template\", [new Attribute$1('ngPluralCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandDefaultForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        if (c.value === 'other') {\n            // other is the default case when no values match\n            return new Element(\"ng-template\", [new Attribute$1('ngSwitchDefault', '', c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n        }\n        return new Element(\"ng-template\", [new Attribute$1('ngSwitchCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar PROPERTY_PARTS_SEPARATOR = '.';\nvar ATTRIBUTE_PREFIX = 'attr';\nvar CLASS_PREFIX = 'class';\nvar STYLE_PREFIX = 'style';\nvar ANIMATE_PROP_PREFIX = 'animate-';\n/** @enum {number} */\nvar BoundPropertyType = {\n    DEFAULT: 0,\n    LITERAL_ATTR: 1,\n    ANIMATION: 2,\n};\nBoundPropertyType[BoundPropertyType.DEFAULT] = \"DEFAULT\";\nBoundPropertyType[BoundPropertyType.LITERAL_ATTR] = \"LITERAL_ATTR\";\nBoundPropertyType[BoundPropertyType.ANIMATION] = \"ANIMATION\";\n/**\n * Represents a parsed property.\n */\nvar BoundProperty = (function () {\n    function BoundProperty(name, expression, type, sourceSpan) {\n        this.name = name;\n        this.expression = expression;\n        this.type = type;\n        this.sourceSpan = sourceSpan;\n        this.isLiteral = this.type === BoundPropertyType.LITERAL_ATTR;\n        this.isAnimation = this.type === BoundPropertyType.ANIMATION;\n    }\n    return BoundProperty;\n}());\n/**\n * Parses bindings in templates and in the directive host area.\n */\nvar BindingParser = (function () {\n    function BindingParser(_exprParser, _interpolationConfig, _schemaRegistry, pipes, _targetErrors) {\n        var _this = this;\n        this._exprParser = _exprParser;\n        this._interpolationConfig = _interpolationConfig;\n        this._schemaRegistry = _schemaRegistry;\n        this._targetErrors = _targetErrors;\n        this.pipesByName = new Map();\n        this._usedPipes = new Map();\n        pipes.forEach(function (pipe) { return _this.pipesByName.set(pipe.name, pipe); });\n    }\n    /**\n     * @return {?}\n     */\n    BindingParser.prototype.getUsedPipes = /**\n     * @return {?}\n     */\n    function () { return Array.from(this._usedPipes.values()); };\n    /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostPropertyAsts = /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (dirMeta, elementSelector, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostProperties) {\n            var /** @type {?} */ boundProps_1 = [];\n            Object.keys(dirMeta.hostProperties).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostProperties[propName];\n                if (typeof expression === 'string') {\n                    _this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host property binding \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return boundProps_1.map(function (prop) { return _this.createElementPropertyAst(elementSelector, prop); });\n        }\n        return null;\n    };\n    /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostEventAsts = /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (dirMeta, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostListeners) {\n            var /** @type {?} */ targetEventAsts_1 = [];\n            Object.keys(dirMeta.hostListeners).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostListeners[propName];\n                if (typeof expression === 'string') {\n                    _this.parseEvent(propName, expression, sourceSpan, [], targetEventAsts_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host listener \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return targetEventAsts_1;\n        }\n        return null;\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.parseInterpolation = /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = /** @type {?} */ ((this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig)));\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    BindingParser.prototype.parseInlineTemplateBinding = /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (prefixToken, value, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n        var /** @type {?} */ bindings = this._parseTemplateBindings(prefixToken, value, sourceSpan);\n        for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n            var /** @type {?} */ binding = bindings[i];\n            if (binding.keyIsVar) {\n                targetVars.push(new VariableAst(binding.key, binding.name, sourceSpan));\n            }\n            else if (binding.expression) {\n                this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n            else {\n                targetMatchableAttrs.push([binding.key, '']);\n                this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseTemplateBindings = /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (prefixToken, value, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ bindingsResult = this._exprParser.parseTemplateBindings(prefixToken, value, sourceInfo);\n            this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n            bindingsResult.templateBindings.forEach(function (binding) {\n                if (binding.expression) {\n                    _this._checkPipes(binding.expression, sourceSpan);\n                }\n            });\n            bindingsResult.warnings.forEach(function (warning) { _this._reportError(warning, sourceSpan, ParseErrorLevel.WARNING); });\n            return bindingsResult.templateBindings;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return [];\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parseLiteralAttr = /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        if (_isAnimationLabel(name)) {\n            name = name.substring(1);\n            if (value) {\n                this._reportError(\"Assigning animation triggers via @prop=\\\"exp\\\" attributes with an expression is invalid.\" +\n                    \" Use property bindings (e.g. [@prop]=\\\"exp\\\") or use an attribute without a value (e.g. @prop) instead.\", sourceSpan, ParseErrorLevel.ERROR);\n            }\n            this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            targetProps.push(new BoundProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), BoundPropertyType.LITERAL_ATTR, sourceSpan));\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyBinding = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ isAnimationProp = false;\n        if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n            isAnimationProp = true;\n            name = name.substring(ANIMATE_PROP_PREFIX.length);\n        }\n        else if (_isAnimationLabel(name)) {\n            isAnimationProp = true;\n            name = name.substring(1);\n        }\n        if (isAnimationProp) {\n            this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyInterpolation = /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ expr = this.parseInterpolation(value, sourceSpan);\n        if (expr) {\n            this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parsePropertyAst = /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.DEFAULT, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimation = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n        // This will occur when a @trigger is not paired with an expression.\n        // For animations it is valid to not have an expression since */void\n        // states will be applied by angular when the element is attached/detached\n        var /** @type {?} */ ast = this._parseBinding(expression || 'undefined', false, sourceSpan);\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.ANIMATION, sourceSpan));\n    };\n    /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseBinding = /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, isHostBinding, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = isHostBinding ?\n                this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n                this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    BindingParser.prototype.createElementPropertyAst = /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    function (elementSelector, boundProp) {\n        if (boundProp.isAnimation) {\n            return new BoundElementPropertyAst(boundProp.name, PropertyBindingType.Animation, SecurityContext.NONE, boundProp.expression, null, boundProp.sourceSpan);\n        }\n        var /** @type {?} */ unit = null;\n        var /** @type {?} */ bindingType = /** @type {?} */ ((undefined));\n        var /** @type {?} */ boundPropertyName = null;\n        var /** @type {?} */ parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n        var /** @type {?} */ securityContexts = /** @type {?} */ ((undefined));\n        // Check check for special cases (prefix style, attr, class)\n        if (parts.length > 1) {\n            if (parts[0] == ATTRIBUTE_PREFIX) {\n                boundPropertyName = parts[1];\n                this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n                securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n                var /** @type {?} */ nsSeparatorIdx = boundPropertyName.indexOf(':');\n                if (nsSeparatorIdx > -1) {\n                    var /** @type {?} */ ns = boundPropertyName.substring(0, nsSeparatorIdx);\n                    var /** @type {?} */ name_1 = boundPropertyName.substring(nsSeparatorIdx + 1);\n                    boundPropertyName = mergeNsAndName(ns, name_1);\n                }\n                bindingType = PropertyBindingType.Attribute;\n            }\n            else if (parts[0] == CLASS_PREFIX) {\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Class;\n                securityContexts = [SecurityContext.NONE];\n            }\n            else if (parts[0] == STYLE_PREFIX) {\n                unit = parts.length > 2 ? parts[2] : null;\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Style;\n                securityContexts = [SecurityContext.STYLE];\n            }\n        }\n        // If not a special case, use the full property name\n        if (boundPropertyName === null) {\n            boundPropertyName = this._schemaRegistry.getMappedPropName(boundProp.name);\n            securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n            bindingType = PropertyBindingType.Property;\n            this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n        }\n        return new BoundElementPropertyAst(boundPropertyName, bindingType, securityContexts[0], boundProp.expression, unit, boundProp.sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype.parseEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        if (_isAnimationLabel(name)) {\n            name = name.substr(1);\n            this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n        }\n        else {\n            this._parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimationEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetEvents) {\n        var /** @type {?} */ matches = splitAtPeriod(name, [name, '']);\n        var /** @type {?} */ eventName = matches[0];\n        var /** @type {?} */ phase = matches[1].toLowerCase();\n        if (phase) {\n            switch (phase) {\n                case 'start':\n                case 'done':\n                    var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n                    targetEvents.push(new BoundEventAst(eventName, null, phase, ast, sourceSpan));\n                    break;\n                default:\n                    this._reportError(\"The provided animation output phase value \\\"\" + phase + \"\\\" for \\\"@\" + eventName + \"\\\" is not supported (use start or done)\", sourceSpan);\n                    break;\n            }\n        }\n        else {\n            this._reportError(\"The animation trigger output event (@\" + eventName + \") is missing its phase value name (start or done are currently supported)\", sourceSpan);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        // long format: 'target: eventName'\n        var _a = splitAtColon(name, [/** @type {?} */ ((null)), name]), target = _a[0], eventName = _a[1];\n        var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n        targetMatchableAttrs.push([/** @type {?} */ ((name)), /** @type {?} */ ((ast.source))]);\n        targetEvents.push(new BoundEventAst(eventName, target, null, ast, sourceSpan));\n        // Don't detect directives for event names for now,\n        // so don't add the event name to the matchableAttrs\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseAction = /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n            if (ast) {\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            }\n            if (!ast || ast.ast instanceof EmptyExpr) {\n                this._reportError(\"Empty expressions are not allowed\", sourceSpan);\n                return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n            }\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    BindingParser.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._reportExpressionParserErrors = /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (errors, sourceSpan) {\n        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n            var error = errors_1[_i];\n            this._reportError(error.message, sourceSpan);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._checkPipes = /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (ast, sourceSpan) {\n        var _this = this;\n        if (ast) {\n            var /** @type {?} */ collector = new PipeCollector();\n            ast.visit(collector);\n            collector.pipes.forEach(function (ast, pipeName) {\n                var /** @type {?} */ pipeMeta = _this.pipesByName.get(pipeName);\n                if (!pipeMeta) {\n                    _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", new ParseSourceSpan(sourceSpan.start.moveBy(ast.span.start), sourceSpan.start.moveBy(ast.span.end)));\n                }\n                else {\n                    _this._usedPipes.set(pipeName, pipeMeta);\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    BindingParser.prototype._validatePropertyOrAttributeName = /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    function (propName, sourceSpan, isAttr) {\n        var /** @type {?} */ report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n            this._schemaRegistry.validateProperty(propName);\n        if (report.error) {\n            this._reportError(/** @type {?} */ ((report.msg)), sourceSpan, ParseErrorLevel.ERROR);\n        }\n    };\n    return BindingParser;\n}());\nvar PipeCollector = (function (_super) {\n    __extends(PipeCollector, _super);\n    function PipeCollector() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.pipes = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    PipeCollector.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.pipes.set(ast.name, ast);\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    return PipeCollector;\n}(RecursiveAstVisitor));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _isAnimationLabel(name) {\n    return name[0] == '@';\n}\n/**\n * @param {?} registry\n * @param {?} selector\n * @param {?} propName\n * @param {?} isAttribute\n * @return {?}\n */\nfunction calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n    var /** @type {?} */ ctxs = [];\n    CssSelector.parse(selector).forEach(function (selector) {\n        var /** @type {?} */ elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n        var /** @type {?} */ notElementNames = new Set(selector.notSelectors.filter(function (selector) { return selector.isElementSelector(); })\n            .map(function (selector) { return selector.element; }));\n        var /** @type {?} */ possibleElementNames = elementNames.filter(function (elementName) { return !notElementNames.has(elementName); });\n        ctxs.push.apply(ctxs, possibleElementNames.map(function (elementName) { return registry.securityContext(elementName, propName, isAttribute); }));\n    });\n    return ctxs.length === 0 ? [SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n// Group 1 = \"bind-\"\nvar KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nvar KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nvar KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nvar KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nvar KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nvar KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nvar IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nvar IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nvar IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nvar IDENT_EVENT_IDX = 10;\n// deprecated in 4.x\nvar TEMPLATE_ELEMENT = 'template';\n// deprecated in 4.x\nvar TEMPLATE_ATTR = 'template';\nvar TEMPLATE_ATTR_PREFIX = '*';\nvar CLASS_ATTR = 'class';\nvar TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\nvar TEMPLATE_ELEMENT_DEPRECATION_WARNING = 'The <template> element is deprecated. Use <ng-template> instead';\nvar TEMPLATE_ATTR_DEPRECATION_WARNING = 'The template attribute is deprecated. Use an ng-template element instead.';\nvar warningCounts = {};\n/**\n * @param {?} warnings\n * @return {?}\n */\nfunction warnOnlyOnce(warnings) {\n    return function (error) {\n        if (warnings.indexOf(error.msg) !== -1) {\n            warningCounts[error.msg] = (warningCounts[error.msg] || 0) + 1;\n            return warningCounts[error.msg] <= 1;\n        }\n        return true;\n    };\n}\nvar TemplateParseError = (function (_super) {\n    __extends(TemplateParseError, _super);\n    function TemplateParseError(message, span, level) {\n        return _super.call(this, span, message, level) || this;\n    }\n    return TemplateParseError;\n}(ParseError));\nvar TemplateParseResult = (function () {\n    function TemplateParseResult(templateAst, usedPipes, errors) {\n        this.templateAst = templateAst;\n        this.usedPipes = usedPipes;\n        this.errors = errors;\n    }\n    return TemplateParseResult;\n}());\nvar TemplateParser = (function () {\n    function TemplateParser(_config, _reflector, _exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n        this._config = _config;\n        this._reflector = _reflector;\n        this._exprParser = _exprParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._htmlParser = _htmlParser;\n        this._console = _console;\n        this.transforms = transforms;\n    }\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.parse = /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ result = this.tryParse(component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces);\n        var /** @type {?} */ warnings = /** @type {?} */ ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.WARNING; }).filter(warnOnlyOnce([TEMPLATE_ATTR_DEPRECATION_WARNING, TEMPLATE_ELEMENT_DEPRECATION_WARNING]));\n        var /** @type {?} */ errors = /** @type {?} */ ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.ERROR; });\n        if (warnings.length > 0) {\n            this._console.warn(\"Template parse warnings:\\n\" + warnings.join('\\n'));\n        }\n        if (errors.length > 0) {\n            var /** @type {?} */ errorString = errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString, errors);\n        }\n        return { template: /** @type {?} */ ((result.templateAst)), pipes: /** @type {?} */ ((result.usedPipes)) };\n    };\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParse = /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ htmlParseResult = typeof template === 'string' ? /** @type {?} */ ((this._htmlParser)).parse(template, templateUrl, true, this.getInterpolationConfig(component)) :\n            template;\n        if (!preserveWhitespaces) {\n            htmlParseResult = removeWhitespaces(htmlParseResult);\n        }\n        return this.tryParseHtml(this.expandHtml(htmlParseResult), component, directives, pipes, schemas);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParseHtml = /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    function (htmlAstWithErrors, component, directives, pipes, schemas) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        var /** @type {?} */ usedPipes = [];\n        if (htmlAstWithErrors.rootNodes.length > 0) {\n            var /** @type {?} */ uniqDirectives = removeSummaryDuplicates(directives);\n            var /** @type {?} */ uniqPipes = removeSummaryDuplicates(pipes);\n            var /** @type {?} */ providerViewContext = new ProviderViewContext(this._reflector, component);\n            var /** @type {?} */ interpolationConfig = /** @type {?} */ ((undefined));\n            if (component.template && component.template.interpolation) {\n                interpolationConfig = {\n                    start: component.template.interpolation[0],\n                    end: component.template.interpolation[1]\n                };\n            }\n            var /** @type {?} */ bindingParser = new BindingParser(this._exprParser, /** @type {?} */ ((interpolationConfig)), this._schemaRegistry, uniqPipes, errors);\n            var /** @type {?} */ parseVisitor = new TemplateParseVisitor(this._reflector, this._config, providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n            result = visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n            errors.push.apply(errors, providerViewContext.errors);\n            usedPipes.push.apply(usedPipes, bindingParser.getUsedPipes());\n        }\n        else {\n            result = [];\n        }\n        this._assertNoReferenceDuplicationOnTemplate(result, errors);\n        if (errors.length > 0) {\n            return new TemplateParseResult(result, usedPipes, errors);\n        }\n        if (this.transforms) {\n            this.transforms.forEach(function (transform) { result = templateVisitAll(transform, result); });\n        }\n        return new TemplateParseResult(result, usedPipes, errors);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    TemplateParser.prototype.expandHtml = /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    function (htmlAstWithErrors, forced) {\n        if (forced === void 0) { forced = false; }\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        if (errors.length == 0 || forced) {\n            // Transform ICU messages to angular directives\n            var /** @type {?} */ expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n            errors.push.apply(errors, expandedHtmlAst.errors);\n            htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n        }\n        return htmlAstWithErrors;\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    TemplateParser.prototype.getInterpolationConfig = /**\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        if (component.template) {\n            return InterpolationConfig.fromArray(component.template.interpolation);\n        }\n        return undefined;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate = /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    function (result, errors) {\n        var /** @type {?} */ existingReferences = [];\n        result.filter(function (element) { return !!(/** @type {?} */ (element)).references; })\n            .forEach(function (element) {\n            return (/** @type {?} */ (element)).references.forEach(function (reference) {\n                var /** @type {?} */ name = reference.name;\n                if (existingReferences.indexOf(name) < 0) {\n                    existingReferences.push(name);\n                }\n                else {\n                    var /** @type {?} */ error = new TemplateParseError(\"Reference \\\"#\" + name + \"\\\" is defined several times\", reference.sourceSpan, ParseErrorLevel.ERROR);\n                    errors.push(error);\n                }\n            });\n        });\n    };\n    return TemplateParser;\n}());\nvar TemplateParseVisitor = (function () {\n    function TemplateParseVisitor(reflector, config, providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n        var _this = this;\n        this.reflector = reflector;\n        this.config = config;\n        this.providerViewContext = providerViewContext;\n        this._bindingParser = _bindingParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._schemas = _schemas;\n        this._targetErrors = _targetErrors;\n        this.selectorMatcher = new SelectorMatcher();\n        this.directivesIndex = new Map();\n        this.ngContentCount = 0;\n        // Note: queries start with id 1 so we can use the number in a Bloom filter!\n        this.contentQueryStartId = providerViewContext.component.viewQueries.length + 1;\n        directives.forEach(function (directive, index) {\n            var /** @type {?} */ selector = CssSelector.parse(/** @type {?} */ ((directive.selector)));\n            _this.selectorMatcher.addSelectables(selector, directive);\n            _this.directivesIndex.set(directive, index);\n        });\n    }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return null; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return null; };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    function (text, parent) {\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        var /** @type {?} */ valueNoNgsp = replaceNgsp(text.value);\n        var /** @type {?} */ expr = this._bindingParser.parseInterpolation(valueNoNgsp, /** @type {?} */ ((text.sourceSpan)));\n        return expr ? new BoundTextAst(expr, ngContentIndex, /** @type {?} */ ((text.sourceSpan))) :\n            new TextAst(valueNoNgsp, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    function (element, parent) {\n        var _this = this;\n        var /** @type {?} */ queryStartIndex = this.contentQueryStartId;\n        var /** @type {?} */ nodeName = element.name;\n        var /** @type {?} */ preparsedElement = preparseElement(element);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE) {\n            // Skipping <script> for security reasons\n            // Skipping <style> as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n            isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n            // Skipping stylesheets with either relative urls or package scheme as we already processed\n            // them in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ matchableAttrs = [];\n        var /** @type {?} */ elementOrDirectiveProps = [];\n        var /** @type {?} */ elementOrDirectiveRefs = [];\n        var /** @type {?} */ elementVars = [];\n        var /** @type {?} */ events = [];\n        var /** @type {?} */ templateElementOrDirectiveProps = [];\n        var /** @type {?} */ templateMatchableAttrs = [];\n        var /** @type {?} */ templateElementVars = [];\n        var /** @type {?} */ hasInlineTemplates = false;\n        var /** @type {?} */ attrs = [];\n        var /** @type {?} */ isTemplateElement = isTemplate(element, this.config.enableLegacyTemplate, function (m, span) { return _this._reportError(m, span, ParseErrorLevel.WARNING); });\n        element.attrs.forEach(function (attr) {\n            var /** @type {?} */ hasBinding = _this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n            var /** @type {?} */ templateBindingsSource;\n            var /** @type {?} */ prefixToken;\n            var /** @type {?} */ normalizedName = _this._normalizeAttributeName(attr.name);\n            if (_this.config.enableLegacyTemplate && normalizedName == TEMPLATE_ATTR) {\n                _this._reportError(TEMPLATE_ATTR_DEPRECATION_WARNING, attr.sourceSpan, ParseErrorLevel.WARNING);\n                templateBindingsSource = attr.value;\n            }\n            else if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n                templateBindingsSource = attr.value;\n                prefixToken = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length) + ':';\n            }\n            var /** @type {?} */ hasTemplateBinding = templateBindingsSource != null;\n            if (hasTemplateBinding) {\n                if (hasInlineTemplates) {\n                    _this._reportError(\"Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *\", attr.sourceSpan);\n                }\n                hasInlineTemplates = true;\n                _this._bindingParser.parseInlineTemplateBinding(/** @type {?} */ ((prefixToken)), /** @type {?} */ ((templateBindingsSource)), attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, templateElementVars);\n            }\n            if (!hasBinding && !hasTemplateBinding) {\n                // don't include the bindings as attributes as well in the AST\n                attrs.push(_this.visitAttribute(attr, null));\n                matchableAttrs.push([attr.name, attr.value]);\n            }\n        });\n        var /** @type {?} */ elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);\n        var _a = this._parseDirectives(this.selectorMatcher, elementCssSelector), directiveMetas = _a.directives, matchElement = _a.matchElement;\n        var /** @type {?} */ references = [];\n        var /** @type {?} */ boundDirectivePropNames = new Set();\n        var /** @type {?} */ directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, /** @type {?} */ ((element.sourceSpan)), references, boundDirectivePropNames);\n        var /** @type {?} */ elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, boundDirectivePropNames);\n        var /** @type {?} */ isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n        var /** @type {?} */ providerContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), isViewRoot, directiveAsts, attrs, references, isTemplateElement, queryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n        var /** @type {?} */ children = visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? /** @type {?} */ ((parent.providerContext)) : providerContext));\n        providerContext.afterElement();\n        // Override the actual selector when the `ngProjectAs` attribute is provided\n        var /** @type {?} */ projectionSelector = preparsedElement.projectAs != null ?\n            CssSelector.parse(preparsedElement.projectAs)[0] :\n            elementCssSelector;\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(projectionSelector)));\n        var /** @type {?} */ parsedElement;\n        if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n            if (element.children && !element.children.every(_isEmptyTextNode)) {\n                this._reportError(\"<ng-content> element cannot have content.\", /** @type {?} */ ((element.sourceSpan)));\n            }\n            parsedElement = new NgContentAst(this.ngContentCount++, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else if (isTemplateElement) {\n            this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n            this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, /** @type {?} */ ((element.sourceSpan)));\n            parsedElement = new EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else {\n            this._assertElementExists(matchElement, element);\n            this._assertOnlyOneComponent(directiveAsts, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ ngContentIndex_1 = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n            parsedElement = new ElementAst(nodeName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex_1, element.sourceSpan, element.endSourceSpan || null);\n        }\n        if (hasInlineTemplates) {\n            var /** @type {?} */ templateQueryStartIndex = this.contentQueryStartId;\n            var /** @type {?} */ templateSelector = createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);\n            var templateDirectiveMetas = this._parseDirectives(this.selectorMatcher, templateSelector).directives;\n            var /** @type {?} */ templateBoundDirectivePropNames = new Set();\n            var /** @type {?} */ templateDirectiveAsts = this._createDirectiveAsts(true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [], /** @type {?} */ ((element.sourceSpan)), [], templateBoundDirectivePropNames);\n            var /** @type {?} */ templateElementProps = this._createElementPropertyAsts(element.name, templateElementOrDirectiveProps, templateBoundDirectivePropNames);\n            this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ templateProviderContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), parent.isTemplateElement, templateDirectiveAsts, [], [], true, templateQueryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n            templateProviderContext.afterElement();\n            parsedElement = new EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches, [parsedElement], ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        return parsedElement;\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAttr = /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n        var /** @type {?} */ name = this._normalizeAttributeName(attr.name);\n        var /** @type {?} */ value = attr.value;\n        var /** @type {?} */ srcSpan = attr.sourceSpan;\n        var /** @type {?} */ bindParts = name.match(BIND_NAME_REGEXP);\n        var /** @type {?} */ hasBinding = false;\n        if (bindParts !== null) {\n            hasBinding = true;\n            if (bindParts[KW_BIND_IDX] != null) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[KW_LET_IDX]) {\n                if (isTemplateElement) {\n                    var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                    this._parseVariable(identifier, value, srcSpan, targetVars);\n                }\n                else {\n                    this._reportError(\"\\\"let-\\\" is only supported on ng-template elements.\", srcSpan);\n                }\n            }\n            else if (bindParts[KW_REF_IDX]) {\n                var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                this._parseReference(identifier, value, srcSpan, targetRefs);\n            }\n            else if (bindParts[KW_ON_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_BINDON_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_AT_IDX]) {\n                this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[IDENT_PROPERTY_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_EVENT_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n        }\n        else {\n            hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        if (!hasBinding) {\n            this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        return hasBinding;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._normalizeAttributeName = /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    function (attrName) {\n        return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseVariable = /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (identifier, value, sourceSpan, targetVars) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n        }\n        targetVars.push(new VariableAst(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseReference = /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    function (identifier, value, sourceSpan, targetRefs) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n        }\n        targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAssignmentEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        this._bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\n    };\n    /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseDirectives = /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    function (selectorMatcher, elementCssSelector) {\n        var _this = this;\n        // Need to sort the directives so that we get consistent results throughout,\n        // as selectorMatcher uses Maps inside.\n        // Also deduplicate directives as they might match more than one time!\n        var /** @type {?} */ directives = new Array(this.directivesIndex.size);\n        // Whether any directive selector matches on the element name\n        var /** @type {?} */ matchElement = false;\n        selectorMatcher.match(elementCssSelector, function (selector, directive) {\n            directives[/** @type {?} */ ((_this.directivesIndex.get(directive)))] = directive;\n            matchElement = matchElement || selector.hasElementSelector();\n        });\n        return {\n            directives: directives.filter(function (dir) { return !!dir; }),\n            matchElement: matchElement,\n        };\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectiveAsts = /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    function (isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences, targetBoundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ matchedReferences = new Set();\n        var /** @type {?} */ component = /** @type {?} */ ((null));\n        var /** @type {?} */ directiveAsts = directives.map(function (directive) {\n            var /** @type {?} */ sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, \"Directive \" + identifierName(directive.type));\n            if (directive.isComponent) {\n                component = directive;\n            }\n            var /** @type {?} */ directiveProperties = [];\n            var /** @type {?} */ hostProperties = /** @type {?} */ ((_this._bindingParser.createDirectiveHostPropertyAsts(directive, elementName, sourceSpan)));\n            // Note: We need to check the host properties here as well,\n            // as we don't know the element name in the DirectiveWrapperCompiler yet.\n            hostProperties = _this._checkPropertiesInSchema(elementName, hostProperties);\n            var /** @type {?} */ hostEvents = /** @type {?} */ ((_this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan)));\n            _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties, targetBoundDirectivePropNames);\n            elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n                if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n                    (elOrDirRef.isReferenceToDirective(directive))) {\n                    targetReferences.push(new ReferenceAst(elOrDirRef.name, createTokenForReference(directive.type.reference), elOrDirRef.sourceSpan));\n                    matchedReferences.add(elOrDirRef.name);\n                }\n            });\n            var /** @type {?} */ contentQueryStartId = _this.contentQueryStartId;\n            _this.contentQueryStartId += directive.queries.length;\n            return new DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, contentQueryStartId, sourceSpan);\n        });\n        elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n            if (elOrDirRef.value.length > 0) {\n                if (!matchedReferences.has(elOrDirRef.name)) {\n                    _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + elOrDirRef.value + \"\\\"\", elOrDirRef.sourceSpan);\n                }\n            }\n            else if (!component) {\n                var /** @type {?} */ refToken = /** @type {?} */ ((null));\n                if (isTemplateElement) {\n                    refToken = createTokenForExternalReference(_this.reflector, Identifiers.TemplateRef);\n                }\n                targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.sourceSpan));\n            }\n        });\n        return directiveAsts;\n    };\n    /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectivePropertyAsts = /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    function (directiveProperties, boundProps, targetBoundDirectiveProps, targetBoundDirectivePropNames) {\n        if (directiveProperties) {\n            var /** @type {?} */ boundPropsByName_1 = new Map();\n            boundProps.forEach(function (boundProp) {\n                var /** @type {?} */ prevValue = boundPropsByName_1.get(boundProp.name);\n                if (!prevValue || prevValue.isLiteral) {\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    boundPropsByName_1.set(boundProp.name, boundProp);\n                }\n            });\n            Object.keys(directiveProperties).forEach(function (dirProp) {\n                var /** @type {?} */ elProp = directiveProperties[dirProp];\n                var /** @type {?} */ boundProp = boundPropsByName_1.get(elProp);\n                // Bindings are optional, so this binding only needs to be set up if an expression is given.\n                if (boundProp) {\n                    targetBoundDirectivePropNames.add(boundProp.name);\n                    if (!isEmptyExpression(boundProp.expression)) {\n                        targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createElementPropertyAsts = /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    function (elementName, props, boundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ boundElementProps = [];\n        props.forEach(function (prop) {\n            if (!prop.isLiteral && !boundDirectivePropNames.has(prop.name)) {\n                boundElementProps.push(_this._bindingParser.createElementPropertyAst(elementName, prop));\n            }\n        });\n        return this._checkPropertiesInSchema(elementName, boundElementProps);\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectives = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        return directives.filter(function (directive) { return directive.directive.isComponent; });\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectiveNames = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        return this._findComponentDirectives(directives)\n            .map(function (directive) { return /** @type {?} */ ((identifierName(directive.directive.type))); });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertOnlyOneComponent = /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (directives, sourceSpan) {\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 1) {\n            this._reportError(\"More than one component matched on this element.\\n\" +\n                \"Make sure that only one component's selector can match a given element.\\n\" +\n                (\"Conflicting components: \" + componentTypeNames.join(',')), sourceSpan);\n        }\n    };\n    /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertElementExists = /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    function (matchElement, element) {\n        var /** @type {?} */ elName = element.name.replace(/^:xhtml:/, '');\n        if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n            var /** @type {?} */ errorMsg = \"'\" + elName + \"' is not a known element:\\n\";\n            errorMsg +=\n                \"1. If '\" + elName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n            if (elName.indexOf('-') > -1) {\n                errorMsg +=\n                    \"2. If '\" + elName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n            }\n            else {\n                errorMsg +=\n                    \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n            }\n            this._reportError(errorMsg, /** @type {?} */ ((element.sourceSpan)));\n        }\n    };\n    /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (directives, elementProps, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 0) {\n            this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\n        }\n        elementProps.forEach(function (prop) {\n            _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", sourceSpan);\n        });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    function (directives, events) {\n        var _this = this;\n        var /** @type {?} */ allDirectiveEvents = new Set();\n        directives.forEach(function (directive) {\n            Object.keys(directive.directive.outputs).forEach(function (k) {\n                var /** @type {?} */ eventName = directive.directive.outputs[k];\n                allDirectiveEvents.add(eventName);\n            });\n        });\n        events.forEach(function (event) {\n            if (event.target != null || !allDirectiveEvents.has(event.name)) {\n                _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", event.sourceSpan);\n            }\n        });\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._checkPropertiesInSchema = /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    function (elementName, boundProps) {\n        var _this = this;\n        // Note: We can't filter out empty expressions before this method,\n        // as we still want to validate them!\n        return boundProps.filter(function (boundProp) {\n            if (boundProp.type === PropertyBindingType.Property &&\n                !_this._schemaRegistry.hasProperty(elementName, boundProp.name, _this._schemas)) {\n                var /** @type {?} */ errorMsg = \"Can't bind to '\" + boundProp.name + \"' since it isn't a known property of '\" + elementName + \"'.\";\n                if (elementName.startsWith('ng-')) {\n                    errorMsg +=\n                        \"\\n1. If '\" + boundProp.name + \"' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.\" +\n                            \"\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                else if (elementName.indexOf('-') > -1) {\n                    errorMsg +=\n                        \"\\n1. If '\" + elementName + \"' is an Angular component and it has '\" + boundProp.name + \"' input, then verify that it is part of this module.\" +\n                            (\"\\n2. If '\" + elementName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\") +\n                            \"\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                _this._reportError(errorMsg, boundProp.sourceSpan);\n            }\n            return !isEmptyExpression(boundProp.value);\n        });\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    return TemplateParseVisitor;\n}());\nvar NonBindableVisitor = (function () {\n    function NonBindableVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    function (ast, parent) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE ||\n            preparsedElement.type === PreparsedElementType.STYLESHEET) {\n            // Skipping <script> for security reasons\n            // Skipping <style> and stylesheets as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ attrNameAndValues = ast.attrs.map(function (attr) { return [attr.name, attr.value]; });\n        var /** @type {?} */ selector = createElementCssSelector(ast.name, attrNameAndValues);\n        var /** @type {?} */ ngContentIndex = parent.findNgContentIndex(selector);\n        var /** @type {?} */ children = visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n        return new ElementAst(ast.name, visitAll(this, ast.attrs), [], [], [], [], [], false, [], children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    function (text, parent) {\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        return new TextAst(text.value, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return expansionCase; };\n    return NonBindableVisitor;\n}());\n/**\n * A reference to an element or directive in a template. E.g., the reference in this template:\n *\n * <div #myMenu=\"coolMenu\">\n *\n * would be {name: 'myMenu', value: 'coolMenu', sourceSpan: ...}\n */\nvar ElementOrDirectiveRef = (function () {\n    function ElementOrDirectiveRef(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /** Gets whether this is a reference to the given directive. */\n    /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    ElementOrDirectiveRef.prototype.isReferenceToDirective = /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    function (directive) {\n        return splitExportAs(directive.exportAs).indexOf(this.value) !== -1;\n    };\n    return ElementOrDirectiveRef;\n}());\n/**\n * Splits a raw, potentially comma-delimted `exportAs` value into an array of names.\n * @param {?} exportAs\n * @return {?}\n */\nfunction splitExportAs(exportAs) {\n    return exportAs ? exportAs.split(',').map(function (e) { return e.trim(); }) : [];\n}\n/**\n * @param {?} classAttrValue\n * @return {?}\n */\nfunction splitClasses(classAttrValue) {\n    return classAttrValue.trim().split(/\\s+/g);\n}\nvar ElementContext = (function () {\n    function ElementContext(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n        this.isTemplateElement = isTemplateElement;\n        this._ngContentIndexMatcher = _ngContentIndexMatcher;\n        this._wildcardNgContentIndex = _wildcardNgContentIndex;\n        this.providerContext = providerContext;\n    }\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    ElementContext.create = /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    function (isTemplateElement, directives, providerContext) {\n        var /** @type {?} */ matcher = new SelectorMatcher();\n        var /** @type {?} */ wildcardNgContentIndex = /** @type {?} */ ((null));\n        var /** @type {?} */ component = directives.find(function (directive) { return directive.directive.isComponent; });\n        if (component) {\n            var /** @type {?} */ ngContentSelectors = /** @type {?} */ ((component.directive.template)).ngContentSelectors;\n            for (var /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n                var /** @type {?} */ selector = ngContentSelectors[i];\n                if (selector === '*') {\n                    wildcardNgContentIndex = i;\n                }\n                else {\n                    matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n                }\n            }\n        }\n        return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ElementContext.prototype.findNgContentIndex = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        var /** @type {?} */ ngContentIndices = [];\n        this._ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\n        ngContentIndices.sort();\n        if (this._wildcardNgContentIndex != null) {\n            ngContentIndices.push(this._wildcardNgContentIndex);\n        }\n        return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n    };\n    return ElementContext;\n}());\n/**\n * @param {?} elementName\n * @param {?} attributes\n * @return {?}\n */\nfunction createElementCssSelector(elementName, attributes) {\n    var /** @type {?} */ cssSelector = new CssSelector();\n    var /** @type {?} */ elNameNoNs = splitNsName(elementName)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (var /** @type {?} */ i = 0; i < attributes.length; i++) {\n        var /** @type {?} */ attrName = attributes[i][0];\n        var /** @type {?} */ attrNameNoNs = splitNsName(attrName)[1];\n        var /** @type {?} */ attrValue = attributes[i][1];\n        cssSelector.addAttribute(attrNameNoNs, attrValue);\n        if (attrName.toLowerCase() == CLASS_ATTR) {\n            var /** @type {?} */ classes = splitClasses(attrValue);\n            classes.forEach(function (className) { return cssSelector.addClassName(className); });\n        }\n    }\n    return cssSelector;\n}\nvar EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nvar NON_BINDABLE_VISITOR = new NonBindableVisitor();\n/**\n * @param {?} node\n * @return {?}\n */\nfunction _isEmptyTextNode(node) {\n    return node instanceof Text && node.value.trim().length == 0;\n}\n/**\n * @template T\n * @param {?} items\n * @return {?}\n */\nfunction removeSummaryDuplicates(items) {\n    var /** @type {?} */ map = new Map();\n    items.forEach(function (item) {\n        if (!map.get(item.type.reference)) {\n            map.set(item.type.reference, item);\n        }\n    });\n    return Array.from(map.values());\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction isEmptyExpression(ast) {\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    return ast instanceof EmptyExpr;\n}\n/**\n * @param {?} el\n * @param {?} enableLegacyTemplate\n * @param {?} reportDeprecation\n * @return {?}\n */\nfunction isTemplate(el, enableLegacyTemplate, reportDeprecation) {\n    if (isNgTemplate(el.name))\n        return true;\n    var /** @type {?} */ tagNoNs = splitNsName(el.name)[1];\n    // `<template>` is HTML and case insensitive\n    if (tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n        if (enableLegacyTemplate && tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n            reportDeprecation(TEMPLATE_ELEMENT_DEPRECATION_WARNING, /** @type {?} */ ((el.sourceSpan)));\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventHandlerVars = (function () {\n    function EventHandlerVars() {\n    }\n    EventHandlerVars.event = variable('$event');\n    return EventHandlerVars;\n}());\n/**\n * @record\n */\n\nvar ConvertActionBindingResult = (function () {\n    function ConvertActionBindingResult(stmts, allowDefault) {\n        this.stmts = stmts;\n        this.allowDefault = allowDefault;\n    }\n    return ConvertActionBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression is\n * used in an action binding (e.g. an event handler).\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} action\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertActionBinding(localResolver, implicitReceiver, action, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ actionWithoutBuiltins = convertPropertyBindingBuiltins({\n        createLiteralArrayConverter: function (argCount) {\n            // Note: no caching for literal arrays in actions.\n            return function (args) { return literalArr(args); };\n        },\n        createLiteralMapConverter: function (keys) {\n            // Note: no caching for literal maps in actions.\n            return function (values) {\n                var /** @type {?} */ entries = keys.map(function (k, i) {\n                    return ({\n                        key: k.key,\n                        value: values[i],\n                        quoted: k.quoted,\n                    });\n                });\n                return literalMap(entries);\n            };\n        },\n        createPipeConverter: function (name) {\n            throw new Error(\"Illegal State: Actions are not allowed to contain pipes. Pipe: \" + name);\n        }\n    }, action);\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ actionStmts = [];\n    flattenStatements(actionWithoutBuiltins.visit(visitor, _Mode.Statement), actionStmts);\n    prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n    var /** @type {?} */ lastIndex = actionStmts.length - 1;\n    var /** @type {?} */ preventDefaultVar = /** @type {?} */ ((null));\n    if (lastIndex >= 0) {\n        var /** @type {?} */ lastStatement = actionStmts[lastIndex];\n        var /** @type {?} */ returnExpr = convertStmtIntoExpression(lastStatement);\n        if (returnExpr) {\n            // Note: We need to cast the result of the method call to dynamic,\n            // as it might be a void method!\n            preventDefaultVar = createPreventDefaultVar(bindingId);\n            actionStmts[lastIndex] =\n                preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false)))\n                    .toDeclStmt(null, [StmtModifier.Final]);\n        }\n    }\n    return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertPropertyBindingBuiltins(converterFactory, ast) {\n    return convertBuiltins(converterFactory, ast);\n}\nvar ConvertPropertyBindingResult = (function () {\n    function ConvertPropertyBindingResult(stmts, currValExpr) {\n        this.stmts = stmts;\n        this.currValExpr = currValExpr;\n    }\n    return ConvertPropertyBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression\n * is used in property binding. The expression has to be preprocessed via\n * `convertPropertyBindingBuiltins`.\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} expressionWithoutBuiltins\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertPropertyBinding(localResolver, implicitReceiver, expressionWithoutBuiltins, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ currValExpr = createCurrValueExpr(bindingId);\n    var /** @type {?} */ stmts = [];\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ outputExpr = expressionWithoutBuiltins.visit(visitor, _Mode.Expression);\n    if (visitor.temporaryCount) {\n        for (var /** @type {?} */ i = 0; i < visitor.temporaryCount; i++) {\n            stmts.push(temporaryDeclaration(bindingId, i));\n        }\n    }\n    stmts.push(currValExpr.set(outputExpr).toDeclStmt(null, [StmtModifier.Final]));\n    return new ConvertPropertyBindingResult(stmts, currValExpr);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertBuiltins(converterFactory, ast) {\n    var /** @type {?} */ visitor = new _BuiltinAstConverter(converterFactory);\n    return ast.visit(visitor);\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryName(bindingId, temporaryNumber) {\n    return \"tmp_\" + bindingId + \"_\" + temporaryNumber;\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryDeclaration(bindingId, temporaryNumber) {\n    return new DeclareVarStmt(temporaryName(bindingId, temporaryNumber), NULL_EXPR);\n}\n/**\n * @param {?} temporaryCount\n * @param {?} bindingId\n * @param {?} statements\n * @return {?}\n */\nfunction prependTemporaryDecls(temporaryCount, bindingId, statements) {\n    for (var /** @type {?} */ i = temporaryCount - 1; i >= 0; i--) {\n        statements.unshift(temporaryDeclaration(bindingId, i));\n    }\n}\n/** @enum {number} */\nvar _Mode = {\n    Statement: 0,\n    Expression: 1,\n};\n_Mode[_Mode.Statement] = \"Statement\";\n_Mode[_Mode.Expression] = \"Expression\";\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureStatementMode(mode, ast) {\n    if (mode !== _Mode.Statement) {\n        throw new Error(\"Expected a statement, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureExpressionMode(mode, ast) {\n    if (mode !== _Mode.Expression) {\n        throw new Error(\"Expected an expression, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} expr\n * @return {?}\n */\nfunction convertToStatementIfNeeded(mode, expr) {\n    if (mode === _Mode.Statement) {\n        return expr.toStmt();\n    }\n    else {\n        return expr;\n    }\n}\nvar _BuiltinAstConverter = (function (_super) {\n    __extends(_BuiltinAstConverter, _super);\n    function _BuiltinAstConverter(_converterFactory) {\n        var _this = _super.call(this) || this;\n        _this._converterFactory = _converterFactory;\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = [ast.exp].concat(ast.args).map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createPipeConverter(ast.name, args.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.expressions.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralArrayConverter(ast.expressions.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.values.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralMapConverter(ast.keys));\n    };\n    return _BuiltinAstConverter;\n}(AstTransformer));\nvar _AstToIrVisitor = (function () {\n    function _AstToIrVisitor(_localResolver, _implicitReceiver, bindingId) {\n        this._localResolver = _localResolver;\n        this._implicitReceiver = _implicitReceiver;\n        this.bindingId = bindingId;\n        this._nodeMap = new Map();\n        this._resultMap = new Map();\n        this._currentTemporary = 0;\n        this.temporaryCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ op;\n        switch (ast.operation) {\n            case '+':\n                op = BinaryOperator.Plus;\n                break;\n            case '-':\n                op = BinaryOperator.Minus;\n                break;\n            case '*':\n                op = BinaryOperator.Multiply;\n                break;\n            case '/':\n                op = BinaryOperator.Divide;\n                break;\n            case '%':\n                op = BinaryOperator.Modulo;\n                break;\n            case '&&':\n                op = BinaryOperator.And;\n                break;\n            case '||':\n                op = BinaryOperator.Or;\n                break;\n            case '==':\n                op = BinaryOperator.Equals;\n                break;\n            case '!=':\n                op = BinaryOperator.NotEquals;\n                break;\n            case '===':\n                op = BinaryOperator.Identical;\n                break;\n            case '!==':\n                op = BinaryOperator.NotIdentical;\n                break;\n            case '<':\n                op = BinaryOperator.Lower;\n                break;\n            case '>':\n                op = BinaryOperator.Bigger;\n                break;\n            case '<=':\n                op = BinaryOperator.LowerEquals;\n                break;\n            case '>=':\n                op = BinaryOperator.BiggerEquals;\n                break;\n            default:\n                throw new Error(\"Unsupported operation \" + ast.operation);\n        }\n        return convertToStatementIfNeeded(mode, new BinaryOperatorExpr(op, this._visit(ast.left, _Mode.Expression), this._visit(ast.right, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureStatementMode(mode, ast);\n        return this.visitAll(ast.expressions, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ value = this._visit(ast.condition, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, value.conditional(this._visit(ast.trueExp, _Mode.Expression), this._visit(ast.falseExp, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal state: Pipes should have been converted into functions. Pipe: \" + ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ convertedArgs = this.visitAll(ast.args, _Mode.Expression);\n        var /** @type {?} */ fnResult;\n        if (ast instanceof BuiltinFunctionCall) {\n            fnResult = ast.converter(convertedArgs);\n        }\n        else {\n            fnResult = this._visit(/** @type {?} */ ((ast.target)), _Mode.Expression).callFn(convertedArgs);\n        }\n        return convertToStatementIfNeeded(mode, fnResult);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        return this._implicitReceiver;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        var /** @type {?} */ args = [literal(ast.expressions.length)];\n        for (var /** @type {?} */ i = 0; i < ast.strings.length - 1; i++) {\n            args.push(literal(ast.strings[i]));\n            args.push(this._visit(ast.expressions[i], _Mode.Expression));\n        }\n        args.push(literal(ast.strings[ast.strings.length - 1]));\n        return ast.expressions.length <= 9 ?\n            importExpr(Identifiers.inlineInterpolate).callFn(args) :\n            importExpr(Identifiers.interpolate).callFn([args[0], literalArr(args.slice(1))]);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            return convertToStatementIfNeeded(mode, this._visit(ast.obj, _Mode.Expression).key(this._visit(ast.key, _Mode.Expression)));\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ obj = this._visit(ast.obj, _Mode.Expression);\n        var /** @type {?} */ key = this._visit(ast.key, _Mode.Expression);\n        var /** @type {?} */ value = this._visit(ast.value, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal State: literal arrays should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal State: literal maps should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, literal(ast.value));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this._localResolver.getLocal(name); };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ args = this.visitAll(ast.args, _Mode.Expression);\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                var /** @type {?} */ varExpr = this._getLocal(ast.name);\n                if (varExpr) {\n                    result = varExpr.callFn(args);\n                }\n            }\n            if (result == null) {\n                result = receiver.callMethod(ast.name, args);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, not(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, assertNotNull(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                result = this._getLocal(ast.name);\n            }\n            if (result == null) {\n                result = receiver.prop(ast.name);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n        if (receiver === this._implicitReceiver) {\n            var /** @type {?} */ varExpr = this._getLocal(ast.name);\n            if (varExpr) {\n                throw new Error('Cannot assign to a reference or variable!');\n            }\n        }\n        return convertToStatementIfNeeded(mode, receiver.prop(ast.name).set(this._visit(ast.value, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitAll = /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    function (asts, mode) {\n        var _this = this;\n        return asts.map(function (ast) { return _this._visit(ast, mode); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Quotes are not supported for evaluation!\\n        Statement: \" + ast.uninterpretedExpression + \" located at \" + ast.location);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._visit = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ result = this._resultMap.get(ast);\n        if (result)\n            return result;\n        return (this._nodeMap.get(ast) || ast).visit(this, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.convertSafeAccess = /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, leftMostSafe, mode) {\n        // If the expression contains a safe access node on the left it needs to be converted to\n        // an expression that guards the access to the member by checking the receiver for blank. As\n        // execution proceeds from left to right, the left most part of the expression must be guarded\n        // first but, because member access is left associative, the right side of the expression is at\n        // the top of the AST. The desired result requires lifting a copy of the the left part of the\n        // expression up to test it for blank before generating the unguarded version.\n        // Consider, for example the following expression: a?.b.c?.d.e\n        // This results in the ast:\n        //         .\n        //        / \\\n        //       ?.   e\n        //      /  \\\n        //     .    d\n        //    / \\\n        //   ?.  c\n        //  /  \\\n        // a    b\n        // The following tree should be generated:\n        //\n        //        /---- ? ----\\\n        //       /      |      \\\n        //     a   /--- ? ---\\  null\n        //        /     |     \\\n        //       .      .     null\n        //      / \\    / \\\n        //     .  c   .   e\n        //    / \\    / \\\n        //   a   b  ,   d\n        //         / \\\n        //        .   c\n        //       / \\\n        //      a   b\n        //\n        // Notice that the first guard condition is the left hand of the left most safe access node\n        // which comes in as leftMostSafe to this routine.\n        var /** @type {?} */ guardedExpression = this._visit(leftMostSafe.receiver, _Mode.Expression);\n        var /** @type {?} */ temporary = /** @type {?} */ ((undefined));\n        if (this.needsTemporary(leftMostSafe.receiver)) {\n            // If the expression has method calls or pipes then we need to save the result into a\n            // temporary variable to avoid calling stateful or impure code more than once.\n            temporary = this.allocateTemporary();\n            // Preserve the result in the temporary variable\n            guardedExpression = temporary.set(guardedExpression);\n            // Ensure all further references to the guarded expression refer to the temporary instead.\n            this._resultMap.set(leftMostSafe.receiver, temporary);\n        }\n        var /** @type {?} */ condition = guardedExpression.isBlank();\n        // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n        // leftMostNode with its unguarded version in the call to `this.visit()`.\n        if (leftMostSafe instanceof SafeMethodCall) {\n            this._nodeMap.set(leftMostSafe, new MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n        }\n        else {\n            this._nodeMap.set(leftMostSafe, new PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n        }\n        // Recursively convert the node now without the guarded member access.\n        var /** @type {?} */ access = this._visit(ast, _Mode.Expression);\n        // Remove the mapping. This is not strictly required as the converter only traverses each node\n        // once but is safer if the conversion is changed to traverse the nodes more than once.\n        this._nodeMap.delete(leftMostSafe);\n        // If we allocated a temporary, release it.\n        if (temporary) {\n            this.releaseTemporary(temporary);\n        }\n        // Produce the conditional\n        return convertToStatementIfNeeded(mode, condition.conditional(literal(null), access));\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.leftMostSafeNode = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        return ast.visit({\n            visitBinary: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitChain: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitConditional: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitFunctionCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitImplicitReceiver: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitInterpolation: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitKeyedRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.obj); },\n            visitKeyedWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralArray: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralMap: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralPrimitive: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver); },\n            visitPipe: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitPrefixNot: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitNonNullAssert: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitPropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver); },\n            visitPropertyWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitQuote: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitSafeMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver) || ast; },\n            visitSafePropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) {\n                return visit(this, ast.receiver) || ast;\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.needsTemporary = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return ast && (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        var /** @type {?} */ visitSome = function (visitor, ast) {\n            return ast.some(function (ast) { return visit(visitor, ast); });\n        };\n        return ast.visit({\n            visitBinary: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.left) || visit(this, ast.right); },\n            visitChain: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitConditional: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) {\n                return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                    visit(this, ast.falseExp);\n            },\n            visitFunctionCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitImplicitReceiver: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitInterpolation: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visitSome(this, ast.expressions); },\n            visitKeyedRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitKeyedWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitLiteralArray: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitLiteralMap: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitLiteralPrimitive: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitPipe: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitPrefixNot: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.expression); },\n            visitNonNullAssert: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.expression); },\n            visitPropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitPropertyWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitQuote: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitSafeMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitSafePropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.allocateTemporary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tempNumber = this._currentTemporary++;\n        this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n        return new ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n    };\n    /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.releaseTemporary = /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    function (temporary) {\n        this._currentTemporary--;\n        if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n            throw new Error(\"Temporary \" + temporary.name + \" released out of order\");\n        }\n    };\n    return _AstToIrVisitor;\n}());\n/**\n * @param {?} arg\n * @param {?} output\n * @return {?}\n */\nfunction flattenStatements(arg, output) {\n    if (Array.isArray(arg)) {\n        (/** @type {?} */ (arg)).forEach(function (entry) { return flattenStatements(entry, output); });\n    }\n    else {\n        output.push(arg);\n    }\n}\nvar DefaultLocalResolver = (function () {\n    function DefaultLocalResolver() {\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DefaultLocalResolver.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name === EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        return null;\n    };\n    return DefaultLocalResolver;\n}());\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createCurrValueExpr(bindingId) {\n    return variable(\"currVal_\" + bindingId); // fix syntax highlighting: `\n}\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createPreventDefaultVar(bindingId) {\n    return variable(\"pd_\" + bindingId);\n}\n/**\n * @param {?} stmt\n * @return {?}\n */\nfunction convertStmtIntoExpression(stmt) {\n    if (stmt instanceof ExpressionStatement) {\n        return stmt.expr;\n    }\n    else if (stmt instanceof ReturnStatement) {\n        return stmt.value;\n    }\n    return null;\n}\nvar BuiltinFunctionCall = (function (_super) {\n    __extends(BuiltinFunctionCall, _super);\n    function BuiltinFunctionCall(span, args, converter) {\n        var _this = _super.call(this, span, null, args) || this;\n        _this.args = args;\n        _this.converter = converter;\n        return _this;\n    }\n    return BuiltinFunctionCall;\n}(FunctionCall));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generates code that is used to type check templates.\n */\nvar TypeCheckCompiler = (function () {\n    function TypeCheckCompiler(options, reflector) {\n        this.options = options;\n        this.reflector = reflector;\n    }\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     */\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     * @param {?} component\n     * @param {?} template\n     * @param {?} usedPipes\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    TypeCheckCompiler.prototype.compileComponent = /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     * @param {?} component\n     * @param {?} template\n     * @param {?} usedPipes\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    function (component, template, usedPipes, externalReferenceVars) {\n        var _this = this;\n        var /** @type {?} */ pipes = new Map();\n        usedPipes.forEach(function (p) { return pipes.set(p.name, p.type.reference); });\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder(_this.options, _this.reflector, externalReferenceVars, parent, component.type.reference, component.isHost, embeddedViewIndex, pipes, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        return visitor.build();\n    };\n    return TypeCheckCompiler;\n}());\nvar DYNAMIC_VAR_NAME = '_any';\nvar ViewBuilder = (function () {\n    function ViewBuilder(options, reflector, externalReferenceVars, parent, component, isHostComponent, embeddedViewIndex, pipes, viewBuilderFactory) {\n        this.options = options;\n        this.reflector = reflector;\n        this.externalReferenceVars = externalReferenceVars;\n        this.parent = parent;\n        this.component = component;\n        this.isHostComponent = isHostComponent;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.pipes = pipes;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.refOutputVars = new Map();\n        this.variables = [];\n        this.children = [];\n        this.updates = [];\n        this.actions = [];\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ViewBuilder.prototype.getOutputVar = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ varName;\n        if (type === this.component && this.isHostComponent) {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        else if (type instanceof StaticSymbol) {\n            varName = this.externalReferenceVars.get(type);\n        }\n        else {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        if (!varName) {\n            throw new Error(\"Illegal State: referring to a type without a variable \" + JSON.stringify(type));\n        }\n        return varName;\n    };\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    function (variables, astNodes) {\n        this.variables = variables;\n        templateVisitAll(this, astNodes);\n    };\n    /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    function (targetStatements) {\n        var _this = this;\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(targetStatements); });\n        var /** @type {?} */ viewStmts = [variable(DYNAMIC_VAR_NAME).set(NULL_EXPR).toDeclStmt(DYNAMIC_TYPE)];\n        var /** @type {?} */ bindingCount = 0;\n        this.updates.forEach(function (expression) {\n            var _a = _this.preprocessUpdateExpression(expression), sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var /** @type {?} */ bindingId = \"\" + bindingCount++;\n            var /** @type {?} */ nameResolver = context === _this.component ? _this : null;\n            var _b = convertPropertyBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId), stmts = _b.stmts, currValExpr = _b.currValExpr;\n            stmts.push(new ExpressionStatement(currValExpr));\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        this.actions.forEach(function (_a) {\n            var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var /** @type {?} */ bindingId = \"\" + bindingCount++;\n            var /** @type {?} */ nameResolver = context === _this.component ? _this : null;\n            var stmts = convertActionBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId).stmts;\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        var /** @type {?} */ viewName = \"_View_\" + this.component.name + \"_\" + this.embeddedViewIndex;\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(viewName, [], viewStmts);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ astWithSource = /** @type {?} */ (ast.value);\n        var /** @type {?} */ inter = /** @type {?} */ (astWithSource.ast);\n        inter.expressions.forEach(function (expr) {\n            return _this.updates.push({ context: _this.component, value: expr, sourceSpan: ast.sourceSpan });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitElementOrTemplate(ast);\n        // Note: The old view compiler used to use an `any` type\n        // for the context in any embedded view.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n            this.children.push(childVisitor);\n            childVisitor.visitAll(ast.variables, ast.children);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        this.visitElementOrTemplate(ast);\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        ast.inputs.forEach(function (inputAst) {\n            _this.updates.push({ context: _this.component, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n        });\n        templateVisitAll(this, ast.children);\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementOrTemplate = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        ast.directives.forEach(function (dirAst) { _this.visitDirective(dirAst); });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ outputVarType = /** @type {?} */ ((null));\n            // Note: The old view compiler used to use an `any` type\n            // for directives exposed via `exportAs`.\n            // We keep this behaivor behind a flag for now.\n            if (ref.value && ref.value.identifier && _this.options.fullTemplateTypeCheck) {\n                outputVarType = ref.value.identifier.reference;\n            }\n            else {\n                outputVarType = BuiltinTypeName.Dynamic;\n            }\n            _this.refOutputVars.set(ref.name, outputVarType);\n        });\n        ast.outputs.forEach(function (outputAst) {\n            _this.actions.push({ context: _this.component, value: outputAst.handler, sourceSpan: outputAst.sourceSpan });\n        });\n    };\n    /**\n     * @param {?} dirAst\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = /**\n     * @param {?} dirAst\n     * @return {?}\n     */\n    function (dirAst) {\n        var _this = this;\n        var /** @type {?} */ dirType = dirAst.directive.type.reference;\n        dirAst.inputs.forEach(function (input) {\n            return _this.updates.push({ context: _this.component, value: input.value, sourceSpan: input.sourceSpan });\n        });\n        // Note: The old view compiler used to use an `any` type\n        // for expressions in host properties / events.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            dirAst.hostProperties.forEach(function (inputAst) {\n                return _this.updates.push({ context: dirType, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n            });\n            dirAst.hostEvents.forEach(function (hostEventAst) {\n                return _this.actions.push({\n                    context: dirType,\n                    value: hostEventAst.handler,\n                    sourceSpan: hostEventAst.sourceSpan\n                });\n            });\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return variable(this.getOutputVar(BuiltinTypeName.Dynamic));\n        }\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent) {\n            var /** @type {?} */ outputVarType = void 0;\n            // check references\n            outputVarType = currBuilder.refOutputVars.get(name);\n            if (outputVarType == null) {\n                // check variables\n                var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n                if (varAst) {\n                    outputVarType = BuiltinTypeName.Dynamic;\n                }\n            }\n            if (outputVarType != null) {\n                return variable(this.getOutputVar(outputVarType));\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.pipeOutputVar = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ pipe = this.pipes.get(name);\n        if (!pipe) {\n            throw new Error(\"Illegal State: Could not find pipe \" + name + \" in template of \" + this.component);\n        }\n        return this.getOutputVar(pipe);\n    };\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype.preprocessUpdateExpression = /**\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        var _this = this;\n        return {\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) {\n                    return function (args) {\n                        var /** @type {?} */ arr = literalArr(args);\n                        // Note: The old view compiler used to use an `any` type\n                        // for arrays.\n                        return _this.options.fullTemplateTypeCheck ? arr : arr.cast(DYNAMIC_TYPE);\n                    };\n                },\n                createLiteralMapConverter: function (keys) {\n                    return function (values) {\n                        var /** @type {?} */ entries = keys.map(function (k, i) {\n                            return ({\n                                key: k.key,\n                                value: values[i],\n                                quoted: k.quoted,\n                            });\n                        });\n                        var /** @type {?} */ map = literalMap(entries);\n                        // Note: The old view compiler used to use an `any` type\n                        // for maps.\n                        return _this.options.fullTemplateTypeCheck ? map : map.cast(DYNAMIC_TYPE);\n                    };\n                },\n                createPipeConverter: function (name, argCount) {\n                    return function (args) {\n                        // Note: The old view compiler used to use an `any` type\n                        // for pipes.\n                        var /** @type {?} */ pipeExpr = _this.options.fullTemplateTypeCheck ?\n                            variable(_this.pipeOutputVar(name)) :\n                            variable(_this.getOutputVar(BuiltinTypeName.Dynamic));\n                        return pipeExpr.callMethod('transform', args);\n                    };\n                },\n            }, expression.value)\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return ViewBuilder;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CLASS_ATTR$1 = 'class';\nvar STYLE_ATTR = 'style';\nvar IMPLICIT_TEMPLATE_VAR = '\\$implicit';\nvar ViewCompileResult = (function () {\n    function ViewCompileResult(viewClassVar, rendererTypeVar) {\n        this.viewClassVar = viewClassVar;\n        this.rendererTypeVar = rendererTypeVar;\n    }\n    return ViewCompileResult;\n}());\nvar ViewCompiler = (function () {\n    function ViewCompiler(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    ViewCompiler.prototype.compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    function (outputCtx, component, template, styles, usedPipes) {\n        var _this = this;\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ staticQueryIds = findStaticQueryIds(template);\n        var /** @type {?} */ renderComponentVarName = /** @type {?} */ ((undefined));\n        if (!component.isHost) {\n            var /** @type {?} */ template_1 = /** @type {?} */ ((component.template));\n            var /** @type {?} */ customRenderData = [];\n            if (template_1.animations && template_1.animations.length) {\n                customRenderData.push(new LiteralMapEntry('animation', convertValueToOutputAst(outputCtx, template_1.animations), true));\n            }\n            var /** @type {?} */ renderComponentVar = variable(rendererTypeName(component.type.reference));\n            renderComponentVarName = /** @type {?} */ ((renderComponentVar.name));\n            outputCtx.statements.push(renderComponentVar\n                .set(importExpr(Identifiers.createRendererType2).callFn([new LiteralMapExpr([\n                    new LiteralMapEntry('encapsulation', literal(template_1.encapsulation), false),\n                    new LiteralMapEntry('styles', styles, false),\n                    new LiteralMapEntry('data', new LiteralMapExpr(customRenderData), false)\n                ])]))\n                .toDeclStmt(importType(Identifiers.RendererType2), [StmtModifier.Final, StmtModifier.Exported]));\n        }\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder$1(_this._reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        (_a = outputCtx.statements).push.apply(_a, visitor.build());\n        return new ViewCompileResult(visitor.viewName, renderComponentVarName);\n        var _a;\n    };\n    return ViewCompiler;\n}());\nvar LOG_VAR$1 = variable('_l');\nvar VIEW_VAR = variable('_v');\nvar CHECK_VAR = variable('_ck');\nvar COMP_VAR = variable('_co');\nvar EVENT_NAME_VAR = variable('en');\nvar ALLOW_DEFAULT_VAR = variable(\"ad\");\nvar ViewBuilder$1 = (function () {\n    function ViewBuilder(reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory) {\n        this.reflector = reflector;\n        this.outputCtx = outputCtx;\n        this.parent = parent;\n        this.component = component;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.usedPipes = usedPipes;\n        this.staticQueryIds = staticQueryIds;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.nodes = [];\n        this.purePipeNodeIndices = Object.create(null);\n        this.refNodeIndices = Object.create(null);\n        this.variables = [];\n        this.children = [];\n        // TODO(tbosch): The old view compiler used to use an `any` type\n        // for the context in any embedded view. We keep this behaivor for now\n        // to be able to introduce the new view compiler without too many errors.\n        this.compType = this.embeddedViewIndex > 0 ?\n            DYNAMIC_TYPE :\n            /** @type {?} */ ((expressionType(outputCtx.importExpr(this.component.type.reference))));\n        this.viewName = viewClassName(this.component.type.reference, this.embeddedViewIndex);\n    }\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    function (variables, astNodes) {\n        var _this = this;\n        this.variables = variables;\n        // create the pipes for the pure pipes immediately, so that we know their indices.\n        if (!this.parent) {\n            this.usedPipes.forEach(function (pipe) {\n                if (pipe.pure) {\n                    _this.purePipeNodeIndices[pipe.name] = _this._createPipe(null, pipe);\n                }\n            });\n        }\n        if (!this.parent) {\n            var /** @type {?} */ queryIds_1 = staticViewQueryIds(this.staticQueryIds);\n            this.component.viewQueries.forEach(function (query, queryIndex) {\n                // Note: queries start with id 1 so we can use the number in a Bloom filter!\n                var /** @type {?} */ queryId = queryIndex + 1;\n                var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n                var /** @type {?} */ flags = 134217728 /* TypeViewQuery */ | calcStaticDynamicQueryFlags(queryIds_1, queryId, query.first);\n                _this.nodes.push(function () {\n                    return ({\n                        sourceSpan: null,\n                        nodeFlags: flags,\n                        nodeDef: importExpr(Identifiers.queryDef).callFn([\n                            literal(flags), literal(queryId),\n                            new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                        ])\n                    });\n                });\n            });\n        }\n        templateVisitAll(this, astNodes);\n        if (this.parent && (astNodes.length === 0 || needsAdditionalRootNode(astNodes))) {\n            // if the view is an embedded view, then we need to add an additional root node in some cases\n            this.nodes.push(function () {\n                return ({\n                    sourceSpan: null,\n                    nodeFlags: 1 /* TypeElement */,\n                    nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                        literal(0 /* None */), NULL_EXPR, NULL_EXPR, literal(0)\n                    ])\n                });\n            });\n        }\n    };\n    /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    function (targetStatements) {\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(targetStatements); });\n        var _a = this._createNodeExpressions(), updateRendererStmts = _a.updateRendererStmts, updateDirectivesStmts = _a.updateDirectivesStmts, nodeDefExprs = _a.nodeDefExprs;\n        var /** @type {?} */ updateRendererFn = this._createUpdateFn(updateRendererStmts);\n        var /** @type {?} */ updateDirectivesFn = this._createUpdateFn(updateDirectivesStmts);\n        var /** @type {?} */ viewFlags = 0;\n        if (!this.parent && this.component.changeDetection === ChangeDetectionStrategy.OnPush) {\n            viewFlags |= 2 /* OnPush */;\n        }\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(this.viewName, [new FnParam(/** @type {?} */ ((LOG_VAR$1.name)))], [new ReturnStatement(importExpr(Identifiers.viewDef).callFn([\n                literal(viewFlags),\n                literalArr(nodeDefExprs),\n                updateDirectivesFn,\n                updateRendererFn,\n            ]))], importType(Identifiers.ViewDefinition), this.embeddedViewIndex === 0 ? [StmtModifier.Exported] : []);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    ViewBuilder.prototype._createUpdateFn = /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    function (updateStmts) {\n        var /** @type {?} */ updateFn;\n        if (updateStmts.length > 0) {\n            var /** @type {?} */ preStmts = [];\n            if (!this.component.isHost && findReadVarNames(updateStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            updateFn = fn([\n                new FnParam(/** @type {?} */ ((CHECK_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE)\n            ], preStmts.concat(updateStmts), INFERRED_TYPE);\n        }\n        else {\n            updateFn = NULL_EXPR;\n        }\n        return updateFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // ngContentDef(ngContentIndex: number, index: number): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 8 /* TypeNgContent */,\n                nodeDef: importExpr(Identifiers.ngContentDef).callFn([\n                    literal(ast.ngContentIndex), literal(ast.index)\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // Static text nodes have no check function\n        var /** @type {?} */ checkIndex = -1;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(checkIndex),\n                    literal(ast.ngContentIndex),\n                    literalArr([literal(ast.value)]),\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var /** @type {?} */ astWithSource = /** @type {?} */ (ast.value);\n        var /** @type {?} */ inter = /** @type {?} */ (astWithSource.ast);\n        var /** @type {?} */ updateRendererExpressions = inter.expressions.map(function (expr, bindingIndex) {\n            return _this._preprocessUpdateExpression({ nodeIndex: nodeIndex, bindingIndex: bindingIndex, sourceSpan: ast.sourceSpan, context: COMP_VAR, value: expr });\n        });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(checkIndex),\n                    literal(ast.ngContentIndex),\n                    literalArr(inter.strings.map(function (s) { return literal(s); })),\n                ]),\n                updateRenderer: updateRendererExpressions\n            });\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, queryMatchesExpr = _a.queryMatchesExpr, hostEvents = _a.hostEvents;\n        var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n        this.children.push(childVisitor);\n        childVisitor.visitAll(ast.variables, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        // anchorDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n        //   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:\n        //   ViewDefinitionFactory): NodeDef;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    variable(childVisitor.viewName),\n                ])\n            });\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        // Using a null element name creates an anchor.\n        var /** @type {?} */ elName = isNgContainer(ast.name) ? null : ast.name;\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, usedEvents = _a.usedEvents, queryMatchesExpr = _a.queryMatchesExpr, dirHostBindings = _a.hostBindings, hostEvents = _a.hostEvents;\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        if (elName) {\n            var /** @type {?} */ hostBindings = ast.inputs\n                .map(function (inputAst) {\n                return ({\n                    context: /** @type {?} */ (COMP_VAR),\n                    inputAst: inputAst,\n                    dirAst: /** @type {?} */ (null),\n                });\n            })\n                .concat(dirHostBindings);\n            if (hostBindings.length) {\n                updateRendererExpressions =\n                    hostBindings.map(function (hostBinding, bindingIndex) {\n                        return _this._preprocessUpdateExpression({\n                            context: hostBinding.context,\n                            nodeIndex: nodeIndex,\n                            bindingIndex: bindingIndex,\n                            sourceSpan: hostBinding.inputAst.sourceSpan,\n                            value: hostBinding.inputAst.value\n                        });\n                    });\n                inputDefs = hostBindings.map(function (hostBinding) { return elementBindingDef(hostBinding.inputAst, hostBinding.dirAst); });\n            }\n            outputDefs = usedEvents.map(function (_a) {\n                var target = _a[0], eventName = _a[1];\n                return literalArr([literal(target), literal(eventName)]);\n            });\n        }\n        templateVisitAll(this, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var /** @type {?} */ compAst = ast.directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        var /** @type {?} */ compRendererType = /** @type {?} */ (NULL_EXPR);\n        var /** @type {?} */ compView = /** @type {?} */ (NULL_EXPR);\n        if (compAst) {\n            compView = this.outputCtx.importExpr(compAst.directive.componentViewType);\n            compRendererType = this.outputCtx.importExpr(compAst.directive.rendererType);\n        }\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.elementDef).callFn([\n                    literal(checkIndex),\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    literal(elName),\n                    elName ? fixedAttrsDef(ast) : NULL_EXPR,\n                    inputDefs.length ? literalArr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? literalArr(outputDefs) : NULL_EXPR,\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    compView,\n                    compRendererType,\n                ]),\n                updateRenderer: updateRendererExpressions\n            });\n        };\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitElementOrTemplate = /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    function (nodeIndex, ast) {\n        var _this = this;\n        var /** @type {?} */ flags = 0;\n        if (ast.hasViewContainer) {\n            flags |= 16777216 /* EmbeddedViews */;\n        }\n        var /** @type {?} */ usedEvents = new Map();\n        ast.outputs.forEach(function (event) {\n            var _a = elementEventNameAndTarget(event, null), name = _a.name, target = _a.target;\n            usedEvents.set(elementEventFullName(target, name), [target, name]);\n        });\n        ast.directives.forEach(function (dirAst) {\n            dirAst.hostEvents.forEach(function (event) {\n                var _a = elementEventNameAndTarget(event, dirAst), name = _a.name, target = _a.target;\n                usedEvents.set(elementEventFullName(target, name), [target, name]);\n            });\n        });\n        var /** @type {?} */ hostBindings = [];\n        var /** @type {?} */ hostEvents = [];\n        this._visitComponentFactoryResolverProvider(ast.directives);\n        ast.providers.forEach(function (providerAst, providerIndex) {\n            var /** @type {?} */ dirAst = /** @type {?} */ ((undefined));\n            var /** @type {?} */ dirIndex = /** @type {?} */ ((undefined));\n            ast.directives.forEach(function (localDirAst, i) {\n                if (localDirAst.directive.type.reference === tokenReference(providerAst.token)) {\n                    dirAst = localDirAst;\n                    dirIndex = i;\n                }\n            });\n            if (dirAst) {\n                var _a = _this._visitDirective(providerAst, dirAst, dirIndex, nodeIndex, ast.references, ast.queryMatches, usedEvents, /** @type {?} */ ((_this.staticQueryIds.get(/** @type {?} */ (ast))))), dirHostBindings = _a.hostBindings, dirHostEvents = _a.hostEvents;\n                hostBindings.push.apply(hostBindings, dirHostBindings);\n                hostEvents.push.apply(hostEvents, dirHostEvents);\n            }\n            else {\n                _this._visitProvider(providerAst, ast.queryMatches);\n            }\n        });\n        var /** @type {?} */ queryMatchExprs = [];\n        ast.queryMatches.forEach(function (match) {\n            var /** @type {?} */ valueType = /** @type {?} */ ((undefined));\n            if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ElementRef)) {\n                valueType = 0 /* ElementRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                valueType = 3 /* ViewContainerRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(valueType)]));\n            }\n        });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ valueType = /** @type {?} */ ((undefined));\n            if (!ref.value) {\n                valueType = 1 /* RenderElement */;\n            }\n            else if (tokenReference(ref.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(valueType)]));\n            }\n        });\n        ast.outputs.forEach(function (outputAst) {\n            hostEvents.push({ context: COMP_VAR, eventAst: outputAst, dirAst: /** @type {?} */ ((null)) });\n        });\n        return {\n            flags: flags,\n            usedEvents: Array.from(usedEvents.values()),\n            queryMatchesExpr: queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n            hostBindings: hostBindings,\n            hostEvents: hostEvents\n        };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitDirective = /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    function (providerAst, dirAst, directiveIndex, elementNodeIndex, refs, queryMatches, usedEvents, queryIds) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        dirAst.directive.queries.forEach(function (query, queryIndex) {\n            var /** @type {?} */ queryId = dirAst.contentQueryStartId + queryIndex;\n            var /** @type {?} */ flags = 67108864 /* TypeContentQuery */ | calcStaticDynamicQueryFlags(queryIds, queryId, query.first);\n            var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n            _this.nodes.push(function () {\n                return ({\n                    sourceSpan: dirAst.sourceSpan,\n                    nodeFlags: flags,\n                    nodeDef: importExpr(Identifiers.queryDef).callFn([\n                        literal(flags), literal(queryId),\n                        new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                    ]),\n                });\n            });\n        });\n        // Note: the operation below might also create new nodeDefs,\n        // but we don't want them to be a child of a directive,\n        // as they might be a provider/pipe on their own.\n        // I.e. we only allow queries as children of directives nodes.\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var _a = this._visitProviderOrDirective(providerAst, queryMatches), flags = _a.flags, queryMatchExprs = _a.queryMatchExprs, providerExpr = _a.providerExpr, depsExpr = _a.depsExpr;\n        refs.forEach(function (ref) {\n            if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(4 /* Provider */)]));\n            }\n        });\n        if (dirAst.directive.isComponent) {\n            flags |= 32768 /* Component */;\n        }\n        var /** @type {?} */ inputDefs = dirAst.inputs.map(function (inputAst, inputIndex) {\n            var /** @type {?} */ mapValue = literalArr([literal(inputIndex), literal(inputAst.directiveName)]);\n            // Note: it's important to not quote the key so that we can capture renames by minifiers!\n            return new LiteralMapEntry(inputAst.directiveName, mapValue, false);\n        });\n        var /** @type {?} */ outputDefs = [];\n        var /** @type {?} */ dirMeta = dirAst.directive;\n        Object.keys(dirMeta.outputs).forEach(function (propName) {\n            var /** @type {?} */ eventName = dirMeta.outputs[propName];\n            if (usedEvents.has(eventName)) {\n                // Note: it's important to not quote the key so that we can capture renames by minifiers!\n                outputDefs.push(new LiteralMapEntry(propName, literal(eventName), false));\n            }\n        });\n        var /** @type {?} */ updateDirectiveExpressions = [];\n        if (dirAst.inputs.length || (flags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0) {\n            updateDirectiveExpressions =\n                dirAst.inputs.map(function (input, bindingIndex) {\n                    return _this._preprocessUpdateExpression({\n                        nodeIndex: nodeIndex,\n                        bindingIndex: bindingIndex,\n                        sourceSpan: input.sourceSpan,\n                        context: COMP_VAR,\n                        value: input.value\n                    });\n                });\n        }\n        var /** @type {?} */ dirContextExpr = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n        var /** @type {?} */ hostBindings = dirAst.hostProperties.map(function (inputAst) {\n            return ({\n                context: dirContextExpr,\n                dirAst: dirAst,\n                inputAst: inputAst,\n            });\n        });\n        var /** @type {?} */ hostEvents = dirAst.hostEvents.map(function (hostEventAst) {\n            return ({\n                context: dirContextExpr,\n                eventAst: hostEventAst, dirAst: dirAst,\n            });\n        });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: dirAst.sourceSpan,\n                nodeFlags: 16384 /* TypeDirective */ | flags,\n                nodeDef: importExpr(Identifiers.directiveDef).callFn([\n                    literal(checkIndex),\n                    literal(flags),\n                    queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n                    literal(childCount),\n                    providerExpr,\n                    depsExpr,\n                    inputDefs.length ? new LiteralMapExpr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? new LiteralMapExpr(outputDefs) : NULL_EXPR,\n                ]),\n                updateDirectives: updateDirectiveExpressions,\n                directive: dirAst.directive.type,\n            });\n        };\n        return { hostBindings: hostBindings, hostEvents: hostEvents };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProvider = /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    function (providerAst, queryMatches) {\n        this._addProviderNode(this._visitProviderOrDirective(providerAst, queryMatches));\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitComponentFactoryResolverProvider = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        var /** @type {?} */ componentDirMeta = directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        if (componentDirMeta && componentDirMeta.directive.entryComponents.length) {\n            var _a = componentFactoryResolverProviderDef(this.reflector, this.outputCtx, 8192 /* PrivateProvider */, componentDirMeta.directive.entryComponents), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            this._addProviderNode({\n                providerExpr: providerExpr,\n                depsExpr: depsExpr,\n                flags: flags,\n                tokenExpr: tokenExpr,\n                queryMatchExprs: [],\n                sourceSpan: componentDirMeta.sourceSpan\n            });\n        }\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ViewBuilder.prototype._addProviderNode = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // providerDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,\n        //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: data.sourceSpan,\n                nodeFlags: data.flags,\n                nodeDef: importExpr(Identifiers.providerDef).callFn([\n                    literal(data.flags),\n                    data.queryMatchExprs.length ? literalArr(data.queryMatchExprs) : NULL_EXPR,\n                    data.tokenExpr, data.providerExpr, data.depsExpr\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProviderOrDirective = /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    function (providerAst, queryMatches) {\n        var /** @type {?} */ flags = 0;\n        var /** @type {?} */ queryMatchExprs = [];\n        queryMatches.forEach(function (match) {\n            if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(4 /* Provider */)]));\n            }\n        });\n        var _a = providerDef(this.outputCtx, providerAst), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, providerFlags = _a.flags, tokenExpr = _a.tokenExpr;\n        return {\n            flags: flags | providerFlags,\n            queryMatchExprs: queryMatchExprs,\n            providerExpr: providerExpr,\n            depsExpr: depsExpr,\n            tokenExpr: tokenExpr,\n            sourceSpan: providerAst.sourceSpan\n        };\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        var /** @type {?} */ currViewExpr = VIEW_VAR;\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent,\n            currViewExpr = currViewExpr.prop('parent').cast(DYNAMIC_TYPE)) {\n            // check references\n            var /** @type {?} */ refNodeIndex = currBuilder.refNodeIndices[name];\n            if (refNodeIndex != null) {\n                return importExpr(Identifiers.nodeValue).callFn([currViewExpr, literal(refNodeIndex)]);\n            }\n            // check variables\n            var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n            if (varAst) {\n                var /** @type {?} */ varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n                return currViewExpr.prop('context').prop(varValue);\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype._createLiteralArrayConverter = /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    function (sourceSpan, argCount) {\n        if (argCount === 0) {\n            var /** @type {?} */ valueExpr_1 = importExpr(Identifiers.EMPTY_ARRAY);\n            return function () { return valueExpr_1; };\n        }\n        var /** @type {?} */ checkIndex = this.nodes.length;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 32 /* TypePureArray */,\n                nodeDef: importExpr(Identifiers.pureArrayDef).callFn([\n                    literal(checkIndex),\n                    literal(argCount),\n                ])\n            });\n        });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    ViewBuilder.prototype._createLiteralMapConverter = /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    function (sourceSpan, keys) {\n        if (keys.length === 0) {\n            var /** @type {?} */ valueExpr_2 = importExpr(Identifiers.EMPTY_MAP);\n            return function () { return valueExpr_2; };\n        }\n        var /** @type {?} */ map = literalMap(keys.map(function (e, i) { return (__assign({}, e, { value: literal(i) })); }));\n        var /** @type {?} */ checkIndex = this.nodes.length;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 64 /* TypePureObject */,\n                nodeDef: importExpr(Identifiers.pureObjectDef).callFn([\n                    literal(checkIndex),\n                    map,\n                ])\n            });\n        });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipeConverter = /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    function (expression, name, argCount) {\n        var /** @type {?} */ pipe = /** @type {?} */ ((this.usedPipes.find(function (pipeSummary) { return pipeSummary.name === name; })));\n        if (pipe.pure) {\n            var /** @type {?} */ checkIndex_1 = this.nodes.length;\n            this.nodes.push(function () {\n                return ({\n                    sourceSpan: expression.sourceSpan,\n                    nodeFlags: 128 /* TypePurePipe */,\n                    nodeDef: importExpr(Identifiers.purePipeDef).callFn([\n                        literal(checkIndex_1),\n                        literal(argCount),\n                    ])\n                });\n            });\n            // find underlying pipe in the component view\n            var /** @type {?} */ compViewExpr = VIEW_VAR;\n            var /** @type {?} */ compBuilder = this;\n            while (compBuilder.parent) {\n                compBuilder = compBuilder.parent;\n                compViewExpr = compViewExpr.prop('parent').cast(DYNAMIC_TYPE);\n            }\n            var /** @type {?} */ pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n            var /** @type {?} */ pipeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([compViewExpr, literal(pipeNodeIndex)]);\n            return function (args) {\n                return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, callCheckStmt(checkIndex_1, [pipeValueExpr_1].concat(args)));\n            };\n        }\n        else {\n            var /** @type {?} */ nodeIndex = this._createPipe(expression.sourceSpan, pipe);\n            var /** @type {?} */ nodeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n            return function (args) {\n                return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, nodeValueExpr_1.callMethod('transform', args));\n            };\n        }\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipe = /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    function (sourceSpan, pipe) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        var /** @type {?} */ flags = 0;\n        pipe.type.lifecycleHooks.forEach(function (lifecycleHook) {\n            // for pipes, we only support ngOnDestroy\n            if (lifecycleHook === LifecycleHooks.OnDestroy) {\n                flags |= lifecycleHookToNodeFlag(lifecycleHook);\n            }\n        });\n        var /** @type {?} */ depExprs = pipe.type.diDeps.map(function (diDep) { return depDef(_this.outputCtx, diDep); });\n        // function pipeDef(\n        //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 16 /* TypePipe */,\n                nodeDef: importExpr(Identifiers.pipeDef).callFn([\n                    literal(flags), _this.outputCtx.importExpr(pipe.type.reference), literalArr(depExprs)\n                ])\n            });\n        });\n        return nodeIndex;\n    };\n    /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype._preprocessUpdateExpression = /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        var _this = this;\n        return {\n            nodeIndex: expression.nodeIndex,\n            bindingIndex: expression.bindingIndex,\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) {\n                    return _this._createLiteralArrayConverter(expression.sourceSpan, argCount);\n                },\n                createLiteralMapConverter: function (keys) {\n                    return _this._createLiteralMapConverter(expression.sourceSpan, keys);\n                },\n                createPipeConverter: function (name, argCount) {\n                    return _this._createPipeConverter(expression, name, argCount);\n                }\n            }, expression.value)\n        };\n    };\n    /**\n     * @return {?}\n     */\n    ViewBuilder.prototype._createNodeExpressions = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ updateBindingCount = 0;\n        var /** @type {?} */ updateRendererStmts = [];\n        var /** @type {?} */ updateDirectivesStmts = [];\n        var /** @type {?} */ nodeDefExprs = this.nodes.map(function (factory, nodeIndex) {\n            var _a = factory(), nodeDef = _a.nodeDef, nodeFlags = _a.nodeFlags, updateDirectives = _a.updateDirectives, updateRenderer = _a.updateRenderer, sourceSpan = _a.sourceSpan;\n            if (updateRenderer) {\n                updateRendererStmts.push.apply(updateRendererStmts, createUpdateStatements(nodeIndex, sourceSpan, updateRenderer, false));\n            }\n            if (updateDirectives) {\n                updateDirectivesStmts.push.apply(updateDirectivesStmts, createUpdateStatements(nodeIndex, sourceSpan, updateDirectives, (nodeFlags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0));\n            }\n            // We use a comma expression to call the log function before\n            // the nodeDef function, but still use the result of the nodeDef function\n            // as the value.\n            // Note: We only add the logger to elements / text nodes,\n            // so we don't generate too much code.\n            var /** @type {?} */ logWithNodeDef = nodeFlags & 3 /* CatRenderNode */ ?\n                new CommaExpr([LOG_VAR$1.callFn([]).callFn([]), nodeDef]) :\n                nodeDef;\n            return applySourceSpanToExpressionIfNeeded(logWithNodeDef, sourceSpan);\n        });\n        return { updateRendererStmts: updateRendererStmts, updateDirectivesStmts: updateDirectivesStmts, nodeDefExprs: nodeDefExprs };\n        /**\n         * @param {?} nodeIndex\n         * @param {?} sourceSpan\n         * @param {?} expressions\n         * @param {?} allowEmptyExprs\n         * @return {?}\n         */\n        function createUpdateStatements(nodeIndex, sourceSpan, expressions, allowEmptyExprs) {\n            var /** @type {?} */ updateStmts = [];\n            var /** @type {?} */ exprs = expressions.map(function (_a) {\n                var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n                var /** @type {?} */ bindingId = \"\" + updateBindingCount++;\n                var /** @type {?} */ nameResolver = context === COMP_VAR ? self : null;\n                var _b = convertPropertyBinding(nameResolver, context, value, bindingId), stmts = _b.stmts, currValExpr = _b.currValExpr;\n                updateStmts.push.apply(updateStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n                return applySourceSpanToExpressionIfNeeded(currValExpr, sourceSpan);\n            });\n            if (expressions.length || allowEmptyExprs) {\n                updateStmts.push(applySourceSpanToStatementIfNeeded(callCheckStmt(nodeIndex, exprs).toStmt(), sourceSpan));\n            }\n            return updateStmts;\n        }\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    ViewBuilder.prototype._createElementHandleEventFn = /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    function (nodeIndex, handlers) {\n        var _this = this;\n        var /** @type {?} */ handleEventStmts = [];\n        var /** @type {?} */ handleEventBindingCount = 0;\n        handlers.forEach(function (_a) {\n            var context = _a.context, eventAst = _a.eventAst, dirAst = _a.dirAst;\n            var /** @type {?} */ bindingId = \"\" + handleEventBindingCount++;\n            var /** @type {?} */ nameResolver = context === COMP_VAR ? _this : null;\n            var _b = convertActionBinding(nameResolver, context, eventAst.handler, bindingId), stmts = _b.stmts, allowDefault = _b.allowDefault;\n            var /** @type {?} */ trueStmts = stmts;\n            if (allowDefault) {\n                trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n            }\n            var _c = elementEventNameAndTarget(eventAst, dirAst), eventTarget = _c.target, eventName = _c.name;\n            var /** @type {?} */ fullEventName = elementEventFullName(eventTarget, eventName);\n            handleEventStmts.push(applySourceSpanToStatementIfNeeded(new IfStmt(literal(fullEventName).identical(EVENT_NAME_VAR), trueStmts), eventAst.sourceSpan));\n        });\n        var /** @type {?} */ handleEventFn;\n        if (handleEventStmts.length > 0) {\n            var /** @type {?} */ preStmts = [ALLOW_DEFAULT_VAR.set(literal(true)).toDeclStmt(BOOL_TYPE)];\n            if (!this.component.isHost && findReadVarNames(handleEventStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            handleEventFn = fn([\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EVENT_NAME_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EventHandlerVars.event.name)), INFERRED_TYPE)\n            ], preStmts.concat(handleEventStmts, [new ReturnStatement(ALLOW_DEFAULT_VAR)]), INFERRED_TYPE);\n        }\n        else {\n            handleEventFn = NULL_EXPR;\n        }\n        return handleEventFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return ViewBuilder;\n}());\n/**\n * @param {?} astNodes\n * @return {?}\n */\nfunction needsAdditionalRootNode(astNodes) {\n    var /** @type {?} */ lastAstNode = astNodes[astNodes.length - 1];\n    if (lastAstNode instanceof EmbeddedTemplateAst) {\n        return lastAstNode.hasViewContainer;\n    }\n    if (lastAstNode instanceof ElementAst) {\n        if (isNgContainer(lastAstNode.name) && lastAstNode.children.length) {\n            return needsAdditionalRootNode(lastAstNode.children);\n        }\n        return lastAstNode.hasViewContainer;\n    }\n    return lastAstNode instanceof NgContentAst;\n}\n/**\n * @param {?} inputAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementBindingDef(inputAst, dirAst) {\n    switch (inputAst.type) {\n        case PropertyBindingType.Attribute:\n            return literalArr([\n                literal(1 /* TypeElementAttribute */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Property:\n            return literalArr([\n                literal(8 /* TypeProperty */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Animation:\n            var /** @type {?} */ bindingType = 8 /* TypeProperty */ |\n                (dirAst && dirAst.directive.isComponent ? 32 /* SyntheticHostProperty */ :\n                    16 /* SyntheticProperty */);\n            return literalArr([\n                literal(bindingType), literal('@' + inputAst.name), literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Class:\n            return literalArr([literal(2 /* TypeElementClass */), literal(inputAst.name), NULL_EXPR]);\n        case PropertyBindingType.Style:\n            return literalArr([\n                literal(4 /* TypeElementStyle */), literal(inputAst.name), literal(inputAst.unit)\n            ]);\n    }\n}\n/**\n * @param {?} elementAst\n * @return {?}\n */\nfunction fixedAttrsDef(elementAst) {\n    var /** @type {?} */ mapResult = Object.create(null);\n    elementAst.attrs.forEach(function (attrAst) { mapResult[attrAst.name] = attrAst.value; });\n    elementAst.directives.forEach(function (dirAst) {\n        Object.keys(dirAst.directive.hostAttributes).forEach(function (name) {\n            var /** @type {?} */ value = dirAst.directive.hostAttributes[name];\n            var /** @type {?} */ prevValue = mapResult[name];\n            mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n        });\n    });\n    // Note: We need to sort to get a defined output order\n    // for tests and for caching generated artifacts...\n    return literalArr(Object.keys(mapResult).sort().map(function (attrName) { return literalArr([literal(attrName), literal(mapResult[attrName])]); }));\n}\n/**\n * @param {?} attrName\n * @param {?} attrValue1\n * @param {?} attrValue2\n * @return {?}\n */\nfunction mergeAttributeValue(attrName, attrValue1, attrValue2) {\n    if (attrName == CLASS_ATTR$1 || attrName == STYLE_ATTR) {\n        return attrValue1 + \" \" + attrValue2;\n    }\n    else {\n        return attrValue2;\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} exprs\n * @return {?}\n */\nfunction callCheckStmt(nodeIndex, exprs) {\n    if (exprs.length > 10) {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(1 /* Dynamic */), literalArr(exprs)]);\n    }\n    else {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(0 /* Inline */)].concat(exprs));\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} bindingIdx\n * @param {?} expr\n * @return {?}\n */\nfunction callUnwrapValue(nodeIndex, bindingIdx, expr) {\n    return importExpr(Identifiers.unwrapValue).callFn([\n        VIEW_VAR, literal(nodeIndex), literal(bindingIdx), expr\n    ]);\n}\n/**\n * @param {?} nodes\n * @param {?=} result\n * @return {?}\n */\nfunction findStaticQueryIds(nodes, result) {\n    if (result === void 0) { result = new Map(); }\n    nodes.forEach(function (node) {\n        var /** @type {?} */ staticQueryIds = new Set();\n        var /** @type {?} */ dynamicQueryIds = new Set();\n        var /** @type {?} */ queryMatches = /** @type {?} */ ((undefined));\n        if (node instanceof ElementAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        else if (node instanceof EmbeddedTemplateAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        if (queryMatches) {\n            queryMatches.forEach(function (match) { return staticQueryIds.add(match.queryId); });\n        }\n        dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n        result.set(node, { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds });\n    });\n    return result;\n}\n/**\n * @param {?} nodeStaticQueryIds\n * @return {?}\n */\nfunction staticViewQueryIds(nodeStaticQueryIds) {\n    var /** @type {?} */ staticQueryIds = new Set();\n    var /** @type {?} */ dynamicQueryIds = new Set();\n    Array.from(nodeStaticQueryIds.values()).forEach(function (entry) {\n        entry.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n        entry.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n    });\n    dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n    return { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds };\n}\n/**\n * @param {?} eventAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementEventNameAndTarget(eventAst, dirAst) {\n    if (eventAst.isAnimation) {\n        return {\n            name: \"@\" + eventAst.name + \".\" + eventAst.phase,\n            target: dirAst && dirAst.directive.isComponent ? 'component' : null\n        };\n    }\n    else {\n        return eventAst;\n    }\n}\n/**\n * @param {?} queryIds\n * @param {?} queryId\n * @param {?} isFirst\n * @return {?}\n */\nfunction calcStaticDynamicQueryFlags(queryIds, queryId, isFirst) {\n    var /** @type {?} */ flags = 0;\n    // Note: We only make queries static that query for a single item.\n    // This is because of backwards compatibility with the old view compiler...\n    if (isFirst && (queryIds.staticQueryIds.has(queryId) || !queryIds.dynamicQueryIds.has(queryId))) {\n        flags |= 268435456 /* StaticQuery */;\n    }\n    else {\n        flags |= 536870912 /* DynamicQuery */;\n    }\n    return flags;\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A container for message extracted from the templates.\n */\nvar MessageBundle = (function () {\n    function MessageBundle(_htmlParser, _implicitTags, _implicitAttrs, _locale) {\n        if (_locale === void 0) { _locale = null; }\n        this._htmlParser = _htmlParser;\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n        this._locale = _locale;\n        this._messages = [];\n    }\n    /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    MessageBundle.prototype.updateFromTemplate = /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (html, url, interpolationConfig) {\n        var /** @type {?} */ htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n        if (htmlParserResult.errors.length) {\n            return htmlParserResult.errors;\n        }\n        var /** @type {?} */ i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n        if (i18nParserResult.errors.length) {\n            return i18nParserResult.errors;\n        }\n        (_a = this._messages).push.apply(_a, i18nParserResult.messages);\n        return [];\n        var _a;\n    };\n    // Return the message in the internal format\n    // The public (serialized) format might be different, see the `write` method.\n    /**\n     * @return {?}\n     */\n    MessageBundle.prototype.getMessages = /**\n     * @return {?}\n     */\n    function () { return this._messages; };\n    /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    MessageBundle.prototype.write = /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    function (serializer, filterSources) {\n        var /** @type {?} */ messages = {};\n        var /** @type {?} */ mapperVisitor = new MapPlaceholderNames();\n        // Deduplicate messages based on their ID\n        this._messages.forEach(function (message) {\n            var /** @type {?} */ id = serializer.digest(message);\n            if (!messages.hasOwnProperty(id)) {\n                messages[id] = message;\n            }\n            else {\n                (_a = messages[id].sources).push.apply(_a, message.sources);\n            }\n            var _a;\n        });\n        // Transform placeholder names using the serializer mapping\n        var /** @type {?} */ msgList = Object.keys(messages).map(function (id) {\n            var /** @type {?} */ mapper = serializer.createNameMapper(messages[id]);\n            var /** @type {?} */ src = messages[id];\n            var /** @type {?} */ nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n            var /** @type {?} */ transformedMessage = new Message(nodes, {}, {}, src.meaning, src.description, id);\n            transformedMessage.sources = src.sources;\n            if (filterSources) {\n                transformedMessage.sources.forEach(function (source) { return source.filePath = filterSources(source.filePath); });\n            }\n            return transformedMessage;\n        });\n        return serializer.write(msgList, this._locale);\n    };\n    return MessageBundle;\n}());\nvar MapPlaceholderNames = (function (_super) {\n    __extends(MapPlaceholderNames, _super);\n    function MapPlaceholderNames() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.convert = /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (nodes, mapper) {\n        var _this = this;\n        return mapper ? nodes.map(function (n) { return n.visit(_this, mapper); }) : nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        var _this = this;\n        var /** @type {?} */ startName = /** @type {?} */ ((mapper.toPublicName(ph.startName)));\n        var /** @type {?} */ closeName = ph.closeName ? /** @type {?} */ ((mapper.toPublicName(ph.closeName))) : ph.closeName;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, mapper); });\n        return new TagPlaceholder(ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        return new Placeholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        return new IcuPlaceholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    return MapPlaceholderNames;\n}(CloneVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar GeneratedFile = (function () {\n    function GeneratedFile(srcFileUrl, genFileUrl, sourceOrStmts) {\n        this.srcFileUrl = srcFileUrl;\n        this.genFileUrl = genFileUrl;\n        if (typeof sourceOrStmts === 'string') {\n            this.source = sourceOrStmts;\n            this.stmts = null;\n        }\n        else {\n            this.source = null;\n            this.stmts = sourceOrStmts;\n        }\n    }\n    /**\n     * @param {?} other\n     * @return {?}\n     */\n    GeneratedFile.prototype.isEquivalent = /**\n     * @param {?} other\n     * @return {?}\n     */\n    function (other) {\n        if (this.genFileUrl !== other.genFileUrl) {\n            return false;\n        }\n        if (this.source) {\n            return this.source === other.source;\n        }\n        if (other.stmts == null) {\n            return false;\n        }\n        // Note: the constructor guarantees that if this.source is not filled,\n        // then this.stmts is.\n        return areAllEquivalent(/** @type {?} */ ((this.stmts)), /** @type {?} */ ((other.stmts)));\n    };\n    return GeneratedFile;\n}());\n/**\n * @param {?} file\n * @param {?=} preamble\n * @return {?}\n */\nfunction toTypeScript(file, preamble) {\n    if (preamble === void 0) { preamble = ''; }\n    if (!file.stmts) {\n        throw new Error(\"Illegal state: No stmts present on GeneratedFile \" + file.genFileUrl);\n    }\n    return new TypeScriptEmitter().emitStatements(sourceUrl(file.srcFileUrl), file.genFileUrl, file.stmts, preamble);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} srcFileName\n * @param {?} forJitCtx\n * @param {?} summaryResolver\n * @param {?} symbolResolver\n * @param {?} symbols\n * @param {?} types\n * @return {?}\n */\nfunction serializeSummaries(srcFileName, forJitCtx, summaryResolver, symbolResolver, symbols, types) {\n    var /** @type {?} */ toJsonSerializer = new ToJsonSerializer(symbolResolver, summaryResolver, srcFileName);\n    // for symbols, we use everything except for the class metadata itself\n    // (we keep the statics though), as the class metadata is contained in the\n    // CompileTypeSummary.\n    symbols.forEach(function (resolvedSymbol) {\n        return toJsonSerializer.addSummary({ symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata });\n    });\n    // Add type summaries.\n    types.forEach(function (_a) {\n        var summary = _a.summary, metadata = _a.metadata;\n        toJsonSerializer.addSummary({ symbol: summary.type.reference, metadata: undefined, type: summary });\n    });\n    var _a = toJsonSerializer.serialize(), json = _a.json, exportAs = _a.exportAs;\n    if (forJitCtx) {\n        var /** @type {?} */ forJitSerializer_1 = new ForJitSerializer(forJitCtx, symbolResolver);\n        types.forEach(function (_a) {\n            var summary = _a.summary, metadata = _a.metadata;\n            forJitSerializer_1.addSourceType(summary, metadata);\n        });\n        toJsonSerializer.unprocessedSymbolSummariesBySymbol.forEach(function (summary) {\n            if (summaryResolver.isLibraryFile(summary.symbol.filePath) && summary.type) {\n                forJitSerializer_1.addLibType(summary.type);\n            }\n        });\n        forJitSerializer_1.serialize(exportAs);\n    }\n    return { json: json, exportAs: exportAs };\n}\n/**\n * @param {?} symbolCache\n * @param {?} summaryResolver\n * @param {?} libraryFileName\n * @param {?} json\n * @return {?}\n */\nfunction deserializeSummaries(symbolCache, summaryResolver, libraryFileName, json) {\n    var /** @type {?} */ deserializer = new FromJsonDeserializer(symbolCache, summaryResolver);\n    return deserializer.deserialize(libraryFileName, json);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @return {?}\n */\nfunction createForJitStub(outputCtx, reference) {\n    return createSummaryForJitFunction(outputCtx, reference, NULL_EXPR);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @param {?} value\n * @return {?}\n */\nfunction createSummaryForJitFunction(outputCtx, reference, value) {\n    var /** @type {?} */ fnName = summaryForJitName(reference.name);\n    outputCtx.statements.push(fn([], [new ReturnStatement(value)], new ArrayType(DYNAMIC_TYPE)).toDeclStmt(fnName, [\n        StmtModifier.Final, StmtModifier.Exported\n    ]));\n}\nvar ToJsonSerializer = (function (_super) {\n    __extends(ToJsonSerializer, _super);\n    function ToJsonSerializer(symbolResolver, summaryResolver, srcFileName) {\n        var _this = _super.call(this) || this;\n        _this.symbolResolver = symbolResolver;\n        _this.summaryResolver = summaryResolver;\n        _this.srcFileName = srcFileName;\n        _this.symbols = [];\n        _this.indexBySymbol = new Map();\n        _this.processedSummaryBySymbol = new Map();\n        _this.processedSummaries = [];\n        _this.unprocessedSymbolSummariesBySymbol = new Map();\n        _this.moduleName = symbolResolver.getKnownModuleName(srcFileName);\n        return _this;\n    }\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) {\n        var _this = this;\n        var /** @type {?} */ unprocessedSummary = this.unprocessedSymbolSummariesBySymbol.get(summary.symbol);\n        var /** @type {?} */ processedSummary = this.processedSummaryBySymbol.get(summary.symbol);\n        if (!unprocessedSummary) {\n            unprocessedSummary = { symbol: summary.symbol, metadata: undefined };\n            this.unprocessedSymbolSummariesBySymbol.set(summary.symbol, unprocessedSummary);\n            processedSummary = { symbol: this.processValue(summary.symbol, 0 /* None */) };\n            this.processedSummaries.push(processedSummary);\n            this.processedSummaryBySymbol.set(summary.symbol, processedSummary);\n        }\n        if (!unprocessedSummary.metadata && summary.metadata) {\n            var /** @type {?} */ metadata_1 = summary.metadata || {};\n            if (metadata_1.__symbolic === 'class') {\n                // For classes, we keep everything except their class decorators.\n                // We need to keep e.g. the ctor args, method names, method decorators\n                // so that the class can be extended in another compilation unit.\n                // We don't keep the class decorators as\n                // 1) they refer to data\n                //   that should not cause a rebuild of downstream compilation units\n                //   (e.g. inline templates of @Component, or @NgModule.declarations)\n                // 2) their data is already captured in TypeSummaries, e.g. DirectiveSummary.\n                var /** @type {?} */ clone_1 = {};\n                Object.keys(metadata_1).forEach(function (propName) {\n                    if (propName !== 'decorators') {\n                        clone_1[propName] = metadata_1[propName];\n                    }\n                });\n                metadata_1 = clone_1;\n            }\n            unprocessedSummary.metadata = metadata_1;\n            processedSummary.metadata = this.processValue(metadata_1, 1 /* ResolveValue */);\n        }\n        if (!unprocessedSummary.type && summary.type) {\n            unprocessedSummary.type = summary.type;\n            // Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,\n            // as the type summaries already contain the transitive data that they require\n            // (in a minimal way).\n            processedSummary.type = this.processValue(summary.type, 0 /* None */);\n            // except for reexported directives / pipes, so we need to store\n            // their summaries explicitly.\n            if (summary.type.summaryKind === CompileSummaryKind.NgModule) {\n                var /** @type {?} */ ngModuleSummary = /** @type {?} */ (summary.type);\n                ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach(function (id) {\n                    var /** @type {?} */ symbol = id.reference;\n                    if (_this.summaryResolver.isLibraryFile(symbol.filePath) &&\n                        !_this.unprocessedSymbolSummariesBySymbol.has(symbol)) {\n                        var /** @type {?} */ summary_1 = _this.summaryResolver.resolveSummary(symbol);\n                        if (summary_1) {\n                            _this.addSummary(summary_1);\n                        }\n                    }\n                });\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.serialize = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ exportAs = [];\n        var /** @type {?} */ json = JSON.stringify({\n            moduleName: this.moduleName,\n            summaries: this.processedSummaries,\n            symbols: this.symbols.map(function (symbol, index) {\n                symbol.assertNoMembers();\n                var /** @type {?} */ importAs = /** @type {?} */ ((undefined));\n                if (_this.summaryResolver.isLibraryFile(symbol.filePath)) {\n                    var /** @type {?} */ summary = _this.unprocessedSymbolSummariesBySymbol.get(symbol);\n                    if (!summary || !summary.metadata || summary.metadata.__symbolic !== 'interface') {\n                        importAs = symbol.name + \"_\" + index;\n                        exportAs.push({ symbol: symbol, exportAs: importAs });\n                    }\n                }\n                return {\n                    __symbol: index,\n                    name: symbol.name,\n                    filePath: _this.summaryResolver.toSummaryFileName(symbol.filePath, _this.srcFileName),\n                    importAs: importAs\n                };\n            })\n        });\n        return { json: json, exportAs: exportAs };\n    };\n    /**\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.processValue = /**\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    function (value, flags) {\n        return visitValue(value, this, flags);\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) {\n        if (value instanceof StaticSymbol) {\n            var /** @type {?} */ baseSymbol = this.symbolResolver.getStaticSymbol(value.filePath, value.name);\n            var /** @type {?} */ index = this.visitStaticSymbol(baseSymbol, context);\n            return { __symbol: index, members: value.members };\n        }\n    };\n    /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     * @param {?} baseSymbol\n     * @param {?} flags\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitStaticSymbol = /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     * @param {?} baseSymbol\n     * @param {?} flags\n     * @return {?}\n     */\n    function (baseSymbol, flags) {\n        var /** @type {?} */ index = this.indexBySymbol.get(baseSymbol);\n        var /** @type {?} */ summary = null;\n        if (flags & 1 /* ResolveValue */ &&\n            this.summaryResolver.isLibraryFile(baseSymbol.filePath)) {\n            if (this.unprocessedSymbolSummariesBySymbol.has(baseSymbol)) {\n                // the summary for this symbol was already added\n                // -> nothing to do.\n                return /** @type {?} */ ((index));\n            }\n            summary = this.loadSummary(baseSymbol);\n            if (summary && summary.metadata instanceof StaticSymbol) {\n                // The summary is a reexport\n                index = this.visitStaticSymbol(summary.metadata, flags);\n                // reset the summary as it is just a reexport, so we don't want to store it.\n                summary = null;\n            }\n        }\n        else if (index != null) {\n            // Note: == on purpose to compare with undefined!\n            // No summary and the symbol is already added -> nothing to do.\n            return index;\n        }\n        // Note: == on purpose to compare with undefined!\n        if (index == null) {\n            index = this.symbols.length;\n            this.symbols.push(baseSymbol);\n        }\n        this.indexBySymbol.set(baseSymbol, index);\n        if (summary) {\n            this.addSummary(summary);\n        }\n        return index;\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.loadSummary = /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    function (symbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(symbol);\n        if (!summary) {\n            // some symbols might originate from a plain typescript library\n            // that just exported .d.ts and .metadata.json files, i.e. where no summary\n            // files were created.\n            var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n            if (resolvedSymbol) {\n                summary = { symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata };\n            }\n        }\n        return summary;\n    };\n    return ToJsonSerializer;\n}(ValueTransformer));\nvar ForJitSerializer = (function () {\n    function ForJitSerializer(outputCtx, symbolResolver) {\n        this.outputCtx = outputCtx;\n        this.symbolResolver = symbolResolver;\n        this.data = new Map();\n    }\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addSourceType = /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (summary, metadata) {\n        this.data.set(summary.type.reference, { summary: summary, metadata: metadata, isLibrary: false });\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addLibType = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) {\n        this.data.set(summary.type.reference, { summary: summary, metadata: null, isLibrary: true });\n    };\n    /**\n     * @param {?} exportAs\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serialize = /**\n     * @param {?} exportAs\n     * @return {?}\n     */\n    function (exportAs) {\n        var _this = this;\n        var /** @type {?} */ ngModuleSymbols = new Set();\n        Array.from(this.data.values()).forEach(function (_a) {\n            var summary = _a.summary, metadata = _a.metadata, isLibrary = _a.isLibrary;\n            if (summary.summaryKind === CompileSummaryKind.NgModule) {\n                // collect the symbols that refer to NgModule classes.\n                // Note: we can't just rely on `summary.type.summaryKind` to determine this as\n                // we don't add the summaries of all referenced symbols when we serialize type summaries.\n                // See serializeSummaries for details.\n                ngModuleSymbols.add(summary.type.reference);\n                var /** @type {?} */ modSummary = /** @type {?} */ (summary);\n                modSummary.modules.forEach(function (mod) { ngModuleSymbols.add(mod.reference); });\n            }\n            if (!isLibrary) {\n                var /** @type {?} */ fnName = summaryForJitName(summary.type.reference.name);\n                createSummaryForJitFunction(_this.outputCtx, summary.type.reference, _this.serializeSummaryWithDeps(summary, /** @type {?} */ ((metadata))));\n            }\n        });\n        exportAs.forEach(function (entry) {\n            var /** @type {?} */ symbol = entry.symbol;\n            if (ngModuleSymbols.has(symbol)) {\n                var /** @type {?} */ jitExportAsName = summaryForJitName(entry.exportAs);\n                _this.outputCtx.statements.push(variable(jitExportAsName).set(_this.serializeSummaryRef(symbol)).toDeclStmt(null, [\n                    StmtModifier.Exported\n                ]));\n            }\n        });\n    };\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryWithDeps = /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (summary, metadata) {\n        var _this = this;\n        var /** @type {?} */ expressions = [this.serializeSummary(summary)];\n        var /** @type {?} */ providers = [];\n        if (metadata instanceof CompileNgModuleMetadata) {\n            expressions.push.apply(expressions, \n            // For directives / pipes, we only add the declared ones,\n            // and rely on transitively importing NgModules to get the transitive\n            // summaries.\n            metadata.declaredDirectives.concat(metadata.declaredPipes)\n                .map(function (type) { return type.reference; })\n                .concat(metadata.transitiveModule.modules.map(function (type) { return type.reference; })\n                .filter(function (ref) { return ref !== metadata.type.reference; }))\n                .map(function (ref) { return _this.serializeSummaryRef(ref); }));\n            // Note: We don't use `NgModuleSummary.providers`, as that one is transitive,\n            // and we already have transitive modules.\n            providers = metadata.providers;\n        }\n        else if (summary.summaryKind === CompileSummaryKind.Directive) {\n            var /** @type {?} */ dirSummary = /** @type {?} */ (summary);\n            providers = dirSummary.providers.concat(dirSummary.viewProviders);\n        }\n        // Note: We can't just refer to the `ngsummary.ts` files for `useClass` providers (as we do for\n        // declaredDirectives / declaredPipes), as we allow\n        // providers without ctor arguments to skip the `@Injectable` decorator,\n        // i.e. we didn't generate .ngsummary.ts files for these.\n        expressions.push.apply(expressions, providers.filter(function (provider) { return !!provider.useClass; }).map(function (provider) {\n            return _this.serializeSummary(/** @type {?} */ ({\n                summaryKind: CompileSummaryKind.Injectable, type: provider.useClass\n            }));\n        }));\n        return literalArr(expressions);\n    };\n    /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryRef = /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    function (typeSymbol) {\n        var /** @type {?} */ jitImportedSymbol = this.symbolResolver.getStaticSymbol(summaryForJitFileName(typeSymbol.filePath), summaryForJitName(typeSymbol.name));\n        return this.outputCtx.importExpr(jitImportedSymbol);\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummary = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var /** @type {?} */ outputCtx = this.outputCtx;\n        var Transformer = (function () {\n            function Transformer() {\n            }\n            /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitArray = /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            function (arr, context) {\n                var _this = this;\n                return literalArr(arr.map(function (entry) { return visitValue(entry, _this, context); }));\n            };\n            /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitStringMap = /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            function (map, context) {\n                var _this = this;\n                return new LiteralMapExpr(Object.keys(map).map(function (key) { return new LiteralMapEntry(key, visitValue(map[key], _this, context), false); }));\n            };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitPrimitive = /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            function (value, context) { return literal(value); };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitOther = /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            function (value, context) {\n                if (value instanceof StaticSymbol) {\n                    return outputCtx.importExpr(value);\n                }\n                else {\n                    throw new Error(\"Illegal State: Encountered value \" + value);\n                }\n            };\n            return Transformer;\n        }());\n        return visitValue(data, new Transformer(), null);\n    };\n    return ForJitSerializer;\n}());\nvar FromJsonDeserializer = (function (_super) {\n    __extends(FromJsonDeserializer, _super);\n    function FromJsonDeserializer(symbolCache, summaryResolver) {\n        var _this = _super.call(this) || this;\n        _this.symbolCache = symbolCache;\n        _this.summaryResolver = summaryResolver;\n        return _this;\n    }\n    /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.deserialize = /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    function (libraryFileName, json) {\n        var _this = this;\n        var /** @type {?} */ data = JSON.parse(json);\n        var /** @type {?} */ importAs = [];\n        this.symbols = [];\n        data.symbols.forEach(function (serializedSymbol) {\n            var /** @type {?} */ symbol = _this.symbolCache.get(_this.summaryResolver.fromSummaryFileName(serializedSymbol.filePath, libraryFileName), serializedSymbol.name);\n            _this.symbols.push(symbol);\n            if (serializedSymbol.importAs) {\n                importAs.push({ symbol: symbol, importAs: serializedSymbol.importAs });\n            }\n        });\n        var /** @type {?} */ summaries = visitValue(data.summaries, this, null);\n        return { moduleName: data.moduleName, summaries: summaries, importAs: importAs };\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    function (map, context) {\n        if ('__symbol' in map) {\n            var /** @type {?} */ baseSymbol = this.symbols[map['__symbol']];\n            var /** @type {?} */ members = map['members'];\n            return members.length ? this.symbolCache.get(baseSymbol.filePath, baseSymbol.name, members) :\n                baseSymbol;\n        }\n        else {\n            return _super.prototype.visitStringMap.call(this, map, context);\n        }\n    };\n    return FromJsonDeserializer;\n}(ValueTransformer));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar StubEmitFlags = {\n    Basic: 1,\n    TypeCheck: 2,\n    All: 3,\n};\nStubEmitFlags[StubEmitFlags.Basic] = \"Basic\";\nStubEmitFlags[StubEmitFlags.TypeCheck] = \"TypeCheck\";\nStubEmitFlags[StubEmitFlags.All] = \"All\";\nvar AotCompiler = (function () {\n    function AotCompiler(_config, _options, _host, _reflector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _typeCheckCompiler, _ngModuleCompiler, _outputEmitter, _summaryResolver, _symbolResolver) {\n        this._config = _config;\n        this._options = _options;\n        this._host = _host;\n        this._reflector = _reflector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._typeCheckCompiler = _typeCheckCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._outputEmitter = _outputEmitter;\n        this._summaryResolver = _summaryResolver;\n        this._symbolResolver = _symbolResolver;\n        this._templateAstCache = new Map();\n        this._analyzedFiles = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    AotCompiler.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () { this._metadataResolver.clearCache(); };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesSync = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        analyzeResult.ngModules.forEach(function (ngModule) {\n            return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true);\n        });\n        return analyzeResult;\n    };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesAsync = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        return Promise\n            .all(analyzeResult.ngModules.map(function (ngModule) {\n            return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false);\n        }))\n            .then(function () { return analyzeResult; });\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype._analyzeFile = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        var /** @type {?} */ analyzedFile = this._analyzedFiles.get(fileName);\n        if (!analyzedFile) {\n            analyzedFile =\n                analyzeFile(this._host, this._symbolResolver, this._metadataResolver, fileName);\n            this._analyzedFiles.set(fileName, analyzedFile);\n        }\n        return analyzedFile;\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype.findGeneratedFileNames = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        var _this = this;\n        var /** @type {?} */ genFileNames = [];\n        var /** @type {?} */ file = this._analyzeFile(fileName);\n        // Make sure we create a .ngfactory if we have a injectable/directive/pipe/NgModule\n        // or a reference to a non source file.\n        // Note: This is overestimating the required .ngfactory files as the real calculation is harder.\n        // Only do this for StubEmitFlags.Basic, as adding a type check block\n        // does not change this file (as we generate type check blocks based on NgModules).\n        if (this._options.allowEmptyCodegenFiles || file.directives.length || file.pipes.length ||\n            file.injectables.length || file.ngModules.length || file.exportsNonSourceFiles) {\n            genFileNames.push(ngfactoryFilePath(file.fileName, true));\n            if (this._options.enableSummariesForJit) {\n                genFileNames.push(summaryForJitFileName(file.fileName, true));\n            }\n        }\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(file.fileName, true)[1];\n        file.directives.forEach(function (dirSymbol) {\n            var /** @type {?} */ compMeta = /** @type {?} */ ((_this._metadataResolver.getNonNormalizedDirectiveMetadata(dirSymbol))).metadata;\n            if (!compMeta.isComponent) {\n                return;\n            } /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).styleUrls.forEach(function (styleUrl) {\n                var /** @type {?} */ normalizedUrl = _this._host.resourceNameToFileName(styleUrl, file.fileName);\n                if (!normalizedUrl) {\n                    throw new Error(\"Couldn't resolve resource \" + styleUrl + \" relative to \" + file.fileName);\n                }\n                var /** @type {?} */ needsShim = (/** @type {?} */ ((compMeta.template)).encapsulation || _this._config.defaultEncapsulation) === ViewEncapsulation.Emulated;\n                genFileNames.push(_stylesModuleUrl(normalizedUrl, needsShim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    genFileNames.push(_stylesModuleUrl(normalizedUrl, !needsShim, fileSuffix));\n                }\n            });\n        });\n        return genFileNames;\n    };\n    /**\n     * @param {?} genFileName\n     * @param {?=} originalFileName\n     * @return {?}\n     */\n    AotCompiler.prototype.emitBasicStub = /**\n     * @param {?} genFileName\n     * @param {?=} originalFileName\n     * @return {?}\n     */\n    function (genFileName, originalFileName) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            if (!originalFileName) {\n                throw new Error(\"Assertion error: require the original file for .ngfactory.ts stubs. File: \" + genFileName);\n            }\n            var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n            this._createNgFactoryStub(outputCtx, originalFile, StubEmitFlags.Basic);\n        }\n        else if (genFileName.endsWith('.ngsummary.ts')) {\n            if (this._options.enableSummariesForJit) {\n                if (!originalFileName) {\n                    throw new Error(\"Assertion error: require the original file for .ngsummary.ts stubs. File: \" + genFileName);\n                }\n                var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n                _createEmptyStub(outputCtx);\n                originalFile.ngModules.forEach(function (ngModule) {\n                    // create exports that user code can reference\n                    createForJitStub(outputCtx, ngModule.type.reference);\n                });\n            }\n        }\n        else if (genFileName.endsWith('.ngstyle.ts')) {\n            _createEmptyStub(outputCtx);\n        }\n        // Note: for the stubs, we don't need a property srcFileUrl,\n        // as lateron in emitAllImpls we will create the proper GeneratedFiles with the\n        // correct srcFileUrl.\n        // This is good as e.g. for .ngstyle.ts files we can't derive\n        // the url of components based on the genFileUrl.\n        return this._codegenSourceModule('unknown', outputCtx);\n    };\n    /**\n     * @param {?} genFileName\n     * @param {?} originalFileName\n     * @return {?}\n     */\n    AotCompiler.prototype.emitTypeCheckStub = /**\n     * @param {?} genFileName\n     * @param {?} originalFileName\n     * @return {?}\n     */\n    function (genFileName, originalFileName) {\n        var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n        var /** @type {?} */ outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            this._createNgFactoryStub(outputCtx, originalFile, StubEmitFlags.TypeCheck);\n        }\n        return outputCtx.statements.length > 0 ?\n            this._codegenSourceModule(originalFile.fileName, outputCtx) :\n            null;\n    };\n    /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    AotCompiler.prototype.loadFilesAsync = /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    function (fileNames) {\n        var _this = this;\n        var /** @type {?} */ files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        var /** @type {?} */ loadingPromises = [];\n        files.forEach(function (file) {\n            return file.ngModules.forEach(function (ngModule) {\n                return loadingPromises.push(_this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false));\n            });\n        });\n        return Promise.all(loadingPromises).then(function (_) { return mergeAndValidateNgFiles(files); });\n    };\n    /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    AotCompiler.prototype.loadFilesSync = /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    function (fileNames) {\n        var _this = this;\n        var /** @type {?} */ files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        files.forEach(function (file) {\n            return file.ngModules.forEach(function (ngModule) {\n                return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true);\n            });\n        });\n        return mergeAndValidateNgFiles(files);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    AotCompiler.prototype._createNgFactoryStub = /**\n     * @param {?} outputCtx\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    function (outputCtx, file, emitFlags) {\n        var _this = this;\n        file.ngModules.forEach(function (ngModuleMeta, ngModuleIndex) {\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the typecheck block.\n            // create exports that user code can reference\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the typecheck block.\n            // create exports that user code can reference\n            _this._ngModuleCompiler.createStub(outputCtx, ngModuleMeta.type.reference);\n            // add references to the symbols from the metadata.\n            // These can be used by the type check block for components,\n            // and they also cause TypeScript to include these files into the program too,\n            // which will make them part of the analyzedFiles.\n            var /** @type {?} */ externalReferences = ngModuleMeta.declaredDirectives.map(function (d) { return d.reference; }).concat(ngModuleMeta.declaredPipes.map(function (d) { return d.reference; }), ngModuleMeta.importedModules.map(function (m) { return m.type.reference; }), ngModuleMeta.exportedModules.map(function (m) { return m.type.reference; }));\n            var /** @type {?} */ externalReferenceVars = new Map();\n            externalReferences.forEach(function (ref, typeIndex) {\n                if (_this._host.isSourceFile(ref.filePath)) {\n                    externalReferenceVars.set(ref, \"_decl\" + ngModuleIndex + \"_\" + typeIndex);\n                }\n            });\n            externalReferenceVars.forEach(function (varName, reference) {\n                outputCtx.statements.push(variable(varName)\n                    .set(NULL_EXPR.cast(DYNAMIC_TYPE))\n                    .toDeclStmt(expressionType(outputCtx.importExpr(reference))));\n            });\n            if (emitFlags & StubEmitFlags.TypeCheck) {\n                // add the typecheck block for all components of the NgModule\n                ngModuleMeta.declaredDirectives.forEach(function (dirId) {\n                    var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(dirId.reference);\n                    if (!compMeta.isComponent) {\n                        return;\n                    }\n                    _this._createTypeCheckBlock(outputCtx, ngModuleMeta, _this._metadataResolver.getHostComponentMetadata(compMeta), [compMeta.type], externalReferenceVars);\n                    _this._createTypeCheckBlock(outputCtx, ngModuleMeta, compMeta, ngModuleMeta.transitiveModule.directives, externalReferenceVars);\n                });\n            }\n        });\n        if (outputCtx.statements.length === 0) {\n            _createEmptyStub(outputCtx);\n        }\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} moduleMeta\n     * @param {?} compMeta\n     * @param {?} directives\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    AotCompiler.prototype._createTypeCheckBlock = /**\n     * @param {?} ctx\n     * @param {?} moduleMeta\n     * @param {?} compMeta\n     * @param {?} directives\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    function (ctx, moduleMeta, compMeta, directives, externalReferenceVars) {\n        var _a = this._parseTemplate(compMeta, moduleMeta, directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        (_b = ctx.statements).push.apply(_b, this._typeCheckCompiler.compileComponent(compMeta, parsedTemplate, usedPipes, externalReferenceVars));\n        var _b;\n    };\n    /**\n     * @param {?} analyzeResult\n     * @param {?} locale\n     * @return {?}\n     */\n    AotCompiler.prototype.emitMessageBundle = /**\n     * @param {?} analyzeResult\n     * @param {?} locale\n     * @return {?}\n     */\n    function (analyzeResult, locale) {\n        var _this = this;\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        analyzeResult.files.forEach(function (file) {\n            var /** @type {?} */ compMetas = [];\n            file.directives.forEach(function (directiveType) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(directiveType);\n                if (dirMeta && dirMeta.isComponent) {\n                    compMetas.push(dirMeta);\n                }\n            });\n            compMetas.forEach(function (compMeta) {\n                var /** @type {?} */ html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                errors.push.apply(errors, /** @type {?} */ ((messageBundle.updateFromTemplate(html, file.fileName, interpolationConfig))));\n            });\n        });\n        if (errors.length) {\n            throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n        }\n        return messageBundle;\n    };\n    /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    AotCompiler.prototype.emitAllImpls = /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    function (analyzeResult) {\n        var _this = this;\n        var ngModuleByPipeOrDirective = analyzeResult.ngModuleByPipeOrDirective, files = analyzeResult.files;\n        var /** @type {?} */ sourceModules = files.map(function (file) {\n            return _this._compileImplFile(file.fileName, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables);\n        });\n        return flatten(sourceModules);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    AotCompiler.prototype._compileImplFile = /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    function (srcFileUrl, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n        var _this = this;\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(srcFileUrl, true)[1];\n        var /** @type {?} */ generatedFiles = [];\n        var /** @type {?} */ outputCtx = this._createOutputContext(ngfactoryFilePath(srcFileUrl, true));\n        generatedFiles.push.apply(generatedFiles, this._createSummary(srcFileUrl, directives, pipes, ngModules, injectables, outputCtx));\n        // compile all ng modules\n        ngModules.forEach(function (ngModuleMeta) { return _this._compileModule(outputCtx, ngModuleMeta); });\n        // compile components\n        directives.forEach(function (dirType) {\n            var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(/** @type {?} */ (dirType));\n            if (!compMeta.isComponent) {\n                return;\n            }\n            var /** @type {?} */ ngModule = ngModuleByPipeOrDirective.get(dirType);\n            if (!ngModule) {\n                throw new Error(\"Internal Error: cannot determine the module for component \" + identifierName(compMeta.type) + \"!\");\n            }\n            // compile styles\n            var /** @type {?} */ componentStylesheet = _this._styleCompiler.compileComponent(outputCtx, compMeta); /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n                // Note: fill non shim and shim style files as they might\n                // be shared by component with and without ViewEncapsulation.\n                var /** @type {?} */ shim = _this._styleCompiler.needsStyleShim(compMeta);\n                generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, shim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, !shim, fileSuffix));\n                }\n            });\n            // compile components\n            var /** @type {?} */ compViewVars = _this._compileComponent(outputCtx, compMeta, ngModule, ngModule.transitiveModule.directives, componentStylesheet, fileSuffix);\n            _this._compileComponentFactory(outputCtx, compMeta, ngModule, fileSuffix);\n        });\n        if (outputCtx.statements.length > 0 || this._options.allowEmptyCodegenFiles) {\n            var /** @type {?} */ srcModule = this._codegenSourceModule(srcFileUrl, outputCtx);\n            generatedFiles.unshift(srcModule);\n        }\n        return generatedFiles;\n    };\n    /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    AotCompiler.prototype._createSummary = /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    function (srcFileName, directives, pipes, ngModules, injectables, ngFactoryCtx) {\n        var _this = this;\n        var /** @type {?} */ symbolSummaries = this._symbolResolver.getSymbolsOf(srcFileName)\n            .map(function (symbol) { return _this._symbolResolver.resolveSymbol(symbol); });\n        var /** @type {?} */ typeData = ngModules.map(function (meta) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getNgModuleSummary(meta.type.reference))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(meta.type.reference)))\n            });\n        }).concat(directives.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getDirectiveSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getDirectiveMetadata(ref)))\n            });\n        }), pipes.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getPipeSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getPipeMetadata(ref)))\n            });\n        }), injectables.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))).type\n            });\n        }));\n        var /** @type {?} */ forJitOutputCtx = this._options.enableSummariesForJit ?\n            this._createOutputContext(summaryForJitFileName(srcFileName, true)) :\n            null;\n        var _a = serializeSummaries(srcFileName, forJitOutputCtx, this._summaryResolver, this._symbolResolver, symbolSummaries, typeData), json = _a.json, exportAs = _a.exportAs;\n        exportAs.forEach(function (entry) {\n            ngFactoryCtx.statements.push(variable(entry.exportAs).set(ngFactoryCtx.importExpr(entry.symbol)).toDeclStmt(null, [\n                StmtModifier.Exported\n            ]));\n        });\n        var /** @type {?} */ summaryJson = new GeneratedFile(srcFileName, summaryFileName(srcFileName), json);\n        var /** @type {?} */ result = [summaryJson];\n        if (forJitOutputCtx) {\n            result.push(this._codegenSourceModule(srcFileName, forJitOutputCtx));\n        }\n        return result;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} ngModule\n     * @return {?}\n     */\n    AotCompiler.prototype._compileModule = /**\n     * @param {?} outputCtx\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (outputCtx, ngModule) {\n        var /** @type {?} */ providers = [];\n        if (this._options.locale) {\n            var /** @type {?} */ normalizedLocale = this._options.locale.replace(/_/g, '-');\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.LOCALE_ID),\n                useValue: normalizedLocale,\n            });\n        }\n        if (this._options.i18nFormat) {\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.TRANSLATIONS_FORMAT),\n                useValue: this._options.i18nFormat\n            });\n        }\n        this._ngModuleCompiler.compile(outputCtx, ngModule, providers);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponentFactory = /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (outputCtx, compMeta, ngModule, fileSuffix) {\n        var /** @type {?} */ hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta);\n        var /** @type {?} */ hostViewFactoryVar = this._compileComponent(outputCtx, hostMeta, ngModule, [compMeta.type], null, fileSuffix)\n            .viewClassVar;\n        var /** @type {?} */ compFactoryVar = componentFactoryName(compMeta.type.reference);\n        var /** @type {?} */ inputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.inputs) {\n            var /** @type {?} */ templateName = compMeta.inputs[propName];\n            // Don't quote so that the key gets minified...\n            inputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        var /** @type {?} */ outputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.outputs) {\n            var /** @type {?} */ templateName = compMeta.outputs[propName];\n            // Don't quote so that the key gets minified...\n            outputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        outputCtx.statements.push(variable(compFactoryVar)\n            .set(importExpr(Identifiers.createComponentFactory).callFn([\n            literal(compMeta.selector), outputCtx.importExpr(compMeta.type.reference),\n            variable(hostViewFactoryVar), new LiteralMapExpr(inputsExprs),\n            new LiteralMapExpr(outputsExprs),\n            literalArr(/** @type {?} */ ((compMeta.template)).ngContentSelectors.map(function (selector) { return literal(selector); }))\n        ]))\n            .toDeclStmt(importType(Identifiers.ComponentFactory, [/** @type {?} */ ((expressionType(outputCtx.importExpr(compMeta.type.reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]));\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (outputCtx, compMeta, ngModule, directiveIdentifiers, componentStyles, fileSuffix) {\n        var _a = this._parseTemplate(compMeta, ngModule, directiveIdentifiers), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ stylesExpr = componentStyles ? variable(componentStyles.stylesVar) : literalArr([]);\n        var /** @type {?} */ viewResult = this._viewCompiler.compileComponent(outputCtx, compMeta, parsedTemplate, stylesExpr, usedPipes);\n        if (componentStyles) {\n            _resolveStyleStatements(this._symbolResolver, componentStyles, this._styleCompiler.needsStyleShim(compMeta), fileSuffix);\n        }\n        return viewResult;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    AotCompiler.prototype._parseTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        if (this._templateAstCache.has(compMeta.type.reference)) {\n            return /** @type {?} */ ((this._templateAstCache.get(compMeta.type.reference)));\n        }\n        var /** @type {?} */ preserveWhitespaces = /** @type {?} */ ((/** @type {?} */ ((compMeta)).template)).preserveWhitespaces;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var /** @type {?} */ result = this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n        this._templateAstCache.set(compMeta.type.reference, result);\n        return result;\n    };\n    /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    AotCompiler.prototype._createOutputContext = /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    function (genFilePath) {\n        var _this = this;\n        var /** @type {?} */ importExpr$$1 = function (symbol, typeParams) {\n            if (typeParams === void 0) { typeParams = null; }\n            if (!(symbol instanceof StaticSymbol)) {\n                throw new Error(\"Internal error: unknown identifier \" + JSON.stringify(symbol));\n            }\n            var /** @type {?} */ arity = _this._symbolResolver.getTypeArity(symbol) || 0;\n            var _a = _this._symbolResolver.getImportAs(symbol) || symbol, filePath = _a.filePath, name = _a.name, members = _a.members;\n            var /** @type {?} */ importModule = _this._symbolResolver.fileNameToModuleName(filePath, genFilePath);\n            // It should be good enough to compare filePath to genFilePath and if they are equal\n            // there is a self reference. However, ngfactory files generate to .ts but their\n            // symbols have .d.ts so a simple compare is insufficient. They should be canonical\n            // and is tracked by #17705.\n            var /** @type {?} */ selfReference = _this._symbolResolver.fileNameToModuleName(genFilePath, genFilePath);\n            var /** @type {?} */ moduleName = importModule === selfReference ? null : importModule;\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedTypeParams = typeParams || [];\n            var /** @type {?} */ missingTypeParamsCount = arity - suppliedTypeParams.length;\n            var /** @type {?} */ allTypeParams = suppliedTypeParams.concat(new Array(missingTypeParamsCount).fill(DYNAMIC_TYPE));\n            return members.reduce(function (expr, memberName) { return expr.prop(memberName); }, /** @type {?} */ (importExpr(new ExternalReference(moduleName, name, null), allTypeParams)));\n        };\n        return { statements: [], genFilePath: genFilePath, importExpr: importExpr$$1 };\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} isShimmed\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenStyles = /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} isShimmed\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (srcFileUrl, compMeta, stylesheetMetadata, isShimmed, fileSuffix) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(_stylesModuleUrl(/** @type {?} */ ((stylesheetMetadata.moduleUrl)), isShimmed, fileSuffix));\n        var /** @type {?} */ compiledStylesheet = this._styleCompiler.compileStyles(outputCtx, compMeta, stylesheetMetadata, isShimmed);\n        _resolveStyleStatements(this._symbolResolver, compiledStylesheet, isShimmed, fileSuffix);\n        return this._codegenSourceModule(srcFileUrl, outputCtx);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenSourceModule = /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (srcFileUrl, ctx) {\n        return new GeneratedFile(srcFileUrl, ctx.genFilePath, ctx.statements);\n    };\n    return AotCompiler;\n}());\n/**\n * @param {?} outputCtx\n * @return {?}\n */\nfunction _createEmptyStub(outputCtx) {\n    // Note: We need to produce at least one import statement so that\n    // TypeScript knows that the file is an es6 module. Otherwise our generated\n    // exports / imports won't be emitted properly by TypeScript.\n    outputCtx.statements.push(importExpr(Identifiers.ComponentFactory).toStmt());\n}\n/**\n * @param {?} symbolResolver\n * @param {?} compileResult\n * @param {?} needsShim\n * @param {?} fileSuffix\n * @return {?}\n */\nfunction _resolveStyleStatements(symbolResolver, compileResult, needsShim, fileSuffix) {\n    compileResult.dependencies.forEach(function (dep) {\n        dep.setValue(symbolResolver.getStaticSymbol(_stylesModuleUrl(dep.moduleUrl, needsShim, fileSuffix), dep.name));\n    });\n}\n/**\n * @param {?} stylesheetUrl\n * @param {?} shim\n * @param {?} suffix\n * @return {?}\n */\nfunction _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n    return \"\" + stylesheetUrl + (shim ? '.shim' : '') + \".ngstyle\" + suffix;\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var /** @type {?} */ files = _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver);\n    return mergeAnalyzedFiles(files);\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeAndValidateNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    return validateAnalyzedModules(analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver));\n}\n/**\n * @param {?} analyzedModules\n * @return {?}\n */\nfunction validateAnalyzedModules(analyzedModules) {\n    if (analyzedModules.symbolsMissingModule && analyzedModules.symbolsMissingModule.length) {\n        var /** @type {?} */ messages = analyzedModules.symbolsMissingModule.map(function (s) {\n            return \"Cannot determine the module for class \" + s.name + \" in \" + s.filePath + \"! Add \" + s.name + \" to the NgModule to fix it.\";\n        });\n        throw syntaxError(messages.join('\\n'));\n    }\n    return analyzedModules;\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var /** @type {?} */ seenFiles = new Set();\n    var /** @type {?} */ files = [];\n    var /** @type {?} */ visitFile = function (fileName) {\n        if (seenFiles.has(fileName) || !host.isSourceFile(fileName)) {\n            return false;\n        }\n        seenFiles.add(fileName);\n        var /** @type {?} */ analyzedFile = analyzeFile(host, staticSymbolResolver, metadataResolver, fileName);\n        files.push(analyzedFile);\n        analyzedFile.ngModules.forEach(function (ngModule) {\n            ngModule.transitiveModule.modules.forEach(function (modMeta) { return visitFile(modMeta.reference.filePath); });\n        });\n    };\n    fileNames.forEach(function (fileName) { return visitFile(fileName); });\n    return files;\n}\n/**\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @param {?} fileName\n * @return {?}\n */\nfunction analyzeFile(host, staticSymbolResolver, metadataResolver, fileName) {\n    var /** @type {?} */ directives = [];\n    var /** @type {?} */ pipes = [];\n    var /** @type {?} */ injectables = [];\n    var /** @type {?} */ ngModules = [];\n    var /** @type {?} */ hasDecorators = staticSymbolResolver.hasDecorators(fileName);\n    var /** @type {?} */ exportsNonSourceFiles = false;\n    // Don't analyze .d.ts files that have no decorators as a shortcut\n    // to speed up the analysis. This prevents us from\n    // resolving the references in these files.\n    // Note: exportsNonSourceFiles is only needed when compiling with summaries,\n    // which is not the case when .d.ts files are treated as input files.\n    if (!fileName.endsWith('.d.ts') || hasDecorators) {\n        staticSymbolResolver.getSymbolsOf(fileName).forEach(function (symbol) {\n            var /** @type {?} */ resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            var /** @type {?} */ symbolMeta = resolvedSymbol.metadata;\n            if (!symbolMeta || symbolMeta.__symbolic === 'error') {\n                return;\n            }\n            var /** @type {?} */ isNgSymbol = false;\n            if (symbolMeta.__symbolic === 'class') {\n                if (metadataResolver.isDirective(symbol)) {\n                    isNgSymbol = true;\n                    directives.push(symbol);\n                }\n                else if (metadataResolver.isPipe(symbol)) {\n                    isNgSymbol = true;\n                    pipes.push(symbol);\n                }\n                else if (metadataResolver.isInjectable(symbol)) {\n                    isNgSymbol = true;\n                    injectables.push(symbol);\n                }\n                else {\n                    var /** @type {?} */ ngModule = metadataResolver.getNgModuleMetadata(symbol, false);\n                    if (ngModule) {\n                        isNgSymbol = true;\n                        ngModules.push(ngModule);\n                    }\n                }\n            }\n            if (!isNgSymbol) {\n                exportsNonSourceFiles =\n                    exportsNonSourceFiles || isValueExportingNonSourceFile(host, symbolMeta);\n            }\n        });\n    }\n    return {\n        fileName: fileName, directives: directives, pipes: pipes, ngModules: ngModules, injectables: injectables, exportsNonSourceFiles: exportsNonSourceFiles,\n    };\n}\n/**\n * @param {?} host\n * @param {?} metadata\n * @return {?}\n */\nfunction isValueExportingNonSourceFile(host, metadata) {\n    var /** @type {?} */ exportsNonSourceFiles = false;\n    var Visitor = (function () {\n        function Visitor() {\n        }\n        /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitArray = /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        function (arr, context) {\n            var _this = this;\n            arr.forEach(function (v) { return visitValue(v, _this, context); });\n        };\n        /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitStringMap = /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        function (map, context) {\n            var _this = this;\n            Object.keys(map).forEach(function (key) { return visitValue(map[key], _this, context); });\n        };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitPrimitive = /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        function (value, context) { };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitOther = /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        function (value, context) {\n            if (value instanceof StaticSymbol && !host.isSourceFile(value.filePath)) {\n                exportsNonSourceFiles = true;\n            }\n        };\n        return Visitor;\n    }());\n    visitValue(metadata, new Visitor(), null);\n    return exportsNonSourceFiles;\n}\n/**\n * @param {?} analyzedFiles\n * @return {?}\n */\nfunction mergeAnalyzedFiles(analyzedFiles) {\n    var /** @type {?} */ allNgModules = [];\n    var /** @type {?} */ ngModuleByPipeOrDirective = new Map();\n    var /** @type {?} */ allPipesAndDirectives = new Set();\n    analyzedFiles.forEach(function (af) {\n        af.ngModules.forEach(function (ngModule) {\n            allNgModules.push(ngModule);\n            ngModule.declaredDirectives.forEach(function (d) { return ngModuleByPipeOrDirective.set(d.reference, ngModule); });\n            ngModule.declaredPipes.forEach(function (p) { return ngModuleByPipeOrDirective.set(p.reference, ngModule); });\n        });\n        af.directives.forEach(function (d) { return allPipesAndDirectives.add(d); });\n        af.pipes.forEach(function (p) { return allPipesAndDirectives.add(p); });\n    });\n    var /** @type {?} */ symbolsMissingModule = [];\n    allPipesAndDirectives.forEach(function (ref) {\n        if (!ngModuleByPipeOrDirective.has(ref)) {\n            symbolsMissingModule.push(ref);\n        }\n    });\n    return {\n        ngModules: allNgModules,\n        ngModuleByPipeOrDirective: ngModuleByPipeOrDirective,\n        symbolsMissingModule: symbolsMissingModule,\n        files: analyzedFiles\n    };\n}\n/**\n * @param {?} files\n * @return {?}\n */\nfunction mergeAndValidateNgFiles(files) {\n    return validateAnalyzedModules(mergeAnalyzedFiles(files));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANGULAR_CORE = '@angular/core';\nvar ANGULAR_ROUTER = '@angular/router';\nvar HIDDEN_KEY = /^\\$.*\\$$/;\nvar IGNORE = {\n    __symbolic: 'ignore'\n};\nvar USE_VALUE = 'useValue';\nvar PROVIDE = 'provide';\nvar REFERENCE_SET = new Set([USE_VALUE, 'useFactory', 'data']);\n/**\n * @param {?} value\n * @return {?}\n */\nfunction shouldIgnore(value) {\n    return value && value.__symbolic == 'ignore';\n}\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nvar StaticReflector = (function () {\n    function StaticReflector(summaryResolver, symbolResolver, knownMetadataClasses, knownMetadataFunctions, errorRecorder) {\n        if (knownMetadataClasses === void 0) { knownMetadataClasses = []; }\n        if (knownMetadataFunctions === void 0) { knownMetadataFunctions = []; }\n        var _this = this;\n        this.summaryResolver = summaryResolver;\n        this.symbolResolver = symbolResolver;\n        this.errorRecorder = errorRecorder;\n        this.annotationCache = new Map();\n        this.propertyCache = new Map();\n        this.parameterCache = new Map();\n        this.methodCache = new Map();\n        this.conversionMap = new Map();\n        this.annotationForParentClassWithSummaryKind = new Map();\n        this.initializeConversionMap();\n        knownMetadataClasses.forEach(function (kc) {\n            return _this._registerDecoratorOrConstructor(_this.getStaticSymbol(kc.filePath, kc.name), kc.ctor);\n        });\n        knownMetadataFunctions.forEach(function (kf) { return _this._registerFunction(_this.getStaticSymbol(kf.filePath, kf.name), kf.fn); });\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Directive, [createDirective, createComponent]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Pipe, [createPipe]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.NgModule, [createNgModule]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Injectable, [createInjectable, createPipe, createDirective, createComponent, createNgModule]);\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    StaticReflector.prototype.componentModuleUrl = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        var /** @type {?} */ staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n        return this.symbolResolver.getResourcePath(staticSymbol);\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    StaticReflector.prototype.resolveExternalReference = /**\n     * @param {?} ref\n     * @return {?}\n     */\n    function (ref) {\n        var /** @type {?} */ refSymbol = this.symbolResolver.getSymbolByModule(/** @type {?} */ ((ref.moduleName)), /** @type {?} */ ((ref.name)));\n        var /** @type {?} */ declarationSymbol = this.findSymbolDeclaration(refSymbol);\n        this.symbolResolver.recordModuleNameForFileName(refSymbol.filePath, /** @type {?} */ ((ref.moduleName)));\n        this.symbolResolver.recordImportAs(declarationSymbol, refSymbol);\n        return declarationSymbol;\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.findDeclaration = /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (moduleUrl, name, containingFile) {\n        return this.findSymbolDeclaration(this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    StaticReflector.prototype.tryFindDeclaration = /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    function (moduleUrl, name) {\n        var _this = this;\n        return this.symbolResolver.ignoreErrorsFor(function () { return _this.findDeclaration(moduleUrl, name); });\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    StaticReflector.prototype.findSymbolDeclaration = /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    function (symbol) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n        if (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            return this.findSymbolDeclaration(resolvedSymbol.metadata);\n        }\n        else {\n            return symbol;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.annotations = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ annotations = this.annotationCache.get(type);\n        if (!annotations) {\n            annotations = [];\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentAnnotations = this.annotations(parentType);\n                annotations.push.apply(annotations, parentAnnotations);\n            }\n            var /** @type {?} */ ownAnnotations_1 = [];\n            if (classMetadata['decorators']) {\n                ownAnnotations_1 = this.simplify(type, classMetadata['decorators']);\n                annotations.push.apply(annotations, ownAnnotations_1);\n            }\n            if (parentType && !this.summaryResolver.isLibraryFile(type.filePath) &&\n                this.summaryResolver.isLibraryFile(parentType.filePath)) {\n                var /** @type {?} */ summary = this.summaryResolver.resolveSummary(parentType);\n                if (summary && summary.type) {\n                    var /** @type {?} */ requiredAnnotationTypes = /** @type {?} */ ((this.annotationForParentClassWithSummaryKind.get(/** @type {?} */ ((summary.type.summaryKind)))));\n                    var /** @type {?} */ typeHasRequiredAnnotation = requiredAnnotationTypes.some(function (requiredType) { return ownAnnotations_1.some(function (ann) { return requiredType.isTypeOf(ann); }); });\n                    if (!typeHasRequiredAnnotation) {\n                        this.reportError(syntaxError(\"Class \" + type.name + \" in \" + type.filePath + \" extends from a \" + CompileSummaryKind[(/** @type {?} */ ((summary.type.summaryKind)))] + \" in another compilation unit without duplicating the decorator. \" +\n                            (\"Please add a \" + requiredAnnotationTypes.map(function (type) { return type.ngMetadataName; }).join(' or ') + \" decorator to the class.\")), type);\n                    }\n                }\n            }\n            this.annotationCache.set(type, annotations.filter(function (ann) { return !!ann; }));\n        }\n        return annotations;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.propMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        var /** @type {?} */ propMetadata = this.propertyCache.get(type);\n        if (!propMetadata) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            propMetadata = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentType);\n                Object.keys(parentPropMetadata_1).forEach(function (parentProp) {\n                    /** @type {?} */ ((propMetadata))[parentProp] = parentPropMetadata_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_1 = classMetadata['members'] || {};\n            Object.keys(members_1).forEach(function (propName) {\n                var /** @type {?} */ propData = members_1[propName];\n                var /** @type {?} */ prop = (/** @type {?} */ (propData))\n                    .find(function (a) { return a['__symbolic'] == 'property' || a['__symbolic'] == 'method'; });\n                var /** @type {?} */ decorators = [];\n                if (/** @type {?} */ ((propMetadata))[propName]) {\n                    decorators.push.apply(decorators, /** @type {?} */ ((propMetadata))[propName]);\n                } /** @type {?} */\n                ((propMetadata))[propName] = decorators;\n                if (prop && prop['decorators']) {\n                    decorators.push.apply(decorators, _this.simplify(type, prop['decorators']));\n                }\n            });\n            this.propertyCache.set(type, propMetadata);\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.parameters = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"parameters received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return [];\n        }\n        try {\n            var /** @type {?} */ parameters_1 = this.parameterCache.get(type);\n            if (!parameters_1) {\n                var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n                var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n                var /** @type {?} */ members = classMetadata ? classMetadata['members'] : null;\n                var /** @type {?} */ ctorData = members ? members['__ctor__'] : null;\n                if (ctorData) {\n                    var /** @type {?} */ ctor = (/** @type {?} */ (ctorData)).find(function (a) { return a['__symbolic'] == 'constructor'; });\n                    var /** @type {?} */ rawParameterTypes = /** @type {?} */ (ctor['parameters']) || [];\n                    var /** @type {?} */ parameterDecorators_1 = /** @type {?} */ (this.simplify(type, ctor['parameterDecorators'] || []));\n                    parameters_1 = [];\n                    rawParameterTypes.forEach(function (rawParamType, index) {\n                        var /** @type {?} */ nestedResult = [];\n                        var /** @type {?} */ paramType = _this.trySimplify(type, rawParamType);\n                        if (paramType)\n                            nestedResult.push(paramType);\n                        var /** @type {?} */ decorators = parameterDecorators_1 ? parameterDecorators_1[index] : null;\n                        if (decorators) {\n                            nestedResult.push.apply(nestedResult, decorators);\n                        } /** @type {?} */\n                        ((parameters_1)).push(nestedResult);\n                    });\n                }\n                else if (parentType) {\n                    parameters_1 = this.parameters(parentType);\n                }\n                if (!parameters_1) {\n                    parameters_1 = [];\n                }\n                this.parameterCache.set(type, parameters_1);\n            }\n            return parameters_1;\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype._methodNames = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ methodNames = this.methodCache.get(type);\n        if (!methodNames) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            methodNames = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentMethodNames_1 = this._methodNames(parentType);\n                Object.keys(parentMethodNames_1).forEach(function (parentProp) {\n                    /** @type {?} */ ((methodNames))[parentProp] = parentMethodNames_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_2 = classMetadata['members'] || {};\n            Object.keys(members_2).forEach(function (propName) {\n                var /** @type {?} */ propData = members_2[propName];\n                var /** @type {?} */ isMethod = (/** @type {?} */ (propData)).some(function (a) { return a['__symbolic'] == 'method'; }); /** @type {?} */\n                ((methodNames))[propName] = /** @type {?} */ ((methodNames))[propName] || isMethod;\n            });\n            this.methodCache.set(type, methodNames);\n        }\n        return methodNames;\n    };\n    /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    StaticReflector.prototype.findParentType = /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    function (type, classMetadata) {\n        var /** @type {?} */ parentType = this.trySimplify(type, classMetadata['extends']);\n        if (parentType instanceof StaticSymbol) {\n            return parentType;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    StaticReflector.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"hasLifecycleHook received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n        }\n        try {\n            return !!this._methodNames(type)[lcProperty];\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    StaticReflector.prototype._registerDecoratorOrConstructor = /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    function (type, ctor) {\n        this.conversionMap.set(type, function (context, args) { return new (ctor.bind.apply(ctor, [void 0].concat(args)))(); });\n    };\n    /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    StaticReflector.prototype._registerFunction = /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    function (type, fn) {\n        this.conversionMap.set(type, function (context, args) { return fn.apply(undefined, args); });\n    };\n    /**\n     * @return {?}\n     */\n    StaticReflector.prototype.initializeConversionMap = /**\n     * @return {?}\n     */\n    function () {\n        this.injectionToken = this.findDeclaration(ANGULAR_CORE, 'InjectionToken');\n        this.opaqueToken = this.findDeclaration(ANGULAR_CORE, 'OpaqueToken');\n        this.ROUTES = this.tryFindDeclaration(ANGULAR_ROUTER, 'ROUTES');\n        this.ANALYZE_FOR_ENTRY_COMPONENTS =\n            this.findDeclaration(ANGULAR_CORE, 'ANALYZE_FOR_ENTRY_COMPONENTS');\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Injectable'), createInjectable);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Inject'), createInject);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Attribute'), createAttribute);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChild'), createContentChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChildren'), createContentChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChild'), createViewChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChildren'), createViewChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Input'), createInput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Output'), createOutput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Pipe'), createPipe);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostBinding'), createHostBinding);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostListener'), createHostListener);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Directive'), createDirective);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Component'), createComponent);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'NgModule'), createNgModule);\n        // Note: Some metadata classes can be used directly with Provider.deps.\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     */\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticReflector.prototype.getStaticSymbol = /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n    };\n    /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticReflector.prototype.reportError = /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.trySimplify = /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    function (context, value) {\n        var /** @type {?} */ originalRecorder = this.errorRecorder;\n        this.errorRecorder = function (error, fileName) { };\n        var /** @type {?} */ result = this.simplify(context, value);\n        this.errorRecorder = originalRecorder;\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.simplify = /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    function (context, value) {\n        var _this = this;\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ scope = BindingScope.empty;\n        var /** @type {?} */ calling = new Map();\n        /**\n         * @param {?} context\n         * @param {?} value\n         * @param {?} depth\n         * @param {?} references\n         * @return {?}\n         */\n        function simplifyInContext(context, value, depth, references) {\n            /**\n             * @param {?} staticSymbol\n             * @return {?}\n             */\n            function resolveReferenceValue(staticSymbol) {\n                var /** @type {?} */ resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n                return resolvedSymbol ? resolvedSymbol.metadata : null;\n            }\n            /**\n             * @param {?} functionSymbol\n             * @param {?} targetFunction\n             * @param {?} args\n             * @return {?}\n             */\n            function simplifyCall(functionSymbol, targetFunction, args) {\n                if (targetFunction && targetFunction['__symbolic'] == 'function') {\n                    if (calling.get(functionSymbol)) {\n                        throw new Error('Recursion not supported');\n                    }\n                    try {\n                        var /** @type {?} */ value_1 = targetFunction['value'];\n                        if (value_1 && (depth != 0 || value_1.__symbolic != 'error')) {\n                            var /** @type {?} */ parameters = targetFunction['parameters'];\n                            var /** @type {?} */ defaults = targetFunction.defaults;\n                            args = args.map(function (arg) { return simplifyInContext(context, arg, depth + 1, references); })\n                                .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                            if (defaults && defaults.length > args.length) {\n                                args.push.apply(args, defaults.slice(args.length).map(function (value) { return simplify(value); }));\n                            }\n                            calling.set(functionSymbol, true);\n                            var /** @type {?} */ functionScope = BindingScope.build();\n                            for (var /** @type {?} */ i = 0; i < parameters.length; i++) {\n                                functionScope.define(parameters[i], args[i]);\n                            }\n                            var /** @type {?} */ oldScope = scope;\n                            var /** @type {?} */ result_1;\n                            try {\n                                scope = functionScope.done();\n                                result_1 = simplifyInContext(functionSymbol, value_1, depth + 1, references);\n                            }\n                            finally {\n                                scope = oldScope;\n                            }\n                            return result_1;\n                        }\n                    }\n                    finally {\n                        calling.delete(functionSymbol);\n                    }\n                }\n                if (depth === 0) {\n                    // If depth is 0 we are evaluating the top level expression that is describing element\n                    // decorator. In this case, it is a decorator we don't understand, such as a custom\n                    // non-angular decorator, and we should just ignore it.\n                    return IGNORE;\n                }\n                return simplify({ __symbolic: 'error', message: 'Function call not supported', context: functionSymbol });\n            }\n            /**\n             * @param {?} expression\n             * @return {?}\n             */\n            function simplify(expression) {\n                if (isPrimitive(expression)) {\n                    return expression;\n                }\n                if (expression instanceof Array) {\n                    var /** @type {?} */ result_2 = [];\n                    for (var _i = 0, _a = (/** @type {?} */ (expression)); _i < _a.length; _i++) {\n                        var item = _a[_i];\n                        // Check for a spread expression\n                        if (item && item.__symbolic === 'spread') {\n                            // We call with references as 0 because we require the actual value and cannot\n                            // tolerate a reference here.\n                            var /** @type {?} */ spreadArray = simplifyInContext(context, item.expression, depth, 0);\n                            if (Array.isArray(spreadArray)) {\n                                for (var _b = 0, spreadArray_1 = spreadArray; _b < spreadArray_1.length; _b++) {\n                                    var spreadItem = spreadArray_1[_b];\n                                    result_2.push(spreadItem);\n                                }\n                                continue;\n                            }\n                        }\n                        var /** @type {?} */ value_2 = simplify(item);\n                        if (shouldIgnore(value_2)) {\n                            continue;\n                        }\n                        result_2.push(value_2);\n                    }\n                    return result_2;\n                }\n                if (expression instanceof StaticSymbol) {\n                    // Stop simplification at builtin symbols or if we are in a reference context and\n                    // the symbol doesn't have members.\n                    if (expression === self.injectionToken || self.conversionMap.has(expression) ||\n                        (references > 0 && !expression.members.length)) {\n                        return expression;\n                    }\n                    else {\n                        var /** @type {?} */ staticSymbol = expression;\n                        var /** @type {?} */ declarationValue = resolveReferenceValue(staticSymbol);\n                        if (declarationValue != null) {\n                            return simplifyInContext(staticSymbol, declarationValue, depth + 1, references);\n                        }\n                        else {\n                            return staticSymbol;\n                        }\n                    }\n                }\n                if (expression) {\n                    if (expression['__symbolic']) {\n                        var /** @type {?} */ staticSymbol = void 0;\n                        switch (expression['__symbolic']) {\n                            case 'binop':\n                                var /** @type {?} */ left = simplify(expression['left']);\n                                if (shouldIgnore(left))\n                                    return left;\n                                var /** @type {?} */ right = simplify(expression['right']);\n                                if (shouldIgnore(right))\n                                    return right;\n                                switch (expression['operator']) {\n                                    case '&&':\n                                        return left && right;\n                                    case '||':\n                                        return left || right;\n                                    case '|':\n                                        return left | right;\n                                    case '^':\n                                        return left ^ right;\n                                    case '&':\n                                        return left & right;\n                                    case '==':\n                                        return left == right;\n                                    case '!=':\n                                        return left != right;\n                                    case '===':\n                                        return left === right;\n                                    case '!==':\n                                        return left !== right;\n                                    case '<':\n                                        return left < right;\n                                    case '>':\n                                        return left > right;\n                                    case '<=':\n                                        return left <= right;\n                                    case '>=':\n                                        return left >= right;\n                                    case '<<':\n                                        return left << right;\n                                    case '>>':\n                                        return left >> right;\n                                    case '+':\n                                        return left + right;\n                                    case '-':\n                                        return left - right;\n                                    case '*':\n                                        return left * right;\n                                    case '/':\n                                        return left / right;\n                                    case '%':\n                                        return left % right;\n                                }\n                                return null;\n                            case 'if':\n                                var /** @type {?} */ condition = simplify(expression['condition']);\n                                return condition ? simplify(expression['thenExpression']) :\n                                    simplify(expression['elseExpression']);\n                            case 'pre':\n                                var /** @type {?} */ operand = simplify(expression['operand']);\n                                if (shouldIgnore(operand))\n                                    return operand;\n                                switch (expression['operator']) {\n                                    case '+':\n                                        return operand;\n                                    case '-':\n                                        return -operand;\n                                    case '!':\n                                        return !operand;\n                                    case '~':\n                                        return ~operand;\n                                }\n                                return null;\n                            case 'index':\n                                var /** @type {?} */ indexTarget = simplifyInContext(context, expression['expression'], depth, 0);\n                                var /** @type {?} */ index = simplifyInContext(context, expression['index'], depth, 0);\n                                if (indexTarget && isPrimitive(index))\n                                    return indexTarget[index];\n                                return null;\n                            case 'select':\n                                var /** @type {?} */ member = expression['member'];\n                                var /** @type {?} */ selectContext = context;\n                                var /** @type {?} */ selectTarget = simplify(expression['expression']);\n                                if (selectTarget instanceof StaticSymbol) {\n                                    var /** @type {?} */ members = selectTarget.members.concat(member);\n                                    selectContext =\n                                        self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                                    var /** @type {?} */ declarationValue = resolveReferenceValue(selectContext);\n                                    if (declarationValue != null) {\n                                        return simplifyInContext(selectContext, declarationValue, depth + 1, references);\n                                    }\n                                    else {\n                                        return selectContext;\n                                    }\n                                }\n                                if (selectTarget && isPrimitive(member))\n                                    return simplifyInContext(selectContext, selectTarget[member], depth + 1, references);\n                                return null;\n                            case 'reference':\n                                // Note: This only has to deal with variable references,\n                                // as symbol references have been converted into StaticSymbols already\n                                // in the StaticSymbolResolver!\n                                var /** @type {?} */ name_1 = expression['name'];\n                                var /** @type {?} */ localValue = scope.resolve(name_1);\n                                if (localValue != BindingScope.missing) {\n                                    return localValue;\n                                }\n                                break;\n                            case 'class':\n                                return context;\n                            case 'function':\n                                return context;\n                            case 'new':\n                            case 'call':\n                                // Determine if the function is a built-in conversion\n                                staticSymbol = simplifyInContext(context, expression['expression'], depth + 1, /* references */ 0);\n                                if (staticSymbol instanceof StaticSymbol) {\n                                    if (staticSymbol === self.injectionToken || staticSymbol === self.opaqueToken) {\n                                        // if somebody calls new InjectionToken, don't create an InjectionToken,\n                                        // but rather return the symbol to which the InjectionToken is assigned to.\n                                        // OpaqueToken is supported too as it is required by the language service to\n                                        // support v4 and prior versions of Angular.\n                                        return context;\n                                    }\n                                    var /** @type {?} */ argExpressions = expression['arguments'] || [];\n                                    var /** @type {?} */ converter = self.conversionMap.get(staticSymbol);\n                                    if (converter) {\n                                        var /** @type {?} */ args = argExpressions\n                                            .map(function (arg) { return simplifyInContext(context, arg, depth + 1, references); })\n                                            .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                                        return converter(context, args);\n                                    }\n                                    else {\n                                        // Determine if the function is one we can simplify.\n                                        var /** @type {?} */ targetFunction = resolveReferenceValue(staticSymbol);\n                                        return simplifyCall(staticSymbol, targetFunction, argExpressions);\n                                    }\n                                }\n                                return IGNORE;\n                            case 'error':\n                                var /** @type {?} */ message = produceErrorMessage(expression);\n                                if (expression['line']) {\n                                    message =\n                                        message + \" (position \" + (expression['line'] + 1) + \":\" + (expression['character'] + 1) + \" in the original .ts file)\";\n                                    self.reportError(positionalError(message, context.filePath, expression['line'], expression['character']), context);\n                                }\n                                else {\n                                    self.reportError(new Error(message), context);\n                                }\n                                return IGNORE;\n                            case 'ignore':\n                                return expression;\n                        }\n                        return null;\n                    }\n                    return mapStringMap(expression, function (value, name) {\n                        if (REFERENCE_SET.has(name)) {\n                            if (name === USE_VALUE && PROVIDE in expression) {\n                                // If this is a provider expression, check for special tokens that need the value\n                                // during analysis.\n                                var /** @type {?} */ provide = simplify(expression.provide);\n                                if (provide === self.ROUTES || provide == self.ANALYZE_FOR_ENTRY_COMPONENTS) {\n                                    return simplify(value);\n                                }\n                            }\n                            return simplifyInContext(context, value, depth, references + 1);\n                        }\n                        return simplify(value);\n                    });\n                }\n                return IGNORE;\n            }\n            try {\n                return simplify(value);\n            }\n            catch (/** @type {?} */ e) {\n                var /** @type {?} */ members = context.members.length ? \".\" + context.members.join('.') : '';\n                var /** @type {?} */ message = e.message + \", resolving symbol \" + context.name + members + \" in \" + context.filePath;\n                if (e.fileName) {\n                    throw positionalError(message, e.fileName, e.line, e.column);\n                }\n                throw syntaxError(message);\n            }\n        }\n        var /** @type {?} */ recordedSimplifyInContext = function (context, value) {\n            try {\n                return simplifyInContext(context, value, 0, 0);\n            }\n            catch (/** @type {?} */ e) {\n                _this.reportError(e, context);\n            }\n        };\n        var /** @type {?} */ result = this.errorRecorder ? recordedSimplifyInContext(context, value) :\n            simplifyInContext(context, value, 0, 0);\n        if (shouldIgnore(result)) {\n            return undefined;\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.getTypeMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n        return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n            { __symbolic: 'class' };\n    };\n    return StaticReflector;\n}());\n/**\n * @param {?} error\n * @return {?}\n */\nfunction expandedMessage(error) {\n    switch (error.message) {\n        case 'Reference to non-exported class':\n            if (error.context && error.context.className) {\n                return \"Reference to a non-exported class \" + error.context.className + \". Consider exporting the class\";\n            }\n            break;\n        case 'Variable not initialized':\n            return 'Only initialized variables and constants can be referenced because the value of this variable is needed by the template compiler';\n        case 'Destructuring not supported':\n            return 'Referencing an exported destructured variable or constant is not supported by the template compiler. Consider simplifying this to avoid destructuring';\n        case 'Could not resolve type':\n            if (error.context && error.context.typeName) {\n                return \"Could not resolve type \" + error.context.typeName;\n            }\n            break;\n        case 'Function call not supported':\n            var /** @type {?} */ prefix = error.context && error.context.name ? \"Calling function '\" + error.context.name + \"', f\" : 'F';\n            return prefix +\n                'unction calls are not supported. Consider replacing the function or lambda with a reference to an exported function';\n        case 'Reference to a local symbol':\n            if (error.context && error.context.name) {\n                return \"Reference to a local (non-exported) symbol '\" + error.context.name + \"'. Consider exporting the symbol\";\n            }\n            break;\n    }\n    return error.message;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction produceErrorMessage(error) {\n    return \"Error encountered resolving symbol values statically. \" + expandedMessage(error);\n}\n/**\n * @param {?} input\n * @param {?} transform\n * @return {?}\n */\nfunction mapStringMap(input, transform) {\n    if (!input)\n        return {};\n    var /** @type {?} */ result = {};\n    Object.keys(input).forEach(function (key) {\n        var /** @type {?} */ value = transform(input[key], key);\n        if (!shouldIgnore(value)) {\n            if (HIDDEN_KEY.test(key)) {\n                Object.defineProperty(result, key, { enumerable: false, configurable: true, value: value });\n            }\n            else {\n                result[key] = value;\n            }\n        }\n    });\n    return result;\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPrimitive(o) {\n    return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\n/**\n * @abstract\n */\nvar BindingScope = (function () {\n    function BindingScope() {\n    }\n    /**\n     * @return {?}\n     */\n    BindingScope.build = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ current = new Map();\n        return {\n            define: function (name, value) {\n                current.set(name, value);\n                return this;\n            },\n            done: function () {\n                return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n            }\n        };\n    };\n    BindingScope.missing = {};\n    BindingScope.empty = { resolve: function (name) { return BindingScope.missing; } };\n    return BindingScope;\n}());\nvar PopulatedScope = (function (_super) {\n    __extends(PopulatedScope, _super);\n    function PopulatedScope(bindings) {\n        var _this = _super.call(this) || this;\n        _this.bindings = bindings;\n        return _this;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PopulatedScope.prototype.resolve = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.bindings.has(name) ? this.bindings.get(name) : BindingScope.missing;\n    };\n    return PopulatedScope;\n}(BindingScope));\n/**\n * @param {?} message\n * @param {?} fileName\n * @param {?} line\n * @param {?} column\n * @return {?}\n */\nfunction positionalError(message, fileName, line, column) {\n    var /** @type {?} */ result = new Error(message);\n    (/** @type {?} */ (result)).fileName = fileName;\n    (/** @type {?} */ (result)).line = line;\n    (/** @type {?} */ (result)).column = column;\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ResolvedStaticSymbol = (function () {\n    function ResolvedStaticSymbol(symbol, metadata) {\n        this.symbol = symbol;\n        this.metadata = metadata;\n    }\n    return ResolvedStaticSymbol;\n}());\n/**\n * The host of the SymbolResolverHost disconnects the implementation from TypeScript / other\n * language\n * services and from underlying file systems.\n * @record\n */\n\nvar SUPPORTED_SCHEMA_VERSION = 4;\n/**\n * This class is responsible for loading metadata per symbol,\n * and normalizing references between symbols.\n *\n * Internally, it only uses symbols without members,\n * and deduces the values for symbols with members based\n * on these symbols.\n */\nvar StaticSymbolResolver = (function () {\n    function StaticSymbolResolver(host, staticSymbolCache, summaryResolver, errorRecorder) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryResolver = summaryResolver;\n        this.errorRecorder = errorRecorder;\n        this.metadataCache = new Map();\n        this.resolvedSymbols = new Map();\n        this.resolvedFilePaths = new Set();\n        this.importAs = new Map();\n        this.symbolResourcePaths = new Map();\n        this.symbolFromFile = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveSymbol = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        if (staticSymbol.members.length > 0) {\n            return /** @type {?} */ ((this._resolveSymbolMembers(staticSymbol)));\n        }\n        // Note: always ask for a summary first,\n        // as we might have read shallow metadata via a .d.ts file\n        // for the symbol.\n        var /** @type {?} */ resultFromSummary = /** @type {?} */ ((this._resolveSymbolFromSummary(staticSymbol)));\n        if (resultFromSummary) {\n            return resultFromSummary;\n        }\n        var /** @type {?} */ resultFromCache = this.resolvedSymbols.get(staticSymbol);\n        if (resultFromCache) {\n            return resultFromCache;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        this._createSymbolsOf(staticSymbol.filePath);\n        return /** @type {?} */ ((this.resolvedSymbols.get(staticSymbol)));\n    };\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param staticSymbol the symbol for which to generate a import symbol\n     */\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getImportAs = /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        if (staticSymbol.members.length) {\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(baseImportAs.filePath, baseImportAs.name, staticSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ summarizedFileName = stripSummaryForJitFileSuffix(staticSymbol.filePath);\n        if (summarizedFileName !== staticSymbol.filePath) {\n            var /** @type {?} */ summarizedName = stripSummaryForJitNameSuffix(staticSymbol.name);\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(summarizedFileName, summarizedName, staticSymbol.members);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(summaryForJitFileName(baseImportAs.filePath), summaryForJitName(baseImportAs.name), baseSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ result = this.summaryResolver.getImportAs(staticSymbol);\n        if (!result) {\n            result = /** @type {?} */ ((this.importAs.get(staticSymbol)));\n        }\n        return result;\n    };\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     */\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getResourcePath = /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        return this.symbolResourcePaths.get(staticSymbol) || staticSymbol.filePath;\n    };\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     */\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getTypeArity = /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        // If the file is a factory/ngsummary file, don't resolve the symbol as doing so would\n        // cause the metadata for an factory/ngsummary file to be loaded which doesn't exist.\n        // All references to generated classes must include the correct arity whenever\n        // generating code.\n        if (isGeneratedFile(staticSymbol.filePath)) {\n            return null;\n        }\n        var /** @type {?} */ resolvedSymbol = this.resolveSymbol(staticSymbol);\n        while (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            resolvedSymbol = this.resolveSymbol(resolvedSymbol.metadata);\n        }\n        return (resolvedSymbol && resolvedSymbol.metadata && resolvedSymbol.metadata.arity) || null;\n    };\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     */\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.fileNameToModuleName = /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    function (importedFilePath, containingFilePath) {\n        return this.summaryResolver.getKnownModuleName(importedFilePath) ||\n            this.knownFileNameToModuleNames.get(importedFilePath) ||\n            this.host.fileNameToModuleName(importedFilePath, containingFilePath);\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getKnownModuleName = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        return this.knownFileNameToModuleNames.get(filePath) || null;\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordImportAs = /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        this.importAs.set(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordModuleNameForFileName = /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    function (fileName, moduleName) {\n        this.knownFileNameToModuleNames.set(fileName, moduleName);\n    };\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param fileName the file to invalidate\n     */\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.invalidateFile = /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    function (fileName) {\n        this.metadataCache.delete(fileName);\n        this.resolvedFilePaths.delete(fileName);\n        var /** @type {?} */ symbols = this.symbolFromFile.get(fileName);\n        if (symbols) {\n            this.symbolFromFile.delete(fileName);\n            for (var _i = 0, symbols_1 = symbols; _i < symbols_1.length; _i++) {\n                var symbol = symbols_1[_i];\n                this.resolvedSymbols.delete(symbol);\n                this.importAs.delete(symbol);\n                this.symbolResourcePaths.delete(symbol);\n            }\n        }\n    };\n    /* @internal */\n    /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.ignoreErrorsFor = /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    function (cb) {\n        var /** @type {?} */ recorder = this.errorRecorder;\n        this.errorRecorder = function () { };\n        try {\n            return cb();\n        }\n        finally {\n            this.errorRecorder = recorder;\n        }\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolMembers = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ members = staticSymbol.members;\n        var /** @type {?} */ baseResolvedSymbol = this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name));\n        if (!baseResolvedSymbol) {\n            return null;\n        }\n        var /** @type {?} */ baseMetadata = baseResolvedSymbol.metadata;\n        if (baseMetadata instanceof StaticSymbol) {\n            return new ResolvedStaticSymbol(staticSymbol, this.getStaticSymbol(baseMetadata.filePath, baseMetadata.name, members));\n        }\n        else if (baseMetadata && baseMetadata.__symbolic === 'class') {\n            if (baseMetadata.statics && members.length === 1) {\n                return new ResolvedStaticSymbol(staticSymbol, baseMetadata.statics[members[0]]);\n            }\n        }\n        else {\n            var /** @type {?} */ value = baseMetadata;\n            for (var /** @type {?} */ i = 0; i < members.length && value; i++) {\n                value = value[members[i]];\n            }\n            return new ResolvedStaticSymbol(staticSymbol, value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolFromSummary = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(staticSymbol);\n        return summary ? new ResolvedStaticSymbol(staticSymbol, summary.metadata) : null;\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     * @param members a symbol for a static member of the named type\n     */\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getStaticSymbol = /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        return this.staticSymbolCache.get(declarationFile, name, members);\n    };\n    /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param filePath the absolute path to examine for decorators.\n     * @returns true if any class in the file has a decorator.\n     */\n    /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param {?} filePath the absolute path to examine for decorators.\n     * @return {?} true if any class in the file has a decorator.\n     */\n    StaticSymbolResolver.prototype.hasDecorators = /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param {?} filePath the absolute path to examine for decorators.\n     * @return {?} true if any class in the file has a decorator.\n     */\n    function (filePath) {\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['metadata']) {\n            return Object.keys(metadata['metadata']).some(function (metadataKey) {\n                var /** @type {?} */ entry = metadata['metadata'][metadataKey];\n                return entry && entry.__symbolic === 'class' && entry.decorators;\n            });\n        }\n        return false;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var /** @type {?} */ summarySymbols = this.summaryResolver.getSymbolsOf(filePath);\n        if (summarySymbols) {\n            return summarySymbols;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files, but `summaryResolver.isLibraryFile` returns true.\n        this._createSymbolsOf(filePath);\n        var /** @type {?} */ metadataSymbols = [];\n        this.resolvedSymbols.forEach(function (resolvedSymbol) {\n            if (resolvedSymbol.symbol.filePath === filePath) {\n                metadataSymbols.push(resolvedSymbol.symbol);\n            }\n        });\n        return metadataSymbols;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._createSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var _this = this;\n        if (this.resolvedFilePaths.has(filePath)) {\n            return;\n        }\n        this.resolvedFilePaths.add(filePath);\n        var /** @type {?} */ resolvedSymbols = [];\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['importAs']) {\n            // Index bundle indices should use the importAs module name defined\n            // in the bundle.\n            this.knownFileNameToModuleNames.set(filePath, metadata['importAs']);\n        }\n        // handle the symbols in one of the re-export location\n        if (metadata['exports']) {\n            var _loop_1 = function (moduleExport) {\n                // handle the symbols in the list of explicitly re-exported symbols.\n                if (moduleExport.export) {\n                    moduleExport.export.forEach(function (exportSymbol) {\n                        var /** @type {?} */ symbolName;\n                        if (typeof exportSymbol === 'string') {\n                            symbolName = exportSymbol;\n                        }\n                        else {\n                            symbolName = exportSymbol.as;\n                        }\n                        symbolName = unescapeIdentifier(symbolName);\n                        var /** @type {?} */ symName = symbolName;\n                        if (typeof exportSymbol !== 'string') {\n                            symName = unescapeIdentifier(exportSymbol.name);\n                        }\n                        var /** @type {?} */ resolvedModule = _this.resolveModule(moduleExport.from, filePath);\n                        if (resolvedModule) {\n                            var /** @type {?} */ targetSymbol = _this.getStaticSymbol(resolvedModule, symName);\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, symbolName);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        }\n                    });\n                }\n                else {\n                    // handle the symbols via export * directives.\n                    var /** @type {?} */ resolvedModule = this_1.resolveModule(moduleExport.from, filePath);\n                    if (resolvedModule) {\n                        var /** @type {?} */ nestedExports = this_1.getSymbolsOf(resolvedModule);\n                        nestedExports.forEach(function (targetSymbol) {\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, targetSymbol.name);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        });\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var _i = 0, _a = metadata['exports']; _i < _a.length; _i++) {\n                var moduleExport = _a[_i];\n                _loop_1(moduleExport);\n            }\n        }\n        // handle the actual metadata. Has to be after the exports\n        // as there migth be collisions in the names, and we want the symbols\n        // of the current module to win ofter reexports.\n        if (metadata['metadata']) {\n            // handle direct declarations of the symbol\n            var /** @type {?} */ topLevelSymbolNames_1 = new Set(Object.keys(metadata['metadata']).map(unescapeIdentifier));\n            var /** @type {?} */ origins_1 = metadata['origins'] || {};\n            Object.keys(metadata['metadata']).forEach(function (metadataKey) {\n                var /** @type {?} */ symbolMeta = metadata['metadata'][metadataKey];\n                var /** @type {?} */ name = unescapeIdentifier(metadataKey);\n                var /** @type {?} */ symbol = _this.getStaticSymbol(filePath, name);\n                var /** @type {?} */ origin = origins_1.hasOwnProperty(metadataKey) && origins_1[metadataKey];\n                if (origin) {\n                    // If the symbol is from a bundled index, use the declaration location of the\n                    // symbol so relative references (such as './my.html') will be calculated\n                    // correctly.\n                    var /** @type {?} */ originFilePath = _this.resolveModule(origin, filePath);\n                    if (!originFilePath) {\n                        _this.reportError(new Error(\"Couldn't resolve original symbol for \" + origin + \" from \" + filePath));\n                    }\n                    else {\n                        _this.symbolResourcePaths.set(symbol, originFilePath);\n                    }\n                }\n                resolvedSymbols.push(_this.createResolvedSymbol(symbol, filePath, topLevelSymbolNames_1, symbolMeta));\n            });\n        }\n        resolvedSymbols.forEach(function (resolvedSymbol) { return _this.resolvedSymbols.set(resolvedSymbol.symbol, resolvedSymbol); });\n        this.symbolFromFile.set(filePath, resolvedSymbols.map(function (resolvedSymbol) { return resolvedSymbol.symbol; }));\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createResolvedSymbol = /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (sourceSymbol, topLevelPath, topLevelSymbolNames, metadata) {\n        // For classes that don't have Angular summaries / metadata,\n        // we only keep their arity, but nothing else\n        // (e.g. their constructor parameters).\n        // We do this to prevent introducing deep imports\n        // as we didn't generate .ngfactory.ts files with proper reexports.\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) && metadata &&\n            metadata['__symbolic'] === 'class') {\n            var /** @type {?} */ transformedMeta_1 = { __symbolic: 'class', arity: metadata.arity };\n            return new ResolvedStaticSymbol(sourceSymbol, transformedMeta_1);\n        }\n        var /** @type {?} */ self = this;\n        var ReferenceTransformer = (function (_super) {\n            __extends(ReferenceTransformer, _super);\n            function ReferenceTransformer() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            ReferenceTransformer.prototype.visitStringMap = /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            function (map, functionParams) {\n                var /** @type {?} */ symbolic = map['__symbolic'];\n                if (symbolic === 'function') {\n                    var /** @type {?} */ oldLen = functionParams.length;\n                    functionParams.push.apply(functionParams, (map['parameters'] || []));\n                    var /** @type {?} */ result = _super.prototype.visitStringMap.call(this, map, functionParams);\n                    functionParams.length = oldLen;\n                    return result;\n                }\n                else if (symbolic === 'reference') {\n                    var /** @type {?} */ module = map['module'];\n                    var /** @type {?} */ name_1 = map['name'] ? unescapeIdentifier(map['name']) : map['name'];\n                    if (!name_1) {\n                        return null;\n                    }\n                    var /** @type {?} */ filePath = void 0;\n                    if (module) {\n                        filePath = /** @type {?} */ ((self.resolveModule(module, sourceSymbol.filePath)));\n                        if (!filePath) {\n                            return {\n                                __symbolic: 'error',\n                                message: \"Could not resolve \" + module + \" relative to \" + sourceSymbol.filePath + \".\"\n                            };\n                        }\n                        return self.getStaticSymbol(filePath, name_1);\n                    }\n                    else if (functionParams.indexOf(name_1) >= 0) {\n                        // reference to a function parameter\n                        return { __symbolic: 'reference', name: name_1 };\n                    }\n                    else {\n                        if (topLevelSymbolNames.has(name_1)) {\n                            return self.getStaticSymbol(topLevelPath, name_1);\n                        }\n                        // ambient value\n                        null;\n                    }\n                }\n                else {\n                    return _super.prototype.visitStringMap.call(this, map, functionParams);\n                }\n            };\n            return ReferenceTransformer;\n        }(ValueTransformer));\n        var /** @type {?} */ transformedMeta = visitValue(metadata, new ReferenceTransformer(), []);\n        if (transformedMeta instanceof StaticSymbol) {\n            return this.createExport(sourceSymbol, transformedMeta);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createExport = /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) &&\n            this.summaryResolver.isLibraryFile(targetSymbol.filePath)) {\n            // This case is for an ng library importing symbols from a plain ts library\n            // transitively.\n            // Note: We rely on the fact that we discover symbols in the direction\n            // from source files to library files\n            this.importAs.set(targetSymbol, this.getImportAs(sourceSymbol) || sourceSymbol);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.reportError = /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getModuleMetadata = /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    function (module) {\n        var /** @type {?} */ moduleMetadata = this.metadataCache.get(module);\n        if (!moduleMetadata) {\n            var /** @type {?} */ moduleMetadatas = this.host.getMetadataFor(module);\n            if (moduleMetadatas) {\n                var /** @type {?} */ maxVersion_1 = -1;\n                moduleMetadatas.forEach(function (md) {\n                    if (md['version'] > maxVersion_1) {\n                        maxVersion_1 = md['version'];\n                        moduleMetadata = md;\n                    }\n                });\n            }\n            if (!moduleMetadata) {\n                moduleMetadata =\n                    { __symbolic: 'module', version: SUPPORTED_SCHEMA_VERSION, module: module, metadata: {} };\n            }\n            if (moduleMetadata['version'] != SUPPORTED_SCHEMA_VERSION) {\n                var /** @type {?} */ errorMessage = moduleMetadata['version'] == 2 ?\n                    \"Unsupported metadata version \" + moduleMetadata['version'] + \" for module \" + module + \". This module should be compiled with a newer version of ngc\" :\n                    \"Metadata version mismatch for module \" + module + \", found version \" + moduleMetadata['version'] + \", expected \" + SUPPORTED_SCHEMA_VERSION;\n                this.reportError(new Error(errorMessage));\n            }\n            this.metadataCache.set(module, moduleMetadata);\n        }\n        return moduleMetadata;\n    };\n    /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolByModule = /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (module, symbolName, containingFile) {\n        var /** @type {?} */ filePath = this.resolveModule(module, containingFile);\n        if (!filePath) {\n            this.reportError(new Error(\"Could not resolve module \" + module + (containingFile ? \" relative to $ {\\n            containingFile\\n          } \" : '')));\n            return this.getStaticSymbol(\"ERROR:\" + module, symbolName);\n        }\n        return this.getStaticSymbol(filePath, symbolName);\n    };\n    /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveModule = /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (module, containingFile) {\n        try {\n            return this.host.moduleNameToFileName(module, containingFile);\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Could not resolve module '\" + module + \"' relative to file \" + containingFile);\n            this.reportError(e, undefined, containingFile);\n        }\n        return null;\n    };\n    return StaticSymbolResolver;\n}());\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction unescapeIdentifier(identifier) {\n    return identifier.startsWith('___') ? identifier.substr(1) : identifier;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\nvar AotSummaryResolver = (function () {\n    function AotSummaryResolver(host, staticSymbolCache) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryCache = new Map();\n        this.loadedFilePaths = new Map();\n        this.importAs = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.isLibraryFile = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        // Note: We need to strip the .ngfactory. file path,\n        // so this method also works for generated files\n        // (for which host.isSourceFile will always return false).\n        return !this.host.isSourceFile(stripGeneratedFileSuffix(filePath));\n    };\n    /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.toSummaryFileName = /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    function (filePath, referringSrcFileName) {\n        return this.host.toSummaryFileName(filePath, referringSrcFileName);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.fromSummaryFileName = /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    function (fileName, referringLibFileName) {\n        return this.host.fromSummaryFileName(fileName, referringLibFileName);\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.resolveSummary = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        var /** @type {?} */ summary = this.summaryCache.get(staticSymbol);\n        if (!summary) {\n            this._loadSummaryFile(staticSymbol.filePath);\n            summary = /** @type {?} */ ((this.summaryCache.get(staticSymbol)));\n        }\n        return summary || null;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        if (this._loadSummaryFile(filePath)) {\n            return Array.from(this.summaryCache.keys()).filter(function (symbol) { return symbol.filePath === filePath; });\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getImportAs = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        return /** @type {?} */ ((this.importAs.get(staticSymbol)));\n    };\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     */\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getKnownModuleName = /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @return {?}\n     */\n    function (importedFilePath) {\n        return this.knownFileNameToModuleNames.get(importedFilePath) || null;\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) { this.summaryCache.set(summary.symbol, summary); };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype._loadSummaryFile = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var _this = this;\n        var /** @type {?} */ hasSummary = this.loadedFilePaths.get(filePath);\n        if (hasSummary != null) {\n            return hasSummary;\n        }\n        var /** @type {?} */ json = null;\n        if (this.isLibraryFile(filePath)) {\n            var /** @type {?} */ summaryFilePath = summaryFileName(filePath);\n            try {\n                json = this.host.loadSummary(summaryFilePath);\n            }\n            catch (/** @type {?} */ e) {\n                console.error(\"Error loading summary file \" + summaryFilePath);\n                throw e;\n            }\n        }\n        hasSummary = json != null;\n        this.loadedFilePaths.set(filePath, hasSummary);\n        if (json) {\n            var _a = deserializeSummaries(this.staticSymbolCache, this, filePath, json), moduleName = _a.moduleName, summaries = _a.summaries, importAs = _a.importAs;\n            summaries.forEach(function (summary) { return _this.summaryCache.set(summary.symbol, summary); });\n            if (moduleName) {\n                this.knownFileNameToModuleNames.set(filePath, moduleName);\n            }\n            importAs.forEach(function (importAs) {\n                _this.importAs.set(importAs.symbol, _this.staticSymbolCache.get(ngfactoryFilePath(filePath), importAs.importAs));\n            });\n        }\n        return hasSummary;\n    };\n    return AotSummaryResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} host\n * @return {?}\n */\nfunction createAotUrlResolver(host) {\n    return {\n        resolve: function (basePath, url) {\n            var /** @type {?} */ filePath = host.resourceNameToFileName(url, basePath);\n            if (!filePath) {\n                throw syntaxError(\"Couldn't resolve resource \" + url + \" from \" + basePath);\n            }\n            return filePath;\n        }\n    };\n}\n/**\n * Creates a new AotCompiler based on options and a host.\n * @param {?} compilerHost\n * @param {?} options\n * @return {?}\n */\nfunction createAotCompiler(compilerHost, options) {\n    var /** @type {?} */ translations = options.translations || '';\n    var /** @type {?} */ urlResolver = createAotUrlResolver(compilerHost);\n    var /** @type {?} */ symbolCache = new StaticSymbolCache();\n    var /** @type {?} */ summaryResolver = new AotSummaryResolver(compilerHost, symbolCache);\n    var /** @type {?} */ symbolResolver = new StaticSymbolResolver(compilerHost, symbolCache, summaryResolver);\n    var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, symbolResolver);\n    var /** @type {?} */ htmlParser = new I18NHtmlParser(new HtmlParser(), translations, options.i18nFormat, options.missingTranslation, console);\n    var /** @type {?} */ config = new CompilerConfig({\n        defaultEncapsulation: ViewEncapsulation.Emulated,\n        useJit: false,\n        enableLegacyTemplate: options.enableLegacyTemplate === true,\n        missingTranslation: options.missingTranslation,\n        preserveWhitespaces: options.preserveWhitespaces,\n        strictInjectionParameters: options.strictInjectionParameters,\n    });\n    var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return compilerHost.loadResource(url); } }, urlResolver, htmlParser, config);\n    var /** @type {?} */ expressionParser = new Parser(new Lexer());\n    var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n    var /** @type {?} */ tmplParser = new TemplateParser(config, staticReflector, expressionParser, elementSchemaRegistry, htmlParser, console, []);\n    var /** @type {?} */ resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n    // TODO(vicb): do not pass options.i18nFormat here\n    var /** @type {?} */ viewCompiler = new ViewCompiler(staticReflector);\n    var /** @type {?} */ typeCheckCompiler = new TypeCheckCompiler(options, staticReflector);\n    var /** @type {?} */ compiler = new AotCompiler(config, options, compilerHost, staticReflector, resolver, tmplParser, new StyleCompiler(urlResolver), viewCompiler, typeCheckCompiler, new NgModuleCompiler(staticReflector), new TypeScriptEmitter(), summaryResolver, symbolResolver);\n    return { compiler: compiler, reflector: staticReflector };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\n/**\n * @abstract\n */\nvar SummaryResolver = (function () {\n    function SummaryResolver() {\n    }\n    return SummaryResolver;\n}());\nvar JitSummaryResolver = (function () {\n    function JitSummaryResolver() {\n        this._summaries = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.isLibraryFile = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.toSummaryFileName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return fileName; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.fromSummaryFileName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return fileName; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.resolveSummary = /**\n     * @param {?} reference\n     * @return {?}\n     */\n    function (reference) {\n        return this._summaries.get(reference) || null;\n    };\n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getSymbolsOf = /**\n     * @return {?}\n     */\n    function () { return []; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getImportAs = /**\n     * @param {?} reference\n     * @return {?}\n     */\n    function (reference) { return reference; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getKnownModuleName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return null; };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) { this._summaries.set(summary.symbol, summary); };\n    return JitSummaryResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} statements\n * @param {?} reflector\n * @return {?}\n */\nfunction interpretStatements(statements, reflector) {\n    var /** @type {?} */ ctx = new _ExecutionContext(null, null, null, new Map());\n    var /** @type {?} */ visitor = new StatementInterpreter(reflector);\n    visitor.visitAllStatements(statements, ctx);\n    var /** @type {?} */ result = {};\n    ctx.exports.forEach(function (exportName) { result[exportName] = ctx.vars.get(exportName); });\n    return result;\n}\n/**\n * @param {?} varNames\n * @param {?} varValues\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n    var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n    for (var /** @type {?} */ i = 0; i < varNames.length; i++) {\n        childCtx.vars.set(varNames[i], varValues[i]);\n    }\n    var /** @type {?} */ result = visitor.visitAllStatements(statements, childCtx);\n    return result ? result.value : null;\n}\nvar _ExecutionContext = (function () {\n    function _ExecutionContext(parent, instance, className, vars) {\n        this.parent = parent;\n        this.instance = instance;\n        this.className = className;\n        this.vars = vars;\n        this.exports = [];\n    }\n    /**\n     * @return {?}\n     */\n    _ExecutionContext.prototype.createChildWihtLocalVars = /**\n     * @return {?}\n     */\n    function () {\n        return new _ExecutionContext(this, this.instance, this.className, new Map());\n    };\n    return _ExecutionContext;\n}());\nvar ReturnValue = (function () {\n    function ReturnValue(value) {\n        this.value = value;\n    }\n    return ReturnValue;\n}());\n/**\n * @param {?} _classStmt\n * @param {?} _ctx\n * @param {?} _visitor\n * @return {?}\n */\nfunction createDynamicClass(_classStmt, _ctx, _visitor) {\n    var /** @type {?} */ propertyDescriptors = {};\n    _classStmt.getters.forEach(function (getter) {\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[getter.name] = {\n            configurable: false,\n            get: function () {\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    _classStmt.methods.forEach(function (method) {\n        var /** @type {?} */ paramNames = method.params.map(function (param) { return param.name; });\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[/** @type {?} */ ((method.name))] = {\n            writable: false,\n            configurable: false,\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    var /** @type {?} */ ctorParamNames = _classStmt.constructorMethod.params.map(function (param) { return param.name; });\n    // Note: use `function` instead of arrow function to capture `this`\n    var /** @type {?} */ ctor = function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n        _classStmt.fields.forEach(function (field) { _this[field.name] = undefined; });\n        _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n    };\n    var /** @type {?} */ superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n    ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n    return ctor;\n}\nvar StatementInterpreter = (function () {\n    function StatementInterpreter(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    StatementInterpreter.prototype.debugAst = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) { return debugOutputAstAsTypeScript(ast); };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.vars.set(stmt.name, stmt.value.visitExpression(this, ctx));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(expr.name)) {\n                currCtx.vars.set(expr.name, value);\n                return value;\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + expr.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    return ctx.instance.__proto__;\n                case BuiltinVar.This:\n                    return ctx.instance;\n                case BuiltinVar.CatchError:\n                    varName = CATCH_ERROR_VAR$2;\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = CATCH_STACK_VAR$2;\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(varName)) {\n                return currCtx.vars.get(varName);\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + varName);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ index = expr.index.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[index] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[expr.name] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeMethodExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ args = this.visitAllExpressions(expr.args, ctx);\n        var /** @type {?} */ result;\n        if (expr.builtin != null) {\n            switch (expr.builtin) {\n                case BuiltinMethod.ConcatArray:\n                    result = receiver.concat.apply(receiver, args);\n                    break;\n                case BuiltinMethod.SubscribeObservable:\n                    result = receiver.subscribe({ next: args[0] });\n                    break;\n                case BuiltinMethod.Bind:\n                    result = receiver.bind.apply(receiver, args);\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin method \" + expr.builtin);\n            }\n        }\n        else {\n            result = receiver[/** @type {?} */ ((expr.name))].apply(receiver, args);\n        }\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(stmt.args, ctx);\n        var /** @type {?} */ fnExpr = stmt.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n            return null;\n        }\n        else {\n            var /** @type {?} */ fn$$1 = stmt.fn.visitExpression(this, ctx);\n            return fn$$1.apply(null, args);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        return new ReturnValue(stmt.value.visitExpression(this, ctx));\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ clazz = createDynamicClass(stmt, ctx, this);\n        ctx.vars.set(stmt.name, clazz);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        return stmt.expr.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ condition = stmt.condition.visitExpression(this, ctx);\n        if (condition) {\n            return this.visitAllStatements(stmt.trueCase, ctx);\n        }\n        else if (stmt.falseCase != null) {\n            return this.visitAllStatements(stmt.falseCase, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        try {\n            return this.visitAllStatements(stmt.bodyStmts, ctx);\n        }\n        catch (/** @type {?} */ e) {\n            var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n            childCtx.vars.set(CATCH_ERROR_VAR$2, e);\n            childCtx.vars.set(CATCH_STACK_VAR$2, e.stack);\n            return this.visitAllStatements(stmt.catchStmts, childCtx);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        throw stmt.error.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    function (stmt, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(ast.args, ctx);\n        var /** @type {?} */ clazz = ast.classExpr.visitExpression(this, ctx);\n        return new (clazz.bind.apply(clazz, [void 0].concat(args)))();\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) { return ast.value; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return this.reflector.resolveExternalReference(ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.condition.visitExpression(this, ctx)) {\n            return ast.trueCase.visitExpression(this, ctx);\n        }\n        else if (ast.falseCase != null) {\n            return ast.falseCase.visitExpression(this, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return !ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return ast.value.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ paramNames = ast.params.map(function (param) { return param.name; });\n        return _declareFn(paramNames, ast.statements, ctx, this);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ paramNames = stmt.params.map(function (param) { return param.name; });\n        ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ lhs = function () { return ast.lhs.visitExpression(_this, ctx); };\n        var /** @type {?} */ rhs = function () { return ast.rhs.visitExpression(_this, ctx); };\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                return lhs() == rhs();\n            case BinaryOperator.Identical:\n                return lhs() === rhs();\n            case BinaryOperator.NotEquals:\n                return lhs() != rhs();\n            case BinaryOperator.NotIdentical:\n                return lhs() !== rhs();\n            case BinaryOperator.And:\n                return lhs() && rhs();\n            case BinaryOperator.Or:\n                return lhs() || rhs();\n            case BinaryOperator.Plus:\n                return lhs() + rhs();\n            case BinaryOperator.Minus:\n                return lhs() - rhs();\n            case BinaryOperator.Divide:\n                return lhs() / rhs();\n            case BinaryOperator.Multiply:\n                return lhs() * rhs();\n            case BinaryOperator.Modulo:\n                return lhs() % rhs();\n            case BinaryOperator.Lower:\n                return lhs() < rhs();\n            case BinaryOperator.LowerEquals:\n                return lhs() <= rhs();\n            case BinaryOperator.Bigger:\n                return lhs() > rhs();\n            case BinaryOperator.BiggerEquals:\n                return lhs() >= rhs();\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        result = receiver[ast.name];\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ prop = ast.index.visitExpression(this, ctx);\n        return receiver[prop];\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return this.visitAllExpressions(ast.entries, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        ast.entries.forEach(function (entry) { return result[entry.key] = entry.value.visitExpression(_this, ctx); });\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ values = this.visitAllExpressions(ast.parts, context);\n        return values[values.length - 1];\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllExpressions = /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expressions, ctx) {\n        var _this = this;\n        return expressions.map(function (expr) { return expr.visitExpression(_this, ctx); });\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllStatements = /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (statements, ctx) {\n        for (var /** @type {?} */ i = 0; i < statements.length; i++) {\n            var /** @type {?} */ stmt = statements[i];\n            var /** @type {?} */ val = stmt.visitStatement(this, ctx);\n            if (val instanceof ReturnValue) {\n                return val;\n            }\n        }\n        return null;\n    };\n    return StatementInterpreter;\n}());\n/**\n * @param {?} varNames\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _declareFn(varNames, statements, ctx, visitor) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n    };\n}\nvar CATCH_ERROR_VAR$2 = 'error';\nvar CATCH_STACK_VAR$2 = 'stack';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar AbstractJsEmitterVisitor = (function (_super) {\n    __extends(AbstractJsEmitterVisitor, _super);\n    function AbstractJsEmitterVisitor() {\n        return _super.call(this, false) || this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        this._visitClassConstructor(stmt, ctx);\n        if (stmt.parent != null) {\n            ctx.print(stmt, stmt.name + \".prototype = Object.create(\");\n            stmt.parent.visitExpression(this, ctx);\n            ctx.println(stmt, \".prototype);\");\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(stmt, getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(stmt, method, ctx); });\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassConstructor = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        if (stmt.constructorMethod != null) {\n            this._visitParams(stmt.constructorMethod.params, ctx);\n        }\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (stmt.constructorMethod != null) {\n            if (stmt.constructorMethod.body.length > 0) {\n                ctx.println(stmt, \"var self = this;\");\n                this.visitAllStatements(stmt.constructorMethod.body, ctx);\n            }\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassGetter = /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, getter, ctx) {\n        ctx.println(stmt, \"Object.defineProperty(\" + stmt.name + \".prototype, '\" + getter.name + \"', { get: function() {\");\n        ctx.incIndent();\n        if (getter.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(getter.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}});\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassMethod = /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, method, ctx) {\n        ctx.print(stmt, stmt.name + \".prototype.\" + method.name + \" = function(\");\n        this._visitParams(method.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (method.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(method.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"};\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.builtin === BuiltinVar.This) {\n            ctx.print(ast, 'self');\n        }\n        else if (ast.builtin === BuiltinVar.Super) {\n            throw new Error(\"'super' needs to be handled at a parent ast node, not at the variable level!\");\n        }\n        else {\n            _super.prototype.visitReadVarExpr.call(this, ast, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"var \" + stmt.name + \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ fnExpr = expr.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            /** @type {?} */ ((/** @type {?} */ ((ctx.currentClass)).parent)).visitExpression(this, ctx);\n            ctx.print(expr, \".call(this\");\n            if (expr.args.length > 0) {\n                ctx.print(expr, \", \");\n                this.visitAllExpressions(expr.args, ctx, ',');\n            }\n            ctx.print(expr, \")\");\n        }\n        else {\n            _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"function(\");\n        this._visitParams(ast.params, ctx);\n        ctx.println(ast, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack')).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitParams = /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (params, ctx) {\n        this.visitAllObjects(function (param) { return ctx.print(null, param.name); }, params, ctx, ',');\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = /**\n     * @param {?} method\n     * @return {?}\n     */\n    function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    return AbstractJsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} sourceUrl\n * @param {?} ctx\n * @param {?} vars\n * @param {?} createSourceMap\n * @return {?}\n */\nfunction evalExpression(sourceUrl$$1, ctx, vars, createSourceMap) {\n    var /** @type {?} */ fnBody = ctx.toSource() + \"\\n//# sourceURL=\" + sourceUrl$$1;\n    var /** @type {?} */ fnArgNames = [];\n    var /** @type {?} */ fnArgValues = [];\n    for (var /** @type {?} */ argName in vars) {\n        fnArgNames.push(argName);\n        fnArgValues.push(vars[argName]);\n    }\n    if (createSourceMap) {\n        // using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise\n        // E.g. ```\n        // function anonymous(a,b,c\n        // /**/) { ... }```\n        // We don't want to hard code this fact, so we auto detect it via an empty function first.\n        var /** @type {?} */ emptyFn = new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat('return null;'))))().toString();\n        var /** @type {?} */ headerLines = emptyFn.slice(0, emptyFn.indexOf('return null;')).split('\\n').length - 1;\n        fnBody += \"\\n\" + ctx.toSourceMapGenerator(sourceUrl$$1, sourceUrl$$1, headerLines).toJsComment();\n    }\n    return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);\n}\n/**\n * @param {?} sourceUrl\n * @param {?} statements\n * @param {?} reflector\n * @param {?} createSourceMaps\n * @return {?}\n */\nfunction jitStatements(sourceUrl$$1, statements, reflector, createSourceMaps) {\n    var /** @type {?} */ converter = new JitEmitterVisitor(reflector);\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    converter.visitAllStatements(statements, ctx);\n    converter.createReturnStmt(ctx);\n    return evalExpression(sourceUrl$$1, ctx, converter.getArgs(), createSourceMaps);\n}\nvar JitEmitterVisitor = (function (_super) {\n    __extends(JitEmitterVisitor, _super);\n    function JitEmitterVisitor(reflector) {\n        var _this = _super.call(this) || this;\n        _this.reflector = reflector;\n        _this._evalArgNames = [];\n        _this._evalArgValues = [];\n        _this._evalExportedVars = [];\n        return _this;\n    }\n    /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.createReturnStmt = /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ctx) {\n        var /** @type {?} */ stmt = new ReturnStatement(new LiteralMapExpr(this._evalExportedVars.map(function (resultVar) { return new LiteralMapEntry(resultVar, variable(resultVar), false); })));\n        stmt.visitStatement(this, ctx);\n    };\n    /**\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.getArgs = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = {};\n        for (var /** @type {?} */ i = 0; i < this._evalArgNames.length; i++) {\n            result[this._evalArgNames[i]] = this._evalArgValues[i];\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = this.reflector.resolveExternalReference(ast.value);\n        var /** @type {?} */ id = this._evalArgValues.indexOf(value);\n        if (id === -1) {\n            id = this._evalArgValues.length;\n            this._evalArgValues.push(value);\n            var /** @type {?} */ name_1 = identifierName({ reference: value }) || 'val';\n            this._evalArgNames.push(\"jit_\" + name_1 + \"_\" + id);\n        }\n        ctx.print(ast, this._evalArgNames[id]);\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareVarStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareFunctionStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareClassStmt.call(this, stmt, ctx);\n    };\n    return JitEmitterVisitor;\n}(AbstractJsEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n *\n * \\@security When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar JitCompiler = (function () {\n    function JitCompiler(_metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _summaryResolver, _reflector, _compilerConfig, _console, getExtraNgModuleProviders) {\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._summaryResolver = _summaryResolver;\n        this._reflector = _reflector;\n        this._compilerConfig = _compilerConfig;\n        this._console = _console;\n        this.getExtraNgModuleProviders = getExtraNgModuleProviders;\n        this._compiledTemplateCache = new Map();\n        this._compiledHostTemplateCache = new Map();\n        this._compiledDirectiveWrapperCache = new Map();\n        this._compiledNgModuleCache = new Map();\n        this._sharedStylesheetCount = 0;\n    }\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleSync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndComponents(moduleType, true));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAsync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return Promise.resolve(this._compileModuleAndComponents(moduleType, false));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsSync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndAllComponents(moduleType, true));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsAsync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return Promise.resolve(this._compileModuleAndAllComponents(moduleType, false));\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    JitCompiler.prototype.getComponentFactory = /**\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        var /** @type {?} */ summary = this._metadataResolver.getDirectiveSummary(component);\n        return /** @type {?} */ (summary.componentFactory);\n    };\n    /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    JitCompiler.prototype.loadAotSummaries = /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    function (summaries) {\n        var _this = this;\n        this.clearCache();\n        flattenSummaries(summaries).forEach(function (summary) {\n            _this._summaryResolver.addSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n        });\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    JitCompiler.prototype.hasAotSummary = /**\n     * @param {?} ref\n     * @return {?}\n     */\n    function (ref) { return !!this._summaryResolver.resolveSummary(ref); };\n    /**\n     * @param {?} ids\n     * @return {?}\n     */\n    JitCompiler.prototype._filterJitIdentifiers = /**\n     * @param {?} ids\n     * @return {?}\n     */\n    function (ids) {\n        var _this = this;\n        return ids.map(function (mod) { return mod.reference; }).filter(function (ref) { return !_this.hasAotSummary(ref); });\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndComponents = /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            _this._compileComponents(moduleType, null);\n            return _this._compileModule(moduleType);\n        });\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndAllComponents = /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            var /** @type {?} */ componentFactories = [];\n            _this._compileComponents(moduleType, componentFactories);\n            return {\n                ngModuleFactory: _this._compileModule(moduleType),\n                componentFactories: componentFactories\n            };\n        });\n    };\n    /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._loadModules = /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (mainModule, isSync) {\n        var _this = this;\n        var /** @type {?} */ loading = [];\n        var /** @type {?} */ mainNgModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        // Note: for runtime compilation, we want to transitively compile all modules,\n        // so we also need to load the declared directives / pipes for all nested modules.\n        this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach(function (nestedNgModule) {\n            // getNgModuleMetadata only returns null if the value passed in is not an NgModule\n            var /** @type {?} */ moduleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(nestedNgModule)));\n            _this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach(function (ref) {\n                var /** @type {?} */ promise = _this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference, ref, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            _this._filterJitIdentifiers(moduleMeta.declaredPipes)\n                .forEach(function (ref) { return _this._metadataResolver.getOrLoadPipeMetadata(ref); });\n        });\n        return SyncAsync.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModule = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        var /** @type {?} */ ngModuleFactory = /** @type {?} */ ((this._compiledNgModuleCache.get(moduleType)));\n        if (!ngModuleFactory) {\n            var /** @type {?} */ moduleMeta = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(moduleType)));\n            // Always provide a bound Compiler\n            var /** @type {?} */ extraProviders = this.getExtraNgModuleProviders(moduleMeta.type.reference);\n            var /** @type {?} */ outputCtx = createOutputContext();\n            var /** @type {?} */ compileResult = this._ngModuleCompiler.compile(outputCtx, moduleMeta, extraProviders);\n            ngModuleFactory = this._interpretOrJit(ngModuleJitUrl(moduleMeta), outputCtx.statements)[compileResult.ngModuleFactoryVar];\n            this._compiledNgModuleCache.set(moduleMeta.type.reference, ngModuleFactory);\n        }\n        return ngModuleFactory;\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    JitCompiler.prototype._compileComponents = /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    function (mainModule, allComponentFactories) {\n        var _this = this;\n        var /** @type {?} */ ngModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        var /** @type {?} */ moduleByJitDirective = new Map();\n        var /** @type {?} */ templates = new Set();\n        var /** @type {?} */ transJitModules = this._filterJitIdentifiers(ngModule.transitiveModule.modules);\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                moduleByJitDirective.set(dirRef, localModuleMeta);\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    templates.add(_this._createCompiledTemplate(dirMeta, localModuleMeta));\n                    if (allComponentFactories) {\n                        var /** @type {?} */ template = _this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n                        templates.add(template);\n                        allComponentFactories.push(/** @type {?} */ (dirMeta.componentFactory));\n                    }\n                }\n            });\n        });\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    dirMeta.entryComponents.forEach(function (entryComponentType) {\n                        var /** @type {?} */ moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                        templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                    });\n                }\n            });\n            localModuleMeta.entryComponents.forEach(function (entryComponentType) {\n                if (!_this.hasAotSummary(entryComponentType.componentType.reference)) {\n                    var /** @type {?} */ moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                    templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                }\n            });\n        });\n        templates.forEach(function (template) { return _this._compileTemplate(template); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCacheFor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        this._compiledNgModuleCache.delete(type);\n        this._metadataResolver.clearCacheFor(type);\n        this._compiledHostTemplateCache.delete(type);\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(type);\n        if (compiledTemplate) {\n            this._compiledTemplateCache.delete(type);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () {\n        this._metadataResolver.clearCache();\n        this._compiledTemplateCache.clear();\n        this._compiledHostTemplateCache.clear();\n        this._compiledNgModuleCache.clear();\n    };\n    /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledHostTemplate = /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (compType, ngModule) {\n        if (!ngModule) {\n            throw new Error(\"Component \" + stringify(compType) + \" is not part of any NgModule or the module has not been imported into your module.\");\n        }\n        var /** @type {?} */ compiledTemplate = this._compiledHostTemplateCache.get(compType);\n        if (!compiledTemplate) {\n            var /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n            assertComponent(compMeta);\n            var /** @type {?} */ hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta, (/** @type {?} */ (compMeta.componentFactory)).viewDefFactory);\n            compiledTemplate =\n                new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n            this._compiledHostTemplateCache.set(compType, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (compMeta, ngModule) {\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n        if (!compiledTemplate) {\n            assertComponent(compMeta);\n            compiledTemplate = new CompiledTemplate(false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n            this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} template\n     * @return {?}\n     */\n    JitCompiler.prototype._compileTemplate = /**\n     * @param {?} template\n     * @return {?}\n     */\n    function (template) {\n        var _this = this;\n        if (template.isCompiled) {\n            return;\n        }\n        var /** @type {?} */ compMeta = template.compMeta;\n        var /** @type {?} */ externalStylesheetsByModuleUrl = new Map();\n        var /** @type {?} */ outputContext = createOutputContext();\n        var /** @type {?} */ componentStylesheet = this._styleCompiler.compileComponent(outputContext, compMeta); /** @type {?} */\n        ((compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n            var /** @type {?} */ compiledStylesheet = _this._styleCompiler.compileStyles(createOutputContext(), compMeta, stylesheetMeta);\n            externalStylesheetsByModuleUrl.set(/** @type {?} */ ((stylesheetMeta.moduleUrl)), compiledStylesheet);\n        });\n        this._resolveStylesCompileResult(componentStylesheet, externalStylesheetsByModuleUrl);\n        var /** @type {?} */ pipes = template.ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var _a = this._parseTemplate(compMeta, template.ngModule, template.directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ compileResult = this._viewCompiler.compileComponent(outputContext, compMeta, parsedTemplate, variable(componentStylesheet.stylesVar), usedPipes);\n        var /** @type {?} */ evalResult = this._interpretOrJit(templateJitUrl(template.ngModule.type, template.compMeta), outputContext.statements);\n        var /** @type {?} */ viewClass = evalResult[compileResult.viewClassVar];\n        var /** @type {?} */ rendererType = evalResult[compileResult.rendererTypeVar];\n        template.compiled(viewClass, rendererType);\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    JitCompiler.prototype._parseTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        // Note: ! is ok here as components always have a template.\n        var /** @type {?} */ preserveWhitespaces = /** @type {?} */ ((compMeta.template)).preserveWhitespaces;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        return this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveStylesCompileResult = /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    function (result, externalStylesheetsByModuleUrl) {\n        var _this = this;\n        result.dependencies.forEach(function (dep, i) {\n            var /** @type {?} */ nestedCompileResult = /** @type {?} */ ((externalStylesheetsByModuleUrl.get(dep.moduleUrl)));\n            var /** @type {?} */ nestedStylesArr = _this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n            dep.setValue(nestedStylesArr);\n        });\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveAndEvalStylesCompileResult = /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    function (result, externalStylesheetsByModuleUrl) {\n        this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n        return this._interpretOrJit(sharedStylesheetJitUrl(result.meta, this._sharedStylesheetCount++), result.outputCtx.statements)[result.stylesVar];\n    };\n    /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @return {?}\n     */\n    JitCompiler.prototype._interpretOrJit = /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @return {?}\n     */\n    function (sourceUrl$$1, statements) {\n        if (!this._compilerConfig.useJit) {\n            return interpretStatements(statements, this._reflector);\n        }\n        else {\n            return jitStatements(sourceUrl$$1, statements, this._reflector, this._compilerConfig.jitDevMode);\n        }\n    };\n    return JitCompiler;\n}());\nvar CompiledTemplate = (function () {\n    function CompiledTemplate(isHost, compType, compMeta, ngModule, directives) {\n        this.isHost = isHost;\n        this.compType = compType;\n        this.compMeta = compMeta;\n        this.ngModule = ngModule;\n        this.directives = directives;\n        this._viewClass = /** @type {?} */ ((null));\n        this.isCompiled = false;\n    }\n    /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    CompiledTemplate.prototype.compiled = /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    function (viewClass, rendererType) {\n        this._viewClass = viewClass;\n        (/** @type {?} */ (this.compMeta.componentViewType)).setDelegate(viewClass);\n        for (var /** @type {?} */ prop in rendererType) {\n            (/** @type {?} */ (this.compMeta.rendererType))[prop] = rendererType[prop];\n        }\n        this.isCompiled = true;\n    };\n    return CompiledTemplate;\n}());\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction assertComponent(meta) {\n    if (!meta.isComponent) {\n        throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n    }\n}\n/**\n * @param {?} fn\n * @param {?=} out\n * @param {?=} seen\n * @return {?}\n */\nfunction flattenSummaries(fn$$1, out, seen) {\n    if (out === void 0) { out = []; }\n    if (seen === void 0) { seen = new Set(); }\n    if (seen.has(fn$$1)) {\n        return out;\n    }\n    seen.add(fn$$1);\n    var /** @type {?} */ summaries = fn$$1();\n    for (var /** @type {?} */ i = 0; i < summaries.length; i++) {\n        var /** @type {?} */ entry = summaries[i];\n        if (typeof entry === 'function') {\n            flattenSummaries(entry, out, seen);\n        }\n        else {\n            out.push(entry);\n        }\n    }\n    return out;\n}\n/**\n * @return {?}\n */\nfunction createOutputContext() {\n    var /** @type {?} */ importExpr$$1 = function (symbol) {\n        return importExpr({ name: identifierName(symbol), moduleName: null, runtime: symbol });\n    };\n    return { statements: [], genFilePath: '', importExpr: importExpr$$1 };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Provides access to reflection data about symbols that the compiler needs.\n * @abstract\n */\nvar CompileReflector = (function () {\n    function CompileReflector() {\n    }\n    return CompileReflector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Create a {\\@link UrlResolver} with no package prefix.\n * @return {?}\n */\nfunction createUrlResolverWithoutPackagePrefix() {\n    return new UrlResolver();\n}\n/**\n * @return {?}\n */\nfunction createOfflineCompileUrlResolver() {\n    return new UrlResolver('.');\n}\n/**\n * @record\n */\n\nvar UrlResolver = (function () {\n    function UrlResolverImpl(_packagePrefix) {\n        if (_packagePrefix === void 0) { _packagePrefix = null; }\n        this._packagePrefix = _packagePrefix;\n    }\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     */\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    UrlResolverImpl.prototype.resolve = /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    function (baseUrl, url) {\n        var /** @type {?} */ resolvedUrl = url;\n        if (baseUrl != null && baseUrl.length > 0) {\n            resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n        }\n        var /** @type {?} */ resolvedParts = _split(resolvedUrl);\n        var /** @type {?} */ prefix = this._packagePrefix;\n        if (prefix != null && resolvedParts != null &&\n            resolvedParts[_ComponentIndex.Scheme] == 'package') {\n            var /** @type {?} */ path = resolvedParts[_ComponentIndex.Path];\n            prefix = prefix.replace(/\\/+$/, '');\n            path = path.replace(/^\\/+/, '');\n            return prefix + \"/\" + path;\n        }\n        return resolvedUrl;\n    };\n    return UrlResolverImpl;\n}());\n/**\n * Extract the scheme of a URL.\n * @param {?} url\n * @return {?}\n */\nfunction getUrlScheme(url) {\n    var /** @type {?} */ match = _split(url);\n    return (match && match[_ComponentIndex.Scheme]) || '';\n}\n/**\n * Builds a URI string from already-encoded parts.\n *\n * No encoding is performed.  Any component may be omitted as either null or\n * undefined.\n *\n * @param {?=} opt_scheme The scheme such as 'http'.\n * @param {?=} opt_userInfo The user name before the '\\@'.\n * @param {?=} opt_domain The domain such as 'www.google.com', already\n *     URI-encoded.\n * @param {?=} opt_port The port number.\n * @param {?=} opt_path The path, already URI-encoded.  If it is not\n *     empty, it must begin with a slash.\n * @param {?=} opt_queryData The URI-encoded query data.\n * @param {?=} opt_fragment The URI-encoded fragment identifier.\n * @return {?} The fully combined URI.\n */\nfunction _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n    var /** @type {?} */ out = [];\n    if (opt_scheme != null) {\n        out.push(opt_scheme + ':');\n    }\n    if (opt_domain != null) {\n        out.push('//');\n        if (opt_userInfo != null) {\n            out.push(opt_userInfo + '@');\n        }\n        out.push(opt_domain);\n        if (opt_port != null) {\n            out.push(':' + opt_port);\n        }\n    }\n    if (opt_path != null) {\n        out.push(opt_path);\n    }\n    if (opt_queryData != null) {\n        out.push('?' + opt_queryData);\n    }\n    if (opt_fragment != null) {\n        out.push('#' + opt_fragment);\n    }\n    return out.join('');\n}\n/**\n * A regular expression for breaking a URI into its component parts.\n *\n * {\\@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n * \\@internal\n */\nvar _splitRe = new RegExp('^' +\n    '(?:' +\n    '([^:/?#.]+)' +\n    ':)?' +\n    '(?://' +\n    '(?:([^/?#]*)@)?' +\n    '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' +\n    '(?::([0-9]+))?' +\n    ')?' +\n    '([^?#]+)?' +\n    '(?:\\\\?([^#]*))?' +\n    '(?:#(.*))?' +\n    '$');\n/** @enum {number} */\nvar _ComponentIndex = {\n    Scheme: 1,\n    UserInfo: 2,\n    Domain: 3,\n    Port: 4,\n    Path: 5,\n    QueryData: 6,\n    Fragment: 7,\n};\n_ComponentIndex[_ComponentIndex.Scheme] = \"Scheme\";\n_ComponentIndex[_ComponentIndex.UserInfo] = \"UserInfo\";\n_ComponentIndex[_ComponentIndex.Domain] = \"Domain\";\n_ComponentIndex[_ComponentIndex.Port] = \"Port\";\n_ComponentIndex[_ComponentIndex.Path] = \"Path\";\n_ComponentIndex[_ComponentIndex.QueryData] = \"QueryData\";\n_ComponentIndex[_ComponentIndex.Fragment] = \"Fragment\";\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n * </pre>\n *\n * @param {?} uri The URI string to examine.\n * @return {?} Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\nfunction _split(uri) {\n    return /** @type {?} */ ((uri.match(_splitRe)));\n}\n/**\n * Removes dot segments in given path component, as described in\n * RFC 3986, section 5.2.4.\n *\n * @param {?} path A non-empty path component.\n * @return {?} Path component with removed dot segments.\n */\nfunction _removeDotSegments(path) {\n    if (path == '/')\n        return '/';\n    var /** @type {?} */ leadingSlash = path[0] == '/' ? '/' : '';\n    var /** @type {?} */ trailingSlash = path[path.length - 1] === '/' ? '/' : '';\n    var /** @type {?} */ segments = path.split('/');\n    var /** @type {?} */ out = [];\n    var /** @type {?} */ up = 0;\n    for (var /** @type {?} */ pos = 0; pos < segments.length; pos++) {\n        var /** @type {?} */ segment = segments[pos];\n        switch (segment) {\n            case '':\n            case '.':\n                break;\n            case '..':\n                if (out.length > 0) {\n                    out.pop();\n                }\n                else {\n                    up++;\n                }\n                break;\n            default:\n                out.push(segment);\n        }\n    }\n    if (leadingSlash == '') {\n        while (up-- > 0) {\n            out.unshift('..');\n        }\n        if (out.length === 0)\n            out.push('.');\n    }\n    return leadingSlash + out.join('/') + trailingSlash;\n}\n/**\n * Takes an array of the parts from split and canonicalizes the path part\n * and then joins all the parts.\n * @param {?} parts\n * @return {?}\n */\nfunction _joinAndCanonicalizePath(parts) {\n    var /** @type {?} */ path = parts[_ComponentIndex.Path];\n    path = path == null ? '' : _removeDotSegments(path);\n    parts[_ComponentIndex.Path] = path;\n    return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n}\n/**\n * Resolves a URL.\n * @param {?} base The URL acting as the base URL.\n * @param {?} url\n * @return {?}\n */\nfunction _resolveUrl(base, url) {\n    var /** @type {?} */ parts = _split(encodeURI(url));\n    var /** @type {?} */ baseParts = _split(base);\n    if (parts[_ComponentIndex.Scheme] != null) {\n        return _joinAndCanonicalizePath(parts);\n    }\n    else {\n        parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n    }\n    for (var /** @type {?} */ i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n        if (parts[i] == null) {\n            parts[i] = baseParts[i];\n        }\n    }\n    if (parts[_ComponentIndex.Path][0] == '/') {\n        return _joinAndCanonicalizePath(parts);\n    }\n    var /** @type {?} */ path = baseParts[_ComponentIndex.Path];\n    if (path == null)\n        path = '/';\n    var /** @type {?} */ index = path.lastIndexOf('/');\n    path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];\n    parts[_ComponentIndex.Path] = path;\n    return _joinAndCanonicalizePath(parts);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An interface for retrieving documents by URL that the compiler uses\n * to load templates.\n */\nvar ResourceLoader = (function () {\n    function ResourceLoader() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    ResourceLoader.prototype.get = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) { return ''; };\n    return ResourceLoader;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extract i18n messages from source code\n */\n/**\n * The host of the Extractor disconnects the implementation from TypeScript / other language\n * services and from underlying file systems.\n * @record\n */\n\nvar Extractor = (function () {\n    function Extractor(host, staticSymbolResolver, messageBundle, metadataResolver) {\n        this.host = host;\n        this.staticSymbolResolver = staticSymbolResolver;\n        this.messageBundle = messageBundle;\n        this.metadataResolver = metadataResolver;\n    }\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    Extractor.prototype.extract = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var _a = analyzeAndValidateNgModules(rootFiles, this.host, this.staticSymbolResolver, this.metadataResolver), files = _a.files, ngModules = _a.ngModules;\n        return Promise\n            .all(ngModules.map(function (ngModule) {\n            return _this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false);\n        }))\n            .then(function () {\n            var /** @type {?} */ errors = [];\n            files.forEach(function (file) {\n                var /** @type {?} */ compMetas = [];\n                file.directives.forEach(function (directiveType) {\n                    var /** @type {?} */ dirMeta = _this.metadataResolver.getDirectiveMetadata(directiveType);\n                    if (dirMeta && dirMeta.isComponent) {\n                        compMetas.push(dirMeta);\n                    }\n                });\n                compMetas.forEach(function (compMeta) {\n                    var /** @type {?} */ html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                    var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                    errors.push.apply(errors, /** @type {?} */ ((_this.messageBundle.updateFromTemplate(html, file.fileName, interpolationConfig))));\n                });\n            });\n            if (errors.length) {\n                throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n            }\n            return _this.messageBundle;\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    Extractor.create = /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    function (host, locale) {\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        var /** @type {?} */ urlResolver = createAotUrlResolver(host);\n        var /** @type {?} */ symbolCache = new StaticSymbolCache();\n        var /** @type {?} */ summaryResolver = new AotSummaryResolver(host, symbolCache);\n        var /** @type {?} */ staticSymbolResolver = new StaticSymbolResolver(host, symbolCache, summaryResolver);\n        var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, staticSymbolResolver);\n        var /** @type {?} */ config = new CompilerConfig({ defaultEncapsulation: ViewEncapsulation.Emulated, useJit: false });\n        var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return host.loadResource(url); } }, urlResolver, htmlParser, config);\n        var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n        var /** @type {?} */ resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        var /** @type {?} */ extractor = new Extractor(host, staticSymbolResolver, messageBundle, resolver);\n        return { extractor: extractor, staticReflector: staticReflector };\n    };\n    return Extractor;\n}());\n\nexports.core = core;\nexports.CompilerConfig = CompilerConfig;\nexports.preserveWhitespacesDefault = preserveWhitespacesDefault;\nexports.Identifiers = Identifiers;\nexports.JitCompiler = JitCompiler;\nexports.DirectiveResolver = DirectiveResolver;\nexports.PipeResolver = PipeResolver;\nexports.NgModuleResolver = NgModuleResolver;\nexports.DEFAULT_INTERPOLATION_CONFIG = DEFAULT_INTERPOLATION_CONFIG;\nexports.InterpolationConfig = InterpolationConfig;\nexports.NgModuleCompiler = NgModuleCompiler;\nexports.AssertNotNull = AssertNotNull;\nexports.BinaryOperator = BinaryOperator;\nexports.BinaryOperatorExpr = BinaryOperatorExpr;\nexports.BuiltinMethod = BuiltinMethod;\nexports.BuiltinVar = BuiltinVar;\nexports.CastExpr = CastExpr;\nexports.ClassStmt = ClassStmt;\nexports.CommaExpr = CommaExpr;\nexports.CommentStmt = CommentStmt;\nexports.ConditionalExpr = ConditionalExpr;\nexports.DeclareFunctionStmt = DeclareFunctionStmt;\nexports.DeclareVarStmt = DeclareVarStmt;\nexports.ExpressionStatement = ExpressionStatement;\nexports.ExternalExpr = ExternalExpr;\nexports.ExternalReference = ExternalReference;\nexports.FunctionExpr = FunctionExpr;\nexports.IfStmt = IfStmt;\nexports.InstantiateExpr = InstantiateExpr;\nexports.InvokeFunctionExpr = InvokeFunctionExpr;\nexports.InvokeMethodExpr = InvokeMethodExpr;\nexports.LiteralArrayExpr = LiteralArrayExpr;\nexports.LiteralExpr = LiteralExpr;\nexports.LiteralMapExpr = LiteralMapExpr;\nexports.NotExpr = NotExpr;\nexports.ReadKeyExpr = ReadKeyExpr;\nexports.ReadPropExpr = ReadPropExpr;\nexports.ReadVarExpr = ReadVarExpr;\nexports.ReturnStatement = ReturnStatement;\nexports.ThrowStmt = ThrowStmt;\nexports.TryCatchStmt = TryCatchStmt;\nexports.WriteKeyExpr = WriteKeyExpr;\nexports.WritePropExpr = WritePropExpr;\nexports.WriteVarExpr = WriteVarExpr;\nexports.StmtModifier = StmtModifier;\nexports.Statement = Statement;\nexports.collectExternalReferences = collectExternalReferences;\nexports.EmitterVisitorContext = EmitterVisitorContext;\nexports.ViewCompiler = ViewCompiler;\nexports.getParseErrors = getParseErrors;\nexports.isSyntaxError = isSyntaxError;\nexports.syntaxError = syntaxError;\nexports.Version = Version;\nexports.VERSION = VERSION;\nexports.TextAst = TextAst;\nexports.BoundTextAst = BoundTextAst;\nexports.AttrAst = AttrAst;\nexports.BoundElementPropertyAst = BoundElementPropertyAst;\nexports.BoundEventAst = BoundEventAst;\nexports.ReferenceAst = ReferenceAst;\nexports.VariableAst = VariableAst;\nexports.ElementAst = ElementAst;\nexports.EmbeddedTemplateAst = EmbeddedTemplateAst;\nexports.BoundDirectivePropertyAst = BoundDirectivePropertyAst;\nexports.DirectiveAst = DirectiveAst;\nexports.ProviderAst = ProviderAst;\nexports.ProviderAstType = ProviderAstType;\nexports.NgContentAst = NgContentAst;\nexports.PropertyBindingType = PropertyBindingType;\nexports.NullTemplateVisitor = NullTemplateVisitor;\nexports.RecursiveTemplateAstVisitor = RecursiveTemplateAstVisitor;\nexports.templateVisitAll = templateVisitAll;\nexports.CompileAnimationEntryMetadata = CompileAnimationEntryMetadata;\nexports.CompileAnimationStateMetadata = CompileAnimationStateMetadata;\nexports.CompileAnimationStateDeclarationMetadata = CompileAnimationStateDeclarationMetadata;\nexports.CompileAnimationStateTransitionMetadata = CompileAnimationStateTransitionMetadata;\nexports.CompileAnimationMetadata = CompileAnimationMetadata;\nexports.CompileAnimationKeyframesSequenceMetadata = CompileAnimationKeyframesSequenceMetadata;\nexports.CompileAnimationStyleMetadata = CompileAnimationStyleMetadata;\nexports.CompileAnimationAnimateMetadata = CompileAnimationAnimateMetadata;\nexports.CompileAnimationWithStepsMetadata = CompileAnimationWithStepsMetadata;\nexports.CompileAnimationSequenceMetadata = CompileAnimationSequenceMetadata;\nexports.CompileAnimationGroupMetadata = CompileAnimationGroupMetadata;\nexports.identifierName = identifierName;\nexports.identifierModuleUrl = identifierModuleUrl;\nexports.viewClassName = viewClassName;\nexports.rendererTypeName = rendererTypeName;\nexports.hostViewClassName = hostViewClassName;\nexports.componentFactoryName = componentFactoryName;\nexports.CompileSummaryKind = CompileSummaryKind;\nexports.tokenName = tokenName;\nexports.tokenReference = tokenReference;\nexports.CompileStylesheetMetadata = CompileStylesheetMetadata;\nexports.CompileTemplateMetadata = CompileTemplateMetadata;\nexports.CompileDirectiveMetadata = CompileDirectiveMetadata;\nexports.CompilePipeMetadata = CompilePipeMetadata;\nexports.CompileNgModuleMetadata = CompileNgModuleMetadata;\nexports.TransitiveCompileNgModuleMetadata = TransitiveCompileNgModuleMetadata;\nexports.ProviderMeta = ProviderMeta;\nexports.flatten = flatten;\nexports.sourceUrl = sourceUrl;\nexports.templateSourceUrl = templateSourceUrl;\nexports.sharedStylesheetJitUrl = sharedStylesheetJitUrl;\nexports.ngModuleJitUrl = ngModuleJitUrl;\nexports.templateJitUrl = templateJitUrl;\nexports.createAotUrlResolver = createAotUrlResolver;\nexports.createAotCompiler = createAotCompiler;\nexports.AotCompiler = AotCompiler;\nexports.analyzeNgModules = analyzeNgModules;\nexports.analyzeAndValidateNgModules = analyzeAndValidateNgModules;\nexports.analyzeFile = analyzeFile;\nexports.mergeAnalyzedFiles = mergeAnalyzedFiles;\nexports.GeneratedFile = GeneratedFile;\nexports.toTypeScript = toTypeScript;\nexports.StaticReflector = StaticReflector;\nexports.StaticSymbol = StaticSymbol;\nexports.StaticSymbolCache = StaticSymbolCache;\nexports.ResolvedStaticSymbol = ResolvedStaticSymbol;\nexports.StaticSymbolResolver = StaticSymbolResolver;\nexports.unescapeIdentifier = unescapeIdentifier;\nexports.AotSummaryResolver = AotSummaryResolver;\nexports.AstPath = AstPath;\nexports.SummaryResolver = SummaryResolver;\nexports.JitSummaryResolver = JitSummaryResolver;\nexports.CompileReflector = CompileReflector;\nexports.createUrlResolverWithoutPackagePrefix = createUrlResolverWithoutPackagePrefix;\nexports.createOfflineCompileUrlResolver = createOfflineCompileUrlResolver;\nexports.UrlResolver = UrlResolver;\nexports.getUrlScheme = getUrlScheme;\nexports.ResourceLoader = ResourceLoader;\nexports.ElementSchemaRegistry = ElementSchemaRegistry;\nexports.Extractor = Extractor;\nexports.I18NHtmlParser = I18NHtmlParser;\nexports.MessageBundle = MessageBundle;\nexports.Serializer = Serializer;\nexports.Xliff = Xliff;\nexports.Xliff2 = Xliff2;\nexports.Xmb = Xmb;\nexports.Xtb = Xtb;\nexports.DirectiveNormalizer = DirectiveNormalizer;\nexports.ParserError = ParserError;\nexports.ParseSpan = ParseSpan;\nexports.AST = AST;\nexports.Quote = Quote;\nexports.EmptyExpr = EmptyExpr;\nexports.ImplicitReceiver = ImplicitReceiver;\nexports.Chain = Chain;\nexports.Conditional = Conditional;\nexports.PropertyRead = PropertyRead;\nexports.PropertyWrite = PropertyWrite;\nexports.SafePropertyRead = SafePropertyRead;\nexports.KeyedRead = KeyedRead;\nexports.KeyedWrite = KeyedWrite;\nexports.BindingPipe = BindingPipe;\nexports.LiteralPrimitive = LiteralPrimitive;\nexports.LiteralArray = LiteralArray;\nexports.LiteralMap = LiteralMap;\nexports.Interpolation = Interpolation;\nexports.Binary = Binary;\nexports.PrefixNot = PrefixNot;\nexports.NonNullAssert = NonNullAssert;\nexports.MethodCall = MethodCall;\nexports.SafeMethodCall = SafeMethodCall;\nexports.FunctionCall = FunctionCall;\nexports.ASTWithSource = ASTWithSource;\nexports.TemplateBinding = TemplateBinding;\nexports.NullAstVisitor = NullAstVisitor;\nexports.RecursiveAstVisitor = RecursiveAstVisitor;\nexports.AstTransformer = AstTransformer;\nexports.visitAstChildren = visitAstChildren;\nexports.TokenType = TokenType;\nexports.Lexer = Lexer;\nexports.Token = Token;\nexports.EOF = EOF;\nexports.isIdentifier = isIdentifier;\nexports.isQuote = isQuote;\nexports.SplitInterpolation = SplitInterpolation;\nexports.TemplateBindingParseResult = TemplateBindingParseResult;\nexports.Parser = Parser;\nexports._ParseAST = _ParseAST;\nexports.ERROR_COMPONENT_TYPE = ERROR_COMPONENT_TYPE;\nexports.CompileMetadataResolver = CompileMetadataResolver;\nexports.Text = Text;\nexports.Expansion = Expansion;\nexports.ExpansionCase = ExpansionCase;\nexports.Attribute = Attribute$1;\nexports.Element = Element;\nexports.Comment = Comment;\nexports.visitAll = visitAll;\nexports.RecursiveVisitor = RecursiveVisitor;\nexports.findNode = findNode;\nexports.ParseTreeResult = ParseTreeResult;\nexports.TreeError = TreeError;\nexports.HtmlParser = HtmlParser;\nexports.HtmlTagDefinition = HtmlTagDefinition;\nexports.getHtmlTagDefinition = getHtmlTagDefinition;\nexports.TagContentType = TagContentType;\nexports.splitNsName = splitNsName;\nexports.isNgContainer = isNgContainer;\nexports.isNgContent = isNgContent;\nexports.isNgTemplate = isNgTemplate;\nexports.getNsPrefix = getNsPrefix;\nexports.mergeNsAndName = mergeNsAndName;\nexports.NAMED_ENTITIES = NAMED_ENTITIES;\nexports.NGSP_UNICODE = NGSP_UNICODE;\nexports.debugOutputAstAsTypeScript = debugOutputAstAsTypeScript;\nexports.TypeScriptEmitter = TypeScriptEmitter;\nexports.ParseLocation = ParseLocation;\nexports.ParseSourceFile = ParseSourceFile;\nexports.ParseSourceSpan = ParseSourceSpan;\nexports.ParseErrorLevel = ParseErrorLevel;\nexports.ParseError = ParseError;\nexports.typeSourceSpan = typeSourceSpan;\nexports.DomElementSchemaRegistry = DomElementSchemaRegistry;\nexports.CssSelector = CssSelector;\nexports.SelectorMatcher = SelectorMatcher;\nexports.SelectorListContext = SelectorListContext;\nexports.SelectorContext = SelectorContext;\nexports.StylesCompileDependency = StylesCompileDependency;\nexports.CompiledStylesheet = CompiledStylesheet;\nexports.StyleCompiler = StyleCompiler;\nexports.TemplateParseError = TemplateParseError;\nexports.TemplateParseResult = TemplateParseResult;\nexports.TemplateParser = TemplateParser;\nexports.splitClasses = splitClasses;\nexports.createElementCssSelector = createElementCssSelector;\nexports.removeSummaryDuplicates = removeSummaryDuplicates;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=compiler.umd.js.map\n"]}