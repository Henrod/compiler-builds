{"version":3,"sources":["/home/travis/build/angular/angular/dist/packages-dist/compiler/bundles/compiler.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","compiler","core","this","_angular_core","templateVisitAll","visitor","asts","context","result","visit","ast","forEach","astResult","push","splitNsName","elementName","colonIndex","indexOf","Error","slice","getNsPrefix","fullName","mergeNsAndName","prefix","localName","getHtmlTagDefinition","tagName","TAG_DEFINITIONS","toLowerCase","_DEFAULT_TAG_DEFINITION","dashCaseToCamelCase","input","replace","DASH_CASE_REGEXP","m","_i","arguments","length","toUpperCase","splitAtColon","defaultValues","_splitAt","splitAtPeriod","character","characterIndex","trim","visitValue","value","Array","isArray","visitArray","isStrictStringMap","visitStringMap","visitPrimitive","visitOther","syntaxError","msg","error","ERROR_SYNTAX_ERROR","isSyntaxError","escapeRegExp","s","obj","Object","getPrototypeOf","STRING_MAP_PROTO","utf8Encode","str","encoded","index","codePoint","charCodeAt","low","String","fromCharCode","_sanitizeIdentifier","name","identifierName","compileIdentifier","reference","ref","StaticSymbol","isSymbol","symbolIds","has","get","symbolStr","toString","symbolId","set","identifier","ɵstringify","_anonymousTypeIndex","sym","identifierModuleUrl","filePath","ɵreflector","importUri","viewClassName","compType","embeddedTemplateIndex","rendererTypeName","hostViewClassName","dirWrapperClassName","dirType","componentFactoryName","tokenName","token","tokenReference","createHostComponentMeta","hostTypeReference","compMeta","hostViewType","template","CssSelector","parse","selector","getMatchingElementTemplate","CompileDirectiveMetadata","create","isHost","type","diDeps","lifecycleHooks","CompileTemplateMetadata","encapsulation","ViewEncapsulation","None","templateUrl","styles","styleUrls","ngContentSelectors","animations","isInline","changeDetection","ChangeDetectionStrategy","Default","inputs","outputs","host","isComponent","providers","viewProviders","queries","viewQueries","componentViewType","rendererType","id","data","_normalizeArray","flatten","list","reduce","flat","item","flatItem","concat","ngJitFolder","templateSourceUrl","ngModuleType","templateMeta","sharedStylesheetJitUrl","meta","pathParts","moduleUrl","split","baseName","ngModuleJitUrl","moduleMeta","templateJitUrl","isWhitespace","code","$TAB","$SPACE","$NBSP","isDigit","$0","$9","isAsciiLetter","$a","$z","$A","$Z","isAsciiHexDigit","$f","$F","CompilerInjectable","x","assertArrayOfStrings","isDevMode","i","assertInterpolationSymbols","start_1","end_1","INTERPOLATION_BLACKLIST_REGEXPS","regexp","test","newCharacterToken","Token","TokenType","Character","newIdentifierToken","text","Identifier","newKeywordToken","Keyword","newOperatorToken","Operator","newStringToken","newNumberToken","n","Number","newErrorToken","message","isIdentifierStart","$_","$$","isIdentifier","scanner","_Scanner","peek","advance","$EOF","isIdentifierPart","isExponentStart","$e","$E","isExponentSign","$MINUS","$PLUS","isQuote","$SQ","$DQ","$BT","unescape","$n","$LF","$FF","$r","$CR","$t","$v","$VTAB","parseIntAutoRadix","parseInt","isNaN","_createInterpolateRegExp","config","pattern","start","end","RegExp","typeSourceSpan","kind","sourceFileName","sourceFile","ParseSourceFile","ParseSourceSpan","ParseLocation","visitAll","nodes","tokenize","source","url","getTagDefinition","tokenizeExpansionForms","interpolationConfig","DEFAULT_INTERPOLATION_CONFIG","_Tokenizer","_unexpectedCharacterErrorMsg","charCode","char","_unknownEntityErrorMsg","entitySrc","isNotWhitespace","isNameEnd","$GT","$SLASH","$EQ","isPrefixEnd","isDigitEntityEnd","$SEMICOLON","isNamedEntityEnd","isExpansionFormStart","offset","isInterpolationStart","$LBRACE","isExpansionCaseStart","compareCharCodeCaseInsensitive","code1","code2","toUpperCaseCharCode","mergeTextTokens","srcTokens","lastDstToken","dstTokens","TokenType$1","TEXT","parts","sourceSpan","lastOnStack","stack","element","createI18nMessageFactory","_I18nVisitor","_expParser","meaning","description","toI18nMessage","_extractPlaceholderName","_CUSTOM_PH_EXP","extractMessages","implicitTags","implicitAttrs","_Visitor","extract","mergeTranslations","translations","merge","_isOpeningComment","Comment","startsWith","_isClosingComment","_getI18nAttr","p","attrs","find","attr","_I18N_ATTR","_parseMessageMeta","i18n","idIndex","ID_SEPARATOR","descIndex","MEANING_SEPARATOR","_a","meaningAndDesc","_b","getXmlTagDefinition","_TAG_DEFINITION","digest","sha1","serializeNodes","join","decimalDigest","_SerializerIgnoreIcuExpVisitor","map","a","computeMsgId","serializerVisitor","utf8","words32","stringToWords32","Endian","Big","len","w","b","c","d","e","h0","h1","h2","h3","h4","j","rol32","_c","fk","f","k","temp","add32","_d","_e","byteStringToHexString","words32ToByteString","fingerprint","hash32","hi","lo","him","lom","add64","rol64","byteStringToDecString","wordAt","Little","mix","sub32","add32to64","high","ah","al","bh","bl","carry","l","h","count","endian","byteAt","word","word32ToByteString","hex","decimal","toThePower","addBigInt","numberTimesBigInt","reverse","y","sum","Math","max","tmpSum","num","product","bToThePower","serialize","node","_visitor","_escapeXml","_ESCAPED_CHARS","entry","getCtypeForTag","tag","digest$1","toPublicName","internalName","createLazyProperty","messages","valueFn","defineProperty","configurable","enumerable","_","createSerializer","format","Xmb","Xtb","Xliff","assetUrl","pkg","path","resolveIdentifier","runtime","createIdentifier","identifierToken","createIdentifierToken","expandNodes","expander","_Expander","ExpansionResult","isExpanded","errors","_expandPluralForm","children","cases","PLURAL_CASES","match","ExpansionError","valueSourceSpan","expansionResult","expression","apply","Element","Attribute$1","switchAttr","switchValue","switchValueSourceSpan","_expandDefaultForm","_transformProvider","provider","useExisting","useValue","deps","useClass","useFactory","multi","_transformProviderAst","eager","ProviderAst","multiProvider","providerType","_resolveProvidersFromDirectives","directives","targetErrors","providersByToken","Map","directive","dirProvider","_resolveProviders","ProviderAstType","Component","Directive","directivesWithComponentFirst","filter","dir","PublicService","PrivateService","targetProvidersByToken","resolvedProvider","ProviderError","isUseValue","_getViewQueries","component","viewQueryId","query","_addQueryToTokenMap","queryId","_getContentQueries","contentQueryStartId","contentQueryId","contentQueries","directiveIndex","selectors","isStyleUrlResolvable","schemeMatch","URL_WITH_SCHEMA_REGEXP","extractStyleUrls","resolver","baseUrl","cssText","foundUrls","modifiedCssText","CSS_COMMENT_REGEXP","CSS_IMPORT_REGEXP","resolve","StyleWithImports","_isAnimationLabel","calcPossibleSecurityContexts","registry","propName","isAttribute","ctxs","elementNames","allKnownElementNames","notElementNames","Set","notSelectors","isElementSelector","possibleElementNames","securityContext","SecurityContext","NONE","from","sort","preparseElement","selectAttr","hrefAttr","relAttr","nonBindable","projectAs","lcAttrName","NG_CONTENT_SELECT_ATTR","LINK_STYLE_HREF_ATTR","LINK_STYLE_REL_ATTR","NG_NON_BINDABLE_ATTR","NG_PROJECT_AS","normalizeNgContentSelect","nodeName","PreparsedElementType","OTHER","NG_CONTENT_ELEMENT","NG_CONTENT","STYLE_ELEMENT","STYLE","SCRIPT_ELEMENT","SCRIPT","LINK_ELEMENT","LINK_STYLE_REL_VALUE","STYLESHEET","PreparsedElement","splitClasses","classAttrValue","createElementCssSelector","attributes","cssSelector","elNameNoNs","setElement","attrName","attrNameNoNs","attrValue","addAttribute","CLASS_ATTR","classes","className","addClassName","_isEmptyTextNode","Text","removeSummaryDuplicates","items","values","isEmptyExpression","ASTWithSource","EmptyExpr","isTemplate","el","enableLegacyTemplate","reportDeprecation","tagNoNs","NG_TEMPLATE_ELEMENT","TEMPLATE_ELEMENT","createUrlResolverWithoutPackagePrefix","UrlResolver","createOfflineCompileUrlResolver","getUrlScheme","_split","_ComponentIndex","Scheme","_buildFromEncodedParts","opt_scheme","opt_userInfo","opt_domain","opt_port","opt_path","opt_queryData","opt_fragment","out","uri","_splitRe","_removeDotSegments","leadingSlash","trailingSlash","segments","up","pos","segment","pop","unshift","_joinAndCanonicalizePath","Path","UserInfo","Domain","Port","QueryData","Fragment","_resolveUrl","base","encodeURI","baseParts","lastIndexOf","substring","isDirectiveMetadata","findLast","arr","condition","ngfactoryFilePath","urlWithSuffix","splitTypescriptSuffix","stripNgFactory","NG_FACTORY","isNgFactoryFile","endsWith","lastDot","summaryFileName","fileName","fileNameWithoutSuffix","STRIP_SRC_FILE_SUFFIXES","hasLifecycleHook","hook","getHookName","ɵLifecycleHooks","OnInit","OnDestroy","DoCheck","OnChanges","AfterContentInit","AfterContentChecked","AfterViewInit","AfterViewChecked","_isNgModuleMetadata","NgModule","_isPipeMetadata","Pipe","flattenArray","tree","resolveForwardRef","dedupeArray","array","flattenAndDedupeArray","isValidType","Type","componentModuleUrl","reflector","cmpMetadata","moduleId","scheme","MODULE_SUFFIX","stringifyType","extractIdentifiers","targetIdentifiers","_CompileValueConverter","componentStillLoadingError","ɵERROR_COMPONENT_TYPE","findReadVarNames","stmts","_ReadVarVisitor","visitAllStatements","varNames","applySourceSpanToStatementIfNeeded","stmt","transformer","_ApplySourceSpanTransformer","visitStatement","applySourceSpanToExpressionIfNeeded","expr","visitExpression","variable","ReadVarExpr","importExpr","typeParams","ExternalExpr","importType","typeModifiers","expressionType","ExpressionType","literalArr","LiteralArrayExpr","literalMap","quoted","LiteralMapExpr","LiteralMapEntry","not","NotExpr","fn","params","body","FunctionExpr","literal","LiteralExpr","createClassStmt","parentArgs","superCtorStmts","parent","SUPER_EXPR","callFn","toStmt","builder","concatClassBuilderParts","builders","ctor","ClassMethod","ctorParams","ctorStmts","ClassStmt","fields","getters","methods","modifiers","convertValueToOutputAst","_ValueOutputAstTransformer","createDiTokenExpression","toBase64String","b64","i1","i2","i3","toBase64Digit","toBase64VLQ","digit","B64_DIGITS","escapeIdentifier","escapeDollar","alwaysQuote","_SINGLE_QUOTE_ESCAPE_STRING_RE","requiresQuotes","_LEGAL_IDENTIFIER_RE","_createIndent","res","_INDENT_WITH","debugOutputAstAsTypeScript","converter","_TsEmitterVisitor","_debugFilePath","fileNameToModuleName","containingFilePath","getImportAs","symbol","getTypeArity","ctx","EmitterVisitorContext","createRoot","Statement","Expression","Type$1","visitType","toSource","registerContext","specs","specs_1","spec","SECURITY_SCHEMA","_isPixelDimensionStyle","prop","stripComments","_commentRe","extractSourceMappingUrl","matcher","_sourceMappingUrlRe","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","_ruleRe","content","suffix","contentPrefix","BLOCK_PLACEHOLDER","blocks","rule","CssRule","inputParts","_curlyRe","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","CLOSE_CURLY","OPEN_CURLY","StringWithEscapedBlocks","getStylesVarName","convertActionBinding","localResolver","implicitReceiver","action","bindingId","DefaultLocalResolver","actionWithoutBuiltins","convertPropertyBindingBuiltins","createLiteralArrayConverter","argCount","args","createLiteralMapConverter","keys","key","createPipeConverter","_AstToIrVisitor","actionStmts","flattenStatements","_Mode","prependTemporaryDecls","temporaryCount","lastIndex","preventDefaultVar","lastStatement","returnExpr","convertStmtIntoExpression","createPreventDefaultVar","cast","DYNAMIC_TYPE","notIdentical","toDeclStmt","StmtModifier","Final","ConvertActionBindingResult","converterFactory","convertBuiltins","convertPropertyBinding","expressionWithoutBuiltins","currValExpr","createCurrValueExpr","outputExpr","temporaryDeclaration","ConvertPropertyBindingResult","_BuiltinAstConverter","temporaryName","temporaryNumber","DeclareVarStmt","NULL_EXPR","statements","ensureStatementMode","mode","ensureExpressionMode","convertToStatementIfNeeded","arg","output","ExpressionStatement","ReturnStatement","providerDef","providerAst","multiProviderDef","singleProviderDef","convertDeps","providerIndex","dep","depIndex","paramName","allParams","FnParam","allDepDefs","depDef","exprs","depExprs","instantiate","providerExpr","INFERRED_TYPE","flags","depsExpr","providerMeta","tokenExpr","tokenMeta","isValue","isSkipSelf","isOptional","needsAdditionalRootNode","EmbeddedTemplateAst","hasViewContainer","ElementAst","NG_CONTAINER_TAG","NgContentAst","lifecycleHookToNodeFlag","lifecycleHook","nodeFlag","elementBindingDef","inputAst","dirAst","PropertyBindingType","Attribute","Property","Animation","bindingType","Class","Style","unit","fixedAttrsDef","elementAst","mapResult","attrAst","hostAttributes","prevValue","mergeAttributeValue","attrValue1","attrValue2","CLASS_ATTR$1","STYLE_ATTR","callCheckStmt","nodeIndex","CHECK_VAR","VIEW_VAR","callUnwrapValue","Identifiers","unwrapValue","findStaticQueryIds","queryMatches","staticQueryIds","dynamicQueryIds","child","childData","add","delete","staticViewQueryIds","nodeStaticQueryIds","createComponentFactoryResolver","componentDirMeta","entryComponents","entryComponentFactories","entryComponent","componentFactory","ComponentFactoryResolver","classMeta","NgModuleRef","CodegenComponentFactoryResolver","elementEventNameAndTarget","eventAst","isAnimation","phase","target","serializeSummaries","summaryResolver","symbolResolver","symbols","types","serializer","Serializer$1","resolvedSymbol","addOrMergeSummary","metadata","processedIndex","isLibraryFile","summary","resolveSummary","resolveSymbol","typeSummary","__symbolic","summaryKind","CompileSummaryKind","ngModuleSummary","exportedDirectives","exportedPipes","deserializeSummaries","symbolCache","json","deserializer","Deserializer","deserialize","_resolveStyleStatements","compileResult","fileSuffix","dependencies","valuePlaceholder","getStaticSymbol","_stylesModuleUrl","isShimmed","stylesheetUrl","shim","_assertComponent","analyzeNgModules","programStaticSymbols","metadataResolver","_createNgModules","ngModules","symbolsMissingModule","_analyzeNgModules","analyzeAndValidateNgModules","programSymbols","ngModuleMetas","moduleMetasByRef","ngModule","ngModuleByPipeOrDirective","ngModulesByFile","ngDirectivesByFile","ngPipesByFile","ngInjectablesByFile","filePaths","isInjectable","ngModuleMeta","srcFileUrl","declaredDirectives","dirIdentifier","fileUrl","declaredPipes","pipeIdentifier","files","srcUrl","pipes","injectables","extractProgramSymbols","staticSymbolResolver","staticSymbols","isSourceFile","getSymbolsOf","symbolMeta","programPipesAndDirectives","ngModulePipesAndDirective","addNgModule","staticSymbol","getNgModuleMetadata","pipe","transitiveModule","modules","modMeta","isDirective","isPipe","isStaticType","shouldIgnore","expandedMessage","typeName","produceErrorMessage","mapStringMap","transform","HIDDEN_KEY","isPrimitive","o","positionalError","line","column","unescapeIdentifier","substr","createAotCompiler","compilerHost","options","urlResolver","StaticSymbolCache","AotSummaryResolver","StaticSymbolResolver","staticReflector","StaticReflector","StaticAndDynamicReflectionCapabilities","install","console","ɵConsole","htmlParser","I18NHtmlParser","HtmlParser","i18nFormat","MissingTranslationStrategy","Warning","CompilerConfig","defaultEncapsulation","Emulated","useJit","normalizer","DirectiveNormalizer","loadResource","expressionParser","Parser","Lexer","elementSchemaRegistry","DomElementSchemaRegistry","tmplParser","TemplateParser","CompileMetadataResolver","NgModuleResolver","DirectiveResolver","PipeResolver","importResolver","viewCompiler","ViewCompiler","AotCompiler","StyleCompiler","NgModuleCompiler","TypeScriptEmitter","locale","genFilePreamble","interpretStatements","resultVars","stmtsWithReturn","resultVar","_ExecutionContext","StatementInterpreter","_executeFunctionStatements","varValues","childCtx","createChildWihtLocalVars","vars","createDynamicClass","_classStmt","_ctx","propertyDescriptors","getter","instanceCtx","method","paramNames","param","writable","ctorParamNames","constructorMethod","_this","field","undefined","superClass","prototype","_declareFn","evalExpression","sourceUrl","fnBody","fnArgNames","fnArgValues","argName","emptyFn","Function","bind","headerLines","toSourceMapGenerator","toJsComment","jitStatements","JitEmitterVisitor","returnStmt","getArgs","assertComponent","_initReflector","reflectionCapabilities","ɵReflectionCapabilities","_mergeOptions","optionsArr","_lastDefined","_mergeArrays","missingTranslation","__extends","__","constructor","hasOwnProperty","VERSION","Version","TextAst","ngContentIndex","visitText","BoundTextAst","visitBoundText","AttrAst","visitAttr","BoundElementPropertyAst","visitElementProperty","BoundEventAst","handler","calcFullName","visitEvent","ReferenceAst","visitReference","VariableAst","visitVariable","references","endSourceSpan","visitElement","variables","visitEmbeddedTemplate","BoundDirectivePropertyAst","directiveName","templateName","visitDirectiveProperty","DirectiveAst","hostProperties","hostEvents","visitDirective","Builtin","visitNgContent","members","assertNoMembers","JSON","stringify","cache","declarationFile","memberSuffix","TagContentType","RAW_TEXT","ESCAPABLE_RAW_TEXT","PARSABLE_DATA","NAMED_ENTITIES","Aacute","aacute","Acirc","acirc","acute","AElig","aelig","Agrave","agrave","alefsym","Alpha","alpha","amp","and","ang","apos","Aring","aring","asymp","Atilde","atilde","Auml","auml","bdquo","Beta","beta","brvbar","bull","cap","Ccedil","ccedil","cedil","cent","Chi","chi","circ","clubs","cong","copy","crarr","cup","curren","dagger","Dagger","darr","dArr","deg","Delta","delta","diams","divide","Eacute","eacute","Ecirc","ecirc","Egrave","egrave","empty","emsp","ensp","Epsilon","epsilon","equiv","Eta","eta","ETH","eth","Euml","euml","euro","exist","fnof","forall","frac12","frac14","frac34","frasl","Gamma","gamma","ge","gt","harr","hArr","hearts","hellip","Iacute","iacute","Icirc","icirc","iexcl","Igrave","igrave","image","infin","int","Iota","iota","iquest","isin","Iuml","iuml","Kappa","kappa","Lambda","lambda","lang","laquo","larr","lArr","lceil","ldquo","le","lfloor","lowast","loz","lrm","lsaquo","lsquo","lt","macr","mdash","micro","middot","minus","Mu","mu","nabla","nbsp","ndash","ne","ni","notin","nsub","Ntilde","ntilde","Nu","nu","Oacute","oacute","Ocirc","ocirc","OElig","oelig","Ograve","ograve","oline","Omega","omega","Omicron","omicron","oplus","or","ordf","ordm","Oslash","oslash","Otilde","otilde","otimes","Ouml","ouml","para","permil","perp","Phi","phi","Pi","pi","piv","plusmn","pound","prime","Prime","prod","Psi","psi","quot","radic","rang","raquo","rarr","rArr","rceil","rdquo","real","reg","rfloor","Rho","rho","rlm","rsaquo","rsquo","sbquo","Scaron","scaron","sdot","sect","shy","Sigma","sigma","sigmaf","sim","spades","sub","sube","sup","sup1","sup2","sup3","supe","szlig","Tau","tau","there4","Theta","theta","thetasym","thinsp","THORN","thorn","tilde","times","trade","Uacute","uacute","uarr","uArr","Ucirc","ucirc","Ugrave","ugrave","uml","upsih","Upsilon","upsilon","Uuml","uuml","weierp","Xi","xi","Yacute","yacute","yen","yuml","Yuml","Zeta","zeta","zwj","zwnj","HtmlTagDefinition","closedByChildren","requiredParents","implicitNamespacePrefix","contentType","closedByParent","isVoid","_f","ignoreFirstLf","canSelfClose","parentToAdd","requireExtraParent","currentParent","lcParent","isParentTemplate","isClosedByChild","area","embed","link","img","hr","br","track","wbr","thead","tbody","tfoot","tr","td","th","col","svg","math","li","dt","dd","rb","rt","rtc","rp","optgroup","option","pre","listing","style","script","title","textarea","_SELECTOR_REGEXP","classNames","results","_addResult","cssSel","current","inNot","exec","hasElementSelector","classAttr","klass","notSelector","SelectorMatcher","_elementMap","_elementPartialMap","_classMap","_classPartialMap","_attrValueMap","_attrValuePartialMap","_listContexts","createNotMatcher","notMatcher","addSelectables","cssSelectors","callbackCtxt","listContext","SelectorListContext","_addSelectable","selectable","SelectorContext","isTerminal","_addTerminal","_addPartial","terminalMap","terminalValuesMap","partialMap","partialValuesMap","terminalList","matchedCallback","alreadyMatched","_matchTerminal","_matchPartial","selectables","starSelectables","finalize","nestedSelector","cbContext","callback","ValueTransformer","SyncAsyncResult","syncResult","asyncResult","Promise","HOST_REG_EXP","CompileAnimationEntryMetadata","definitions","CompileAnimationStateMetadata","CompileAnimationStateDeclarationMetadata","_super","stateNameExpr","call","CompileAnimationStateTransitionMetadata","stateChangeExpr","steps","CompileAnimationMetadata","CompileAnimationKeyframesSequenceMetadata","CompileAnimationStyleMetadata","CompileAnimationAnimateMetadata","timings","CompileAnimationWithStepsMetadata","CompileAnimationSequenceMetadata","CompileAnimationGroupMetadata","Injectable","CompileStylesheetMetadata","externalStylesheets","interpolation","toSummary","anim","exportAs","hostListeners","matches","inputsMap","bindConfig","outputsMap","CompilePipeMetadata","pure","CompileNgModuleMetadata","bootstrapComponents","importedModules","exportedModules","schemas","TransitiveCompileNgModuleMetadata","directivesSet","exportedDirectivesSet","pipesSet","exportedPipesSet","modulesSet","entryComponentsSet","addProvider","addDirective","addExportedDirective","addPipe","addExportedPipe","addModule","addEntryComponent","ec","componentType","ProviderMeta","ParserError","errLocation","ctxLocation","ParseSpan","AST","span","Quote","uninterpretedExpression","location","visitQuote","ImplicitReceiver","visitImplicitReceiver","Chain","expressions","visitChain","Conditional","trueExp","falseExp","visitConditional","PropertyRead","receiver","visitPropertyRead","PropertyWrite","visitPropertyWrite","SafePropertyRead","visitSafePropertyRead","KeyedRead","visitKeyedRead","KeyedWrite","visitKeyedWrite","BindingPipe","exp","visitPipe","LiteralPrimitive","visitLiteralPrimitive","LiteralArray","visitLiteralArray","LiteralMap","visitLiteralMap","Interpolation","strings","visitInterpolation","Binary","operation","left","right","visitBinary","PrefixNot","visitPrefixNot","MethodCall","visitMethodCall","SafeMethodCall","visitSafeMethodCall","FunctionCall","visitFunctionCall","TemplateBinding","keyIsVar","RecursiveAstVisitor","AstTransformer","$BANG","$HASH","$PERCENT","$AMPERSAND","$LPAREN","$RPAREN","$STAR","$COMMA","$PERIOD","$COLON","$LT","$QUESTION","$X","$LBRACKET","$BACKSLASH","$RBRACKET","$CARET","$u","$x","$BAR","$RBRACE","InterpolationConfig","fromArray","markers","KEYWORDS","tokens","scanToken","decorators","ctorParameters","numValue","strValue","isCharacter","isNumber","isString","isOperator","operater","isKeyword","isKeywordLet","isKeywordAs","isKeywordNull","isKeywordUndefined","isKeywordTrue","isKeywordFalse","isKeywordThis","isError","toNumber","EOF","scanIdentifier","scanNumber","scanCharacter","scanString","scanOperator","scanComplexOperator","one","twoCode","two","threeCode","three","simple","parseFloat","quote","buffer","marker","unescapedCode","last","position","SplitInterpolation","offsets","TemplateBindingParseResult","templateBindings","warnings","_lexer","parseAction","_checkNoInterpolation","sourceToLex","_stripComments","_ParseAST","parseChain","parseBinding","_parseBindingAst","parseSimpleBinding","SimpleExpressionChecker","check","_reportError","_parseQuote","prefixSeparatorIndex","parseTemplateBindings","prefixToken","prefixTokens","t","parseInterpolation","splitInterpolation","expressionText","_findInterpolationErrorColumn","wrapLiteralPrimitive","_commentStart","outerQuote","nextChar","partInErrIdx","inputLength","rparensExpected","rbracketsExpected","rbracesExpected","next","inputIndex","optionalCharacter","peekKeywordLet","peekKeywordAs","expectCharacter","optionalOperator","op","expectOperator","operator","expectIdentifierOrKeyword","expectIdentifierOrKeywordOrString","parsePipe","parseExpression","parseConditional","parseLogicalOr","yes","no","parseLogicalAnd","parseEquality","parseRelational","parseAdditive","parseMultiplicative","parsePrefix","parseCallChain","parsePrimary","parseAccessMemberOrMethodCall","parseCallArguments","elements","parseExpressionList","parseLiteralMap","literalValue","terminator","isSafe","positionals","expectTemplateBindingKey","operatorFound","bindings","rawKey","letStart","start_2","letName","locationText","skip","file","moveBy","ch","priorLine","getContext","maxChars","maxLines","startOffset","endOffset","ctxChars","ctxLines","before","after","details","ParseErrorLevel","WARNING","ERROR","ParseError","level","contextStr","Expansion","visitExpansion","ExpansionCase","expSourceSpan","visitExpansionCase","valueSpan","visitAttribute","startSourceSpan","visitComment","TAG_OPEN_START","TAG_OPEN_END","TAG_OPEN_END_VOID","TAG_CLOSE","COMMENT_START","COMMENT_END","CDATA_START","CDATA_END","ATTR_NAME","ATTR_VALUE","DOC_TYPE","EXPANSION_FORM_START","EXPANSION_CASE_VALUE","EXPANSION_CASE_EXP_START","EXPANSION_CASE_EXP_END","EXPANSION_FORM_END","Token$1","TokenError","errorMsg","tokenType","TokenizeResult","_CR_OR_CRLF_REGEXP","_ControlFlowError","_file","_getTagDefinition","_tokenizeIcu","_interpolationConfig","_peek","_nextPeek","_index","_line","_column","_expansionCaseStack","_inInterpolation","_input","_length","_advance","_processCarriageReturns","_getLocation","_attemptCharCode","_consumeCdata","_consumeComment","_consumeDocType","_consumeTagClose","_consumeTagOpen","_tokenizeExpansionForm","_consumeText","_beginToken","_endToken","_consumeExpansionFormStart","_isInExpansionForm","_consumeExpansionCaseStart","_isInExpansionCase","_consumeExpansionCaseEnd","_consumeExpansionFormEnd","_getSpan","_currentTokenStart","_currentTokenType","_createError","_attemptCharCodeCaseInsensitive","_requireCharCode","_attemptStr","chars","initialPosition","_savePosition","_restorePosition","_attemptStrCaseInsensitive","_requireStr","_attemptCharCodeUntilFn","predicate","_requireCharCodeUntilFn","_attemptUntilChar","_readChar","decodeEntities","_decodeEntity","startPosition","isHex","numberStart","strNum","entity","_consumeRawText","firstCharOfEnd","attemptEndRest","tagCloseStart","textStart","textToken","_consumePrefixAndName","nameOrPrefixStart","nameStart","lowercaseTagName","savedPos","_consumeTagOpenStart","_consumeAttributeName","_consumeAttributeValue","_consumeTagOpenEnd","contentTokenType","_consumeRawTextWithTagClose","prefixAndName","quoteChar","valueStart","_readUntil","_isTextEnd","nbTokens","TreeError","ParseTreeResult","rootNodes","Parser$1","parseExpansionForms","tokensAndErrors","treeAndErrors","_TreeBuilder","build","_rootNodes","_errors","_elementStack","_consumeStartTag","_consumeEndTag","_closeVoidElement","_consumeExpansion","prev","_advanceIf","startToken","_addToParent","expCase","_parseExpansionCase","_collectExpansionExpTokens","parsedExp","expansionFormStack","_getParentElement","startTagToken","_consumeAttr","_getElementFullName","selfClosing","tagDef","_pushElement","_popElement","parentEl","_getParentElementSkippingContainers","container","newParent","_insertBeforeContainer","endTagToken","errMsg","stackIndex","splice","valueToken","parentElement","Message","placeholders","placeholderToMessage","Text$1","Container","visitContainer","Icu","visitIcu","TagPlaceholder","startName","closeName","visitTagPlaceholder","Placeholder","visitPlaceholder","IcuPlaceholder","visitIcuPlaceholder","CloneVisitor","icu","expressionPlaceholder","ph","RecurseVisitor","TAG_TO_PLACEHOLDER_NAMES","A","B","BR","EM","H1","H2","H3","H4","H5","H6","HR","I","LI","LINK","OL","P","Q","S","SMALL","SUB","SUP","TBODY","TD","TFOOT","TH","THEAD","TR","TT","U","UL","PlaceholderRegistry","_placeHolderNameCounts","_signatureToName","getStartTagPlaceholderName","signature","_hashTag","upperTag","_generateUniqueName","getCloseTagPlaceholderName","_hashClosingTag","getPlaceholderName","upperName","uniqueName","getUniquePlaceholder","strAttrs","seen","_expressionParser","_isIcu","_icuDepth","_placeholderRegistry","_placeholderToContent","_placeholderToMessage","i18nodes","startPhName","closePhName","attribute","_visitTextWithInterpolation","comment","i18nIcuCases","i18nIcu","caze","expPh","phName","icuCase","sDelimiter","eDelimiter","lastStringIdx","I18nError","_I18N_ATTR_PREFIX","_I18N_COMMENT_PREFIX_REGEXP","ExtractionResult","_VisitorMode","Extract","Merge","_implicitTags","_implicitAttrs","_init","_inI18nBlock","_messages","_translations","wrapper","translatedNode","_mode","_mayBeAddBlockChildren","wasInIcu","_inIcu","_isInTranslatableSection","_addMessage","isOpening","isClosing","_inI18nNode","_depth","_blockStartDepth","_closeTranslatableSection","_blockChildren","_blockMeaningAndDesc","_translateMessage","_openTranslatableSection","translatedChildNodes","wasInI18nNode","wasInImplicitNode","_inImplicitNode","childNodes","i18nAttr","i18nMeta","isImplicit","some","isTopLevelImplicit","isTranslatable","visitNodes","visited","_visitAttributesOf","translatedAttrs","_translateAttributes","_msgCountAtSectionStart","_createI18nMessage","explicitAttrNameToValue","implicitAttrNames","msgMeta","i18nAttributeMeanings","translatedAttributes","directChildren","startIndex","significantChildren","XmlTagDefinition","XmlParser","_SerializerVisitor","strCases","Serializer","write","load","createNameMapper","SimplePlaceholderMapper","mapName","internalToPublic","publicToNextId","publicToInternal","toInternalName","publicName","visitPlaceholderName","nextId","_Visitor$1","visitTag","_serializeAttributes","strChildren","visitDeclaration","decl","visitDoctype","doctype","rootTag","dtd","Declaration","unescapedAttrs","Doctype","Tag","Text$2","unescapedValue","CR","ws","_VERSION","_XMLNS","_DEFAULT_SOURCE_LANG","_PLACEHOLDER_TAG","_FILE_TAG","_SOURCE_TAG","_TARGET_TAG","_UNIT_TAG","_WriteVisitor","transUnits","transUnit","datatype","priority","source-language","original","xliff","version","xmlns","encoding","xliffParser","XliffParser","mlNodesByMsgId","i18nNodesByMsgId","XmlToI18n","msgId","convert","i18nNodes","_isInIcu","ctype","startTagPh","closeTagPh","_locale","_unitMlNodes","_mlNodesByMsgId","xml","idAttr","_addError","localeAttr","expansion","expansionCase","nameAttr","_MESSAGES_TAG","_MESSAGE_TAG","_PLACEHOLDER_TAG$1","_EXEMPLE_TAG","_DOCTYPE","exampleVisitor","ExampleVisitor","_Visitor$2","rootNode","addDefaultExamples","startEx","closeEx","exText","_TRANSLATIONS_TAG","_TRANSLATION_TAG","_PLACEHOLDER_TAG$2","xtbParser","XtbParser","msgIdToHtml","XmlToI18n$1","xtb","_bundleDepth","_msgIdToHtml","langAttr","innerTextStart","innerTextEnd","innerText","xmlIcu","caseMap","TranslationBundle","_i18nNodesByMsgId","mapperFactory","missingTranslationStrategy","_i18nToHtml","I18nToHtmlVisitor","digestFn","srcMsg","html","_digest","_mapperFactory","_missingTranslationStrategy","_console","_contextStack","_convertToText","_srcMsg","_mapper","mapper","warn","_htmlParser","translationsFormat","_translationBundle","parseResult","CORE","ANALYZE_FOR_ENTRY_COMPONENTS","ElementRef","ViewContainerRef","ChangeDetectorRef","QueryList","TemplateRef","ɵCodegenComponentFactoryResolver","ComponentFactory","ComponentRef","NgModuleFactory","NgModuleInjector","ɵNgModuleInjector","RegisterModuleFactoryFn","ɵregisterModuleFactory","Injector","LOCALE_ID","TRANSLATIONS_FORMAT","inlineInterpolate","ɵinlineInterpolate","interpolate","ɵinterpolate","EMPTY_ARRAY","ɵEMPTY_ARRAY","EMPTY_MAP","ɵEMPTY_MAP","Renderer","viewDef","ɵvid","elementDef","ɵeld","anchorDef","ɵand","textDef","ɵted","directiveDef","ɵdid","ɵprd","queryDef","ɵqud","pureArrayDef","ɵpad","pureObjectDef","ɵpod","purePipeDef","ɵppd","pipeDef","ɵpid","nodeValue","ɵnov","ngContentDef","ɵncd","ɵunv","createRendererType2","ɵcrt","RendererType2","ViewDefinition","createComponentFactory","ɵccf","expanded","ProviderViewContext","ProviderElementContext","viewContext","_parent","_isViewRoot","_directiveAsts","refs","_sourceSpan","_transformedProviders","_seenProviders","_hasViewContainer","_queriedTokens","_attrs","directivesMeta","directiveAst","_allProviders","_contentQueries","_addQueryReadsTo","templateRefId","refAst","defaultQueryValue","_getOrCreateLocalProvider","afterElement","sortedProviderTypes","transformProviders","sortedDirectives","dir1","dir2","allMatches","defaultValue","queryReadTokens","_getQueriesFor","queryValue","read","tokenRef","currentEl","distance","descendants","requestingProviderType","transformedProviderAst","transformedProviders","transformedDeps","transformedUseValue","transformedUseExisting","existingDiDep","_getDependency","_getLocalDependency","currElement","currEager","isSelf","prevElement","NgModuleProviderAnalyzer","extraProviders","ngModuleProvider","errorString","requestorSourceSpan","foundLocal","ElementSchemaRegistry","hasProperty","schemaMetas","hasElement","getMappedPropName","getDefaultComponentElementName","validateProperty","validateAttribute","normalizeAnimationStyleProperty","normalizeAnimationStyleValue","camelCaseProp","userProvidedProp","val","PROPERTY_PARTS_SEPARATOR","ATTRIBUTE_PREFIX","CLASS_PREFIX","STYLE_PREFIX","ANIMATE_PROP_PREFIX","BoundPropertyType","DEFAULT","LITERAL_ATTR","ANIMATION","BoundProperty","BindingParser","_exprParser","_schemaRegistry","_targetErrors","pipesByName","_usedPipes","getUsedPipes","createDirectiveHostPropertyAsts","dirMeta","elementSelector","boundProps_1","parsePropertyBinding","createElementPropertyAst","createDirectiveHostEventAsts","targetEventAsts_1","parseEvent","sourceInfo","_reportExpressionParserErrors","_checkPipes","parseInlineTemplateBinding","targetMatchableAttrs","targetProps","targetVars","_parseTemplateBindings","binding","_parsePropertyAst","parseLiteralAttr","bindingsResult","warning","_parseAnimation","isAnimationProp","_parseBinding","parsePropertyInterpolation","isHostBinding","boundProp","securityContexts","boundPropertyName","_validatePropertyOrAttributeName","nsSeparatorIdx","ns","targetEvents","_parseAnimationEvent","_parseEvent","eventName","_parseAction","errors_1","collector","PipeCollector","pipeName","pipeMeta","isAttr","report","BIND_NAME_REGEXP","KW_BIND_IDX","KW_LET_IDX","KW_REF_IDX","KW_ON_IDX","KW_BINDON_IDX","KW_AT_IDX","IDENT_KW_IDX","IDENT_BANANA_BOX_IDX","IDENT_PROPERTY_IDX","IDENT_EVENT_IDX","TEMPLATE_ATTR","TEMPLATE_ATTR_PREFIX","TEXT_CSS_SELECTOR","TEMPLATE_TRANSFORMS","InjectionToken","TemplateParseError","TemplateParseResult","templateAst","usedPipes","_config","transforms","tryParse","tryParseHtml","expandHtml","getInterpolationConfig","htmlAstWithErrors","uniqDirectives","uniqPipes","providerViewContext","bindingParser","parseVisitor","TemplateParseVisitor","EMPTY_ELEMENT_CONTEXT","_assertNoReferenceDuplicationOnTemplate","forced","expandedHtmlAst","existingReferences","Optional","Inject","_bindingParser","_schemas","selectorMatcher","directivesIndex","ngContentCount","findNgContentIndex","queryStartIndex","preparsedElement","matchableAttrs","elementOrDirectiveProps","elementOrDirectiveRefs","elementVars","events","templateElementOrDirectiveProps","templateMatchableAttrs","templateElementVars","hasInlineTemplates","isTemplateElement","templateBindingsSource","hasBinding","_parseAttr","normalizedName","_normalizeAttributeName","hasTemplateBinding","elementCssSelector","_parseDirectives","directiveMetas","matchElement","boundDirectivePropNames","directiveAsts","_createDirectiveAsts","elementProps","_createElementPropertyAsts","isViewRoot","providerContext","NON_BINDABLE_VISITOR","ElementContext","parsedElement","projectionSelector","every","_assertAllEventsPublishedByDirectives","_assertNoComponentsNorElementBindingsOnTemplate","transformedDirectiveAsts","transformedHasViewContainer","_assertElementExists","_assertOnlyOneComponent","ngContentIndex_1","templateQueryStartIndex","templateSelector","templateDirectiveMetas","templateBoundDirectivePropNames","templateDirectiveAsts","templateElementProps","templateProviderContext","targetRefs","srcSpan","bindParts","_parseVariable","_parseReference","_parseAssignmentEvent","ElementOrDirectiveRef","size","props","elementSourceSpan","targetReferences","targetBoundDirectivePropNames","matchedReferences","directiveProperties","_checkPropertiesInSchema","_createDirectivePropertyAsts","elOrDirRef","refToken","boundProps","targetBoundDirectiveProps","boundPropsByName_1","isLiteral","dirProp","elProp","boundElementProps","_findComponentDirectives","_findComponentDirectiveNames","componentTypeNames","elName","allDirectiveEvents","event","NonBindableVisitor","attrNameAndValues","_ngContentIndexMatcher","_wildcardNgContentIndex","wildcardNgContentIndex","ngContentIndices","ResourceLoader","DEFAULT_PACKAGE_URL_PROVIDER","provide","PACKAGE_ROOT_URL","_packagePrefix","resolvedUrl","resolvedParts","_resourceLoader","_urlResolver","_resourceLoaderCache","clearCache","clear","clearCacheFor","normalizedDirective","stylesheet","_fetch","normalizeTemplate","prenormData","normalizedTemplateAsync","normalizedTemplateSync","normalizeTemplateSync","normalizeTemplateAsync","then","normalizedTemplate","normalizeExternalStylesheets","prenomData","normalizeLoadedTemplate","templateAbsUrl","rootNodesAndErrors","templateMetadataStyles","normalizeStylesheet","TemplatePreparseVisitor","templateStyles","_loadMissingExternalStylesheets","loadedStylesheets","all","styleUrl","loadedStyle","allStyleUrls","allStyles","styleWithImports","ngNonBindableStackCount","textContent_1","_reflector","typeMetadata","annotations","throwIfNotFound","propertyMetadata","propMetadata","_mergeWithPropertyMetadata","dm","directiveType","Input","bindingPropertyName","Output","hostBindings","HostBinding","hostBinding","hostPropertyName","startWith","HostListener","hostListener","Query","_merge","_extractPublicName","def","_dedupeBindings","names","reversedResult","mergedInputs","mergedOutputs","mergedHost","ɵmerge","mergedQueries","ɵReflectorReader","isNgModule","metas","annotation","SummaryResolver","getLibraryFileName","ERROR_COLLECTOR_TOKEN","_ngModuleResolver","_directiveResolver","_pipeResolver","_summaryResolver","_directiveNormalizer","_staticSymbolCache","_errorCollector","_nonNormalizedDirectiveCache","_directiveCache","_summaryCache","_pipeCache","_ngModuleCache","_ngModuleOfTypes","_createProxyClass","baseType","delegate","proxyClass","setDelegate","overriddenName","getGeneratedClass","getComponentViewClass","getHostComponentViewClass","getHostComponentType","HostClass","getRendererType","getComponentFactory","hostView","_loadSummary","_loadDirectiveMetadata","isSync","getNonNormalizedDirectiveMetadata","createDirectiveMetadata","templateMetadata","normalizedDirMeta","cacheEntry","nonNormalizedTemplateMetadata","changeDetectionStrategy","entryComponentMetadata","_getProvidersMetadata","_getEntryComponentMetadata","_getQueriesMetadata","_getTypeMetadata","getDirectiveMetadata","getDirectiveSummary","dirSummary","getNgModuleSummary","moduleType","moduleSummary","loadNgModuleDirectiveAndPipeMetadata","loading","promise","_loadPipeMetadata","compileMeta","exportedNonModuleIdentifiers","imports","importedType","importedModuleType","moduleWithProviders","_checkSelfImport","importedModuleSummary","_getTypeDescriptor","exportedType","exportedModuleSummary","_getIdentifierMetadata","_getTransitiveNgModuleMetadata","declarations","declaredType","declaredIdentifier","_addTypeToModule","exportedId","bootstrap","oldModule","modulesByToken","modSummary","mod","comp","addedTokens","prevModules","moduleRef","ann","getInjectableSummary","_getInjectableMetadata","throwOnUnknownDeps","_getDependenciesMetadata","ɵLIFECYCLE_HOOKS_VALUES","_getFactoryMetadata","getPipeMetadata","pipeType","getPipeSummary","pipeSummary","getOrLoadPipeMetadata","pipeAnnotation","typeOrFunc","hasUnknownDeps","parameters","dependenciesMetadata","paramEntry","Host","Self","SkipSelf","attributeName","_getTokenMetadata","depsTokens","compileToken","targetEntryComponents","debugInfo","compileProviders","providerIdx","_validateProvider","providersInfo","soFar","seenProvider","seenProviderIdx","_getEntryComponentsFromProvider","getProviderMetadata","components","collectedIdentifiers","compileDeps","compileTypeMetadata","compileFactoryMetadata","isViewQuery","propertyName","_getQueryMetadata","_queryVarBindings","q","varName","first","otherType","TypeModifier","Const","hasModifier","modifier","BuiltinTypeName","Dynamic","Bool","Int","Inferred","BuiltinType","visitBuiltintType","visitExpressionType","ArrayType","of","visitArrayType","MapType","valueType","visitMapType","BOOL_TYPE","BinaryOperator","Equals","NotEquals","Identical","NotIdentical","Minus","Plus","Divide","Multiply","Modulo","And","Or","Lower","LowerEquals","Bigger","BiggerEquals","ReadPropExpr","ReadKeyExpr","callMethod","InvokeMethodExpr","InvokeFunctionExpr","InstantiateExpr","conditional","trueCase","falseCase","ConditionalExpr","equals","rhs","BinaryOperatorExpr","notEquals","identical","plus","multiply","modulo","lower","lowerEquals","bigger","biggerEquals","isBlank","TYPED_NULL_EXPR","CastExpr","BuiltinVar","This","Super","CatchError","CatchStack","builtin","visitReadVarExpr","WriteVarExpr","visitWriteVarExpr","WriteKeyExpr","visitWriteKeyExpr","WritePropExpr","visitWritePropExpr","BuiltinMethod","ConcatArray","SubscribeObservable","Bind","visitInvokeMethodExpr","visitInvokeFunctionExpr","classExpr","visitInstantiateExpr","visitLiteralExpr","visitExternalExpr","visitConditionalExpr","visitNotExpr","visitCastExpr","visitFunctionExpr","DeclareFunctionStmt","lhs","visitBinaryOperatorExpr","visitReadPropExpr","visitReadKeyExpr","entries","visitLiteralArrayExpr","visitLiteralMapExpr","CommaExpr","visitCommaExpr","THIS_EXPR","Private","visitDeclareVarStmt","visitDeclareFunctionStmt","visitExpressionStmt","visitReturnStmt","AbstractClassPart","ClassField","ClassGetter","visitDeclareClassStmt","IfStmt","visitIfStmt","TryCatchStmt","bodyStmts","catchStmts","visitTryCatchStmt","ThrowStmt","visitThrowStmt","AstTransformer$1","transformExpr","transformStmt","visitAllExpressions","mapType","ctorMethod","visitCommentStmt","RecursiveAstVisitor$1","_clone","clone","QUOTED_KEYS","quotedSet","ComponentFactoryDependency","NgModuleCompileResult","ngModuleFactoryVar","compile","bootstrapComponentFactories","_InjectorBuilder","providerParser","injectorClass","ngModuleFactoryStmt","registerFactoryStmt","_ngModuleMeta","_entryComponentFactories","_bootstrapComponentFactories","_lazyProps","_tokens","_instances","_createStmts","_destroyStmts","providerValueExpressions","_getProviderValue","instance","_createProviderProperty","callNgOnDestroy","getMethodStmts","InjectMethodVars","notFoundResult","InjectorProps","injClassName","isMulti","isEager","resolvedProviderValueExpr","internalFieldProp","getterStmts","VERSION$1","JS_B64_PREFIX","SourceMapGenerator","sourcesContent","lines","lastCol0","hasMappings","addSource","addLine","addMapping","col0","sourceLine0","sourceCol0","currentLine","toJSON","sourcesIndex","sources","mappings","lastSourceIndex","lastSourceLine0","lastSourceCol0","segAsStr","sourceRoot","CATCH_ERROR_VAR$1","CATCH_STACK_VAR$1","_EmittedLine","indent","srcSpans","_exportedVars","_indent","_classes","_lines","exportedVars","isExportedVar","println","lastPart","print","lineIsEmpty","_currentLine","newLine","removeEmptyLastLine","incIndent","decIndent","pushClass","clazz","popClass","sourceLines","sourceFilePath","genFilePath","startsAtLine","firstOffsetMapped","mapFirstOffsetIfNeeded","lineIdx","spans","spanIdx","sourceLine","sourceCol","AbstractEmitterVisitor","_escapeDollarInStrings","hasElseCase","lineWasEmpty","getBuiltinMethodName","opStr","useNewLine","visitAllObjects","separator","_importResolver","emitStatements","srcFilePath","preamble","preambleLines","reexports","exportedFilePath","reexportsCode","reexport","as","importsWithPrefixes","importedFilePath","sm","_genFilePath","typeExpression","defaultType","_visitIdentifier","_resolveStaticSymbol","_printColonType","_visitClassField","_visitClassConstructor","_visitClassGetter","_visitClassMethod","_visitParams","typeStr","arity","importReference","suppliedParameters","additionalParameters","HTML","URL","RESOURCE_URL","BOOLEAN","NUMBER","STRING","OBJECT","SCHEMA","_ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","_schema","encodedType","strType","strProperties","properties","typeNames","superName","superType","property","schema","NO_ERRORS_SCHEMA","CUSTOM_ELEMENTS_SCHEMA","elementProperties","strVal","valAndSuffixMatch","ShadowCss","strictStyling","shimCssText","hostSelector","sourceMappingUrl","_insertDirectives","_scopeCssText","_insertPolyfillDirectivesInCssText","_insertPolyfillRulesInCssText","_cssContentNextSelectorRe","_cssContentRuleRe","scopeSelector","unscopedRules","_extractUnscopedRulesFromCssText","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertShadowDOMSelectors","_scopeSelectors","r","_cssContentUnscopedRuleRe","_convertColonRule","_cssColonHostRe","_colonHostPartReplacer","_cssColonHostContextRe","_colonHostContextPartReplacer","regExp","partReplacer","_polyfillHostNoCombinator","_polyfillHost","_shadowDOMSelectorsRe","_scopeSelector","strict","_shadowDeepSelectors","deepParts","shallowPart","otherParts","applyScope","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","re","_makeScopeMatcher","lre","rre","_selectorReSuffix","_applySimpleSelectorScope","_polyfillHostRe","replaceBy_1","_polyfillHostNoCombinatorRe","hnc","colon","isRe","_scopeSelectorPart","scopedP","safeContent","SafeSelector","scopedSelector","sep","scopeAfter","scopedPart","restore","_colonHostContextRe","_polyfillHostContext","_colonHostRe","keep","replaceBy","_content","pseudo","_parenSuffix","COMPONENT_VARIABLE","HOST_ATTR","CONTENT_ATTR","StylesCompileDependency","StylesCompileResult","componentStylesheet","CompiledStylesheet","stylesVar","_shadowCss","compileComponent","_compileStyles","stylesheetMeta","compiledStylesheet","isComponentStylesheet","styleExpressions","plainStyle","_shimIfNeeded","EventHandlerVars","allowDefault","_converterFactory","BuiltinFunctionCall","_localResolver","_implicitReceiver","_nodeMap","_resultMap","_currentTemporary","fnResult","convertedArgs","leftMostSafe","leftMostSafeNode","convertSafeAccess","_getLocal","getLocal","varExpr","temporary","guardedExpression","needsTemporary","allocateTemporary","access","releaseTemporary","visitSome","tempNumber","IMPLICIT_TEMPLATE_VAR","ViewCompileResult","viewClassVar","rendererTypeVar","_genConfigNext","renderComponentVarName","embeddedViewCount","customRenderData","renderComponentVar","viewBuilderFactory","embeddedViewIndex","ViewBuilder","viewName","LOG_VAR","COMP_VAR","EVENT_NAME_VAR","ALLOW_DEFAULT_VAR","purePipeNodeIndices","refNodeIndices","astNodes","_createPipe","queryIds_1","queryIndex","nodeDef","targetStatements","_createNodeExpressions","updateRendererStmts","updateDirectivesStmts","nodeDefExprs","updateRendererFn","_createUpdateFn","updateDirectivesFn","viewFlags","OnPush","viewFactory","updateStmts","updateFn","preStmts","astWithSource","inter","updateRendererExpressions","_preprocessUpdateExpression","updateRenderer","_visitElementOrTemplate","queryMatchesExpr","childVisitor","childCount","_createElementHandleEventFn","usedEvents","dirHostBindings","inputDefs","outputDefs","compAst","compRendererType","compView","ɵelementEventFullName","componentFactoryResolverProvider","_visitProvider","dirIndex","localDirAst","_visitDirective","dirHostEvents","queryMatchExprs","outputAst","elementNodeIndex","queryIds","_visitProviderOrDirective","mapValue","updateDirectiveExpressions","dirContextExpr","hostEventAst","updateDirectives","currViewExpr","currBuilder","refNodeIndex","varAst","varValue","valueExpr_1","valueExpr_2","nodeIndex_1","compViewExpr","compBuilder","pipeNodeIndex","pipeValueExpr_1","nodeValueExpr_1","createUpdateStatements","updateBindingCount","nameResolver","self","logWithNodeDef","handlers","handleEventStmts","handleEventBindingCount","trueStmts","eventTarget","fullEventName","handleEventFn","GeneratedFile","genFileUrl","indexBySymbol","processedSummaryBySymbol","processedSummaries","statics","processedSummary","processValue","summaries","importAs","__symbol","baseSymbol","serializedSymbol","_host","_metadataResolver","_templateParser","_styleCompiler","_viewCompiler","_ngModuleCompiler","_outputEmitter","_localeId","_translationFormat","_genFilePreamble","_symbolResolver","compileAll","rootFiles","sourceModules","_compileSrcFile","generatedFiles","_createSummary","_compileModule","stylesCompileResults","compiledStyleSheet","_codgenStyles","compViewVars","_compileComponent","_compileComponentFactory","compRenderTypeVar","srcModule","_codegenSourceModule","targetExportedVars","symbolSummaries","typeSummaries","appCompileResult","hostType","hostMeta","hostViewFactoryVar","compFactoryVar","directiveIdentifiers","componentStyles","parsedTemplate","stylesExpr","viewResult","stylesCompileResult","staticDelegate","dynamicDelegate","updateCapabilities","isReflectionEnabled","lcProperty","setter","resolveEnum","enumIdentifier","ANGULAR_CORE","IGNORE","knownMetadataClasses","knownMetadataFunctions","errorRecorder","annotationCache","propertyCache","parameterCache","methodCache","conversionMap","initializeConversionMap","kc","_registerDecoratorOrConstructor","kf","_registerFunction","findSymbolDeclaration","importSymbol","rootSymbol","findDeclaration","recordImportAs","containingFile","getSymbolByModule","classMetadata","getTypeMetadata","parentType","trySimplify","parentAnnotations","ownAnnotations","simplify","parentPropMetadata_1","parentProp","members_1","propData","reportError","parameters_1","ctorData","parameterTypes","parameterDecorators_1","paramType","nestedResult","_methodNames","methodNames","parentMethodNames_1","members_2","isMethod","injectionToken","opaqueToken","ContentChild","ContentChildren","ViewChild","ViewChildren","trigger","state","transition","animate","keyframes","sequence","group","originalRecorder","simplifyInContext","depth","resolveReferenceValue","simplifyCall","functionSymbol","targetFunction","calling","value_1","defaults","functionScope","BindingScope","result_1","oldScope","scope","done","result_2","spreadArray","spreadArray_1","spreadItem","value_2","declarationValue","operand","indexTarget","member","selectContext","selectTarget","localValue","missing","argExpressions","recordedSimplifyInContext","PopulatedScope","ResolvedStaticSymbol","SUPPORTED_SCHEMA_VERSION","staticSymbolCache","metadataCache","resolvedSymbols","resolvedFilePaths","_resolveSymbolMembers","_resolveSymbolFromSummary","_createSymbolsOf","baseImportAs","sourceSymbol","targetSymbol","baseResolvedSymbol","baseMetadata","getModuleMetadata","topLevelSymbolNames_1","metadataKey","canonicalSymbol","createResolvedSymbol","_loop_1","moduleExport","export","exportSymbol","symbolName","symName","resolvedModule","resolveModule","createExport","this_1","nestedExports","topLevelSymbolNames","ReferenceTransformer","functionParams","symbolic","oldLen","module_1","transformedMeta","moduleMetadata","moduleMetadatas","getMetadataFor","maxVersion_1","md","errorMessage","moduleNameToFileName","summaryCache","loadedFilePaths","getOutputFileName","_loadSummaryFile","summaryFilePath","loadSummary","ReturnValue","debugAst","currCtx","__proto__","CATCH_ERROR_VAR$2","CATCH_STACK_VAR$2","subscribe","fnExpr","fn_1","AbstractJsEmitterVisitor","currentClass","_evalArgNames","_evalArgValues","JitCompiler","_injector","_compilerConfig","_compiledTemplateCache","_compiledHostTemplateCache","_compiledDirectiveWrapperCache","_compiledNgModuleCache","_sharedStylesheetCount","compileModuleSync","_compileModuleAndComponents","compileModuleAsync","compileModuleAndAllComponentsSync","_compileModuleAndAllComponents","compileModuleAndAllComponentsAsync","getNgContentSelectors","loadingPromise","_loadModules","createResult","_compileComponents","componentFactories","ModuleWithComponentFactories","mainModule","loadingPromises","localModuleMeta","ngModuleFactory","moduleMeta_1","Compiler","ModuleBoundCompiler","allComponentFactories","moduleByDirective","templates","localModuleSummary","_createCompiledTemplate","_createCompiledHostTemplate","entryComponentType","_compileTemplate","compiledTemplate","hostClass","ɵgetComponentViewDefinitionFactory","CompiledTemplate","isCompiled","externalStylesheetsByModuleUrl","_resolveStylesCompileResult","viewClass","viewClassAndRendererTypeVars","compiled","nestedCompileResult","nestedStylesArr","_resolveAndEvalStylesCompileResult","_viewClass","_delegate","_ngModule","injector","MessageBundle","updateFromTemplate","htmlParserResult","i18nParserResult","getMessages","mapperVisitor","MapPlaceholderNames","msgList","src","Extractor","messageBundle","compMetas","extractor","_NO_RESOURCE_LOADER","baseHtmlParser","COMPILER_PROVIDERS","ɵReflector","parser","TRANSLATIONS","JitCompilerFactory","defaultOptions","compilerOptions","useDebug","_defaultOptions","createCompiler","opts","ReflectiveInjector","resolveAndCreate","COMPILER_OPTIONS","platformCoreDynamic","createPlatformFactory","platformCore","CompilerFactory","PLATFORM_INITIALIZER","ImportResolver"],"mappings":";;;;;CAKC,SAAUA,OAAQC,SACI,gBAAZC,UAA0C,mBAAXC,QAAyBF,QAAQC,QAASE,QAAQ,kBACtE,kBAAXC,SAAyBA,OAAOC,IAAMD,QAAQ,UAAW,iBAAkBJ,SACjFA,SAASD,OAAOO,GAAKP,OAAOO,OAAUP,OAAOO,GAAGC,SAAWR,OAAOO,GAAGC,cAAgBR,OAAOO,GAAGE,OAClGC,KAAM,SAAUR,QAAQS,eAAiB,YA6cvC,SAASC,kBAAiBC,QAASC,KAAMC,SACrB,SAAZA,UAAsBA,QAAU,KACpC,IAAqBC,WACAC,MAAQJ,QAAQI,MACjC,SAAUC,KAAO,MAAOL,SAAQI,MAAMC,IAAKH,UAAYG,IAAID,MAAMJ,QAASE,UAC1E,SAAUG,KAAO,MAAOA,KAAID,MAAMJ,QAASE,SAO/C,OANAD,MAAKK,QAAQ,SAAUD,KACnB,GAAqBE,WAAYH,MAAMC,IACnCE,YACAJ,OAAOK,KAAKD,aAGbJ,OAkEX,QAASM,aAAYC,aACjB,GAAsB,KAAlBA,YAAY,GACZ,OAAQ,KAAMA,YAElB,IAAqBC,YAAaD,YAAYE,QAAQ,IAAK,EAC3D,IAAID,aAAc,EACd,KAAM,IAAIE,OAAM,uBAA0BH,YAAc,gCAE5D,QAAQA,YAAYI,MAAM,EAAGH,YAAaD,YAAYI,MAAMH,WAAa,IAM7E,QAASI,aAAYC,UACjB,MAAoB,QAAbA,SAAoB,KAAOP,YAAYO,UAAU,GAO5D,QAASC,gBAAeC,OAAQC,WAC5B,MAAOD,QAAS,IAAMA,OAAS,IAAMC,UAAYA,UA+WrD,QAASC,sBAAqBC,SAC1B,MAAOC,iBAAgBD,QAAQE,gBAAkBC,wBAyarD,QAASC,qBAAoBC,OACzB,MAAOA,OAAMC,QAAQC,iBAAkB,WAEnC,IAAK,GADDC,MACKC,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCD,EAAEC,IAAMC,UAAUD,GAEtB,OAAOD,GAAE,GAAGI,gBAQpB,QAASC,cAAaR,MAAOS,eACzB,MAAOC,UAASV,MAAO,IAAKS,eAOhC,QAASE,eAAcX,MAAOS,eAC1B,MAAOC,UAASV,MAAO,IAAKS,eAQhC,QAASC,UAASV,MAAOY,UAAWH,eAChC,GAAqBI,gBAAiBb,MAAMd,QAAQ0B,UACpD,OAAIC,kBAAkB,EACXJ,eACHT,MAAMZ,MAAM,EAAGyB,gBAAgBC,OAAQd,MAAMZ,MAAMyB,eAAiB,GAAGC,QAQnF,QAASC,YAAWC,MAAO1C,QAASE,SAChC,MAAIyC,OAAMC,QAAQF,OACP1C,QAAQ6C,WAA4B,MAAS3C,SAEpD4C,kBAAkBJ,OACX1C,QAAQ+C,eAAgC,MAAS7C,SAE/C,MAATwC,OAAiC,gBAATA,QAAqC,gBAATA,QACpC,iBAATA,OACA1C,QAAQgD,eAAeN,MAAOxC,SAElCF,QAAQiD,WAAWP,MAAOxC,SA0DrC,QAASgD,aAAYC,KACjB,GAAqBC,OAAQvC,MAAMsC,IAEnC,OADA,OAAUE,qBAAsB,EACzBD,MAOX,QAASE,eAAcF,OACnB,MAAO,OAAUC,oBAMrB,QAASE,cAAaC,GAClB,MAAOA,GAAE7B,QAAQ,6BAA8B,QAOnD,QAASmB,mBAAkBW,KACvB,MAAsB,gBAARA,MAA4B,OAARA,KAAgBC,OAAOC,eAAeF,OAASG,iBAMrF,QAASC,YAAWC,KAEhB,IAAK,GADgBC,SAAU,GACLC,MAAQ,EAAGA,MAAQF,IAAI9B,OAAQgC,QAAS,CAC9D,GAAqBC,WAAYH,IAAII,WAAWF,MAGhD,IAAIC,WAAa,OAAUA,WAAa,OAAUH,IAAI9B,OAAUgC,MAAQ,EAAI,CACxE,GAAqBG,KAAML,IAAII,WAAWF,MAAQ,EAC9CG,MAAO,OAAUA,KAAO,QACxBH,QACAC,WAAcA,UAAY,OAAW,IAAME,IAAM,MAAS,OAG9DF,WAAa,IACbF,SAAWK,OAAOC,aAAaJ,WAE1BA,WAAa,KAClBF,SAAWK,OAAOC,aAAeJ,WAAa,EAAK,GAAQ,IAAmB,GAAZA,UAAoB,KAEjFA,WAAa,MAClBF,SAAWK,OAAOC,aAAcJ,WAAa,GAAM,IAAQA,WAAa,EAAK,GAAQ,IAAmB,GAAZA,UAAoB,KAE3GA,WAAa,UAClBF,SAAWK,OAAOC,aAAeJ,WAAa,GAAM,EAAQ,IAAQA,WAAa,GAAM,GAAQ,IAAQA,WAAa,EAAK,GAAQ,IAAmB,GAAZA,UAAoB,MAGpK,MAAOF,SAsJX,QAASO,qBAAoBC,MACzB,MAAOA,MAAK5C,QAAQ,MAAO,KAS/B,QAAS6C,gBAAeC,mBACpB,IAAKA,oBAAsBA,kBAAkBC,UACzC,MAAO,KAEX,IAAqBC,KAAMF,kBAAkBC,SAC7C,IAAIC,cAAeC,cACf,MAAOD,KAAIJ,IAEf,IAAIM,SAASF,KAAM,CACf,GAAIG,UAAUC,IAAIJ,KACd,MAAOG,WAAUE,IAAIL,IAEzB,IAAqBM,WAAY,WAAaX,oBAAoBK,IAAIO,YAAc,IAAMC,UAE1F,OADAL,WAAUM,IAAIT,IAAKM,WACZA,UAEX,GAAIN,IAAqB,gBACrB,MAAOA,KAAqB,eAEhC,IAAqBU,YAAavF,cAAcwF,WAAWX,IAS3D,OARIU,YAAWzE,QAAQ,MAAQ,GAE3ByE,WAAa,aAAeE,sBAC5BZ,IAAqB,gBAAIU,YAGzBA,WAAaf,oBAAoBe,YAE9BA,WAMX,QAASR,UAASW,KACd,MAAsB,gBAARA,KAMlB,QAASC,qBAAoBhB,mBACzB,GAAqBE,KAAMF,kBAAkBC,SAC7C,OAAIC,eAAeC,cACRD,IAAIe,SAER5F,cAAc6F,WAAWC,UAAUjB,KAO9C,QAASkB,eAAcC,SAAUC,uBAC7B,MAAO,QAAUvB,gBAAiBE,UAAWoB,WAAc,IAAMC,sBAMrE,QAASC,kBAAiBF,UACtB,MAAO,cAAgBtB,gBAAiBE,UAAWoB,WAMvD,QAASG,mBAAkBH,UACvB,MAAO,YAActB,gBAAiBE,UAAWoB,WAMrD,QAASI,qBAAoBC,SACzB,MAAO,WAAa3B,gBAAiBE,UAAWyB,UAMpD,QAASC,sBAAqBN,UAC1B,MAAOtB,iBAAiBE,UAAWoB,WAAc,YAerD,QAASO,WAAUC,OACf,MAAsB,OAAfA,MAAM5D,MAAgB4B,oBAAoBgC,MAAM5D,OAAS8B,eAAe8B,MAAMjB,YAMzF,QAASkB,gBAAeD,OACpB,MAAwB,OAApBA,MAAMjB,WACCiB,MAAMjB,WAAWX,UAGjB4B,MAAM5D,MAqLrB,QAAS8D,yBAAwBC,kBAAmBC,SAAUC,cAC1D,GAAqBC,UAAWC,YAAYC,MAAMJ,SAASK,UAAU,GAAGC,4BACxE,OAAOC,0BAAyBC,QAC5BC,QAAQ,EACRC,MAAQ1C,UAAW+B,kBAAmBY,UAAYC,mBAClDV,SAAU,GAAIW,0BACVC,cAAe1H,cAAc2H,kBAAkBC,KAC/Cd,SAAUA,SACVe,YAAa,GACbC,UACAC,aACAC,sBACAC,cACAC,UAAU,IAEdC,gBAAiBnI,cAAcoI,wBAAwBC,QACvDC,UACAC,WACAC,QACAC,aAAa,EACbxB,SAAU,IACVyB,aACAC,iBACAC,WACAC,eACAC,kBAAmBjC,aACnBkC,cAAgBC,GAAI,WAAYtB,cAAe1H,cAAc2H,kBAAkBC,KAAME,UAAYmB,WA2JzG,QAASC,iBAAgBvF,KACrB,MAAOA,SAwBX,QAASwF,SAAQC,MACb,MAAOA,MAAKC,OAAO,SAAUC,KAAMC,MAC/B,GAAqBC,UAAW3G,MAAMC,QAAQyG,MAAQJ,QAAQI,MAAQA,IACtE,OAAO,MAASE,OAAOD,eAS/B,QAASE,eACL,MAAO,QAQX,QAASC,mBAAkBC,aAAchD,SAAUiD,cAC/C,MAAIA,cAAa3B,SACTtB,SAASU,KAAK1C,oBAAqBE,cAG5B8B,SAASU,KAAK1C,UAAUgB,SAAW,IAAMgB,SAASU,KAAK1C,UAAUH,KAAO,QAGxEiF,cAAgB,IAAMhF,eAAekF,cAAgB,IAAMlF,eAAekC,SAASU,MAAQ,QAI/FuC,aAAahC,YAQ5B,QAASiC,wBAAuBC,KAAMf,IAClC,GAAqBgB,WAAYD,KAAKE,UAAUC,MAAM,SACjCC,SAAWH,UAAUA,UAAU9H,OAAS,EAC7D,OAAOwH,eAAgB,QAAUV,GAAKmB,SAAW,cAMrD,QAASC,gBAAeC,YACpB,MAAOX,eAAgB,IAAMhF,eAAe2F,WAAW/C,MAAQ,uBAOnE,QAASgD,gBAAeV,aAAchD,UAClC,MAAO8C,eAAgB,IAAMhF,eAAekF,cAAgB,IAAMlF,eAAekC,SAASU,MAAQ,gBA4/BtG,QAASiD,cAAaC,MAClB,MAAQA,OAAQC,MAAQD,MAAQE,QAAYF,MAAQG,MAMxD,QAASC,SAAQJ,MACb,MAAOK,KAAML,MAAQA,MAAQM,GAMjC,QAASC,eAAcP,MACnB,MAAOA,OAAQQ,IAAMR,MAAQS,IAAMT,MAAQU,IAAMV,MAAQW,GAM7D,QAASC,iBAAgBZ,MACrB,MAAOA,OAAQQ,IAAMR,MAAQa,IAAMb,MAAQU,IAAMV,MAAQc,IAAMV,QAAQJ,MAS3E,QAASe,sBACL,MAAO,UAAUC,GAAK,MAAOA,IAOjC,QAASC,sBAAqBlG,WAAY3C,OACtC,GAAK5C,cAAc0L,aAAwB,MAAT9I,MAAlC,CAGA,IAAKC,MAAMC,QAAQF,OACf,KAAM,IAAI7B,OAAM,aAAewE,WAAa,+BAEhD,KAAK,GAAqBoG,GAAI,EAAGA,EAAI/I,MAAMV,OAAQyJ,GAAK,EACpD,GAAwB,gBAAb/I,OAAM+I,GACb,KAAM,IAAI5K,OAAM,aAAewE,WAAa,iCAgBxD,QAASqG,4BAA2BrG,WAAY3C,OAC5C,KAAa,MAATA,OAAmBC,MAAMC,QAAQF,QAA0B,GAAhBA,MAAMV,QACjD,KAAM,IAAInB,OAAM,aAAewE,WAAa,kCAE3C,IAAIvF,cAAc0L,aAAwB,MAAT9I,MAAe,CACjD,GAAqBiJ,SAAWjJ,MAAM,GACjBkJ,MAASlJ,MAAM,EAEpCmJ,iCAAgCvL,QAAQ,SAAUwL,QAC9C,GAAIA,OAAOC,KAAKJ,UAAYG,OAAOC,KAAKH,OACpC,KAAM,IAAI/K,OAAM,KAAO8K,QAAU,OAASC,MAAQ,iDAiLlE,QAASI,mBAAkBhI,MAAOsG,MAC9B,MAAO,IAAI2B,OAAMjI,MAAOkI,UAAUC,UAAW7B,KAAMlG,OAAOC,aAAaiG,OAO3E,QAAS8B,oBAAmBpI,MAAOqI,MAC/B,MAAO,IAAIJ,OAAMjI,MAAOkI,UAAUI,WAAY,EAAGD,MAOrD,QAASE,iBAAgBvI,MAAOqI,MAC5B,MAAO,IAAIJ,OAAMjI,MAAOkI,UAAUM,QAAS,EAAGH,MAOlD,QAASI,kBAAiBzI,MAAOqI,MAC7B,MAAO,IAAIJ,OAAMjI,MAAOkI,UAAUQ,SAAU,EAAGL,MAOnD,QAASM,gBAAe3I,MAAOqI,MAC3B,MAAO,IAAIJ,OAAMjI,MAAOkI,UAAU9H,OAAQ,EAAGiI,MAOjD,QAASO,gBAAe5I,MAAO6I,GAC3B,MAAO,IAAIZ,OAAMjI,MAAOkI,UAAUY,OAAQD,EAAG,IAOjD,QAASE,eAAc/I,MAAOgJ,SAC1B,MAAO,IAAIf,OAAMjI,MAAOkI,UAAUrL,MAAO,EAAGmM,SAgPhD,QAASC,mBAAkB3C,MACvB,MAAQQ,KAAMR,MAAQA,MAAQS,IAAQC,IAAMV,MAAQA,MAAQW,IACvDX,MAAQ4C,IAAQ5C,MAAQ6C,GAMjC,QAASC,cAAa1L,OAClB,GAAoB,GAAhBA,MAAMM,OACN,OAAO,CACX,IAAqBqL,SAAU,GAAIC,UAAS5L,MAC5C,KAAKuL,kBAAkBI,QAAQE,MAC3B,OAAO,CAEX,KADAF,QAAQG,UACDH,QAAQE,OAASE,MAAM,CAC1B,IAAKC,iBAAiBL,QAAQE,MAC1B,OAAO,CACXF,SAAQG,UAEZ,OAAO,EAMX,QAASE,kBAAiBpD,MACtB,MAAOO,eAAcP,OAASI,QAAQJ,OAAUA,MAAQ4C,IACnD5C,MAAQ6C,GAMjB,QAASQ,iBAAgBrD,MACrB,MAAOA,OAAQsD,IAAMtD,MAAQuD,GAMjC,QAASC,gBAAexD,MACpB,MAAOA,OAAQyD,QAAUzD,MAAQ0D,MAMrC,QAASC,SAAQ3D,MACb,MAAOA,QAAS4D,KAAO5D,OAAS6D,KAAO7D,OAAS8D,IAMpD,QAASC,UAAS/D,MACd,OAAQA,MACJ,IAAKgE,IACD,MAAOC,IACX,KAAKpD,IACD,MAAOqD,IACX,KAAKC,IACD,MAAOC,IACX,KAAKC,IACD,MAAOpE,KACX,KAAKqE,IACD,MAAOC,MACX,SACI,MAAOvE,OAOnB,QAASwE,mBAAkBzC,MACvB,GAAqBlM,QAAS4O,SAAS1C,KACvC,IAAI2C,MAAM7O,QACN,KAAM,IAAIU,OAAM,wCAA0CwL,KAE9D,OAAOlM,QAgCX,QAAS8O,0BAAyBC,QAC9B,GAAqBC,SAAU5L,aAAa2L,OAAOE,OAAS,eAAiB7L,aAAa2L,OAAOG,IACjG,OAAO,IAAIC,QAAOH,QAAS,KA+qC/B,QAASI,gBAAeC,KAAMpI,MAC1B,GAAqB2C,WAAYtE,oBAAoB2B,MAChCqI,eAA8B,MAAb1F,UAAoB,MAAQyF,KAAO,IAAMhL,eAAe4C,MAAQ,OAAS2C,UAC3G,MAAQyF,KAAO,IAAMhL,eAAe4C,MACnBsI,WAAa,GAAIC,iBAAgB,GAAIF,eAC1D,OAAO,IAAIG,iBAAgB,GAAIC,eAAcH,WAAY,KAAM,KAAM,MAAO,GAAIG,eAAcH,WAAY,KAAM,KAAM,OA6I1H,QAASI,UAAS9P,QAAS+P,MAAO7P,SACd,SAAZA,UAAsBA,QAAU,KACpC,IAAqBC,WACAC,MAAQJ,QAAQI,MACjC,SAAUC,KAAO,MAAOL,SAAQI,MAAMC,IAAKH,UAAYG,IAAID,MAAMJ,QAASE,UAC1E,SAAUG,KAAO,MAAOA,KAAID,MAAMJ,QAASE,SAO/C,OANA6P,OAAMzP,QAAQ,SAAUD,KACpB,GAAqBE,WAAYH,MAAMC,IACnCE,YACAJ,OAAOK,KAAKD,aAGbJ,OAyFX,QAAS6P,UAASC,OAAQC,IAAKC,iBAAkBC,uBAAwBC,qBAGrE,MAF+B,UAA3BD,yBAAqCA,wBAAyB,GACtC,SAAxBC,sBAAkCA,oBAAsBC,8BACrD,GAAIC,YAAW,GAAIZ,iBAAgBM,OAAQC,KAAMC,iBAAkBC,uBAAwBC,qBAC7FL,WAOT,QAASQ,8BAA6BC,UAClC,GAAqBC,MAAOD,WAAahD,KAAO,MAAQrJ,OAAOC,aAAaoM,SAC5E,OAAO,yBAA4BC,KAAO,IAM9C,QAASC,wBAAuBC,WAC5B,MAAO,mBAAsBA,UAAY,oDA+rB7C,QAASC,iBAAgBvG,MACrB,OAAQD,aAAaC,OAASA,OAASmD,KAM3C,QAASqD,WAAUxG,MACf,MAAOD,cAAaC,OAASA,OAASyG,KAAOzG,OAAS0G,QAClD1G,OAAS4D,KAAO5D,OAAS6D,KAAO7D,OAAS2G,IAMjD,QAASC,aAAY5G,MACjB,OAAQA,KAAOQ,IAAMC,GAAKT,QAAUA,KAAOU,IAAMC,GAAKX,QACjDA,KAAOK,IAAML,KAAOM,IAM7B,QAASuG,kBAAiB7G,MACtB,MAAOA,OAAQ8G,YAAc9G,MAAQmD,OAASvC,gBAAgBZ,MAMlE,QAAS+G,kBAAiB/G,MACtB,MAAOA,OAAQ8G,YAAc9G,MAAQmD,OAAS5C,cAAcP,MAQhE,QAASgH,sBAAqB5P,MAAO6P,OAAQlB,qBACzC,GAAqBmB,wBAAuBnB,qBAAsB3O,MAAMd,QAAQyP,oBAAoBjB,MAAOmC,SAAWA,MACtH,OAAO7P,OAAMwC,WAAWqN,SAAWE,UAAYD,qBAMnD,QAASE,sBAAqBnE,MAC1B,MAAOA,QAAS0D,KAAOpG,cAAc0C,MAOzC,QAASoE,gCAA+BC,MAAOC,OAC3C,MAAOC,qBAAoBF,QAAUE,oBAAoBD,OAM7D,QAASC,qBAAoBxH,MACzB,MAAOA,OAAQQ,IAAMR,MAAQS,GAAKT,KAAOQ,GAAKE,GAAKV,KAMvD,QAASyH,iBAAgBC,WAGrB,IAAK,GADgBC,cADAC,aAEKzG,EAAI,EAAGA,EAAIuG,UAAUhQ,OAAQyJ,IAAK,CACxD,GAAqBnF,OAAQ0L,UAAUvG,EACnCwG,eAAgBA,aAAa7K,MAAQ+K,YAAYC,MAAQ9L,MAAMc,MAAQ+K,YAAYC,MACnFH,aAAaI,MAAM,IAAM/L,MAAM+L,MAAM,GACrCJ,aAAaK,WAAWjD,IAAM/I,MAAMgM,WAAWjD,MAG/C4C,aAAe3L,MACf4L,UAAU1R,KAAKyR,eAGvB,MAAOC,WA0cX,QAASK,aAAYC,MAAOC,SACxB,MAAOD,OAAMxQ,OAAS,GAAKwQ,MAAMA,MAAMxQ,OAAS,KAAOyQ,QAqZ3D,QAASC,0BAAyBrC,qBAC9B,GAAqBrQ,SAAU,GAAI2S,cAAaC,WAAYvC,oBAC5D,OAAO,UAAUN,MAAO8C,QAASC,YAAahK,IAAM,MAAO9I,SAAQ+S,cAAchD,MAAO8C,QAASC,YAAahK,KAwJlH,QAASkK,yBAAwBtR,OAC7B,MAAOA,OAAMsI,MAAMiJ,gBAAgB,GA6BvC,QAASC,iBAAgBnD,MAAOM,oBAAqB8C,aAAcC,eAC/D,GAAqBpT,SAAU,GAAIqT,UAASF,aAAcC,cAC1D,OAAOpT,SAAQsT,QAAQvD,MAAOM,qBAUlC,QAASkD,mBAAkBxD,MAAOyD,aAAcnD,oBAAqB8C,aAAcC,eAC/E,GAAqBpT,SAAU,GAAIqT,UAASF,aAAcC,cAC1D,OAAOpT,SAAQyT,MAAM1D,MAAOyD,aAAcnD,qBAkb9C,QAASqD,mBAAkB7G,GACvB,MAAOA,aAAa8G,UAAW9G,EAAEnK,OAASmK,EAAEnK,MAAMkR,WAAW,QAMjE,QAASC,mBAAkBhH,GACvB,MAAOA,aAAa8G,UAAW9G,EAAEnK,OAAqB,UAAZmK,EAAEnK,MAMhD,QAASoR,cAAaC,GAClB,MAAOA,GAAEC,MAAMC,KAAK,SAAUC,MAAQ,MAAOA,MAAK3P,OAAS4P,cAAkB,KAMjF,QAASC,mBAAkBC,MACvB,IAAKA,KACD,OAASxB,QAAS,GAAIC,YAAa,GAAIhK,GAAI,GAC/C,IAAqBwL,SAAUD,KAAKzT,QAAQ2T,cACvBC,UAAYH,KAAKzT,QAAQ6T,mBAC1CC,GAAMJ,SAAU,GAAOD,KAAKvT,MAAM,EAAGwT,SAAUD,KAAKvT,MAAMwT,QAAU,KAAOD,KAAM,IAAKM,eAAiBD,GAAG,GAAI5L,GAAK4L,GAAG,GACtHE,GAAMJ,WAAY,GACjBG,eAAe7T,MAAM,EAAG0T,WAAYG,eAAe7T,MAAM0T,UAAY,KACrE,GAAIG,gBAAiB9B,QAAU+B,GAAG,GAAI9B,YAAc8B,GAAG,EAC5D,QAAS/B,QAASA,QAASC,YAAaA,YAAahK,GAAIA,IA2B7D,QAAS+L,qBAAoBxT,SACzB,MAAOyT,iBAuBX,QAASC,QAAO/H,SACZ,MAAOA,SAAQlE,IAAMkM,KAAKC,eAAejI,QAAQ+C,OAAOmF,KAAK,KAAO,IAAMlI,QAAQ6F,QAAU,MAMhG,QAASsC,eAAcnI,SACnB,GAAIA,QAAQlE,GACR,MAAOkE,SAAQlE,EAEnB,IAAqB9I,SAAU,GAAIoV,gCACd/C,MAAQrF,QAAQ+C,MAAMsF,IAAI,SAAUC,GAAK,MAAOA,GAAElV,MAAMJ,QAAS,OACtF,OAAOuV,cAAalD,MAAM6C,KAAK,IAAKlI,QAAQ6F,SAuEhD,QAASoC,gBAAelF,OACpB,MAAOA,OAAMsF,IAAI,SAAUC,GAAK,MAAOA,GAAElV,MAAMoV,kBAAmB,QAqCtE,QAASR,MAAKlR,KACV,GAAqB2R,MAAO5R,WAAWC,KAClB4R,QAAUC,gBAAgBF,KAAMG,OAAOC,KACvCC,IAAoB,EAAdL,KAAKzT,OACX+T,EAAI,GAAIpT,OAAM,IAC/B+R,IAAM,WAAY,WAAY,WAAY,UAAY,YAAaY,EAAIZ,GAAG,GAAIsB,EAAItB,GAAG,GAAIuB,EAAIvB,GAAG,GAAIwB,EAAIxB,GAAG,GAAIyB,EAAIzB,GAAG,EAC1HgB,SAAQI,KAAO,IAAM,KAAS,GAAKA,IAAM,GACzCJ,SAAUI,IAAM,IAAM,GAAM,GAAK,IAAMA,GACvC,KAAK,GAAqBrK,GAAI,EAAGA,EAAIiK,QAAQ1T,OAAQyJ,GAAK,GAAI,CAE1D,IAAK,GADDmJ,KAAMU,EAAGU,EAAGC,EAAGC,EAAGC,GAAIC,GAAKxB,GAAG,GAAIyB,GAAKzB,GAAG,GAAI0B,GAAK1B,GAAG,GAAI2B,GAAK3B,GAAG,GAAI4B,GAAK5B,GAAG,GACxD6B,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACtCA,EAAI,GACJV,EAAEU,GAAKf,QAAQjK,EAAIgL,GAGnBV,EAAEU,GAAKC,MAAMX,EAAEU,EAAI,GAAKV,EAAEU,EAAI,GAAKV,EAAEU,EAAI,IAAMV,EAAEU,EAAI,IAAK,EAE9D,IAAIE,IAAKC,GAAGH,EAAGT,EAAGC,EAAGC,GAAIW,EAAIF,GAAG,GAAIG,EAAIH,GAAG,GACtBI,MAAQL,MAAMpB,EAAG,GAAIuB,EAAGV,EAAGW,EAAGf,EAAEU,IAAItN,OAAO6N,MAChEC,KAAMf,EAAGD,EAAGS,MAAMV,EAAG,IAAKV,EAAGyB,MAAOZ,EAAIc,GAAG,GAAIf,EAAIe,GAAG,GAAIhB,EAAIgB,GAAG,GAAIjB,EAAIiB,GAAG,GAAI3B,EAAI2B,GAAG,GAE3FC,IAAMF,MAAM1B,EAAGc,IAAKY,MAAMhB,EAAGK,IAAKW,MAAMf,EAAGK,IAAKU,MAAMd,EAAGK,IAAKS,MAAMb,EAAGK,KAAMlB,EAAI4B,GAAG,GAAIlB,EAAIkB,GAAG,GAAIjB,EAAIiB,GAAG,GAAIhB,EAAIgB,GAAG,GAAIf,EAAIe,GAAG,GAEpI,MAAOC,uBAAsBC,qBAAqB9B,EAAGU,EAAGC,EAAGC,EAAGC,IAC9D,IAAIc,IAAIC,GASZ,QAASN,IAAG5S,MAAOgS,EAAGC,EAAGC,GACrB,MAAIlS,OAAQ,IACCgS,EAAIC,GAAOD,EAAIE,EAAI,YAE5BlS,MAAQ,IACAgS,EAAIC,EAAIC,EAAG,YAEnBlS,MAAQ,IACCgS,EAAIC,EAAMD,EAAIE,EAAMD,EAAIC,EAAI,aAEjCF,EAAIC,EAAIC,EAAG,YAYvB,QAASmB,aAAYvT,KACjB,GAAqB2R,MAAO5R,WAAWC,KACnC4Q,IAAM4C,OAAO7B,KAAM,GAAI6B,OAAO7B,KAAM,SAAU8B,GAAK7C,GAAG,GAAI8C,GAAK9C,GAAG,EAKtE,OAJU,IAAN6C,IAAkB,GAANC,IAAiB,GAANA,KACvBD,GAAU,UAALA,GACLC,KAAU,aAEND,GAAIC,IAOhB,QAASjC,cAAapS,IAAK0P,SACvB,GAAI6B,IAAK2C,YAAYlU,KAAMoU,GAAK7C,GAAG,GAAI8C,GAAK9C,GAAG,EAC/C,IAAI7B,QAAS,CACT,GAAI+B,IAAKyC,YAAYxE,SAAU4E,IAAM7C,GAAG,GAAI8C,IAAM9C,GAAG,EACrD+B,IAAKgB,MAAMC,OAAOL,GAAIC,IAAK,IAAKC,IAAKC,MAAOH,GAAKZ,GAAG,GAAIa,GAAKb,GAAG,GAEpE,MAAOkB,uBAAsBT,qBAA0B,WAALG,GAAiBC,KACnE,IAAIb,IAOR,QAASW,QAAOxT,IAAKmS,GACjB,GACqBxK,GADjBiJ,IAAM,WAAY,YAAaY,EAAIZ,GAAG,GAAIsB,EAAItB,GAAG,GAEhCoB,IAAMhS,IAAI9B,MAC/B,KAAKyJ,EAAI,EAAGA,EAAI,IAAMqK,IAAKrK,GAAK,GAC5B6J,EAAI0B,MAAM1B,EAAGwC,OAAOhU,IAAK2H,EAAGmK,OAAOmC,SACnC/B,EAAIgB,MAAMhB,EAAG8B,OAAOhU,IAAK2H,EAAI,EAAGmK,OAAOmC,SACvC9B,EAAIe,MAAMf,EAAG6B,OAAOhU,IAAK2H,EAAI,EAAGmK,OAAOmC,SACvCnD,GAAKoD,KAAK1C,EAAGU,EAAGC,IAAKX,EAAIV,GAAG,GAAIoB,EAAIpB,GAAG,GAAIqB,EAAIrB,GAAG,EAOtD,OALAU,GAAI0B,MAAM1B,EAAGwC,OAAOhU,IAAK2H,EAAGmK,OAAOmC,SACnC/B,EAAIgB,MAAMhB,EAAG8B,OAAOhU,IAAK2H,EAAI,EAAGmK,OAAOmC,SAEvC9B,EAAIe,MAAMf,EAAGH,KACbG,EAAIe,MAAMf,EAAG6B,OAAOhU,IAAK2H,EAAI,EAAGmK,OAAOmC,SAAW,GAC3CC,KAAK1C,EAAGU,EAAGC,IAAI,EACtB,IAAIrB,IAMR,QAASoD,KAAItD,IACT,GAAIY,GAAIZ,GAAG,GAAIsB,EAAItB,GAAG,GAAIuB,EAAIvB,GAAG,EA4BjC,OA3BAY,GAAI2C,MAAM3C,EAAGU,GACbV,EAAI2C,MAAM3C,EAAGW,GACbX,GAAKW,IAAM,GACXD,EAAIiC,MAAMjC,EAAGC,GACbD,EAAIiC,MAAMjC,EAAGV,GACbU,GAAKV,GAAK,EACVW,EAAIgC,MAAMhC,EAAGX,GACbW,EAAIgC,MAAMhC,EAAGD,GACbC,GAAKD,IAAM,GACXV,EAAI2C,MAAM3C,EAAGU,GACbV,EAAI2C,MAAM3C,EAAGW,GACbX,GAAKW,IAAM,GACXD,EAAIiC,MAAMjC,EAAGC,GACbD,EAAIiC,MAAMjC,EAAGV,GACbU,GAAKV,GAAK,GACVW,EAAIgC,MAAMhC,EAAGX,GACbW,EAAIgC,MAAMhC,EAAGD,GACbC,GAAKD,IAAM,EACXV,EAAI2C,MAAM3C,EAAGU,GACbV,EAAI2C,MAAM3C,EAAGW,GACbX,GAAKW,IAAM,EACXD,EAAIiC,MAAMjC,EAAGC,GACbD,EAAIiC,MAAMjC,EAAGV,GACbU,GAAKV,GAAK,GACVW,EAAIgC,MAAMhC,EAAGX,GACbW,EAAIgC,MAAMhC,EAAGD,GACbC,GAAKD,IAAM,IACHV,EAAGU,EAAGC,GAYlB,QAASe,OAAM1B,EAAGU,GACd,MAAOkC,WAAU5C,EAAGU,GAAG,GAO3B,QAASkC,WAAU5C,EAAGU,GAClB,GAAqB7R,MAAW,MAAJmR,IAAmB,MAAJU,GACtBmC,MAAQ7C,IAAM,KAAOU,IAAM,KAAO7R,MAAQ,GAC/D,QAAQgU,OAAS,GAAKA,MAAQ,GAAa,MAANhU,KAOzC,QAASwT,OAAMjD,GAAIE,IACf,GAAIwD,IAAK1D,GAAG,GAAI2D,GAAK3D,GAAG,GACpB4D,GAAK1D,GAAG,GAAI2D,GAAK3D,GAAG,GACpB+B,GAAKuB,UAAUG,GAAIE,IAAKC,MAAQ7B,GAAG,GAAI8B,EAAI9B,GAAG,GAC7B+B,EAAI1B,MAAMA,MAAMoB,GAAIE,IAAKE,MAC9C,QAAQE,EAAGD,GAOf,QAASR,OAAM3C,EAAGU,GACd,GAAqB7R,MAAW,MAAJmR,IAAmB,MAAJU,GACtBmC,MAAQ7C,GAAK,KAAOU,GAAK,KAAO7R,KAAO,GAC5D,OAAQgU,OAAQ,GAAa,MAANhU,IAO3B,QAASuS,OAAMpB,EAAGqD,OACd,MAAQrD,IAAKqD,MAAUrD,IAAO,GAAKqD,MAOvC,QAASf,OAAMlD,GAAIiE,OACf,GAAIpB,IAAK7C,GAAG,GAAI8C,GAAK9C,GAAG,GACHgE,EAAKnB,IAAMoB,MAAUnB,KAAQ,GAAKmB,MAClCF,EAAKjB,IAAMmB,MAAUpB,KAAQ,GAAKoB,KACvD,QAAQD,EAAGD,GAOf,QAAS9C,iBAAgB7R,IAAK8U,QAE1B,IAAK,GADgBlD,SAAU/S,MAAOmB,IAAI9B,OAAS,IAAO,GAChCyJ,EAAI,EAAGA,EAAIiK,QAAQ1T,OAAQyJ,IACjDiK,QAAQjK,GAAKqM,OAAOhU,IAAS,EAAJ2H,EAAOmN,OAEpC,OAAOlD,SAOX,QAASmD,QAAO/U,IAAKE,OACjB,MAAOA,QAASF,IAAI9B,OAAS,EAA4B,IAAxB8B,IAAII,WAAWF,OAQpD,QAAS8T,QAAOhU,IAAKE,MAAO4U,QACxB,GAAqBE,MAAO,CAC5B,IAAIF,SAAWhD,OAAOC,IAClB,IAAK,GAAqBpK,GAAI,EAAGA,EAAI,EAAGA,IACpCqN,MAAQD,OAAO/U,IAAKE,MAAQyH,IAAO,GAAK,EAAIA,MAIhD,KAAK,GAAqBA,GAAI,EAAGA,EAAI,EAAGA,IACpCqN,MAAQD,OAAO/U,IAAKE,MAAQyH,IAAM,EAAIA,CAG9C,OAAOqN,MAMX,QAAS1B,qBAAoB1B,SACzB,MAAOA,SAAQvM,OAAO,SAAUrF,IAAKgV,MAAQ,MAAOhV,KAAMiV,mBAAmBD,OAAU,IAM3F,QAASC,oBAAmBD,MAExB,IAAK,GADgBhV,KAAM,GACD2H,EAAI,EAAGA,EAAI,EAAGA,IACpC3H,KAAOM,OAAOC,aAAcyU,OAAS,GAAK,EAAIrN,GAAM,IAExD,OAAO3H,KAMX,QAASqT,uBAAsBrT,KAE3B,IAAK,GADgBkV,KAAM,GACDvN,EAAI,EAAGA,EAAI3H,IAAI9B,OAAQyJ,IAAK,CAClD,GAAqBuK,GAAI6C,OAAO/U,IAAK2H,EACrCuN,OAAQhD,IAAM,GAAG9Q,SAAS,KAAW,GAAJ8Q,GAAU9Q,SAAS,IAExD,MAAO8T,KAAIzX,cAMf,QAASsW,uBAAsB/T,KAG3B,IAAK,GAFgBmV,SAAU,GACVC,WAAa,IACRzN,EAAI3H,IAAI9B,OAAS,EAAGyJ,GAAK,EAAGA,IAClDwN,QAAUE,UAAUF,QAASG,kBAAkBP,OAAO/U,IAAK2H,GAAIyN,aAC/DA,WAAaE,kBAAkB,IAAKF,WAExC,OAAOD,SAAQjP,MAAM,IAAIqP,UAAUnE,KAAK,IAO5C,QAASiE,WAAU7N,EAAGgO,GAGlB,IAAK,GAFgBC,KAAM,GACNzD,IAAM0D,KAAKC,IAAInO,EAAEtJ,OAAQsX,EAAEtX,QACtByJ,EAAI,EAAoB+M,MAAQ,EAAG/M,EAAIqK,KAAO0C,MAAO/M,IAAK,CAChF,GAAqBiO,QAASlB,SAAUlN,EAAEG,IAAM,MAAO6N,EAAE7N,IAAM,EAC3DiO,SAAU,IACVlB,MAAQ,EACRe,KAAOG,OAAS,KAGhBlB,MAAQ,EACRe,KAAOG,QAGf,MAAOH,KAOX,QAASH,mBAAkBO,IAAK3D,GAG5B,IAFA,GAAqB4D,SAAU,GACVC,YAAc7D,EACpB,IAAR2D,IAAWA,OAAc,EAClB,EAANA,MACAC,QAAUT,UAAUS,QAASC,cACjCA,YAAcV,UAAUU,YAAaA,YAEzC,OAAOD,SAoLX,QAASE,WAAU/J,OACf,MAAOA,OAAMsF,IAAI,SAAU0E,MAAQ,MAAOA,MAAK3Z,MAAM4Z,YAAc9E,KAAK,IAkG5E,QAAS+E,YAAW5N,MAChB,MAAO6N,gBAAe/Q,OAAO,SAAUkD,KAAM8N,OAAS,MAAO9N,MAAK1K,QAAQwY,MAAM,GAAIA,MAAM,KAAQ9N,MAoVtG,QAAS+N,gBAAeC,KACpB,OAAQA,IAAI9Y,eACR,IAAK,KACD,MAAO,IACX,KAAK,MACD,MAAO,OACX,SACI,MAAO,KAAO8Y,KAgJ1B,QAASC,UAAStN,SACd,MAAOmI,eAAcnI,SAkDzB,QAASuN,cAAaC,cAClB,MAAOA,cAAavY,cAAcN,QAAQ,cAAe,KAkE7D,QAAS8Y,oBAAmBC,SAAU5R,GAAI6R,SACtCjX,OAAOkX,eAAeF,SAAU5R,IAC5B+R,cAAc,EACdC,YAAY,EACZ9V,IAAK,WACD,GAAqBtC,OAAQiY,SAE7B,OADAjX,QAAOkX,eAAeF,SAAU5R,IAAMgS,YAAY,EAAMpY,MAAOA,QACxDA,OAEX0C,IAAK,SAAU2V,GAAK,KAAM,IAAIla,OAAM,6CA6d5C,QAASma,kBAAiBC,QAEtB,OADAA,QAAUA,QAAU,OAAO1Z,eAEvB,IAAK,MACD,MAAO,IAAI2Z,IACf,KAAK,MACD,MAAO,IAAIC,IACf,KAAK,QACL,IAAK,MACL,QACI,MAAO,IAAIC,QAiGvB,QAASC,UAASC,IAAKC,KAAMnU,MAGzB,MAFa,UAATmU,OAAmBA,KAAO,MACjB,SAATnU,OAAmBA,KAAO,OAClB,MAARmU,KACO,YAAcD,IAGd,YAAcA,IAAM,IAAMlU,KAAO,IAAMmU,KAOtD,QAASC,mBAAkBnW,YACvB,GAAqBd,MAAOc,WAAWd,IACvC,OAAOzE,eAAc6F,WAAW6V,kBAAkBjX,KAAMc,WAAW0E,UAAW,KAAM1E,WAAWoW,SAMnG,QAASC,kBAAiBrW,YACtB,OAASX,UAAW8W,kBAAkBnW,aAM1C,QAASsW,iBAAgBtW,YACrB,OAASA,WAAYA,YAMzB,QAASuW,uBAAsBvW,YAC3B,MAAOsW,iBAAgBD,iBAAiBrW,aA6B5C,QAASwW,aAAY9L,OACjB,GAAqB+L,UAAW,GAAIC,UACpC,OAAO,IAAIC,iBAAgBlM,SAASgM,SAAU/L,OAAQ+L,SAASG,WAAYH,SAASI,QAuFxF,QAASC,mBAAkB9b,IAAK6b,QAC5B,GAAqBE,UAAW/b,IAAIgc,MAAMhH,IAAI,SAAUY,GAChDqG,aAAa1b,QAAQqV,EAAEvT,SAAU,GAAOuT,EAAEvT,MAAM6Z,MAAM,WACtDL,OAAO1b,KAAK,GAAIgc,gBAAevG,EAAEwG,gBAAiB,gDAAoDH,aAAapH,KAAK,OAE5H,IAAqBwH,iBAAkBb,YAAY5F,EAAE0G,WAErD,OADAT,QAAO1b,KAAKoc,MAAMV,OAAQQ,gBAAgBR,QACnC,GAAIW,SAAQ,eAAgB,GAAIC,aAAY,eAAgB,GAAK7G,EAAEvT,MAAOuT,EAAEwG,kBAAmBC,gBAAgB3M,MAAOkG,EAAE3D,WAAY2D,EAAE3D,WAAY2D,EAAE3D,cAE1IyK,WAAa,GAAID,aAAY,aAAczc,IAAI2c,YAAa3c,IAAI4c,sBACrF,OAAO,IAAIJ,SAAQ,gBAAiBE,YAAaX,SAAU/b,IAAIiS,WAAYjS,IAAIiS,WAAYjS,IAAIiS,YAOnG,QAAS4K,oBAAmB7c,IAAK6b,QAC7B,GAAqBE,UAAW/b,IAAIgc,MAAMhH,IAAI,SAAUY,GACpD,GAAqByG,iBAAkBb,YAAY5F,EAAE0G,WAErD,OADAT,QAAO1b,KAAKoc,MAAMV,OAAQQ,gBAAgBR,QAC1B,UAAZjG,EAAEvT,MAEK,GAAIma,SAAQ,eAAgB,GAAIC,aAAY,kBAAmB,GAAI7G,EAAEwG,kBAAmBC,gBAAgB3M,MAAOkG,EAAE3D,WAAY2D,EAAE3D,WAAY2D,EAAE3D,YAEjJ,GAAIuK,SAAQ,eAAgB,GAAIC,aAAY,eAAgB,GAAK7G,EAAEvT,MAAOuT,EAAEwG,kBAAmBC,gBAAgB3M,MAAOkG,EAAE3D,WAAY2D,EAAE3D,WAAY2D,EAAE3D,cAE1IyK,WAAa,GAAID,aAAY,aAAczc,IAAI2c,YAAa3c,IAAI4c,sBACrF,OAAO,IAAIJ,SAAQ,gBAAiBE,YAAaX,SAAU/b,IAAIiS,WAAYjS,IAAIiS,WAAYjS,IAAIiS,YAicnG,QAAS6K,oBAAmBC,SAAU1I,IAClC,GAAI2I,aAAc3I,GAAG2I,YAAaC,SAAW5I,GAAG4I,SAAUC,KAAO7I,GAAG6I,IACpE,QACIjX,MAAO8W,SAAS9W,MAChBkX,SAAUJ,SAASI,SACnBH,YAAaA,YACbI,WAAYL,SAASK,WACrBH,SAAUA,SACVC,KAAMA,KACNG,MAAON,SAASM,OAQxB,QAASC,uBAAsBP,SAAU1I,IACrC,GAAIkJ,OAAQlJ,GAAGkJ,MAAOpV,UAAYkM,GAAGlM,SACrC,OAAO,IAAIqV,aAAYT,SAAS9W,MAAO8W,SAASU,cAAeV,SAASQ,OAASA,MAAOpV,UAAW4U,SAASW,aAAcX,SAAS9V,eAAgB8V,SAAS9K,YAQhK,QAAS0L,iCAAgCC,WAAY3L,WAAY4L,cAC7D,GAAqBC,kBAAmB,GAAIC,IAC5CH,YAAW3d,QAAQ,SAAU+d,WACzB,GAAqBC,cAAgBhY,OAASjB,WAAYgZ,UAAUjX,MAAQoW,SAAUa,UAAUjX,KAChGmX,oBAAmBD,aAAcD,UAAU9V,YAAciW,gBAAgBC,UAAYD,gBAAgBE,WAAW,EAAMpM,WAAY4L,aAAcC,mBAGpJ,IAAqBQ,8BAA+BV,WAAWW,OAAO,SAAUC,KAAO,MAAOA,KAAItW,cAAgBgB,OAAO0U,WAAWW,OAAO,SAAUC,KAAO,OAAQA,IAAItW,cAKxK,OAJAoW,8BAA6Bre,QAAQ,SAAU+d,WAC3CE,kBAAkBF,UAAU7V,UAAWgW,gBAAgBM,eAAe,EAAOxM,WAAY4L,aAAcC,kBACvGI,kBAAkBF,UAAU5V,cAAe+V,gBAAgBO,gBAAgB,EAAOzM,WAAY4L,aAAcC,oBAEzGA,iBAWX,QAASI,mBAAkB/V,UAAWuV,aAAcH,MAAOtL,WAAY4L,aAAcc,wBACjFxW,UAAUlI,QAAQ,SAAU8c,UACxB,GAAqB6B,kBAAmBD,uBAAuBha,IAAIuB,eAAe6W,SAAS9W,OAI3F,IAHwB,MAApB2Y,oBAA8BA,iBAAiBnB,iBAAoBV,SAASM,OAC5EQ,aAAa1d,KAAK,GAAI0e,eAAc,iEAAmE7Y,UAAU4Y,iBAAiB3Y,OAAQgM,aAEzI2M,iBAUI7B,SAASM,QACVuB,iBAAiBzW,UAAUxG,OAAS,GAExCid,iBAAiBzW,UAAUhI,KAAK4c,cAbb,CACnB,GAAqB9V,gBAAiB8V,SAAS9W,MAAMjB,YAC/C+X,SAAS9W,MAAiB,WAAEgB,eAC5B8V,SAAS9W,MAAiB,WAAEgB,kBAEb6X,aAAe/B,SAASI,UAAYJ,SAASC,aAAeD,SAASK,WAC1FwB,kBAAmB,GAAIpB,aAAYT,SAAS9W,MAAO8W,SAASM,MAAOE,OAASuB,YAAa/B,UAAWW,aAAczW,eAAgBgL,YAClI0M,uBAAuB5Z,IAAImB,eAAe6W,SAAS9W,OAAQ2Y,qBAcvE,QAASG,iBAAgBC,WAErB,GAAqBC,aAAc,EACd3W,YAAc,GAAIyV,IAIvC,OAHIiB,WAAU1W,aACV0W,UAAU1W,YAAYrI,QAAQ,SAAUif,OAAS,MAAOC,qBAAoB7W,aAAekB,KAAM0V,MAAOE,QAASH,kBAE9G3W,YAOX,QAAS+W,oBAAmBC,oBAAqB1B,YAC7C,GAAqB2B,gBAAiBD,oBACjBE,eAAiB,GAAIzB,IAM1C,OALAH,YAAW3d,QAAQ,SAAU+d,UAAWyB,gBAChCzB,UAAU3V,SACV2V,UAAU3V,QAAQpI,QAAQ,SAAUif,OAAS,MAAOC,qBAAoBK,gBAAkBhW,KAAM0V,MAAOE,QAASG,uBAGjHC,eAOX,QAASL,qBAAoBnK,IAAKkK,OAC9BA,MAAM1V,KAAKkW,UAAUzf,QAAQ,SAAUgG,OACnC,GAAqB6T,OAAQ9E,IAAIrQ,IAAIuB,eAAeD,OAC/C6T,SACDA,SACA9E,IAAIjQ,IAAImB,eAAeD,OAAQ6T,QAEnCA,MAAM3Z,KAAK+e,SAyGnB,QAASS,sBAAqB9P,KAC1B,GAAW,MAAPA,KAA8B,IAAfA,IAAIlO,QAA0B,KAAVkO,IAAI,GACvC,OAAO,CACX,IAAqB+P,aAAc/P,IAAIqM,MAAM2D,uBAC7C,OAAuB,QAAhBD,aAA0C,WAAlBA,YAAY,IAAqC,SAAlBA,YAAY,GAU9E,QAASE,kBAAiBC,SAAUC,QAASC,SACzC,GAAqBC,cACAC,gBAAkBF,QAAQ3e,QAAQ8e,mBAAoB,IAAI9e,QAAQ+e,kBAAmB,WAEtG,IAAK,GADD7e,MACKC,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCD,EAAEC,IAAMC,UAAUD,GAEtB,IAAqBoO,KAAMrO,EAAE,IAAMA,EAAE,EACrC,OAAKme,sBAAqB9P,MAI1BqQ,UAAU/f,KAAK4f,SAASO,QAAQN,QAASnQ,MAClC,IAHIrO,EAAE,IAKjB,OAAO,IAAI+e,kBAAiBJ,gBAAiBD,WAogBjD,QAASM,mBAAkBtc,MACvB,MAAkB,KAAXA,KAAK,GAShB,QAASuc,8BAA6BC,SAAUha,SAAUia,SAAUC,aAChE,GAAqBC,QAQrB,OAPAra,aAAYC,MAAMC,UAAUzG,QAAQ,SAAUyG,UAC1C,GAAqBoa,cAAepa,SAAS0L,SAAW1L,SAAS0L,SAAWsO,SAASK,uBAChEC,gBAAkB,GAAIC,KAAIva,SAASwa,aAAa3C,OAAO,SAAU7X,UAAY,MAAOA,UAASya,sBAC7GnM,IAAI,SAAUtO,UAAY,MAAOA,UAAS0L,WAC1BgP,qBAAuBN,aAAavC,OAAO,SAAUle,aAAe,OAAQ2gB,gBAAgBtc,IAAIrE,cACrHwgB,MAAK1gB,KAAKoc,MAAMsE,KAAMO,qBAAqBpM,IAAI,SAAU3U,aAAe,MAAOqgB,UAASW,gBAAgBhhB,YAAasgB,SAAUC,kBAE5G,IAAhBC,KAAKlf,QAAgBlC,cAAc6hB,gBAAgBC,MAAQjf,MAAMkf,KAAK,GAAIP,KAAIJ,OAAOY,OAgBhG,QAASC,iBAAgB1hB,KACrB,GAAqB2hB,YAAa,KACbC,SAAW,KACXC,QAAU,KACVC,aAAc,EACdC,UAAY,IACjC/hB,KAAI2T,MAAM1T,QAAQ,SAAU4T,MACxB,GAAqBmO,YAAanO,KAAK3P,KAAKhD,aACxC8gB,aAAcC,uBACdN,WAAa9N,KAAKxR,MAEb2f,YAAcE,qBACnBN,SAAW/N,KAAKxR,MAEX2f,YAAcG,oBACnBN,QAAUhO,KAAKxR,MAEVwR,KAAK3P,MAAQke,qBAClBN,aAAc,EAETjO,KAAK3P,MAAQme,eACdxO,KAAKxR,MAAMV,OAAS,IACpBogB,UAAYlO,KAAKxR,SAI7Bsf,WAAaW,yBAAyBX,WACtC,IAAqBY,UAAWviB,IAAIkE,KAAKhD,cACpB6F,KAAOyb,qBAAqBC,KAajD,OAZIriB,aAAYmiB,UAAU,IAAMG,mBAC5B3b,KAAOyb,qBAAqBG,WAEvBJ,UAAYK,cACjB7b,KAAOyb,qBAAqBK,MAEvBN,UAAYO,eACjB/b,KAAOyb,qBAAqBO,OAEvBR,UAAYS,cAAgBnB,SAAWoB,uBAC5Clc,KAAOyb,qBAAqBU,YAEzB,GAAIC,kBAAiBpc,KAAM4a,WAAYC,SAAUE,YAAaC,WAkCzE,QAASO,0BAAyBX,YAC9B,MAAmB,QAAfA,YAA6C,IAAtBA,WAAWhgB,OAC3B,IAEJggB,WAg0BX,QAASyB,cAAaC,gBAClB,MAAOA,gBAAelhB,OAAOwH,MAAM,QA2DvC,QAAS2Z,0BAAyBjjB,YAAakjB,YAC3C,GAAqBC,aAAc,GAAIhd,aAClBid,WAAarjB,YAAYC,aAAa,EAC3DmjB,aAAYE,WAAWD,WACvB,KAAK,GAAqBrY,GAAI,EAAGA,EAAImY,WAAW5hB,OAAQyJ,IAAK,CACzD,GAAqBuY,UAAWJ,WAAWnY,GAAG,GACzBwY,aAAexjB,YAAYujB,UAAU,GACrCE,UAAYN,WAAWnY,GAAG,EAE/C,IADAoY,YAAYM,aAAaF,aAAcC,WACnCF,SAASziB,eAAiB6iB,WAAY,CACtC,GAAqBC,SAAUZ,aAAaS,UAC5CG,SAAQ/jB,QAAQ,SAAUgkB,WAAa,MAAOT,aAAYU,aAAaD,cAG/E,MAAOT,aAQX,QAASW,kBAAiBzK,MACtB,MAAOA,gBAAgB0K,OAAoC,GAA5B1K,KAAKrX,MAAMF,OAAOR,OAOrD,QAAS0iB,yBAAwBC,OAC7B,GAAqBtP,KAAM,GAAI+I,IAM/B,OALAuG,OAAMrkB,QAAQ,SAAU+I,MACfgM,IAAIrQ,IAAIqE,KAAKjC,KAAK1C,YACnB2Q,IAAIjQ,IAAIiE,KAAKjC,KAAK1C,UAAW2E,QAG9B1G,MAAMkf,KAAKxM,IAAIuP,UAM1B,QAASC,mBAAkBxkB,KAIvB,MAHIA,eAAeykB,iBACfzkB,IAAMA,IAAIA,KAEPA,cAAe0kB,WAQ1B,QAASC,YAAWC,GAAIC,qBAAsBC,mBAC1C,GAAqBC,SAAU3kB,YAAYwkB,GAAG1gB,MAAM,EAEpD,OAAI6gB,WAAYC,sBAGZD,QAAQ7jB,gBAAkB+jB,oBACtBJ,sBAAwBE,QAAQ7jB,gBAAkB+jB,oBAClDH,kBAAkB,kEAAmEF,GAAG3S,aACjF,GAHf,QA0BJ,QAASiT,yCACL,MAAO,IAAIC,aAKf,QAASC,mCACL,MAAO,IAAID,aAAY,KA4E3B,QAASE,cAAaxV,KAClB,GAAqBqM,OAAQoJ,OAAOzV,IACpC,OAAQqM,QAASA,MAAMqJ,gBAAgBC,SAAY,GAmBvD,QAASC,wBAAuBC,WAAYC,aAAcC,WAAYC,SAAUC,SAAUC,cAAeC,cACrG,GAAqBC,OAuBrB,OAtBkB,OAAdP,YACAO,IAAI9lB,KAAKulB,WAAa,KAER,MAAdE,aACAK,IAAI9lB,KAAK,MACW,MAAhBwlB,cACAM,IAAI9lB,KAAKwlB,aAAe,KAE5BM,IAAI9lB,KAAKylB,YACO,MAAZC,UACAI,IAAI9lB,KAAK,IAAM0lB,WAGP,MAAZC,UACAG,IAAI9lB,KAAK2lB,UAEQ,MAAjBC,eACAE,IAAI9lB,KAAK,IAAM4lB,eAEC,MAAhBC,cACAC,IAAI9lB,KAAK,IAAM6lB,cAEZC,IAAIpR,KAAK,IA8GpB,QAASyQ,QAAOY,KACZ,MAAOA,KAAIhK,MAAMiK,UASrB,QAASC,oBAAmBlL,MACxB,GAAY,KAARA,KACA,MAAO,GAMX,KAAK,GALgBmL,cAA0B,KAAXnL,KAAK,GAAY,IAAM,GACtCoL,cAA0C,MAA1BpL,KAAKA,KAAKvZ,OAAS,GAAa,IAAM,GACtD4kB,SAAWrL,KAAKvR,MAAM,KACtBsc,OACAO,GAAK,EACAC,IAAM,EAAGA,IAAMF,SAAS5kB,OAAQ8kB,MAAO,CAC7D,GAAqBC,SAAUH,SAASE,IACxC,QAAQC,SACJ,IAAK,GACL,IAAK,IACD,KACJ,KAAK,KACGT,IAAItkB,OAAS,EACbskB,IAAIU,MAGJH,IAEJ,MACJ,SACIP,IAAI9lB,KAAKumB,UAGrB,GAAoB,IAAhBL,aAAoB,CACpB,KAAOG,MAAO,GACVP,IAAIW,QAAQ,KAEG,KAAfX,IAAItkB,QACJskB,IAAI9lB,KAAK,KAEjB,MAAOkmB,cAAeJ,IAAIpR,KAAK,KAAOyR,cAQ1C,QAASO,0BAAyB7U,OAC9B,GAAqBkJ,MAAOlJ,MAAMuT,gBAAgBuB,KAGlD,OAFA5L,MAAe,MAARA,KAAe,GAAKkL,mBAAmBlL,MAC9ClJ,MAAMuT,gBAAgBuB,MAAQ5L,KACvBuK,uBAAuBzT,MAAMuT,gBAAgBC,QAASxT,MAAMuT,gBAAgBwB,UAAW/U,MAAMuT,gBAAgByB,QAAShV,MAAMuT,gBAAgB0B,MAAO/L,KAAMlJ,MAAMuT,gBAAgB2B,WAAYlV,MAAMuT,gBAAgB4B,WAQ5N,QAASC,aAAYC,KAAMxX,KACvB,GAAqBmC,OAAQsT,OAAOgC,UAAUzX,MACzB0X,UAAYjC,OAAO+B,KACxC,IAAqC,MAAjCrV,MAAMuT,gBAAgBC,QACtB,MAAOqB,0BAAyB7U,MAGhCA,OAAMuT,gBAAgBC,QAAU+B,UAAUhC,gBAAgBC,OAE9D,KAAK,GAAqBpa,GAAIma,gBAAgBC,OAAQpa,GAAKma,gBAAgB0B,KAAM7b,IAC7D,MAAZ4G,MAAM5G,KACN4G,MAAM5G,GAAKmc,UAAUnc,GAG7B,IAAsC,KAAlC4G,MAAMuT,gBAAgBuB,MAAM,GAC5B,MAAOD,0BAAyB7U,MAEpC,IAAqBkJ,MAAOqM,UAAUhC,gBAAgBuB,KAC1C,OAAR5L,OACAA,KAAO,IACX,IAAqBvX,OAAQuX,KAAKsM,YAAY,IAG9C,OAFAtM,MAAOA,KAAKuM,UAAU,EAAG9jB,MAAQ,GAAKqO,MAAMuT,gBAAgBuB,MAC5D9U,MAAMuT,gBAAgBuB,MAAQ5L,KACvB2L,yBAAyB7U,OA2cpC,QAAS0V,qBAAoB3gB,MACzB,MAAOA,gBAAgBtH,eAAc4e,UAQzC,QAASsJ,UAASC,IAAKC,WACnB,IAAK,GAAqBzc,GAAIwc,IAAIjmB,OAAS,EAAGyJ,GAAK,EAAGA,IAClD,GAAIyc,UAAUD,IAAIxc,IACd,MAAOwc,KAAIxc,EAGnB,OAAO,MAeX,QAAS0c,mBAAkBziB,UACvB,GAAqB0iB,eAAgBC,sBAAsB3iB,SAC3D,OAAO0iB,eAAc,GAAK,aAAeA,cAAc,GAM3D,QAASE,gBAAe5iB,UACpB,MAAOA,UAAS/D,QAAQ4mB,WAAY,KAMxC,QAASC,iBAAgB9iB,UACrB,MAAO6iB,YAAWxc,KAAKrG,UAM3B,QAAS2iB,uBAAsB9M,MAC3B,GAAIA,KAAKkN,SAAS,SACd,OAAQlN,KAAKza,MAAM,GAAG,GAAK,MAE/B,IAAqB4nB,SAAUnN,KAAKsM,YAAY,IAChD,OAAIa,YAAY,GACJnN,KAAKuM,UAAU,EAAGY,SAAUnN,KAAKuM,UAAUY,WAE/CnN,KAAM,IAMlB,QAASoN,iBAAgBC,UACrB,GAAqBC,uBAAwBD,SAASjnB,QAAQmnB,wBAAyB,GACvF,OAAOD,uBAAwB,kBAOnC,QAASE,kBAAiBC,KAAM1iB,OAC5B,MAAOxG,eAAc6F,WAAWojB,iBAAiBziB,MAAO2iB,YAAYD,OAMxE,QAASC,aAAYD,MACjB,OAAQA,MACJ,IAAKlpB,eAAcopB,gBAAgBC,OAC/B,MAAO,UACX,KAAKrpB,eAAcopB,gBAAgBE,UAC/B,MAAO,aACX,KAAKtpB,eAAcopB,gBAAgBG,QAC/B,MAAO,WACX,KAAKvpB,eAAcopB,gBAAgBI,UAC/B,MAAO,aACX,KAAKxpB,eAAcopB,gBAAgBK,iBAC/B,MAAO,oBACX,KAAKzpB,eAAcopB,gBAAgBM,oBAC/B,MAAO,uBACX,KAAK1pB,eAAcopB,gBAAgBO;AAC/B,MAAO,iBACX,KAAK3pB,eAAcopB,gBAAgBQ,iBAC/B,MAAO,sBAOnB,QAASC,qBAAoBlmB,KACzB,MAAOA,eAAe3D,eAAc8pB,SAmDxC,QAASC,iBAAgBziB,MACrB,MAAOA,gBAAgBtH,eAAcgqB,KAgqCzC,QAASC,cAAaC,KAAM1D,KAExB,GADY,SAARA,MAAkBA,QAClB0D,KACA,IAAK,GAAqBve,GAAI,EAAGA,EAAIue,KAAKhoB,OAAQyJ,IAAK,CACnD,GAAqBpC,MAAOvJ,cAAcmqB,kBAAkBD,KAAKve,GAC7D9I,OAAMC,QAAQyG,MACd0gB,aAAa1gB,KAAMid,KAGnBA,IAAI9lB,KAAK6I,MAIrB,MAAOid,KAMX,QAAS4D,aAAYC,OACjB,MAAIA,OACOxnB,MAAMkf,KAAK,GAAIP,KAAI6I,WAQlC,QAASC,uBAAsBJ,MAC3B,MAAOE,aAAYH,aAAaC,OAMpC,QAASK,aAAY3nB,OACjB,MAAQA,iBAAiBkC,eAAkBlC,gBAAiB5C,eAAcwqB,KAQ9E,QAASC,oBAAmBC,UAAWpjB,KAAMqjB,aACzC,GAAIrjB,eAAgBxC,cAChB,MAAOwC,MAAK1B,QAEhB,IAAqBglB,UAAWD,YAAYC,QAC5C,IAAwB,gBAAbA,UAAuB,CAC9B,GAAqBC,QAASjF,aAAagF,SAC3C,OAAOC,QAASD,SAAW,WAAaA,SAAWE,cAElD,GAAiB,OAAbF,UAAkC,SAAbA,SAC1B,KAAMxnB,aAAY,mCAAsC2nB,cAAczjB,MAAQ,yJAGlF,OAAOojB,WAAU5kB,UAAUwB,MAO/B,QAAS0jB,oBAAmBpoB,MAAOqoB,mBAC/BtoB,WAAWC,MAAO,GAAIsoB,wBAA0BD,mBAqBpD,QAASF,eAAczjB,MACnB,MAAIA,gBAAgBxC,cACTwC,KAAK7C,KAAO,OAAS6C,KAAK1B,SAG1B5F,cAAcwF,WAAW8B,MAQxC,QAAS6jB,4BAA2BnlB,UAEhC,GAAqB1C,OAAQvC,MAAM,kCAAoCf,cAAcwF,WAAWQ,UAAY,0BAE5G,OADA,OAAUhG,cAAcorB,uBAAyBplB,SAC1C1C,MAwyDX,QAAS+nB,kBAAiBC,OACtB,GAAqBprB,SAAU,GAAIqrB,gBAEnC,OADArrB,SAAQsrB,mBAAmBF,MAAO,MAC3BprB,QAAQurB,SA2CnB,QAASC,oCAAmCC,KAAMnZ,YAC9C,IAAKA,WACD,MAAOmZ,KAEX,IAAqBC,aAAc,GAAIC,6BAA4BrZ,WACnE,OAAOmZ,MAAKG,eAAeF,YAAa,MAO5C,QAASG,qCAAoCC,KAAMxZ,YAC/C,IAAKA,WACD,MAAOwZ,KAEX,IAAqBJ,aAAc,GAAIC,6BAA4BrZ,WACnE,OAAOwZ,MAAKC,gBAAgBL,YAAa,MAuD7C,QAASM,UAASznB,KAAM6C,KAAMkL,YAE1B,MADa,UAATlL,OAAmBA,KAAO,MACvB,GAAI6kB,aAAY1nB,KAAM6C,KAAMkL,YAQvC,QAAS4Z,YAAWpjB,GAAIqjB,WAAY7Z,YAEhC,MADmB,UAAf6Z,aAAyBA,WAAa,MACnC,GAAIC,cAAatjB,GAAI,KAAMqjB,WAAY7Z,YAQlD,QAAS+Z,YAAWvjB,GAAIqjB,WAAYG,eAGhC,MAFmB,UAAfH,aAAyBA,WAAa,MACpB,SAAlBG,gBAA4BA,cAAgB,MACnC,MAANxjB,GAAayjB,eAAeL,WAAWpjB,GAAIqjB,YAAaG,eAAiB,KAOpF,QAASC,gBAAeT,KAAMQ,eAE1B,MADsB,UAAlBA,gBAA4BA,cAAgB,MACjC,MAARR,KAAe,GAAIU,gBAAeV,KAAMQ,eAAiB,KAQpE,QAASG,YAAW7H,OAAQxd,KAAMkL,YAE9B,MADa,UAATlL,OAAmBA,KAAO,MACvB,GAAIslB,kBAAiB9H,OAAQxd,KAAMkL,YAQ9C,QAASqa,YAAW/H,OAAQxd,KAAMwlB,QAG9B,MAFa,UAATxlB,OAAmBA,KAAO,MACf,SAAXwlB,SAAqBA,QAAS,GAC3B,GAAIC,gBAAejI,OAAOvP,IAAI,SAAU8E,OAAS,MAAO,IAAI2S,iBAAgB3S,MAAM,GAAIA,MAAM,GAAIyS,UAAaxlB,MAOxH,QAAS2lB,KAAIjB,KAAMxZ,YACf,MAAO,IAAI0a,SAAQlB,KAAMxZ,YAS7B,QAAS2a,IAAGC,OAAQC,KAAM/lB,KAAMkL,YAE5B,MADa,UAATlL,OAAmBA,KAAO,MACvB,GAAIgmB,cAAaF,OAAQC,KAAM/lB,KAAMkL,YAQhD,QAAS+a,SAAQ3qB,MAAO0E,KAAMkL,YAE1B,MADa,UAATlL,OAAmBA,KAAO,MACvB,GAAIkmB,aAAY5qB,MAAO0E,KAAMkL,YAOxC,QAASib,iBAAgBre,QACrB,GAAqBse,YAAate,OAAOse,eACpBC,eAAiBve,OAAOwe,QAAUC,WAAWC,OAAOJ,YAAYK,aAChEC,QAAUC,wBAAwBprB,MAAMC,QAAQsM,OAAO8e,UAAY9e,OAAO8e,UAAY9e,OAAO8e,WAC7FC,KAAO,GAAIC,aAAY,KAAMhf,OAAOif,eAAkBV,eAAelkB,OAAOukB,QAAQM,WACzG,OAAO,IAAIC,WAAUnf,OAAO3K,KAAM2K,OAAOwe,OAAQI,QAAQQ,OAAQR,QAAQS,QAASN,KAAMH,QAAQU,QAAStf,OAAOuf,cAAiBvf,OAAOoD,YAM5I,QAASyb,yBAAwBC,UAC7B,OACIM,UAAW/kB,OAAOqT,SAAUoR,SAAS3Y,IAAI,SAAUyY,SAAW,MAAOA,SAAQQ,cAC7EE,WAAYjlB,OAAOqT,SAAUoR,SAAS3Y,IAAI,SAAUyY,SAAW,MAAOA,SAAQU,eAC9ED,WAAYhlB,OAAOqT,SAAUoR,SAAS3Y,IAAI,SAAUyY,SAAW,MAAOA,SAAQS,eAC9EH,aAAc7kB,OAAOqT,SAAUoR,SAAS3Y,IAAI,SAAUyY,SAAW,MAAOA,SAAQM,kBASxF,QAASM,yBAAwBhsB,MAAO0E,MAEpC,MADa,UAATA,OAAmBA,KAAO,MACvB3E,WAAWC,MAAO,GAAIisB,4BAA8BvnB,MAuS/D,QAASwnB,yBAAwBtoB,OAC7B,MAAmB,OAAfA,MAAM5D,MACC2qB,QAAQ/mB,MAAM5D,OAGdwpB,WAAW5lB,MAAMjB,YA2JhC,QAASwpB,gBAAensB,OACpB,GAAqBosB,KAAM,EAC3BpsB,OAAQmB,WAAWnB,MACnB,KAAK,GAAqB+I,GAAI,EAAGA,EAAI/I,MAAMV,QAAS,CAChD,GAAqB+sB,IAAKrsB,MAAMwB,WAAWuH,KACtBujB,GAAKtsB,MAAMwB,WAAWuH,KACtBwjB,GAAKvsB,MAAMwB,WAAWuH,IAC3CqjB,MAAOI,cAAcH,IAAM,GAC3BD,KAAOI,eAAqB,EAALH,KAAW,GAAM/f,MAAMggB,IAAM,EAAIA,IAAM,IAC9DF,KAAO9f,MAAMggB,IAAM,IAAME,eAAqB,GAALF,KAAY,EAAMC,IAAM,GACjEH,KAAO9f,MAAMggB,KAAOhgB,MAAMigB,IAAM,IAAMC,cAAmB,GAALD,IAExD,MAAOH,KAMX,QAASK,aAAYzsB,OACjBA,MAAQA,MAAQ,IAAOA,OAAU,GAAK,EAAIA,OAAS,CACnD,IAAqB4jB,KAAM,EAC3B,GAAG,CACC,GAAqB8I,OAAgB,GAAR1sB,KAC7BA,SAAiB,EACbA,MAAQ,IACR0sB,MAAgB,GAARA,OAEZ9I,KAAO4I,cAAcE,aAChB1sB,MAAQ,EACjB,OAAO4jB,KAOX,QAAS4I,eAAcxsB,OACnB,GAAIA,MAAQ,GAAKA,OAAS,GACtB,KAAM,IAAI7B,OAAM,6CAEpB,OAAOwuB,YAAW3sB,OA0qBtB,QAAS4sB,kBAAiB5tB,MAAO6tB,aAAcC,aAE3C,GADoB,SAAhBA,cAA0BA,aAAc,GAC/B,MAAT9tB,MACA,MAAO,KAEX,IAAqByrB,MAAOzrB,MAAMC,QAAQ8tB,+BAAgC,WAEtE,IAAK,GADDlT,UACKza,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCya,MAAMza,IAAMC,UAAUD,GAE1B,OAAgB,KAAZya,MAAM,GACCgT,aAAe,MAAQ,IAEb,MAAZhT,MAAM,GACJ,MAEU,MAAZA,MAAM,GACJ,MAGA,KAAOA,MAAM,KAGPmT,eAAiBF,cAAgBG,qBAAqB5jB,KAAKohB,KAChF,OAAOuC,gBAAiB,IAAMvC,KAAO,IAAMA,KAM/C,QAASyC,eAAcjX,OAEnB,IAAK,GADgBkX,KAAM,GACDpkB,EAAI,EAAGA,EAAIkN,MAAOlN,IACxCokB,KAAOC,YAEX,OAAOD,KAOX,QAASE,4BAA2B1vB,KAChC,GAAqB2vB,WAAY,GAAIC,mBAAkBC,gBAMnDC,qBAAsB,SAAUzqB,SAAU0qB,oBAAsB,MAAO1qB,WAKvE2qB,YAAa,SAAUC,QAAU,MAAO,OACxCC,aAAc,SAAUD,QAAU,MAAO,SAExBE,IAAMC,sBAAsBC,eAC5BzwB,KAAO0C,MAAMC,QAAQvC,KAAOA,KAAOA,IAexD,OAdAJ,MAAKK,QAAQ,SAAUD,KACnB,GAAIA,cAAeswB,WACftwB,IAAIurB,eAAeoE,UAAWQ,SAE7B,IAAInwB,cAAeuwB,YACpBvwB,IAAI0rB,gBAAgBiE,UAAWQ,SAE9B,CAAA,KAAInwB,cAAewwB,SAIpB,KAAM,IAAIhwB,OAAM,0CAA4CR,IAH5DA,KAAIywB,UAAUd,UAAWQ,QAM1BA,IAAIO,WAugBf,QAASC,iBAAgBR,IAAKS,OAC1B,IAAK,GAAInvB,IAAK,EAAGovB,QAAUD,MAAOnvB,GAAKovB,QAAQlvB,OAAQF,KAAM,CACzD,GAAIqvB,MAAOD,QAAQpvB,GACnBsvB,iBAAgBD,KAAK5vB,eAAiBivB,KAmc9C,QAASa,wBAAuBC,MAC5B,OAAQA,MACJ,IAAK,QACL,IAAK,SACL,IAAK,WACL,IAAK,YACL,IAAK,WACL,IAAK,YACL,IAAK,OACL,IAAK,MACL,IAAK,SACL,IAAK,QACL,IAAK,WACL,IAAK,eACL,IAAK,gBACL,IAAK,aACL,IAAK,cACL,IAAK,gBACL,IAAK,eACL,IAAK,YACL,IAAK,aACL,IAAK,eACL,IAAK,cACL,IAAK,eACL,IAAK,cACL,IAAK,iBACL,IAAK,kBACL,IAAK,mBACL,IAAK,oBACL,IAAK,aACD,OAAO,CACX,SACI,OAAO,GAgZnB,QAASC,eAAc7vB,OACnB,MAAOA,OAAMC,QAAQ6vB,WAAY,IAQrC,QAASC,yBAAwB/vB,OAC7B,GAAqBgwB,SAAUhwB,MAAM6a,MAAMoV,oBAC3C,OAAOD,SAAUA,QAAQ,GAAK,GAuBlC,QAASE,cAAalwB,MAAOmwB,cACzB,GAAqBC,wBAAyBC,aAAarwB,OACtCswB,eAAiB,CACtC,OAAOF,wBAAuBG,cAActwB,QAAQuwB,QAAS,WAEzD,IAAK,GADDrwB,MACKC,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCD,EAAEC,IAAMC,UAAUD,GAEtB,IAAqBiF,UAAWlF,EAAE,GACbswB,QAAU,GACVC,OAASvwB,EAAE,GACXwwB,cAAgB,EACjCD,SAAUA,OAAOxe,WAAW,IAAM0e,qBAClCH,QAAUL,uBAAuBS,OAAOP,kBACxCI,OAASA,OAAOtK,UAAUwK,kBAAkBtwB,OAAS,GACrDqwB,cAAgB,IAEpB,IAAqBG,MAAOX,aAAa,GAAIY,SAAQ1rB,SAAUorB,SAC/D,OAAO,GAAKtwB,EAAE,GAAK2wB,KAAKzrB,SAAWlF,EAAE,GAAKwwB,cAAgBG,KAAKL,QAAUC,SAkBjF,QAASL,cAAarwB,OAMlB,IAAK,GALgBgxB,YAAahxB,MAAMsI,MAAM2oB,UACzBC,eACAC,iBACAC,aAAe,EACfC,qBACKC,UAAY,EAAGA,UAAYN,WAAW1wB,OAAQgxB,YAAa,CACjF,GAAqBC,MAAOP,WAAWM,UACnCC,OAAQC,aACRJ,eAEAA,aAAe,EACfC,kBAAkBvyB,KAAKyyB,OAGnBF,kBAAkB/wB,OAAS,IAC3B6wB,cAAcryB,KAAKuyB,kBAAkB7d,KAAK,KAC1C0d,YAAYpyB,KAAK8xB,mBACjBS,sBAEJH,YAAYpyB,KAAKyyB,OAEjBA,MAAQE,YACRL,eAOR,MAJIC,mBAAkB/wB,OAAS,IAC3B6wB,cAAcryB,KAAKuyB,kBAAkB7d,KAAK,KAC1C0d,YAAYpyB,KAAK8xB,oBAEd,GAAIc,yBAAwBR,YAAY1d,KAAK,IAAK2d,eAyH7D,QAASQ,kBAAiBhU,WACtB,GAAqBlf,QAAS,QAI9B,OAHIkf,aACAlf,QAAU,IAAMqE,eAAe6a,UAAUjY,OAEtCjH,OA4BX,QAASmzB,sBAAqBC,cAAeC,iBAAkBC,OAAQC,WAC9DH,gBACDA,cAAgB,GAAII,sBAExB,IAAqBC,uBAAwBC,gCACzCC,4BAA6B,SAAUC,UAEnC,MAAO,UAAUC,MAAQ,MAAOvH,YAAWuH,QAE/CC,0BAA2B,SAAUC,MAEjC,MAAO,UAAUF,MAAQ,MAAOrH,YAA6BuH,KAAK7e,IAAI,SAAU8e,IAAK1oB,GAAK,OAAQ0oB,IAAKH,KAAKvoB,SAEhH2oB,oBAAqB,SAAU7vB,MAC3B,KAAM,IAAI1D,OAAM,kEAAoE0D,QAEzFkvB,QACkBzzB,QAAU,GAAIq0B,iBAAgBd,cAAeC,iBAAkBE,WAC/DY,cACrBC,mBAAkBX,sBAAsBxzB,MAAMJ,QAASw0B,MAAM7D,WAAY2D,aACzEG,sBAAsBz0B,QAAQ00B,eAAgBhB,UAAWY,YACzD,IAAqBK,WAAYL,YAAYtyB,OAAS,EACjC4yB,kBAAoB,IACzC,IAAID,WAAa,EAAG,CAChB,GAAqBE,eAAgBP,YAAYK,WAC5BG,WAAaC,0BAA0BF,cACxDC,cAGAF,kBAAoBI,wBAAwBtB,WAC5CY,YAAYK,WACRC,kBAAkBxvB,IAAI0vB,WAAWG,KAAKC,cAAcC,aAAa9H,SAAQ,KACpE+H,WAAW,MAAOC,aAAaC,SAGhD,MAAO,IAAIC,4BAA2BjB,YAAaM,mBAOvD,QAASf,gCAA+B2B,iBAAkBn1B,KACtD,MAAOo1B,iBAAgBD,iBAAkBn1B,KAuB7C,QAASq1B,wBAAuBnC,cAAeC,iBAAkBmC,0BAA2BjC,WACnFH,gBACDA,cAAgB,GAAII,sBAExB,IAAqBiC,aAAcC,oBAAoBnC,WAClCtI,SACAprB,QAAU,GAAIq0B,iBAAgBd,cAAeC,iBAAkBE,WAC/DoC,WAAaH,0BAA0Bv1B,MAAMJ,QAASw0B,MAAM5D,WACjF,IAAI5wB,QAAQ00B,eACR,IAAK,GAAqBjpB,GAAI,EAAGA,EAAIzL,QAAQ00B,eAAgBjpB,IACzD2f,MAAM5qB,KAAKu1B,qBAAqBrC,UAAWjoB,GAInD,OADA2f,OAAM5qB,KAAKo1B,YAAYxwB,IAAI0wB,YAAYV,WAAW,MAAOC,aAAaC,SAC/D,GAAIU,8BAA6B5K,MAAOwK,aAOnD,QAASH,iBAAgBD,iBAAkBn1B,KACvC,GAAqBL,SAAU,GAAIi2B,sBAAqBT,iBACxD,OAAOn1B,KAAID,MAAMJ,SAOrB,QAASk2B,eAAcxC,UAAWyC,iBAC9B,MAAO,OAASzC,UAAY,IAAMyC,gBAOtC,QAASJ,sBAAqBrC,UAAWyC,iBACrC,MAAO,IAAIC,gBAAeF,cAAcxC,UAAWyC,iBAAkBE,WAQzE,QAAS5B,uBAAsBC,eAAgBhB,UAAW4C,YACtD,IAAK,GAAqB7qB,GAAIipB,eAAiB,EAAGjpB,GAAK,EAAGA,IACtD6qB,WAAWrP,QAAQ8O,qBAAqBrC,UAAWjoB,IAa3D,QAAS8qB,qBAAoBC,KAAMn2B,KAC/B,GAAIm2B,OAAShC,MAAM7D,UACf,KAAM,IAAI9vB,OAAM,iCAAmCR,KAQ3D,QAASo2B,sBAAqBD,KAAMn2B,KAChC,GAAIm2B,OAAShC,MAAM5D,WACf,KAAM,IAAI/vB,OAAM,mCAAqCR,KAQ7D,QAASq2B,4BAA2BF,KAAM1K,MACtC,MAAI0K,QAAShC,MAAM7D,UACR7E,KAAK+B,SAGL/B,KAsqBf,QAASyI,mBAAkBoC,IAAKC,QACxBj0B,MAAMC,QAAQ+zB,KACd,IAAQr2B,QAAQ,SAAU6Z,OAAS,MAAOoa,mBAAkBpa,MAAOyc,UAGnEA,OAAOp2B,KAAKm2B,KAsBpB,QAASd,qBAAoBnC,WACzB,MAAO1H,UAAS,WAAa0H,WAMjC,QAASsB,yBAAwBtB,WAC7B,MAAO1H,UAAS,MAAQ0H,WAM5B,QAASqB,2BAA0BtJ,MAC/B,MAAIA,gBAAgBoL,qBACTpL,KAAKK,KAEPL,eAAgBqL,iBACdrL,KAAK/oB,MAET,KAg4BX,QAASq0B,aAAYC,aACjB,MAAOA,aAAYlZ,cACfmZ,iBAAiBD,YAAYxuB,WAC7B0uB,kBAAkBF,YAAYjZ,aAAciZ,YAAYxuB,UAAU,IAM1E,QAASyuB,kBAAiBzuB,WA6BtB,QAAS2uB,aAAYC,cAAe7Z,MAChC,MAAOA,MAAKlI,IAAI,SAAUgiB,IAAKC,UAC3B,GAAqBC,WAAY,IAAMH,cAAgB,IAAME,QAG7D,OAFAE,WAAUh3B,KAAK,GAAIi3B,SAAQF,UAAWrC,eACtCwC,WAAWl3B,KAAKm3B,OAAON,MAChBrL,SAASuL,aAjCxB,GAAqBG,eACAF,aACAI,MAAQpvB,UAAU6M,IAAI,SAAU+H,SAAUga,eAC3D,GAAqBtL,KACrB,IAAI1O,SAASI,SAAU,CACnB,GAAqBqa,UAAWV,YAAYC,cAAeha,SAASG,MAAQH,SAASI,SAASnW,OAC9FykB,MAAOI,WAAW9O,SAASI,UAAUsa,YAAYD,cAEhD,IAAIza,SAASK,WAAY,CAC1B,GAAqBoa,UAAWV,YAAYC,cAAeha,SAASG,MAAQH,SAASK,WAAWpW,OAChGykB,MAAOI,WAAW9O,SAASK,YAAYmQ,OAAOiK,cAE7C,IAAIza,SAASC,YAAa,CAC3B,GAAqBwa,UAAWV,YAAYC,gBAAkB9wB,MAAO8W,SAASC,cAC9EyO,MAAO+L,SAAS,OAGhB/L,MAAO4C,wBAAwBtR,SAASE,SAE5C,OAAOwO,QAEUiM,aAAe9K,GAAGuK,WAAY,GAAIV,iBAAgBrK,WAAWmL,SAAUI,cAC5F,QAASD,aAAcA,aAAcE,MAAO,IAA+BC,SAAUzL,WAAWiL,aAoBpG,QAASR,mBAAkBnZ,aAAcoa,cACrC,GAAqBJ,cACAE,MACA1a,IACjBQ,gBAAiBS,gBAAgBE,WAAaX,eAAiBS,gBAAgBC,WAC/EsZ,aAAe7L,WAAWiM,aAAa3a,UACvCya,MAAQ,KACR1a,KAAO4a,aAAa5a,MAAQ4a,aAAa3a,SAASnW,QAG9C8wB,aAAa3a,UACbua,aAAe7L,WAAWiM,aAAa3a,UACvCya,MAAQ,IACR1a,KAAO4a,aAAa5a,MAAQ4a,aAAa3a,SAASnW,QAE7C8wB,aAAa1a,YAClBsa,aAAe7L,WAAWiM,aAAa1a,YACvCwa,MAAQ,IACR1a,KAAO4a,aAAa5a,MAAQ4a,aAAa1a,WAAWpW,QAE/C8wB,aAAa9a,aAClB0a,aAAe1B,UACf4B,MAAQ,KACR1a,OAAUjX,MAAO6xB,aAAa9a,gBAG9B0a,aAAerJ,wBAAwByJ,aAAa7a,UACpD2a,MAAQ,IACR1a,QAGR,IAAqB2a,UAAWzL,WAAWlP,KAAKlI,IAAI,SAAUgiB,KAAO,MAAOM,QAAON,OACnF,QAASU,aAAcA,aAAcE,MAAOA,MAAOC,SAAUA,UAMjE,QAASE,WAAUC,WACf,MAAOA,WAAUhzB,WAAa6mB,WAAWmM,UAAUhzB,YAAcgoB,QAAQgL,UAAU31B,OAMvF,QAASi1B,QAAON,KAGZ,GAAqBvL,MAAOuL,IAAIiB,QAAU5J,wBAAwB2I,IAAI30B,OAAS01B,UAAUf,IAAI/wB,OACxE2xB,MAAQ,CAU7B,OATIZ,KAAIkB,aACJN,OAAS,GAETZ,IAAImB,aACJP,OAAS,GAETZ,IAAIiB,UACJL,OAAS,GAEI,IAAVA,MAAyBnM,KAAOW,YAAYY,QAAQ4K,OAAQnM,OAMvE,QAAS2M,yBAAwBp4B,KAC7B,MAAIA,eAAeq4B,qBACRr4B,IAAIs4B,iBAEXt4B,cAAeu4B,YACXv4B,IAAIkE,OAASs0B,kBAAoBx4B,IAAI+b,SAASpa,OACvCy2B,wBAAwBp4B,IAAI+b,SAAS/b,IAAI+b,SAASpa,OAAS,IAE/D3B,IAAIs4B,iBAERt4B,cAAey4B,cAM1B,QAASC,yBAAwBC,eAC7B,GAAqBC,UAAW,CAChC,QAAQD,eACJ,IAAKl5B,eAAcopB,gBAAgBM,oBAC/ByP,SAAW,OACX,MACJ,KAAKn5B,eAAcopB,gBAAgBK,iBAC/B0P,SAAW,MACX,MACJ,KAAKn5B,eAAcopB,gBAAgBQ,iBAC/BuP,SAAW,OACX,MACJ,KAAKn5B,eAAcopB,gBAAgBO,cAC/BwP,SAAW,OACX,MACJ,KAAKn5B,eAAcopB,gBAAgBG,QAC/B4P,SAAW,MACX,MACJ,KAAKn5B,eAAcopB,gBAAgBI,UAC/B2P,SAAW,MACX,MACJ,KAAKn5B,eAAcopB,gBAAgBE,UAC/B6P,SAAW,KACX,MACJ,KAAKn5B,eAAcopB,gBAAgBC,OAC/B8P,SAAW,MAGnB,MAAOA,UAOX,QAASC,mBAAkBC,SAAUC,QACjC,OAAQD,SAAS/xB,MACb,IAAKiyB,qBAAoBC,UACrB,MAAO7M,aACHY,QAAQ,GAA2BA,QAAQ8L,SAAS50B,MACpD8oB,QAAQ8L,SAASzX,kBAEzB,KAAK2X,qBAAoBE,SACrB,MAAO9M,aACHY,QAAQ,GAA0BA,QAAQ8L,SAAS50B,MACnD8oB,QAAQ8L,SAASzX,kBAEzB,KAAK2X,qBAAoBG,UACrB,GAAqBC,aAAcL,QAAUA,OAAO/a,UAAU9V,YAC1D,EACA,CACJ,OAAOkkB,aACHY,QAAQoM,aAAcpM,QAAQ,IAAM8L,SAAS50B,MAAO8oB,QAAQ8L,SAASzX,kBAE7E,KAAK2X,qBAAoBK,MACrB,MAAOjN,aAAYY,QAAQ,GAAuBA,QAAQ8L,SAAS50B,OACvE,KAAK80B,qBAAoBM,MACrB,MAAOlN,aACHY,QAAQ,GAAuBA,QAAQ8L,SAAS50B,MAAO8oB,QAAQ8L,SAASS,SAQxF,QAASC,eAAcC,YACnB,GAAqBC,WAAYr2B,OAAOwD,OAAO,KAC/C4yB,YAAW9lB,MAAM1T,QAAQ,SAAU05B,SAAWD,UAAUC,QAAQz1B,MAAQy1B,QAAQt3B,QAChFo3B,WAAW7b,WAAW3d,QAAQ,SAAU84B,QACpC11B,OAAOwwB,KAAKkF,OAAO/a,UAAU4b,gBAAgB35B,QAAQ,SAAUiE,MAC3D,GAAqB7B,OAAQ02B,OAAO/a,UAAU4b,eAAe11B,MACxC21B,UAAYH,UAAUx1B,KAC3Cw1B,WAAUx1B,MAAqB,MAAb21B,UAAoBC,oBAAoB51B,KAAM21B,UAAWx3B,OAASA,SAM5F,OAAO+pB,YAAW/oB,OAAOwwB,KAAK6F,WAAWjY,OAAOzM,IAAI,SAAU2O,UAAY,MAAOyI,aAAYY,QAAQrJ,UAAWqJ,QAAQ0M,UAAU/V,gBAQtI,QAASmW,qBAAoBnW,SAAUoW,WAAYC,YAC/C,MAAIrW,WAAYsW,cAAgBtW,UAAYuW,WACjCH,WAAa,IAAMC,WAGnBA,WAQf,QAASG,eAAcC,UAAW7C,OAC9B,MAAIA,OAAM51B,OAAS,GACR04B,UAAU9M,QAAQ+M,SAAUtN,QAAQoN,WAAYpN,QAAQ,GAAkBZ,WAAWmL,SAGrF8C,UAAU9M,QAAQ+M,SAAUtN,QAAQoN,WAAYpN,QAAQ,IAAiB9jB,OAAOquB,QAO/F,QAASgD,iBAAgB9O,MACrB,MAAOI,YAAWxQ,iBAAiBmf,YAAYC,cAAclN,QAAQ9B,OAOzE,QAASiP,oBAAmBhrB,MAAO5P,QA8B/B,MA7Be,UAAXA,SAAqBA,OAAS,GAAIie,MACtCrO,MAAMzP,QAAQ,SAAUyZ,MACpB,GAEqBihB,cAFAC,eAAiB,GAAI3Z,KACrB4Z,gBAAkB,GAAI5Z,IAEvCvH,gBAAgB6e,aAChBmC,mBAAmBhhB,KAAKqC,SAAUjc,QAClC4Z,KAAKqC,SAAS9b,QAAQ,SAAU66B,OAC5B,GAAqBC,WAAYj7B,OAAO6E,IAAIm2B,MAC5CC,WAAUH,eAAe36B,QAAQ,SAAUmf,SAAW,MAAOwb,gBAAeI,IAAI5b,WAChF2b,UAAUF,gBAAgB56B,QAAQ,SAAUmf,SAAW,MAAOyb,iBAAgBG,IAAI5b,aAEtFub,aAAejhB,KAAKihB,cAEfjhB,eAAgB2e,uBACrBqC,mBAAmBhhB,KAAKqC,SAAUjc,QAClC4Z,KAAKqC,SAAS9b,QAAQ,SAAU66B,OAC5B,GAAqBC,WAAYj7B,OAAO6E,IAAIm2B,MAC5CC,WAAUH,eAAe36B,QAAQ,SAAUmf,SAAW,MAAOyb,iBAAgBG,IAAI5b,WACjF2b,UAAUF,gBAAgB56B,QAAQ,SAAUmf,SAAW,MAAOyb,iBAAgBG,IAAI5b,aAEtFub,aAAejhB,KAAKihB,cAEpBA,cACAA,aAAa16B,QAAQ,SAAUic,OAAS,MAAO0e,gBAAeI,IAAI9e,MAAMkD,WAE5Eyb,gBAAgB56B,QAAQ,SAAUmf,SAAW,MAAOwb,gBAAeK,OAAO7b,WAC1Etf,OAAOiF,IAAI2U,MAAQkhB,eAAgBA,eAAgBC,gBAAiBA,oBAEjE/6B,OAMX,QAASo7B,oBAAmBC,oBACxB,GAAqBP,gBAAiB,GAAI3Z,KACrB4Z,gBAAkB,GAAI5Z,IAM3C,OALA3e,OAAMkf,KAAK2Z,mBAAmB5W,UAAUtkB,QAAQ,SAAU6Z,OACtDA,MAAM8gB,eAAe36B,QAAQ,SAAUmf,SAAW,MAAOwb,gBAAeI,IAAI5b,WAC5EtF,MAAM+gB,gBAAgB56B,QAAQ,SAAUmf,SAAW,MAAOyb,iBAAgBG,IAAI5b,aAElFyb,gBAAgB56B,QAAQ,SAAUmf,SAAW,MAAOwb,gBAAeK,OAAO7b,YACjEwb,eAAgBA,eAAgBC,gBAAiBA,iBAM9D,QAASO,gCAA+Bxd,YACpC,GAAqByd,kBAAmBzd,WAAWhK,KAAK,SAAUmlB,QAAU,MAAOA,QAAO/a,UAAU9V,aACpG,IAAImzB,kBAAoBA,iBAAiBrd,UAAUsd,gBAAgB35B,OAAQ,CACvE,GAAqB45B,yBAA0BF,iBAAiBrd,UAAUsd,gBAAgBtmB,IAAI,SAAUwmB,gBAAkB,MAAO3P,aAAaxnB,UAAWm3B,eAAeC,qBACnJx1B,MAAQsV,sBAAsBif,YAAYkB,0BAC1CC,WACjB30B,SACMixB,SAAS,EAAM51B,MAAO+pB,WAAWmP,2BACjCt1B,MAAOA,MAAOiyB,YAAY,EAAMC,YAAY,IAC5ClyB,MAAOsV,sBAAsBif,YAAYoB,eAE/C30B,kBACA5C,UAAW8W,kBAAkBqf,YAAYqB,iCAE7C,OAAO,IAAIre,aAAYvX,QAAO,KAAO,KAASA,MAAOA,MAAOoX,OAAO,EAAOF,SAAUwe,YAAcxd,gBAAgBO,kBAAoB2c,iBAAiBppB,YAE3J,MAAO,MAOX,QAAS6pB,2BAA0BC,SAAUhD,QACzC,MAAIgD,UAASC,aAEL93B,KAAM,IAAM63B,SAAS73B,KAAO,IAAM63B,SAASE,MAC3CC,OAAQnD,QAAUA,OAAO/a,UAAU9V,YAAc,YAAc,MAI5D6zB,SA8Bf,QAASI,oBAAmBC,gBAAiBC,eAAgBC,QAASC,OAClE,GAAqBC,YAAa,GAAIC,cAAaJ,eAAgBD,gBAInEE,SAAQr8B,QAAQ,SAAUy8B,gBAAkB,MAAOF,YAAWG,mBAAoB1M,OAAQyM,eAAezM,OAAQ2M,SAAUF,eAAeE,YAI1I,KAAK,GAAqBC,gBAAiB,EAAGA,eAAiBL,WAAWF,QAAQ36B,OAAQk7B,iBAAkB,CACxG,GAAqB5M,QAASuM,WAAWF,QAAQO,eACjD,IAAIT,gBAAgBU,cAAc7M,OAAO5qB,UAAW,CAChD,GAAqB03B,SAAUX,gBAAgBY,eAAe/M,OAC9D,KAAK8M,QAAS,CAIV,GAAqBL,gBAAiBL,eAAeY,cAAchN,OAC/DyM,kBACAK,SAAY9M,OAAQyM,eAAezM,OAAQ2M,SAAUF,eAAeE,WAGxEG,SACAP,WAAWG,kBAAkBI,UAuBzC,MAfAR,OAAMt8B,QAAQ,SAAUi9B,aAEpB,GADAV,WAAWG,mBAAoB1M,OAAQiN,YAAYn2B,KAAK1C,UAAWu4B,UAAYO,WAAY,SAAWp2B,KAAMm2B,cACxGA,YAAYE,cAAgBC,mBAAmB9T,SAAU,CACzD,GAAqB+T,iBAAkB,WACvCA,iBAAgBC,mBAAmBr0B,OAAOo0B,gBAAgBE,eAAev9B,QAAQ,SAAUwI,IACvF,GAAqBwnB,QAASxnB,GAAGpE,SACjC,IAAI+3B,gBAAgBU,cAAc7M,OAAO5qB,UAAW,CAChD,GAAqB03B,SAAUX,gBAAgBY,eAAe/M,OAC1D8M,UACAP,WAAWG,kBAAkBI,eAM1CP,WAAW/iB,YAOtB,QAASgkB,sBAAqBC,YAAaC,MACvC,GAAqBC,cAAe,GAAIC,cAAaH,YACrD,OAAOE,cAAaE,YAAYH,MAsWpC,QAASI,yBAAwB5T,UAAW6T,cAAeC,YAIvD,MAHAD,eAAcE,aAAaj+B,QAAQ,SAAU+2B,KACzCA,IAAImH,iBAAiB95B,UAAY8lB,UAAUiU,gBAAgBC,iBAAiBrH,IAAIttB,UAAWstB,IAAIsH,UAAWL,YAAajH,IAAI9yB,QAExH85B,cAAc/H,WAQzB,QAASoI,kBAAiBE,cAAeC,KAAMzM,QAC3C,MAAO,GAAKwM,eAAiBC,KAAO,QAAU,IAAM,WAAazM,OAMrE,QAAS0M,kBAAiBj1B,MACtB,IAAKA,KAAKtB,YACN,KAAM,IAAI1H,OAAM,sBAAwB2D,eAAeqF,KAAKzC,MAAQ,oCAS5E,QAAS23B,kBAAiBC,qBAAsB12B,KAAM22B,kBAClD,GAAIvqB,IAAKwqB,iBAAiBF,qBAAsB12B,KAAM22B,kBAAmBE,UAAYzqB,GAAGyqB,UAAWC,qBAAuB1qB,GAAG0qB,oBAC7H,OAAOC,mBAAkBL,qBAAsBG,UAAWC,qBAAsBH,kBAQpF,QAASK,6BAA4BN,qBAAsB12B,KAAM22B,kBAC7D,GAAqB9+B,QAAS4+B,iBAAiBC,qBAAsB12B,KAAM22B,iBAC3E,IAAI9+B,OAAOi/B,sBAAwBj/B,OAAOi/B,qBAAqBp9B,OAAQ,CACnE,GAAqB0Y,UAAWva,OAAOi/B,qBAAqB/pB,IAAI,SAAU7R,GAAK,MAAO,yCAA2CA,EAAEe,KAAO,OAASf,EAAEkC,SAAW,SAAWlC,EAAEe,KAAO,+BACpL,MAAMrB,aAAYwX,SAASxF,KAAK,OAEpC,MAAO/U,QASX,QAASk/B,mBAAkBE,eAAgBC,cAAeJ,qBAAsBH,kBAC5E,GAAqBQ,kBAAmB,GAAIrhB,IAC5CohB,eAAcl/B,QAAQ,SAAUo/B,UAAY,MAAOD,kBAAiBr6B,IAAIs6B,SAASt4B,KAAK1C,UAAWg7B,WACjG,IAAqBC,2BAA4B,GAAIvhB,KAChCwhB,gBAAkB,GAAIxhB,KACtByhB,mBAAqB,GAAIzhB,KACzB0hB,cAAgB,GAAI1hB,KACpB2hB,oBAAsB,GAAI3hB,KAC1B4hB,UAAY,GAAI1e,IAErCie,gBAAej/B,QAAQ,SAAUgwB,QAC7B,GAAqB5qB,UAAW4qB,OAAO5qB,QACvCs6B,WAAU3E,IAAI31B,UACVu5B,iBAAiBgB,aAAa3P,SAC9ByP,oBAAoB36B,IAAIM,UAAWq6B,oBAAoB/6B,IAAIU,eAAiB6D,OAAO+mB,WAQ3FkP,cAAcl/B,QAAQ,SAAU4/B,cAC5B,GAAqBC,YAAaD,aAAa94B,KAAK1C,UAAUgB,QAC9Ds6B,WAAU3E,IAAI8E,YACdP,gBAAgBx6B,IAAI+6B,YAAaP,gBAAgB56B,IAAIm7B,iBAAmB52B,OAAO22B,aAAa94B,KAAK1C,YACjGw7B,aAAaE,mBAAmB9/B,QAAQ,SAAU+/B,eAC9C,GAAqBC,SAAUD,cAAc37B,UAAUgB,QACvDs6B,WAAU3E,IAAIiF,SACdT,mBAAmBz6B,IAAIk7B,SAAUT,mBAAmB76B,IAAIs7B,cAAgB/2B,OAAO82B,cAAc37B,YAC7Fi7B,0BAA0Bv6B,IAAIi7B,cAAc37B,UAAWw7B,gBAE3DA,aAAaK,cAAcjgC,QAAQ,SAAUkgC,gBACzC,GAAqBF,SAAUE,eAAe97B,UAAUgB,QACxDs6B,WAAU3E,IAAIiF,SACdR,cAAc16B,IAAIk7B,SAAUR,cAAc96B,IAAIs7B,cAAgB/2B,OAAOi3B,eAAe97B,YACpFi7B,0BAA0Bv6B,IAAIo7B,eAAe97B,UAAWw7B,iBAGhE,IAAqBO,SAQrB,OAPAT,WAAU1/B,QAAQ,SAAUogC,QACxB,GAAqBziB,YAAa4hB,mBAAmB76B,IAAI07B,YACpCC,MAAQb,cAAc96B,IAAI07B,YAC1BvB,UAAYS,gBAAgB56B,IAAI07B,YAChCE,YAAcb,oBAAoB/6B,IAAI07B,WAC3DD,OAAMjgC,MAAOkgC,OAAQA,OAAQziB,WAAYA,WAAY0iB,MAAOA,MAAOxB,UAAWA,UAAWyB,YAAaA,iBAItGjB,0BAA2BA,0BAE3Bc,MAAOA,MACPtB,UAAWK,cAAeJ,qBAAsBA,sBASxD,QAASyB,uBAAsBC,qBAAsBL,MAAOn4B,MACxD,GAAqBy4B,iBAarB,OAZAN,OAAM7hB,OAAO,SAAUgK,UAAY,MAAOtgB,MAAK04B,aAAapY,YAActoB,QAAQ,SAAUoP,YACxFoxB,qBAAqBG,aAAavxB,YAAYpP,QAAQ,SAAUgwB,QAC5D,GAAqByM,gBAAiB+D,qBAAqBxD,cAAchN,QACpD4Q,WAAanE,eAAeE,QAC7CiE,aAC6B,SAAzBA,WAAW1D,YAEXuD,cAAcvgC,KAAKu8B,eAAezM,YAK3CyQ,cAQX,QAAS7B,kBAAiBF,qBAAsB12B,KAAM22B,kBAClD,GAAqBE,WAAY,GAAI/gB,KAChB+iB,6BACAC,0BAA4B,GAAI9f,KAChC+f,YAAc,SAAUC,cACzC,GAAInC,UAAUp6B,IAAIu8B,gBAAkBh5B,KAAK04B,aAAaM,aAAa57B,UAC/D,OAAO,CAEX,IAAqBg6B,UAAWT,iBAAiBsC,oBAAoBD,cAAc,EAQnF,OAPI5B,YACAP,UAAU/5B,IAAIs6B,SAASt4B,KAAK1C,UAAWg7B,UACvCA,SAASU,mBAAmB9/B,QAAQ,SAAUue,KAAO,MAAOuiB,2BAA0B/F,IAAIxc,IAAIna,aAC9Fg7B,SAASa,cAAcjgC,QAAQ,SAAUkhC,MAAQ,MAAOJ,2BAA0B/F,IAAImG,KAAK98B,aAE3Fg7B,SAAS+B,iBAAiBC,QAAQphC,QAAQ,SAAUqhC,SAAW,MAAON,aAAYM,QAAQj9B,gBAErFg7B,SAEbV,sBAAqB1+B,QAAQ,SAAUghC,cAC9BD,YAAYC,gBACZrC,iBAAiB2C,YAAYN,gBAAiBrC,iBAAiB4C,OAAOP,eACvEH,0BAA0B3gC,KAAK8gC,eAIvC,IAAqBlC,sBAAuB+B,0BAA0BviB,OAAO,SAAUpb,GAAK,OAAQ49B,0BAA0Br8B,IAAIvB,IAClI,QAAS27B,UAAWx8B,MAAMkf,KAAKsd,UAAUva,UAAWwa,qBAAsBA,sBA4G9E,QAAS0C,cAAa16B,MAClB,MAAuB,gBAATA,OAAqBA,KAAK7C,MAAQ6C,KAAK1B,SAWzD,QAASq8B,cAAar/B,OAClB,MAAOA,QAA6B,UAApBA,MAAM86B,WAipB1B,QAASwE,iBAAgB5+B,OACrB,OAAQA,MAAM4J,SACV,IAAK,kCACD,GAAI5J,MAAMlD,SAAWkD,MAAMlD,QAAQokB,UAC/B,MAAO,qCAAuClhB,MAAMlD,QAAQokB,UAAY,gCAE5E,MACJ,KAAK,2BACD,MAAO,kIACX,KAAK,8BACD,MAAO,uJACX,KAAK,yBACD,GAAIlhB,MAAMlD,SAAWkD,MAAMlD,QAAQ+hC,SAC/B,MAAO,0BAA4B7+B,MAAMlD,QAAQ+hC,QAErD,MACJ,KAAK,8BACD,GAAqB/gC,QAASkC,MAAMlD,SAAWkD,MAAMlD,QAAQqE,KAAO,qBAAuBnB,MAAMlD,QAAQqE,KAAO,OAAS,GACzH,OAAOrD,QACH,qHACR,KAAK,8BACD,GAAIkC,MAAMlD,SAAWkD,MAAMlD,QAAQqE,KAC/B,MAAO,+CAAiDnB,MAAMlD,QAAQqE,KAAO,mCAIzF,MAAOnB,OAAM4J,QAMjB,QAASk1B,qBAAoB9+B,OACzB,MAAO,yDAA2D4+B,gBAAgB5+B,OAOtF,QAAS++B,cAAazgC,MAAO0gC,WACzB,IAAK1gC,MACD,QACJ,IAAqBvB,UAYrB,OAXAuD,QAAOwwB,KAAKxyB,OAAOpB,QAAQ,SAAU6zB,KACjC,GAAqBzxB,OAAQ0/B,UAAU1gC,MAAMyyB,KAAMA,IAC9C4N,cAAar/B,SACV2/B,WAAWt2B,KAAKooB,KAChBzwB,OAAOkX,eAAeza,OAAQg0B,KAAOrZ,YAAY,EAAOD,cAAc,EAAMnY,MAAOA,QAGnFvC,OAAOg0B,KAAOzxB,SAInBvC,OAMX,QAASmiC,aAAYC,GACjB,MAAa,QAANA,GAA4B,kBAANA,IAAiC,gBAANA,GA2D5D,QAASC,iBAAgBx1B,QAAS4b,SAAU6Z,KAAMC,QAC9C,GAAqBviC,QAAS,GAAIU,OAAMmM,QAIxC,OAHA,QAAW4b,SAAWA,SACtB,OAAW6Z,KAAOA,KAClB,OAAWC,OAASA,OACbviC,OAmaX,QAASwiC,oBAAmBt9B,YACxB,MAAOA,YAAWuO,WAAW,OAASvO,WAAWu9B,OAAO,GAAKv9B,WA+FjE,QAASw9B,mBAAkBC,aAAcC,SACrC,GAAqBvvB,cAAeuvB,QAAQvvB,cAAgB,GACvCwvB,YAAcvd,kCACdsY,YAAc,GAAIkF,mBAClBxG,gBAAkB,GAAIyG,oBAAmBJ,aAAc/E,aACvDrB,eAAiB,GAAIyG,sBAAqBL,aAAc/E,YAAatB,iBACrE2G,gBAAkB,GAAIC,iBAAgB3G,eAC3D4G,wCAAuCC,QAAQH,gBAC/C,IAAqBI,SAAU,GAAI1jC,eAAc2jC,SAC5BC,WAAa,GAAIC,gBAAe,GAAIC,YAAcpwB,aAAcuvB,QAAQc,WAAY/jC,cAAcgkC,2BAA2BC,QAASP,SACtIt0B,OAAS,GAAI80B,iBAC9BC,qBAAsBnkC,cAAc2H,kBAAkBy8B,SACtDC,QAAQ,EACRjf,qBAAsB6d,QAAQ7d,wBAAyB,IAEtCkf,WAAa,GAAIC,sBAAsBr/B,IAAK,SAAUkL,KAAO,MAAO4yB,cAAawB,aAAap0B,OAAW8yB,YAAaU,WAAYx0B,QAClIq1B,iBAAmB,GAAIC,QAAO,GAAIC,QAClCC,sBAAwB,GAAIC,0BAC5BC,WAAa,GAAIC,gBAAe31B,OAAQq1B,iBAAkBG,sBAAuBhB,WAAYF,YAC7FpjB,SAAW,GAAI0kB,yBAAwB51B,OAAQ,GAAI61B,kBAAiB3B,iBAAkB,GAAI4B,mBAAkB5B,iBAAkB,GAAI6B,cAAa7B,iBAAkB3G,gBAAiBiI,sBAAuBN,WAAYZ,QAASzF,YAAaqF,iBAE3O8B,gBACjB7U,YAAa,SAAUC,QAAU,MAAOoM,gBAAerM,YAAYC,SACnEH,qBAAsB,SAAUvH,SAAUwH,oBAAsB,MAAO0S,cAAa3S,qBAAqBvH,SAAUwH,qBACnHG,aAAc,SAAUD,QAAU,MAAOoM,gBAAenM,aAAaD,UAEpD6U,aAAe,GAAIC,cAAal2B,OAAQw1B,uBACxC/kC,SAAW,GAAI0lC,aAAYn2B,OAAQ4zB,aAAc1iB,SAAUwkB,WAAY,GAAIU,eAActC,aAAcmC,aAAc,GAAII,kBAAoB,GAAIC,mBAAkBN,gBAAiBzI,gBAAiBsG,QAAQ0C,OAAQ1C,QAAQc,WAAYd,QAAQ2C,gBAAiBhJ,eACvR,QAAS/8B,SAAUA,SAAU6qB,UAAW4Y,iBAO5C,QAASuC,qBAAoBrP,WAAYsP,YACrC,GAAqBC,iBAAkBvP,WAAW/sB,QAAQ,GAAIutB,iBAAgBrK,WAAWmZ,WAAWvwB,IAAI,SAAUywB,WAAa,MAAO9Z,UAAS8Z,iBAC1HtV,IAAM,GAAIuV,mBAAkB,KAAM,KAAM,KAAM,GAAI3nB,MAClDpe,QAAU,GAAIgmC,sBACd7lC,OAASH,QAAQsrB,mBAAmBua,gBAAiBrV,IAC1E,OAAiB,OAAVrwB,OAAiBA,OAAOuC,MAAQ,KAU3C,QAASujC,4BAA2B1a,SAAU2a,UAAW5P,WAAY9F,IAAKxwB,SAEtE,IAAK,GADgBmmC,UAAW3V,IAAI4V,2BACV36B,EAAI,EAAGA,EAAI8f,SAASvpB,OAAQyJ,IAClD06B,SAASE,KAAKjhC,IAAImmB,SAAS9f,GAAIy6B,UAAUz6B,GAE7C,IAAqBtL,QAASH,QAAQsrB,mBAAmBgL,WAAY6P,SACrE,OAAOhmC,QAASA,OAAOuC,MAAQ,KAsCnC,QAAS4jC,oBAAmBC,WAAYC,KAAMxsB,UAC1C,GAAqBysB,uBACrBF,YAAWhY,QAAQjuB,QAAQ,SAAUomC,QAEjCD,oBAAoBC,OAAOniC,OACvBsW,cAAc,EACd7V,IAAK,WACD,GAAqB2hC,aAAc,GAAIZ,mBAAkBS,KAAM3mC,KAAM0mC,WAAWhiC,KAAMiiC,KAAKH,KAC3F,OAAOJ,kCAAmCS,OAAOvZ,KAAMwZ,YAAa3sB,cAIhFusB,WAAW/X,QAAQluB,QAAQ,SAAUsmC,QACjC,GAAqBC,YAAaD,OAAO1Z,OAAO7X,IAAI,SAAUyxB,OAAS,MAAOA,OAAMviC,MAEpFkiC,qBAAoBG,OAAOriC,OACvBwiC,UAAU,EACVlsB,cAAc,EACdnY,MAAO,WAEH,IAAK,GADDsxB,SACKlyB,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCkyB,KAAKlyB,IAAMC,UAAUD,GAEzB,IAAqB6kC,aAAc,GAAIZ,mBAAkBS,KAAM3mC,KAAM0mC,WAAWhiC,KAAMiiC,KAAKH,KAC3F,OAAOJ,4BAA2BY,WAAY7S,KAAM4S,OAAOzZ,KAAMwZ,YAAa3sB,aAI1F,IAAqBgtB,gBAAiBT,WAAWU,kBAAkB/Z,OAAO7X,IAAI,SAAUyxB,OAAS,MAAOA,OAAMviC,OAEzF0pB,KAAO,WAGxB,IAAK,GAFDiZ,OAAQrnC,KACRm0B,QACKlyB,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCkyB,KAAKlyB,IAAMC,UAAUD,GAEzB,IAAqB6kC,aAAc,GAAIZ,mBAAkBS,KAAM3mC,KAAM0mC,WAAWhiC,KAAMiiC,KAAKH,KAC3FE,YAAWjY,OAAOhuB,QAAQ,SAAU6mC,OAASD,MAAMC,MAAM5iC,MAAQ6iC,SACjEnB,2BAA2Be,eAAgBhT,KAAMuS,WAAWU,kBAAkB9Z,KAAMwZ,YAAa3sB;EAEhFqtB,WAAad,WAAW7Y,OAAS6Y,WAAW7Y,OAAO3B,gBAAgB/R,SAAUwsB,MAAQ9iC,MAE1G,OADAuqB,MAAKqZ,UAAY5jC,OAAOwD,OAAOmgC,WAAWC,UAAWb,qBAC9CxY,KAuZX,QAASsZ,YAAWhc,SAAU+K,WAAY9F,IAAKxwB,SAC3C,MAAO,YAEH,IAAK,GADDg0B,SACKlyB,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCkyB,KAAKlyB,IAAMC,UAAUD,GAEzB,OAAOmkC,4BAA2B1a,SAAUyI,KAAMsC,WAAY9F,IAAKxwB,UAwO3E,QAASwnC,gBAAeC,UAAWjX,IAAK6V,MACpC,GAAqBqB,QAASlX,IAAIO,WAAa,mBAAqB0W,UAC/CE,cACAC,cACrB,KAAK,GAAqBC,WAAWxB,MACjCsB,WAAWnnC,KAAKqnC,SAChBD,YAAYpnC,KAAK6lC,KAAKwB,SAE1B,IAAI/nC,cAAc0L,YAAa,CAM3B,GAAqBs8B,UAAU,IAAKC,SAASC,KAAKprB,MAAMmrB,UAAW,QAAQx+B,OAAOo+B,WAAWp+B,OAAO,oBAAqBrE,WACpG+iC,YAAcH,QAAQhnC,MAAM,EAAGgnC,QAAQlnC,QAAQ,iBAAiBoJ,MAAM,MAAMhI,OAAS,CAC1G0lC,SAAU,KAAOlX,IAAI0X,qBAAqBT,UAAWA,UAAWQ,aAAaE,cAEjF,OAAO,IAAKJ,SAASC,KAAKprB,MAAMmrB,UAAW,QAAQx+B,OAAOo+B,WAAWp+B,OAAOm+B,YAAa9qB,MAAM,OAAQgrB,aAQ3G,QAASQ,eAAcX,UAAWnR,WAAYsP,YAC1C,GAAqB5V,WAAY,GAAIqY,mBAChB7X,IAAMC,sBAAsBC,WAAWkV,YACvC0C,WAAa,GAAIxR,iBAAgBrK,WAAWmZ,WAAWvwB,IAAI,SAAUywB,WAAa,MAAO9Z,UAAS8Z,cAEvH,OADA9V,WAAU1E,mBAAmBgL,WAAW/sB,QAAQ++B,aAAc9X,KACvDgX,eAAeC,UAAWjX,IAAKR,UAAUuY,WAqapD,QAASC,iBAAgB3+B,MACrB,IAAKA,KAAKtB,YACN,KAAM,IAAI1H,OAAM,sBAAwB2D,eAAeqF,KAAKzC,MAAQ,oCA+W5E,QAASqhC,kBACL3oC,cAAc6F,WAAW+iC,uBAAyB,GAAI5oC,eAAc6oC,wBAgBxE,QAASC,eAAcC,YACnB,OACI1E,OAAQ2E,aAAaD,WAAWxzB,IAAI,SAAU0tB,SAAW,MAAOA,SAAQoB,UACxEF,qBAAsB6E,aAAaD,WAAWxzB,IAAI,SAAU0tB,SAAW,MAAOA,SAAQkB,wBACtFz7B,UAAWugC,aAAaF,WAAWxzB,IAAI,SAAU0tB,SAAW,MAAOA,SAAQv6B,aAC3EwgC,mBAAoBF,aAAaD,WAAWxzB,IAAI,SAAU0tB,SAAW,MAAOA,SAAQiG,uBAQ5F,QAASF,cAAa9U,MAClB,IAAK,GAAqBvoB,GAAIuoB,KAAKhyB,OAAS,EAAGyJ,GAAK,EAAGA,IACnD,GAAgB27B,SAAZpT,KAAKvoB,GACL,MAAOuoB,MAAKvoB,GASxB,QAASs9B,cAAa12B,OAClB,GAAqBlS,UAErB,OADAkS,OAAM/R,QAAQ,SAAU2yB,MAAQ,MAAOA,OAAQ9yB,OAAOK,KAAKoc,MAAMzc,OAAQ8yB,QAClE9yB,OAjjxBX,GAAI8oC,WAAappC,MAAQA,KAAKopC,WAAc,SAAU/yB,EAAGF,GAErD,QAASkzB,MAAOrpC,KAAKspC,YAAcjzB,EADnC,IAAK,GAAInC,KAAKiC,GAAOA,EAAEozB,eAAer1B,KAAImC,EAAEnC,GAAKiC,EAAEjC,GAEnDmC,GAAEoxB,UAAkB,OAANtxB,EAAatS,OAAOwD,OAAO8O,IAAMkzB,GAAG5B,UAAYtxB,EAAEsxB,UAAW,GAAI4B,MAK/EG,QAAU,GAAIvpC,eAAcwpC,QAAQ,qBAWpCC,QAAW,WAMX,QAASA,SAAQ7mC,MAAO8mC,eAAgBl3B,YACpCzS,KAAK6C,MAAQA,MACb7C,KAAK2pC,eAAiBA,eACtB3pC,KAAKyS,WAAaA,WAQtB,MADAi3B,SAAQjC,UAAUlnC,MAAQ,SAAUJ,QAASE,SAAW,MAAOF,SAAQypC,UAAU5pC,KAAMK,UAChFqpC,WAKPG,aAAgB,WAMhB,QAASA,cAAahnC,MAAO8mC,eAAgBl3B,YACzCzS,KAAK6C,MAAQA,MACb7C,KAAK2pC,eAAiBA,eACtB3pC,KAAKyS,WAAaA,WAUtB,MAHAo3B,cAAapC,UAAUlnC,MAAQ,SAAUJ,QAASE,SAC9C,MAAOF,SAAQ2pC,eAAe9pC,KAAMK,UAEjCwpC,gBAKPE,QAAW,WAMX,QAASA,SAAQrlC,KAAM7B,MAAO4P,YAC1BzS,KAAK0E,KAAOA,KACZ1E,KAAK6C,MAAQA,MACb7C,KAAKyS,WAAaA,WAQtB,MADAs3B,SAAQtC,UAAUlnC,MAAQ,SAAUJ,QAASE,SAAW,MAAOF,SAAQ6pC,UAAUhqC,KAAMK,UAChF0pC,WAMPE,wBAA2B,WAS3B,QAASA,yBAAwBvlC,KAAM6C,KAAMsa,gBAAiBhf,MAAOk3B,KAAMtnB,YACvEzS,KAAK0E,KAAOA,KACZ1E,KAAKuH,KAAOA,KACZvH,KAAK6hB,gBAAkBA,gBACvB7hB,KAAK6C,MAAQA,MACb7C,KAAK+5B,KAAOA,KACZ/5B,KAAKyS,WAAaA,WAkBtB,MAXAw3B,yBAAwBxC,UAAUlnC,MAAQ,SAAUJ,QAASE,SACzD,MAAOF,SAAQ+pC,qBAAqBlqC,KAAMK,UAE9CwD,OAAOkX,eAAekvB,wBAAwBxC,UAAW,eAIrDtiC,IAAK,WAAc,MAAOnF,MAAKuH,OAASiyB,oBAAoBG,WAC5D1e,YAAY,EACZD,cAAc,IAEXivB,2BAMPE,cAAiB,WAQjB,QAASA,eAAczlC,KAAMg4B,OAAQD,MAAO2N,QAAS33B,YACjDzS,KAAK0E,KAAOA,KACZ1E,KAAK08B,OAASA,OACd18B,KAAKy8B,MAAQA,MACbz8B,KAAKoqC,QAAUA,QACfpqC,KAAKyS,WAAaA,WA2CtB,MAnCA03B,eAAcE,aAAe,SAAU3lC,KAAMg4B,OAAQD,OACjD,MAAIC,QACOA,OAAS,IAAMh4B,KAEjB+3B,MACE,IAAM/3B,KAAO,IAAM+3B,MAGnB/3B,MAQfylC,cAAc1C,UAAUlnC,MAAQ,SAAUJ,QAASE,SAC/C,MAAOF,SAAQmqC,WAAWtqC,KAAMK,UAEpCwD,OAAOkX,eAAeovB,cAAc1C,UAAW,YAI3CtiC,IAAK,WAAc,MAAOglC,eAAcE,aAAarqC,KAAK0E,KAAM1E,KAAK08B,OAAQ18B,KAAKy8B,QAClFxhB,YAAY,EACZD,cAAc,IAElBnX,OAAOkX,eAAeovB,cAAc1C,UAAW,eAI3CtiC,IAAK,WAAc,QAASnF,KAAKy8B,OACjCxhB,YAAY,EACZD,cAAc,IAEXmvB,iBAKPI,aAAgB,WAMhB,QAASA,cAAa7lC,KAAM7B,MAAO4P,YAC/BzS,KAAK0E,KAAOA,KACZ1E,KAAK6C,MAAQA,MACb7C,KAAKyS,WAAaA,WAUtB,MAHA83B,cAAa9C,UAAUlnC,MAAQ,SAAUJ,QAASE,SAC9C,MAAOF,SAAQqqC,eAAexqC,KAAMK,UAEjCkqC,gBAKPE,YAAe,WAMf,QAASA,aAAY/lC,KAAM7B,MAAO4P,YAC9BzS,KAAK0E,KAAOA,KACZ1E,KAAK6C,MAAQA,MACb7C,KAAKyS,WAAaA,WAUtB,MAHAg4B,aAAYhD,UAAUlnC,MAAQ,SAAUJ,QAASE,SAC7C,MAAOF,SAAQuqC,cAAc1qC,KAAMK,UAEhCoqC,eAKP1R,WAAc,WAgBd,QAASA,YAAWr0B,KAAMyP,MAAO5L,OAAQC,QAASmiC,WAAYvsB,WAAYzV,UAAWmwB,iBAAkBqC,aAAc5e,SAAUotB,eAAgBl3B,WAAYm4B,eACvJ5qC,KAAK0E,KAAOA,KACZ1E,KAAKmU,MAAQA,MACbnU,KAAKuI,OAASA,OACdvI,KAAKwI,QAAUA,QACfxI,KAAK2qC,WAAaA,WAClB3qC,KAAKoe,WAAaA,WAClBpe,KAAK2I,UAAYA,UACjB3I,KAAK84B,iBAAmBA,iBACxB94B,KAAKm7B,aAAeA,aACpBn7B,KAAKuc,SAAWA,SAChBvc,KAAK2pC,eAAiBA,eACtB3pC,KAAKyS,WAAaA,WAClBzS,KAAK4qC,cAAgBA,cAUzB,MAHA7R,YAAW0O,UAAUlnC,MAAQ,SAAUJ,QAASE,SAC5C,MAAOF,SAAQ0qC,aAAa7qC,KAAMK,UAE/B04B,cAKPF,oBAAuB,WAcvB,QAASA,qBAAoB1kB,MAAO3L,QAASmiC,WAAYG,UAAW1sB,WAAYzV,UAAWmwB,iBAAkBqC,aAAc5e,SAAUotB,eAAgBl3B,YACjJzS,KAAKmU,MAAQA,MACbnU,KAAKwI,QAAUA,QACfxI,KAAK2qC,WAAaA,WAClB3qC,KAAK8qC,UAAYA,UACjB9qC,KAAKoe,WAAaA,WAClBpe,KAAK2I,UAAYA,UACjB3I,KAAK84B,iBAAmBA,iBACxB94B,KAAKm7B,aAAeA,aACpBn7B,KAAKuc,SAAWA,SAChBvc,KAAK2pC,eAAiBA,eACtB3pC,KAAKyS,WAAaA,WAUtB,MAHAomB,qBAAoB4O,UAAUlnC,MAAQ,SAAUJ,QAASE,SACrD,MAAOF,SAAQ4qC,sBAAsB/qC,KAAMK,UAExCw4B,uBAKPmS,0BAA6B,WAO7B,QAASA,2BAA0BC,cAAeC,aAAcroC,MAAO4P,YACnEzS,KAAKirC,cAAgBA,cACrBjrC,KAAKkrC,aAAeA,aACpBlrC,KAAK6C,MAAQA,MACb7C,KAAKyS,WAAaA,WAUtB,MAHAu4B,2BAA0BvD,UAAUlnC,MAAQ,SAAUJ,QAASE,SAC3D,MAAOF,SAAQgrC,uBAAuBnrC,KAAMK,UAEzC2qC,6BAKPI,aAAgB,WAShB,QAASA,cAAa5sB,UAAWjW,OAAQ8iC,eAAgBC,WAAYxrB,oBAAqBrN,YACtFzS,KAAKwe,UAAYA,UACjBxe,KAAKuI,OAASA,OACdvI,KAAKqrC,eAAiBA,eACtBrrC,KAAKsrC,WAAaA,WAClBtrC,KAAK8f,oBAAsBA,oBAC3B9f,KAAKyS,WAAaA,WAUtB,MAHA24B,cAAa3D,UAAUlnC,MAAQ,SAAUJ,QAASE,SAC9C,MAAOF,SAAQorC,eAAevrC,KAAMK,UAEjC+qC,gBAKPptB,YAAe,WAUf,QAASA,aAAYvX,MAAOwX,cAAeF,MAAOpV,UAAWuV,aAAczW,eAAgBgL,YACvFzS,KAAKyG,MAAQA,MACbzG,KAAKie,cAAgBA,cACrBje,KAAK+d,MAAQA,MACb/d,KAAK2I,UAAYA,UACjB3I,KAAKke,aAAeA,aACpBle,KAAKyH,eAAiBA,eACtBzH,KAAKyS,WAAaA,WAWtB,MAJAuL,aAAYypB,UAAUlnC,MAAQ,SAAUJ,QAASE,SAE7C,MAAO,OAEJ2d,eAEPW,kBACJA,iBAAgBM,cAAgB,EAChCN,gBAAgBO,eAAiB,EACjCP,gBAAgBC,UAAY,EAC5BD,gBAAgBE,UAAY,EAC5BF,gBAAgB6sB,QAAU,EAC1B7sB,gBAAgBA,gBAAgBM,eAAiB,gBACjDN,gBAAgBA,gBAAgBO,gBAAkB,iBAClDP,gBAAgBA,gBAAgBC,WAAa,YAC7CD,gBAAgBA,gBAAgBE,WAAa,YAC7CF,gBAAgBA,gBAAgB6sB,SAAW,SAI3C,IAAIvS,cAAgB,WAMhB,QAASA,cAAa90B,MAAOwlC,eAAgBl3B,YACzCzS,KAAKmE,MAAQA,MACbnE,KAAK2pC,eAAiBA,eACtB3pC,KAAKyS,WAAaA,WAUtB,MAHAwmB,cAAawO,UAAUlnC,MAAQ,SAAUJ,QAASE,SAC9C,MAAOF,SAAQsrC,eAAezrC,KAAMK,UAEjC44B,gBAEPO,sBACJA,qBAAoBE,SAAW,EAC/BF,oBAAoBC,UAAY,EAChCD,oBAAoBK,MAAQ,EAC5BL,oBAAoBM,MAAQ,EAC5BN,oBAAoBG,UAAY,EAChCH,oBAAoBA,oBAAoBE,UAAY,WACpDF,oBAAoBA,oBAAoBC,WAAa,YACrDD,oBAAoBA,oBAAoBK,OAAS,QACjDL,oBAAoBA,oBAAoBM,OAAS,QACjDN,oBAAoBA,oBAAoBG,WAAa,WA2BrD,IAAI50B,cAAgB,WAMhB,QAASA,cAAac,SAAUnB,KAAMgnC,SAClC1rC,KAAK6F,SAAWA,SAChB7F,KAAK0E,KAAOA,KACZ1E,KAAK0rC,QAAUA,QAUnB,MALA3mC,cAAa0iC,UAAUkE,gBAAkB,WACrC,GAAI3rC,KAAK0rC,QAAQvpC,OACb,KAAM,IAAInB,OAAM,2DAA6D4qC,KAAKC,UAAU7rC,MAAQ,MAGrG+E,gBAMPq+B,kBAAqB,WACrB,QAASA,qBACLpjC,KAAK8rC,MAAQ,GAAIvtB,KAmBrB,MAXA6kB,mBAAkBqE,UAAUtiC,IAAM,SAAU4mC,gBAAiBrnC,KAAMgnC,SAC/DA,QAAUA,WACV,IAAqBM,cAAeN,QAAQvpC,OAAS,IAAMupC,QAAQr2B,KAAK,KAAO,GAC1Dif,IAAM,IAAOyX,gBAAkB,KAAQrnC,KAAOsnC,aAC9C1rC,OAASN,KAAK8rC,MAAM3mC,IAAImvB,IAK7C,OAJKh0B,UACDA,OAAS,GAAIyE,cAAagnC,gBAAiBrnC,KAAMgnC,SACjD1rC,KAAK8rC,MAAMvmC,IAAI+uB,IAAKh0B,SAEjBA,QAEJ8iC,qBAEP6I,iBACJA,gBAAeC,SAAW,EAC1BD,eAAeE,mBAAqB,EACpCF,eAAeG,cAAgB,EAC/BH,eAAeA,eAAeC,UAAY,WAC1CD,eAAeA,eAAeE,oBAAsB,qBACpDF,eAAeA,eAAeG,eAAiB,eAkC/C,IAAqBC,iBACjBC,OAAU,IACVC,OAAU,IACVC,MAAS,IACTC,MAAS,IACTC,MAAS,IACTC,MAAS,IACTC,MAAS,IACTC,OAAU,IACVC,OAAU,IACVC,QAAW,IACXC,MAAS,IACTC,MAAS,IACTC,IAAO,IACPC,IAAO,IACPC,IAAO,IACPC,KAAQ,IACRC,MAAS,IACTC,MAAS,IACTC,MAAS,IACTC,OAAU,IACVC,OAAU,IACVC,KAAQ,IACRC,KAAQ,IACRC,MAAS,IACTC,KAAQ,IACRC,KAAQ,IACRC,OAAU,IACVC,KAAQ,IACRC,IAAO,IACPC,OAAU,IACVC,OAAU,IACVC,MAAS,IACTC,KAAQ,IACRC,IAAO,IACPC,IAAO,IACPC,KAAQ,IACRC,MAAS,IACTC,KAAQ,IACRC,KAAQ,IACRC,MAAS,IACTC,IAAO,IACPC,OAAU,IACVC,OAAU,IACVC,OAAU,IACVC,KAAQ,IACRC,KAAQ,IACRC,IAAO,IACPC,MAAS,IACTC,MAAS,IACTC,MAAS,IACTC,OAAU,IACVC,OAAU,IACVC,OAAU,IACVC,MAAS,IACTC,MAAS,IACTC,OAAU,IACVC,OAAU,IACVC,MAAS,IACTC,KAAQ,IACRC,KAAQ,IACRC,QAAW,IACXC,QAAW,IACXC,MAAS,IACTC,IAAO,IACPC,IAAO,IACPC,IAAO,IACPC,IAAO,IACPC,KAAQ,IACRC,KAAQ,IACRC,KAAQ,IACRC,MAAS,IACTC,KAAQ,IACRC,OAAU,IACVC,OAAU,IACVC,OAAU,IACVC,OAAU,IACVC,MAAS,IACTC,MAAS,IACTC,MAAS,IACTC,GAAM,IACNC,GAAM,IACNC,KAAQ,IACRC,KAAQ,IACRC,OAAU,IACVC,OAAU,IACVC,OAAU,IACVC,OAAU,IACVC,MAAS,IACTC,MAAS,IACTC,MAAS,IACTC,OAAU,IACVC,OAAU,IACVC,MAAS,IACTC,MAAS,IACTC,IAAO,IACPC,KAAQ,IACRC,KAAQ,IACRC,OAAU,IACVC,KAAQ,IACRC,KAAQ,IACRC,KAAQ,IACRC,MAAS,IACTC,MAAS,IACTC,OAAU,IACVC,OAAU,IACVC,KAAQ,IACRC,MAAS,IACTC,KAAQ,IACRC,KAAQ,IACRC,MAAS,IACTC,MAAS,IACTC,GAAM,IACNC,OAAU,IACVC,OAAU,IACVC,IAAO,IACPC,IAAO,IACPC,OAAU,IACVC,MAAS,IACTC,GAAM,IACNC,KAAQ,IACRC,MAAS,IACTC,MAAS,IACTC,OAAU,IACVC,MAAS,IACTC,GAAM,IACNC,GAAM,IACNC,MAAS,IACTC,KAAQ,IACRC,MAAS,IACTC,GAAM,IACNC,GAAM,IACNtnB,IAAO,IACPunB,MAAS,IACTC,KAAQ,IACRC,OAAU,IACVC,OAAU,IACVC,GAAM,IACNC,GAAM,IACNC,OAAU,IACVC,OAAU,IACVC,MAAS,IACTC,MAAS,IACTC,MAAS,IACTC,MAAS,IACTC,OAAU,IACVC,OAAU,IACVC,MAAS,IACTC,MAAS,IACTC,MAAS,IACTC,QAAW,IACXC,QAAW,IACXC,MAAS,IACTC,GAAM,IACNC,KAAQ,IACRC,KAAQ,IACRC,OAAU,IACVC,OAAU,IACVC,OAAU,IACVC,OAAU,IACVC,OAAU,IACVC,KAAQ,IACRC,KAAQ,IACRC,KAAQ,IACRC,OAAU,IACVC,KAAQ,IACRC,IAAO,IACPC,IAAO,IACPC,GAAM,IACNC,GAAM,IACNC,IAAO,IACPC,OAAU,IACVC,MAAS,IACTC,MAAS,IACTC,MAAS,IACTC,KAAQ,IACR1lB,KAAQ,IACR2lB,IAAO,IACPC,IAAO,IACPC,KAAQ,IACRC,MAAS,IACTC,KAAQ,IACRC,MAAS,IACTC,KAAQ,IACRC,KAAQ,IACRC,MAAS,IACTC,MAAS,IACTC,KAAQ,IACRC,IAAO,IACPC,OAAU,IACVC,IAAO,IACPC,IAAO,IACPC,IAAO,IACPC,OAAU,IACVC,MAAS,IACTC,MAAS,IACTC,OAAU,IACVC,OAAU,IACVC,KAAQ,IACRC,KAAQ,IACRC,IAAO,IACPC,MAAS,IACTC,MAAS,IACTC,OAAU,IACVC,IAAO,IACPC,OAAU,IACVC,IAAO,IACPC,KAAQ,IACRx/B,IAAO,IACPy/B,IAAO,IACPC,KAAQ,IACRC,KAAQ,IACRC,KAAQ,IACRC,KAAQ,IACRC,MAAS,IACTC,IAAO,IACPC,IAAO,IACPC,OAAU,IACVC,MAAS,IACTC,MAAS,IACTC,SAAY,IACZC,OAAU,IACVC,MAAS,IACTC,MAAS,IACTC,MAAS,IACTC,MAAS,IACTC,MAAS,IACTC,OAAU,IACVC,OAAU,IACVC,KAAQ,IACRC,KAAQ,IACRC,MAAS,IACTC,MAAS,IACTC,OAAU,IACVC,OAAU,IACVC,IAAO,IACPC,MAAS,IACTC,QAAW,IACXC,QAAW,IACXC,KAAQ,IACRC,KAAQ,IACRC,OAAU,IACVC,GAAM,IACNC,GAAM,IACNC,OAAU,IACVC,OAAU,IACVC,IAAO,IACPC,KAAQ,IACRC,KAAQ,IACRC,KAAQ,IACRC,KAAQ,IACRC,IAAO,IACPC,KAAQ,KAERC,kBAAqB,WAIrB,QAASA,mBAAkBlnC,IACvB,GAAIE,IAAY,SAAPF,MAAqBA,GAAImnC,iBAAmBjnC,GAAGinC,iBAAkBC,gBAAkBlnC,GAAGknC,gBAAiBC,wBAA0BnnC,GAAGmnC,wBAAyBplC,GAAK/B,GAAGonC,YAAaA,YAAqB,SAAPrlC,GAAgBm1B,eAAeG,cAAgBt1B,GAAIM,GAAKrC,GAAGqnC,eAAgBA,eAAwB,SAAPhlC,IAAwBA,GAAIC,GAAKtC,GAAGsnC,OAAQA,OAAgB,SAAPhlC,IAAwBA,GAAIilC,GAAKvnC,GAAGwnC,cAAeA,cAAuB,SAAPD,IAAwBA,GACjbjV,MAAQrnC,IACZA,MAAKg8C,oBACLh8C,KAAKo8C,gBAAiB,EACtBp8C,KAAKw8C,cAAe,EAChBR,kBAAoBA,iBAAiB75C,OAAS,GAC9C65C,iBAAiBv7C,QAAQ,SAAUe,SAAW,MAAO6lC,OAAM2U,iBAAiBx6C,UAAW,IAE3FxB,KAAKq8C,OAASA,OACdr8C,KAAKo8C,eAAiBA,gBAAkBC,OACpCJ,iBAAmBA,gBAAgB95C,OAAS,IAC5CnC,KAAKi8C,mBAELj8C,KAAKy8C,YAAcR,gBAAgB,GACnCA,gBAAgBx7C,QAAQ,SAAUe,SAAW,MAAO6lC,OAAM4U,gBAAgBz6C,UAAW,KAEzFxB,KAAKk8C,wBAA0BA,wBAC/Bl8C,KAAKm8C,YAAcA,YACnBn8C,KAAKu8C,cAAgBA,cAwBzB,MAlBAR,mBAAkBtU,UAAUiV,mBAAqB,SAAUC,eACvD,IAAK38C,KAAKi8C,gBACN,OAAO,CAEX,KAAKU,cACD,OAAO,CAEX,IAAqBC,UAAWD,cAAcj7C,cACzBm7C,iBAAgC,aAAbD,UAA6C,gBAAlBD,aACnE,QAAQE,kBAAsD,GAAlC78C,KAAKi8C,gBAAgBW,WAMrDb,kBAAkBtU,UAAUqV,gBAAkB,SAAUp4C,MACpD,MAAO1E,MAAKq8C,QAAU33C,KAAKhD,eAAiB1B,MAAKg8C,kBAE9CD,qBAIUt6C,iBACjBomB,KAAQ,GAAIk0B,oBAAoBM,QAAQ,IACxCryC,KAAQ,GAAI+xC,oBAAoBM,QAAQ,IACxCU,KAAQ,GAAIhB,oBAAoBM,QAAQ,IACxCW,MAAS,GAAIjB,oBAAoBM,QAAQ,IACzCY,KAAQ,GAAIlB,oBAAoBM,QAAQ,IACxCa,IAAO,GAAInB,oBAAoBM,QAAQ,IACvCx6C,MAAS,GAAIk6C,oBAAoBM,QAAQ,IACzCpV,MAAS,GAAI8U,oBAAoBM,QAAQ,IACzCc,GAAM,GAAIpB,oBAAoBM,QAAQ,IACtCe,GAAM,GAAIrB,oBAAoBM,QAAQ,IACtCjsC,OAAU,GAAI2rC,oBAAoBM,QAAQ,IAC1CgB,MAAS,GAAItB,oBAAoBM,QAAQ,IACzCiB,IAAO,GAAIvB,oBAAoBM,QAAQ,IACvCnoC,EAAK,GAAI6nC,oBACLC,kBACI,UAAW,UAAW,QAAS,aAAc,MAAO,KAAM,WAAY,SAAU,OAChF,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,SAAU,SAAU,KACxD,OAAQ,MAAO,KAAM,IAAK,MAAO,UAAW,QAAS,MAEzDI,gBAAgB,IAEpBmB,MAAS,GAAIxB,oBAAoBC,kBAAmB,QAAS,WAC7DwB,MAAS,GAAIzB,oBAAoBC,kBAAmB,QAAS,SAAUI,gBAAgB,IACvFqB,MAAS,GAAI1B,oBAAoBC,kBAAmB,SAAUI,gBAAgB,IAC9EsB,GAAM,GAAI3B,oBACNC,kBAAmB,MACnBC,iBAAkB,QAAS,QAAS,SACpCG,gBAAgB,IAEpBuB,GAAM,GAAI5B,oBAAoBC,kBAAmB,KAAM,MAAOI,gBAAgB,IAC9EwB,GAAM,GAAI7B,oBAAoBC,kBAAmB,KAAM,MAAOI,gBAAgB,IAC9EyB,IAAO,GAAI9B,oBAAoBE,iBAAkB,YAAaI,QAAQ,IACtEyB,IAAO,GAAI/B,oBAAoBG,wBAAyB,QACxD6B,KAAQ,GAAIhC,oBAAoBG,wBAAyB,SACzD8B,GAAM,GAAIjC,oBAAoBC,kBAAmB,MAAOI,gBAAgB,IACxE6B,GAAM,GAAIlC,oBAAoBC,kBAAmB,KAAM,QACvDkC,GAAM,GAAInC,oBAAoBC,kBAAmB,KAAM,MAAOI,gBAAgB,IAC9E+B,GAAM,GAAIpC,oBAAoBC,kBAAmB,KAAM,KAAM,MAAO,MAAOI,gBAAgB,IAC3FgC,GAAM,GAAIrC,oBAAoBC,kBAAmB,KAAM,KAAM,MAAO,MAAOI,gBAAgB,IAC3FiC,IAAO,GAAItC,oBAAoBC,kBAAmB,KAAM,MAAO,MAAOI,gBAAgB,IACtFkC,GAAM,GAAIvC,oBAAoBC,kBAAmB,KAAM,KAAM,MAAO,MAAOI,gBAAgB,IAC3FmC,SAAY,GAAIxC,oBAAoBC,kBAAmB,YAAaI,gBAAgB,IACpFoC,OAAU,GAAIzC,oBAAoBC,kBAAmB,SAAU,YAAaI,gBAAgB,IAC5FqC,IAAO,GAAI1C,oBAAoBQ,eAAe,IAC9CmC,QAAW,GAAI3C,oBAAoBQ,eAAe,IAClDoC,MAAS,GAAI5C,oBAAoBI,YAAalQ,eAAeC,WAC7D0S,OAAU,GAAI7C,oBAAoBI,YAAalQ,eAAeC,WAC9D2S,MAAS,GAAI9C,oBAAoBI,YAAalQ,eAAeE,qBAC7D2S,SAAY,GAAI/C,oBAAoBI,YAAalQ,eAAeE,mBAAoBoQ,eAAe,KAElF56C,wBAA0B,GAAIo6C,mBAQ9BgD,iBAAmB,GAAItvC,QAAO,8GASnD,KAMIzI,YAAe,WACf,QAASA,eACLhH,KAAK4S,QAAU,KACf5S,KAAKg/C,cACLh/C,KAAKmU,SACLnU,KAAK0hB,gBAwHT,MAlHA1a,aAAYC,MAAQ,SAAUC,UAC1B,GASqBwV,OATAuiC,WACAC,WAAa,SAAUlvB,IAAKmvB,QACzCA,OAAOz9B,aAAavf,OAAS,IAAMg9C,OAAOvsC,SAAuC,GAA5BusC,OAAOH,WAAW78C,QAChD,GAAvBg9C,OAAOhrC,MAAMhS,SACbg9C,OAAOvsC,QAAU,KAErBod,IAAIrvB,KAAKw+C,SAEQn7B,YAAc,GAAIhd,aAElBo4C,QAAUp7B,YACVq7B,OAAQ,CAE7B,KADAN,iBAAiBjqB,UAAY,EACtBpY,MAAQqiC,iBAAiBO,KAAKp4C,WAAW,CAC5C,GAAIwV,MAAM,GAAI,CACV,GAAI2iC,MACA,KAAM,IAAIr+C,OAAM,4CAEpBq+C,QAAQ,EACRD,QAAU,GAAIp4C,aACdgd,YAAYtC,aAAa/gB,KAAKy+C,SAelC,GAbI1iC,MAAM,IACN0iC,QAAQl7B,WAAWxH,MAAM,IAEzBA,MAAM,IACN0iC,QAAQ16B,aAAahI,MAAM,IAE3BA,MAAM,IACN0iC,QAAQ96B,aAAa5H,MAAM,GAAIA,MAAM,IAErCA,MAAM,KACN2iC,OAAQ,EACRD,QAAUp7B,aAEVtH,MAAM,GAAI,CACV,GAAI2iC,MACA,KAAM,IAAIr+C,OAAM,+CAEpBk+C,YAAWD,QAASj7B,aACpBA,YAAco7B,QAAU,GAAIp4C,cAIpC,MADAk4C,YAAWD,QAASj7B,aACbi7B,SAKXj4C,YAAYygC,UAAU9lB,kBAAoB,WACtC,MAAO3hB,MAAKu/C,sBAAkD,GAA1Bv/C,KAAKg/C,WAAW78C,QAAoC,GAArBnC,KAAKmU,MAAMhS,QAC7C,IAA7BnC,KAAK0hB,aAAavf,QAK1B6E,YAAYygC,UAAU8X,mBAAqB,WAAc,QAASv/C,KAAK4S,SAKvE5L,YAAYygC,UAAUvjB,WAAa,SAAUtR,SACzB,SAAZA,UAAsBA,QAAU,MACpC5S,KAAK4S,QAAUA,SAMnB5L,YAAYygC,UAAUtgC,2BAA6B,WAI/C,IAAK,GAHgB3F,SAAUxB,KAAK4S,SAAW,MAC1B4sC,UAAYx/C,KAAKg/C,WAAW78C,OAAS,EAAI,WAAcnC,KAAKg/C,WAAW3pC,KAAK,KAAO,IAAO,GAC1FlB,MAAQ,GACHvI,EAAI,EAAGA,EAAI5L,KAAKmU,MAAMhS,OAAQyJ,GAAK,EAAG,CAC5D,GAAqBuY,UAAWnkB,KAAKmU,MAAMvI,GACtByY,UAAkC,KAAtBrkB,KAAKmU,MAAMvI,EAAI,GAAY,KAAQ5L,KAAKmU,MAAMvI,EAAI,GAAK,IAAO,EAC/FuI,QAAS,IAAMgQ,SAAWE,UAE9B,MAAO9iB,sBAAqBC,SAAS66C,OAAS,IAAM76C,QAAUg+C,UAAYrrC,MAAQ,KAC9E,IAAM3S,QAAUg+C,UAAYrrC,MAAQ,MAAQ3S,QAAU,KAO9DwF,YAAYygC,UAAUnjB,aAAe,SAAU5f,KAAM7B,OACnC,SAAVA,QAAoBA,MAAQ,IAChC7C,KAAKmU,MAAMxT,KAAK+D,KAAM7B,OAASA,MAAMnB,eAAiB,KAM1DsF,YAAYygC,UAAU/iB,aAAe,SAAUhgB,MAAQ1E,KAAKg/C,WAAWr+C,KAAK+D,KAAKhD,gBAIjFsF,YAAYygC,UAAUpiC,SAAW,WAC7B,GAAqB2qB,KAAMhwB,KAAK4S,SAAW,EAI3C,IAHI5S,KAAKg/C,YACLh/C,KAAKg/C,WAAWv+C,QAAQ,SAAUg/C,OAAS,MAAOzvB,MAAO,IAAMyvB,QAE/Dz/C,KAAKmU,MACL,IAAK,GAAqBvI,GAAI,EAAGA,EAAI5L,KAAKmU,MAAMhS,OAAQyJ,GAAK,EAAG,CAC5D,GAAqBlH,MAAO1E,KAAKmU,MAAMvI,GAClB/I,MAAQ7C,KAAKmU,MAAMvI,EAAI,EAC5CokB,MAAO,IAAMtrB,MAAQ7B,MAAQ,IAAMA,MAAQ,IAAM,IAIzD,MADA7C,MAAK0hB,aAAajhB,QAAQ,SAAUi/C,aAAe,MAAO1vB,MAAO,QAAU0vB,YAAc,MAClF1vB,KAEJhpB,eAMP24C,gBAAmB,WACnB,QAASA,mBACL3/C,KAAK4/C,YAAc,GAAIrhC,KACvBve,KAAK6/C,mBAAqB,GAAIthC,KAC9Bve,KAAK8/C,UAAY,GAAIvhC,KACrBve,KAAK+/C,iBAAmB,GAAIxhC,KAC5Bve,KAAKggD,cAAgB,GAAIzhC,KACzBve,KAAKigD,qBAAuB,GAAI1hC,KAChCve,KAAKkgD,iBAmNT,MA7MAP,iBAAgBQ,iBAAmB,SAAUz+B,cACzC,GAAqB0+B,YAAa,GAAIT,gBAEtC,OADAS,YAAWC,eAAe3+B,aAAc,MACjC0+B,YAOXT,gBAAgBlY,UAAU4Y,eAAiB,SAAUC,aAAcC,cAC/D,GAAqBC,aAAc,IAC/BF,cAAan+C,OAAS,IACtBq+C,YAAc,GAAIC,qBAAoBH,cACtCtgD,KAAKkgD,cAAcv/C,KAAK6/C,aAE5B,KAAK,GAAqB50C,GAAI,EAAGA,EAAI00C,aAAan+C,OAAQyJ,IACtD5L,KAAK0gD,eAAeJ,aAAa10C,GAAI20C,aAAcC,cAU3Db,gBAAgBlY,UAAUiZ,eAAiB,SAAU18B,YAAau8B,aAAcC,aAC5E,GAAqB3uB,SAAU7xB,KACV4S,QAAUoR,YAAYpR,QACtBosC,WAAah7B,YAAYg7B,WACzB7qC,MAAQ6P,YAAY7P,MACpBwsC,WAAa,GAAIC,iBAAgB58B,YAAau8B,aAAcC,YACjF,IAAI5tC,QAAS,CACT,GAAqBiuC,YAA8B,IAAjB1sC,MAAMhS,QAAsC,IAAtB68C,WAAW78C,MAC/D0+C,YACA7gD,KAAK8gD,aAAajvB,QAAQ+tB,YAAahtC,QAAS+tC,YAGhD9uB,QAAU7xB,KAAK+gD,YAAYlvB,QAAQguB,mBAAoBjtC,SAG/D,GAAIosC,WACA,IAAK,GAAqBpzC,GAAI,EAAGA,EAAIozC,WAAW78C,OAAQyJ,IAAK,CACzD,GAAqBi1C,YAA8B,IAAjB1sC,MAAMhS,QAAgByJ,IAAMozC,WAAW78C,OAAS,EAC7DsiB,UAAYu6B,WAAWpzC,EACxCi1C,YACA7gD,KAAK8gD,aAAajvB,QAAQiuB,UAAWr7B,UAAWk8B,YAGhD9uB,QAAU7xB,KAAK+gD,YAAYlvB,QAAQkuB,iBAAkBt7B,WAIjE,GAAItQ,MACA,IAAK,GAAqBvI,GAAI,EAAGA,EAAIuI,MAAMhS,OAAQyJ,GAAK,EAAG,CACvD,GAAqBi1C,YAAaj1C,IAAMuI,MAAMhS,OAAS,EAClCuC,KAAOyP,MAAMvI,GACb/I,MAAQsR,MAAMvI,EAAI,EACvC,IAAIi1C,WAAY,CACZ,GAAqBG,aAAcnvB,QAAQmuB,cACtBiB,kBAAoBD,YAAY77C,IAAIT,KACpDu8C,qBACDA,kBAAoB,GAAI1iC,KACxByiC,YAAYz7C,IAAIb,KAAMu8C,oBAE1BjhD,KAAK8gD,aAAaG,kBAAmBp+C,MAAO89C,gBAE3C,CACD,GAAqBO,YAAarvB,QAAQouB,qBACrBkB,iBAAmBD,WAAW/7C,IAAIT,KAClDy8C,oBACDA,iBAAmB,GAAI5iC,KACvB2iC,WAAW37C,IAAIb,KAAMy8C,mBAEzBtvB,QAAU7xB,KAAK+gD,YAAYI,iBAAkBt+C,UAW7D88C,gBAAgBlY,UAAUqZ,aAAe,SAAUtrC,IAAK9Q,KAAMi8C,YAC1D,GAAqBS,cAAe5rC,IAAIrQ,IAAIT,KACvC08C,gBACDA,gBACA5rC,IAAIjQ,IAAIb,KAAM08C,eAElBA,aAAazgD,KAAKggD,aAOtBhB,gBAAgBlY,UAAUsZ,YAAc,SAAUvrC,IAAK9Q,MACnD,GAAqBmtB,SAAUrc,IAAIrQ,IAAIT,KAKvC,OAJKmtB,WACDA,QAAU,GAAI8tB,iBACdnqC,IAAIjQ,IAAIb,KAAMmtB,UAEXA,SASX8tB,gBAAgBlY,UAAU/qB,MAAQ,SAAUsH,YAAaq9B,iBAKrD,IAAK,GAJgB/gD,SAAS,EACTsS,QAAUoR,YAAYpR,QACtBosC,WAAah7B,YAAYg7B,WACzB7qC,MAAQ6P,YAAY7P,MACfvI,EAAI,EAAGA,EAAI5L,KAAKkgD,cAAc/9C,OAAQyJ,IAC5D5L,KAAKkgD,cAAct0C,GAAG01C,gBAAiB,CAK3C,IAHAhhD,OAASN,KAAKuhD,eAAevhD,KAAK4/C,YAAahtC,QAASoR,YAAaq9B,kBAAoB/gD,OACzFA,OAASN,KAAKwhD,cAAcxhD,KAAK6/C,mBAAoBjtC,QAASoR,YAAaq9B,kBACvE/gD,OACA0+C,WACA,IAAK,GAAqBpzC,GAAI,EAAGA,EAAIozC,WAAW78C,OAAQyJ,IAAK,CACzD,GAAqB6Y,WAAYu6B,WAAWpzC,EAC5CtL,QACIN,KAAKuhD,eAAevhD,KAAK8/C,UAAWr7B,UAAWT,YAAaq9B,kBAAoB/gD,OACpFA,OACIN,KAAKwhD,cAAcxhD,KAAK+/C,iBAAkBt7B,UAAWT,YAAaq9B,kBAC9D/gD,OAGhB,GAAI6T,MACA,IAAK,GAAqBvI,GAAI,EAAGA,EAAIuI,MAAMhS,OAAQyJ,GAAK,EAAG,CACvD,GAAqBlH,MAAOyP,MAAMvI,GACb/I,MAAQsR,MAAMvI,EAAI,GAClBq1C,kBAAoBjhD,KAAKggD,cAAc76C,IAAIT,KAC5D7B,SACAvC,OACIN,KAAKuhD,eAAeN,kBAAmB,GAAIj9B,YAAaq9B,kBAAoB/gD,QAEpFA,OACIN,KAAKuhD,eAAeN,kBAAmBp+C,MAAOmhB,YAAaq9B,kBAAoB/gD,MACnF,IAAqB6gD,kBAAmBnhD,KAAKigD,qBAAqB96C,IAAIT,KAClE7B,SACAvC,OAASN,KAAKwhD,cAAcL,iBAAkB,GAAIn9B,YAAaq9B,kBAAoB/gD,QAEvFA,OACIN,KAAKwhD,cAAcL,iBAAkBt+C,MAAOmhB,YAAaq9B,kBAAoB/gD,OAGzF,MAAOA,SAUXq/C,gBAAgBlY,UAAU8Z,eAAiB,SAAU/rC,IAAK9Q,KAAMsf,YAAaq9B,iBACzE,IAAK7rC,KAAuB,gBAAT9Q,MACf,OAAO,CAEX,IAAqB+8C,aAAcjsC,IAAIrQ,IAAIT,UACtBg9C,gBAAkBlsC,IAAIrQ,IAAI,IAI/C,IAHIu8C,kBACAD,YAAcA,YAAY/3C,OAAOg4C,kBAEV,IAAvBD,YAAYt/C,OACZ,OAAO,CAIX,KAAK,GAFgBw+C,YACArgD,QAAS,EACJsL,EAAI,EAAGA,EAAI61C,YAAYt/C,OAAQyJ,IACrD+0C,WAAac,YAAY71C,GACzBtL,OAASqgD,WAAWgB,SAAS39B,YAAaq9B,kBAAoB/gD,MAElE,OAAOA,SAUXq/C,gBAAgBlY,UAAU+Z,cAAgB,SAAUhsC,IAAK9Q,KAAMsf,YAAaq9B,iBACxE,IAAK7rC,KAAuB,gBAAT9Q,MACf,OAAO,CAEX,IAAqBk9C,gBAAiBpsC,IAAIrQ,IAAIT,KAC9C,SAAKk9C,gBAMEA,eAAellC,MAAMsH,YAAaq9B,kBAEtC1B,mBAEPc,oBAAuB,WAIvB,QAASA,qBAAoBvgC,WACzBlgB,KAAKkgB,UAAYA,UACjBlgB,KAAKshD,gBAAiB,EAE1B,MAAOb,wBAEPG,gBAAmB,WAMnB,QAASA,iBAAgB15C,SAAU26C,UAAWrB,aAC1CxgD,KAAKkH,SAAWA,SAChBlH,KAAK6hD,UAAYA,UACjB7hD,KAAKwgD,YAAcA,YACnBxgD,KAAK0hB,aAAexa,SAASwa,aAqBjC,MAdAk/B,iBAAgBnZ,UAAUka,SAAW,SAAU39B,YAAa89B,UACxD,GAAqBxhD,SAAS,CAC9B,IAAIN,KAAK0hB,aAAavf,OAAS,KAAOnC,KAAKwgD,cAAgBxgD,KAAKwgD,YAAYc,gBAAiB,CACzF,GAAqBlB,YAAaT,gBAAgBQ,iBAAiBngD,KAAK0hB,aACxEphB,SAAU8/C,WAAW1jC,MAAMsH,YAAa,MAQ5C,OANI1jB,SAAUwhD,UAAc9hD,KAAKwgD,aAAgBxgD,KAAKwgD,YAAYc,iBAC1DthD,KAAKwgD,cACLxgD,KAAKwgD,YAAYc,gBAAiB,GAEtCQ,SAAS9hD,KAAKkH,SAAUlH,KAAK6hD,YAE1BvhD,QAEJsgD,mBASP71B,cAAgB,GACChpB,iBAAmB,gBA6DpCggD,iBAAoB,WACpB,QAASA,qBAkCT,MA3BAA,kBAAiBta,UAAUzkC,WAAa,SAAUolB,IAAK/nB,SACnD,GAAIgnC,OAAQrnC,IACZ,OAAOooB,KAAI5S,IAAI,SAAU3S,OAAS,MAAOD,YAAWC,MAAOwkC,MAAOhnC,YAOtE0hD,iBAAiBta,UAAUvkC,eAAiB,SAAUsS,IAAKnV,SACvD,GAAIgnC,OAAQrnC,KACSM,SAErB,OADAuD,QAAOwwB,KAAK7e,KAAK/U,QAAQ,SAAU6zB,KAAOh0B,OAAOg0B,KAAO1xB,WAAW4S,IAAI8e,KAAM+S,MAAOhnC,WAC7EC,QAOXyhD,iBAAiBta,UAAUtkC,eAAiB,SAAUN,MAAOxC,SAAW,MAAOwC,QAM/Ek/C,iBAAiBta,UAAUrkC,WAAa,SAAUP,MAAOxC,SAAW,MAAOwC,QACpEk/C,oBAEPC,gBAAmB,WAKnB,QAASA,iBAAgBC,WAAYC,aACb,SAAhBA,cAA0BA,YAAc,MAC5CliD,KAAKiiD,WAAaA,WAClBjiD,KAAKkiD,YAAcA,YACdA,cACDliD,KAAKkiD,YAAcC,QAAQrhC,QAAQmhC,aAG3C,MAAOD,oBAWUx+C,mBAAqB,gBAerBO,iBAAmBF,OAAOC,mBA4C1Bs+C,aAAe,qDAChCC,8BAAiC,WAKjC,QAASA,+BAA8B39C,KAAM49C,aAC5B,SAAT59C,OAAmBA,KAAO,MACV,SAAhB49C,cAA0BA,YAAc,MAC5CtiD,KAAK0E,KAAOA,KACZ1E,KAAKsiD,YAAcA,YAEvB,MAAOD,kCAKPE,8BAAiC,WACjC,QAASA,kCAET,MAAOA,kCAEPC,yCAA4C,SAAUC,QAMtD,QAASD,0CAAyCE,cAAe36C,QAC7D,GAAIs/B,OAAQob,OAAOE,KAAK3iD,OAASA,IAGjC,OAFAqnC,OAAMqb,cAAgBA,cACtBrb,MAAMt/B,OAASA,OACRs/B,MAEX,MAXA+B,WAAUoZ,yCAA0CC,QAW7CD,0CACTD,+BACEK,wCAA2C,SAAUH,QAMrD,QAASG,yCAAwCC,gBAAiBC,OAC9D,GAAIzb,OAAQob,OAAOE,KAAK3iD,OAASA,IAGjC,OAFAqnC,OAAMwb,gBAAkBA,gBACxBxb,MAAMyb,MAAQA,MACPzb,MAEX,MAXA+B,WAAUwZ,wCAAyCH,QAW5CG,yCACTL,+BAIEQ,yBAA4B,WAC5B,QAASA,6BAET,MAAOA,6BAEPC,0CAA6C,SAAUP,QAKvD,QAASO,2CAA0CF,OACjC,SAAVA,QAAoBA,SACxB,IAAIzb,OAAQob,OAAOE,KAAK3iD,OAASA,IAEjC,OADAqnC,OAAMyb,MAAQA,MACPzb,MAEX,MAVA+B,WAAU4Z,0CAA2CP,QAU9CO,2CACTD,0BACEE,8BAAiC,SAAUR,QAM3C,QAASQ,+BAA8BvxC,OAAQ3J,QAC5B,SAAXA,SAAqBA,OAAS,KAClC,IAAIs/B,OAAQob,OAAOE,KAAK3iD,OAASA,IAGjC,OAFAqnC,OAAM31B,OAASA,OACf21B,MAAMt/B,OAASA,OACRs/B,MAEX,MAZA+B,WAAU6Z,8BAA+BR,QAYlCQ,+BACTF,0BACEG,gCAAmC,SAAUT,QAM7C,QAASS,iCAAgCC,QAASp7C,QAC9B,SAAZo7C,UAAsBA,QAAU,GACrB,SAAXp7C,SAAqBA,OAAS,KAClC,IAAIs/B,OAAQob,OAAOE,KAAK3iD,OAASA,IAGjC,OAFAqnC,OAAM8b,QAAUA,QAChB9b,MAAMt/B,OAASA,OACRs/B,MAEX,MAbA+B,WAAU8Z,gCAAiCT,QAapCS,iCACTH,0BAIEK,kCAAqC,SAAUX,QAK/C,QAASW,mCAAkCN,OACzB,SAAVA,QAAoBA,MAAQ,KAChC,IAAIzb,OAAQob,OAAOE,KAAK3iD,OAASA,IAEjC,OADAqnC,OAAMyb,MAAQA,MACPzb,MAEX,MAVA+B,WAAUga,kCAAmCX,QAUtCW,mCACTL,0BACEM,iCAAoC,SAAUZ,QAK9C,QAASY,kCAAiCP,OAEtC,MADc,UAAVA,QAAoBA,MAAQ,MACzBL,OAAOE,KAAK3iD,KAAM8iD,QAAU9iD,KAEvC,MARAopC,WAAUia,iCAAkCZ,QAQrCY,kCACTD,mCACEE,8BAAiC,SAAUb,QAK3C,QAASa,+BAA8BR,OAEnC,MADc,UAAVA,QAAoBA,MAAQ,MACzBL,OAAOE,KAAK3iD,KAAM8iD,QAAU9iD,KAEvC,MARAopC,WAAUka,8BAA+Bb,QAQlCa,+BACTF,mCAQmB19C,oBAAsB,EACtBJ,SAAW,EACXL,UAAY,GAAIsZ,KAyFjCsf,qBACJA,oBAAmB5T,KAAO,EAC1B4T,mBAAmBhf,UAAY,EAC/Bgf,mBAAmB9T,SAAW,EAC9B8T,mBAAmB0lB,WAAa,EAChC1lB,mBAAmBA,mBAAmB5T,MAAQ,OAC9C4T,mBAAmBA,mBAAmBhf,WAAa,YACnDgf,mBAAmBA,mBAAmB9T,UAAY,WAClD8T,mBAAmBA,mBAAmB0lB,YAAc,YAuBpD,IAAIC,2BAA6B,WAI7B,QAASA,2BAA0B3uC,IAC/B,GAAIE,IAAY,SAAPF,MAAqBA,GAAI3K,UAAY6K,GAAG7K,UAAWnC,OAASgN,GAAGhN,OAAQC,UAAY+M,GAAG/M,SAC/FhI,MAAKkK,UAAYA,UACjBlK,KAAK+H,OAASoB,gBAAgBpB,QAC9B/H,KAAKgI,UAAYmB,gBAAgBnB,WAErC,MAAOw7C,8BAKP97C,wBAA2B,WAI3B,QAASA,yBAAwBmN,IAC7B,GAAIE,IAAY,SAAPF,MAAqBA,GAAIlN,cAAgBoN,GAAGpN,cAAeZ,SAAWgO,GAAGhO,SAAUe,YAAciN,GAAGjN,YAAaC,OAASgN,GAAGhN,OAAQC,UAAY+M,GAAG/M,UAAWy7C,oBAAsB1uC,GAAG0uC,oBAAqBv7C,WAAa6M,GAAG7M,WAAYD,mBAAqB8M,GAAG9M,mBAAoBy7C,cAAgB3uC,GAAG2uC,cAAev7C,SAAW4M,GAAG5M,QAS9U,IARAnI,KAAK2H,cAAgBA,cACrB3H,KAAK+G,SAAWA,SAChB/G,KAAK8H,YAAcA,YACnB9H,KAAK+H,OAASoB,gBAAgBpB,QAC9B/H,KAAKgI,UAAYmB,gBAAgBnB,WACjChI,KAAKyjD,oBAAsBt6C,gBAAgBs6C,qBAC3CzjD,KAAKkI,WAAaA,WAAakB,QAAQlB,eACvClI,KAAKiI,mBAAqBA,uBACtBy7C,eAAyC,GAAxBA,cAAcvhD,OAC/B,KAAM,IAAInB,OAAM,yDAEpBhB,MAAK0jD,cAAgBA,cACrB1jD,KAAKmI,SAAWA,SAYpB,MAPAT,yBAAwB+/B,UAAUkc,UAAY,WAC1C,OACIz7C,WAAYlI,KAAKkI,WAAWsN,IAAI,SAAUouC,MAAQ,MAAOA,MAAKl/C,OAC9DuD,mBAAoBjI,KAAKiI,mBACzBN,cAAe3H,KAAK2H,gBAGrBD,2BAKPN,yBAA4B,WAI5B,QAASA,0BAAyByN,IAC9B,GAAIE,IAAY,SAAPF,MAAqBA,GAAIvN,OAASyN,GAAGzN,OAAQC,KAAOwN,GAAGxN,KAAMmB,YAAcqM,GAAGrM,YAAaxB,SAAW6N,GAAG7N,SAAU28C,SAAW9uC,GAAG8uC,SAAUz7C,gBAAkB2M,GAAG3M,gBAAiBG,OAASwM,GAAGxM,OAAQC,QAAUuM,GAAGvM,QAASs7C,cAAgB/uC,GAAG+uC,cAAezY,eAAiBt2B,GAAGs2B,eAAgBjR,eAAiBrlB,GAAGqlB,eAAgBzxB,UAAYoM,GAAGpM,UAAWC,cAAgBmM,GAAGnM,cAAeC,QAAUkM,GAAGlM,QAASC,YAAciM,GAAGjM,YAAagzB,gBAAkB/mB,GAAG+mB,gBAAiB/0B,SAAWgO,GAAGhO,SAAUgC,kBAAoBgM,GAAGhM,kBAAmBC,aAAe+L,GAAG/L,aAAcizB,iBAAmBlnB,GAAGknB,gBAC5lBj8B,MAAKsH,SAAWA,OAChBtH,KAAKuH,KAAOA,KACZvH,KAAK0I,YAAcA,YACnB1I,KAAKkH,SAAWA,SAChBlH,KAAK6jD,SAAWA,SAChB7jD,KAAKoI,gBAAkBA,gBACvBpI,KAAKuI,OAASA,OACdvI,KAAKwI,QAAUA,QACfxI,KAAK8jD,cAAgBA,cACrB9jD,KAAKqrC,eAAiBA,eACtBrrC,KAAKo6B,eAAiBA,eACtBp6B,KAAK2I,UAAYQ,gBAAgBR,WACjC3I,KAAK4I,cAAgBO,gBAAgBP,eACrC5I,KAAK6I,QAAUM,gBAAgBN,SAC/B7I,KAAK8I,YAAcK,gBAAgBL,aACnC9I,KAAK87B,gBAAkB3yB,gBAAgB2yB,iBACvC97B,KAAK+G,SAAWA,SAChB/G,KAAK+I,kBAAoBA,kBACzB/I,KAAKgJ,aAAeA,aACpBhJ,KAAKi8B,iBAAmBA,iBA2F5B,MArFA70B,0BAAyBC,OAAS,SAAUwN,IACxC,GAAIE,IAAY,SAAPF,MAAqBA,GAAIvN,OAASyN,GAAGzN,OAAQC,KAAOwN,GAAGxN,KAAMmB,YAAcqM,GAAGrM,YAAaxB,SAAW6N,GAAG7N,SAAU28C,SAAW9uC,GAAG8uC,SAAUz7C,gBAAkB2M,GAAG3M,gBAAiBG,OAASwM,GAAGxM,OAAQC,QAAUuM,GAAGvM,QAASC,KAAOsM,GAAGtM,KAAME,UAAYoM,GAAGpM,UAAWC,cAAgBmM,GAAGnM,cAAeC,QAAUkM,GAAGlM,QAASC,YAAciM,GAAGjM,YAAagzB,gBAAkB/mB,GAAG+mB,gBAAiB/0B,SAAWgO,GAAGhO,SAAUgC,kBAAoBgM,GAAGhM,kBAAmBC,aAAe+L,GAAG/L,aAAcizB,iBAAmBlnB,GAAGknB,iBAC7e6nB,iBACAzY,kBACAjR,iBACT,OAAR3xB,MACA5E,OAAOwwB,KAAK5rB,MAAMhI,QAAQ,SAAU6zB;AAChC,GAAqBzxB,OAAQ4F,KAAK6rB,KACbyvB,QAAUzvB,IAAI5X,MAAM0lC,aACzB,QAAZ2B,QACA3pB,eAAe9F,KAAOzxB,MAEH,MAAdkhD,QAAQ,GACb1Y,eAAe0Y,QAAQ,IAAMlhD,MAEV,MAAdkhD,QAAQ,KACbD,cAAcC,QAAQ,IAAMlhD,QAIxC,IAAqBmhD,aACP,OAAVz7C,QACAA,OAAO9H,QAAQ,SAAUwjD,YAGrB,GAAqBzxC,OAAQnQ,aAAa4hD,YAAaA,WAAYA,YACnED,WAAUxxC,MAAM,IAAMA,MAAM,IAGpC,IAAqB0xC,cASrB,OARe,OAAX17C,SACAA,QAAQ/H,QAAQ,SAAUwjD,YAGtB,GAAqBzxC,OAAQnQ,aAAa4hD,YAAaA,WAAYA,YACnEC,YAAW1xC,MAAM,IAAMA,MAAM,KAG9B,GAAIpL,2BACPE,OAAQA,OACRC,KAAMA,KACNmB,cAAeA,YAAaxB,SAAUA,SAAU28C,SAAUA,SAAUz7C,gBAAiBA,gBACrFG,OAAQy7C,UACRx7C,QAAS07C,WACTJ,cAAeA,cACfzY,eAAgBA,eAChBjR,eAAgBA,eAChBzxB,UAAWA,UACXC,cAAeA,cACfC,QAASA,QACTC,YAAaA,YACbgzB,gBAAiBA,gBACjB/0B,SAAUA,SACVgC,kBAAmBA,kBACnBC,aAAcA,aACdizB,iBAAkBA,oBAM1B70B,yBAAyBqgC,UAAUkc,UAAY,WAC3C,OACI/lB,YAAaC,mBAAmBhf,UAChCtX,KAAMvH,KAAKuH,KACXmB,YAAa1I,KAAK0I,YAClBxB,SAAUlH,KAAKkH,SACf28C,SAAU7jD,KAAK6jD,SACft7C,OAAQvI,KAAKuI,OACbC,QAASxI,KAAKwI,QACds7C,cAAe9jD,KAAK8jD,cACpBzY,eAAgBrrC,KAAKqrC,eACrBjR,eAAgBp6B,KAAKo6B,eACrBzxB,UAAW3I,KAAK2I,UAChBC,cAAe5I,KAAK4I,cACpBC,QAAS7I,KAAK6I,QACdC,YAAa9I,KAAK8I,YAClBgzB,gBAAiB97B,KAAK87B,gBACtB1zB,gBAAiBpI,KAAKoI,gBACtBrB,SAAU/G,KAAK+G,UAAY/G,KAAK+G,SAAS48C,YACzC56C,kBAAmB/I,KAAK+I,kBACxBC,aAAchJ,KAAKgJ,aACnBizB,iBAAkBj8B,KAAKi8B,mBAGxB70B,4BAsCP+8C,oBAAuB,WAIvB,QAASA,qBAAoBtvC,IACzB,GAAIE,IAAY,SAAPF,MAAqBA,GAAItN,KAAOwN,GAAGxN,KAAM7C,KAAOqQ,GAAGrQ,KAAM0/C,KAAOrvC,GAAGqvC,IAC5EpkD,MAAKuH,KAAOA,KACZvH,KAAK0E,KAAOA,KACZ1E,KAAKokD,OAASA,KAalB,MARAD,qBAAoB1c,UAAUkc,UAAY,WACtC,OACI/lB,YAAaC,mBAAmB5T,KAChC1iB,KAAMvH,KAAKuH,KACX7C,KAAM1E,KAAK0E,KACX0/C,KAAMpkD,KAAKokD,OAGZD,uBAKPE,wBAA2B,WAI3B,QAASA,yBAAwBxvC,IAC7B,GAAIE,IAAY,SAAPF,MAAqBA,GAAItN,KAAOwN,GAAGxN,KAAMoB,UAAYoM,GAAGpM,UAAW43B,mBAAqBxrB,GAAGwrB,mBAAoBxC,mBAAqBhpB,GAAGgpB,mBAAoB2C,cAAgB3rB,GAAG2rB,cAAe1C,cAAgBjpB,GAAGipB,cAAelC,gBAAkB/mB,GAAG+mB,gBAAiBwoB,oBAAsBvvC,GAAGuvC,oBAAqBC,gBAAkBxvC,GAAGwvC,gBAAiBC,gBAAkBzvC,GAAGyvC,gBAAiBC,QAAU1vC,GAAG0vC,QAAS7iB,iBAAmB7sB,GAAG6sB,iBAAkB34B,GAAK8L,GAAG9L,EAC9cjJ,MAAKuH,KAAOA,KACZvH,KAAKugC,mBAAqBp3B,gBAAgBo3B,oBAC1CvgC,KAAK+9B,mBAAqB50B,gBAAgB40B,oBAC1C/9B,KAAK0gC,cAAgBv3B,gBAAgBu3B,eACrC1gC,KAAKg+B,cAAgB70B,gBAAgB60B,eACrCh+B,KAAK2I,UAAYQ,gBAAgBR,WACjC3I,KAAK87B,gBAAkB3yB,gBAAgB2yB,iBACvC97B,KAAKskD,oBAAsBn7C,gBAAgBm7C,qBAC3CtkD,KAAKukD,gBAAkBp7C,gBAAgBo7C,iBACvCvkD,KAAKwkD,gBAAkBr7C,gBAAgBq7C,iBACvCxkD,KAAKykD,QAAUt7C,gBAAgBs7C,SAC/BzkD,KAAKiJ,GAAKA,GACVjJ,KAAK4hC,iBAAmBA,iBAgB5B,MAXAyiB,yBAAwB5c,UAAUkc,UAAY,WAC1C,OACI/lB,YAAaC,mBAAmB9T,SAChCxiB,KAAMvH,KAAKuH,KACXu0B,gBAAiB97B,KAAK4hC,iBAAiB9F,gBACvCnzB,UAAW3I,KAAK4hC,iBAAiBj5B,UACjCk5B,QAAS7hC,KAAK4hC,iBAAiBC,QAC/B9D,mBAAoB/9B,KAAK4hC,iBAAiB7D,mBAC1CC,cAAeh+B,KAAK4hC,iBAAiB5D,gBAGtCqmB,2BAEPK,kCAAqC,WACrC,QAASA,qCACL1kD,KAAK2kD,cAAgB,GAAIljC,KACzBzhB,KAAKoe,cACLpe,KAAK4kD,sBAAwB,GAAInjC,KACjCzhB,KAAK+9B,sBACL/9B,KAAK6kD,SAAW,GAAIpjC,KACpBzhB,KAAK8gC,SACL9gC,KAAK8kD,iBAAmB,GAAIrjC,KAC5BzhB,KAAKg+B,iBACLh+B,KAAK+kD,WAAa,GAAItjC,KACtBzhB,KAAK6hC,WACL7hC,KAAKglD,mBAAqB,GAAIvjC,KAC9BzhB,KAAK87B,mBACL97B,KAAK2I,aAsET,MA/DA+7C,mCAAkCjd,UAAUwd,YAAc,SAAU1nC,SAAU9d,QAC1EO,KAAK2I,UAAUhI,MAAO4c,SAAUA,SAAU9d,OAAQA,UAMtDilD,kCAAkCjd,UAAUyd,aAAe,SAAUj8C,IAC5DjJ,KAAK2kD,cAAcz/C,IAAI+D,GAAGpE,aAC3B7E,KAAK2kD,cAAcnpB,IAAIvyB,GAAGpE,WAC1B7E,KAAKoe,WAAWzd,KAAKsI,MAO7By7C,kCAAkCjd,UAAU0d,qBAAuB,SAAUl8C,IACpEjJ,KAAK4kD,sBAAsB1/C,IAAI+D,GAAGpE,aACnC7E,KAAK4kD,sBAAsBppB,IAAIvyB,GAAGpE,WAClC7E,KAAK+9B,mBAAmBp9B,KAAKsI,MAOrCy7C,kCAAkCjd,UAAU2d,QAAU,SAAUn8C,IACvDjJ,KAAK6kD,SAAS3/C,IAAI+D,GAAGpE,aACtB7E,KAAK6kD,SAASrpB,IAAIvyB,GAAGpE,WACrB7E,KAAK8gC,MAAMngC,KAAKsI,MAOxBy7C,kCAAkCjd,UAAU4d,gBAAkB,SAAUp8C,IAC/DjJ,KAAK8kD,iBAAiB5/C,IAAI+D,GAAGpE,aAC9B7E,KAAK8kD,iBAAiBtpB,IAAIvyB,GAAGpE,WAC7B7E,KAAKg+B,cAAcr9B,KAAKsI,MAOhCy7C,kCAAkCjd,UAAU6d,UAAY,SAAUr8C,IACzDjJ,KAAK+kD,WAAW7/C,IAAI+D,GAAGpE,aACxB7E,KAAK+kD,WAAWvpB,IAAIvyB,GAAGpE,WACvB7E,KAAK6hC,QAAQlhC,KAAKsI,MAO1By7C,kCAAkCjd,UAAU8d,kBAAoB,SAAUC,IACjExlD,KAAKglD,mBAAmB9/C,IAAIsgD,GAAGC,iBAChCzlD,KAAKglD,mBAAmBxpB,IAAIgqB,GAAGC,eAC/BzlD,KAAK87B,gBAAgBn7B,KAAK6kD,MAG3Bd,qCASPgB,aAAgB,WAKhB,QAASA,cAAaj/C,MAAOoO,IACzB,GAAI8I,UAAW9I,GAAG8I,SAAUF,SAAW5I,GAAG4I,SAAUD,YAAc3I,GAAG2I,YAAaI,WAAa/I,GAAG+I,WAAYF,KAAO7I,GAAG6I,KAAMG,MAAQhJ,GAAGgJ,KACzI7d,MAAKyG,MAAQA,MACbzG,KAAK2d,SAAWA,SAChB3d,KAAKyd,SAAWA,SAChBzd,KAAKwd,YAAcA,YACnBxd,KAAK4d,WAAaA,WAClB5d,KAAK0+B,aAAehhB,KACpB1d,KAAK6d,QAAUA,MAEnB,MAAO6nC,iBAoEPvhB,eAAkB,WAIlB,QAASA,gBAAetvB,IACpB,GAAIE,IAAY,SAAPF,MAAqBA,GAAIiC,GAAK/B,GAAGqvB,qBAAsBA,qBAA8B,SAAPttB,GAAgB7W,cAAc2H,kBAAkBy8B,SAAWvtB,GAAIM,GAAKrC,GAAGuvB,OAAQA,OAAgB,SAAPltB,IAAuBA,GAAI+xB,mBAAqBp0B,GAAGo0B,mBAAoB9jB,qBAAuBtQ,GAAGsQ,oBAChRrlB,MAAKokC,qBAAuBA,qBAC5BpkC,KAAKskC,OAASA,OACdtkC,KAAKmpC,mBAAqBA,mBAC1BnpC,KAAKqlB,qBAAuBA,wBAAyB,EAEzD,MAAO8e,mBASPwhB,YAAe,WAOf,QAASA,aAAYx4C,QAAStL,MAAO+jD,YAAaC,aAC9C7lD,KAAK6B,MAAQA,MACb7B,KAAK4lD,YAAcA,YACnB5lD,KAAK6lD,YAAcA,YACnB7lD,KAAKmN,QAAU,iBAAmBA,QAAU,IAAMy4C,YAAc,KAAO/jD,MAAQ,QAAUgkD,YAE7F,MAAOF,gBAEPG,UAAa,WAKb,QAASA,WAAUv2C,MAAOC,KACtBxP,KAAKuP,MAAQA,MACbvP,KAAKwP,IAAMA,IAEf,MAAOs2C,cAEPC,IAAO,WAIP,QAASA,KAAIC,MACThmD,KAAKgmD,KAAOA,KAehB,MARAD,KAAIte,UAAUlnC,MAAQ,SAAUJ,QAASE,SAErC,MADgB,UAAZA,UAAsBA,QAAU,MAC7B,MAKX0lD,IAAIte,UAAUpiC,SAAW,WAAc,MAAO,OACvC0gD,OAePE,MAAS,SAAUxD,QAQnB,QAASwD,OAAMD,KAAM3kD,OAAQ6kD,wBAAyBC,UAClD,GAAI9e,OAAQob,OAAOE,KAAK3iD,KAAMgmD,OAAShmD,IAIvC,OAHAqnC,OAAMhmC,OAASA,OACfgmC,MAAM6e,wBAA0BA,wBAChC7e,MAAM8e,SAAWA,SACV9e,MAeX,MA3BA+B,WAAU6c,MAAOxD,QAmBjBwD,MAAMxe,UAAUlnC,MAAQ,SAAUJ,QAASE,SAEvC,MADgB,UAAZA,UAAsBA,QAAU,MAC7BF,QAAQimD,WAAWpmD,KAAMK,UAKpC4lD,MAAMxe,UAAUpiC,SAAW,WAAc,MAAO,SACzC4gD,OACTF,KACE7gC,UAAa,SAAUu9B,QAEvB,QAASv9B,aACL,MAAkB,QAAXu9B,QAAmBA,OAAO1lC,MAAM/c,KAAMkC,YAAclC,KAW/D,MAbAopC,WAAUlkB,UAAWu9B,QASrBv9B,UAAUuiB,UAAUlnC,MAAQ,SAAUJ,QAASE,SAC3B,SAAZA,UAAsBA,QAAU,OAGjC6kB,WACT6gC,KACEM,iBAAoB,SAAU5D,QAE9B,QAAS4D,oBACL,MAAkB,QAAX5D,QAAmBA,OAAO1lC,MAAM/c,KAAMkC,YAAclC,KAW/D,MAbAopC,WAAUid,iBAAkB5D,QAS5B4D,iBAAiB5e,UAAUlnC,MAAQ,SAAUJ,QAASE,SAElD,MADgB,UAAZA,UAAsBA,QAAU,MAC7BF,QAAQmmD,sBAAsBtmD,KAAMK,UAExCgmD,kBACTN,KAIEQ,MAAS,SAAU9D,QAMnB,QAAS8D,OAAMP,KAAMQ,aACjB,GAAInf,OAAQob,OAAOE,KAAK3iD,KAAMgmD,OAAShmD,IAEvC,OADAqnC,OAAMmf,YAAcA,YACbnf,MAWX,MAnBA+B,WAAUmd,MAAO9D,QAejB8D,MAAM9e,UAAUlnC,MAAQ,SAAUJ,QAASE,SAEvC,MADgB,UAAZA,UAAsBA,QAAU,MAC7BF,QAAQsmD,WAAWzmD,KAAMK,UAE7BkmD,OACTR,KACEW,YAAe,SAAUjE,QAQzB,QAASiE,aAAYV,KAAM39B,UAAWs+B,QAASC,UAC3C,GAAIvf,OAAQob,OAAOE,KAAK3iD,KAAMgmD,OAAShmD,IAIvC,OAHAqnC,OAAMhf,UAAYA,UAClBgf,MAAMsf,QAAUA,QAChBtf,MAAMuf,SAAWA,SACVvf,MAWX,MAvBA+B,WAAUsd,YAAajE,QAmBvBiE,YAAYjf,UAAUlnC,MAAQ,SAAUJ,QAASE,SAE7C,MADgB,UAAZA,UAAsBA,QAAU,MAC7BF,QAAQ0mD,iBAAiB7mD,KAAMK,UAEnCqmD,aACTX,KACEe,aAAgB,SAAUrE,QAO1B,QAASqE,cAAad,KAAMe,SAAUriD,MAClC,GAAI2iC,OAAQob,OAAOE,KAAK3iD,KAAMgmD,OAAShmD,IAGvC,OAFAqnC,OAAM0f,SAAWA,SACjB1f,MAAM3iC,KAAOA,KACN2iC,MAWX,MArBA+B,WAAU0d,aAAcrE,QAiBxBqE,aAAarf,UAAUlnC,MAAQ,SAAUJ,QAASE,SAE9C,MADgB,UAAZA,UAAsBA,QAAU,MAC7BF,QAAQ6mD,kBAAkBhnD,KAAMK,UAEpCymD,cACTf,KACEkB,cAAiB,SAAUxE,QAQ3B,QAASwE,eAAcjB,KAAMe,SAAUriD,KAAM7B,OACzC,GAAIwkC,OAAQob,OAAOE,KAAK3iD,KAAMgmD,OAAShmD,IAIvC,OAHAqnC,OAAM0f,SAAWA,SACjB1f,MAAM3iC,KAAOA,KACb2iC,MAAMxkC,MAAQA,MACPwkC,MAWX,MAvBA+B,WAAU6d,cAAexE,QAmBzBwE,cAAcxf,UAAUlnC,MAAQ,SAAUJ,QAASE,SAE/C,MADgB,UAAZA,UAAsBA,QAAU,MAC7BF,QAAQ+mD,mBAAmBlnD,KAAMK,UAErC4mD,eACTlB,KACEoB,iBAAoB,SAAU1E,QAO9B,QAAS0E,kBAAiBnB,KAAMe,SAAUriD,MACtC,GAAI2iC,OAAQob,OAAOE,KAAK3iD,KAAMgmD,OAAShmD,IAGvC,OAFAqnC,OAAM0f,SAAWA,SACjB1f,MAAM3iC,KAAOA,KACN2iC,MAWX,MArBA+B,WAAU+d,iBAAkB1E,QAiB5B0E,iBAAiB1f,UAAUlnC,MAAQ,SAAUJ,QAASE,SAElD,MADgB,UAAZA,UAAsBA,QAAU,MAC7BF,QAAQinD,sBAAsBpnD,KAAMK,UAExC8mD,kBACTpB,KACEsB,UAAa,SAAU5E,QAOvB,QAAS4E,WAAUrB,KAAMpiD,IAAK0wB,KAC1B,GAAI+S,OAAQob,OAAOE,KAAK3iD,KAAMgmD,OAAShmD,IAGvC,OAFAqnC,OAAMzjC,IAAMA,IACZyjC,MAAM/S,IAAMA,IACL+S,MAWX,MArBA+B,WAAUie,UAAW5E,QAiBrB4E,UAAU5f,UAAUlnC,MAAQ,SAAUJ,QAASE,SAE3C,MADgB,UAAZA,UAAsBA,QAAU,MAC7BF,QAAQmnD,eAAetnD,KAAMK,UAEjCgnD,WACTtB,KACEwB,WAAc,SAAU9E,QAQxB,QAAS8E,YAAWvB,KAAMpiD,IAAK0wB,IAAKzxB,OAChC,GAAIwkC,OAAQob,OAAOE,KAAK3iD,KAAMgmD,OAAShmD,IAIvC,OAHAqnC,OAAMzjC,IAAMA,IACZyjC,MAAM/S,IAAMA,IACZ+S,MAAMxkC,MAAQA,MACPwkC,MAWX,MAvBA+B,WAAUme,WAAY9E,QAmBtB8E,WAAW9f,UAAUlnC,MAAQ,SAAUJ,QAASE,SAE5C,MADgB,UAAZA,UAAsBA,QAAU,MAC7BF,QAAQqnD,gBAAgBxnD,KAAMK,UAElCknD,YACTxB,KACE0B,YAAe,SAAUhF,QAQzB,QAASgF,aAAYzB,KAAM0B,IAAKhjD,KAAMyvB,MAClC,GAAIkT,OAAQob,OAAOE,KAAK3iD,KAAMgmD,OAAShmD,IAIvC,OAHAqnC,OAAMqgB,IAAMA,IACZrgB,MAAM3iC,KAAOA,KACb2iC,MAAMlT,KAAOA,KACNkT,MAWX,MAvBA+B,WAAUqe,YAAahF,QAmBvBgF,YAAYhgB,UAAUlnC,MAAQ,SAAUJ,QAASE,SAE7C,MADgB,UAAZA,UAAsBA,QAAU,MAC7BF,QAAQwnD,UAAU3nD,KAAMK,UAE5BonD,aACT1B,KACE6B,iBAAoB,SAAUnF,QAM9B,QAASmF,kBAAiB5B,KAAMnjD,OAC5B,GAAIwkC,OAAQob,OAAOE,KAAK3iD,KAAMgmD,OAAShmD,IAEvC,OADAqnC,OAAMxkC,MAAQA,MACPwkC,MAWX,MAnBA+B,WAAUwe,iBAAkBnF,QAe5BmF,iBAAiBngB,UAAUlnC,MAAQ,SAAUJ,QAASE,SAElD,MADgB,UAAZA,UAAsBA,QAAU,MAC7BF,QAAQ0nD,sBAAsB7nD,KAAMK,UAExCunD,kBACT7B,KACE+B,aAAgB,SAAUrF,QAM1B,QAASqF,cAAa9B,KAAMQ,aACxB,GAAInf,OAAQob,OAAOE,KAAK3iD,KAAMgmD,OAAShmD,IAEvC,OADAqnC,OAAMmf,YAAcA,YACbnf,MAWX,MAnBA+B,WAAU0e,aAAcrF,QAexBqF,aAAargB,UAAUlnC,MAAQ,SAAUJ,QAASE,SAE9C,MADgB,UAAZA,UAAsBA,QAAU,MAC7BF,QAAQ4nD,kBAAkB/nD,KAAMK,UAEpCynD,cACT/B,KACEiC,WAAc,SAAUvF,QAOxB,QAASuF,YAAWhC,KAAM3xB,KAAMtP,QAC5B,GAAIsiB,OAAQob,OAAOE,KAAK3iD,KAAMgmD,OAAShmD,IAGvC,OAFAqnC,OAAMhT,KAAOA,KACbgT,MAAMtiB,OAASA,OACRsiB,MAWX,MArBA+B,WAAU4e,WAAYvF,QAiBtBuF,WAAWvgB,UAAUlnC,MAAQ,SAAUJ,QAASE,SAE5C,MADgB,UAAZA,UAAsBA,QAAU,MAC7BF,QAAQ8nD,gBAAgBjoD,KAAMK,UAElC2nD,YACTjC,KACEmC,cAAiB,SAAUzF,QAO3B,QAASyF,eAAclC,KAAMmC,QAAS3B,aAClC,GAAInf,OAAQob,OAAOE,KAAK3iD,KAAMgmD,OAAShmD,IAGvC,OAFAqnC,OAAM8gB,QAAUA,QAChB9gB,MAAMmf,YAAcA,YACbnf,MAWX,MArBA+B,WAAU8e,cAAezF,QAiBzByF,cAAczgB,UAAUlnC,MAAQ,SAAUJ,QAASE,SAE/C,MADgB,UAAZA,UAAsBA,QAAU,MAC7BF,QAAQioD,mBAAmBpoD,KAAMK,UAErC6nD,eACTnC,KACEsC,OAAU,SAAU5F,QAQpB,QAAS4F,QAAOrC,KAAMsC,UAAWC,KAAMC,OACnC,GAAInhB,OAAQob,OAAOE,KAAK3iD,KAAMgmD,OAAShmD,IAIvC,OAHAqnC,OAAMihB,UAAYA,UAClBjhB,MAAMkhB,KAAOA,KACblhB,MAAMmhB,MAAQA,MACPnhB,MAWX,MAvBA+B,WAAUif,OAAQ5F,QAmBlB4F,OAAO5gB,UAAUlnC,MAAQ,SAAUJ,QAASE,SAExC,MADgB,UAAZA,UAAsBA,QAAU,MAC7BF,QAAQsoD,YAAYzoD,KAAMK,UAE9BgoD,QACTtC,KACE2C,UAAa,SAAUjG,QAMvB,QAASiG,WAAU1C,KAAMlpC,YACrB,GAAIuqB,OAAQob,OAAOE,KAAK3iD,KAAMgmD,OAAShmD,IAEvC,OADAqnC,OAAMvqB,WAAaA,WACZuqB,MAWX,MAnBA+B,WAAUsf,UAAWjG,QAerBiG,UAAUjhB,UAAUlnC,MAAQ,SAAUJ,QAASE,SAE3C,MADgB,UAAZA,UAAsBA,QAAU,MAC7BF,QAAQwoD,eAAe3oD,KAAMK,UAEjCqoD,WACT3C,KACE6C,WAAc,SAAUnG,QAQxB,QAASmG,YAAW5C,KAAMe,SAAUriD,KAAMyvB,MACtC,GAAIkT,OAAQob,OAAOE,KAAK3iD,KAAMgmD,OAAShmD,IAIvC,OAHAqnC,OAAM0f,SAAWA,SACjB1f,MAAM3iC,KAAOA,KACb2iC,MAAMlT,KAAOA,KACNkT,MAWX,MAvBA+B,WAAUwf,WAAYnG,QAmBtBmG,WAAWnhB,UAAUlnC,MAAQ,SAAUJ,QAASE,SAE5C,MADgB,UAAZA,UAAsBA,QAAU,MAC7BF,QAAQ0oD,gBAAgB7oD,KAAMK,UAElCuoD,YACT7C,KACE+C,eAAkB,SAAUrG,QAQ5B,QAASqG,gBAAe9C,KAAMe,SAAUriD,KAAMyvB,MAC1C,GAAIkT,OAAQob,OAAOE,KAAK3iD,KAAMgmD,OAAShmD,IAIvC,OAHAqnC,OAAM0f,SAAWA,SACjB1f,MAAM3iC,KAAOA,KACb2iC,MAAMlT,KAAOA,KACNkT,MAWX,MAvBA+B,WAAU0f,eAAgBrG,QAmB1BqG,eAAerhB,UAAUlnC,MAAQ,SAAUJ,QAASE,SAEhD,MADgB,UAAZA,UAAsBA,QAAU,MAC7BF,QAAQ4oD,oBAAoB/oD,KAAMK,UAEtCyoD,gBACT/C,KACEiD,aAAgB,SAAUvG,QAO1B,QAASuG,cAAahD,KAAMtpB,OAAQvI,MAChC,GAAIkT,OAAQob,OAAOE,KAAK3iD,KAAMgmD,OAAShmD,IAGvC,OAFAqnC,OAAM3K,OAASA,OACf2K,MAAMlT,KAAOA,KACNkT,MAWX,MArBA+B,WAAU4f,aAAcvG,QAiBxBuG,aAAavhB,UAAUlnC,MAAQ,SAAUJ,QAASE,SAE9C,MADgB,UAAZA,UAAsBA,QAAU,MAC7BF,QAAQ8oD,kBAAkBjpD,KAAMK,UAEpC2oD,cACTjD,KACE9gC,cAAiB,SAAUw9B,QAQ3B,QAASx9B,eAAczkB,IAAK4P,OAAQ+1C,SAAU9pC,QAC1C,GAAIgrB,OAAQob,OAAOE,KAAK3iD,KAAM,GAAI8lD,WAAU,EAAa,MAAV11C,OAAiB,EAAIA,OAAOjO,UAAYnC,IAKvF,OAJAqnC,OAAM7mC,IAAMA,IACZ6mC,MAAMj3B,OAASA,OACfi3B,MAAM8e,SAAWA,SACjB9e,MAAMhrB,OAASA,OACRgrB,MAeX,MA5BA+B,WAAUnkB,cAAew9B,QAoBzBx9B,cAAcwiB,UAAUlnC,MAAQ,SAAUJ,QAASE,SAE/C,MADgB,UAAZA,UAAsBA,QAAU,MAC7BL,KAAKQ,IAAID,MAAMJ,QAASE,UAKnC4kB,cAAcwiB,UAAUpiC,SAAW,WAAc,MAAOrF,MAAKoQ,OAAS,OAASpQ,KAAKmmD,UAC7ElhC,eACT8gC,KACEmD,gBAAmB,WAQnB,QAASA,iBAAgBlD,KAAM1xB,IAAK60B,SAAUzkD,KAAMoY,YAChD9c,KAAKgmD,KAAOA,KACZhmD,KAAKs0B,IAAMA,IACXt0B,KAAKmpD,SAAWA,SAChBnpD,KAAK0E,KAAOA,KACZ1E,KAAK8c,WAAaA,WAEtB,MAAOosC,oBAEPE,oBAAuB,WACvB,QAASA,wBA+KT,MAxKAA,qBAAoB3hB,UAAUghB,YAAc,SAAUjoD,IAAKH,SAGvD,MAFAG,KAAI+nD,KAAKhoD,MAAMP,MACfQ,IAAIgoD,MAAMjoD,MAAMP,MACT,MAOXopD,oBAAoB3hB,UAAUgf,WAAa,SAAUjmD,IAAKH,SAAW,MAAOL,MAAKiQ,SAASzP,IAAIgmD,YAAanmD,UAM3G+oD,oBAAoB3hB,UAAUof,iBAAmB,SAAUrmD,IAAKH,SAI5D,MAHAG,KAAI6nB,UAAU9nB,MAAMP,MACpBQ,IAAImmD,QAAQpmD,MAAMP,MAClBQ,IAAIomD,SAASrmD,MAAMP,MACZ,MAOXopD,oBAAoB3hB,UAAUkgB,UAAY,SAAUnnD,IAAKH,SAGrD,MAFAG,KAAIknD,IAAInnD,MAAMP,MACdA,KAAKiQ,SAASzP,IAAI2zB,KAAM9zB,SACjB,MAOX+oD,oBAAoB3hB,UAAUwhB,kBAAoB,SAAUzoD,IAAKH,SAG7D,MAFAG,KAAIk8B,OAAOn8B,MAAMP,MACjBA,KAAKiQ,SAASzP,IAAI2zB,KAAM9zB,SACjB,MAOX+oD,oBAAoB3hB,UAAU6e,sBAAwB,SAAU9lD,IAAKH,SAAW,MAAO,OAMvF+oD,oBAAoB3hB,UAAU2gB,mBAAqB,SAAU5nD,IAAKH,SAC9D,MAAOL,MAAKiQ,SAASzP,IAAIgmD,YAAanmD,UAO1C+oD,oBAAoB3hB,UAAU6f,eAAiB,SAAU9mD,IAAKH,SAG1D,MAFAG,KAAIoD,IAAIrD,MAAMP,MACdQ,IAAI8zB,IAAI/zB,MAAMP,MACP,MAOXopD,oBAAoB3hB,UAAU+f,gBAAkB,SAAUhnD,IAAKH,SAI3D,MAHAG,KAAIoD,IAAIrD,MAAMP,MACdQ,IAAI8zB,IAAI/zB,MAAMP,MACdQ,IAAIqC,MAAMtC,MAAMP,MACT,MAOXopD,oBAAoB3hB,UAAUsgB,kBAAoB,SAAUvnD,IAAKH,SAC7D,MAAOL,MAAKiQ,SAASzP,IAAIgmD,YAAanmD,UAO1C+oD,oBAAoB3hB,UAAUwgB,gBAAkB,SAAUznD,IAAKH,SAAW,MAAOL,MAAKiQ,SAASzP,IAAIukB,OAAQ1kB,UAM3G+oD,oBAAoB3hB,UAAUogB,sBAAwB,SAAUrnD,IAAKH,SAAW,MAAO,OAMvF+oD,oBAAoB3hB,UAAUohB,gBAAkB,SAAUroD,IAAKH,SAE3D,MADAG,KAAIumD,SAASxmD,MAAMP,MACZA,KAAKiQ,SAASzP,IAAI2zB,KAAM9zB,UAOnC+oD,oBAAoB3hB,UAAUkhB,eAAiB,SAAUnoD,IAAKH,SAE1D,MADAG,KAAIsc,WAAWvc,MAAMP,MACd,MAOXopD,oBAAoB3hB,UAAUuf,kBAAoB,SAAUxmD,IAAKH,SAE7D,MADAG,KAAIumD,SAASxmD,MAAMP,MACZ,MAOXopD,oBAAoB3hB,UAAUyf,mBAAqB,SAAU1mD,IAAKH,SAG9D,MAFAG,KAAIumD,SAASxmD,MAAMP,MACnBQ,IAAIqC,MAAMtC,MAAMP,MACT,MAOXopD,oBAAoB3hB,UAAU2f,sBAAwB,SAAU5mD,IAAKH,SAEjE,MADAG,KAAIumD,SAASxmD,MAAMP,MACZ,MAOXopD,oBAAoB3hB,UAAUshB,oBAAsB,SAAUvoD,IAAKH,SAE/D,MADAG,KAAIumD,SAASxmD,MAAMP,MACZA,KAAKiQ,SAASzP,IAAI2zB,KAAM9zB,UAOnC+oD,oBAAoB3hB,UAAUx3B,SAAW,SAAU7P,KAAMC,SACrD,GAAIgnC,OAAQrnC,IAEZ,OADAI,MAAKK,QAAQ,SAAUD,KAAO,MAAOA,KAAID,MAAM8mC,MAAOhnC,WAC/C,MAOX+oD,oBAAoB3hB,UAAU2e,WAAa,SAAU5lD,IAAKH,SAAW,MAAO,OACrE+oD,uBAEPC,eAAkB,WAClB,QAASA,mBAmKT,MA5JAA,gBAAe5hB,UAAU6e,sBAAwB,SAAU9lD,IAAKH,SAAW,MAAOG,MAMlF6oD,eAAe5hB,UAAU2gB,mBAAqB,SAAU5nD,IAAKH,SACzD,MAAO,IAAI6nD,eAAc1nD,IAAIwlD,KAAMxlD,IAAI2nD,QAASnoD,KAAKiQ,SAASzP,IAAIgmD,eAOtE6C,eAAe5hB,UAAUogB,sBAAwB,SAAUrnD,IAAKH,SAC5D,MAAO,IAAIunD,kBAAiBpnD,IAAIwlD,KAAMxlD,IAAIqC,QAO9CwmD,eAAe5hB,UAAUuf,kBAAoB,SAAUxmD,IAAKH,SACxD,MAAO,IAAIymD,cAAatmD,IAAIwlD,KAAMxlD,IAAIumD,SAASxmD,MAAMP,MAAOQ,IAAIkE,OAOpE2kD,eAAe5hB,UAAUyf,mBAAqB,SAAU1mD,IAAKH,SACzD,MAAO,IAAI4mD,eAAczmD,IAAIwlD,KAAMxlD,IAAIumD,SAASxmD,MAAMP,MAAOQ,IAAIkE,KAAMlE,IAAIqC,MAAMtC,MAAMP,QAO3FqpD,eAAe5hB,UAAU2f,sBAAwB,SAAU5mD,IAAKH,SAC5D,MAAO,IAAI8mD,kBAAiB3mD,IAAIwlD,KAAMxlD,IAAIumD,SAASxmD,MAAMP,MAAOQ,IAAIkE,OAOxE2kD,eAAe5hB,UAAUohB,gBAAkB,SAAUroD,IAAKH,SACtD,MAAO,IAAIuoD,YAAWpoD,IAAIwlD,KAAMxlD,IAAIumD,SAASxmD,MAAMP,MAAOQ,IAAIkE,KAAM1E,KAAKiQ,SAASzP,IAAI2zB,QAO1Fk1B,eAAe5hB,UAAUshB,oBAAsB,SAAUvoD,IAAKH,SAC1D,MAAO,IAAIyoD,gBAAetoD,IAAIwlD,KAAMxlD,IAAIumD,SAASxmD,MAAMP,MAAOQ,IAAIkE,KAAM1E,KAAKiQ,SAASzP,IAAI2zB,QAO9Fk1B,eAAe5hB,UAAUwhB,kBAAoB,SAAUzoD,IAAKH,SACxD,MAAO,IAAI2oD,cAAaxoD,IAAIwlD,KAAMxlD,IAAIk8B,OAAOn8B,MAAMP,MAAOA,KAAKiQ,SAASzP,IAAI2zB,QAOhFk1B,eAAe5hB,UAAUsgB,kBAAoB,SAAUvnD,IAAKH,SACxD,MAAO,IAAIynD,cAAatnD,IAAIwlD,KAAMhmD,KAAKiQ,SAASzP,IAAIgmD,eAOxD6C,eAAe5hB,UAAUwgB,gBAAkB,SAAUznD,IAAKH,SACtD,MAAO,IAAI2nD,YAAWxnD,IAAIwlD,KAAMxlD,IAAI6zB,KAAMr0B,KAAKiQ,SAASzP,IAAIukB,UAOhEskC,eAAe5hB,UAAUghB,YAAc,SAAUjoD,IAAKH,SAClD,MAAO,IAAIgoD,QAAO7nD,IAAIwlD,KAAMxlD,IAAI8nD,UAAW9nD,IAAI+nD,KAAKhoD,MAAMP,MAAOQ,IAAIgoD,MAAMjoD,MAAMP,QAOrFqpD,eAAe5hB,UAAUkhB,eAAiB,SAAUnoD,IAAKH,SACrD,MAAO,IAAIqoD,WAAUloD,IAAIwlD,KAAMxlD,IAAIsc,WAAWvc,MAAMP,QAOxDqpD,eAAe5hB,UAAUof,iBAAmB,SAAUrmD,IAAKH,SACvD,MAAO,IAAIqmD,aAAYlmD,IAAIwlD,KAAMxlD,IAAI6nB,UAAU9nB,MAAMP,MAAOQ,IAAImmD,QAAQpmD,MAAMP,MAAOQ,IAAIomD,SAASrmD,MAAMP,QAO5GqpD,eAAe5hB,UAAUkgB,UAAY,SAAUnnD,IAAKH,SAChD,MAAO,IAAIonD,aAAYjnD,IAAIwlD,KAAMxlD,IAAIknD,IAAInnD,MAAMP,MAAOQ,IAAIkE,KAAM1E,KAAKiQ,SAASzP,IAAI2zB,QAOtFk1B,eAAe5hB,UAAU6f,eAAiB,SAAU9mD,IAAKH,SACrD,MAAO,IAAIgnD,WAAU7mD,IAAIwlD,KAAMxlD,IAAIoD,IAAIrD,MAAMP,MAAOQ,IAAI8zB,IAAI/zB,MAAMP,QAOtEqpD,eAAe5hB,UAAU+f,gBAAkB,SAAUhnD,IAAKH,SACtD,MAAO,IAAIknD,YAAW/mD,IAAIwlD,KAAMxlD,IAAIoD,IAAIrD,MAAMP,MAAOQ,IAAI8zB,IAAI/zB,MAAMP,MAAOQ,IAAIqC,MAAMtC,MAAMP,QAM9FqpD,eAAe5hB,UAAUx3B,SAAW,SAAU7P,MAE1C,IAAK,GADgB4vB,KAAM,GAAIltB,OAAM1C,KAAK+B,QAChByJ,EAAI,EAAGA,EAAIxL,KAAK+B,SAAUyJ,EAChDokB,IAAIpkB,GAAKxL,KAAKwL,GAAGrL,MAAMP,KAE3B,OAAOgwB,MAOXq5B,eAAe5hB,UAAUgf,WAAa,SAAUjmD,IAAKH,SACjD,MAAO,IAAIkmD,OAAM/lD,IAAIwlD,KAAMhmD,KAAKiQ,SAASzP,IAAIgmD,eAOjD6C,eAAe5hB,UAAU2e,WAAa,SAAU5lD,IAAKH,SACjD,MAAO,IAAI4lD,OAAMzlD,IAAIwlD,KAAMxlD,IAAIa,OAAQb,IAAI0lD,wBAAyB1lD,IAAI2lD,WAErEkD,kBASPz7C,KAAO,EACUlD,KAAO,EACPgE,IAAM,GACNM,MAAQ,GACRL,IAAM,GACNE,IAAM,GACNlE,OAAS,GACT2+C,MAAQ,GACRh7C,IAAM,GACNi7C,MAAQ,GACRj8C,GAAK,GACLk8C,SAAW,GACXC,WAAa,GACbp7C,IAAM,GACNq7C,QAAU,GACVC,QAAU,GACVC,MAAQ,GACRz7C,MAAQ,GACR07C,OAAS,GACT37C,OAAS,GACT47C,QAAU,GACV34C,OAAS,GACT44C,OAAS,GACTx4C,WAAa,GACby4C,IAAM,GACN54C,IAAM,GACNF,IAAM,GACN+4C,UAAY,GACZn/C,GAAK,GACLC,GAAK,GACLI,GAAK,GACL6C,GAAK,GACLzC,GAAK,GACL2+C,GAAK,GACL9+C,GAAK,GACL++C,UAAY,GACZC,WAAa,GACbC,UAAY,GACZC,OAAS,GACTj9C,GAAK,GACLpC,GAAK,GACL8C,GAAK,IACLzC,GAAK,IACLmD,GAAK,IACLG,GAAK,IACLE,GAAK,IACLy7C,GAAK,IACLx7C,GAAK,IACLy7C,GAAK,IACLt/C,GAAK,IACL0G,QAAU,IACV64C,KAAO,IACPC,QAAU,IACV9/C,MAAQ,IACR2D,IAAM,GAyDNvC,iCACjB,QACA,OACA,SACA,cACA,SAsBA2+C,oBAAuB,WAKvB,QAASA,qBAAoBp7C,MAAOC,KAChCxP,KAAKuP,MAAQA,MACbvP,KAAKwP,IAAMA,IAcf,MARAm7C,qBAAoBC,UAAY,SAAUC,SACtC,MAAKA,UAGLh/C,2BAA2B,gBAAiBg/C,SACrC,GAAIF,qBAAoBE,QAAQ,GAAIA,QAAQ,KAHxCp6C,8BAMRk6C,uBAEUl6C,6BAA+B,GAAIk6C,qBAAoB,KAAM,MAC9Et+C,YACJA,WAAUC,UAAY,EACtBD,UAAUI,WAAa,EACvBJ,UAAUM,QAAU,EACpBN,UAAU9H,OAAS,EACnB8H,UAAUQ,SAAW,EACrBR,UAAUY,OAAS,EACnBZ,UAAUrL,MAAQ,EAClBqL,UAAUA,UAAUC,WAAa,YACjCD,UAAUA,UAAUI,YAAc,aAClCJ,UAAUA,UAAUM,SAAW,UAC/BN,UAAUA,UAAU9H,QAAU,SAC9B8H,UAAUA,UAAUQ,UAAY,WAChCR,UAAUA,UAAUY,QAAU,SAC9BZ,UAAUA,UAAUrL,OAAS,OAC7B,IAAqB8pD,WAAY,MAAO,MAAO,KAAM,OAAQ,YAAa,OAAQ,QAAS,KAAM,OAAQ,QACrGlmB,MAAS,WACT,QAASA,UAgBT,MAVAA,OAAM6C,UAAUt3B,SAAW,SAAU3D,MAIjC,IAHA,GAAqBgB,SAAU,GAAIC,UAASjB,MACvBu+C,UACAtkD,MAAQ+G,QAAQw9C,YACrB,MAATvkD,OACHskD,OAAOpqD,KAAK8F,OACZA,MAAQ+G,QAAQw9C,WAEpB,OAAOD,SAEJnmB,QAEXA,OAAMqmB,aACA1jD,KAAMiE,qBAKZo5B,MAAMsmB,eAAiB,WAAc,SACrC,IAAI9+C,OAAS,WAOT,QAASA,OAAMjI,MAAOoD,KAAM4jD,SAAUC,UAClCprD,KAAKmE,MAAQA,MACbnE,KAAKuH,KAAOA,KACZvH,KAAKmrD,SAAWA,SAChBnrD,KAAKorD,SAAWA,SAwFpB,MAlFAh/C,OAAMq7B,UAAU4jB,YAAc,SAAU5gD,MACpC,MAAOzK,MAAKuH,MAAQ8E,UAAUC,WAAatM,KAAKmrD,UAAY1gD,MAKhE2B,MAAMq7B,UAAU6jB,SAAW,WAAc,MAAOtrD,MAAKuH,MAAQ8E,UAAUY,QAIvEb,MAAMq7B,UAAU8jB,SAAW,WAAc,MAAOvrD,MAAKuH,MAAQ8E,UAAU9H,QAKvE6H,MAAMq7B,UAAU+jB,WAAa,SAAUC,UACnC,MAAOzrD,MAAKuH,MAAQ8E,UAAUQ,UAAY7M,KAAKorD,UAAYK,UAK/Dr/C,MAAMq7B,UAAUl6B,aAAe,WAAc,MAAOvN,MAAKuH,MAAQ8E,UAAUI,YAI3EL,MAAMq7B,UAAUikB,UAAY,WAAc,MAAO1rD,MAAKuH,MAAQ8E,UAAUM,SAIxEP,MAAMq7B,UAAUkkB,aAAe,WAAc,MAAO3rD,MAAKuH,MAAQ8E,UAAUM,SAA4B,OAAjB3M,KAAKorD,UAI3Fh/C,MAAMq7B,UAAUmkB,YAAc,WAAc,MAAO5rD,MAAKuH,MAAQ8E,UAAUM,SAA4B,MAAjB3M,KAAKorD,UAI1Fh/C,MAAMq7B,UAAUokB,cAAgB,WAAc,MAAO7rD,MAAKuH,MAAQ8E,UAAUM,SAA4B,QAAjB3M,KAAKorD,UAI5Fh/C,MAAMq7B,UAAUqkB,mBAAqB,WACjC,MAAO9rD,MAAKuH,MAAQ8E,UAAUM,SAA4B,aAAjB3M,KAAKorD,UAKlDh/C,MAAMq7B,UAAUskB,cAAgB,WAAc,MAAO/rD,MAAKuH,MAAQ8E,UAAUM,SAA4B,QAAjB3M,KAAKorD,UAI5Fh/C,MAAMq7B,UAAUukB,eAAiB,WAAc,MAAOhsD,MAAKuH,MAAQ8E,UAAUM,SAA4B,SAAjB3M,KAAKorD,UAI7Fh/C,MAAMq7B,UAAUwkB,cAAgB,WAAc,MAAOjsD,MAAKuH,MAAQ8E,UAAUM,SAA4B,QAAjB3M,KAAKorD,UAI5Fh/C,MAAMq7B,UAAUykB,QAAU,WAAc,MAAOlsD,MAAKuH,MAAQ8E,UAAUrL,OAItEoL,MAAMq7B,UAAU0kB,SAAW,WAAc,MAAOnsD,MAAKuH,MAAQ8E,UAAUY,OAASjN,KAAKmrD,UAAW,GAIhG/+C,MAAMq7B,UAAUpiC,SAAW,WACvB,OAAQrF,KAAKuH,MACT,IAAK8E,WAAUC,UACf,IAAKD,WAAUI,WACf,IAAKJ,WAAUM,QACf,IAAKN,WAAUQ,SACf,IAAKR,WAAU9H,OACf,IAAK8H,WAAUrL,MACX,MAAOhB,MAAKorD,QAChB,KAAK/+C,WAAUY,OACX,MAAOjN,MAAKmrD,SAAS9lD,UACzB,SACI,MAAO,QAGZ+G,SA0DUggD,IAAM,GAAIhgD,SAAM,GAAIC,UAAUC,UAAW,EAAG,IAC7DmB,SAAY,WAIZ,QAASA,UAAS5L,OACd7B,KAAK6B,MAAQA,MACb7B,KAAK0N,KAAO,EACZ1N,KAAKmE,OAAQ,EACbnE,KAAKmC,OAASN,MAAMM,OACpBnC,KAAK2N,UA8NT,MAzNAF,UAASg6B,UAAU95B,QAAU,WACzB3N,KAAK0N,OAAS1N,KAAKmE,OAASnE,KAAKmC,OAASyL,KAAO5N,KAAK6B,MAAMwC,WAAWrE,KAAKmE,QAKhFsJ,SAASg6B,UAAUujB,UAAY,WAI3B,IAHA,GAAqBnpD,OAAQ7B,KAAK6B,MAAwBM,OAASnC,KAAKmC,OACnDuL,KAAO1N,KAAK0N,KAAuBvJ,MAAQnE,KAAKmE,MAE9DuJ,MAAQ/C,QAAQ,CACnB,KAAMxG,OAAShC,OAAQ,CACnBuL,KAAOE,IACP,OAGAF,KAAO7L,MAAMwC,WAAWF,OAKhC,GAFAnE,KAAK0N,KAAOA,KACZ1N,KAAKmE,MAAQA,MACTA,OAAShC,OACT,MAAO,KAGX,IAAIiL,kBAAkBM,MAClB,MAAO1N,MAAKqsD,gBAChB,IAAIxhD,QAAQ6C,MACR,MAAO1N,MAAKssD,WAAWnoD,MAC3B,IAAqBoL,OAAQpL,KAC7B,QAAQuJ,MACJ,IAAKo8C,SAED,MADA9pD,MAAK2N,UACE9C,QAAQ7K,KAAK0N,MAAQ1N,KAAKssD,WAAW/8C,OACxCpD,kBAAkBoD,MAAOu6C,QACjC,KAAKJ,SACL,IAAKC,SACL,IAAK/3C,SACL,IAAK84C,SACL,IAAKP,WACL,IAAKE,WACL,IAAKR,QACL,IAAKE,QACL,IAAKx4C,YACD,MAAOvR,MAAKusD,cAAch9C,MAAO7B,KACrC,KAAKW,KACL,IAAKC,KACD,MAAOtO,MAAKwsD,YAChB,KAAKjD,OACL,IAAKp7C,OACL,IAAKD,QACL,IAAK07C,OACL,IAAKz4C,QACL,IAAKq4C,UACL,IAAKc,QACD,MAAOtqD,MAAKysD,aAAal9C,MAAOhL,OAAOC,aAAakJ,MACxD,KAAKu8C,WACD,MAAOjqD,MAAK0sD,oBAAoBn9C,MAAO,IAAKu6C,QAAS,IACzD,KAAKE,KACL,IAAK94C,KACD,MAAOlR,MAAK0sD,oBAAoBn9C,MAAOhL,OAAOC,aAAakJ,MAAO0D,IAAK,IAC3E,KAAKk4C,OACL,IAAKl4C,KACD,MAAOpR,MAAK0sD,oBAAoBn9C,MAAOhL,OAAOC,aAAakJ,MAAO0D,IAAK,IAAKA,IAAK,IACrF,KAAKq4C,YACD,MAAOzpD,MAAK0sD,oBAAoBn9C,MAAO,IAAKk6C,WAAY,IAC5D,KAAKgB,MACD,MAAOzqD,MAAK0sD,oBAAoBn9C,MAAO,IAAKk7C,KAAM,IACtD,KAAK7/C,OACD,KAAOJ,aAAaxK,KAAK0N,OACrB1N,KAAK2N,SACT,OAAO3N,MAAKgrD,YAGpB,MADAhrD,MAAK2N,UACE3N,KAAKuD,MAAM,yBAA2BgB,OAAOC,aAAakJ,MAAQ,IAAK,IAOlFD,SAASg6B,UAAU8kB,cAAgB,SAAUh9C,MAAO9E,MAEhD,MADAzK,MAAK2N,UACExB,kBAAkBoD,MAAO9E,OAOpCgD,SAASg6B,UAAUglB,aAAe,SAAUl9C,MAAOtL,KAE/C,MADAjE,MAAK2N,UACEf,iBAAiB2C,MAAOtL,MAanCwJ,SAASg6B,UAAUilB,oBAAsB,SAAUn9C,MAAOo9C,IAAKC,QAASC,IAAKC,UAAWC,OACpF/sD,KAAK2N,SACL,IAAqB1J,KAAM0oD,GAS3B,OARI3sD,MAAK0N,MAAQk/C,UACb5sD,KAAK2N,UACL1J,KAAO4oD,KAEM,MAAbC,WAAqB9sD,KAAK0N,MAAQo/C,YAClC9sD,KAAK2N,UACL1J,KAAO8oD,OAEJngD,iBAAiB2C,MAAOtL,MAKnCwJ,SAASg6B,UAAU4kB,eAAiB,WAChC,GAAqB98C,OAAQvP,KAAKmE,KAElC,KADAnE,KAAK2N,UACEE,iBAAiB7N,KAAK0N,OACzB1N,KAAK2N,SACT,IAAqB1J,KAAMjE,KAAK6B,MAAMomB,UAAU1Y,MAAOvP,KAAKmE,MAC5D,OAAO2mD,UAAS/pD,QAAQkD,MAAO,EAAKyI,gBAAgB6C,MAAOtL,KACvDsI,mBAAmBgD,MAAOtL,MAMlCwJ,SAASg6B,UAAU6kB,WAAa,SAAU/8C,OACtC,GAAqBy9C,QAAUhtD,KAAKmE,QAAUoL,KAE9C,KADAvP,KAAK2N,YACQ,CACT,GAAI9C,QAAQ7K,KAAK0N,WAEZ,IAAI1N,KAAK0N,MAAQo8C,QAClBkD,QAAS,MAER,CAAA,IAAIl/C,gBAAgB9N,KAAK0N,MAS1B,KALA,IAHA1N,KAAK2N,UACDM,eAAejO,KAAK0N,OACpB1N,KAAK2N,WACJ9C,QAAQ7K,KAAK0N,MACd,MAAO1N,MAAKuD,MAAM,oBAAoB,EAC1CypD,SAAS,EAKbhtD,KAAK2N,UAET,GAAqB1J,KAAMjE,KAAK6B,MAAMomB,UAAU1Y,MAAOvP,KAAKmE,OACvCtB,MAAQmqD,OAAS/9C,kBAAkBhL,KAAOgpD,WAAWhpD,IAC1E,OAAO8I,gBAAewC,MAAO1M,QAKjC4K,SAASg6B,UAAU+kB,WAAa,WAC5B,GAAqBj9C,OAAQvP,KAAKmE,MACb+oD,MAAQltD,KAAK0N,IAClC1N,MAAK2N,SAIL,KAHA,GAAqBw/C,QAAS,GACTC,OAASptD,KAAKmE,MACdtC,MAAQ7B,KAAK6B,MAC3B7B,KAAK0N,MAAQw/C,OAChB,GAAIltD,KAAK0N,MAAQ08C,WAAY,CACzB+C,QAAUtrD,MAAMomB,UAAUmlC,OAAQptD,KAAKmE,OACvCnE,KAAK2N,SACL,IAAqB0/C,eAAgB,MAGrC,IADArtD,KAAK0N,KAAO1N,KAAK0N,KACb1N,KAAK0N,MAAQ68C,GAAI,CAEjB,GAAqBpxC,KAAMtX,MAAMomB,UAAUjoB,KAAKmE,MAAQ,EAAGnE,KAAKmE,MAAQ,EACxE,KAAI,eAAe+H,KAAKiN,KAIpB,MAAOnZ,MAAKuD,MAAM,8BAAgC4V,IAAM,IAAK,EAH7Dk0C,eAAgBn+C,SAASiK,IAAK,GAKlC,KAAK,GAAqBvN,GAAI,EAAGA,EAAI,EAAGA,IACpC5L,KAAK2N,cAIT0/C,eAAgB7+C,SAASxO,KAAK0N,MAC9B1N,KAAK2N,SAETw/C,SAAU5oD,OAAOC,aAAa6oD,eAC9BD,OAASptD,KAAKmE,UAEb,CAAA,GAAInE,KAAK0N,MAAQE,KAClB,MAAO5N,MAAKuD,MAAM,qBAAsB,EAGxCvD,MAAK2N,UAGb,GAAqB2/C,MAAOzrD,MAAMomB,UAAUmlC,OAAQptD,KAAKmE,MAEzD,OADAnE,MAAK2N,UACEb,eAAeyC,MAAO49C,OAASG,OAO1C7/C,SAASg6B,UAAUlkC,MAAQ,SAAU4J,QAASuE,QAC1C,GAAqB67C,UAAWvtD,KAAKmE,MAAQuN,MAC7C,OAAOxE,eAAcqgD,SAAU,gBAAkBpgD,QAAU,cAAgBogD,SAAW,mBAAqBvtD,KAAK6B,MAAQ,MAErH4L,YAwFP+/C,mBAAsB,WAMtB,QAASA,oBAAmBrF,QAAS3B,YAAaiH,SAC9CztD,KAAKmoD,QAAUA,QACfnoD,KAAKwmD,YAAcA,YACnBxmD,KAAKytD,QAAUA,QAEnB,MAAOD,uBAEPE,2BAA8B,WAM9B,QAASA,4BAA2BC,iBAAkBC,SAAUvxC,QAC5Drc,KAAK2tD,iBAAmBA,iBACxB3tD,KAAK4tD,SAAWA,SAChB5tD,KAAKqc,OAASA,OAElB,MAAOqxC,+BAUP/oB,OAAU,WAIV,QAASA,QAAOkpB,QACZ7tD,KAAK6tD,OAASA,OACd7tD,KAAKqc,UAwOT,MAhOAsoB,QAAO8C,UAAUqmB,YAAc,SAAUjsD,MAAOskD,SAAU31C,qBAC1B,SAAxBA,sBAAkCA,oBAAsBC,8BAC5DzQ,KAAK+tD,sBAAsBlsD,MAAOskD,SAAU31C,oBAC5C,IAAqBw9C,aAAchuD,KAAKiuD,eAAepsD,OAClCkpD,OAAS/qD,KAAK6tD,OAAO19C,SAASnQ,KAAKiuD,eAAepsD,QAClDrB,IAAM,GAAI0tD,WAAUrsD,MAAOskD,SAAU4E,OAAQiD,YAAY7rD,SAAQ,GAAMnC,KAAKqc,OAAQxa,MAAMM,OAAS6rD,YAAY7rD,QAC/HgsD,YACL,OAAO,IAAIlpC,eAAczkB,IAAKqB,MAAOskD,SAAUnmD,KAAKqc,SAQxDsoB,OAAO8C,UAAU2mB,aAAe,SAAUvsD,MAAOskD,SAAU31C,qBAC3B,SAAxBA,sBAAkCA,oBAAsBC,6BAC5D,IAAqBjQ,KAAMR,KAAKquD,iBAAiBxsD,MAAOskD,SAAU31C,oBAClE,OAAO,IAAIyU,eAAczkB,IAAKqB,MAAOskD,SAAUnmD,KAAKqc,SAQxDsoB,OAAO8C,UAAU6mB,mBAAqB,SAAUzsD,MAAOskD,SAAU31C,qBACjC,SAAxBA,sBAAkCA,oBAAsBC,6BAC5D,IAAqBjQ,KAAMR,KAAKquD,iBAAiBxsD,MAAOskD,SAAU31C,qBAC7C6L,OAASkyC,wBAAwBC,MAAMhuD,IAI5D,OAHI6b,QAAOla,OAAS,GAChBnC,KAAKyuD,aAAa,0CAA4CpyC,OAAOhH,KAAK,KAAMxT,MAAOskD,UAEpF,GAAIlhC,eAAczkB,IAAKqB,MAAOskD,SAAUnmD,KAAKqc,SASxDsoB,OAAO8C,UAAUgnB,aAAe,SAAUthD,QAAStL,MAAO+jD,YAAaC,aACnE7lD,KAAKqc,OAAO1b,KAAK,GAAIglD,aAAYx4C,QAAStL,MAAO+jD,YAAaC,eAQlElhB,OAAO8C,UAAU4mB,iBAAmB,SAAUxsD,MAAOskD,SAAU31C,qBAG3D,GAAqB08C,OAAQltD,KAAK0uD,YAAY7sD,MAAOskD,SACrD,IAAa,MAAT+G,MACA,MAAOA,MAEXltD,MAAK+tD,sBAAsBlsD,MAAOskD,SAAU31C,oBAC5C,IAAqBw9C,aAAchuD,KAAKiuD,eAAepsD,OAClCkpD,OAAS/qD,KAAK6tD,OAAO19C,SAAS69C,YACnD,OAAO,IAAIE,WAAUrsD,MAAOskD,SAAU4E,OAAQiD,YAAY7rD,SAAQ,GAAOnC,KAAKqc,OAAQxa,MAAMM,OAAS6rD,YAAY7rD,QAC5GgsD,cAOTxpB,OAAO8C,UAAUinB,YAAc,SAAU7sD,MAAOskD,UAC5C,GAAa,MAATtkD,MACA,MAAO,KACX,IAAqB8sD,sBAAuB9sD,MAAMd,QAAQ,IAC1D,IAAI4tD,uBAAwB,EACxB,MAAO,KACX,IAAqBttD,QAASQ,MAAMomB,UAAU,EAAG0mC,sBAAsBhsD,MACvE,KAAK4K,aAAalM,QACd,MAAO,KACX,IAAqB6kD,yBAA0BrkD,MAAMomB,UAAU0mC,qBAAuB,EACtF,OAAO,IAAI1I,OAAM,GAAIH,WAAU,EAAGjkD,MAAMM,QAASd,OAAQ6kD,wBAAyBC,WAQtFxhB,OAAO8C,UAAUmnB,sBAAwB,SAAUC,YAAahtD,MAAOskD,UACnE,GAAqB4E,QAAS/qD,KAAK6tD,OAAO19C,SAAStO,MACnD,IAAIgtD,YAAa,CAEb,GAAqBC,cAAe9uD,KAAK6tD,OAAO19C,SAAS0+C,aAAar5C,IAAI,SAAUu5C,GAEhF,MADAA,GAAE5qD,MAAQ,EACH4qD,GAEXhE,QAAO3jC,QAAQrK,MAAMguC,OAAQ+D,cAEjC,MAAO,IAAIZ,WAAUrsD,MAAOskD,SAAU4E,OAAQlpD,MAAMM,SAAQ,GAAOnC,KAAKqc,OAAQ,GAC3EuyC,yBAQTjqB,OAAO8C,UAAUunB,mBAAqB,SAAUntD,MAAOskD,SAAU31C,qBACjC,SAAxBA,sBAAkCA,oBAAsBC,6BAC5D,IAAqBtG,OAAQnK,KAAKivD,mBAAmBptD,MAAOskD,SAAU31C,oBACtE,IAAa,MAATrG,MACA,MAAO,KAEX,KAAK,GADgBq8C,gBACK56C,EAAI,EAAGA,EAAIzB,MAAMq8C,YAAYrkD,SAAUyJ,EAAG,CAChE,GAAqBsjD,gBAAiB/kD,MAAMq8C,YAAY56C,GACnCoiD,YAAchuD,KAAKiuD,eAAeiB,gBAClCnE,OAAS/qD,KAAK6tD,OAAO19C,SAASnQ,KAAKiuD,eAAe9jD,MAAMq8C,YAAY56C,KACpEpL,IAAM,GAAI0tD,WAAUrsD,MAAOskD,SAAU4E,OAAQiD,YAAY7rD,SAAQ,GAAOnC,KAAKqc,OAAQlS,MAAMsjD,QAAQ7hD,IAAMsjD,eAAe/sD,OAAS6rD,YAAY7rD,SAC7JgsD,YACL3H,aAAY7lD,KAAKH,KAErB,MAAO,IAAIykB,eAAc,GAAIijC,eAAc,GAAIpC,WAAU,EAAY,MAATjkD,MAAgB,EAAIA,MAAMM,QAASgI,MAAMg+C,QAAS3B,aAAc3kD,MAAOskD,SAAUnmD,KAAKqc,SAQtJsoB,OAAO8C,UAAUwnB,mBAAqB,SAAUptD,MAAOskD,SAAU31C,qBACjC,SAAxBA,sBAAkCA,oBAAsBC,6BAC5D,IAAqBxE,QAASmD,yBAAyBoB,qBAClCgC,MAAQ3Q,MAAMsI,MAAM8B,OACzC,IAAIuG,MAAMrQ,QAAU,EAChB,MAAO,KAMX,KAAK,GAJgBgmD,YACA3B,eACAiH,WACA/7C,OAAS,EACJ9F,EAAI,EAAGA,EAAI4G,MAAMrQ,OAAQyJ,IAAK,CACpD,GAAqBwnB,MAAO5gB,MAAM5G,EAC9BA,GAAI,IAAM,GAEVu8C,QAAQxnD,KAAKyyB,MACb1hB,QAAU0hB,KAAKjxB,QAEVixB,KAAKzwB,OAAOR,OAAS,GAC1BuP,QAAUlB,oBAAoBjB,MAAMpN,OACpCqkD,YAAY7lD,KAAKyyB,MACjBq6B,QAAQ9sD,KAAK+Q,QACbA,QAAU0hB,KAAKjxB,OAASqO,oBAAoBhB,IAAIrN,SAGhDnC,KAAKyuD,aAAa,4DAA6D5sD,MAAO,aAAe7B,KAAKmvD,8BAA8B38C,MAAO5G,EAAG4E,qBAAuB,MAAO21C,UAChLK,YAAY7lD,KAAK,YACjB8sD,QAAQ9sD,KAAK+Q;CAGrB,MAAO,IAAI87C,oBAAmBrF,QAAS3B,YAAaiH,UAOxD9oB,OAAO8C,UAAU2nB,qBAAuB,SAAUvtD,MAAOskD,UACrD,MAAO,IAAIlhC,eAAc,GAAI2iC,kBAAiB,GAAI9B,WAAU,EAAY,MAATjkD,MAAgB,EAAIA,MAAMM,QAASN,OAAQA,MAAOskD,SAAUnmD,KAAKqc,SAMpIsoB,OAAO8C,UAAUwmB,eAAiB,SAAUpsD,OACxC,GAAqB+J,GAAI5L,KAAKqvD,cAAcxtD,MAC5C,OAAY,OAAL+J,EAAY/J,MAAMomB,UAAU,EAAGrc,GAAGjJ,OAASd,OAMtD8iC,OAAO8C,UAAU4nB,cAAgB,SAAUxtD,OAEvC,IAAK,GADgBytD,YAAa,KACR1jD,EAAI,EAAGA,EAAI/J,MAAMM,OAAS,EAAGyJ,IAAK,CACxD,GAAqBiF,MAAOhP,MAAMwC,WAAWuH,GACxB2jD,SAAW1tD,MAAMwC,WAAWuH,EAAI,EACrD,IAAIiF,OAASM,QAAUo+C,UAAYp+C,QAAwB,MAAdm+C,WACzC,MAAO1jD,EACP0jD,cAAez+C,KACfy+C,WAAa,KAEM,MAAdA,YAAsBlhD,QAAQyC,QACnCy+C,WAAaz+C,MAGrB,MAAO,OAQX8zB,OAAO8C,UAAUsmB,sBAAwB,SAAUlsD,MAAOskD,SAAU31C,qBAChE,GAAqBvE,QAASmD,yBAAyBoB,qBAClCgC,MAAQ3Q,MAAMsI,MAAM8B,OACrCuG,OAAMrQ,OAAS,GACfnC,KAAKyuD,aAAa,sBAAwBj+C,oBAAoBjB,MAAQiB,oBAAoBhB,IAAM,kCAAmC3N,MAAO,aAAe7B,KAAKmvD,8BAA8B38C,MAAO,EAAGhC,qBAAuB,MAAO21C,WAS5OxhB,OAAO8C,UAAU0nB,8BAAgC,SAAU38C,MAAOg9C,aAAch/C,qBAE5E,IAAK,GADgBo1C,aAAc,GACThvC,EAAI,EAAGA,EAAI44C,aAAc54C,IAC/CgvC,aAAehvC,EAAI,IAAM,EACrBpE,MAAMoE,GACN,GAAKpG,oBAAoBjB,MAAQiD,MAAMoE,GAAKpG,oBAAoBhB,GAExE,OAAOo2C,aAAYzjD,QAEhBwiC,SAEXA,QAAOsmB,aACD1jD,KAAMiE,qBAKZm5B,OAAOumB,eAAiB,WAAc,QAChC3jD,KAAMq9B,QAEZ,IAAIspB,WAAa,WAUb,QAASA,WAAUrsD,MAAOskD,SAAU4E,OAAQ0E,YAAa3B,YAAazxC,OAAQ3K,QAC1E1R,KAAK6B,MAAQA,MACb7B,KAAKmmD,SAAWA,SAChBnmD,KAAK+qD,OAASA,OACd/qD,KAAKyvD,YAAcA,YACnBzvD,KAAK8tD,YAAcA,YACnB9tD,KAAKqc,OAASA,OACdrc,KAAK0R,OAASA,OACd1R,KAAK0vD,gBAAkB,EACvB1vD,KAAK2vD,kBAAoB,EACzB3vD,KAAK4vD,gBAAkB,EACvB5vD,KAAKmE,MAAQ,EAgnBjB,MA1mBA+pD,WAAUzmB,UAAU/5B,KAAO,SAAUgE,QACjC,GAAqB9F,GAAI5L,KAAKmE,MAAQuN,MACtC,OAAO9F,GAAI5L,KAAK+qD,OAAO5oD,OAASnC,KAAK+qD,OAAOn/C,GAAKwgD,KAErDvoD,OAAOkX,eAAemzC,UAAUzmB,UAAW,QAIvCtiC,IAAK,WAAc,MAAOnF,MAAK0N,KAAK,IACpCuN,YAAY,EACZD,cAAc,IAElBnX,OAAOkX,eAAemzC,UAAUzmB,UAAW,cAIvCtiC,IAAK,WACD,MAAQnF,MAAKmE,MAAQnE,KAAK+qD,OAAO5oD,OAAUnC,KAAK6vD,KAAK1rD,MAAQnE,KAAK0R,OAC9D1R,KAAKyvD,YAAczvD,KAAK0R,QAEhCuJ,YAAY,EACZD,cAAc,IAMlBkzC,UAAUzmB,UAAUue,KAAO,SAAUz2C,OAAS,MAAO,IAAIu2C,WAAUv2C,MAAOvP,KAAK8vD,aAI/E5B,UAAUzmB,UAAU95B,QAAU,WAAc3N,KAAKmE,SAKjD+pD,UAAUzmB,UAAUsoB,kBAAoB,SAAUtlD,MAC9C,QAAIzK,KAAK6vD,KAAKxE,YAAY5gD,QACtBzK,KAAK2N,WACE,IASfugD,UAAUzmB,UAAUuoB,eAAiB,WAAc,MAAOhwD,MAAK6vD,KAAKlE,gBAIpEuC,UAAUzmB,UAAUwoB,cAAgB,WAAc,MAAOjwD,MAAK6vD,KAAKjE,eAKnEsC,UAAUzmB,UAAUyoB,gBAAkB,SAAUzlD,MACxCzK,KAAK+vD,kBAAkBtlD,OAE3BzK,KAAKuD,MAAM,oBAAsBgB,OAAOC,aAAaiG,QAMzDyjD,UAAUzmB,UAAU0oB,iBAAmB,SAAUC,IAC7C,QAAIpwD,KAAK6vD,KAAKrE,WAAW4E,MACrBpwD,KAAK2N,WACE,IAUfugD,UAAUzmB,UAAU4oB,eAAiB,SAAUC,UACvCtwD,KAAKmwD,iBAAiBG,WAE1BtwD,KAAKuD,MAAM,6BAA+B+sD,WAK9CpC,UAAUzmB,UAAU8oB,0BAA4B,WAC5C,GAAqBvjD,GAAIhN,KAAK6vD,IAC9B,OAAK7iD,GAAEO,gBAAmBP,EAAE0+C,aAI5B1rD,KAAK2N,UACEX,EAAE3H,aAJLrF,KAAKuD,MAAM,oBAAsByJ,EAAI,oCAC9B,KAQfkhD,UAAUzmB,UAAU+oB,kCAAoC,WACpD,GAAqBxjD,GAAIhN,KAAK6vD,IAC9B,OAAK7iD,GAAEO,gBAAmBP,EAAE0+C,aAAgB1+C,EAAEu+C,YAI9CvrD,KAAK2N,UACEX,EAAE3H,aAJLrF,KAAKuD,MAAM,oBAAsByJ,EAAI,6CAC9B,KAQfkhD,UAAUzmB,UAAU0mB,WAAa,WAG7B,IAFA,GAAqBp2B,UACAxoB,MAAQvP,KAAK8vD,WAC3B9vD,KAAKmE,MAAQnE,KAAK+qD,OAAO5oD,QAAQ,CACpC,GAAqB8pB,MAAOjsB,KAAKywD,WAEjC,IADA14B,MAAMp3B,KAAKsrB,MACPjsB,KAAK+vD,kBAAkBx+C,YAIvB,IAHKvR,KAAK8tD,aACN9tD,KAAKuD,MAAM,wDAERvD,KAAK+vD,kBAAkBx+C,kBAGzBvR,MAAKmE,MAAQnE,KAAK+qD,OAAO5oD,QAC9BnC,KAAKuD,MAAM,qBAAuBvD,KAAK6vD,KAAO,KAGtD,MAAoB,IAAhB93B,MAAM51B,OACC,GAAI+iB,WAAUllB,KAAKgmD,KAAKz2C,QACf,GAAhBwoB,MAAM51B,OACC41B,MAAM,GACV,GAAIwuB,OAAMvmD,KAAKgmD,KAAKz2C,OAAQwoB,QAKvCm2B,UAAUzmB,UAAUgpB,UAAY,WAC5B,GAAqBnwD,QAASN,KAAK0wD,iBACnC,IAAI1wD,KAAKmwD,iBAAiB,KAAM,CACxBnwD,KAAK8tD,aACL9tD,KAAKuD,MAAM,6CAEf,GAAG,CAGC,IAFA,GAAqBmB,MAAO1E,KAAKuwD,4BACZp8B,QACdn0B,KAAK+vD,kBAAkBhG,SAC1B51B,KAAKxzB,KAAKX,KAAK0wD,kBAEnBpwD,QAAS,GAAImnD,aAAYznD,KAAKgmD,KAAK1lD,OAAO0lD,KAAKz2C,OAAQjP,OAAQoE,KAAMyvB,YAChEn0B,KAAKmwD,iBAAiB,MAEnC,MAAO7vD,SAKX4tD,UAAUzmB,UAAUipB,gBAAkB,WAAc,MAAO1wD,MAAK2wD,oBAIhEzC,UAAUzmB,UAAUkpB,iBAAmB,WACnC,GAAqBphD,OAAQvP,KAAK8vD,WACbxvD,OAASN,KAAK4wD,gBACnC,IAAI5wD,KAAKmwD,iBAAiB,KAAM,CAC5B,GAAqBU,KAAM7wD,KAAKywD,YACXK,GAAK,MAC1B,IAAK9wD,KAAK+vD,kBAAkBhG,QAOxB+G,GAAK9wD,KAAKywD,gBAPuB,CACjC,GAAqBjhD,KAAMxP,KAAK8vD,WACXhzC,WAAa9c,KAAK6B,MAAMomB,UAAU1Y,MAAOC,IAC9DxP,MAAKuD,MAAM,0BAA4BuZ,WAAa,+BACpDg0C,GAAK,GAAI5rC,WAAUllB,KAAKgmD,KAAKz2C,QAKjC,MAAO,IAAIm3C,aAAY1mD,KAAKgmD,KAAKz2C,OAAQjP,OAAQuwD,IAAKC,IAGtD,MAAOxwD,SAMf4tD,UAAUzmB,UAAUmpB,eAAiB,WAGjC,IADA,GAAqBtwD,QAASN,KAAK+wD,kBAC5B/wD,KAAKmwD,iBAAiB,OAAO,CAChC,GAAqB3H,OAAQxoD,KAAK+wD,iBAClCzwD,QAAS,GAAI+nD,QAAOroD,KAAKgmD,KAAK1lD,OAAO0lD,KAAKz2C,OAAQ,KAAMjP,OAAQkoD,OAEpE,MAAOloD,SAKX4tD,UAAUzmB,UAAUspB,gBAAkB,WAGlC,IADA,GAAqBzwD,QAASN,KAAKgxD,gBAC5BhxD,KAAKmwD,iBAAiB,OAAO,CAChC,GAAqB3H,OAAQxoD,KAAKgxD,eAClC1wD,QAAS,GAAI+nD,QAAOroD,KAAKgmD,KAAK1lD,OAAO0lD,KAAKz2C,OAAQ,KAAMjP,OAAQkoD,OAEpE,MAAOloD,SAKX4tD,UAAUzmB,UAAUupB,cAAgB,WAGhC,IADA,GAAqB1wD,QAASN,KAAKixD,kBAC5BjxD,KAAK6vD,KAAKtoD,MAAQ8E,UAAUQ,UAAU,CACzC,GAAqByjD,UAAWtwD,KAAK6vD,KAAKzE,QAC1C,QAAQkF,UACJ,IAAK,KACL,IAAK,MACL,IAAK,KACL,IAAK,MACDtwD,KAAK2N,SACL,IAAqB66C,OAAQxoD,KAAKixD,iBAClC3wD,QAAS,GAAI+nD,QAAOroD,KAAKgmD,KAAK1lD,OAAO0lD,KAAKz2C,OAAQ+gD,SAAUhwD,OAAQkoD,MACpE,UAER,MAEJ,MAAOloD,SAKX4tD,UAAUzmB,UAAUwpB,gBAAkB,WAGlC,IADA,GAAqB3wD,QAASN,KAAKkxD,gBAC5BlxD,KAAK6vD,KAAKtoD,MAAQ8E,UAAUQ,UAAU,CACzC,GAAqByjD,UAAWtwD,KAAK6vD,KAAKzE,QAC1C,QAAQkF,UACJ,IAAK,IACL,IAAK,IACL,IAAK,KACL,IAAK,KACDtwD,KAAK2N,SACL,IAAqB66C,OAAQxoD,KAAKkxD,eAClC5wD,QAAS,GAAI+nD,QAAOroD,KAAKgmD,KAAK1lD,OAAO0lD,KAAKz2C,OAAQ+gD,SAAUhwD,OAAQkoD,MACpE,UAER,MAEJ,MAAOloD,SAKX4tD,UAAUzmB,UAAUypB,cAAgB,WAGhC,IADA,GAAqB5wD,QAASN,KAAKmxD,sBAC5BnxD,KAAK6vD,KAAKtoD,MAAQ8E,UAAUQ,UAAU,CACzC,GAAqByjD,UAAWtwD,KAAK6vD,KAAKzE,QAC1C,QAAQkF,UACJ,IAAK,IACL,IAAK,IACDtwD,KAAK2N,SACL,IAAqB66C,OAAQxoD,KAAKmxD,qBAClC7wD,QAAS,GAAI+nD,QAAOroD,KAAKgmD,KAAK1lD,OAAO0lD,KAAKz2C,OAAQ+gD,SAAUhwD,OAAQkoD,MACpE,UAER,MAEJ,MAAOloD,SAKX4tD,UAAUzmB,UAAU0pB,oBAAsB,WAGtC,IADA,GAAqB7wD,QAASN,KAAKoxD,cAC5BpxD,KAAK6vD,KAAKtoD,MAAQ8E,UAAUQ,UAAU,CACzC,GAAqByjD,UAAWtwD,KAAK6vD,KAAKzE,QAC1C,QAAQkF,UACJ,IAAK,IACL,IAAK,IACL,IAAK,IACDtwD,KAAK2N,SACL,IAAqB66C,OAAQxoD,KAAKoxD,aAClC9wD,QAAS,GAAI+nD,QAAOroD,KAAKgmD,KAAK1lD,OAAO0lD,KAAKz2C,OAAQ+gD,SAAUhwD,OAAQkoD,MACpE,UAER,MAEJ,MAAOloD,SAKX4tD,UAAUzmB,UAAU2pB,YAAc,WAC9B,GAAIpxD,KAAK6vD,KAAKtoD,MAAQ8E,UAAUQ,SAAU,CACtC,GAAqB0C,OAAQvP,KAAK8vD,WACbQ,SAAWtwD,KAAK6vD,KAAKzE,SACrB9qD,OAAS,MAC9B,QAAQgwD,UACJ,IAAK,IAED,MADAtwD,MAAK2N,UACE3N,KAAKoxD,aAChB,KAAK,IAGD,MAFApxD,MAAK2N,UACLrN,OAASN,KAAKoxD,cACP,GAAI/I,QAAOroD,KAAKgmD,KAAKz2C,OAAQ+gD,SAAU,GAAI1I,kBAAiB,GAAI9B,WAAUv2C,MAAOA,OAAQ,GAAIjP,OACxG,KAAK,IAGD,MAFAN,MAAK2N,UACLrN,OAASN,KAAKoxD,cACP,GAAI1I,WAAU1oD,KAAKgmD,KAAKz2C,OAAQjP,SAGnD,MAAON,MAAKqxD,kBAKhBnD,UAAUzmB,UAAU4pB,eAAiB,WAEjC,IADA,GAAqB/wD,QAASN,KAAKsxD,iBAE/B,GAAItxD,KAAK+vD,kBAAkBjG,SACvBxpD,OAASN,KAAKuxD,8BAA8BjxD,QAAQ,OAEnD,IAAIN,KAAKmwD,iBAAiB,MAC3B7vD,OAASN,KAAKuxD,8BAA8BjxD,QAAQ,OAEnD,IAAIN,KAAK+vD,kBAAkB5F,WAAY,CACxCnqD,KAAK2vD,mBACL,IAAqBr7B,KAAMt0B,KAAKywD,WAGhC,IAFAzwD,KAAK2vD,oBACL3vD,KAAKkwD,gBAAgB7F,WACjBrqD,KAAKmwD,iBAAiB,KAAM,CAC5B,GAAqBttD,OAAQ7C,KAAK2wD,kBAClCrwD,QAAS,GAAIinD,YAAWvnD,KAAKgmD,KAAK1lD,OAAO0lD,KAAKz2C,OAAQjP,OAAQg0B,IAAKzxB,WAGnEvC,QAAS,GAAI+mD,WAAUrnD,KAAKgmD,KAAK1lD,OAAO0lD,KAAKz2C,OAAQjP,OAAQg0B,SAGhE,CAAA,IAAIt0B,KAAK+vD,kBAAkBrG,SAQ5B,MAAOppD,OAPPN,MAAK0vD,iBACL,IAAqBv7B,MAAOn0B,KAAKwxD,oBACjCxxD,MAAK0vD,kBACL1vD,KAAKkwD,gBAAgBvG,SACrBrpD,OAAS,GAAI0oD,cAAahpD,KAAKgmD,KAAK1lD,OAAO0lD,KAAKz2C,OAAQjP,OAAQ6zB,QAU5E+5B,UAAUzmB,UAAU6pB,aAAe,WAC/B,GAAqB/hD,OAAQvP,KAAK8vD,UAClC,IAAI9vD,KAAK+vD,kBAAkBrG,SAAU,CACjC1pD,KAAK0vD,iBACL,IAAqBpvD,QAASN,KAAKywD,WAGnC,OAFAzwD,MAAK0vD,kBACL1vD,KAAKkwD,gBAAgBvG,SACdrpD,OAEN,GAAIN,KAAK6vD,KAAKhE,gBAEf,MADA7rD,MAAK2N,UACE,GAAIi6C,kBAAiB5nD,KAAKgmD,KAAKz2C,OAAQ,KAE7C,IAAIvP,KAAK6vD,KAAK/D,qBAEf,MADA9rD,MAAK2N,UACE,GAAIi6C,kBAAiB5nD,KAAKgmD,KAAKz2C,QAAQ,QAE7C,IAAIvP,KAAK6vD,KAAK9D,gBAEf,MADA/rD,MAAK2N,UACE,GAAIi6C,kBAAiB5nD,KAAKgmD,KAAKz2C,SAAQ,GAE7C,IAAIvP,KAAK6vD,KAAK7D,iBAEf,MADAhsD,MAAK2N,UACE,GAAIi6C,kBAAiB5nD,KAAKgmD,KAAKz2C,SAAQ,GAE7C,IAAIvP,KAAK6vD,KAAK5D,gBAEf,MADAjsD,MAAK2N,UACE,GAAI04C,kBAAiBrmD,KAAKgmD,KAAKz2C,OAErC,IAAIvP,KAAK+vD,kBAAkB5F,WAAY,CACxCnqD,KAAK2vD,mBACL,IAAqB8B,UAAWzxD,KAAK0xD,oBAAoBrH,UAGzD,OAFArqD,MAAK2vD,oBACL3vD,KAAKkwD,gBAAgB7F,WACd,GAAIvC,cAAa9nD,KAAKgmD,KAAKz2C,OAAQkiD,UAEzC,GAAIzxD,KAAK6vD,KAAKxE,YAAYz5C,SAC3B,MAAO5R,MAAK2xD,iBAEX,IAAI3xD,KAAK6vD,KAAKtiD,eACf,MAAOvN,MAAKuxD,8BAA8B,GAAIlL,kBAAiBrmD,KAAKgmD,KAAKz2C,SAAS,EAEjF,IAAIvP,KAAK6vD,KAAKvE,WAAY,CAC3B,GAAqBzoD,OAAQ7C,KAAK6vD,KAAK1D,UAEvC,OADAnsD,MAAK2N,UACE,GAAIi6C,kBAAiB5nD,KAAKgmD,KAAKz2C,OAAQ1M,OAE7C,GAAI7C,KAAK6vD,KAAKtE,WAAY,CAC3B,GAAqBqG,cAAe5xD,KAAK6vD,KAAKxqD,UAE9C,OADArF,MAAK2N,UACE,GAAIi6C,kBAAiB5nD,KAAKgmD,KAAKz2C,OAAQqiD,cAE7C,MAAI5xD,MAAKmE,OAASnE,KAAK+qD,OAAO5oD,QAC/BnC,KAAKuD,MAAM,iCAAmCvD,KAAK6B,OAC5C,GAAIqjB,WAAUllB,KAAKgmD,KAAKz2C,UAG/BvP,KAAKuD,MAAM,oBAAsBvD,KAAK6vD,MAC/B,GAAI3qC,WAAUllB,KAAKgmD,KAAKz2C,UAOvC2+C,UAAUzmB,UAAUiqB,oBAAsB,SAAUG,YAChD,GAAqBvxD,UACrB,KAAKN,KAAK6vD,KAAKxE,YAAYwG,YACvB,EACIvxD,QAAOK,KAAKX,KAAKywD,mBACZzwD,KAAK+vD,kBAAkBlG,QAEpC,OAAOvpD,SAKX4tD,UAAUzmB,UAAUkqB,gBAAkB,WAClC,GAAqBt9B,SACAtP,UACAxV,MAAQvP,KAAK8vD,UAElC,IADA9vD,KAAKkwD,gBAAgBt+C,UAChB5R,KAAK+vD,kBAAkBrF,SAAU,CAClC1qD,KAAK4vD,iBACL,GAAG,CACC,GAAqBt7B,KAAMt0B,KAAKwwD,mCAChCn8B,MAAK1zB,KAAK2zB,KACVt0B,KAAKkwD,gBAAgBnG,QACrBhlC,OAAOpkB,KAAKX,KAAKywD,mBACZzwD,KAAK+vD,kBAAkBlG,QAChC7pD,MAAK4vD,kBACL5vD,KAAKkwD,gBAAgBxF,SAEzB,MAAO,IAAI1C,YAAWhoD,KAAKgmD,KAAKz2C,OAAQ8kB,KAAMtP,SAOlDmpC,UAAUzmB,UAAU8pB,8BAAgC,SAAUxK,SAAU+K,QACrD,SAAXA,SAAqBA,QAAS,EAClC,IAAqBviD,OAAQw3C,SAASf,KAAKz2C,MACtBtG,GAAKjJ,KAAKuwD,2BAC/B,IAAIvwD,KAAK+vD,kBAAkBrG,SAAU,CACjC1pD,KAAK0vD,iBACL,IAAqBv7B,MAAOn0B,KAAKwxD,oBACjCxxD,MAAKkwD,gBAAgBvG,SACrB3pD,KAAK0vD,iBACL,IAAqB1J,MAAOhmD,KAAKgmD,KAAKz2C,MACtC,OAAOuiD,QAAS,GAAIhJ,gBAAe9C,KAAMe,SAAU99C,GAAIkrB,MACnD,GAAIy0B,YAAW5C,KAAMe,SAAU99C,GAAIkrB,MAGvC,GAAI29B,OACA,MAAI9xD,MAAKmwD,iBAAiB,MACtBnwD,KAAKuD,MAAM,sDACJ,GAAI2hB,WAAUllB,KAAKgmD,KAAKz2C,SAGxB,GAAI43C,kBAAiBnnD,KAAKgmD,KAAKz2C,OAAQw3C,SAAU99C,GAI5D,IAAIjJ,KAAKmwD,iBAAiB,KAAM,CAC5B,IAAKnwD,KAAK8tD,YAEN,MADA9tD,MAAKuD,MAAM,uCACJ,GAAI2hB,WAAUllB,KAAKgmD,KAAKz2C,OAEnC,IAAqB1M,OAAQ7C,KAAK2wD,kBAClC,OAAO,IAAI1J,eAAcjnD,KAAKgmD,KAAKz2C,OAAQw3C,SAAU99C,GAAIpG,OAGzD,MAAO,IAAIikD,cAAa9mD,KAAKgmD,KAAKz2C,OAAQw3C,SAAU99C,KAQpEilD,UAAUzmB,UAAU+pB,mBAAqB,WACrC,GAAIxxD,KAAK6vD,KAAKxE,YAAY1B,SACtB,QACJ,IAAqBoI,eACrB,GACIA,aAAYpxD,KAAKX,KAAKywD,mBACjBzwD,KAAK+vD,kBAAkBlG,QAChC,OAAO,cAMXqE,UAAUzmB,UAAUuqB,yBAA2B,WAC3C,GAAqB1xD,QAAS,GACT2xD,eAAgB,CACrC,GACI3xD,SAAUN,KAAKwwD,oCACfyB,cAAgBjyD,KAAKmwD,iBAAiB,KAClC8B,gBACA3xD,QAAU,WAET2xD,cACT,OAAO3xD,QAAO+E,YAKlB6oD,UAAUzmB,UAAUmnB,sBAAwB,WAIxC,IAHA,GAAqBsD,aACA7wD,OAAS,KACTusD,YACd5tD,KAAKmE,MAAQnE,KAAK+qD,OAAO5oD,QAAQ,CACpC,GAAqBoN,OAAQvP,KAAK8vD,WACb3G,SAAWnpD,KAAKgwD,gBACjC7G,WACAnpD,KAAK2N,SAET,IAAqBwkD,QAASnyD,KAAKgyD,2BACd19B,IAAM69B,MACtBhJ,YACa,MAAV9nD,OACAA,OAASizB,IAGTA,IAAMjzB,OAASizB,IAAI,GAAGlyB,cAAgBkyB,IAAIrM,UAAU,IAG5DjoB,KAAK+vD,kBAAkBhG,OACvB,IAAqBrlD,MAAO,KACPoY,WAAa,IAClC,IAAIqsC,SAEIzkD,KADA1E,KAAKmwD,iBAAiB,KACfnwD,KAAKgyD,2BAGL,gBAGV,IAAIhyD,KAAKiwD,gBAAiB,CAC3B,GAAqBmC,UAAWpyD,KAAK8vD,UACrC9vD,MAAK2N,UACLjJ,KAAOytD,OACP79B,IAAMt0B,KAAKgyD,2BACX7I,UAAW,MAEV,IAAInpD,KAAK6vD,OAASzD,MAAQpsD,KAAKgwD,iBAAkB,CAClD,GAAqBqC,SAAUryD,KAAK8vD,WACftvD,IAAMR,KAAKywD,YACXrgD,OAASpQ,KAAK6B,MAAMomB,UAAUoqC,QAAUryD,KAAK0R,OAAQ1R,KAAK8vD,WAAa9vD,KAAK0R,OACjGoL,YAAa,GAAImI,eAAczkB,IAAK4P,OAAQpQ,KAAKmmD,SAAUnmD,KAAKqc,QAGpE,GADA61C,SAASvxD,KAAK,GAAIuoD,iBAAgBlpD,KAAKgmD,KAAKz2C,OAAQ+kB,IAAK60B,SAAUzkD,KAAMoY,aACrE9c,KAAKiwD,kBAAoB9G,SAAU,CACnC,GAAqBiJ,UAAWpyD,KAAK8vD,UACrC9vD,MAAK2N,SACL,IAAqB2kD,SAAUtyD,KAAKgyD,0BACpCE,UAASvxD,KAAK,GAAIuoD,iBAAgBlpD,KAAKgmD,KAAKoM,UAAWE,UAAS,GAAMh+B,IAAK,OAE1Et0B,KAAK+vD,kBAAkBx+C,aACxBvR,KAAK+vD,kBAAkBlG,QAG/B,MAAO,IAAI6D,4BAA2BwE,SAAUtE,SAAU5tD,KAAKqc,SAOnE6xC,UAAUzmB,UAAUlkC,MAAQ,SAAU4J,QAAShJ,OAC7B,SAAVA,QAAoBA,MAAQ,MAChCnE,KAAKqc,OAAO1b,KAAK,GAAIglD,aAAYx4C,QAASnN,KAAK6B,MAAO7B,KAAKuyD,aAAapuD,OAAQnE,KAAKmmD,WACrFnmD,KAAKwyD,QAMTtE,UAAUzmB,UAAU8qB,aAAe,SAAUpuD,OAIzC,MAHc,UAAVA,QAAoBA,MAAQ,MACnB,MAATA,QACAA,MAAQnE,KAAKmE,OACTA,MAAQnE,KAAK+qD,OAAO5oD,OAAU,cAAgBnC,KAAK+qD,OAAO5mD,OAAOA,MAAQ,GAAK,MAClF,gCAKR+pD,UAAUzmB,UAAU+qB,KAAO,WAEvB,IADA,GAAqBxlD,GAAIhN,KAAK6vD,KACvB7vD,KAAKmE,MAAQnE,KAAK+qD,OAAO5oD,SAAW6K,EAAEq+C,YAAY95C,cACpDvR,KAAK0vD,iBAAmB,IAAM1iD,EAAEq+C,YAAY1B,YAC5C3pD,KAAK4vD,iBAAmB,IAAM5iD,EAAEq+C,YAAYX,YAC5C1qD,KAAK2vD,mBAAqB,IAAM3iD,EAAEq+C,YAAYhB,aAC3CrqD,KAAK6vD,KAAK3D,WACVlsD,KAAKqc,OAAO1b,KAAK,GAAIglD,aAAY3lD,KAAK6vD,KAAKxqD,WAAYrF,KAAK6B,MAAO7B,KAAKuyD,eAAgBvyD,KAAKmmD,WAEjGnmD,KAAK2N,UACLX,EAAIhN,KAAK6vD,MAGV3B,aAEPK,wBAA2B,WAC3B,QAASA,2BACLvuD,KAAKqc,UAqIT,MA/HAkyC,yBAAwBC,MAAQ,SAAUhuD,KACtC,GAAqBmD,GAAI,GAAI4qD,wBAE7B,OADA/tD,KAAID,MAAMoD,GACHA,EAAE0Y,QAObkyC,wBAAwB9mB,UAAU6e,sBAAwB,SAAU9lD,IAAKH,WAMzEkuD,wBAAwB9mB,UAAU2gB,mBAAqB,SAAU5nD,IAAKH,WAMtEkuD,wBAAwB9mB,UAAUogB,sBAAwB,SAAUrnD,IAAKH,WAMzEkuD,wBAAwB9mB,UAAUuf,kBAAoB,SAAUxmD,IAAKH,WAMrEkuD,wBAAwB9mB,UAAUyf,mBAAqB,SAAU1mD,IAAKH,WAMtEkuD,wBAAwB9mB,UAAU2f,sBAAwB,SAAU5mD,IAAKH,WAMzEkuD,wBAAwB9mB,UAAUohB,gBAAkB,SAAUroD,IAAKH,WAMnEkuD,wBAAwB9mB,UAAUshB,oBAAsB,SAAUvoD,IAAKH,WAMvEkuD,wBAAwB9mB,UAAUwhB,kBAAoB,SAAUzoD,IAAKH,WAMrEkuD,wBAAwB9mB,UAAUsgB,kBAAoB,SAAUvnD,IAAKH,SAAWL,KAAKiQ,SAASzP,IAAIgmD,cAMlG+H,wBAAwB9mB,UAAUwgB,gBAAkB,SAAUznD,IAAKH,SAAWL,KAAKiQ,SAASzP,IAAIukB,SAMhGwpC,wBAAwB9mB,UAAUghB,YAAc,SAAUjoD,IAAKH,WAM/DkuD,wBAAwB9mB,UAAUkhB,eAAiB,SAAUnoD,IAAKH,WAMlEkuD,wBAAwB9mB,UAAUof,iBAAmB,SAAUrmD,IAAKH,WAMpEkuD,wBAAwB9mB,UAAUkgB,UAAY,SAAUnnD,IAAKH,SAAWL,KAAKqc,OAAO1b,KAAK,UAMzF4tD,wBAAwB9mB,UAAU6f,eAAiB,SAAU9mD,IAAKH,WAMlEkuD,wBAAwB9mB,UAAU+f,gBAAkB,SAAUhnD,IAAKH,WAKnEkuD,wBAAwB9mB,UAAUx3B,SAAW,SAAU7P,MACnD,GAAIinC,OAAQrnC,IACZ,OAAOI,MAAKoV,IAAI,SAAU0E,MAAQ,MAAOA,MAAK3Z,MAAM8mC,UAOxDknB,wBAAwB9mB,UAAUgf,WAAa,SAAUjmD,IAAKH,WAM9DkuD,wBAAwB9mB,UAAU2e,WAAa,SAAU5lD,IAAKH,WACvDkuD,2BAEPv+C,cAAiB,WAOjB,QAASA,eAAcyiD,KAAM/gD,OAAQkxB,KAAMib,KACvC79C,KAAKyyD,KAAOA,KACZzyD,KAAK0R,OAASA,OACd1R,KAAK4iC,KAAOA,KACZ5iC,KAAK69C,IAAMA,IAuFf,MAlFA7tC,eAAcy3B,UAAUpiC,SAAW,WAC/B,MAAsB,OAAfrF,KAAK0R,OAAiB1R,KAAKyyD,KAAKpiD,IAAM,IAAMrQ,KAAK4iC,KAAO,IAAM5iC,KAAK69C,IAAM79C,KAAKyyD,KAAKpiD,KAM9FL,cAAcy3B,UAAUirB,OAAS,SAAUpjB,OAMvC,IALA,GAAqBl/B,QAASpQ,KAAKyyD,KAAKngC,QACnBrc,IAAM7F,OAAOjO,OACbuP,OAAS1R,KAAK0R,OACdkxB,KAAO5iC,KAAK4iC,KACZib,IAAM79C,KAAK69C,IACzBnsC,OAAS,GAAK49B,MAAQ,GAAG,CAC5B59B,SACA49B,OACA,IAAqBqjB,IAAKviD,OAAO/L,WAAWqN,OAC5C,IAAIihD,IAAMjkD,IAAK,CACXk0B,MACA,IAAqBgwB,WAAYxiD,OAAO2yB,OAAO,EAAGrxB,OAAS,GAAGsW,YAAYzjB,OAAOC,aAAakK,KAC9FmvC,KAAM+U,UAAY,EAAIlhD,OAASkhD,UAAYlhD,WAG3CmsC,OAGR,KAAOnsC,OAASuE,KAAOq5B,MAAQ,GAAG,CAC9B,GAAqBqjB,IAAKviD,OAAO/L,WAAWqN,OAC5CA,UACA49B,QACIqjB,IAAMjkD,KACNk0B,OACAib,IAAM,GAGNA,MAGR,MAAO,IAAI7tC,eAAchQ,KAAKyyD,KAAM/gD,OAAQkxB,KAAMib,MAOtD7tC,cAAcy3B,UAAUorB,WAAa,SAAUC,SAAUC,UACrD,GAAqBzgC,SAAUtyB,KAAKyyD,KAAKngC,QACpB0gC,YAAchzD,KAAK0R,MACxC,IAAmB,MAAfshD,YAAqB,CACjBA,YAAc1gC,QAAQnwB,OAAS,IAC/B6wD,YAAc1gC,QAAQnwB,OAAS,EAKnC,KAHA,GAAqB8wD,WAAYD,YACZE,SAAW,EACXC,SAAW,EACzBD,SAAWJ,UAAYE,YAAc,IACxCA,cACAE,WAC4B,MAAxB5gC,QAAQ0gC,gBACFG,UAAYJ,YAO1B,IAFAG,SAAW,EACXC,SAAW,EACJD,SAAWJ,UAAYG,UAAY3gC,QAAQnwB,OAAS,IACvD8wD,YACAC,WAC0B,MAAtB5gC,QAAQ2gC,cACFE,UAAYJ,YAK1B,OACIK,OAAQ9gC,QAAQrK,UAAU+qC,YAAahzD,KAAK0R,QAC5C2hD,MAAO/gC,QAAQrK,UAAUjoB,KAAK0R,OAAQuhD,UAAY,IAG1D,MAAO,OAEJjjD,iBAEPF,gBAAmB,WAKnB,QAASA,iBAAgBwiB,QAASjiB,KAC9BrQ,KAAKsyB,QAAUA,QACftyB,KAAKqQ,IAAMA,IAEf,MAAOP,oBAEPC,gBAAmB,WAMnB,QAASA,iBAAgBR,MAAOC,IAAK8jD,SACjB,SAAZA,UAAsBA,QAAU,MACpCtzD,KAAKuP,MAAQA,MACbvP,KAAKwP,IAAMA,IACXxP,KAAKszD,QAAUA,QAQnB,MAHAvjD,iBAAgB03B,UAAUpiC,SAAW,WACjC,MAAOrF,MAAKuP,MAAMkjD,KAAKngC,QAAQrK,UAAUjoB,KAAKuP,MAAMmC,OAAQ1R,KAAKwP,IAAIkC,SAElE3B,mBAEPwjD,kBACJA,iBAAgBC,QAAU,EAC1BD,gBAAgBE,MAAQ,EACxBF,gBAAgBA,gBAAgBC,SAAW,UAC3CD,gBAAgBA,gBAAgBE,OAAS,OACzC,IAAIC,YAAc,WAMd,QAASA,YAAW1N,KAAM1iD,IAAKqwD,OACb,SAAVA,QAAoBA,MAAQJ,gBAAgBE,OAChDzzD,KAAKgmD,KAAOA,KACZhmD,KAAKsD,IAAMA,IACXtD,KAAK2zD,MAAQA,MAWjB,MANAD,YAAWjsB,UAAUpiC,SAAW,WAC5B,GAAqBsrB,KAAM3wB,KAAKgmD,KAAKz2C,MAAMsjD,WAAW,IAAK,GACtCe,WAAajjC,IAAM,MAASA,IAAIyiC,OAAS,IAAMG,gBAAgBvzD,KAAK2zD,OAAS,OAAShjC,IAAI0iC,MAAQ,KAAQ,GAC1GC,QAAUtzD,KAAKgmD,KAAKsN,QAAU,KAAOtzD,KAAKgmD,KAAKsN,QAAU,EAC9E,OAAO,GAAKtzD,KAAKsD,IAAMswD,WAAa,KAAO5zD,KAAKgmD,KAAKz2C,MAAQ+jD,SAE1DI,cAqBP9uC,KAAQ,WAKR,QAASA,MAAK/hB,MAAO4P,YACjBzS,KAAK6C,MAAQA,MACb7C,KAAKyS,WAAaA,WAQtB,MADAmS,MAAK6iB,UAAUlnC,MAAQ,SAAUJ,QAASE,SAAW,MAAOF,SAAQypC,UAAU5pC,KAAMK,UAC7EukB,QAEPivC,UAAa,WAQb,QAASA,WAAU12C,YAAa5V,KAAMiV,MAAO/J,WAAY2K,uBACrDpd,KAAKmd,YAAcA,YACnBnd,KAAKuH,KAAOA,KACZvH,KAAKwc,MAAQA,MACbxc,KAAKyS,WAAaA,WAClBzS,KAAKod,sBAAwBA,sBAQjC,MADAy2C,WAAUpsB,UAAUlnC,MAAQ,SAAUJ,QAASE,SAAW,MAAOF,SAAQ2zD,eAAe9zD,KAAMK,UACvFwzD,aAEPE,cAAiB,WAQjB,QAASA,eAAclxD,MAAOia,WAAYrK,WAAYmK,gBAAiBo3C,eACnEh0D,KAAK6C,MAAQA,MACb7C,KAAK8c,WAAaA,WAClB9c,KAAKyS,WAAaA,WAClBzS,KAAK4c,gBAAkBA,gBACvB5c,KAAKg0D,cAAgBA,cAQzB,MADAD,eAActsB,UAAUlnC,MAAQ,SAAUJ,QAASE,SAAW,MAAOF,SAAQ8zD,mBAAmBj0D,KAAMK,UAC/F0zD,iBAEP92C,YAAe,WAOf,QAASA,aAAYvY,KAAM7B,MAAO4P,WAAYyhD,WAC1Cl0D,KAAK0E,KAAOA,KACZ1E,KAAK6C,MAAQA,MACb7C,KAAKyS,WAAaA,WAClBzS,KAAKk0D,UAAYA,UAQrB,MADAj3C,aAAYwqB,UAAUlnC,MAAQ,SAAUJ,QAASE,SAAW,MAAOF,SAAQg0D,eAAen0D,KAAMK,UACzF4c,eAEPD,QAAW,WASX,QAASA,SAAQtY,KAAMyP,MAAOoI,SAAU9J,WAAY2hD,gBAAiBxpB,eACjE5qC,KAAK0E,KAAOA,KACZ1E,KAAKmU,MAAQA,MACbnU,KAAKuc,SAAWA,SAChBvc,KAAKyS,WAAaA,WAClBzS,KAAKo0D,gBAAkBA,gBACvBp0D,KAAK4qC,cAAgBA,cAQzB,MADA5tB,SAAQyqB,UAAUlnC,MAAQ,SAAUJ,QAASE,SAAW,MAAOF,SAAQ0qC,aAAa7qC,KAAMK,UACnF2c,WAEPlJ,QAAW,WAKX,QAASA,SAAQjR,MAAO4P,YACpBzS,KAAK6C,MAAQA,MACb7C,KAAKyS,WAAaA,WAQtB,MADAqB,SAAQ2zB,UAAUlnC,MAAQ,SAAUJ,QAASE,SAAW,MAAOF,SAAQk0D,aAAar0D,KAAMK,UACnFyT,WAsBPxB,cACJA,aAAYgiD,eAAiB,EAC7BhiD,YAAYiiD,aAAe,EAC3BjiD,YAAYkiD,kBAAoB,EAChCliD,YAAYmiD,UAAY,EACxBniD,YAAYC,KAAO,EACnBD,YAAY65B,mBAAqB,EACjC75B,YAAY45B,SAAW,EACvB55B,YAAYoiD,cAAgB,EAC5BpiD,YAAYqiD,YAAc,EAC1BriD,YAAYsiD,YAAc,EAC1BtiD,YAAYuiD,UAAY,GACxBviD,YAAYwiD,UAAY,GACxBxiD,YAAYyiD,WAAa,GACzBziD,YAAY0iD,SAAW,GACvB1iD,YAAY2iD,qBAAuB,GACnC3iD,YAAY4iD,qBAAuB,GACnC5iD,YAAY6iD,yBAA2B,GACvC7iD,YAAY8iD,uBAAyB,GACrC9iD,YAAY+iD,mBAAqB,GACjC/iD,YAAY85C,IAAM,GAClB95C,YAAYA,YAAYgiD,gBAAkB,iBAC1ChiD,YAAYA,YAAYiiD,cAAgB,eACxCjiD,YAAYA,YAAYkiD,mBAAqB,oBAC7CliD,YAAYA,YAAYmiD,WAAa,YACrCniD,YAAYA,YAAYC,MAAQ,OAChCD,YAAYA,YAAY65B,oBAAsB,qBAC9C75B,YAAYA,YAAY45B,UAAY,WACpC55B,YAAYA,YAAYoiD,eAAiB,gBACzCpiD,YAAYA,YAAYqiD,aAAe,cACvCriD,YAAYA,YAAYsiD,aAAe,cACvCtiD,YAAYA,YAAYuiD,WAAa,YACrCviD,YAAYA,YAAYwiD,WAAa,YACrCxiD,YAAYA,YAAYyiD,YAAc,aACtCziD,YAAYA,YAAY0iD,UAAY,WACpC1iD,YAAYA,YAAY2iD,sBAAwB,uBAChD3iD,YAAYA,YAAY4iD,sBAAwB,uBAChD5iD,YAAYA,YAAY6iD,0BAA4B,2BACpD7iD,YAAYA,YAAY8iD,wBAA0B,yBAClD9iD,YAAYA,YAAY+iD,oBAAsB,qBAC9C/iD,YAAYA,YAAY85C,KAAO,KAC/B,IAAIkJ,SAAW,WAMX,QAASA,SAAQ/tD,KAAMiL,MAAOC,YAC1BzS,KAAKuH,KAAOA,KACZvH,KAAKwS,MAAQA,MACbxS,KAAKyS,WAAaA,WAEtB,MAAO6iD,YAEPC,WAAc,SAAU9S,QAOxB,QAAS8S,YAAWC,SAAUC,UAAWzP,MACrC,GAAI3e,OAAQob,OAAOE,KAAK3iD,KAAMgmD,KAAMwP,WAAax1D,IAEjD,OADAqnC,OAAMouB,UAAYA,UACXpuB,MAEX,MAXA+B,WAAUmsB,WAAY9S,QAWf8S,YACT7B,YACEgC,eAAkB,WAKlB,QAASA,gBAAe3K,OAAQ1uC,QAC5Brc,KAAK+qD,OAASA,OACd/qD,KAAKqc,OAASA,OAElB,MAAOq5C,mBAgBUC,mBAAqB,SAgBtCC,kBAAqB,WAIrB,QAASA,mBAAkBryD,OACvBvD,KAAKuD,MAAQA,MAEjB,MAAOqyD,sBAEPllD,WAAc,WAOd,QAASA,YAAWmlD,MAAOC,kBAAmBC,aAAcC,sBAC3B,SAAzBA,uBAAmCA,qBAAuBvlD,8BAC9DzQ,KAAK61D,MAAQA,MACb71D,KAAK81D,kBAAoBA,kBACzB91D,KAAK+1D,aAAeA,aACpB/1D,KAAKg2D,qBAAuBA,qBAC5Bh2D,KAAKi2D,OAAQ,EACbj2D,KAAKk2D,WAAY,EACjBl2D,KAAKm2D,QAAS,EACdn2D,KAAKo2D,MAAQ,EACbp2D,KAAKq2D,SAAU,EACfr2D,KAAKs2D,uBACLt2D,KAAKu2D,kBAAmB,EACxBv2D,KAAK+qD,UACL/qD,KAAKqc,UACLrc,KAAKw2D,OAASX,MAAMvjC,QACpBtyB,KAAKy2D,QAAUZ,MAAMvjC,QAAQnwB,OAC7BnC,KAAK02D,WAspBT,MAhpBAhmD,YAAW+2B,UAAUkvB,wBAA0B,SAAUrkC,SAKrD,MAAOA,SAAQxwB,QAAQ6zD,mBAAoB,OAK/CjlD,WAAW+2B,UAAUt3B,SAAW,WAC5B,KAAOnQ,KAAKi2D,QAAUroD,MAAM,CACxB,GAAqB2B,OAAQvP,KAAK42D,cAClC,KACQ52D,KAAK62D,iBAAiB7M,KAClBhqD,KAAK62D,iBAAiBvN,OAClBtpD,KAAK62D,iBAAiB1M,WACtBnqD,KAAK82D,cAAcvnD,OAEdvP,KAAK62D,iBAAiB3oD,QAC3BlO,KAAK+2D,gBAAgBxnD,OAGrBvP,KAAKg3D,gBAAgBznD,OAGpBvP,KAAK62D,iBAAiB1lD,QAC3BnR,KAAKi3D,iBAAiB1nD,OAGtBvP,KAAKk3D,gBAAgB3nD,OAGlBvP,KAAK+1D,cAAgB/1D,KAAKm3D,0BACjCn3D,KAAKo3D,eAGb,MAAO9gD,GACH,KAAIA,YAAas/C,oBAIb,KAAMt/C,EAHNtW,MAAKqc,OAAO1b,KAAK2V,EAAE/S,QAS/B,MAFAvD,MAAKq3D,YAAY/kD,YAAY85C,KAC7BpsD,KAAKs3D,cACE,GAAI5B,gBAAexjD,gBAAgBlS,KAAK+qD,QAAS/qD,KAAKqc,SAMjE3L,WAAW+2B,UAAU0vB,uBAAyB,WAC1C,GAAI1lD,qBAAqBzR,KAAKw2D,OAAQx2D,KAAKm2D,OAAQn2D,KAAKg2D,sBAEpD,MADAh2D,MAAKu3D,8BACE,CAEX,IAAI1lD,qBAAqB7R,KAAKi2D,QAAUj2D,KAAKw3D,qBAEzC,MADAx3D,MAAKy3D,8BACE,CAEX,IAAIz3D,KAAKi2D,QAAUvL,QAAS,CACxB,GAAI1qD,KAAK03D,qBAEL,MADA13D,MAAK23D,4BACE,CAEX,IAAI33D,KAAKw3D,qBAEL,MADAx3D,MAAK43D,4BACE,EAGf,OAAO,GAKXlnD,WAAW+2B,UAAUmvB,aAAe,WAChC,MAAO,IAAI5mD,eAAchQ,KAAK61D,MAAO71D,KAAKm2D,OAAQn2D,KAAKo2D,MAAOp2D,KAAKq2D,UAOvE3lD,WAAW+2B,UAAUowB,SAAW,SAAUtoD,MAAOC,KAG7C,MAFc,UAAVD,QAAoBA,MAAQvP,KAAK42D,gBACzB,SAARpnD,MAAkBA,IAAMxP,KAAK42D,gBAC1B,GAAI7mD,iBAAgBR,MAAOC,MAOtCkB,WAAW+2B,UAAU4vB,YAAc,SAAU9vD,KAAMgI,OACjC,SAAVA,QAAoBA,MAAQvP,KAAK42D,gBACrC52D,KAAK83D,mBAAqBvoD,MAC1BvP,KAAK+3D,kBAAoBxwD,MAO7BmJ,WAAW+2B,UAAU6vB,UAAY,SAAU9kD,MAAOhD,KAClC,SAARA,MAAkBA,IAAMxP,KAAK42D,eACjC,IAAqBnwD,OAAQ,GAAI6uD,SAAQt1D,KAAK+3D,kBAAmBvlD,MAAO,GAAIzC,iBAAgB/P,KAAK83D,mBAAoBtoD,KAIrH,OAHAxP,MAAK+qD,OAAOpqD,KAAK8F,OACjBzG,KAAK83D,mBAAqB,KAC1B93D,KAAK+3D,kBAAoB,KAClBtxD,OAOXiK,WAAW+2B,UAAUuwB,aAAe,SAAU10D,IAAK0iD,MAC3ChmD,KAAKw3D,uBACLl0D,KAAO,qFAEX,IAAqBC,OAAQ,GAAIgyD,YAAWjyD,IAAKtD,KAAK+3D,kBAAmB/R,KAGzE,OAFAhmD,MAAK83D,mBAAqB,KAC1B93D,KAAK+3D,kBAAoB,KAClB,GAAInC,mBAAkBryD,QAKjCmN,WAAW+2B,UAAUivB,SAAW,WAC5B,GAAI12D,KAAKm2D,QAAUn2D,KAAKy2D,QACpB,KAAMz2D,MAAKg4D,aAAarnD,6BAA6B/C,MAAO5N,KAAK63D,WAEjE73D,MAAKi2D,QAAUvnD,KACf1O,KAAKo2D,QACLp2D,KAAKq2D,QAAU,GAEVr2D,KAAKi2D,QAAUvnD,KAAO1O,KAAKi2D,QAAUpnD,KAC1C7O,KAAKq2D,UAETr2D,KAAKm2D,SACLn2D,KAAKi2D,MAAQj2D,KAAKm2D,QAAUn2D,KAAKy2D,QAAU7oD,KAAO5N,KAAKw2D,OAAOnyD,WAAWrE,KAAKm2D,QAC9En2D,KAAKk2D,UACDl2D,KAAKm2D,OAAS,GAAKn2D,KAAKy2D,QAAU7oD,KAAO5N,KAAKw2D,OAAOnyD,WAAWrE,KAAKm2D,OAAS,IAMtFzlD,WAAW+2B,UAAUovB,iBAAmB,SAAUjmD,UAC9C,MAAI5Q,MAAKi2D,QAAUrlD,WACf5Q,KAAK02D,YACE,IAQfhmD,WAAW+2B,UAAUwwB,gCAAkC,SAAUrnD,UAC7D,QAAIkB,+BAA+B9R,KAAKi2D,MAAOrlD,YAC3C5Q,KAAK02D,YACE,IAQfhmD,WAAW+2B,UAAUywB,iBAAmB,SAAUtnD,UAC9C,GAAqBu1C,UAAWnmD,KAAK42D,cACrC,KAAK52D,KAAK62D,iBAAiBjmD,UACvB,KAAM5Q,MAAKg4D,aAAarnD,6BAA6B3Q,KAAKi2D,OAAQj2D,KAAK63D,SAAS1R,SAAUA,YAOlGz1C,WAAW+2B,UAAU0wB,YAAc,SAAUC,OACzC,GAAqBniD,KAAMmiD,MAAMj2D,MACjC,IAAInC,KAAKm2D,OAASlgD,IAAMjW,KAAKy2D,QACzB,OAAO,CAGX,KAAK,GADgB4B,iBAAkBr4D,KAAKs4D,gBAClB1sD,EAAI,EAAGA,EAAIqK,IAAKrK,IACtC,IAAK5L,KAAK62D,iBAAiBuB,MAAM/zD,WAAWuH,IAIxC,MADA5L,MAAKu4D,iBAAiBF,kBACf,CAGf,QAAO,GAMX3nD,WAAW+2B,UAAU+wB,2BAA6B,SAAUJ,OACxD,IAAK,GAAqBxsD,GAAI,EAAGA,EAAIwsD,MAAMj2D,OAAQyJ,IAC/C,IAAK5L,KAAKi4D,gCAAgCG,MAAM/zD,WAAWuH,IACvD,OAAO,CAGf,QAAO,GAMX8E,WAAW+2B,UAAUgxB,YAAc,SAAUL,OACzC,GAAqBjS,UAAWnmD,KAAK42D,cACrC,KAAK52D,KAAKm4D,YAAYC,OAClB,KAAMp4D,MAAKg4D,aAAarnD,6BAA6B3Q,KAAKi2D,OAAQj2D,KAAK63D,SAAS1R,YAOxFz1C,WAAW+2B,UAAUixB,wBAA0B,SAAUC,WACrD,MAAQA,UAAU34D,KAAKi2D,QACnBj2D,KAAK02D,YAQbhmD,WAAW+2B,UAAUmxB,wBAA0B,SAAUD,UAAW1iD,KAChE,GAAqB1G,OAAQvP,KAAK42D,cAElC,IADA52D,KAAK04D,wBAAwBC,WACzB34D,KAAKm2D,OAAS5mD,MAAMmC,OAASuE,IAC7B,KAAMjW,MAAKg4D,aAAarnD,6BAA6B3Q,KAAKi2D,OAAQj2D,KAAK63D,SAAStoD,MAAOA,SAO/FmB,WAAW+2B,UAAUoxB,kBAAoB,SAAUhoD,MAC/C,KAAO7Q,KAAKi2D,QAAUplD,MAClB7Q,KAAK02D,YAObhmD,WAAW+2B,UAAUqxB,UAAY,SAAUC,gBACvC,GAAIA,gBAAkB/4D,KAAKi2D,QAAUxM,WACjC,MAAOzpD,MAAKg5D,eAGZ,IAAqB70D,OAAQnE,KAAKm2D,MAElC,OADAn2D,MAAK02D,WACE12D,KAAKw2D,OAAOryD,QAM3BuM,WAAW+2B,UAAUuxB,cAAgB,WACjC,GAAqBzpD,OAAQvP,KAAK42D,cAElC,IADA52D,KAAK02D,YACD12D,KAAK62D,iBAAiBtN,OAkBrB,CACD,GAAqB0P,eAAgBj5D,KAAKs4D,eAE1C,IADAt4D,KAAK04D,wBAAwBlnD,kBACzBxR,KAAKi2D,OAAS1kD,WAEd,MADAvR,MAAKu4D,iBAAiBU,eACf,GAEXj5D,MAAK02D,UACL,IAAqBhyD,MAAO1E,KAAKw2D,OAAOvuC,UAAU1Y,MAAMmC,OAAS,EAAG1R,KAAKm2D,OAAS,GAC7DtlD,KAAOw7B,eAAe3nC,KAC3C,KAAKmM,KACD,KAAM7Q,MAAKg4D,aAAalnD,uBAAuBpM,MAAO1E,KAAK63D,SAAStoD,OAExE,OAAOsB,MA9BP,GAAqBqoD,OAAQl5D,KAAK62D,iBAAiBrM,KAAOxqD,KAAK62D,iBAAiB3M,IAC3DiP,YAAcn5D,KAAK42D,eAAellD,MAEvD,IADA1R,KAAK04D,wBAAwBpnD,kBACzBtR,KAAKi2D,OAAS1kD,WACd,KAAMvR,MAAKg4D,aAAarnD,6BAA6B3Q,KAAKi2D,OAAQj2D,KAAK63D,WAE3E73D,MAAK02D,UACL,IAAqB0C,QAASp5D,KAAKw2D,OAAOvuC,UAAUkxC,YAAan5D,KAAKm2D,OAAS,EAC/E,KACI,GAAqBvlD,UAAW1B,SAASkqD,OAAQF,MAAQ,GAAK,GAC9D,OAAO30D,QAAOC,aAAaoM,UAE/B,MAAO0F,GACH,GAAqB+iD,QAASr5D,KAAKw2D,OAAOvuC,UAAU1Y,MAAMmC,OAAS,EAAG1R,KAAKm2D,OAAS,EACpF,MAAMn2D,MAAKg4D,aAAalnD,uBAAuBuoD,QAASr5D,KAAK63D,SAAStoD,UAyBlFmB,WAAW+2B,UAAU6xB,gBAAkB,SAAUP,eAAgBQ,eAAgBC,gBAC7E,GAAqBC,eACAC,UAAY15D,KAAK42D,cACtC52D,MAAKq3D,YAAY0B,eAAiBzmD,YAAY65B,mBAAqB75B,YAAY45B,SAAUwtB,UAEzF,KADA,GAAqBlnD,YACR,CAET,GADAinD,cAAgBz5D,KAAK42D,eACjB52D,KAAK62D,iBAAiB0C,iBAAmBC,iBACzC,KAMJ,KAJIx5D,KAAKm2D,OAASsD,cAAc/nD,QAE5Bc,MAAM7R,KAAKX,KAAKw2D,OAAOvuC,UAAUwxC,cAAc/nD,OAAQ1R,KAAKm2D,SAEzDn2D,KAAKi2D,QAAUsD,gBAClB/mD,MAAM7R,KAAKX,KAAK84D,UAAUC,iBAGlC,MAAO/4D,MAAKs3D,WAAWt3D,KAAK22D,wBAAwBnkD,MAAM6C,KAAK,MAAOokD,gBAM1E/oD,WAAW+2B,UAAUsvB,gBAAkB,SAAUxnD,OAC7C,GAAI83B,OAAQrnC,IACZA,MAAKq3D,YAAY/kD,YAAYoiD,cAAenlD,OAC5CvP,KAAKk4D,iBAAiBhqD,QACtBlO,KAAKs3D,aACL,IAAqBqC,WAAY35D,KAAKs5D,iBAAgB,EAAOprD,OAAQ,WAAc,MAAOm5B,OAAM8wB,YAAY,OAC5Gn4D,MAAKq3D,YAAY/kD,YAAYqiD,YAAagF,UAAUlnD,WAAWjD,KAC/DxP,KAAKs3D,eAMT5mD,WAAW+2B,UAAUqvB,cAAgB,SAAUvnD,OAC3C,GAAI83B,OAAQrnC,IACZA,MAAKq3D,YAAY/kD,YAAYsiD,YAAarlD,OAC1CvP,KAAKy4D,YAAY,UACjBz4D,KAAKs3D,aACL,IAAqBqC,WAAY35D,KAAKs5D,iBAAgB,EAAOjP,UAAW,WAAc,MAAOhjB,OAAM8wB,YAAY,OAC/Gn4D,MAAKq3D,YAAY/kD,YAAYuiD,UAAW8E,UAAUlnD,WAAWjD,KAC7DxP,KAAKs3D,eAMT5mD,WAAW+2B,UAAUuvB,gBAAkB,SAAUznD,OAC7CvP,KAAKq3D,YAAY/kD,YAAY0iD,SAAUzlD,OACvCvP,KAAK64D,kBAAkB3nD,KACvBlR,KAAK02D,WACL12D,KAAKs3D,WAAWt3D,KAAKw2D,OAAOvuC,UAAU1Y,MAAMmC,OAAS,EAAG1R,KAAKm2D,OAAS,MAK1EzlD,WAAW+2B,UAAUmyB,sBAAwB,WAGzC,IAFA,GAAqBC,mBAAoB75D,KAAKm2D,OACzB90D,OAAS,KACvBrB,KAAKi2D,QAAUlM,SAAW14C,YAAYrR,KAAKi2D,QAC9Cj2D,KAAK02D,UAET,IAAqBoD,UACjB95D,MAAKi2D,QAAUlM,QACf/pD,KAAK02D,WACLr1D,OAASrB,KAAKw2D,OAAOvuC,UAAU4xC,kBAAmB75D,KAAKm2D,OAAS,GAChE2D,UAAY95D,KAAKm2D,QAGjB2D,UAAYD,kBAEhB75D,KAAK44D,wBAAwB3nD,UAAWjR,KAAKm2D,SAAW2D,UAAY,EAAI,EACxE,IAAqBp1D,MAAO1E,KAAKw2D,OAAOvuC,UAAU6xC,UAAW95D,KAAKm2D,OAClE,QAAQ90D,OAAQqD,OAMpBgM,WAAW+2B,UAAUyvB,gBAAkB,SAAU3nD,OAC7C,GACqB/N,SACAu4D,iBAFAC,SAAWh6D,KAAKs4D,eAGrC,KACI,IAAKttD,cAAchL,KAAKi2D,OACpB,KAAMj2D,MAAKg4D,aAAarnD,6BAA6B3Q,KAAKi2D,OAAQj2D,KAAK63D,WAE3E,IAAqBiC,WAAY95D,KAAKm2D,MAKtC,KAJAn2D,KAAKi6D,qBAAqB1qD,OAC1B/N,QAAUxB,KAAKw2D,OAAOvuC,UAAU6xC,UAAW95D,KAAKm2D,QAChD4D,iBAAmBv4D,QAAQE,cAC3B1B,KAAK04D,wBAAwB1nD,iBACtBhR,KAAKi2D,QAAU9kD,QAAUnR,KAAKi2D,QAAU/kD,KAC3ClR,KAAKk6D,wBACLl6D,KAAK04D,wBAAwB1nD,iBACzBhR,KAAK62D,iBAAiBzlD,OACtBpR,KAAK04D,wBAAwB1nD,iBAC7BhR,KAAKm6D,0BAETn6D,KAAK04D,wBAAwB1nD,gBAEjChR,MAAKo6D,qBAET,MAAO9jD,GACH,GAAIA,YAAas/C,mBAMb,MAJA51D,MAAKu4D,iBAAiByB,UAEtBh6D,KAAKq3D,YAAY/kD,YAAYC,KAAMhD,WACnCvP,MAAKs3D,WAAW,KAGpB,MAAMhhD,GAEV,GAAqB+jD,kBAAmBr6D,KAAK81D,kBAAkBt0D,SAAS26C,WACpEke,oBAAqBpuB,eAAeC,SACpClsC,KAAKs6D,4BAA4BP,kBAAkB,GAE9CM,mBAAqBpuB,eAAeE,oBACzCnsC,KAAKs6D,4BAA4BP,kBAAkB,IAQ3DrpD,WAAW+2B,UAAU6yB,4BAA8B,SAAUP,iBAAkBhB,gBAC3E,GAAI1xB,OAAQrnC,KACS25D,UAAY35D,KAAKs5D,gBAAgBP,eAAgB/O,IAAK,WACvE,QAAK3iB,MAAMwvB,iBAAiB1lD,UAE5Bk2B,MAAMqxB,wBAAwB1nD,mBACzBq2B,MAAMmxB,2BAA2BuB,oBAEtC1yB,MAAMqxB,wBAAwB1nD,iBACvBq2B,MAAMwvB,iBAAiB3lD;EAElClR,MAAKq3D,YAAY/kD,YAAYmiD,UAAWkF,UAAUlnD,WAAWjD,KAC7DxP,KAAKs3D,WAAW,KAAMyC,oBAM1BrpD,WAAW+2B,UAAUwyB,qBAAuB,SAAU1qD,OAClDvP,KAAKq3D,YAAY/kD,YAAYgiD,eAAgB/kD,MAC7C,IAAqBiD,OAAQxS,KAAK45D,uBAClC55D,MAAKs3D,UAAU9kD,QAKnB9B,WAAW+2B,UAAUyyB,sBAAwB,WACzCl6D,KAAKq3D,YAAY/kD,YAAYwiD,UAC7B,IAAqByF,eAAgBv6D,KAAK45D,uBAC1C55D,MAAKs3D,UAAUiD,gBAKnB7pD,WAAW+2B,UAAU0yB,uBAAyB,WAC1Cn6D,KAAKq3D,YAAY/kD,YAAYyiD,WAC7B,IAAqBlyD,MACrB,IAAI7C,KAAKi2D,QAAU5nD,KAAOrO,KAAKi2D,QAAU3nD,IAAK,CAC1C,GAAqBksD,WAAYx6D,KAAKi2D,KACtCj2D,MAAK02D,UAEL,KADA,GAAqBlkD,UACdxS,KAAKi2D,QAAUuE,WAClBhoD,MAAM7R,KAAKX,KAAK84D,WAAU,GAE9Bj2D,OAAQ2P,MAAM6C,KAAK,IACnBrV,KAAK02D,eAEJ,CACD,GAAqB+D,YAAaz6D,KAAKm2D,MACvCn2D,MAAK44D,wBAAwB3nD,UAAW,GACxCpO,MAAQ7C,KAAKw2D,OAAOvuC,UAAUwyC,WAAYz6D,KAAKm2D,QAEnDn2D,KAAKs3D,WAAWt3D,KAAK22D,wBAAwB9zD,UAKjD6N,WAAW+2B,UAAU2yB,mBAAqB,WACtC,GAAqB3E,WAAYz1D,KAAK62D,iBAAiB1lD,QAAUmB,YAAYkiD,kBAAoBliD,YAAYiiD,YAC7Gv0D,MAAKq3D,YAAY5B,WACjBz1D,KAAKk4D,iBAAiBhnD,KACtBlR,KAAKs3D,eAMT5mD,WAAW+2B,UAAUwvB,iBAAmB,SAAU1nD,OAC9CvP,KAAKq3D,YAAY/kD,YAAYmiD,UAAWllD,OACxCvP,KAAK04D,wBAAwB1nD,gBAC7B,IAAqBupD,eAAgBv6D,KAAK45D,uBAC1C55D,MAAK04D,wBAAwB1nD,iBAC7BhR,KAAKk4D,iBAAiBhnD,KACtBlR,KAAKs3D,UAAUiD,gBAKnB7pD,WAAW+2B,UAAU8vB,2BAA6B,WAC9Cv3D,KAAKq3D,YAAY/kD,YAAY2iD,qBAAsBj1D,KAAK42D,gBACxD52D,KAAKk4D,iBAAiBtmD,SACtB5R,KAAKs3D,cACLt3D,KAAKs2D,oBAAoB31D,KAAK2R,YAAY2iD,sBAC1Cj1D,KAAKq3D,YAAY/kD,YAAY45B,SAAUlsC,KAAK42D,eAC5C,IAAqBvuC,WAAYroB,KAAK06D,WAAW7Q,OACjD7pD,MAAKs3D,WAAWjvC,WAAYroB,KAAK42D,gBACjC52D,KAAKk4D,iBAAiBrO,QACtB7pD,KAAK04D,wBAAwB1nD,iBAC7BhR,KAAKq3D,YAAY/kD,YAAY45B,SAAUlsC,KAAK42D,eAC5C,IAAqBrvD,MAAOvH,KAAK06D,WAAW7Q,OAC5C7pD,MAAKs3D,WAAW/vD,MAAOvH,KAAK42D,gBAC5B52D,KAAKk4D,iBAAiBrO,QACtB7pD,KAAK04D,wBAAwB1nD,kBAKjCN,WAAW+2B,UAAUgwB,2BAA6B,WAC9Cz3D,KAAKq3D,YAAY/kD,YAAY4iD,qBAAsBl1D,KAAK42D,eACxD,IAAqB/zD,OAAQ7C,KAAK06D,WAAW9oD,SAASjP,MACtD3C,MAAKs3D,WAAWz0D,OAAQ7C,KAAK42D,gBAC7B52D,KAAK04D,wBAAwB1nD,iBAC7BhR,KAAKq3D,YAAY/kD,YAAY6iD,yBAA0Bn1D,KAAK42D,gBAC5D52D,KAAKk4D,iBAAiBtmD,SACtB5R,KAAKs3D,aAAct3D,KAAK42D,gBACxB52D,KAAK04D,wBAAwB1nD,iBAC7BhR,KAAKs2D,oBAAoB31D,KAAK2R,YAAY6iD,2BAK9CzkD,WAAW+2B,UAAUkwB,yBAA2B,WAC5C33D,KAAKq3D,YAAY/kD,YAAY8iD,uBAAwBp1D,KAAK42D,gBAC1D52D,KAAKk4D,iBAAiBxN,SACtB1qD,KAAKs3D,aAAct3D,KAAK42D,gBACxB52D,KAAK04D,wBAAwB1nD,iBAC7BhR,KAAKs2D,oBAAoBnvC,OAK7BzW,WAAW+2B,UAAUmwB,yBAA2B,WAC5C53D,KAAKq3D,YAAY/kD,YAAY+iD,mBAAoBr1D,KAAK42D,gBACtD52D,KAAKk4D,iBAAiBxN,SACtB1qD,KAAKs3D,cACLt3D,KAAKs2D,oBAAoBnvC,OAK7BzW,WAAW+2B,UAAU2vB,aAAe,WAChC,GAAqB7nD,OAAQvP,KAAK42D,cAClC52D,MAAKq3D,YAAY/kD,YAAYC,KAAMhD,MACnC,IAAqBiD,SACrB,GACQxS,MAAKg2D,sBAAwBh2D,KAAKm4D,YAAYn4D,KAAKg2D,qBAAqBzmD,QACxEiD,MAAM7R,KAAKX,KAAKg2D,qBAAqBzmD,OACrCvP,KAAKu2D,kBAAmB,GAEnBv2D,KAAKg2D,sBAAwBh2D,KAAKu2D,kBACvCv2D,KAAKm4D,YAAYn4D,KAAKg2D,qBAAqBxmD,MAC3CgD,MAAM7R,KAAKX,KAAKg2D,qBAAqBxmD,KACrCxP,KAAKu2D,kBAAmB,GAGxB/jD,MAAM7R,KAAKX,KAAK84D,WAAU,WAExB94D,KAAK26D,aACf36D,MAAKs3D,WAAWt3D,KAAK22D,wBAAwBnkD,MAAM6C,KAAK,QAK5D3E,WAAW+2B,UAAUkzB,WAAa,WAC9B,GAAI36D,KAAKi2D,QAAUjM,KAAOhqD,KAAKi2D,QAAUroD,KACrC,OAAO,CAEX,IAAI5N,KAAK+1D,eAAiB/1D,KAAKu2D,iBAAkB,CAC7C,GAAI9kD,qBAAqBzR,KAAKw2D,OAAQx2D,KAAKm2D,OAAQn2D,KAAKg2D,sBAEpD,OAAO,CAEX,IAAIh2D,KAAKi2D,QAAUvL,SAAW1qD,KAAK03D,qBAE/B,OAAO,EAGf,OAAO,GAKXhnD,WAAW+2B,UAAU6wB,cAAgB,WACjC,OAAQt4D,KAAKi2D,MAAOj2D,KAAKm2D,OAAQn2D,KAAKq2D,QAASr2D,KAAKo2D,MAAOp2D,KAAK+qD,OAAO5oD,SAM3EuO,WAAW+2B,UAAUizB,WAAa,SAAU7pD,MACxC,GAAqBtB,OAAQvP,KAAKm2D,MAElC,OADAn2D,MAAK64D,kBAAkBhoD,MAChB7Q,KAAKw2D,OAAOvuC,UAAU1Y,MAAOvP,KAAKm2D,SAM7CzlD,WAAW+2B,UAAU8wB,iBAAmB,SAAUhL,UAC9CvtD,KAAKi2D,MAAQ1I,SAAS,GACtBvtD,KAAKm2D,OAAS5I,SAAS,GACvBvtD,KAAKq2D,QAAU9I,SAAS,GACxBvtD,KAAKo2D,MAAQ7I,SAAS,EACtB,IAAqBqN,UAAWrN,SAAS,EACrCqN,UAAW56D,KAAK+qD,OAAO5oD,SAEvBnC,KAAK+qD,OAAS/qD,KAAK+qD,OAAO9pD,MAAM,EAAG25D,YAM3ClqD,WAAW+2B,UAAUiwB,mBAAqB,WACtC,MAAO13D,MAAKs2D,oBAAoBn0D,OAAS,GACrCnC,KAAKs2D,oBAAoBt2D,KAAKs2D,oBAAoBn0D,OAAS,KACvDmQ,YAAY6iD,0BAKxBzkD,WAAW+2B,UAAU+vB,mBAAqB,WACtC,MAAOx3D,MAAKs2D,oBAAoBn0D,OAAS,GACrCnC,KAAKs2D,oBAAoBt2D,KAAKs2D,oBAAoBn0D,OAAS,KACvDmQ,YAAY2iD,sBAEjBvkD,cA2FPmqD,UAAa,SAAUpY,QAOvB,QAASoY,WAAUh6D,YAAamlD,KAAM1iD,KAClC,GAAI+jC,OAAQob,OAAOE,KAAK3iD,KAAMgmD,KAAM1iD,MAAQtD,IAE5C,OADAqnC,OAAMxmC,YAAcA,YACbwmC,MAWX,MApBA+B,WAAUyxB,UAAWpY,QAiBrBoY,UAAUxzD,OAAS,SAAUxG,YAAamlD,KAAM1iD,KAC5C,MAAO,IAAIu3D,WAAUh6D,YAAamlD,KAAM1iD,MAErCu3D,WACTnH,YACEoH,gBAAmB,WAKnB,QAASA,iBAAgBC,UAAW1+C,QAChCrc,KAAK+6D,UAAYA,UACjB/6D,KAAKqc,OAASA,OAElB,MAAOy+C,oBAEPE,SAAY,WAIZ,QAASA,UAAS1qD,kBACdtQ,KAAKsQ,iBAAmBA,iBAgB5B,MAPA0qD,UAASvzB,UAAUxgC,MAAQ,SAAUmJ,OAAQC,IAAK4qD,oBAAqBzqD,qBACvC,SAAxByqD,sBAAkCA,qBAAsB,GAChC,SAAxBzqD,sBAAkCA,oBAAsBC,6BAC5D,IAAqByqD,iBAAkB/qD,SAASC,OAAQC,IAAKrQ,KAAKsQ,iBAAkB2qD,oBAAqBzqD,qBACpF2qD,cAAgB,GAAIC,cAAaF,gBAAgBnQ,OAAQ/qD,KAAKsQ,kBAAkB+qD,OACrG,OAAO,IAAIP,iBAAgBK,cAAcJ,UAAaG,gBAAuB,OAAExxD,OAAOyxD,cAAc9+C,UAEjG2+C,YAEPI,aAAgB,WAKhB,QAASA,cAAarQ,OAAQz6C,kBAC1BtQ,KAAK+qD,OAASA,OACd/qD,KAAKsQ,iBAAmBA,iBACxBtQ,KAAKm2D,QAAS,EACdn2D,KAAKs7D,cACLt7D,KAAKu7D,WACLv7D,KAAKw7D,iBACLx7D,KAAK02D,WA4XT,MAvXA0E,cAAa3zB,UAAU4zB,MAAQ,WAC3B,KAAOr7D,KAAKi2D,MAAM1uD,OAAS+K,YAAY85C,KAC/BpsD,KAAKi2D,MAAM1uD,OAAS+K,YAAYgiD,eAChCt0D,KAAKy7D,iBAAiBz7D,KAAK02D,YAEtB12D,KAAKi2D,MAAM1uD,OAAS+K,YAAYmiD,UACrCz0D,KAAK07D,eAAe17D,KAAK02D,YAEpB12D,KAAKi2D,MAAM1uD,OAAS+K,YAAYsiD,aACrC50D,KAAK27D,oBACL37D,KAAK82D,cAAc92D,KAAK02D,aAEnB12D,KAAKi2D,MAAM1uD,OAAS+K,YAAYoiD,eACrC10D,KAAK27D,oBACL37D,KAAK+2D,gBAAgB/2D,KAAK02D,aAErB12D,KAAKi2D,MAAM1uD,OAAS+K,YAAYC,MAAQvS,KAAKi2D,MAAM1uD,OAAS+K,YAAY45B,UAC7ElsC,KAAKi2D,MAAM1uD,OAAS+K,YAAY65B,oBAChCnsC,KAAK27D,oBACL37D,KAAKo3D,aAAap3D,KAAK02D,aAElB12D,KAAKi2D,MAAM1uD,OAAS+K,YAAY2iD,qBACrCj1D,KAAK47D,kBAAkB57D,KAAK02D,YAI5B12D,KAAK02D,UAGb,OAAO,IAAIoE,iBAAgB96D,KAAKs7D,WAAYt7D,KAAKu7D,UAKrDH,aAAa3zB,UAAUivB,SAAW,WAC9B,GAAqBmF,MAAO77D,KAAKi2D,KAMjC,OALIj2D,MAAKm2D,OAASn2D,KAAK+qD,OAAO5oD,OAAS,GAEnCnC,KAAKm2D,SAETn2D,KAAKi2D,MAAQj2D,KAAK+qD,OAAO/qD,KAAKm2D,QACvB0F,MAMXT,aAAa3zB,UAAUq0B,WAAa,SAAUv0D,MAC1C,MAAIvH,MAAKi2D,MAAM1uD,OAASA,KACbvH,KAAK02D,WAET,MAMX0E,aAAa3zB,UAAUqvB,cAAgB,SAAUiF,YAC7C/7D,KAAKo3D,aAAap3D,KAAK02D,YACvB12D,KAAK87D,WAAWxpD,YAAYuiD,YAMhCuG,aAAa3zB,UAAUsvB,gBAAkB,SAAUtwD,OAC/C,GAAqB+F,MAAOxM,KAAK87D,WAAWxpD,YAAY45B,SACxDlsC,MAAK87D,WAAWxpD,YAAYqiD,YAC5B,IAAqB9xD,OAAgB,MAAR2J,KAAeA,KAAKgG,MAAM,GAAG7P,OAAS,IACnE3C,MAAKg8D,aAAa,GAAIloD,SAAQjR,MAAO4D,MAAMgM,cAM/C2oD,aAAa3zB,UAAUm0B,kBAAoB,SAAUn1D,OAKjD,IAJA,GAAqB0W,aAAcnd,KAAK02D,WACnBnvD,KAAOvH,KAAK02D,WACZl6C,SAEdxc,KAAKi2D,MAAM1uD,OAAS+K,YAAY4iD,sBAAsB,CACzD,GAAqB+G,SAAUj8D,KAAKk8D,qBACpC,KAAKD,QACD,MACJz/C,OAAM7b,KAAKs7D,SAGf,GAAIj8D,KAAKi2D,MAAM1uD,OAAS+K,YAAY+iD,mBAEhC,WADAr1D,MAAKu7D,QAAQ56D,KAAKk6D,UAAUxzD,OAAO,KAAMrH,KAAKi2D,MAAMxjD,WAAY,qCAGpE,IAAqBA,YAAa,GAAI1C,iBAAgBtJ,MAAMgM,WAAWlD,MAAOvP,KAAKi2D,MAAMxjD,WAAWjD,IACpGxP,MAAKg8D,aAAa,GAAInI,WAAU12C,YAAY3K,MAAM,GAAIjL,KAAKiL,MAAM,GAAIgK,MAAO/J,WAAY0K,YAAY1K,aACpGzS,KAAK02D,YAKT0E,aAAa3zB,UAAUy0B,oBAAsB,WACzC,GAAqBr5D,OAAQ7C,KAAK02D,UAElC,IAAI12D,KAAKi2D,MAAM1uD,OAAS+K,YAAY6iD,yBAEhC,MADAn1D,MAAKu7D,QAAQ56D,KAAKk6D,UAAUxzD,OAAO,KAAMrH,KAAKi2D,MAAMxjD,WAAY,sCACzD,IAGX,IAAqBlD,OAAQvP,KAAK02D,WACbhP,IAAM1nD,KAAKm8D,2BAA2B5sD,MAC3D,KAAKm4C,IACD,MAAO,KACX,IAAqBl4C,KAAMxP,KAAK02D,UAChChP,KAAI/mD,KAAK,GAAI20D,SAAQhjD,YAAY85C,OAAS58C,IAAIiD,YAE9C,IAAqB2pD,WAAY,GAAIhB,cAAa1T,IAAK1nD,KAAKsQ,kBAAkB+qD,OAC9E,IAAIe,UAAU//C,OAAOla,OAAS,EAE1B,MADAnC,MAAKu7D,QAAUv7D,KAAKu7D,QAAQ7xD,OAAyB0yD,UAAgB,QAC9D,IAEX,IAAqB3pD,YAAa,GAAI1C,iBAAgBlN,MAAM4P,WAAWlD,MAAOC,IAAIiD,WAAWjD,KACxEwkD,cAAgB,GAAIjkD,iBAAgBR,MAAMkD,WAAWlD,MAAOC,IAAIiD,WAAWjD,IAChG,OAAO,IAAIukD,eAAclxD,MAAM2P,MAAM,GAAI4pD,UAAUrB,UAAWtoD,WAAY5P,MAAM4P,WAAYuhD,gBAMhGoH,aAAa3zB,UAAU00B,2BAA6B,SAAU5sD,OAG1D,IAFA,GAAqBm4C,QACA2U,oBAAsB/pD,YAAY6iD,4BAC1C,CAKT,GAJIn1D,KAAKi2D,MAAM1uD,OAAS+K,YAAY2iD,sBAChCj1D,KAAKi2D,MAAM1uD,OAAS+K,YAAY6iD,0BAChCkH,mBAAmB17D,KAAKX,KAAKi2D,MAAM1uD,MAEnCvH,KAAKi2D,MAAM1uD,OAAS+K,YAAY8iD,uBAAwB,CACxD,IAAI1iD,YAAY2pD,mBAAoB/pD,YAAY6iD,0BAO5C,MADAn1D,MAAKu7D,QAAQ56D,KAAKk6D,UAAUxzD,OAAO,KAAMkI,MAAMkD,WAAY,sCACpD,IALP,IADA4pD,mBAAmBl1C,MACc,GAA7Bk1C,mBAAmBl6D,OACnB,MAAOulD,KAOnB,GAAI1nD,KAAKi2D,MAAM1uD,OAAS+K,YAAY+iD,mBAAoB,CACpD,IAAI3iD,YAAY2pD,mBAAoB/pD,YAAY2iD,sBAK5C,MADAj1D,MAAKu7D,QAAQ56D,KAAKk6D,UAAUxzD,OAAO,KAAMkI,MAAMkD,WAAY,sCACpD,IAJP4pD,oBAAmBl1C,MAO3B,GAAInnB,KAAKi2D,MAAM1uD,OAAS+K,YAAY85C,IAEhC,MADApsD,MAAKu7D,QAAQ56D,KAAKk6D,UAAUxzD,OAAO,KAAMkI,MAAMkD,WAAY,sCACpD,IAEXi1C,KAAI/mD,KAAKX,KAAK02D,cAOtB0E,aAAa3zB,UAAU2vB,aAAe,SAAU3wD,OAC5C,GAAqB+F,MAAO/F,MAAM+L,MAAM,EACxC,IAAIhG,KAAKrK,OAAS,GAAgB,MAAXqK,KAAK,GAAY,CACpC,GAAqBqhB,QAAS7tB,KAAKs8D,mBACrB,OAAVzuC,QAA4C,GAA1BA,OAAOtR,SAASpa,QAClCnC,KAAKsQ,iBAAiBud,OAAOnpB,MAAM63C,gBACnC/vC,KAAOA,KAAKyb,UAAU,IAG1Bzb,KAAKrK,OAAS,GACdnC,KAAKg8D,aAAa,GAAIp3C,MAAKpY,KAAM/F,MAAMgM,cAM/C2oD,aAAa3zB,UAAUk0B,kBAAoB,WACvC,GAAI37D,KAAKw7D,cAAcr5D,OAAS,EAAG,CAC/B,GAAqBijB,IAAKplB,KAAKw7D,cAAcx7D,KAAKw7D,cAAcr5D,OAAS,EACrEnC,MAAKsQ,iBAAiB8U,GAAG1gB,MAAM23C,QAC/Br8C,KAAKw7D,cAAcr0C,QAQ/Bi0C,aAAa3zB,UAAUg0B,iBAAmB,SAAUc,eAIhD,IAHA,GAAqBl7D,QAASk7D,cAAc/pD,MAAM,GAC7B9N,KAAO63D,cAAc/pD,MAAM,GAC3B2B,SACdnU,KAAKi2D,MAAM1uD,OAAS+K,YAAYwiD,WACnC3gD,MAAMxT,KAAKX,KAAKw8D,aAAax8D,KAAK02D,YAEtC,IAAqBv1D,UAAWnB,KAAKy8D,oBAAoBp7D,OAAQqD,KAAM1E,KAAKs8D,qBACvDI,aAAc,CAGnC,IAAI18D,KAAKi2D,MAAM1uD,OAAS+K,YAAYkiD,kBAAmB,CACnDx0D,KAAK02D,WACLgG,aAAc,CACd,IAAqBC,QAAS38D,KAAKsQ,iBAAiBnP,SAC9Cw7D,QAAOngB,cAA0C,OAA1Bt7C,YAAYC,WAAsBw7D,OAAOtgB,QAClEr8C,KAAKu7D,QAAQ56D,KAAKk6D,UAAUxzD,OAAOlG,SAAUo7D,cAAc9pD,WAAY,sDAAyD8pD,cAAc/pD,MAAM,GAAK,UAGxJxS,MAAKi2D,MAAM1uD,OAAS+K,YAAYiiD,eACrCv0D,KAAK02D,WACLgG,aAAc,EAElB,IAAqBltD,KAAMxP,KAAKi2D,MAAMxjD,WAAWlD,MAC5By2C,KAAO,GAAIj2C,iBAAgBwsD,cAAc9pD,WAAWlD,MAAOC,KAC3D4V,GAAK,GAAIpI,SAAQ7b,SAAUgT,SAAW6xC,KAAMA,KAAM,KACvEhmD,MAAK48D,aAAax3C,IACds3C,cACA18D,KAAK68D,YAAY17D,UACjBikB,GAAGwlB,cAAgBob,OAO3BoV,aAAa3zB,UAAUm1B,aAAe,SAAUx3C,IAC5C,GAAIplB,KAAKw7D,cAAcr5D,OAAS,EAAG,CAC/B,GAAqB26D,UAAW98D,KAAKw7D,cAAcx7D,KAAKw7D,cAAcr5D,OAAS,EAC3EnC,MAAKsQ,iBAAiBwsD,SAASp4D,MAAMo4C,gBAAgB13B,GAAG1gB,OACxD1E,KAAKw7D,cAAcr0C,MAG3B,GAAqBw1C,QAAS38D,KAAKsQ,iBAAiB8U,GAAG1gB,MACnDmQ,GAAK7U,KAAK+8D,sCAAuClvC,OAAShZ,GAAGgZ,OAAQmvC,UAAYnoD,GAAGmoD,SACxF,IAAInvC,QAAU8uC,OAAOjgB,mBAAmB7uB,OAAOnpB,MAAO,CAClD,GAAqBu4D,WAAY,GAAIjgD,SAAQ2/C,OAAOlgB,kBAAqBr3B,GAAG3S,WAAY2S,GAAGgvC,gBAAiBhvC,GAAGwlB,cAC/G5qC,MAAKk9D,uBAAuBrvC,OAAQmvC,UAAWC,WAEnDj9D,KAAKg8D,aAAa52C,IAClBplB,KAAKw7D,cAAc76D,KAAKykB,KAM5Bg2C,aAAa3zB,UAAUi0B,eAAiB,SAAUyB,aAC9C,GAAqBh8D,UAAWnB,KAAKy8D,oBAAoBU,YAAY3qD,MAAM,GAAI2qD,YAAY3qD,MAAM,GAAIxS,KAAKs8D,oBAI1G,IAHIt8D,KAAKs8D,sBACLt8D,KAAKs8D,oBAAoB1xB,cAAgBuyB,YAAY1qD,YAErDzS,KAAKsQ,iBAAiBnP,UAAUk7C,OAChCr8C,KAAKu7D,QAAQ56D,KAAKk6D,UAAUxzD,OAAOlG,SAAUg8D,YAAY1qD,WAAY,uCAA0C0qD,YAAY3qD,MAAM,GAAK,UAErI,KAAKxS,KAAK68D,YAAY17D,UAAW,CAClC,GAAqBi8D,QAAS,2BAA8Bj8D,SAAW,6KACvEnB,MAAKu7D,QAAQ56D,KAAKk6D,UAAUxzD,OAAOlG,SAAUg8D,YAAY1qD,WAAY2qD,WAO7EhC,aAAa3zB,UAAUo1B,YAAc,SAAU17D,UAC3C,IAAK,GAAqBk8D,YAAar9D,KAAKw7D,cAAcr5D,OAAS,EAAGk7D,YAAc,EAAGA,aAAc,CACjG,GAAqBj4C,IAAKplB,KAAKw7D,cAAc6B,WAC7C,IAAIj4C,GAAG1gB,MAAQvD,SAEX,MADAnB,MAAKw7D,cAAc8B,OAAOD,WAAYr9D,KAAKw7D,cAAcr5D,OAASk7D,aAC3D,CAEX,KAAKr9D,KAAKsQ,iBAAiB8U,GAAG1gB,MAAM03C,eAChC,OAAO,EAGf,OAAO,GAMXgf,aAAa3zB,UAAU+0B,aAAe,SAAUr4C,UAC5C,GAGqB+vC,WAHA/yD,SAAWC,eAAe+iB,SAAS3R,MAAM,GAAI2R,SAAS3R,MAAM,IAC5DhD,IAAM2U,SAAS1R,WAAWjD,IAC1B3M,MAAQ,EAE7B,IAAI7C,KAAKi2D,MAAM1uD,OAAS+K,YAAYyiD,WAAY,CAC5C,GAAqBwI,YAAav9D,KAAK02D,UACvC7zD,OAAQ06D,WAAW/qD,MAAM,GACzBhD,IAAM+tD,WAAW9qD,WAAWjD,IAC5B0kD,UAAYqJ,WAAW9qD,WAE3B,MAAO,IAAIwK,aAAY9b,SAAU0B,MAAO,GAAIkN,iBAAgBoU,SAAS1R,WAAWlD,MAAOC,KAAM0kD,YAKjGkH,aAAa3zB,UAAU60B,kBAAoB,WACvC,MAAOt8D,MAAKw7D,cAAcr5D,OAAS,EAAInC,KAAKw7D,cAAcx7D,KAAKw7D,cAAcr5D,OAAS,GAAK,MAQ/Fi5D,aAAa3zB,UAAUs1B,oCAAsC,WAEzD,IAAK,GADgBC,WAAY,KACPpxD,EAAI5L,KAAKw7D,cAAcr5D,OAAS,EAAGyJ,GAAK,EAAGA,IAAK,CACtE,GAAmC,iBAA/B5L,KAAKw7D,cAAc5vD,GAAGlH,KACtB,OAASmpB,OAAQ7tB,KAAKw7D,cAAc5vD,GAAIoxD,UAAWA,UAEvDA,WAAYh9D,KAAKw7D,cAAc5vD,GAEnC,OAASiiB,OAAQ7tB,KAAKw7D,cAAcx7D,KAAKw7D,cAAcr5D,OAAS,GAAI66D,UAAWA,YAMnF5B,aAAa3zB,UAAUu0B,aAAe,SAAU9hD,MAC5C,GAAqB2T,QAAS7tB,KAAKs8D,mBACrB,OAAVzuC,OACAA,OAAOtR,SAAS5b,KAAKuZ,MAGrBla,KAAKs7D,WAAW36D,KAAKuZ,OAc7BkhD,aAAa3zB,UAAUy1B,uBAAyB,SAAUrvC,OAAQmvC,UAAW9iD,MACzE,GAAK8iD,UAIA,CACD,GAAInvC,OAAQ,CAER,GAAqB1pB,OAAQ0pB,OAAOtR,SAASxb,QAAQi8D,UACrDnvC,QAAOtR,SAASpY,OAAS+V,SAGzBla,MAAKs7D,WAAW36D,KAAKuZ,KAEzBA,MAAKqC,SAAS5b,KAAKq8D,WACnBh9D,KAAKw7D,cAAc8B,OAAOt9D,KAAKw7D,cAAcz6D,QAAQi8D,WAAY,EAAG9iD,UAbpEla,MAAKg8D,aAAa9hD,MAClBla,KAAKw7D,cAAc76D,KAAKuZ,OAqBhCkhD,aAAa3zB,UAAUg1B,oBAAsB,SAAUp7D,OAAQC,UAAWk8D,eAOtE,MANc,OAAVn8D,SACAA,OAASrB,KAAKsQ,iBAAiBhP,WAAW46C,wBAC5B,MAAV76C,QAAmC,MAAjBm8D,gBAClBn8D,OAASH,YAAYs8D,cAAc94D,QAGpCtD,eAAeC,OAAQC,YAE3B85D,gBAiBPqC,QAAW,WASX,QAASA,SAAQvtD,MAAOwtD,aAAcC,qBAAsB3qD,QAASC,YAAahK,IAC9EjJ,KAAKkQ,MAAQA,MACblQ,KAAK09D,aAAeA,aACpB19D,KAAK29D,qBAAuBA,qBAC5B39D,KAAKgT,QAAUA,QACfhT,KAAKiT,YAAcA,YACnBjT,KAAKiJ,GAAKA,GAEd,MAAOw0D,YAEPG,OAAU,WAKV,QAASA,QAAO/6D,MAAO4P,YACnBzS,KAAK6C,MAAQA,MACb7C,KAAKyS,WAAaA,WAQtB,MADAmrD,QAAOn2B,UAAUlnC,MAAQ,SAAUJ,QAASE,SAAW,MAAOF,SAAQypC,UAAU5pC,KAAMK,UAC/Eu9D,UAEPC,UAAa,WAKb,QAASA,WAAUthD,SAAU9J,YACzBzS,KAAKuc,SAAWA,SAChBvc,KAAKyS,WAAaA,WAQtB,MADAorD,WAAUp2B,UAAUlnC,MAAQ,SAAUJ,QAASE,SAAW,MAAOF,SAAQ29D,eAAe99D,KAAMK,UACvFw9D,aAEPE,IAAO,WAOP,QAASA,KAAIjhD,WAAYvV,KAAMiV,MAAO/J,YAClCzS,KAAK8c,WAAaA,WAClB9c,KAAKuH,KAAOA,KACZvH,KAAKwc,MAAQA,MACbxc,KAAKyS,WAAaA,WAQtB,MADAsrD,KAAIt2B,UAAUlnC,MAAQ,SAAUJ,QAASE,SAAW,MAAOF,SAAQ69D,SAASh+D,KAAMK,UAC3E09D,OAEPE,eAAkB,WAUlB,QAASA,gBAAezjD,IAAKrG,MAAO+pD,UAAWC,UAAW5hD,SAAU8/B,OAAQ5pC,YACxEzS,KAAKwa,IAAMA,IACXxa,KAAKmU,MAAQA,MACbnU,KAAKk+D,UAAYA,UACjBl+D,KAAKm+D,UAAYA,UACjBn+D,KAAKuc,SAAWA,SAChBvc,KAAKq8C,OAASA,OACdr8C,KAAKyS,WAAaA,WAQtB,MADAwrD,gBAAex2B,UAAUlnC,MAAQ,SAAUJ,QAASE,SAAW,MAAOF,SAAQi+D,oBAAoBp+D,KAAMK,UACjG49D,kBAEPI,YAAe,WAMf,QAASA,aAAYx7D,MAAO6B,KAAM+N,YAC9BzS,KAAK6C,MAAQA,MACb7C,KAAK0E,KAAOA,KACZ1E,KAAKyS,WAAaA,WAQtB,MADA4rD,aAAY52B,UAAUlnC,MAAQ,SAAUJ,QAASE,SAAW,MAAOF,SAAQm+D,iBAAiBt+D,KAAMK,UAC3Fg+D,eAEPE,eAAkB,WAMlB,QAASA,gBAAe17D,MAAO6B,KAAM+N,YACjCzS,KAAK6C,MAAQA,MACb7C,KAAK0E,KAAOA,KACZ1E,KAAKyS,WAAaA,WAQtB,MADA8rD,gBAAe92B,UAAUlnC,MAAQ,SAAUJ,QAASE,SAAW,MAAOF,SAAQq+D,oBAAoBx+D,KAAMK,UACjGk+D,kBAEPE,aAAgB,WAChB,QAASA,iBAyDT,MAlDAA,cAAah3B,UAAUmC,UAAY,SAAUp9B,KAAMnM,SAAW,MAAO,IAAIu9D,QAAOpxD,KAAK3J,MAAO2J,KAAKiG,aAMjGgsD,aAAah3B,UAAUq2B,eAAiB,SAAUd,UAAW38D,SACzD,GAAIgnC,OAAQrnC,KACSuc,SAAWygD,UAAUzgD,SAAS/G,IAAI,SAAUxI,GAAK,MAAOA,GAAEzM,MAAM8mC,MAAOhnC,UAC5F,OAAO,IAAIw9D,WAAUthD,SAAUygD,UAAUvqD,aAO7CgsD,aAAah3B,UAAUu2B,SAAW,SAAUU,IAAKr+D,SAC7C,GAAIgnC,OAAQrnC,KACSwc,QACrB3Y,QAAOwwB,KAAKqqC,IAAIliD,OAAO/b,QAAQ,SAAU6zB,KAAO,MAAO9X,OAAM8X,KAAOoqC,IAAIliD,MAAM8X,KAAK/zB,MAAM8mC,MAAOhnC,UAChG,IAAqBiD,KAAM,GAAIy6D,KAAIW,IAAI5hD,WAAY4hD,IAAIn3D,KAAMiV,MAAOkiD,IAAIjsD,WAExE,OADAnP,KAAIq7D,sBAAwBD,IAAIC,sBACzBr7D,KAOXm7D,aAAah3B,UAAU22B,oBAAsB,SAAUQ,GAAIv+D,SACvD,GAAIgnC,OAAQrnC,KACSuc,SAAWqiD,GAAGriD,SAAS/G,IAAI,SAAUxI,GAAK,MAAOA,GAAEzM,MAAM8mC,MAAOhnC,UACrF,OAAO,IAAI49D,gBAAeW,GAAGpkD,IAAKokD,GAAGzqD,MAAOyqD,GAAGV,UAAWU,GAAGT,UAAW5hD,SAAUqiD,GAAGviB,OAAQuiB,GAAGnsD,aAOpGgsD,aAAah3B,UAAU62B,iBAAmB,SAAUM,GAAIv+D,SACpD,MAAO,IAAIg+D,aAAYO,GAAG/7D,MAAO+7D,GAAGl6D,KAAMk6D,GAAGnsD,aAOjDgsD,aAAah3B,UAAU+2B,oBAAsB,SAAUI,GAAIv+D,SACvD,MAAO,IAAIk+D,gBAAeK,GAAG/7D,MAAO+7D,GAAGl6D,KAAMk6D,GAAGnsD,aAE7CgsD,gBAEPI,eAAkB,WAClB,QAASA,mBAkDT,MA3CAA,gBAAep3B,UAAUmC,UAAY,SAAUp9B,KAAMnM,WAOrDw+D,eAAep3B,UAAUq2B,eAAiB,SAAUd,UAAW38D,SAC3D,GAAIgnC,OAAQrnC,IACZg9D,WAAUzgD,SAAS9b,QAAQ,SAAU66B,OAAS,MAAOA,OAAM/6B,MAAM8mC,UAOrEw3B,eAAep3B,UAAUu2B,SAAW,SAAUU,IAAKr+D,SAC/C,GAAIgnC,OAAQrnC,IACZ6D,QAAOwwB,KAAKqqC,IAAIliD,OAAO/b,QAAQ,SAAUwW,GAAKynD,IAAIliD,MAAMvF,GAAG1W,MAAM8mC,UAOrEw3B,eAAep3B,UAAU22B,oBAAsB,SAAUQ,GAAIv+D,SACzD,GAAIgnC,OAAQrnC,IACZ4+D,IAAGriD,SAAS9b,QAAQ,SAAU66B,OAAS,MAAOA,OAAM/6B,MAAM8mC,UAO9Dw3B,eAAep3B,UAAU62B,iBAAmB,SAAUM,GAAIv+D,WAO1Dw+D,eAAep3B,UAAU+2B,oBAAsB,SAAUI,GAAIv+D,WAEtDw+D,kBASPC,0BACAC,EAAK,OACLC,EAAK,YACLC,GAAM,aACNC,GAAM,kBACNC,GAAM,iBACNC,GAAM,iBACNC,GAAM,iBACNC,GAAM,iBACNC,GAAM,iBACNC,GAAM,iBACNC,GAAM,kBACNC,EAAK,cACLC,GAAM,YACNC,KAAQ,aACRC,GAAM,eACNC,EAAK,YACLC,EAAK,YACLC,EAAK,qBACLC,MAAS,aACTC,IAAO,YACPC,IAAO,cACPC,MAAS,aACTC,GAAM,aACNC,MAAS,eACTC,GAAM,oBACNC,MAAS,eACTC,GAAM,YACNC,GAAM,kBACNC,EAAK,kBACLC,GAAM,kBASNC,oBAAuB,WACvB,QAASA,uBACL7gE,KAAK8gE,0BACL9gE,KAAK+gE,oBAuFT,MA/EAF,qBAAoBp5B,UAAUu5B,2BAA6B,SAAUxmD,IAAKrG,MAAOkoC,QAC7E,GAAqB4kB,WAAYjhE,KAAKkhE,SAAS1mD,IAAKrG,MAAOkoC,OAC3D,IAAIr8C,KAAK+gE,iBAAiBE,WACtB,MAAOjhE,MAAK+gE,iBAAiBE,UAEjC,IAAqBE,UAAW3mD,IAAIpY,cACfgI,SAAW00D,yBAAyBqC,WAAa,OAASA,SAC1Dz8D,KAAO1E,KAAKohE,oBAAoB/kB,OAASjyC,SAAW,SAAWA,SAEpF,OADApK,MAAK+gE,iBAAiBE,WAAav8D,KAC5BA,MAMXm8D,oBAAoBp5B,UAAU45B,2BAA6B,SAAU7mD,KACjE,GAAqBymD,WAAYjhE,KAAKshE,gBAAgB9mD,IACtD,IAAIxa,KAAK+gE,iBAAiBE,WACtB,MAAOjhE,MAAK+gE,iBAAiBE,UAEjC,IAAqBE,UAAW3mD,IAAIpY,cACfgI,SAAW00D,yBAAyBqC,WAAa,OAASA,SAC1Dz8D,KAAO1E,KAAKohE,oBAAoB,SAAWh3D,SAEhE,OADApK,MAAK+gE,iBAAiBE,WAAav8D,KAC5BA,MAOXm8D,oBAAoBp5B,UAAU85B,mBAAqB,SAAU78D,KAAM4tB,SAC/D,GAAqBkvC,WAAY98D,KAAKtC,cACjB6+D,UAAY,OAASO,UAAY,IAAMlvC,OAC5D,IAAItyB,KAAK+gE,iBAAiBE,WACtB,MAAOjhE,MAAK+gE,iBAAiBE,UAEjC,IAAqBQ,YAAazhE,KAAKohE,oBAAoBI,UAE3D,OADAxhE,MAAK+gE,iBAAiBE,WAAaQ,WAC5BA,YAMXZ,oBAAoBp5B,UAAUi6B,qBAAuB,SAAUh9D,MAC3D,MAAO1E,MAAKohE,oBAAoB18D,KAAKtC,gBAQzCy+D,oBAAoBp5B,UAAUy5B,SAAW,SAAU1mD,IAAKrG,MAAOkoC,QAC3D,GAAqB9sC,OAAQ,IAAMiL,IACdmnD,SAAW99D,OAAOwwB,KAAKlgB,OAAO8N,OAAOzM,IAAI,SAAU9Q,MAAQ,MAAO,IAAMA,KAAO,IAAMyP,MAAMzP,QAAU2Q,KAAK,IAC1G7F,IAAM6sC,OAAS,KAAO,MAAQ7hC,IAAM,GACzD,OAAOjL,OAAQoyD,SAAWnyD,KAM9BqxD,oBAAoBp5B,UAAU65B,gBAAkB,SAAU9mD,KAAO,MAAOxa,MAAKkhE,SAAS,IAAM1mD,QAAS,IAKrGqmD,oBAAoBp5B,UAAU25B,oBAAsB,SAAUv5C,MAC1D,GAAqB+5C,MAAO5hE,KAAK8gE,uBAAuBv3B,eAAe1hB,KACvE,KAAK+5C,KAED,MADA5hE,MAAK8gE,uBAAuBj5C,MAAQ,EAC7BA,IAEX,IAAqB5e,IAAKjJ,KAAK8gE,uBAAuBj5C,KAEtD,OADA7nB,MAAK8gE,uBAAuBj5C,MAAQ5e,GAAK,EAClC4e,KAAO,IAAM5e,IAEjB43D,uBAEU9tD,WAAa,GAAI4xB,QAAO,GAAIC,QAU7C9xB,aAAgB,WAKhB,QAASA,cAAa+uD,kBAAmB7L,sBACrCh2D,KAAK6hE,kBAAoBA,kBACzB7hE,KAAKg2D,qBAAuBA,qBAwIhC,MA/HAljD,cAAa20B,UAAUv0B,cAAgB,SAAUhD,MAAO8C,QAASC,YAAahK,IAC1EjJ,KAAK8hE,OAAyB,GAAhB5xD,MAAM/N,QAAe+N,MAAM,YAAc2jD,WACvD7zD,KAAK+hE,UAAY,EACjB/hE,KAAKgiE,qBAAuB,GAAInB,qBAChC7gE,KAAKiiE,yBACLjiE,KAAKkiE,wBACL,IAAqBC,UAAWlyD,SAASjQ,KAAMkQ,SAC/C,OAAO,IAAIutD,SAAQ0E,SAAUniE,KAAKiiE,sBAAuBjiE,KAAKkiE,sBAAuBlvD,QAASC,YAAahK,KAO/G6J,aAAa20B,UAAUoD,aAAe,SAAUzlB,GAAI/kB,SAChD,GAAqBkc,UAAWtM,SAASjQ,KAAMolB,GAAG7I,UAC7BpI,QACrBiR,IAAGjR,MAAM1T,QAAQ,SAAU4T,MAEvBF,MAAME,KAAK3P,MAAQ2P,KAAKxR,OAE5B,IAAqBw5C,QAAS96C,qBAAqB6jB,GAAG1gB,MAAM23C,OACvC+lB,YAAcpiE,KAAKgiE,qBAAqBhB,2BAA2B57C,GAAG1gB,KAAMyP,MAAOkoC,OACxGr8C,MAAKiiE,sBAAsBG,aAAeh9C,GAAG3S,WAAWpN,UACxD,IAAqBg9D,aAAc,EAKnC,OAJKhmB,UACDgmB,YAAcriE,KAAKgiE,qBAAqBX,2BAA2Bj8C,GAAG1gB,MACtE1E,KAAKiiE,sBAAsBI,aAAe,KAAOj9C,GAAG1gB,KAAO,KAExD,GAAIu5D,gBAAe74C,GAAG1gB,KAAMyP,MAAOiuD,YAAaC,YAAa9lD,SAAU8/B,OAAQj3B,GAAG3S,aAO7FK,aAAa20B,UAAU0sB,eAAiB,SAAUmO,UAAWjiE,SACzD,MAAOL,MAAKuiE,4BAA4BD,UAAUz/D,MAAOy/D,UAAU7vD,aAOvEK,aAAa20B,UAAUmC,UAAY,SAAUp9B,KAAMnM,SAC/C,MAAOL,MAAKuiE,4BAA4B/1D,KAAK3J,MAAO2J,KAAKiG,aAO7DK,aAAa20B,UAAU4sB,aAAe,SAAUmO,QAASniE,SAAW,MAAO,OAM3EyS,aAAa20B,UAAUqsB,eAAiB,SAAU4K,IAAKr+D,SACnD,GAAIgnC,OAAQrnC,IACZA,MAAK+hE,WACL,IAAqBU,iBACAC,QAAU,GAAI3E,KAAIW,IAAIvhD,YAAauhD,IAAIn3D,KAAMk7D,aAAc/D,IAAIjsD,WAKpF,IAJAisD,IAAIliD,MAAM/b,QAAQ,SAAUkiE,MACxBF,aAAaE,KAAK9/D,OAAS,GAAIg7D,WAAU8E,KAAK7lD,WAAWtH,IAAI,SAAU0E,MAAQ,MAAOA,MAAK3Z,MAAM8mC,YAAgBs7B,KAAK3O,iBAE1Hh0D,KAAK+hE,YACD/hE,KAAK8hE,QAAU9hE,KAAK+hE,UAAY,EAAG,CAInC,GAAqBa,OAAQ5iE,KAAKgiE,qBAAqBN,qBAAqB,OAAShD,IAAIn3D,KAGzF,OAFAm7D,SAAQ/D,sBAAwBiE,MAChC5iE,KAAKiiE,sBAAsBW,OAASlE,IAAIvhD,YACjCulD,QAOX,GAAqBG,QAAS7iE,KAAKgiE,qBAAqBT,mBAAmB,MAAO7C,IAAIjsD,WAAWpN,YAC5ElF,QAAU,GAAI2S,cAAa9S,KAAK6hE,kBAAmB7hE,KAAKg2D,qBAE7E,OADAh2D,MAAKkiE,sBAAsBW,QAAU1iE,QAAQ+S,eAAewrD,KAAM,GAAI,GAAI,IACnE,GAAIH,gBAAemE,QAASG,OAAQnE,IAAIjsD,aAOnDK,aAAa20B,UAAUwsB,mBAAqB,SAAU6O,QAASziE,SAC3D,KAAM,IAAIW,OAAM,qBAOpB8R,aAAa20B,UAAU86B,4BAA8B,SAAU/1D,KAAMiG,YACjE,GAAqBw8C,oBAAqBjvD,KAAK6hE,kBAAkB5S,mBAAmBziD,KAAMiG,WAAWlD,MAAMlK,WAAYrF,KAAKg2D,qBAC5H,KAAK/G,mBAED,MAAO,IAAI2O,QAAOpxD,KAAMiG,WAM5B,KAAK,GAHgBvC,UACA8sD,UAAY,GAAIa,WAAU3tD,MAAOuC,YAClDoC,GAAK7U,KAAKg2D,qBAAsB+M,WAAaluD,GAAGtF,MAAOyzD,WAAanuD,GAAGrF,IACjD5D,EAAI,EAAGA,EAAIqjD,mBAAmB9G,QAAQhmD,OAAS,EAAGyJ,IAAK,CAC7E,GAAqBkR,YAAamyC,mBAAmBzI,YAAY56C,GAC5CxB,SAAW+I,wBAAwB2J,aAAe,gBAClD+lD,OAAS7iE,KAAKgiE,qBAAqBT,mBAAmBn3D,SAAU0S,WACjFmyC,oBAAmB9G,QAAQv8C,GAAGzJ,QAE9B+N,MAAMvP,KAAK,GAAIi9D,QAAO3O,mBAAmB9G,QAAQv8C,GAAI6G,aAEzDvC,MAAMvP,KAAK,GAAI09D,aAAYvhD,WAAY+lD,OAAQpwD,aAC/CzS,KAAKiiE,sBAAsBY,QAAUE,WAAajmD,WAAakmD,WAGnE,GAAqBC,eAAgBhU,mBAAmB9G,QAAQhmD,OAAS,CAIzE,OAHI8sD,oBAAmB9G,QAAQ8a,eAAe9gE,QAC1C+N,MAAMvP,KAAK,GAAIi9D,QAAO3O,mBAAmB9G,QAAQ8a,eAAgBxwD,aAE9DuqD,WAEJlqD,gBAEUM,eAAiB,yEAWlC8vD,UAAa,SAAUzgB,QAMvB,QAASygB,WAAUld,KAAM1iD,KACrB,MAAOm/C,QAAOE,KAAK3iD,KAAMgmD,KAAM1iD,MAAQtD,KAE3C,MARAopC,WAAU85B,UAAWzgB,QAQdygB,WACTxP,YACmBp/C,WAAa,OACb6uD,kBAAoB,QACpBC,4BAA8B,UAC9BxuD,kBAAoB,IACpBF,aAAe,KAyBhC2uD,iBAAoB,WAKpB,QAASA,kBAAiBxoD,SAAUwB,QAChCrc,KAAK6a,SAAWA,SAChB7a,KAAKqc,OAASA,OAElB,MAAOgnD,qBAEPC,eACJA,cAAaC,QAAU,EACvBD,aAAaE,MAAQ,EACrBF,aAAaA,aAAaC,SAAW,UACrCD,aAAaA,aAAaE,OAAS,OAQnC,IAAIhwD,UAAY,WAKZ,QAASA,UAASiwD,cAAeC,gBAC7B1jE,KAAKyjE,cAAgBA,cACrBzjE,KAAK0jE,eAAiBA,eA4Y1B,MApYAlwD,UAASi0B,UAAUh0B,QAAU,SAAUvD,MAAOM,qBAC1C,GAAI62B,OAAQrnC,IAMZ,OALAA,MAAK2jE,MAAML,aAAaC,QAAS/yD,qBACjCN,MAAMzP,QAAQ,SAAUyZ,MAAQ,MAAOA,MAAK3Z,MAAM8mC,MAAO,QACrDrnC,KAAK4jE,cACL5jE,KAAKyuD,aAAav+C,MAAMA,MAAM/N,OAAS,GAAI,kBAExC,GAAIkhE,kBAAiBrjE,KAAK6jE,UAAW7jE,KAAKu7D,UASrD/nD,SAASi0B,UAAU7zB,MAAQ,SAAU1D,MAAOyD,aAAcnD,qBACtDxQ,KAAK2jE,MAAML,aAAaE,MAAOhzD,qBAC/BxQ,KAAK8jE,cAAgBnwD,YAErB,IAAqBowD,SAAU,GAAI/mD,SAAQ,aAAe9M,MAAO,KAAM,KAAM,MACxD8zD,eAAiBD,QAAQxjE,MAAMP,KAAM,KAI1D,OAHIA,MAAK4jE,cACL5jE,KAAKyuD,aAAav+C,MAAMA,MAAM/N,OAAS,GAAI,kBAExC,GAAI24D,iBAAgBkJ,eAAeznD,SAAUvc,KAAKu7D,UAO7D/nD,SAASi0B,UAAUwsB,mBAAqB,SAAU6O,QAASziE,SAEvD,GAAqByc,YAAa7M,SAASjQ,KAAM8iE,QAAQhmD,WAAYzc,QACrE,IAAIL,KAAKikE,QAAUX,aAAaE,MAC5B,MAAO,IAAIzP,eAAc+O,QAAQjgE,MAAOia,WAAYgmD,QAAQrwD,WAAYqwD,QAAQlmD,gBAAiBkmD,QAAQ9O,gBAQjHxgD,SAASi0B,UAAUqsB,eAAiB,SAAU4K,IAAKr+D,SAC/CL,KAAKkkE,uBAAuBxF,IAC5B,IAAqByF,UAAWnkE,KAAKokE,MAChCpkE,MAAKokE,SAEFpkE,KAAKqkE,0BACLrkE,KAAKskE,aAAa5F,MAEtB1+D,KAAKokE,QAAS,EAElB,IAAqB5nD,OAAQvM,SAASjQ,KAAM0+D,IAAIliD,MAAOnc,QAKvD,OAJIL,MAAKikE,QAAUX,aAAaE,QAC5B9E,IAAM,GAAI7K,WAAU6K,IAAIvhD,YAAauhD,IAAIn3D,KAAMiV,MAAOkiD,IAAIjsD,WAAYisD,IAAIthD,wBAE9Epd,KAAKokE,OAASD,SACPzF,KAOXlrD,SAASi0B,UAAU4sB,aAAe,SAAUmO,QAASniE,SACjD,GAAqBkkE,WAAY1wD,kBAAkB2uD,QACnD,IAAI+B,WAAavkE,KAAKqkE,yBAElB,WADArkE,MAAKyuD,aAAa+T,QAAS,wDAG/B,IAAqBgC,WAAYxwD,kBAAkBwuD,QACnD,IAAIgC,YAAcxkE,KAAK4jE,aAEnB,WADA5jE,MAAKyuD,aAAa+T,QAAS,oCAG/B,KAAKxiE,KAAKykE,cAAgBzkE,KAAKokE,OAC3B,GAAKpkE,KAAK4jE,cAUN,GAAIY,UAAW,CACX,GAAIxkE,KAAK0kE,QAAU1kE,KAAK2kE,iBAAkB,CACtC3kE,KAAK4kE,0BAA0BpC,QAASxiE,KAAK6kE,gBAC7C7kE,KAAK4jE,cAAe,CACpB,IAAqBz2D,SAAUnN,KAAKskE,YAAYtkE,KAAK6kE,eAAgB7kE,KAAK8kE,sBAErD50D,MAAQlQ,KAAK+kE,kBAAkBvC,QAASr1D,QAC7D,OAAO8C,UAASjQ,KAAMkQ,OAItB,WADAlQ,MAAKyuD,aAAa+T,QAAS,wDAnB/B+B,aACAvkE,KAAK4jE,cAAe,EACpB5jE,KAAK2kE,iBAAmB3kE,KAAK0kE,OAC7B1kE,KAAK6kE,kBACL7kE,KAAK8kE,qBAAuBtC,QAAQ3/D,MAAMf,QAAQshE,4BAA6B,IAAIzgE,OACnF3C,KAAKglE,yBAAyBxC,WA0B9ChvD,SAASi0B,UAAUmC,UAAY,SAAUp9B,KAAMnM,SAI3C,MAHIL,MAAKqkE,0BACLrkE,KAAKkkE,uBAAuB13D,MAEzBA,MAOXgH,SAASi0B,UAAUoD,aAAe,SAAUzlB,GAAI/kB,SAC5C,GAAIgnC,OAAQrnC,IACZA,MAAKkkE,uBAAuB9+C,IAC5BplB,KAAK0kE,QACL,IAGqBO,sBAHAC,cAAgBllE,KAAKykE,YACrBU,kBAAoBnlE,KAAKolE,gBACzBC,cAKAC,SAAWrxD,aAAamR,IACxBmgD,SAAWD,SAAWA,SAASziE,MAAQ,GACvC2iE,WAAaxlE,KAAKyjE,cAAcgC,KAAK,SAAUjrD,KAAO,MAAO4K,IAAG1gB,OAAS8V,QAAYxa,KAAKokE,SAC1GpkE,KAAKqkE,yBACWqB,oBAAsBP,mBAAqBK,UAEhE,IADAxlE,KAAKolE,gBAAkBD,mBAAqBK,WACvCxlE,KAAKqkE,0BAA6BrkE,KAAKokE,QAgBpCkB,UAAYI,qBACZ1lE,KAAKyuD,aAAarpC,GAAI,2EAEtBplB,KAAKikE,OAASX,aAAaC,SAE3BtzD,SAASjQ,KAAMolB,GAAG7I,cArB0B,CAChD,GAAI+oD,UAAYI,mBAAoB,CAChC1lE,KAAKykE,aAAc,CACnB,IAAqBt3D,SAAUnN,KAAKskE,YAAYl/C,GAAG7I,SAAUgpD,SAC7DN,sBAAuBjlE,KAAK+kE,kBAAkB3/C,GAAIjY,SAEtD,GAAInN,KAAKikE,OAASX,aAAaC,QAAS,CACpC,GAAqBoC,gBAAiBL,UAAYI,kBAC9CC,iBACA3lE,KAAKglE,yBAAyB5/C,IAClCnV,SAASjQ,KAAMolB,GAAG7I,UACdopD,gBACA3lE,KAAK4kE,0BAA0Bx/C,GAAIA,GAAG7I,WAYlD,GAAIvc,KAAKikE,QAAUX,aAAaE,MAAO,CACnC,GAAqBoC,YAAaX,sBAAwB7/C,GAAG7I,QAC7DqpD,YAAWnlE,QAAQ,SAAU66B,OACzB,GAAqBuqC,SAAUvqC,MAAM/6B,MAAM8mC,MAAOhnC,QAC9CwlE,WAAYx+B,MAAMg9B,2BAGlBgB,WAAaA,WAAW37D,OAAOm8D,YAQ3C,GAJA7lE,KAAK8lE,mBAAmB1gD,IACxBplB,KAAK0kE,SACL1kE,KAAKykE,YAAcS,cACnBllE,KAAKolE,gBAAkBD,kBACnBnlE,KAAKikE,QAAUX,aAAaE,MAAO,CACnC,GAAqBuC,iBAAkB/lE,KAAKgmE,qBAAqB5gD,GACjE,OAAO,IAAIpI,SAAQoI,GAAG1gB,KAAMqhE,gBAAiBV,WAAYjgD,GAAG3S,WAAY2S,GAAGgvC,gBAAiBhvC,GAAGwlB,iBAQvGp3B,SAASi0B,UAAU0sB,eAAiB,SAAUmO,UAAWjiE,SACrD,KAAM,IAAIW,OAAM,qBAOpBwS,SAASi0B,UAAUk8B,MAAQ,SAAUhtC,KAAMnmB,qBACvCxQ,KAAKikE,MAAQttC,KACb32B,KAAK4jE,cAAe,EACpB5jE,KAAKykE,aAAc,EACnBzkE,KAAK0kE,OAAS,EACd1kE,KAAKokE,QAAS,EACdpkE,KAAKimE,wBAA0B,OAC/BjmE,KAAKu7D,WACLv7D,KAAK6jE,aACL7jE,KAAKolE,iBAAkB,EACvBplE,KAAKkmE,mBAAqBrzD,yBAAyBrC,sBAMvDgD,SAASi0B,UAAUq+B,mBAAqB,SAAU1gD,IAC9C,GAAIiiB,OAAQrnC,KACSmmE,2BACAC,kBAAoBpmE,KAAK0jE,eAAet+C,GAAG1gB,SAChE0gB,IAAGjR,MAAM4K,OAAO,SAAU1K,MAAQ,MAAOA,MAAK3P,KAAKqP,WAAWovD,qBACzD1iE,QAAQ,SAAU4T,MAAQ,MAAO8xD,yBAAwB9xD,KAAK3P,KAAKzD,MAAMkiE,kBAAkBhhE,SAC5FkS,KAAKxR,QACTuiB,GAAGjR,MAAM1T,QAAQ,SAAU4T,MACnBA,KAAK3P,OAAQyhE,yBACb9+B,MAAMi9B,aAAajwD,MAAO8xD,wBAAwB9xD,KAAK3P,OAElD0hE,kBAAkBX,KAAK,SAAU/gE,MAAQ,MAAO2P,MAAK3P,OAASA,QACnE2iC,MAAMi9B,aAAajwD,UAS/Bb,SAASi0B,UAAU68B,YAAc,SAAU9jE,IAAK6lE,SAC5C,KAAkB,GAAd7lE,IAAI2B,QACU,GAAd3B,IAAI2B,QAAe3B,IAAI,YAAcyc,eAAkBzc,IAAI,GAAKqC,OADpE,CAKA,GAAIgS,IAAKN,kBAAkB8xD,SAAUrzD,QAAU6B,GAAG7B,QAASC,YAAc4B,GAAG5B,YAAahK,GAAK4L,GAAG5L,GAC5EkE,QAAUnN,KAAKkmE,mBAAmB1lE,IAAKwS,QAASC,YAAahK,GAElF,OADAjJ,MAAK6jE,UAAUljE,KAAKwM,SACbA,UAOXqG,SAASi0B,UAAUs9B,kBAAoB,SAAU3/C,GAAIjY,SACjD,GAAIA,SAAWnN,KAAKikE,QAAUX,aAAaE,MAAO,CAC9C,GAAqBtzD,OAAQlQ,KAAK8jE,cAAc3+D,IAAIgI,QACpD,IAAI+C,MACA,MAAOA,MAEXlQ,MAAKyuD,aAAarpC,GAAI,2CAA8CplB,KAAK8jE,cAAc5uD,OAAO/H,SAAW,KAE7G,UAMJqG,SAASi0B,UAAUu+B,qBAAuB,SAAU5gD,IAChD,GAAIiiB,OAAQrnC,KACS+jB,WAAaqB,GAAGjR,MAChBmyD,wBACrBviD,YAAWtjB,QAAQ,SAAU4T,MACrBA,KAAK3P,KAAKqP,WAAWovD,qBACrBmD,sBAAsBjyD,KAAK3P,KAAKzD,MAAMkiE,kBAAkBhhE,SACpDoS,kBAAkBF,KAAKxR,OAAOmQ,UAG1C,IAAqBuzD;AA8BrB,MA7BAxiD,YAAWtjB,QAAQ,SAAU4T,MACzB,GAAIA,KAAK3P,OAAS4P,aAAcD,KAAK3P,KAAKqP,WAAWovD,mBAIrD,GAAI9uD,KAAKxR,OAAuB,IAAdwR,KAAKxR,OAAeyjE,sBAAsB/8B,eAAel1B,KAAK3P,MAAO,CACnF,GAAqBsO,SAAUszD,sBAAsBjyD,KAAK3P,MACrCyI,QAAUk6B,MAAM6+B,oBAAoB7xD,MAAOrB,QAAS,GAAI,IACxD9C,MAAQm3B,MAAMy8B,cAAc3+D,IAAIgI,QACrD,IAAI+C,MACA,GAAoB,GAAhBA,MAAM/N,OACNokE,qBAAqB5lE,KAAK,GAAIsc,aAAY5I,KAAK3P,KAAM,GAAI2P,KAAK5B,iBAE7D,IAAIvC,MAAM,YAAc0U,MAAM,CAC/B,GAAqB/hB,OAAUqN,MAAM,GAAKrN,KAC1C0jE,sBAAqB5lE,KAAK,GAAIsc,aAAY5I,KAAK3P,KAAM7B,MAAOwR,KAAK5B,iBAGjE40B,OAAMonB,aAAarpC,GAAI,yCAA4C/Q,KAAK3P,KAAO,UAAc2iC,MAAMy8B,cAAc5uD,OAAO/H,SAAW,UAIvIk6B,OAAMonB,aAAarpC,GAAI,0CAA6C/Q,KAAK3P,KAAO,UAAc2iC,MAAMy8B,cAAc5uD,OAAO/H,SAAW,UAIxIo5D,sBAAqB5lE,KAAK0T,QAG3BkyD,sBAUX/yD,SAASi0B,UAAUy8B,uBAAyB,SAAUhqD,MAC9Cla,KAAK4jE,eAAiB5jE,KAAKokE,QAAUpkE,KAAK0kE,QAAU1kE,KAAK2kE,kBACzD3kE,KAAK6kE,eAAelkE,KAAKuZ,OAQjC1G,SAASi0B,UAAUu9B,yBAA2B,SAAU9qD,MAChDla,KAAKqkE,yBACLrkE,KAAKyuD,aAAav0C,KAAM,4BAGxBla,KAAKimE,wBAA0BjmE,KAAK6jE,UAAU1hE,QAGtD0B,OAAOkX,eAAevH,SAASi0B,UAAW,4BAOtCtiC,IAAK,WACD,MAAwC,UAAjCnF,KAAKimE,yBAEhBhrD,YAAY,EACZD,cAAc,IAqBlBxH,SAASi0B,UAAUm9B,0BAA4B,SAAU1qD,KAAMssD,gBAC3D,IAAKxmE,KAAKqkE,yBAEN,WADArkE,MAAKyuD,aAAav0C,KAAM,yBAG5B,IAAqBusD,YAAazmE,KAAKimE,wBAClBS,oBAAsBF,eAAel9D,OAAO,SAAUwP,MAAOoB,MAAQ,MAAOpB,QAASoB,eAAgBpG,SAAU,EAAI,IAAO,EAC/I,IAA2B,GAAvB4yD,oBACA,IAAK,GAAqB96D,GAAI5L,KAAK6jE,UAAU1hE,OAAS,EAAGyJ,GAAK66D,WAAY76D,IAAK,CAC3E,GAAqBpL,KAAMR,KAAK6jE,UAAUj4D,GAAGsE,KAC7C,MAAoB,GAAd1P,IAAI2B,QAAe3B,IAAI,YAAco9D,SAAS,CAChD59D,KAAK6jE,UAAUvG,OAAO1xD,EAAG,EACzB,QAIZ5L,KAAKimE,wBAA0B,QAOnCzyD,SAASi0B,UAAUgnB,aAAe,SAAUv0C,KAAM5W,KAC9CtD,KAAKu7D,QAAQ56D,KAAK,GAAIuiE,WAAUhpD,KAAKzH,WAAYnP,OAE9CkQ,YAsCPmzD,iBAAoB,WACpB,QAASA,oBACL3mE,KAAKo8C,gBAAiB,EACtBp8C,KAAKm8C,YAAclQ,eAAeG,cAClCpsC,KAAKq8C,QAAS,EACdr8C,KAAKu8C,eAAgB,EACrBv8C,KAAKw8C,cAAe,EAYxB,MANAmqB,kBAAiBl/B,UAAUiV,mBAAqB,SAAUC,eAAiB,OAAO,GAKlFgqB,iBAAiBl/B,UAAUqV,gBAAkB,SAAUp4C,MAAQ,OAAO,GAC/DiiE,oBAEU1xD,gBAAkB,GAAI0xD,kBAQvCC,UAAa,SAAUnkB,QAEvB,QAASmkB,aACL,MAAOnkB,QAAOE,KAAK3iD,KAAMgV,sBAAwBhV,KAYrD,MAdAopC,WAAUw9B,UAAWnkB,QAUrBmkB,UAAUn/B,UAAUxgC,MAAQ,SAAUmJ,OAAQC,IAAK4qD,qBAE/C,MAD4B,UAAxBA,sBAAkCA,qBAAsB,GACrDxY,OAAOhb,UAAUxgC,MAAM07C,KAAK3iD,KAAMoQ,OAAQC,IAAK4qD,oBAAqB,OAExE2L,WACT5L,UA2BE6L,mBAAsB,WACtB,QAASA,uBAsDT,MA/CAA,oBAAmBp/B,UAAUmC,UAAY,SAAUp9B,KAAMnM,SAAW,MAAOmM,MAAK3J,OAMhFgkE,mBAAmBp/B,UAAUq2B,eAAiB,SAAUd,UAAW38D,SAC/D,GAAIgnC,OAAQrnC,IACZ,OAAO,IAAMg9D,UAAUzgD,SAAS/G,IAAI,SAAU8lB,OAAS,MAAOA,OAAM/6B,MAAM8mC,SAAWhyB,KAAK,MAAQ,KAOtGwxD,mBAAmBp/B,UAAUu2B,SAAW,SAAUU,IAAKr+D,SACnD,GAAIgnC,OAAQrnC,KACS8mE,SAAWjjE,OAAOwwB,KAAKqqC,IAAIliD,OAAOhH,IAAI,SAAUyB,GAAK,MAAOA,GAAI,KAAOynD,IAAIliD,MAAMvF,GAAG1W,MAAM8mC,OAAS,KACxH,OAAO,IAAMq3B,IAAI5hD,WAAa,KAAO4hD,IAAIn3D,KAAO,KAAOu/D,SAASzxD,KAAK,MAAQ,KAOjFwxD,mBAAmBp/B,UAAU22B,oBAAsB,SAAUQ,GAAIv+D,SAC7D,GAAIgnC,OAAQrnC,IACZ,OAAO4+D,IAAGviB,OACN,iBAAoBuiB,GAAGV,UAAY,MACnC,iBAAoBU,GAAGV,UAAY,KAAQU,GAAGriD,SAAS/G,IAAI,SAAU8lB,OAAS,MAAOA,OAAM/6B,MAAM8mC,SAAWhyB,KAAK,MAAQ,cAAiBupD,GAAGT,UAAY,MAOjK0I,mBAAmBp/B,UAAU62B,iBAAmB,SAAUM,GAAIv+D,SAC1D,MAAOu+D,IAAG/7D,MAAQ,aAAgB+7D,GAAGl6D,KAAO,KAAQk6D,GAAG/7D,MAAQ,QAAU,aAAgB+7D,GAAGl6D,KAAO,OAOvGmiE,mBAAmBp/B,UAAU+2B,oBAAsB,SAAUI,GAAIv+D,SAC7D,MAAO,iBAAoBu+D,GAAGl6D,KAAO,KAAQk6D,GAAG/7D,MAAMtC,MAAMP,MAAQ,SAEjE6mE,sBAEUlxD,kBAAoB,GAAIkxD,oBAezCtxD,+BAAkC,SAAUktC,QAE5C,QAASltC,kCACL,MAAkB,QAAXktC,QAAmBA,OAAO1lC,MAAM/c,KAAMkC,YAAclC,KAa/D,MAfAopC,WAAU7zB,+BAAgCktC,QAS1CltC,+BAA+BkyB,UAAUu2B,SAAW,SAAUU,IAAKr+D,SAC/D,GAAIgnC,OAAQrnC,KACS8mE,SAAWjjE,OAAOwwB,KAAKqqC,IAAIliD,OAAOhH,IAAI,SAAUyB,GAAK,MAAOA,GAAI,KAAOynD,IAAIliD,MAAMvF,GAAG1W,MAAM8mC,OAAS,KAExH,OAAO,IAAMq3B,IAAIn3D,KAAO,KAAOu/D,SAASzxD,KAAK,MAAQ,KAElDE,gCACTsxD,oBAmJE9wD,SACJA,QAAOmC,OAAS,EAChBnC,OAAOC,IAAM,EACbD,OAAOA,OAAOmC,QAAU,SACxBnC,OAAOA,OAAOC,KAAO,KAsLrB,IAAI+wD,YAAc,WACd,QAASA,eA2BT,MAnBAA,YAAWt/B,UAAUu/B,MAAQ,SAAUnsD,SAAU+qB,UAOjDmhC,WAAWt/B,UAAUw/B,KAAO,SAAU30C,QAASjiB,OAM/C02D,WAAWt/B,UAAUvyB,OAAS,SAAU/H,WAKxC45D,WAAWt/B,UAAUy/B,iBAAmB,SAAU/5D,SAAW,MAAO,OAC7D45D,cAKPI,wBAA2B,SAAU1kB,QAMrC,QAAS0kB,yBAAwBh6D,QAASi6D,SACtC,GAAI//B,OAAQob,OAAOE,KAAK3iD,OAASA,IAMjC,OALAqnC,OAAM+/B,QAAUA,QAChB//B,MAAMggC,oBACNhgC,MAAMigC,kBACNjgC,MAAMkgC,oBACNp6D,QAAQ+C,MAAMzP,QAAQ,SAAUyZ,MAAQ,MAAOA,MAAK3Z,MAAM8mC,SACnDA,MAsEX,MAlFA+B,WAAU+9B,wBAAyB1kB,QAkBnC0kB,wBAAwB1/B,UAAU/sB,aAAe,SAAUC,cACvD,MAAO3a,MAAKqnE,iBAAiB99B,eAAe5uB,cACxC3a,KAAKqnE,iBAAiB1sD,cACtB,MAMRwsD,wBAAwB1/B,UAAU+/B,eAAiB,SAAUC,YACzD,MAAOznE,MAAKunE,iBAAiBh+B,eAAek+B,YAAcznE,KAAKunE,iBAAiBE,YAC5E,MAORN,wBAAwB1/B,UAAUmC,UAAY,SAAUp9B,KAAMnM,SAAW,MAAO,OAMhF8mE,wBAAwB1/B,UAAU22B,oBAAsB,SAAUQ,GAAIv+D,SAClEL,KAAK0nE,qBAAqB9I,GAAGV,WAC7Bzb,OAAOhb,UAAU22B,oBAAoBzb,KAAK3iD,KAAM4+D,GAAIv+D,SACpDL,KAAK0nE,qBAAqB9I,GAAGT,YAOjCgJ,wBAAwB1/B,UAAU62B,iBAAmB,SAAUM,GAAIv+D,SAAWL,KAAK0nE,qBAAqB9I,GAAGl6D,OAM3GyiE,wBAAwB1/B,UAAU+2B,oBAAsB,SAAUI,GAAIv+D,SAClEL,KAAK0nE,qBAAqB9I,GAAGl6D,OAMjCyiE,wBAAwB1/B,UAAUigC,qBAAuB,SAAU/sD,cAC/D,GAAKA,eAAgB3a,KAAKqnE,iBAAiB99B,eAAe5uB,cAA1D,CAGA,GAAqB8sD,YAAaznE,KAAKonE,QAAQzsD,aAC/C,IAAI3a,KAAKunE,iBAAiBh+B,eAAek+B,YAAa,CAElD,GAAqBE,QAAS3nE,KAAKsnE,eAAeG,WAClDznE,MAAKsnE,eAAeG,YAAcE,OAAS,EAC3CF,WAAaA,WAAa,IAAME,WAGhC3nE,MAAKsnE,eAAeG,YAAc,CAEtCznE,MAAKqnE,iBAAiB1sD,cAAgB8sD,WACtCznE,KAAKunE,iBAAiBE,YAAc9sD,eAEjCwsD,yBACTtI,gBAQE+I,WAAc,WACd,QAASA,eA0CT,MApCAA,YAAWngC,UAAUogC,SAAW,SAAUrtD,KACtC,GAAI6sB,OAAQrnC,KACS2hE,SAAW3hE,KAAK8nE,qBAAqBttD,IAAIrG,MAC9D,IAA2B,GAAvBqG,IAAI+B,SAASpa,OACb,MAAO,IAAMqY,IAAI9V,KAAOi9D,SAAW,IAEvC,IAAqBoG,aAAcvtD,IAAI+B,SAAS/G,IAAI,SAAU0E,MAAQ,MAAOA,MAAK3Z,MAAM8mC,QACxF,OAAO,IAAM7sB,IAAI9V,KAAOi9D,SAAW,IAAMoG,YAAY1yD,KAAK,IAAM,KAAOmF,IAAI9V,KAAO,KAMtFkjE,WAAWngC,UAAUmC,UAAY,SAAUp9B,MAAQ,MAAOA,MAAK3J,OAK/D+kE,WAAWngC,UAAUugC,iBAAmB,SAAUC,MAC9C,MAAO,QAAUjoE,KAAK8nE,qBAAqBG,KAAK9zD,OAAS,OAM7DyzD,WAAWngC,UAAUqgC,qBAAuB,SAAU3zD,OAClD,GAAqBwtD,UAAW99D,OAAOwwB,KAAKlgB,OAAOqB,IAAI,SAAU9Q,MAAQ,MAAOA,MAAO,KAAQyP,MAAMzP,MAAQ,MAAS2Q,KAAK,IAC3H,OAAOssD,UAASx/D,OAAS,EAAI,IAAMw/D,SAAW,IAMlDiG,WAAWngC,UAAUygC,aAAe,SAAUC,SAC1C,MAAO,aAAeA,QAAQC,QAAU,OAASD,QAAQE,IAAM,QAE5DT,cAEUztD,SAAW,GAAIytD,YAQhCU,YAAe,WAIf,QAASA,aAAYC,gBACjB,GAAIlhC,OAAQrnC,IACZA,MAAKmU,SACLtQ,OAAOwwB,KAAKk0C,gBAAgB9nE,QAAQ,SAAUwW,GAC1CowB,MAAMlzB,MAAM8C,GAAKmD,WAAWmuD,eAAetxD,MAQnD,MADAqxD,aAAY7gC,UAAUlnC,MAAQ,SAAUJ,SAAW,MAAOA,SAAQ6nE,iBAAiBhoE,OAC5EsoE,eAEPE,QAAW,WAKX,QAASA,SAAQJ,QAASC,KACtBroE,KAAKooE,QAAUA,QACfpoE,KAAKqoE,IAAMA,IAQf,MADAG,SAAQ/gC,UAAUlnC,MAAQ,SAAUJ,SAAW,MAAOA,SAAQ+nE,aAAaloE,OACpEwoE,WAEPC,IAAO,WAMP,QAASA,KAAI/jE,KAAM6jE,eAAgBhsD,UACR,SAAnBgsD,iBAA6BA,mBAChB,SAAbhsD,WAAuBA,YAC3B,IAAI8qB,OAAQrnC,IACZA,MAAK0E,KAAOA,KACZ1E,KAAKuc,SAAWA,SAChBvc,KAAKmU,SACLtQ,OAAOwwB,KAAKk0C,gBAAgB9nE,QAAQ,SAAUwW,GAC1CowB,MAAMlzB,MAAM8C,GAAKmD,WAAWmuD,eAAetxD,MAQnD,MADAwxD,KAAIhhC,UAAUlnC,MAAQ,SAAUJ,SAAW,MAAOA,SAAQ0nE,SAAS7nE,OAC5DyoE,OAEPC,OAAU,WAIV,QAASA,QAAOC,gBACZ3oE,KAAK6C,MAAQuX,WAAWuuD,gBAQ5B,MADAD,QAAOjhC,UAAUlnC,MAAQ,SAAUJ,SAAW,MAAOA,SAAQypC,UAAU5pC,OAChE0oE,UAEPE,GAAM,SAAUnmB,QAKhB,QAASmmB,IAAGC,IAER,MADW,UAAPA,KAAiBA,GAAK,GACnBpmB,OAAOE,KAAK3iD,KAAM,KAAO,GAAI8C,OAAM+lE,GAAK,GAAGxzD,KAAK,OAASrV,KAEpE,MARAopC,WAAUw/B,GAAInmB,QAQPmmB,IACTF,QACmBruD,iBAChB,KAAM,UACN,KAAM,WACN,KAAM,WACN,KAAM,SACN,KAAM,SASUyuD,SAAW,MACXC,OAAS,wCAETC,qBAAuB,KACvBC,iBAAmB,IACnBC,UAAY,OACZC,YAAc,SACdC,YAAc,SACdC,UAAY,aAC7B9tD,MAAS,SAAUknC,QAEnB,QAASlnC,SACL,MAAkB,QAAXknC,QAAmBA,OAAO1lC,MAAM/c,KAAMkC,YAAclC,KA4D/D,MA9DAopC,WAAU7tB,MAAOknC,QASjBlnC,MAAMksB,UAAUu/B,MAAQ,SAAUnsD,SAAU+qB,QACxC,GAAqBzlC,SAAU,GAAImpE,eACdC,aACrB1uD,UAASpa,QAAQ,SAAU0M,SACvB,GAAqBq8D,WAAY,GAAIf,KAAIY,WAAapgE,GAAIkE,QAAQlE,GAAIwgE,SAAU,QAChFD,WAAUjtD,SAAS5b,KAAK,GAAIioE,IAAG,GAAI,GAAIH,KAAIU,eAAiBhpE,QAAQ8Z,UAAU9M,QAAQ+C,QAAS,GAAI04D,IAAG,GAAI,GAAIH,KAAIW,cAC9Gj8D,QAAQ8F,aACRu2D,UAAUjtD,SAAS5b,KAAK,GAAIioE,IAAG,GAAI,GAAIH,KAAI,QAAUiB,SAAU,IAAK1nD,KAAM,gBAAkB,GAAI0mD,QAAOv7D,QAAQ8F,gBAE/G9F,QAAQ6F,SACRw2D,UAAUjtD,SAAS5b,KAAK,GAAIioE,IAAG,GAAI,GAAIH,KAAI,QAAUiB,SAAU,IAAK1nD,KAAM,YAAc,GAAI0mD,QAAOv7D,QAAQ6F,YAE/Gw2D,UAAUjtD,SAAS5b,KAAK,GAAIioE,IAAG,IAC/BW,WAAW5oE,KAAK,GAAIioE,IAAG,GAAIY,YAE/B,IAAqBl8C,MAAO,GAAIm7C,KAAI,UAAYc,WAAW7/D,QAAQ,GAAIk/D,IAAG,MACrDnW,KAAO,GAAIgW,KAAI,QAChCkB,kBAAmB/jC,QAAUojC,qBAC7BS,SAAU,YACVG,SAAU,iBACV,GAAIhB,IAAG,GAAIt7C,KAAM,GAAIs7C,IAAG,KACPiB,MAAQ,GAAIpB,KAAI,SAAWqB,QAAShB,SAAUiB,MAAOhB,SAAW,GAAIH,IAAG,GAAInW,KAAM,GAAImW,KAC1G,OAAO3uD,YACH,GAAIquD,cAAcwB,QAAS,MAAOE,SAAU,UAAY,GAAIpB,IAAMiB,MAAO,GAAIjB,OAQrFrtD,MAAMksB,UAAUw/B,KAAO,SAAU30C,QAASjiB,KAEtC,GAAqB45D,aAAc,GAAIC,aACnCr1D,GAAKo1D,YAAYhjE,MAAMqrB,QAASjiB,KAAMu1B,OAAS/wB,GAAG+wB,OAAQukC,eAAiBt1D,GAAGs1D,eAAgB9tD,OAASxH,GAAGwH,OAEzF+tD,oBACAj6C,UAAY,GAAIk6C,UAMrC,IALAxmE,OAAOwwB,KAAK81C,gBAAgB1pE,QAAQ,SAAU6pE,OAC1C,GAAIz1D,IAAKsb,UAAUo6C,QAAQJ,eAAeG,QAASE,UAAY31D,GAAG21D,UAAWl0D,EAAIzB,GAAGwH,MACpFA,QAAO1b,KAAKoc,MAAMV,OAAQ/F,GAC1B8zD,iBAAiBE,OAASE,YAE1BnuD,OAAOla,OACP,KAAM,IAAInB,OAAM,wBAA0Bqb,OAAOhH,KAAK,MAE1D,QAASuwB,OAAQA,OAAQwkC,iBAAkBA,mBAM/C7uD,MAAMksB,UAAUvyB,OAAS,SAAU/H,SAAW,MAAO+H,QAAO/H,UACrDoO,OACTwrD,YACEuC,cAAiB,WACjB,QAASA,kBA6ET,MAtEAA,eAAc7hC,UAAUmC,UAAY,SAAUp9B,KAAMnM,SAAW,OAAQ,GAAIqoE,QAAOl8D,KAAK3J,SAMvFymE,cAAc7hC,UAAUq2B,eAAiB,SAAUd,UAAW38D,SAC1D,GAAIgnC,OAAQrnC,KACSkQ,QAErB,OADA8sD,WAAUzgD,SAAS9b,QAAQ,SAAUyZ,MAAQ,MAAOhK,OAAMvP,KAAKoc,MAAM7M,MAAOgK,KAAK3Z,MAAM8mC,UAChFn3B,OAOXo5D,cAAc7hC,UAAUu2B,SAAW,SAAUU,IAAKr+D,SAC9C,GAAIL,KAAKyqE,SAEL,KAAM,IAAIzpE,OAAM,6CAEpBhB,MAAKyqE,UAAW,CAIhB,IAAqBv6D,SAErB,OADAlQ,MAAKyqE,UAAW,EACTv6D,OAOXo5D,cAAc7hC,UAAU22B,oBAAsB,SAAUQ,GAAIv+D,SACxD,GAAqBqqE,OAAQnwD,eAAeqkD,GAAGpkD,KAC1BmwD,WAAa,GAAIlC,KAAIQ,kBAAoBhgE,GAAI21D,GAAGV,UAAWwM,MAAOA,OACvF,IAAI9L,GAAGviB,OAEH,OAAQsuB,WAEZ,IAAqBC,YAAa,GAAInC,KAAIQ,kBAAoBhgE,GAAI21D,GAAGT,UAAWuM,MAAOA,OACvF,QAAQC,YAAYjhE,OAAO1J,KAAKia,UAAU2kD,GAAGriD,WAAYquD,cAO7DtB,cAAc7hC,UAAU62B,iBAAmB,SAAUM,GAAIv+D,SACrD,OAAQ,GAAIooE,KAAIQ,kBAAoBhgE,GAAI21D,GAAGl6D,SAO/C4kE,cAAc7hC,UAAU+2B,oBAAsB,SAAUI,GAAIv+D,SACxD,OAAQ,GAAIooE,KAAIQ,kBAAoBhgE,GAAI21D,GAAGl6D,SAM/C4kE,cAAc7hC,UAAUxtB,UAAY,SAAU/J,OAC1C,GAAIm3B,OAAQrnC,IAEZ,OADAA,MAAKyqE,UAAW,KACN/gE,OAAOqT,SAAU7M,MAAMsF,IAAI,SAAU0E,MAAQ,MAAOA,MAAK3Z,MAAM8mC,WAEtEiiC,iBAEPY,YAAe,WACf,QAASA,eACLlqE,KAAK6qE,QAAU,KAyGnB,MAlGAX,aAAYziC,UAAUxgC,MAAQ,SAAU4iE,MAAOx5D,KAC3CrQ,KAAK8qE,gBACL9qE,KAAK+qE,kBACL,IAAqBC,MAAM,GAAIpE,YAAY3/D,MAAM4iE,MAAOx5D,KAAK,EAG7D,OAFArQ,MAAKu7D,QAAUyP,IAAI3uD,OACnBpM,SAASjQ,KAAMgrE,IAAIjQ,UAAW,OAE1BoP,eAAgBnqE,KAAK+qE,gBACrB1uD,OAAQrc,KAAKu7D,QACb31B,OAAQ5lC,KAAK6qE,UAQrBX,YAAYziC,UAAUoD,aAAe,SAAUj4B,QAASvS,SACpD,OAAQuS,QAAQlO,MACZ,IAAK2kE,WACDrpE,KAAK8qE,aAAe,IACpB,IAAqBG,QAASr4D,QAAQuB,MAAMC,KAAK,SAAUC,MAAQ,MAAqB,OAAdA,KAAK3P,MAC/E,IAAKumE,OAGA,CACD,GAAqBhiE,IAAKgiE,OAAOpoE,KAC7B7C,MAAK+qE,gBAAgBxhC,eAAetgC,IACpCjJ,KAAKkrE,UAAUt4D,QAAS,mCAAqC3J,KAG7DgH,SAASjQ,KAAM4S,QAAQ2J,SAAU,MAC7Bvc,KAAK8qE,aACL9qE,KAAK+qE,gBAAgB9hE,IAAMjJ,KAAK8qE,aAGhC9qE,KAAKkrE,UAAUt4D,QAAS,WAAa3J,GAAK,8BAblDjJ,MAAKkrE,UAAUt4D,QAAS,IAAMy2D,UAAY,8BAiB9C,MACJ,KAAKF,aAED,KACJ,KAAKC,aACDppE,KAAK8qE,aAAel4D,QAAQ2J,QAC5B,MACJ,KAAK2sD,WACD,GAAqBiC,YAAav4D,QAAQuB,MAAMC,KAAK,SAAUC,MAAQ,MAAqB,oBAAdA,KAAK3P,MAC/EymE,cACAnrE,KAAK6qE,QAAUM,WAAWtoE,OAE9BoN,SAASjQ,KAAM4S,QAAQ2J,SAAU,KACjC,MACJ,SAGItM,SAASjQ,KAAM4S,QAAQ2J,SAAU,QAQ7C2tD,YAAYziC,UAAU0sB,eAAiB,SAAUmO,UAAWjiE,WAM5D6pE,YAAYziC,UAAUmC,UAAY,SAAUp9B,KAAMnM,WAMlD6pE,YAAYziC,UAAU4sB,aAAe,SAAUmO,QAASniE,WAMxD6pE,YAAYziC,UAAUqsB,eAAiB,SAAUsX,UAAW/qE,WAM5D6pE,YAAYziC,UAAUwsB,mBAAqB,SAAUoX,cAAehrE,WAMpE6pE,YAAYziC,UAAUyjC,UAAY,SAAUhxD,KAAM/M,SAC9CnN,KAAKu7D,QAAQ56D,KAAK,GAAIuiE,WAAUhpD,KAAKzH,WAAYtF,WAE9C+8D,eAEPG,UAAa,WACb,QAASA,cAoET,MA9DAA,WAAU5iC,UAAU8iC,QAAU,SAAUr6D,OAEpC,MADAlQ,MAAKu7D,YAEDiP,UAAWv6D,SAASjQ,KAAMkQ,OAC1BmM,OAAQrc,KAAKu7D,UAQrB8O,UAAU5iC,UAAUmC,UAAY,SAAUp9B,KAAMnM,SAAW,MAAO,IAAIu9D,QAAOpxD,KAAK3J,MAAO2J,KAAKiG,aAM9F43D,UAAU5iC,UAAUoD,aAAe,SAAUzlB,GAAI/kB,SAC7C,GAAI+kB,GAAG1gB,OAASukE,iBAAkB,CAC9B,GAAqBqC,UAAWlmD,GAAGjR,MAAMC,KAAK,SAAUC,MAAQ,MAAqB,OAAdA,KAAK3P,MAC5E,IAAI4mE,SACA,MAAO,IAAIjN,aAAY,GAAIiN,SAASzoE,MAAOuiB,GAAG3S,WAElDzS,MAAKkrE,UAAU9lD,GAAI,IAAM6jD,iBAAmB,mCAG5CjpE,MAAKkrE,UAAU9lD,GAAI,mBAQ3BilD,UAAU5iC,UAAUqsB,eAAiB,SAAU4K,IAAKr+D,WAMpDgqE,UAAU5iC,UAAUwsB,mBAAqB,SAAU6O,QAASziE,WAM5DgqE,UAAU5iC,UAAU4sB,aAAe,SAAUmO,QAASniE,WAMtDgqE,UAAU5iC,UAAU0sB,eAAiB,SAAUmO,UAAWjiE,WAM1DgqE,UAAU5iC,UAAUyjC,UAAY,SAAUhxD,KAAM/M,SAC5CnN,KAAKu7D,QAAQ56D,KAAK,GAAIuiE,WAAUhpD,KAAKzH,WAAYtF,WAE9Ck9D,aAgBUkB,cAAgB,gBAChBC,aAAe,MACfC,mBAAqB,KACrBC,aAAe,KACfC,SAAW,sjBAC5BtwD,IAAO,SAAUonC,QAEjB,QAASpnC,OACL,MAAkB,QAAXonC,QAAmBA,OAAO1lC,MAAM/c,KAAMkC,YAAclC,KAmD/D,MArDAopC,WAAU/tB,IAAKonC,QASfpnC,IAAIosB,UAAUu/B,MAAQ,SAAUnsD,SAAU+qB,QACtC,GAAqBgmC,gBAAiB,GAAIC,gBACrB1rE,QAAU,GAAI2rE,YACdC,SAAW,GAAItD,KAAI8C,cAYxC,OAXA1wD,UAASpa,QAAQ,SAAU0M,SACvB,GAAqBgH,QAAUlL,GAAIkE,QAAQlE,GACvCkE,SAAQ8F,cACRkB,MAAY,KAAIhH,QAAQ8F,aAExB9F,QAAQ6F,UACRmB,MAAe,QAAIhH,QAAQ6F,SAE/B+4D,SAASxvD,SAAS5b,KAAK,GAAIioE,IAAG,GAAI,GAAIH,KAAI+C,aAAcr3D,MAAOhU,QAAQ8Z,UAAU9M,QAAQ+C,WAE7F67D,SAASxvD,SAAS5b,KAAK,GAAIioE,KACpB3uD,WACH,GAAIquD,cAAcwB,QAAS,MAAOE,SAAU,UAC5C,GAAIpB,IACJ,GAAIJ,SAAQ+C,cAAeI,UAC3B,GAAI/C,IACJgD,eAAeI,mBAAmBD,UAClC,GAAInD,OAQZvtD,IAAIosB,UAAUw/B,KAAO,SAAU30C,QAASjiB,KACpC,KAAM,IAAIrP,OAAM,gBAMpBqa,IAAIosB,UAAUvyB,OAAS,SAAU/H,SAAW,MAAOsN,UAAStN,UAK5DkO,IAAIosB,UAAUy/B,iBAAmB,SAAU/5D,SACvC,MAAO,IAAIg6D,yBAAwBh6D,QAASuN,eAEzCW,KACT0rD,YACE+E,WAAc,WACd,QAASA,eAyET,MAlEAA,YAAWrkC,UAAUmC,UAAY,SAAUp9B,KAAMnM,SAAW,OAAQ,GAAIqoE,QAAOl8D,KAAK3J,SAMpFipE,WAAWrkC,UAAUq2B,eAAiB,SAAUd,UAAW38D,SACvD,GAAIgnC,OAAQrnC,KACSkQ,QAErB,OADA8sD,WAAUzgD,SAAS9b,QAAQ,SAAUyZ,MAAQ,MAAOhK,OAAMvP,KAAKoc,MAAM7M,MAAOgK,KAAK3Z,MAAM8mC,UAChFn3B,OAOX47D,WAAWrkC,UAAUu2B,SAAW,SAAUU,IAAKr+D,SAC3C,GAAIgnC,OAAQrnC,KACSkQ,OAAS,GAAIw4D,QAAO,IAAMhK,IAAIC,sBAAwB,KAAOD,IAAIn3D,KAAO,MAK7F,OAJA1D,QAAOwwB,KAAKqqC,IAAIliD,OAAO/b,QAAQ,SAAU2V,GACrClG,MAAMvP,KAAKoc,MAAM7M,OAAQ,GAAIw4D,QAAOtyD,EAAI,OAAO1M,OAAOg1D,IAAIliD,MAAMpG,GAAG7V,MAAM8mC,QAAS,GAAIqhC,QAAO,WAEjGx4D,MAAMvP,KAAK,GAAI+nE,QAAO,MACfx4D,OAOX47D,WAAWrkC,UAAU22B,oBAAsB,SAAUQ,GAAIv+D,SACrD,GAAqB4rE,SAAU,GAAIxD,KAAIiD,iBAAmB,GAAIhD,QAAO,IAAM9J,GAAGpkD,IAAM,OAC/DmwD,WAAa,GAAIlC,KAAIgD,oBAAsB/mE,KAAMk6D,GAAGV,YAAc+N,SACvF,IAAIrN,GAAGviB,OAEH,OAAQsuB,WAEZ,IAAqBuB,SAAU,GAAIzD,KAAIiD,iBAAmB,GAAIhD,QAAO,KAAO9J,GAAGpkD,IAAM,OAChEowD,WAAa,GAAInC,KAAIgD,oBAAsB/mE,KAAMk6D,GAAGT,YAAc+N,SACvF,QAAQvB,YAAYjhE,OAAO1J,KAAKia,UAAU2kD,GAAGriD,WAAYquD,cAO7DkB,WAAWrkC,UAAU62B,iBAAmB,SAAUM,GAAIv+D,SAClD,OAAQ,GAAIooE,KAAIgD,oBAAsB/mE,KAAMk6D,GAAGl6D,SAOnDonE,WAAWrkC,UAAU+2B,oBAAsB,SAAUI,GAAIv+D,SACrD,OAAQ,GAAIooE,KAAIgD,oBAAsB/mE,KAAMk6D,GAAGl6D,SAMnDonE,WAAWrkC,UAAUxtB,UAAY,SAAU/J,OACvC,GAAIm3B,OAAQrnC,IACZ,UAAU0J,OAAOqT,SAAU7M,MAAMsF,IAAI,SAAU0E,MAAQ,MAAOA,MAAK3Z,MAAM8mC,WAEtEykC,cASPD,eAAkB,WAClB,QAASA,mBAyCT,MAnCAA,gBAAepkC,UAAUukC,mBAAqB,SAAU9xD,MAEpD,MADAA,MAAK3Z,MAAMP,MACJka,MAMX2xD,eAAepkC,UAAUogC,SAAW,SAAUrtD,KAC1C,GAAI6sB,OAAQrnC,IACZ,IAAIwa,IAAI9V,OAAS+mE,oBACb,IAAKjxD,IAAI+B,UAAmC,GAAvB/B,IAAI+B,SAASpa,OAAa,CAC3C,GAAqBgqE,QAAS,GAAIzD,QAAOluD,IAAIrG,MAAY,MAAK,MAC9DqG,KAAI+B,UAAY,GAAIksD,KAAIiD,iBAAmBS,eAG1C3xD,KAAI+B,UACT/B,IAAI+B,SAAS9b,QAAQ,SAAUyZ,MAAQ,MAAOA,MAAK3Z,MAAM8mC,UAOjEwkC,eAAepkC,UAAUmC,UAAY,SAAUp9B,QAK/Cq/D,eAAepkC,UAAUugC,iBAAmB,SAAUC,QAKtD4D,eAAepkC,UAAUygC,aAAe,SAAUC,WAC3C0D,kBASUO,kBAAoB,oBACpBC,iBAAmB,cACnBC,mBAAqB,KACtChxD,IAAO,SAAUmnC,QAEjB,QAASnnC,OACL,MAAkB,QAAXmnC,QAAmBA,OAAO1lC,MAAM/c,KAAMkC,YAAclC,KAkD/D,MApDAopC,WAAU9tB,IAAKmnC,QASfnnC,IAAImsB,UAAUu/B,MAAQ,SAAUnsD,SAAU+qB,QAAU,KAAM,IAAI5kC,OAAM,gBAMpEsa,IAAImsB,UAAUw/B,KAAO,SAAU30C,QAASjiB,KAEpC,GAAqBk8D,WAAY,GAAIC,WACjC33D,GAAK03D,UAAUtlE,MAAMqrB,QAASjiB,KAAMu1B,OAAS/wB,GAAG+wB,OAAQ6mC,YAAc53D,GAAG43D,YAAapwD,OAASxH,GAAGwH,OAEjF+tD,oBACAj6C,UAAY,GAAIu8C,YAcrC,IAVA7oE,OAAOwwB,KAAKo4C,aAAahsE,QAAQ,SAAU6pE,OACvC,GAAqBxvD,SAAU,WAC3B,GAAIjG,IAAKsb,UAAUo6C,QAAQkC,YAAYnC,OAAQj6D,KAAMm6D,UAAY31D,GAAG21D,UAAWnuD,OAASxH,GAAGwH,MAC3F,IAAIA,OAAOla,OACP,KAAM,IAAInB,OAAM,sBAAwBqb,OAAOhH,KAAK,MAExD,OAAOm1D,WAEX5vD,oBAAmBwvD,iBAAkBE,MAAOxvD,WAE5CuB,OAAOla,OACP,KAAM,IAAInB,OAAM,sBAAwBqb,OAAOhH,KAAK,MAExD,QAASuwB,OAAQA,OAAQwkC,iBAAkBA,mBAM/C9uD,IAAImsB,UAAUvyB,OAAS,SAAU/H,SAAW,MAAOsN,UAAStN,UAK5DmO,IAAImsB,UAAUy/B,iBAAmB,SAAU/5D,SACvC,MAAO,IAAIg6D,yBAAwBh6D,QAASuN,eAEzCY,KACTyrD,YAmBEyF,UAAa,WACb,QAASA,aACLxsE,KAAK6qE,QAAU,KAqGnB,MA9FA2B,WAAU/kC,UAAUxgC,MAAQ,SAAU0lE,IAAKt8D,KACvCrQ,KAAK4sE,aAAe,EACpB5sE,KAAK6sE,eAGL,IAAqB7B,MAAM,GAAIpE,YAAY3/D,MAAM0lE,IAAKt8D,KAAK,EAG3D,OAFArQ,MAAKu7D,QAAUyP,IAAI3uD,OACnBpM,SAASjQ,KAAMgrE,IAAIjQ,YAEf0R,YAAazsE,KAAK6sE,aAClBxwD,OAAQrc,KAAKu7D,QACb31B,OAAQ5lC,KAAK6qE,UAQrB2B,UAAU/kC,UAAUoD,aAAe,SAAUj4B,QAASvS,SAClD,OAAQuS,QAAQlO,MACZ,IAAK0nE,mBACDpsE,KAAK4sE,eACD5sE,KAAK4sE,aAAe,GACpB5sE,KAAKkrE,UAAUt4D,QAAS,IAAMw5D,kBAAoB,+BAEtD,IAAqBU,UAAWl6D,QAAQuB,MAAMC,KAAK,SAAUC,MAAQ,MAAqB,SAAdA,KAAK3P,MAC7EooE,YACA9sE,KAAK6qE,QAAUiC,SAASjqE,OAE5BoN,SAASjQ,KAAM4S,QAAQ2J,SAAU,MACjCvc,KAAK4sE,cACL,MACJ,KAAKP,kBACD,GAAqBpB,QAASr4D,QAAQuB,MAAMC,KAAK,SAAUC,MAAQ,MAAqB,OAAdA,KAAK3P,MAC/E,IAAKumE,OAGA,CACD,GAAqBhiE,IAAKgiE,OAAOpoE,KACjC,IAAI7C,KAAK6sE,aAAatjC,eAAetgC,IACjCjJ,KAAKkrE,UAAUt4D,QAAS,mCAAqC3J,QAE5D,CACD,GAAqB8jE,gBAAiBn6D,QAAQwhD,gBAAgB5kD,IAAIkC,OAC7Cs7D,aAAep6D,QAAQg4B,cAAcr7B,MAAMmC,OAC3C4gB,QAAU1f,QAAQwhD,gBAAgB7kD,MAAMkjD,KAAKngC,QAC7C26C,UAAY36C,QAAQrxB,MAAM8rE,eAAgBC,aAC/DhtE,MAAK6sE,aAAa5jE,IAAMgkE,eAZ5BjtE,MAAKkrE,UAAUt4D,QAAS,IAAMy5D,iBAAmB,8BAerD,MACJ,SACIrsE,KAAKkrE,UAAUt4D,QAAS,oBAQpC45D,UAAU/kC,UAAU0sB,eAAiB,SAAUmO,UAAWjiE,WAM1DmsE,UAAU/kC,UAAUmC,UAAY,SAAUp9B,KAAMnM,WAMhDmsE,UAAU/kC,UAAU4sB,aAAe,SAAUmO,QAASniE,WAMtDmsE,UAAU/kC,UAAUqsB,eAAiB,SAAUsX,UAAW/qE,WAM1DmsE,UAAU/kC,UAAUwsB,mBAAqB,SAAUoX,cAAehrE,WAMlEmsE,UAAU/kC,UAAUyjC,UAAY,SAAUhxD,KAAM/M,SAC5CnN,KAAKu7D,QAAQ56D,KAAK,GAAIuiE,WAAUhpD,KAAKzH,WAAYtF,WAE9Cq/D,aAEPE,YAAe,WACf,QAASA,gBAoFT,MA7EAA,aAAYjlC,UAAU8iC,QAAU,SAAUp9D,QAASkD,KAC/C,GAAqB68D,SAAS,GAAItG,YAAY3/D,MAAMkG,QAASkD,KAAK,EAClErQ,MAAKu7D,QAAU2R,OAAO7wD,MACtB,IAAqBmuD,WAAYxqE,KAAKu7D,QAAQp5D,OAAS,GAAgC,GAA3B+qE,OAAOnS,UAAU54D,UAEzE8N,SAASjQ,KAAMktE,OAAOnS,UAC1B,QACIyP,UAAWA,UACXnuD,OAAQrc,KAAKu7D,UAQrBmR,YAAYjlC,UAAUmC,UAAY,SAAUp9B,KAAMnM,SAAW,MAAO,IAAIu9D,QAAOpxD,KAAK3J,MAAO2J,KAAKiG,aAMhGi6D,YAAYjlC,UAAUqsB,eAAiB,SAAU4K,IAAKr+D,SAClD,GAAqB8sE,WAIrB,OAHAl9D,UAASjQ,KAAM0+D,IAAIliD,OAAO/b,QAAQ,SAAU2V,GACxC+2D,QAAQ/2D,EAAEvT,OAAS,GAAIg7D,WAAUznD,EAAElG,MAAOwuD,IAAIjsD,cAE3C,GAAIsrD,KAAIW,IAAIvhD,YAAauhD,IAAIn3D,KAAM4lE,QAASzO,IAAIjsD,aAO3Di6D,YAAYjlC,UAAUwsB,mBAAqB,SAAU6O,QAASziE,SAC1D,OACIwC,MAAOigE,QAAQjgE,MACfqN,MAAOD,SAASjQ,KAAM8iE,QAAQhmD,cAQtC4vD,YAAYjlC,UAAUoD,aAAe,SAAUzlB,GAAI/kB,SAC/C,GAAI+kB,GAAG1gB,OAAS4nE,mBAAoB,CAChC,GAAqBhB,UAAWlmD,GAAGjR,MAAMC,KAAK,SAAUC,MAAQ,MAAqB,SAAdA,KAAK3P,MAC5E,IAAI4mE,SACA,MAAO,IAAIjN,aAAY,GAAIiN,SAASzoE,MAAOuiB,GAAG3S,WAElDzS,MAAKkrE,UAAU9lD,GAAI,IAAMknD,mBAAqB,qCAG9CtsE,MAAKkrE,UAAU9lD,GAAI,mBAQ3BsnD,YAAYjlC,UAAU4sB,aAAe,SAAUmO,QAASniE,WAMxDqsE,YAAYjlC,UAAU0sB,eAAiB,SAAUmO,UAAWjiE,WAM5DqsE,YAAYjlC,UAAUyjC,UAAY,SAAUhxD,KAAM/M,SAC9CnN,KAAKu7D,QAAQ56D,KAAK,GAAIuiE,WAAUhpD,KAAKzH,WAAYtF,WAE9Cu/D,eAEP3oC,WAAc,SAAU0e,QAExB,QAAS1e,cACL,MAAO0e,QAAOE,KAAK3iD,KAAMuB,uBAAyBvB,KActD,MAhBAopC,WAAUrF,WAAY0e,QAWtB1e,WAAW0D,UAAUxgC,MAAQ,SAAUmJ,OAAQC,IAAK4qD,oBAAqBzqD,qBAGrE,MAF4B,UAAxByqD,sBAAkCA,qBAAsB,GAChC,SAAxBzqD,sBAAkCA,oBAAsBC,8BACrDgyC,OAAOhb,UAAUxgC,MAAM07C,KAAK3iD,KAAMoQ,OAAQC,IAAK4qD,oBAAqBzqD,sBAExEuzB,YACTi3B,SACFj3B,YAAWknB,aACL1jD,KAAMiE,qBAKZu4B,WAAWmnB,eAAiB,WAAc,SAI1C,IAAIkiB,mBAAqB,WASrB,QAASA,mBAAkBC,kBAAmBznC,OAAQ1wB,OAAQo4D,cAAeC,2BAA4B5pC,SAC3E,SAAtB0pC,oBAAgCA,sBACD,SAA/BE,6BAAyCA,2BAA6BttE,cAAcgkC,2BAA2BC,SACnHlkC,KAAKqtE,kBAAoBA,kBACzBrtE,KAAKkV,OAASA,OACdlV,KAAKstE,cAAgBA,cACrBttE,KAAKwtE,YAAc,GAAIC,mBAAkBJ,kBAAmBznC,OAAQ1wB,OAAQo4D,cAAeC,2BAA4B5pC,SAgC3H,MAtBAypC,mBAAkBnG,KAAO,SAAU30C,QAASjiB,IAAK2sB,WAAYuwC,2BAA4B5pC,SACrF,GAAI9uB,IAAKmoB,WAAWiqC,KAAK30C,QAASjiB,KAAMu1B,OAAS/wB,GAAG+wB,OAAQwkC,iBAAmBv1D,GAAGu1D,iBAC7DsD,SAAW,SAAU1rE,GAAK,MAAOg7B,YAAW9nB,OAAOlT,IACnDsrE,cAAgB,SAAUtrE,GAAK,MAAOg7B,YAAWkqC,iBAAiBllE,GACvF,OAAO,IAAIorE,mBAAkBhD,iBAAkBxkC,OAAQ8nC,SAAUJ,cAAeC,2BAA4B5pC,UAMhHypC,kBAAkB3lC,UAAUtiC,IAAM,SAAUwoE,QACxC,GAAqBC,MAAO5tE,KAAKwtE,YAAYjD,QAAQoD,OACrD,IAAIC,KAAKvxD,OAAOla,OACZ,KAAM,IAAInB,OAAM4sE,KAAKvxD,OAAOhH,KAAK,MAErC,OAAOu4D,MAAK19D,OAMhBk9D,kBAAkB3lC,UAAUviC,IAAM,SAAUyoE,QAAU,MAAO3tE,MAAKkV,OAAOy4D,SAAW3tE,MAAKqtE,mBAClFD,qBAEPK,kBAAqB,WASrB,QAASA,mBAAkBJ,kBAAmBxC,QAASgD,QAASC,eAAgBC,4BAA6BC,UAC/E,SAAtBX,oBAAgCA,sBACpCrtE,KAAKqtE,kBAAoBA,kBACzBrtE,KAAK6qE,QAAUA,QACf7qE,KAAK6tE,QAAUA,QACf7tE,KAAK8tE,eAAiBA,eACtB9tE,KAAK+tE,4BAA8BA,4BACnC/tE,KAAKguE,SAAWA,SAChBhuE,KAAKiuE,iBACLjuE,KAAKu7D,WA6IT,MAvIAkS,mBAAkBhmC,UAAU8iC,QAAU,SAAUoD,QAC5C3tE,KAAKiuE,cAAc9rE,OAAS,EAC5BnC,KAAKu7D,QAAQp5D,OAAS,CAEtB,IAAqBqK,MAAOxM,KAAKkuE,eAAeP,QAE3Bt9D,IAAMs9D,OAAOz9D,MAAM,GAAGuC,WAAWlD,MAAMkjD,KAAKpiD,IAC5Cu9D,MAAO,GAAI7pC,aAAa98B,MAAMuF,KAAM6D,KAAK,EAC9D,QACIH,MAAO09D,KAAK7S,UACZ1+C,OAAQrc,KAAKu7D,QAAQ7xD,OAAOkkE,KAAKvxD,UAQzCoxD,kBAAkBhmC,UAAUmC,UAAY,SAAUp9B,KAAMnM,SAAW,MAAOmM,MAAK3J,OAM/E4qE,kBAAkBhmC,UAAUq2B,eAAiB,SAAUd,UAAW38D,SAC9D,GAAIgnC,OAAQrnC,IACZ,OAAOg9D,WAAUzgD,SAAS/G,IAAI,SAAUxI,GAAK,MAAOA,GAAEzM,MAAM8mC,SAAWhyB,KAAK,KAOhFo4D,kBAAkBhmC,UAAUu2B,SAAW,SAAUU,IAAKr+D,SAClD,GAAIgnC,OAAQrnC,KACSwc,MAAQ3Y,OAAOwwB,KAAKqqC,IAAIliD,OAAOhH,IAAI,SAAUyB,GAAK,MAAOA,GAAI,KAAOynD,IAAIliD,MAAMvF,GAAG1W,MAAM8mC,OAAS,MAGhGqgB,IAAM1nD,KAAKmuE,QAAQzQ,aAAan0B,eAAem1B,IAAI5hD,YACpE9c,KAAKmuE,QAAQzQ,aAAagB,IAAI5hD,YAC9B4hD,IAAI5hD,UACR,OAAO,IAAM4qC,IAAM,KAAOgX,IAAIn3D,KAAO,KAAOiV,MAAMnH,KAAK,KAAO,KAOlEo4D,kBAAkBhmC,UAAU62B,iBAAmB,SAAUM,GAAIv+D,SACzD,GAAqBwiE,QAAS7iE,KAAKouE,QAAQxP,GAAGl6D,KAC9C,OAAI1E,MAAKmuE,QAAQzQ,aAAan0B,eAAes5B,QAClC7iE,KAAKmuE,QAAQzQ,aAAamF,QAEjC7iE,KAAKmuE,QAAQxQ,qBAAqBp0B,eAAes5B,QAC1C7iE,KAAKkuE,eAAeluE,KAAKmuE,QAAQxQ,qBAAqBkF,UAEjE7iE,KAAKkrE,UAAUtM,GAAI,wBAA2BA,GAAGl6D,KAAO,KACjD,KAOX+oE,kBAAkBhmC,UAAU22B,oBAAsB,SAAUQ,GAAIv+D,SAC5D,GAAIgnC,OAAQrnC,KACSwa,IAAM,GAAKokD,GAAGpkD,IACdrG,MAAQtQ,OAAOwwB,KAAKuqC,GAAGzqD,OAAOqB,IAAI,SAAU9Q,MAAQ,MAAOA,MAAO,KAAQk6D,GAAGzqD,MAAMzP,MAAQ,MAAS2Q,KAAK,IAC9H,IAAIupD,GAAGviB,OACH,MAAO,IAAM7hC,IAAM,IAAMrG,MAAQ,IAErC,IAAqBoI,UAAWqiD,GAAGriD,SAAS/G,IAAI,SAAUY,GAAK,MAAOA,GAAE7V,MAAM8mC,SAAWhyB,KAAK,GAC9F,OAAO,IAAMmF,IAAM,IAAMrG,MAAQ,IAAMoI,SAAW,KAAO/B,IAAM,KAOnEizD,kBAAkBhmC,UAAU+2B,oBAAsB,SAAUI,GAAIv+D,SAE5D,MAAOL,MAAKkuE,eAAeluE,KAAKmuE,QAAQxQ,qBAAqBiB,GAAGl6D,QAUpE+oE,kBAAkBhmC,UAAUymC,eAAiB,SAAUP,QACnD,GAGqBz9D,OAHjBm3B,MAAQrnC,KACSiJ,GAAKjJ,KAAK6tE,QAAQF,QAClBU,OAASruE,KAAK8tE,eAAiB9tE,KAAK8tE,eAAeH,QAAU,IAIlF,IAFA3tE,KAAKiuE,cAActtE,MAAO2C,IAAKtD,KAAKmuE,QAASE,OAAQruE,KAAKouE,UAC1DpuE,KAAKmuE,QAAUR,OACX3tE,KAAKqtE,kBAAkB9jC,eAAetgC,IAGtCiH,MAAQlQ,KAAKqtE,kBAAkBpkE,IAC/BjJ,KAAKouE,QAAU,SAAU1pE,MAAQ,MAAO2pE,QAASA,OAAO7G,eAAe9iE,MAAQA,UAE9E,CAKD,GAAI1E,KAAK+tE,8BAAgC9tE,cAAcgkC,2BAA2BjjC,MAAO,CACrF,GAAqB2vB,KAAM3wB,KAAK6qE,QAAU,gBAAmB7qE,KAAK6qE,QAAU,IAAO,EACnF7qE,MAAKkrE,UAAUyC,OAAOz9D,MAAM,GAAI,oCAAuCjH,GAAK,IAAO0nB,SAElF,IAAI3wB,KAAKguE,UACVhuE,KAAK+tE,8BAAgC9tE,cAAcgkC,2BAA2BC,QAAS,CACvF,GAAqBvT,KAAM3wB,KAAK6qE,QAAU,gBAAmB7qE,KAAK6qE,QAAU,IAAO,EACnF7qE,MAAKguE,SAASM,KAAK,oCAAuCrlE,GAAK,IAAO0nB,KAE1EzgB,MAAQy9D,OAAOz9D,MACflQ,KAAKouE,QAAU,SAAU1pE,MAAQ,MAAOA,OAE5C,GAAqB8H,MAAO0D,MAAMsF,IAAI,SAAU0E,MAAQ,MAAOA,MAAK3Z,MAAM8mC,SAAWhyB,KAAK,IACrEhV,QAAUL,KAAKiuE,cAAc9mD,KAGlD,OAFAnnB,MAAKmuE,QAAU9tE,QAAQiD,IACvBtD,KAAKouE,QAAU/tE,QAAQguE,OAChB7hE,MAOXihE,kBAAkBhmC,UAAUyjC,UAAY,SAAU9lD,GAAI9hB,KAClDtD,KAAKu7D,QAAQ56D,KAAK,GAAIuiE,WAAU99C,GAAG3S,WAAYnP,OAE5CmqE,qBAEP3pC,eAAkB,WAQlB,QAASA,gBAAeyqC,YAAa56D,aAAc66D,mBAAoBrlC,mBAAoBxF,SAGvF,GAF2B,SAAvBwF,qBAAiCA,mBAAqBlpC,cAAcgkC,2BAA2BC,SACnGlkC,KAAKuuE,YAAcA,YACf56D,aAAc,CACd,GAAIqpB,YAAa7hB,iBAAiBqzD,mBAClCxuE,MAAKyuE,mBACDrB,kBAAkBnG,KAAKtzD,aAAc,OAAQqpB,WAAYmM,mBAAoBxF,UAuBzF,MAbAG,gBAAe2D,UAAUxgC,MAAQ,SAAUmJ,OAAQC,IAAK4qD,oBAAqBzqD,qBAC7C,SAAxByqD,sBAAkCA,qBAAsB,GAChC,SAAxBzqD,sBAAkCA,oBAAsBC,6BAC5D,IAAqBi+D,aAAc1uE,KAAKuuE,YAAYtnE,MAAMmJ,OAAQC,IAAK4qD,oBAAqBzqD,oBAC5F,OAAKxQ,MAAKyuE,mBAINC,YAAYryD,OAAOla,OACZ,GAAI24D,iBAAgB4T,YAAY3T,UAAW2T,YAAYryD,QAE3D3I,kBAAkBg7D,YAAY3T,UAAW/6D,KAAKyuE,mBAAoBj+D,2BAL9Dk+D,aAOR5qC,kBAmBU6qC,KAAOnzD,SAAS,QAEjCwf,aADyCxf,SAAS,OAAQ,qBAC3C,WACf,QAASwf,gBAET,MAAOA,gBAEXA,aAAY4zC,8BACRlqE,KAAM,+BACNwF,UAAWykE,KACX/yD,QAAS3b,cAAc2uE,8BAE3B5zC,YAAY6zC,YAAenqE,KAAM,aAAcwF,UAAWykE,KAAM/yD,QAAS3b,cAAc4uE,YACvF7zC,YAAYoB,aAAgB13B,KAAM,cAAewF,UAAWykE,KAAM/yD,QAAS3b,cAAcm8B,aACzFpB,YAAY8zC,kBAAqBpqE,KAAM,mBAAoBwF,UAAWykE,KAAM/yD,QAAS3b,cAAc6uE,kBACnG9zC,YAAY+zC,mBAAsBrqE,KAAM,oBAAqBwF,UAAWykE,KAAM/yD,QAAS3b,cAAc8uE,mBACrG/zC,YAAYg0C,WAActqE,KAAM,YAAawF,UAAWykE,KAAM/yD,QAAS3b,cAAc+uE,WACrFh0C,YAAYi0C,aAAgBvqE,KAAM,cAAewF,UAAWykE,KAAM/yD,QAAS3b,cAAcgvE,aACzFj0C,YAAYqB,iCACR33B,KAAM,mCACNwF,UAAWykE,KACX/yD,QAAS3b,cAAcivE,kCAE3Bl0C,YAAYkB,0BACRx3B,KAAM,2BACNwF,UAAWykE,KACX/yD,QAAS3b,cAAci8B,0BAE3BlB,YAAYm0C,kBAAqBzqE,KAAM,mBAAoBwF,UAAWykE,KAAM/yD,QAAS3b,cAAckvE,kBACnGn0C,YAAYo0C,cAAiB1qE,KAAM,eAAgBwF,UAAWykE,KAAM/yD,QAAS3b,cAAcmvE,cAC3Fp0C,YAAYq0C,iBAAoB3qE,KAAM,kBAAmBwF,UAAWykE,KAAM/yD,QAAS3b,cAAcovE,iBACjGr0C,YAAYs0C,kBACR5qE,KAAM,oBACNwF,UAAWykE,KACX/yD,QAAS3b,cAAcsvE,mBAE3Bv0C,YAAYw0C,yBACR9qE,KAAM,yBACNwF,UAAWykE,KACX/yD,QAAS3b,cAAcwvE,wBAE3Bz0C,YAAY00C,UAAahrE,KAAM,WAAYwF,UAAWykE,KAAM/yD,QAAS3b,cAAcyvE,UACnF10C,YAAYpzB,mBAAsBlD,KAAM,oBAAqBwF,UAAWykE,KAAM/yD,QAAS3b,cAAc2H,mBACrGozB,YAAY3yB,yBACR3D,KAAM,0BACNwF,UAAWykE,KACX/yD,QAAS3b,cAAcoI,yBAE3B2yB,YAAYlZ,iBACRpd,KAAM,kBACNwF,UAAWykE,KACX/yD,QAAS3b,cAAc6hB,iBAE3BkZ,YAAY20C,WAAcjrE,KAAM,YAAawF,UAAWykE,KAAM/yD,QAAS3b,cAAc0vE,WACrF30C,YAAY40C,qBAAwBlrE,KAAM,sBAAuBwF,UAAWykE,KAAM/yD,QAAS3b,cAAc2vE,qBACzG50C,YAAY60C,mBAAsBnrE,KAAM,qBAAsBwF,UAAWykE,KAAM/yD,QAAS3b,cAAc6vE,oBACtG90C,YAAY+0C,aAAgBrrE,KAAM,eAAgBwF,UAAWykE,KAAM/yD,QAAS3b,cAAc+vE,cAC1Fh1C,YAAYi1C,aAAgBvrE,KAAM,eAAgBwF,UAAWykE,KAAM/yD,QAAS3b,cAAciwE,cAC1Fl1C,YAAYm1C,WAAczrE,KAAM,aAAcwF,UAAWykE,KAAM/yD,QAAS3b,cAAcmwE,YACtFp1C,YAAYq1C,UAAa3rE,KAAM,WAAYwF,UAAWykE,KAAM/yD,QAAS3b,cAAcowE,UACnFr1C,YAAYs1C,SAAY5rE,KAAM,OAAQwF,UAAWykE,KAAM/yD,QAAS3b,cAAcswE,MAC9Ev1C,YAAYw1C,YAAe9rE,KAAM,OAAQwF,UAAWykE,KAAM/yD,QAAS3b,cAAcwwE,MACjFz1C,YAAY01C;AAAchsE,KAAM,OAAQwF,UAAWykE,KAAM/yD,QAAS3b,cAAc0wE,MAChF31C,YAAY41C,SAAYlsE,KAAM,OAAQwF,UAAWykE,KAAM/yD,QAAS3b,cAAc4wE,MAC9E71C,YAAY81C,cAAiBpsE,KAAM,OAAQwF,UAAWykE,KAAM/yD,QAAS3b,cAAc8wE,MACnF/1C,YAAY9D,aAAgBxyB,KAAM,OAAQwF,UAAWykE,KAAM/yD,QAAS3b,cAAc+wE,MAClFh2C,YAAYi2C,UAAavsE,KAAM,OAAQwF,UAAWykE,KAAM/yD,QAAS3b,cAAcixE,MAC/El2C,YAAYm2C,cAAiBzsE,KAAM,OAAQwF,UAAWykE,KAAM/yD,QAAS3b,cAAcmxE,MACnFp2C,YAAYq2C,eAAkB3sE,KAAM,OAAQwF,UAAWykE,KAAM/yD,QAAS3b,cAAcqxE,MACpFt2C,YAAYu2C,aAAgB7sE,KAAM,OAAQwF,UAAWykE,KAAM/yD,QAAS3b,cAAcuxE,MAClFx2C,YAAYy2C,SAAY/sE,KAAM,OAAQwF,UAAWykE,KAAM/yD,QAAS3b,cAAcyxE,MAC9E12C,YAAY22C,WAAcjtE,KAAM,OAAQwF,UAAWykE,KAAM/yD,QAAS3b,cAAc2xE,MAChF52C,YAAY62C,cAAiBntE,KAAM,OAAQwF,UAAWykE,KAAM/yD,QAAS3b,cAAc6xE,MACnF92C,YAAYC,aAAgBv2B,KAAM,OAAQwF,UAAWykE,KAAM/yD,QAAS3b,cAAc8xE,MAClF/2C,YAAYg3C,qBAAwBttE,KAAM,OAAQwF,UAAWykE,KAAM/yD,QAAS3b,cAAcgyE,MAC1Fj3C,YAAYk3C,eACRxtE,KAAM,gBACNwF,UAAWykE,KAEX/yD,QAAS,MAEbof,YAAYm3C,gBACRztE,KAAM,kBACNwF,UAAWykE,KAEX/yD,QAAS,MAEbof,YAAYo3C,wBAA2B1tE,KAAM,OAAQwF,UAAWykE,KAAM/yD,QAAS3b,cAAcoyE,KA+C7F,IAAqB51D,eAAgB,OAAQ,MAAO,MAAO,MAAO,OAAQ,SA8BtEN,gBAAmB,WAMnB,QAASA,iBAAgBjM,MAAOoiE,SAAUj2D,QACtCrc,KAAKkQ,MAAQA,MACblQ,KAAKsyE,SAAWA,SAChBtyE,KAAKqc,OAASA,OAElB,MAAOF,oBAEPQ,eAAkB,SAAU8lC,QAM5B,QAAS9lC,gBAAeqpC,KAAMwP,UAC1B,MAAO/S,QAAOE,KAAK3iD,KAAMgmD,KAAMwP,WAAax1D,KAEhD,MARAopC,WAAUzsB,eAAgB8lC,QAQnB9lC,gBACT+2C,YAMEx3C,UAAa,WACb,QAASA,aACLlc,KAAKoc,YAAa,EAClBpc,KAAKqc,UA8CT,MAvCAH,WAAUurB,UAAUoD,aAAe,SAAUj4B,QAASvS,SAClD,MAAO,IAAI2c,SAAQpK,QAAQlO,KAAMkO,QAAQuB,MAAOlE,SAASjQ,KAAM4S,QAAQ2J,UAAW3J,QAAQH,WAAYG,QAAQwhD,gBAAiBxhD,QAAQg4B,gBAO3I1uB,UAAUurB,UAAU0sB,eAAiB,SAAUmO,UAAWjiE,SAAW,MAAOiiE,YAM5EpmD,UAAUurB,UAAUmC,UAAY,SAAUp9B,KAAMnM,SAAW,MAAOmM,OAMlE0P,UAAUurB,UAAU4sB,aAAe,SAAUmO,QAASniE,SAAW,MAAOmiE,UAMxEtmD,UAAUurB,UAAUqsB,eAAiB,SAAU4K,IAAKr+D,SAEhD,MADAL,MAAKoc,YAAa,EACC,UAAZsiD,IAAIn3D,KAAmB+U,kBAAkBoiD,IAAK1+D,KAAKqc,QACtDgB,mBAAmBqhD,IAAK1+D,KAAKqc,SAOrCH,UAAUurB,UAAUwsB,mBAAqB,SAAU6O,QAASziE,SACxD,KAAM,IAAIW,OAAM,0BAEbkb,aAqCPmD,cAAiB,SAAUojC,QAM3B,QAASpjC,eAAclS,QAAS64C,MAC5B,MAAOvD,QAAOE,KAAK3iD,KAAMgmD,KAAM74C,UAAYnN,KAE/C,MARAopC,WAAU/pB,cAAeojC,QAQlBpjC,eACTq0C,YACE6e,oBAAuB,WAIvB,QAASA,qBAAoB/yD,WACzB,GAAI6nB,OAAQrnC,IACZA,MAAKwf,UAAYA,UACjBxf,KAAKqc,UACLrc,KAAK8I,YAAcyW,gBAAgBC,WACnCxf,KAAK4I,cAAgB,GAAI2V,KACzBiB,UAAU5W,cAAcnI,QAAQ,SAAU8c,UACyB,MAA3D8pB,MAAMz+B,cAAczD,IAAIuB,eAAe6W,SAAS9W,SAChD4gC,MAAMz+B,cAAcrD,IAAImB,eAAe6W,SAAS9W,QAAQ,KAIpE,MAAO8rE,wBAEPC,uBAA0B,WAY1B,QAASA,wBAAuBC,YAAaC,QAASC,YAAaC,eAAgBz+D,MAAO0+D,KAAM1tD,WAAYrF,oBAAqBgzD,aAC7H,GAAIzrC,OAAQrnC,IACZA,MAAKyyE,YAAcA,YACnBzyE,KAAK0yE,QAAUA,QACf1yE,KAAK2yE,YAAcA,YACnB3yE,KAAK4yE,eAAiBA,eACtB5yE,KAAK8yE,YAAcA,YACnB9yE,KAAK+yE,sBAAwB,GAAIx0D,KACjCve,KAAKgzE,eAAiB,GAAIz0D,KAC1Bve,KAAKizE,mBAAoB,EACzBjzE,KAAKkzE,eAAiB,GAAI30D,KAC1Bve,KAAKmzE,UACLh/D,MAAM1T,QAAQ,SAAU05B,SAAW,MAAOkN,OAAM8rC,OAAOh5C,QAAQz1B,MAAQy1B,QAAQt3B,OAC/E,IAAIuwE,gBAAiBR,eAAep9D,IAAI,SAAU69D,cAAgB,MAAOA,cAAa70D,WAOtF,IANAxe,KAAKszE,cACDn1D,gCAAgCi1D,eAAgBN,YAAaL,YAAYp2D,QAC7Erc,KAAKuzE,gBAAkB1zD,mBAAmBC,oBAAqBszD,gBAC/DtwE,MAAMkf,KAAKhiB,KAAKszE,cAAcvuD,UAAUtkB,QAAQ,SAAU8c,UACtD8pB,MAAMmsC,iBAAiBj2D,SAAS9W,MAAO8W,SAAS9W,MAAO4gC,MAAM6rC,kBAE7D/tD,WAAY,CACZ,GAAIsuD,eAAgB13D,sBAAsBif,YAAYi0C,YACtDjvE,MAAKwzE,iBAAiBC,cAAeA,cAAezzE,KAAKkzE,gBAE7DL,KAAKpyE,QAAQ,SAAUizE,QACnB,GAAIC,mBAAoBD,OAAO7wE,OAASkZ,sBAAsBif,YAAY6zC,WAC1ExnC,OAAMmsC,kBAAmB3wE,MAAO6wE,OAAOhvE,MAAQivE,kBAAmBtsC,MAAM6rC,kBAExElzE,KAAKkzE,eAAe/tE,IAAIwW,kBAAkBqf,YAAY8zC,qBACtD9uE,KAAKizE,mBAAoB,GAG7BnwE,MAAMkf,KAAKhiB,KAAKszE,cAAcvuD,UAAUtkB,QAAQ,SAAU8c,UACtD,GAAIQ,OAAQR,SAASQ,OAASspB,MAAM6rC,eAAe/tE,IAAIuB,eAAe6W,SAAS9W,OAC3EsX,QACAspB,MAAMusC,0BAA0Br2D,SAASW,aAAcX,SAAS9W,OAAO,KAqPnF,MA9OA+rE,wBAAuB/qC,UAAUosC,aAAe,WAC5C,GAAIxsC,OAAQrnC,IAEZ8C,OAAMkf,KAAKhiB,KAAKszE,cAAcvuD,UAAUtkB,QAAQ,SAAU8c,UACtD8pB,MAAMusC,0BAA0Br2D,SAASW,aAAcX,SAAS9W,OAAO,MAG/E5C,OAAOkX,eAAey3D,uBAAuB/qC,UAAW,sBAIpDtiC,IAAK,WACD,MAAOrC,OAAMkf,KAAKhiB,KAAK+yE,sBAAsBhuD,WAEjD9J,YAAY,EACZD,cAAc,IAElBnX,OAAOkX,eAAey3D,uBAAuB/qC,UAAW,4BAIpDtiC,IAAK,WACD,GAAqB2uE,qBAAsB9zE,KAAK+zE,mBAAmBv+D,IAAI,SAAU+H,UAAY,MAAOA,UAAS9W,MAAMjB,aAC9FwuE,iBAAmBh0E,KAAK4yE,eAAe3xE,OAG5D,OAFA+yE,kBAAiB/xD,KAAK,SAAUgyD,KAAMC,MAAQ,MAAOJ,qBAAoB/yE,QAAQkzE,KAAKz1D,UAAUjX,MAC5FusE,oBAAoB/yE,QAAQmzE,KAAK11D,UAAUjX,QACxCysE,kBAEX/4D,YAAY,EACZD,cAAc,IAElBnX,OAAOkX,eAAey3D,uBAAuB/qC,UAAW,+BAIpDtiC,IAAK,WAAc,MAAOnF,MAAKizE,mBAC/Bh4D,YAAY,EACZD,cAAc,IAElBnX,OAAOkX,eAAey3D,uBAAuB/qC,UAAW,gBAIpDtiC,IAAK,WACD,GAAqBgvE,cAErB,OADAn0E,MAAKkzE,eAAezyE,QAAQ,SAAUsjD,SAAWowB,WAAWxzE,KAAKoc,MAAMo3D,WAAYpwB,WAC5EowB,YAEXl5D,YAAY,EACZD,cAAc,IAQlBw3D,uBAAuB/qC,UAAU+rC,iBAAmB,SAAU/sE,MAAO2tE,aAAcC,iBAC/Er0E,KAAKs0E,eAAe7tE,OAAOhG,QAAQ,SAAUif,OACzC,GAAqB60D,YAAa70D,MAAM1V,KAAKwqE,MAAQJ,aAChCK,SAAW/tE,eAAe6tE,YAC1Bp5C,aAAek5C,gBAAgBlvE,IAAIsvE,SACnDt5C,gBACDA,gBACAk5C,gBAAgB9uE,IAAIkvE,SAAUt5C,eAElCA,aAAax6B,MAAOif,QAASF,MAAME,QAAS/c,MAAO0xE,gBAO3D/B,uBAAuB/qC,UAAU6sC,eAAiB,SAAU7tE,OAKxD,IAJA,GAGqBoC,SAHAvI,UACAo0E,UAAY10E,KACZ20E,SAAW,EAEX,OAAdD,WACH7rE,QAAU6rE,UAAUnB,gBAAgBpuE,IAAIuB,eAAeD,QACnDoC,SACAvI,OAAOK,KAAKoc,MAAMzc,OAAQuI,QAAQkW,OAAO,SAAUW,OAAS,MAAOA,OAAM1V,KAAK4qE,aAAeD,UAAY,KAEzGD,UAAU9B,eAAezwE,OAAS,GAClCwyE,WAEJD,UAAYA,UAAUhC,OAM1B,OAJA7pE,SAAU7I,KAAKyyE,YAAY3pE,YAAY3D,IAAIuB,eAAeD,QACtDoC,SACAvI,OAAOK,KAAKoc,MAAMzc,OAAQuI,SAEvBvI,QAQXkyE,uBAAuB/qC,UAAUmsC,0BAA4B,SAAUiB,uBAAwBpuE,MAAOsX,OAClG,GAAIspB,OAAQrnC,KACSof,iBAAmBpf,KAAKszE,cAAcnuE,IAAIuB,eAAeD,OAC9E,KAAK2Y,mBAAsBy1D,yBAA2Bl2D,gBAAgBE,WAClEg2D,yBAA2Bl2D,gBAAgBM,gBAC3CG,iBAAiBlB,eAAiBS,gBAAgBO,iBAChD21D,yBAA2Bl2D,gBAAgBO,gBACzC21D,yBAA2Bl2D,gBAAgBM,gBAC3CG,iBAAiBlB,eAAiBS,gBAAgB6sB,QACtD,MAAO,KAEX,IAAqBspC,wBAAyB90E,KAAK+yE,sBAAsB5tE,IAAIuB,eAAeD,OAC5F,IAAIquE,uBACA,MAAOA,uBAEX,IAAsD,MAAlD90E,KAAKgzE,eAAe7tE,IAAIuB,eAAeD,QAEvC,MADAzG,MAAKyyE,YAAYp2D,OAAO1b,KAAK,GAAI0e,eAAc,yCAA2C7Y,UAAUC,OAAQzG,KAAK8yE,cAC1G,IAEX9yE,MAAKgzE,eAAeztE,IAAImB,eAAeD,QAAQ,EAC/C,IAAqBsuE,sBAAuB31D,iBAAiBzW,UAAU6M,IAAI,SAAU+H,UACjF,GAEqBy3D,iBAFAC,oBAAsB13D,SAASE,SAC/By3D,uBAAyB33D,SAASC,WAEvD,IAA4B,MAAxBD,SAASC,YAAqB,CAC9B,GAAqB23D,eAAgB9tC,MAAM+tC,eAAeh2D,iBAAiBlB,cAAgBzX,MAAO8W,SAASC,aAAeO,MAC/F,OAAvBo3D,cAAc1uE,MACdyuE,uBAAyBC,cAAc1uE,OAGvCyuE,uBAAyB,KACzBD,oBAAsBE,cAActyE,WAGvC,IAAI0a,SAASK,WAAY,CAC1B,GAAqBF,MAAOH,SAASG,MAAQH,SAASK,WAAWpW,MACjEwtE,iBACIt3D,KAAKlI,IAAI,SAAUgiB,KAAO,MAAO6P,OAAM+tC,eAAeh2D,iBAAiBlB,aAAcsZ,IAAKzZ,aAE7F,IAAIR,SAASI,SAAU,CACxB,GAAqBD,MAAOH,SAASG,MAAQH,SAASI,SAASnW,MAC/DwtE,iBACIt3D,KAAKlI,IAAI,SAAUgiB,KAAO,MAAO6P,OAAM+tC,eAAeh2D,iBAAiBlB,aAAcsZ,IAAKzZ,SAElG,MAAOT,oBAAmBC,UACtBC,YAAa03D,uBACbz3D,SAAUw3D,oBACVv3D,KAAMs3D,mBAMd,OAHAF,wBACIh3D,sBAAsBsB,kBAAoBrB,MAAOA,MAAOpV,UAAWosE,uBACvE/0E,KAAK+yE,sBAAsBxtE,IAAImB,eAAeD,OAAQquE,wBAC/CA,wBAQXtC,uBAAuB/qC,UAAU4tC,oBAAsB,SAAUR,uBAAwBr9C,IAAKzZ,OAE1F,GADc,SAAVA,QAAoBA,MAAQ,MAC5ByZ,IAAIpW,YAAa,CACjB,GAAqBiD,WAAYrkB,KAAKmzE,OAAO37C,IAAI/wB,MAAM5D,MACvD,QAAS41B,SAAS,EAAM51B,MAAoB,MAAbwhB,UAAoB,KAAOA,WAE9D,GAAiB,MAAbmT,IAAI/wB,MAAe,CAEnB,GAAKouE,yBAA2Bl2D,gBAAgBE,WAC5Cg2D,yBAA2Bl2D,gBAAgBC,UAAY,CACvD,GAAIlY,eAAe8wB,IAAI/wB,SAAWkV,kBAAkBqf,YAAYq1C,WAC5D3pE,eAAe8wB,IAAI/wB,SAAWkV,kBAAkBqf,YAAY6zC,aAC5DnoE,eAAe8wB,IAAI/wB,SAAWkV,kBAAkBqf,YAAY+zC,oBAC5DroE,eAAe8wB,IAAI/wB,SAAWkV,kBAAkBqf,YAAYi0C,aAC5D,MAAOz3C,IAEP9wB,gBAAe8wB,IAAI/wB,SAAWkV,kBAAkBqf,YAAY8zC,oBAC5D9uE,KAAKizE,mBAAoB,GAIjC,GAAIvsE,eAAe8wB,IAAI/wB,SAAWkV,kBAAkBqf,YAAY00C,UAC5D,MAAOl4C,IAGX,IAAgF,MAA5Ex3B,KAAK4zE,0BAA0BiB,uBAAwBr9C,IAAI/wB,MAAOsX,OAClE,MAAOyZ,KAGf,MAAO,OAQXg7C,uBAAuB/qC,UAAU2tC,eAAiB,SAAUP,uBAAwBr9C,IAAKzZ,OACvE,SAAVA,QAAoBA,MAAQ,KAChC,IAAqBu3D,aAAct1E,KACdu1E,UAAYx3D,MACZzd,OAAS,IAI9B,IAHKk3B,IAAIkB,aACLp4B,OAASN,KAAKq1E,oBAAoBR,uBAAwBr9C,IAAKzZ,QAE/DyZ,IAAIg+C,QACCl1E,QAAUk3B,IAAImB,aACfr4B,QAAWm4B,SAAS,EAAM51B,MAAO,WAGpC,CAED,MAAQvC,QAAUg1E,YAAY5C,SAAS,CACnC,GAAqB+C,aAAcH,WACnCA,aAAcA,YAAY5C,QACtB+C,YAAY9C,cACZ4C,WAAY,GAEhBj1E,OAASg1E,YAAYD,oBAAoB12D,gBAAgBM,cAAeuY,IAAK+9C,WAG5Ej1E,SAIGA,QAHCk3B,IAAIlwB,QAAUtH,KAAKyyE,YAAYjzD,UAAUlY,QAC1CtH,KAAKyyE,YAAYjzD,UAAUjY,KAAK1C,YAAc6B,eAAe8wB,IAAI/wB,QACA,MAAjEzG,KAAKyyE,YAAY7pE,cAAczD,IAAIuB,eAAe8wB,IAAI/wB,QAC7C+wB,IAGAA,IAAImB,WAAar4B,QAAWm4B,SAAS,EAAM51B,MAAO,MAAS,MAOhF,MAHKvC,SACDN,KAAKyyE,YAAYp2D,OAAO1b,KAAK,GAAI0e,eAAc,mBAAqB7Y,UAAUgxB,IAAI/wB,OAAQzG,KAAK8yE,cAE5FxyE,QAEJkyE,0BAEPkD,yBAA4B,WAM5B,QAASA,0BAAyB71C,SAAU81C,eAAgBljE,YACxD,GAAI40B,OAAQrnC,IACZA,MAAK+yE,sBAAwB,GAAIx0D,KACjCve,KAAKgzE,eAAiB,GAAIz0D,KAC1Bve,KAAKu7D,WACLv7D,KAAKszE,cAAgB,GAAI/0D,KACzBshB,SAAS+B,iBAAiBC,QAAQphC,QAAQ,SAAUoJ,cAChD,GAAI+rE,mBAAqBnvE,OAASjB,WAAYqE,cAAgB8T,SAAU9T,aACxE6U,oBAAmBk3D,kBAAmBj3D,gBAAgBM,eAAe,EAAMxM,WAAY40B,MAAMk0B,QAASl0B,MAAMisC,iBAEhH50D,kBAAkBmhB,SAAS+B,iBAAiBj5B,UAAU6M,IAAI,SAAU8E,OAAS,MAAOA,OAAMiD,WAAa7T,OAAOisE,gBAAiBh3D,gBAAgBM,eAAe,EAAOxM,WAAYzS,KAAKu7D,QAASv7D,KAAKszE,eAqGxM,MAhGAoC,0BAAyBjuC,UAAUxgC,MAAQ,WACvC,GAAIogC,OAAQrnC,IAIZ,IAHA8C,MAAMkf,KAAKhiB,KAAKszE,cAAcvuD,UAAUtkB,QAAQ,SAAU8c,UACtD8pB,MAAMusC,0BAA0Br2D,SAAS9W,MAAO8W,SAASQ,SAEzD/d,KAAKu7D,QAAQp5D,OAAS,EAAG,CACzB,GAAqB0zE,aAAc71E,KAAKu7D,QAAQlmD,KAAK,KACrD,MAAM,IAAIrU,OAAM,2BAA6B60E,aAEjD,MAAO/yE,OAAMkf,KAAKhiB,KAAK+yE,sBAAsBhuD,WAOjD2wD,yBAAyBjuC,UAAUmsC,0BAA4B,SAAUntE,MAAOsX,OAC5E,GAAIspB,OAAQrnC,KACSof,iBAAmBpf,KAAKszE,cAAcnuE,IAAIuB,eAAeD,OAC9E,KAAK2Y,iBACD,MAAO,KAEX,IAAqB01D,wBAAyB90E,KAAK+yE,sBAAsB5tE,IAAIuB,eAAeD,OAC5F,IAAIquE,uBACA,MAAOA,uBAEX,IAAsD,MAAlD90E,KAAKgzE,eAAe7tE,IAAIuB,eAAeD,QAEvC,MADAzG,MAAKu7D,QAAQ56D,KAAK,GAAI0e,eAAc,yCAA2C7Y,UAAUC,OAAQ2Y,iBAAiB3M,aAC3G,IAEXzS,MAAKgzE,eAAeztE,IAAImB,eAAeD,QAAQ,EAC/C,IAAqBsuE,sBAAuB31D,iBAAiBzW,UAAU6M,IAAI,SAAU+H,UACjF,GAEqBy3D,iBAFAC,oBAAsB13D,SAASE,SAC/By3D,uBAAyB33D,SAASC,WAEvD,IAA4B,MAAxBD,SAASC,YAAqB,CAC9B,GAAqB23D,eAAgB9tC,MAAM+tC,gBAAiB3uE,MAAO8W,SAASC,aAAeO,MAAOqB,iBAAiB3M,WACxF,OAAvB0iE,cAAc1uE,MACdyuE,uBAAyBC,cAAc1uE,OAGvCyuE,uBAAyB,KACzBD,oBAAsBE,cAActyE,WAGvC,IAAI0a,SAASK,WAAY,CAC1B,GAAqBF,MAAOH,SAASG,MAAQH,SAASK,WAAWpW,MACjEwtE,iBACIt3D,KAAKlI,IAAI,SAAUgiB,KAAO,MAAO6P,OAAM+tC,eAAe59C,IAAKzZ,MAAOqB,iBAAiB3M,kBAEtF,IAAI8K,SAASI,SAAU,CACxB,GAAqBD,MAAOH,SAASG,MAAQH,SAASI,SAASnW,MAC/DwtE,iBACIt3D,KAAKlI,IAAI,SAAUgiB,KAAO,MAAO6P,OAAM+tC,eAAe59C,IAAKzZ,MAAOqB,iBAAiB3M,cAE3F,MAAO6K,oBAAmBC,UACtBC,YAAa03D,uBACbz3D,SAAUw3D,oBACVv3D,KAAMs3D,mBAMd,OAHAF,wBACIh3D,sBAAsBsB,kBAAoBrB,MAAOA,MAAOpV,UAAWosE,uBACvE/0E,KAAK+yE,sBAAsBxtE,IAAImB,eAAeD,OAAQquE,wBAC/CA,wBAQXY,yBAAyBjuC,UAAU2tC,eAAiB,SAAU59C,IAAKzZ,MAAO+3D,qBACxD,SAAV/3D,QAAoBA,MAAQ,KAChC,IAAqBg4D,aAAa,CAC7Bv+C,KAAIkB,YAA2B,MAAblB,IAAI/wB,QAEnBC,eAAe8wB,IAAI/wB,SAAWkV,kBAAkBqf,YAAY00C,WAC5DhpE,eAAe8wB,IAAI/wB,SAAWkV,kBAAkBqf,YAAYkB,0BAC5D65C,YAAa,EAE4C,MAApD/1E,KAAK4zE,0BAA0Bp8C,IAAI/wB,MAAOsX,SAC/Cg4D,YAAa,GAGrB,IAAqBz1E,QAASk3B,GAS9B,OARIA,KAAIg+C,SAAWO,aACXv+C,IAAImB,WACJr4B,QAAWm4B,SAAS,EAAM51B,MAAO,MAGjC7C,KAAKu7D,QAAQ56D,KAAK,GAAI0e,eAAc,mBAAqB7Y,UAAUgxB,IAAI/wB,OAAQqvE,uBAGhFx1E,QAEJo1E,4BAqIPM,sBAAyB,WACzB,QAASA,0BAmET,MA1DAA,uBAAsBvuC,UAAUwuC,YAAc,SAAUz0E,QAAS2f,SAAU+0D,eAO3EF,sBAAsBvuC,UAAU0uC,WAAa,SAAU30E,QAAS00E,eAQhEF,sBAAsBvuC,UAAU5lB,gBAAkB,SAAUhhB,YAAasgB,SAAUC,eAKnF40D,sBAAsBvuC,UAAUlmB,qBAAuB,aAMvDy0D,sBAAsBvuC,UAAU2uC,kBAAoB,SAAUj1D,YAK9D60D,sBAAsBvuC,UAAU4uC,+BAAiC,aAMjEL,sBAAsBvuC,UAAU6uC,iBAAmB,SAAU5xE,QAM7DsxE,sBAAsBvuC,UAAU8uC,kBAAoB,SAAU7xE,QAM9DsxE,sBAAsBvuC,UAAU+uC,gCAAkC,SAAUr1D,YAQ5E60D,sBAAsBvuC,UAAUgvC,6BAA+B,SAAUC,cAAeC,iBAAkBC,OACnGZ,yBASPj1D,iBAAoB,WAKpB,QAASA,kBAAiB49B,MAAO32C,WAC7BhI,KAAK2+C,MAAQA,MACb3+C,KAAKgI,UAAYA,UAErB,MAAO+Y,qBAqCUF,kBAAoB,kEACpBD,mBAAqB,eACrBP,uBAAyB,gBACzBw2D,yBAA2B,IAC3BC,iBAAmB,OACnBC,aAAe,QACfC,aAAe,QACfC,oBAAsB,WACvCC,oBACJA,mBAAkBC,QAAU,EAC5BD,kBAAkBE,aAAe,EACjCF,kBAAkBG,UAAY,EAC9BH,kBAAkBA,kBAAkBC,SAAW,UAC/CD,kBAAkBA,kBAAkBE,cAAgB,eACpDF,kBAAkBA,kBAAkBG,WAAa,WAIjD,IAAIC,eAAiB,WAOjB,QAASA,eAAc5yE,KAAMoY,WAAYvV,KAAMkL,YAC3CzS,KAAK0E,KAAOA,KACZ1E,KAAK8c,WAAaA,WAClB9c,KAAKuH,KAAOA,KACZvH,KAAKyS,WAAaA,WAkBtB,MAhBA5O,QAAOkX,eAAeu8D,cAAc7vC,UAAW,aAI3CtiC,IAAK,WAAc,MAAOnF,MAAKuH,OAAS2vE,kBAAkBE,cAC1Dn8D,YAAY,EACZD,cAAc,IAElBnX,OAAOkX,eAAeu8D,cAAc7vC,UAAW,eAI3CtiC,IAAK,WAAc,MAAOnF,MAAKuH,OAAS2vE,kBAAkBG,WAC1Dp8D,YAAY,EACZD,cAAc,IAEXs8D,iBAKPC,cAAiB,WAQjB,QAASA,eAAcC,YAAaxhB,qBAAsByhB,gBAAiB32C,MAAO42C,eAC9E,GAAIrwC,OAAQrnC,IACZA,MAAKw3E,YAAcA,YACnBx3E,KAAKg2D,qBAAuBA,qBAC5Bh2D,KAAKy3E,gBAAkBA,gBACvBz3E,KAAK03E,cAAgBA,cACrB13E,KAAK23E,YAAc,GAAIp5D,KACvBve,KAAK43E,WAAa,GAAIr5D,KACtBuiB,MAAMrgC,QAAQ,SAAUkhC,MAAQ,MAAO0F,OAAMswC,YAAYpyE,IAAIo8B,KAAKj9B,KAAMi9B,QAoa5E,MA/ZA41C,eAAc9vC,UAAUowC,aAAe,WAAc,MAAO/0E,OAAMkf,KAAKhiB,KAAK43E,WAAW7yD,WAOvFwyD,cAAc9vC,UAAUqwC,gCAAkC,SAAUC,QAASC,gBAAiBvlE,YAC1F,GAAI40B,OAAQrnC,IACZ,IAAI+3E,QAAQ1sC,eAAgB,CACxB,GAAqB4sC,gBAUrB,OATAp0E,QAAOwwB,KAAK0jD,QAAQ1sC,gBAAgB5qC,QAAQ,SAAU0gB,UAClD,GAAqBrE,YAAai7D,QAAQ1sC,eAAelqB,SAC/B,iBAAfrE,YACPuqB,MAAM6wC,qBAAqB/2D,SAAUrE,YAAY,EAAMrK,cAAgBwlE,cAGvE5wC,MAAMonB,aAAa,uCAA0CttC,SAAW,8DAAkErE,WAAa,YAAgBA,YAAa,IAAKrK,cAG1LwlE,aAAaziE,IAAI,SAAUic,MAAQ,MAAO4V,OAAM8wC,yBAAyBH,gBAAiBvmD,UAQzG8lD,cAAc9vC,UAAU2wC,6BAA+B,SAAUL,QAAStlE,YACtE,GAAI40B,OAAQrnC,IACZ,IAAI+3E,QAAQj0B,cAAe,CACvB,GAAqBu0B,qBAUrB,OATAx0E,QAAOwwB,KAAK0jD,QAAQj0B,eAAerjD,QAAQ,SAAU0gB,UACjD,GAAqBrE,YAAai7D,QAAQj0B,cAAc3iC,SAC9B,iBAAfrE,YACPuqB,MAAMixC,WAAWn3D,SAAUrE,WAAYrK,cAAgB4lE,mBAGvDhxC,MAAMonB,aAAa,+BAAkCttC,SAAW,8DAAkErE,WAAa,YAAgBA,YAAa,IAAKrK,cAGlL4lE,oBAQfd,cAAc9vC,UAAUunB,mBAAqB,SAAUnsD,MAAO4P,YAC1D,GAAqB8lE,YAAa9lE,WAAWlD,MAAMlK,UACnD,KACI,GAAqB7E,KAAMR,KAAKw3E,YAAYxoB,mBAAmBnsD,MAAO01E,WAAYv4E,KAAKg2D,qBAIvF,OAHIx1D,MACAR,KAAKw4E,8BAA8Bh4E,IAAI6b,OAAQ5J,YACnDzS,KAAKy4E,YAAYj4E,IAAKiS,YACfjS,IAEX,MAAO8V,GAEH,MADAtW,MAAKyuD,aAAa,GAAKn4C,EAAG7D,YACnBzS,KAAKw3E,YAAYpoB,qBAAqB,QAASmpB,cAY9DhB,cAAc9vC,UAAUixC,2BAA6B,SAAU7pB,YAAahsD,MAAO4P,WAAYkmE,qBAAsBC,YAAaC,YAE9H,IAAK,GADgB3mB,UAAWlyD,KAAK84E,uBAAuBjqB,YAAahsD,MAAO4P,YACtD7G,EAAI,EAAGA,EAAIsmD,SAAS/vD,OAAQyJ,IAAK,CACvD,GAAqBmtE,SAAU7mB,SAAStmD,EACpCmtE,SAAQ5vB,SACR0vB,WAAWl4E,KAAK,GAAI8pC,aAAYsuC,QAAQzkD,IAAKykD,QAAQr0E,KAAM+N,aAEtDsmE,QAAQj8D,WACb9c,KAAKg5E,kBAAkBD,QAAQzkD,IAAKykD,QAAQj8D,WAAYrK,WAAYkmE,qBAAsBC,cAG1FD,qBAAqBh4E,MAAMo4E,QAAQzkD,IAAK,KACxCt0B,KAAKi5E,iBAAiBF,QAAQzkD,IAAK,KAAM7hB,WAAYkmE,qBAAsBC,gBAUvFrB,cAAc9vC,UAAUqxC,uBAAyB,SAAUjqB,YAAahsD,MAAO4P,YAC3E,GAAI40B,OAAQrnC,KACSu4E,WAAa9lE,WAAWlD,MAAMlK,UACnD,KACI,GAAqB6zE,gBAAiBl5E,KAAKw3E,YAAY5oB,sBAAsBC,YAAahsD,MAAO01E,WAQjG,OAPAv4E,MAAKw4E,8BAA8BU,eAAe78D,OAAQ5J,YAC1DymE,eAAevrB,iBAAiBltD,QAAQ,SAAUs4E,SAC1CA,QAAQj8D,YACRuqB,MAAMoxC,YAAYM,QAAQj8D,WAAYrK,cAG9CymE,eAAetrB,SAASntD,QAAQ,SAAU04E,SAAW9xC,MAAMonB,aAAa0qB,QAAS1mE,WAAY8gD,gBAAgBC,WACtG0lB,eAAevrB,iBAE1B,MAAOr3C,GAEH,MADAtW,MAAKyuD,aAAa,GAAKn4C,EAAG7D,iBAYlC8kE,cAAc9vC,UAAUwxC,iBAAmB,SAAUv0E,KAAM7B,MAAO4P,WAAYkmE,qBAAsBC,aAC5F53D,kBAAkBtc,OAClBA,KAAOA,KAAKujB,UAAU,GAClBplB,OACA7C,KAAKyuD,aAAa,8LAC6Fh8C,WAAY8gD,gBAAgBE,OAE/IzzD,KAAKo5E,gBAAgB10E,KAAM7B,MAAO4P,WAAYkmE,qBAAsBC,cAGpEA,YAAYj4E,KAAK,GAAI22E,eAAc5yE,KAAM1E,KAAKw3E,YAAYpoB,qBAAqBvsD,MAAO,IAAKq0E,kBAAkBE,aAAc3kE,cAYnI8kE,cAAc9vC,UAAUywC,qBAAuB,SAAUxzE,KAAMoY,WAAYxV,OAAQmL,WAAYkmE,qBAAsBC,aACjH,GAAqBS,kBAAkB,CACnC30E,MAAKqP,WAAWkjE,sBAChBoC,iBAAkB,EAClB30E,KAAOA,KAAKujB,UAAUgvD,oBAAoB90E,SAErC6e,kBAAkBtc,QACvB20E,iBAAkB,EAClB30E,KAAOA,KAAKujB,UAAU,IAEtBoxD,gBACAr5E,KAAKo5E,gBAAgB10E,KAAMoY,WAAYrK,WAAYkmE,qBAAsBC,aAGzE54E,KAAKg5E,kBAAkBt0E,KAAM1E,KAAKs5E,cAAcx8D,WAAYxV,OAAQmL,YAAaA,WAAYkmE,qBAAsBC,cAW3HrB,cAAc9vC,UAAU8xC,2BAA6B,SAAU70E,KAAM7B,MAAO4P,WAAYkmE,qBAAsBC,aAC1G,GAAqB3sD,MAAOjsB,KAAKgvD,mBAAmBnsD,MAAO4P,WAC3D,SAAIwZ,OACAjsB,KAAKg5E,kBAAkBt0E,KAAMunB,KAAMxZ,WAAYkmE,qBAAsBC,cAC9D,IAYfrB,cAAc9vC,UAAUuxC,kBAAoB,SAAUt0E,KAAMlE,IAAKiS,WAAYkmE,qBAAsBC,aAC/FD,qBAAqBh4E,MAAM+D,KAAMlE,IAAI4P,SACrCwoE,YAAYj4E,KAAK,GAAI22E,eAAc5yE,KAAMlE,IAAK02E,kBAAkBC,QAAS1kE,cAU7E8kE,cAAc9vC,UAAU2xC,gBAAkB,SAAU10E,KAAMoY,WAAYrK,WAAYkmE,qBAAsBC,aAIpG,GAAqBp4E,KAAMR,KAAKs5E,cAAcx8D,YAAc,QAAQ,EAAOrK,WAC3EkmE,sBAAqBh4E,MAAM+D,KAAMlE,IAAI4P,SACrCwoE,YAAYj4E,KAAK,GAAI22E,eAAc5yE,KAAMlE,IAAK02E,kBAAkBG,UAAW5kE,cAQ/E8kE,cAAc9vC,UAAU6xC,cAAgB,SAAUz2E,MAAO22E,cAAe/mE,YACpE,GAAqB8lE,YAAa9lE,WAAWlD,MAAMlK,UACnD,KACI,GAAqB7E,KAAMg5E,cACvBx5E,KAAKw3E,YAAYlpB,mBAAmBzrD,MAAO01E,WAAYv4E,KAAKg2D,sBAC5Dh2D,KAAKw3E,YAAYppB,aAAavrD,MAAO01E,WAAYv4E,KAAKg2D,qBAI1D,OAHIx1D,MACAR,KAAKw4E,8BAA8Bh4E,IAAI6b,OAAQ5J,YACnDzS,KAAKy4E,YAAYj4E,IAAKiS,YACfjS,IAEX,MAAO8V,GAEH,MADAtW,MAAKyuD,aAAa,GAAKn4C,EAAG7D,YACnBzS,KAAKw3E,YAAYpoB,qBAAqB,QAASmpB,cAQ9DhB,cAAc9vC,UAAU0wC,yBAA2B,SAAUH,gBAAiByB,WAC1E,GAAIA,UAAUj9C,YACV,MAAO,IAAIyN,yBAAwBwvC,UAAU/0E,KAAM80B,oBAAoBG,UAAW15B,cAAc6hB,gBAAgBC,KAAM03D,UAAU38D,WAAY,KAAM28D,UAAUhnE,WAEhK,IACqBmnB,aAGA8/C,iBAJA3/C,KAAO,KAEP4/C,kBAAoB,KACpBnnE,MAAQinE,UAAU/0E,KAAKyF,MAAM0sE,yBAGlD,IAAIrkE,MAAMrQ,OAAS,EACf,GAAIqQ,MAAM,IAAMskE,iBAAkB,CAC9B6C,kBAAoBnnE,MAAM,GAC1BxS,KAAK45E,iCAAiCD,kBAAmBF,UAAUhnE,YAAY,GAC/EinE,iBAAmBz4D,6BAA6BjhB,KAAKy3E,gBAAiBO,gBAAiB2B,mBAAmB,EAC1G,IAAqBE,gBAAiBF,kBAAkB54E,QAAQ,IAChE,IAAI84E,gBAAiB,EAAI,CACrB,GAAqBC,IAAKH,kBAAkB1xD,UAAU,EAAG4xD,gBACpCn1E,KAAOi1E,kBAAkB1xD,UAAU4xD,eAAiB,EACzEF,mBAAoBv4E,eAAe04E,GAAIp1E,MAE3Ck1B,YAAcJ,oBAAoBC,cAE7BjnB,OAAM,IAAMukE,cACjB4C,kBAAoBnnE,MAAM,GAC1BonB,YAAcJ,oBAAoBK,MAClC6/C,kBAAoBz5E,cAAc6hB,gBAAgBC,OAE7CvP,MAAM,IAAMwkE,eACjBj9C,KAAOvnB,MAAMrQ,OAAS,EAAIqQ,MAAM,GAAK,KACrCmnE,kBAAoBnnE,MAAM,GAC1BonB,YAAcJ,oBAAoBM,MAClC4/C,kBAAoBz5E,cAAc6hB,gBAAgBuB,OAU1D,OAN0B,QAAtBs2D,oBACAA,kBAAoB35E,KAAKy3E,gBAAgBrB,kBAAkBqD,UAAU/0E,MACrEg1E,iBAAmBz4D,6BAA6BjhB,KAAKy3E,gBAAiBO,gBAAiB2B,mBAAmB,GAC1G//C,YAAcJ,oBAAoBE,SAClC15B,KAAK45E,iCAAiCD,kBAAmBF,UAAUhnE,YAAY,IAE5E,GAAIw3B,yBAAwB0vC,kBAAmB//C,YAAa8/C,iBAAiB,GAAID,UAAU38D,WAAYid,KAAM0/C,UAAUhnE,aAUlI8kE,cAAc9vC,UAAU6wC,WAAa,SAAU5zE,KAAMoY,WAAYrK,WAAYkmE,qBAAsBoB,cAC3F/4D,kBAAkBtc,OAClBA,KAAOA,KAAKq+B,OAAO,GACnB/iC,KAAKg6E,qBAAqBt1E,KAAMoY,WAAYrK,WAAYsnE,eAGxD/5E,KAAKi6E,YAAYv1E,KAAMoY,WAAYrK,WAAYkmE,qBAAsBoB,eAU7ExC,cAAc9vC,UAAUuyC,qBAAuB,SAAUt1E,KAAMoY,WAAYrK,WAAYsnE,cACnF,GAAqBh2B,SAAUvhD,cAAckC,MAAOA,KAAM,KACrCw1E,UAAYn2B,QAAQ,GACpBtnB,MAAQsnB,QAAQ,GAAGriD,aACxC,IAAI+6B,MACA,OAAQA,OACJ,IAAK,QACL,IAAK,OACD,GAAqBj8B,KAAMR,KAAKm6E,aAAar9D,WAAYrK,WACzDsnE,cAAap5E,KAAK,GAAIwpC,eAAc+vC,UAAW,KAAMz9C,MAAOj8B,IAAKiS,YACjE,MACJ,SACIzS,KAAKyuD,aAAa,8CAAiDhyB,MAAQ,WAAey9C,UAAY,yCAA2CznE,gBAKzJzS,MAAKyuD,aAAa,wCAA0CyrB,UAAY,4EAA6EznE,aAW7J8kE,cAAc9vC,UAAUwyC,YAAc,SAAUv1E,KAAMoY,WAAYrK,WAAYkmE,qBAAsBoB,cAEhG,GAAIllE,IAAKxS,aAAaqC,MAAO,KAAMA,OAAQg4B,OAAS7nB,GAAG,GAAIqlE,UAAYrlE,GAAG,GACrDrU,IAAMR,KAAKm6E,aAAar9D,WAAYrK,WACzDkmE,sBAAqBh4E,MAAM+D,KAAMlE,IAAI4P,SACrC2pE,aAAap5E,KAAK,GAAIwpC,eAAc+vC,UAAWx9C,OAAQ,KAAMl8B,IAAKiS,cAStE8kE,cAAc9vC,UAAU0yC,aAAe,SAAUt3E,MAAO4P,YACpD,GAAqB8lE,YAAa9lE,WAAWlD,MAAMlK,UACnD,KACI,GAAqB7E,KAAMR,KAAKw3E,YAAY1pB,YAAYjrD,MAAO01E,WAAYv4E,KAAKg2D,qBAIhF,OAHIx1D,MACAR,KAAKw4E,8BAA8Bh4E,IAAI6b,OAAQ5J,aAE9CjS,KAAOA,IAAIA,cAAe0kB,YAC3BllB,KAAKyuD,aAAa,oCAAqCh8C,YAChDzS,KAAKw3E,YAAYpoB,qBAAqB,QAASmpB,cAE1Dv4E,KAAKy4E,YAAYj4E,IAAKiS,YACfjS,KAEX,MAAO8V,GAEH,MADAtW,MAAKyuD,aAAa,GAAKn4C,EAAG7D,YACnBzS,KAAKw3E,YAAYpoB,qBAAqB,QAASmpB,cAS9DhB,cAAc9vC,UAAUgnB,aAAe,SAAUthD,QAASsF,WAAYkhD,OACpD,SAAVA,QAAoBA,MAAQJ,gBAAgBE,OAChDzzD,KAAK03E,cAAc/2E,KAAK,GAAI+yD,YAAWjhD,WAAYtF,QAASwmD,SAOhE4jB,cAAc9vC,UAAU+wC,8BAAgC,SAAUn8D,OAAQ5J,YACtE,IAAK,GAAIxQ,IAAK,EAAGm4E,SAAW/9D,OAAQpa,GAAKm4E,SAASj4E,OAAQF,KAAM,CAC5D,GAAIsB,OAAQ62E,SAASn4E,GACrBjC,MAAKyuD,aAAalrD,MAAM4J,QAASsF,cAQzC8kE,cAAc9vC,UAAUgxC,YAAc,SAAUj4E,IAAKiS,YACjD,GAAI40B,OAAQrnC,IACZ,IAAIQ,IAAK,CACL,GAAqB65E,WAAY,GAAIC,cACrC95E,KAAID,MAAM85E,WACVA,UAAUv5C,MAAMrgC,QAAQ,SAAUD,IAAK+5E,UACnC,GAAqBC,UAAWnzC,MAAMswC,YAAYxyE,IAAIo1E,SACjDC,UAIDnzC,MAAMuwC,WAAWryE,IAAIg1E,SAAUC,UAH/BnzC,MAAMonB,aAAa,aAAe8rB,SAAW,uBAAwB,GAAIxqE,iBAAgB0C,WAAWlD,MAAMmjD,OAAOlyD,IAAIwlD,KAAKz2C,OAAQkD,WAAWlD,MAAMmjD,OAAOlyD,IAAIwlD,KAAKx2C,WAcnL+nE,cAAc9vC,UAAUmyC,iCAAmC,SAAUz4D,SAAU1O,WAAYgoE,QACvF,GAAqBC,QAASD,OAASz6E,KAAKy3E,gBAAgBlB,kBAAkBp1D,UAC1EnhB,KAAKy3E,gBAAgBnB,iBAAiBn1D,SACtCu5D,QAAOn3E,OACPvD,KAAKyuD,aAAaisB,OAAOp3E,IAAKmP,WAAY8gD,gBAAgBE,QAG3D8jB,iBAEP+C,cAAiB,SAAU73B,QAE3B,QAAS63B,iBACL,GAAIjzC,OAAQob,OAAO1lC,MAAM/c,KAAMkC,YAAclC,IAE7C,OADAqnC,OAAMvG,MAAQ,GAAIviB,KACX8oB,MAaX,MAjBA+B,WAAUkxC,cAAe73B,QAWzB63B,cAAc7yC,UAAUkgB,UAAY,SAAUnnD,IAAKH,SAI/C,MAHAL,MAAK8gC,MAAMv7B,IAAI/E,IAAIkE,KAAMlE,KACzBA,IAAIknD,IAAInnD,MAAMP,MACdA,KAAKiQ,SAASzP,IAAI2zB,KAAM9zB,SACjB,MAEJi6E,eACTlxB,qBA0BmB3mC,uBAAyB,SACzBS,mBAAqB,aACrBM,aAAe,OACfb,oBAAsB,MACtBD,qBAAuB,OACvBe,qBAAuB,aACvBL,cAAgB,QAChBE,eAAiB,SACjBV,qBAAuB,gBACvBC,cAAgB,cAgDjCG,uBACJA,sBAAqBG,WAAa,EAClCH,qBAAqBK,MAAQ,EAC7BL,qBAAqBU,WAAa,EAClCV,qBAAqBO,OAAS,EAC9BP,qBAAqBC,MAAQ,EAC7BD,qBAAqBA,qBAAqBG,YAAc,aACxDH,qBAAqBA,qBAAqBK,OAAS,QACnDL,qBAAqBA,qBAAqBU,YAAc,aACxDV,qBAAqBA,qBAAqBO,QAAU,SACpDP,qBAAqBA,qBAAqBC,OAAS,OACnD,IAAIU,kBAAoB,WAQpB,QAASA,kBAAiBpc,KAAM4a,WAAYC,SAAUE,YAAaC,WAC/DviB,KAAKuH,KAAOA,KACZvH,KAAKmiB,WAAaA,WAClBniB,KAAKoiB,SAAWA,SAChBpiB,KAAKsiB,YAAcA,YACnBtiB,KAAKuiB,UAAYA,UAErB,MAAOoB,qBAYUg3D,iBAAmB,2GAEnBC,YAAc,EAEdC,WAAa,EAEbC,WAAa,EAEbC,UAAY,EAEZC,cAAgB,EAEhBC,UAAY,EAEZC,aAAe,EAEfC,qBAAuB,EAEvBC,mBAAqB,EAErBC,gBAAkB,GAClB71D,oBAAsB,cAEtBC,iBAAmB,WAEnB61D,cAAgB,WAChBC,qBAAuB,IACvBh3D,WAAa,QACbi3D,kBAAoBx0E,YAAYC,MAAM,KAAK,GAQ3Cw0E,oBAAsB,GAAIx7E,eAAcy7E,eAAe,sBACxEC,mBAAsB,SAAUl5B,QAOhC,QAASk5B,oBAAmBxuE,QAAS64C,KAAM2N,OACvC,MAAOlR,QAAOE,KAAK3iD,KAAMgmD,KAAM74C,QAASwmD,QAAU3zD,KAEtD,MATAopC,WAAUuyC,mBAAoBl5B,QASvBk5B,oBACTjoB,YACEkoB,oBAAuB,WAMvB,QAASA,qBAAoBC,YAAaC,UAAWz/D,QACjDrc,KAAK67E,YAAcA,YACnB77E,KAAK87E,UAAYA,UACjB97E,KAAKqc,OAASA,OAElB,MAAOu/D,wBAEP52C,eAAkB,WASlB,QAASA,gBAAe+2C,QAASvE,YAAaC,gBAAiBlJ,YAAaP,SAAUgO,YAClFh8E,KAAK+7E,QAAUA,QACf/7E,KAAKw3E,YAAcA,YACnBx3E,KAAKy3E,gBAAkBA,gBACvBz3E,KAAKuuE,YAAcA,YACnBvuE,KAAKguE,SAAWA,SAChBhuE,KAAKg8E,WAAaA,WA4HtB,MAjHAh3C,gBAAeyC,UAAUxgC,MAAQ,SAAUuY,UAAWzY,SAAUqX,WAAY0iB,MAAO2jB,QAAS38C,aACxF,GAAqBxH,QAASN,KAAKi8E,SAASz8D,UAAWzY,SAAUqX,WAAY0iB,MAAO2jB,QAAS38C,aACxE8lD,SAAWttD,OAAO+b,OAAO0C,OAAO,SAAUxb,OAAS,MAAOA,OAAMowD,QAAUJ,gBAAgBC,UAC1Fn3C,OAAS/b,OAAO+b,OAAO0C,OAAO,SAAUxb,OAAS,MAAOA,OAAMowD,QAAUJ,gBAAgBE,OAI7G,IAHI7F,SAASzrD,OAAS,GAClBnC,KAAKguE,SAASM,KAAK,6BAA+B1gB,SAASv4C,KAAK,OAEhEgH,OAAOla,OAAS,EAAG,CACnB,GAAqB0zE,aAAcx5D,OAAOhH,KAAK,KAC/C,MAAMhS,aAAY,2BAA6BwyE,aAEnD,OAAS9uE,SAAUzG,OAAOu7E,YAAa/6C,MAAOxgC,OAAOw7E,YAWzD92C,eAAeyC,UAAUw0C,SAAW,SAAUz8D,UAAWzY,SAAUqX,WAAY0iB,MAAO2jB,QAAS38C,aAC3F,MAAO9H,MAAKk8E,aAAal8E,KAAKm8E,WAAWn8E,KAAKuuE,YAAYtnE,MAAMF,SAAUe,aAAa,EAAM9H,KAAKo8E,uBAAuB58D,aAAcA,UAAWzY,SAAUqX,WAAY0iB,MAAO2jB,QAAS38C,cAY5Lk9B,eAAeyC,UAAUy0C,aAAe,SAAUG,kBAAmB78D,UAAWzY,SAAUqX,WAAY0iB,MAAO2jB,QAAS38C,aAClH,GAAqBxH,QACA+b,OAASggE,kBAAkBhgE,OAC3By/D,YACrB,IAAIO,kBAAkBthB,UAAU54D,OAAS,EAAG,CACxC,GAAqBm6E,gBAAiBz3D,wBAAwBzG,YACzCm+D,UAAY13D,wBAAwBic,OACpC07C,oBAAsB,GAAIjK,qBAAoB/yD,WAC9ChP,oBAAsB,MACvCgP,WAAUzY,UAAYyY,UAAUzY,SAAS28C,gBACzClzC,qBACIjB,MAAOiQ,UAAUzY,SAAS28C,cAAc,GACxCl0C,IAAKgQ,UAAUzY,SAAS28C,cAAc,IAG9C,IAAqB+4B,eAAgB,GAAIlF,eAAcv3E,KAAKw3E,YAAahnE,oBAAqBxQ,KAAKy3E,gBAAiB8E,UAAWlgE,QAC1GqgE,aAAe,GAAIC,sBAAqB38E,KAAK+7E,QAASS,oBAAqBF,eAAgBG,cAAez8E,KAAKy3E,gBAAiBhzB,QAASpoC,OAC9J/b,QAAS2P,SAASysE,aAAcL,kBAAkBthB,UAAW6hB,uBAC7DvgE,OAAO1b,KAAKoc,MAAMV,OAAQmgE,oBAAoBngE,QAC9Cy/D,UAAUn7E,KAAKoc,MAAM++D,UAAWW,cAAc5E,oBAG9Cv3E,UAGJ,OADAN,MAAK68E,wCAAwCv8E,OAAQ+b,QACjDA,OAAOla,OAAS,EACT,GAAIy5E,qBAAoBt7E,OAAQw7E,UAAWz/D,SAElDrc,KAAKg8E,YACLh8E,KAAKg8E,WAAWv7E,QAAQ,SAAU8hC,WAAajiC,OAASJ,iBAAiBqiC,UAAWjiC,UAEjF,GAAIs7E,qBAAoBt7E,OAAQw7E,UAAWz/D,UAOtD2oB,eAAeyC,UAAU00C,WAAa,SAAUE,kBAAmBS,QAChD,SAAXA,SAAqBA,QAAS,EAClC,IAAqBzgE,QAASggE,kBAAkBhgE;AAChD,GAAqB,GAAjBA,OAAOla,QAAe26E,OAAQ,CAE9B,GAAqBC,iBAAkB/gE,YAAYqgE,kBAAkBthB,UACrE1+C,QAAO1b,KAAKoc,MAAMV,OAAQ0gE,gBAAgB1gE,QAC1CggE,kBAAoB,GAAIvhB,iBAAgBiiB,gBAAgB7sE,MAAOmM,QAEnE,MAAOggE,oBAMXr3C,eAAeyC,UAAU20C,uBAAyB,SAAU58D,WACxD,GAAIA,UAAUzY,SACV,MAAO4jD,qBAAoBC,UAAUprC,UAAUzY,SAAS28C,gBAShE1e,eAAeyC,UAAUo1C,wCAA0C,SAAUv8E,OAAQ+b,QACjF,GAAqB2gE,sBACrB18E,QAAOye,OAAO,SAAUnM,SAAW,QAAS,QAAY+3B,aACnDlqC,QAAQ,SAAUmS,SAAW,MAAO,SAAY+3B,WAAWlqC,QAAQ,SAAUoE,WAC9E,GAAqBH,MAAOG,UAAUH,IACtC,IAAIs4E,mBAAmBj8E,QAAQ2D,MAAQ,EACnCs4E,mBAAmBr8E,KAAK+D,UAEvB,CACD,GAAqBnB,OAAQ,GAAIo4E,oBAAmB,eAAkBj3E,KAAO,6BAA+BG,UAAU4N,WAAY8gD,gBAAgBE,MAClJp3C,QAAO1b,KAAK4C,aAIjByhC,iBAEXA,gBAAeimB,aACT1jD,KAAMiE,qBAKZw5B,eAAekmB,eAAiB,WAAc,QACxC3jD,KAAM48B,iBACN58B,KAAMo9B,SACNp9B,KAAMyuE,wBACNzuE,KAAMu8B,iBACNv8B,KAAMtH,cAAc2jC,WACpBr8B,KAAMzE,MAAOmoD,aAAe1jD,KAAMtH,cAAcg9E,WAAc11E,KAAMtH,cAAci9E,OAAQ/oD,MAAOsnD,yBAEvG,IAAIkB,sBAAwB,WAUxB,QAASA,sBAAqBttE,OAAQmtE,oBAAqBp+D,WAAY++D,eAAgB1F,gBAAiB2F,SAAU1F,eAC9G,GAAIrwC,OAAQrnC,IACZA,MAAKqP,OAASA,OACdrP,KAAKw8E,oBAAsBA,oBAC3Bx8E,KAAKm9E,eAAiBA,eACtBn9E,KAAKy3E,gBAAkBA,gBACvBz3E,KAAKo9E,SAAWA,SAChBp9E,KAAK03E,cAAgBA,cACrB13E,KAAKq9E,gBAAkB,GAAI19B,iBAC3B3/C,KAAKs9E,gBAAkB,GAAI/+D,KAC3Bve,KAAKu9E,eAAiB,EAEtBv9E,KAAK8f,oBAAsB08D,oBAAoBh9D,UAAU1W,YAAY3G,OAAS,EAC9Eic,WAAW3d,QAAQ,SAAU+d,UAAWra,OACpC,GAAI+C,UAAWF,YAAYC,MAAMuX,UAAUtX,SAC3CmgC,OAAMg2C,gBAAgBh9B,eAAen5C,SAAUsX,WAC/C6oB,MAAMi2C,gBAAgB/3E,IAAIiZ,UAAWra,SA2f7C,MAnfAw4E,sBAAqBl1C,UAAUqsB,eAAiB,SAAUsX,UAAW/qE,SAAW,MAAO,OAMvFs8E,qBAAqBl1C,UAAUwsB,mBAAqB,SAAUoX,cAAehrE,SAAW,MAAO,OAM/Fs8E,qBAAqBl1C,UAAUmC,UAAY,SAAUp9B,KAAMqhB,QACvD,GAAqB8b,gBAAiB9b,OAAO2vD,mBAAmBhC,mBAC3CvvD,KAAOjsB,KAAKm9E,eAAenuB,mBAAmBxiD,KAAK3J,MAAO2J,KAAKiG,WACpF,OAAOwZ,MAAO,GAAI4d,cAAa5d,KAAM0d,eAAgBn9B,KAAKiG,YACtD,GAAIi3B,SAAQl9B,KAAK3J,MAAO8mC,eAAgBn9B,KAAKiG,aAOrDkqE,qBAAqBl1C,UAAU0sB,eAAiB,SAAUmO,UAAWjiE,SACjE,MAAO,IAAI0pC,SAAQu4B,UAAU59D,KAAM49D,UAAUz/D,MAAOy/D,UAAU7vD,aAOlEkqE,qBAAqBl1C,UAAU4sB,aAAe,SAAUmO,QAASniE,SAAW,MAAO,OAMnFs8E,qBAAqBl1C,UAAUoD,aAAe,SAAUj4B,QAASib,QAC7D,GAAIwZ,OAAQrnC,KACSy9E,gBAAkBz9E,KAAK8f,oBACvBiD,SAAWnQ,QAAQlO,KACnBg5E,iBAAmBx7D,gBAAgBtP,QACxD,IAAI8qE,iBAAiBn2E,OAASyb,qBAAqBO,QAC/Cm6D,iBAAiBn2E,OAASyb,qBAAqBK,MAI/C,MAAO,KAEX,IAAIq6D,iBAAiBn2E,OAASyb,qBAAqBU,YAC/CvD,qBAAqBu9D,iBAAiBt7D,UAGtC,MAAO,KAEX,IAAqBu7D,mBACAC,2BACAC,0BACAC,eACAC,UACAC,mCACAC,0BACAC,uBACAC,oBAAqB,EACrBhqE,SACAiqE,kBAAoBj5D,WAAWvS,QAAS5S,KAAKqP,OAAOgW,qBAAsB,SAAUrjB,EAAGgkD,MAAQ,MAAO3e,OAAMonB,aAAazsD,EAAGgkD,KAAMuN,gBAAgBC,UACvK5gD,SAAQuB,MAAM1T,QAAQ,SAAU4T,MAC5B,GACqBgqE,wBACAxvB,YAFAyvB,WAAaj3C,MAAMk3C,WAAWH,kBAAmB/pE,KAAMspE,eAAgBC,wBAAyBG,OAAQF,uBAAwBC,aAGhIU,eAAiBn3C,MAAMo3C,wBAAwBpqE,KAAK3P,KACrE2iC,OAAMh4B,OAAOgW,sBAAwBm5D,gBAAkBlD,eACvDj0C,MAAMonB,aAAa,4EAA6Ep6C,KAAK5B,WAAY8gD,gBAAgBC,SACjI6qB,uBAAyBhqE,KAAKxR,OAEzB27E,eAAezqE,WAAWwnE,wBAC/B8C,uBAAyBhqE,KAAKxR,MAC9BgsD,YAAc2vB,eAAev2D,UAAUszD,qBAAqBp5E,QAAU,IAE1E,IAAqBu8E,oBAA+C,MAA1BL,sBACtCK,sBACIP,oBACA92C,MAAMonB,aAAa,mHAAoHp6C,KAAK5B,YAEhJ0rE,oBAAqB,EACrB92C,MAAM81C,eAAezE,2BAA2B7pB,YAAawvB,uBAAwBhqE,KAAK5B,WAAYwrE,uBAAwBD,gCAAiCE,sBAE9JI,YAAeI,qBAEhBvqE,MAAMxT,KAAK0mC,MAAM8sB,eAAe9/C,KAAM,OACtCspE,eAAeh9E,MAAM0T,KAAK3P,KAAM2P,KAAKxR,UAG7C,IAAqB87E,oBAAqB76D,yBAAyBf,SAAU46D,gBACzE9oE,GAAK7U,KAAK4+E,iBAAiB5+E,KAAKq9E,gBAAiBsB,oBAAqBE,eAAiBhqE,GAAGuJ,WAAY0gE,aAAejqE,GAAGiqE,aACvGn0C,cACAo0C,wBAA0B,GAAIt9D,KAC9Bu9D,cAAgBh/E,KAAKi/E,qBAAqBb,kBAAmBxrE,QAAQlO,KAAMm6E,eAAgBjB,wBAAyBC,uBAAwBjrE,QAAQH,WAAYk4B,WAAYo0C,yBAC5KG,aAAel/E,KAAKm/E,2BAA2BvsE,QAAQlO,KAAMk5E,wBAAyBmB,yBACtFK,WAAavxD,OAAOuwD,mBAAqBD,mBACzCkB,gBAAkB,GAAI7M,wBAAuBxyE,KAAKw8E,oBAAqB3uD,OAAOwxD,gBAAiBD,WAAYJ,cAAe7qE,MAAOw2B,WAAYyzC,kBAAmBX,gBAAiB7qE,QAAQH,YACzL8J,SAAWtM,SAASytE,iBAAiBp7D,YAAcg9D,qBAAuBt/E,KAAM4S,QAAQ2J,SAAUgjE,eAAel4E,OAAO+2E,kBAAmBY,cAAeZ,kBAAoBvwD,OAAOwxD,gBAAkBA,iBAC5NA,iBAAgBxL,cAEhB,IAIqB2L,eAJAC,mBAAmD,MAA9B/B,iBAAiBn7D,UACvDvb,YAAYC,MAAMy2E,iBAAiBn7D,WAAW,GAC9Co8D,mBACiBh1C,eAAiB9b,OAAO2vD,mBAAmBiC,mBAEhE,IAAI/B,iBAAiBn2E,OAASyb,qBAAqBG,WAC3CvQ,QAAQ2J,WAAa3J,QAAQ2J,SAASmjE,MAAM/6D,mBAC5C3kB,KAAKyuD,aAAa,4CAA6C77C,QAAQH,YAE3E+sE,cAAgB,GAAIvmD,eAAaj5B,KAAKu9E,kBAAkBY,mBAAqB,KAAOx0C,eAAgB/2B,QAAQH,gBAE3G,IAAI2rE,kBACLp+E,KAAK2/E,sCAAsCX,cAAejB,QAC1D/9E,KAAK4/E,gDAAgDZ,cAAeE,aAActsE,QAAQH,YAC1F+sE,cAAgB,GAAI3mD,qBAAoB1kB,MAAO4pE,OAAQpzC,WAAYmzC,YAAauB,gBAAgBQ,yBAA0BR,gBAAgBtL,mBAAoBsL,gBAAgBS,4BAA6BT,gBAAgBlkD,aAAc5e,SAAU4hE,mBAAqB,KAAOx0C,eAAgB/2B,QAAQH,gBAEtS,CACDzS,KAAK+/E,qBAAqBjB,aAAclsE,SACxC5S,KAAKggF,wBAAwBhB,cAAepsE,QAAQH,WACpD,IAAqBwtE,kBAAmB9B,mBAAqB,KAAOtwD,OAAO2vD,mBAAmBiC,mBAC9FD,eAAgB,GAAIzmD,YAAWhW,SAAU5O,MAAO+qE,aAAcnB,OAAQpzC,WAAY00C,gBAAgBQ,yBAA0BR,gBAAgBtL,mBAAoBsL,gBAAgBS,4BAA6BT,gBAAgBlkD,aAAc5e,SAAU4hE,mBAAqB,KAAO8B,iBAAkBrtE,QAAQH,WAAYG,QAAQg4B,eAEnU,GAAIuzC,mBAAoB,CACpB,GAAqB+B,yBAA0BlgF,KAAK8f,oBAC/BqgE,iBAAmBr8D,yBAAyB2B,iBAAkBw4D,wBAC/EmC,uBAAyBpgF,KAAK4+E,iBAAiB5+E,KAAKq9E,gBAAiB8C,kBAAkB/hE,WACtEiiE,gCAAkC,GAAI5+D,KACtC6+D,sBAAwBtgF,KAAKi/E,sBAAqB,EAAMrsE,QAAQlO,KAAM07E,uBAAwBpC,mCAAqCprE,QAAQH,cAAgB4tE,iCAC3JE,qBAAuBvgF,KAAKm/E,2BAA2BvsE,QAAQlO,KAAMs5E,gCAAiCqC,gCAC3HrgF,MAAK4/E,gDAAgDU,sBAAuBC,qBAAsB3tE,QAAQH,WAC1G,IAAqB+tE,yBAA0B,GAAIhO,wBAAuBxyE,KAAKw8E,oBAAqB3uD,OAAOwxD,gBAAiBxxD,OAAOuwD,kBAAmBkC,8BAA+B,GAAMJ,wBAAyBttE,QAAQH,WAC5N+tE,yBAAwB3M,eACxB2L,cAAgB,GAAI3mD,8BAAgCqlD,oBAAqBsC,wBAAwBX,yBAA0BW,wBAAwBzM,mBAAoByM,wBAAwBV,4BAA6BU,wBAAwBrlD,cAAeqkD,eAAgB71C,eAAgB/2B,QAAQH,YAE/S,MAAO+sE,gBAYX7C,qBAAqBl1C,UAAU82C,WAAa,SAAUH,kBAAmB/pE,KAAMskE,qBAAsBC,YAAamB,aAAc0G,WAAY5H,YACxI,GAAqBn0E,MAAO1E,KAAKy+E,wBAAwBpqE,KAAK3P,MACzC7B,MAAQwR,KAAKxR,MACb69E,QAAUrsE,KAAK5B,WACfkuE,UAAYj8E,KAAKgY,MAAMi+D,kBACvB2D,YAAa,CAClC,IAAkB,OAAdqC,UAEA,GADArC,YAAa,EACiB,MAA1BqC,UAAU/F,aACV56E,KAAKm9E,eAAejF,qBAAqByI,UAAUzF,cAAer4E,OAAO,EAAO69E,QAAS/H,qBAAsBC,iBAE9G,IAAI+H,UAAU9F,YACf,GAAIuD,kBAAmB,CACnB,GAAqB54E,YAAam7E,UAAUzF,aAC5Cl7E,MAAK4gF,eAAep7E,WAAY3C,MAAO69E,QAAS7H,gBAGhD74E,MAAKyuD,aAAa,iDAAoDiyB,aAGzE,IAAIC,UAAU7F,YAAa,CAC5B,GAAqBt1E,YAAam7E,UAAUzF,aAC5Cl7E,MAAK6gF,gBAAgBr7E,WAAY3C,MAAO69E,QAASD,gBAE5CE,WAAU5F,WACf/6E,KAAKm9E,eAAe7E,WAAWqI,UAAUzF,cAAer4E,MAAO69E,QAAS/H,qBAAsBoB,cAEzF4G,UAAU3F,gBACfh7E,KAAKm9E,eAAejF,qBAAqByI,UAAUzF,cAAer4E,OAAO,EAAO69E,QAAS/H,qBAAsBC,aAC/G54E,KAAK8gF,sBAAsBH,UAAUzF,cAAer4E,MAAO69E,QAAS/H,qBAAsBoB,eAErF4G,UAAU1F,WACfj7E,KAAKm9E,eAAelE,iBAAiBv0E,KAAM7B,MAAO69E,QAAS/H,qBAAsBC,aAE5E+H,UAAUxF,uBACfn7E,KAAKm9E,eAAejF,qBAAqByI,UAAUxF,sBAAuBt4E,OAAO,EAAO69E,QAAS/H,qBAAsBC,aACvH54E,KAAK8gF,sBAAsBH,UAAUxF,sBAAuBt4E,MAAO69E,QAAS/H,qBAAsBoB,eAE7F4G,UAAUvF,oBACfp7E,KAAKm9E,eAAejF,qBAAqByI,UAAUvF,oBAAqBv4E,OAAO,EAAO69E,QAAS/H,qBAAsBC,aAEhH+H,UAAUtF,kBACfr7E,KAAKm9E,eAAe7E,WAAWqI,UAAUtF,iBAAkBx4E,MAAO69E,QAAS/H,qBAAsBoB,kBAIrGuE,YAAat+E,KAAKm9E,eAAe5D,2BAA2B70E,KAAM7B,MAAO69E,QAAS/H,qBAAsBC,YAK5G,OAHK0F,aACDt+E,KAAKm9E,eAAelE,iBAAiBv0E,KAAM7B,MAAO69E,QAAS/H,qBAAsBC,aAE9E0F,YAMX3B,qBAAqBl1C,UAAUg3C,wBAA0B,SAAUt6D,UAC/D,MAAO,UAAUjY,KAAKiY,UAAYA,SAAS8D,UAAU,GAAK9D,UAS9Dw4D,qBAAqBl1C,UAAUm5C,eAAiB,SAAUp7E,WAAY3C,MAAO4P,WAAYomE,YACjFrzE,WAAWzE,QAAQ,MAAO,GAC1Bf,KAAKyuD,aAAa,uCAA0Ch8C,YAEhEomE,WAAWl4E,KAAK,GAAI8pC,aAAYjlC,WAAY3C,MAAO4P,cASvDkqE,qBAAqBl1C,UAAUo5C,gBAAkB,SAAUr7E,WAAY3C,MAAO4P,WAAYguE,YAClFj7E,WAAWzE,QAAQ,MAAO,GAC1Bf,KAAKyuD,aAAa,wCAA2Ch8C,YAEjEguE,WAAW9/E,KAAK,GAAIogF,uBAAsBv7E,WAAY3C,MAAO4P,cAUjEkqE,qBAAqBl1C,UAAUq5C,sBAAwB,SAAUp8E,KAAMoY,WAAYrK,WAAYkmE,qBAAsBoB,cACjH/5E,KAAKm9E,eAAe7E,WAAW5zE,KAAO,SAAUoY,WAAa,UAAWrK,WAAYkmE,qBAAsBoB,eAO9G4C,qBAAqBl1C,UAAUm3C,iBAAmB,SAAUvB,gBAAiBsB,oBACzE,GAAIt3C,OAAQrnC,KAISoe,WAAa,GAAItb,OAAM9C,KAAKs9E,gBAAgB0D,MAE5ClC,cAAe,CAKpC,OAJAzB,iBAAgB3gE,MAAMiiE,mBAAoB,SAAUz3E,SAAUsX,WAC1DJ,WAAWipB,MAAMi2C,gBAAgBn4E,IAAIqZ,YAAcA,UACnDsgE,aAAeA,cAAgB53E,SAASq4C,wBAGxCnhC,WAAYA,WAAWW,OAAO,SAAUC,KAAO,QAASA,MACxD8/D,aAAcA,eActBnC,qBAAqBl1C,UAAUw3C,qBAAuB,SAAUb,kBAAmBv9E,YAAaud,WAAY6iE,MAAOpD,uBAAwBqD,kBAAmBC,iBAAkBC,+BAC5K,GAAI/5C,OAAQrnC,KACSqhF,kBAAoB,GAAI5/D,KACxBjC,UAAY,KACZw/D,cAAgB5gE,WAAW5I,IAAI,SAAUgJ,WAC1D,GAAqB/L,YAAa,GAAI1C,iBAAgBmxE,kBAAkB3xE,MAAO2xE,kBAAkB1xE,IAAK,aAAe7K,eAAe6Z,UAAUjX,MAC1IiX,WAAU9V,cACV8W,UAAYhB,UAEhB,IAAqB8iE,wBACAj2C,eAAiBhE,MAAM81C,eAAerF,gCAAgCt5D,UAAW3d,YAAa4R,WAGnH44B,gBAAiBhE,MAAMk6C,yBAAyB1gF,YAAawqC,eAC7D,IAAqBC,YAAajE,MAAM81C,eAAe/E,6BAA6B55D,UAAW/L,WAC/F40B,OAAMm6C,6BAA6BhjE,UAAUjW,OAAQ04E,MAAOK,oBAAqBF,+BACjFvD,uBAAuBp9E,QAAQ,SAAUghF,aACJ,IAA5BA,WAAW5+E,MAAMV,QAAgBqc,UAAU9V,aAC3C8V,UAAUqlC,UAAY49B,WAAW5+E,SAClCs+E,iBAAiBxgF,KAAK,GAAI4pC,cAAak3C,WAAW/8E,KAAMoX,gBAAgB0C,UAAUjX,MAAOk6E,WAAWhvE,aACpG4uE,kBAAkB7lD,IAAIimD,WAAW/8E,QAGzC,IAAqBob,qBAAsBunB,MAAMvnB,mBAEjD,OADAunB,OAAMvnB,qBAAuBtB,UAAU3V,QAAQ1G,OACxC,GAAIipC,cAAa5sB,UAAW8iE,oBAAqBj2C,eAAgBC,WAAYxrB,oBAAqBrN,aAgB7G,OAdAorE,wBAAuBp9E,QAAQ,SAAUghF,YACrC,GAAIA,WAAW5+E,MAAMV,OAAS,EACrBk/E,kBAAkBn8E,IAAIu8E,WAAW/8E,OAClC2iC,MAAMonB,aAAa,iDAAsDgzB,WAAW5+E,MAAQ,IAAM4+E,WAAWhvE,gBAGhH,KAAK+M,UAAW,CACjB,GAAqBkiE,UAAW,IAC5BtD,qBACAsD,SAAW3lE,sBAAsBif,YAAYi0C,cAEjDkS,iBAAiBxgF,KAAK,GAAI4pC,cAAak3C,WAAW/8E,KAAMg9E,SAAUD,WAAWhvE,gBAG9EusE,eASXrC,qBAAqBl1C,UAAU+5C,6BAA+B,SAAUF,oBAAqBK,WAAYC,0BAA2BR,+BAChI,GAAIE,oBAAqB,CACrB,GAAqBO,oBAAqB,GAAItjE,IAC9CojE,YAAWlhF,QAAQ,SAAUg5E,WACzB,GAAqBp/C,WAAYwnD,mBAAmB18E,IAAIs0E,UAAU/0E,KAC7D21B,aAAaA,UAAUynD,WAExBD,mBAAmBt8E,IAAIk0E,UAAU/0E,KAAM+0E,aAG/C51E,OAAOwwB,KAAKitD,qBAAqB7gF,QAAQ,SAAUshF,SAC/C,GAAqBC,QAASV,oBAAoBS,SAC7BtI,UAAYoI,mBAAmB18E,IAAI68E,OAEpDvI,aACA2H,8BAA8B5lD,IAAIi+C,UAAU/0E,MACvCsgB,kBAAkBy0D,UAAU38D,aAC7B8kE,0BAA0BjhF,KAAK,GAAIqqC,2BAA0B+2C,QAAStI,UAAU/0E,KAAM+0E,UAAU38D,WAAY28D,UAAUhnE,kBAY1IkqE,qBAAqBl1C,UAAU03C,2BAA6B,SAAUt+E,YAAaogF,MAAOlC,yBACtF,GAAI13C,OAAQrnC,KACSiiF,oBAMrB,OALAhB,OAAMxgF,QAAQ,SAAUgxB,MACfA,KAAKqwD,WAAc/C,wBAAwB75E,IAAIusB,KAAK/sB,OACrDu9E,kBAAkBthF,KAAK0mC,MAAM81C,eAAehF,yBAAyBt3E,YAAa4wB,SAGnFzxB,KAAKuhF,yBAAyB1gF,YAAaohF,oBAMtDtF,qBAAqBl1C,UAAUy6C,yBAA2B,SAAU9jE,YAChE,MAAOA,YAAWW,OAAO,SAAUP,WAAa,MAAOA,WAAUA,UAAU9V,eAM/Ei0E,qBAAqBl1C,UAAU06C,6BAA+B,SAAU/jE,YACpE,MAAOpe,MAAKkiF,yBAAyB9jE,YAChC5I,IAAI,SAAUgJ,WAAa,MAAO7Z,gBAAe6Z,UAAUA,UAAUjX,SAO9Eo1E,qBAAqBl1C,UAAUu4C,wBAA0B,SAAU5hE,WAAY3L,YAC3E,GAAqB2vE,oBAAqBpiF,KAAKmiF,6BAA6B/jE,WACxEgkE,oBAAmBjgF,OAAS,GAC5BnC,KAAKyuD,aAAa,sJAEgB2zB,mBAAmB/sE,KAAK,KAAO5C,aAazEkqE,qBAAqBl1C,UAAUs4C,qBAAuB,SAAUjB,aAAclsE,SAC1E,GAAqByvE,QAASzvE,QAAQlO,KAAK5C,QAAQ,WAAY,GAC/D,KAAKg9E,eAAiB9+E,KAAKy3E,gBAAgBtB,WAAWkM,OAAQriF,KAAKo9E,UAAW,CAC1E,GAAqB5nB,UAAW,IAAM6sB,OAAS,6BAC/C7sB,WACI,UAAY6sB,OAAS,2EAErB7sB,UADA6sB,OAAOthF,QAAQ,MAAO,EAElB,UAAYshF,OAAS,gIAIrB,+FAERriF,KAAKyuD,aAAa+G,SAAU5iD,QAAQH,cAS5CkqE,qBAAqBl1C,UAAUm4C,gDAAkD,SAAUxhE,WAAY8gE,aAAczsE,YACjH,GAAI40B,OAAQrnC,KACSoiF,mBAAqBpiF,KAAKmiF,6BAA6B/jE,WACxEgkE,oBAAmBjgF,OAAS,GAC5BnC,KAAKyuD,aAAa,uCAAyC2zB,mBAAmB/sE,KAAK,KAAM5C,YAE7FysE,aAAaz+E,QAAQ,SAAUgxB,MAC3B4V,MAAMonB,aAAa,oBAAsBh9B,KAAK/sB,KAAO,2KAA8K+N,eAQ3OkqE,qBAAqBl1C,UAAUk4C,sCAAwC,SAAUvhE,WAAY2/D,QACzF,GAAI12C,OAAQrnC,KACSsiF,mBAAqB,GAAI7gE,IAC9CrD,YAAW3d,QAAQ,SAAU+d,WACzB3a,OAAOwwB,KAAK7V,UAAUA,UAAUhW,SAAS/H,QAAQ,SAAUwW,GACvD,GAAqBijE,WAAY17D,UAAUA,UAAUhW,QAAQyO,EAC7DqrE,oBAAmB9mD,IAAI0+C,eAG/B6D,OAAOt9E,QAAQ,SAAU8hF,OACD,MAAhBA,MAAM7lD,QAAmB4lD,mBAAmBp9E,IAAIq9E,MAAM79E,OACtD2iC,MAAMonB,aAAa,iBAAmB8zB,MAAMphF,SAAW,2KAA8KohF,MAAM9vE,eASvPkqE,qBAAqBl1C,UAAU85C,yBAA2B,SAAU1gF,YAAa8gF,YAC7E,GAAIt6C,OAAQrnC,IAGZ,OAAO2hF,YAAW5iE,OAAO,SAAU06D,WAC/B,GAAIA,UAAUlyE,OAASiyB,oBAAoBE,WACtC2N,MAAMowC,gBAAgBxB,YAAYp1E,YAAa44E,UAAU/0E,KAAM2iC,MAAM+1C,UAAW,CACjF,GAAqB5nB,UAAW,kBAAoBikB,UAAU/0E,KAAO,yCAA2C7D,YAAc,IAC1HA,aAAYkT,WAAW,OACvByhD,UACI,YAAcikB,UAAU/0E,KAAO,kMAG9B7D,YAAYE,QAAQ,MAAO,IAChCy0D,UACI,YAAc30D,YAAc,yCAA2C44E,UAAU/0E,KAAO,wDACnF,YAAc7D,YAAc,iIAC7B,mGAEZwmC,MAAMonB,aAAa+G,SAAUikB,UAAUhnE,YAE3C,OAAQuS,kBAAkBy0D,UAAU52E,UAS5C85E,qBAAqBl1C,UAAUgnB,aAAe,SAAUthD,QAASsF,WAAYkhD,OAC3D,SAAVA,QAAoBA,MAAQJ,gBAAgBE,OAChDzzD,KAAK03E,cAAc/2E,KAAK,GAAI+yD,YAAWjhD,WAAYtF,QAASwmD,SAEzDgpB,wBAEP6F,mBAAsB,WACtB,QAASA,uBA0DT,MAnDAA,oBAAmB/6C,UAAUoD,aAAe,SAAUrqC,IAAKqtB,QACvD,GAAqB6vD,kBAAmBx7D,gBAAgB1hB,IACxD,IAAIk9E,iBAAiBn2E,OAASyb,qBAAqBO,QAC/Cm6D,iBAAiBn2E,OAASyb,qBAAqBK,OAC/Cq6D,iBAAiBn2E,OAASyb,qBAAqBU,WAI/C,MAAO,KAEX,IAAqB++D,mBAAoBjiF,IAAI2T,MAAMqB,IAAI,SAAUnB,MAAQ,OAAQA,KAAK3P,KAAM2P,KAAKxR,SAC5EqE,SAAW4c,yBAAyBtjB,IAAIkE,KAAM+9E,mBAC9C94C,eAAiB9b,OAAO2vD,mBAAmBt2E,UAC3CqV,SAAWtM,SAASjQ,KAAMQ,IAAI+b,SAAUqgE,sBAC7D,OAAO,IAAI7jD,YAAWv4B,IAAIkE,KAAMuL,SAASjQ,KAAMQ,IAAI2T,wBAA4B,MAAWoI,SAAUotB,eAAgBnpC,IAAIiS,WAAYjS,IAAIoqC,gBAO5I43C,mBAAmB/6C,UAAU4sB,aAAe,SAAUmO,QAASniE,SAAW,MAAO,OAMjFmiF,mBAAmB/6C,UAAU0sB,eAAiB,SAAUmO,UAAWjiE,SAC/D,MAAO,IAAI0pC,SAAQu4B,UAAU59D,KAAM49D,UAAUz/D,MAAOy/D,UAAU7vD,aAOlE+vE,mBAAmB/6C,UAAUmC,UAAY,SAAUp9B,KAAMqhB,QACrD,GAAqB8b,gBAAiB9b,OAAO2vD,mBAAmBhC,kBAChE,OAAO,IAAI9xC,SAAQl9B,KAAK3J,MAAO8mC,eAAgBn9B,KAAKiG,aAOxD+vE,mBAAmB/6C,UAAUqsB,eAAiB,SAAUsX,UAAW/qE,SAAW,MAAO+qE,YAMrFoX,mBAAmB/6C,UAAUwsB,mBAAqB,SAAUoX,cAAehrE,SAAW,MAAOgrE,gBACtFmX,sBAEPzB,sBAAyB,WAMzB,QAASA,uBAAsBr8E,KAAM7B,MAAO4P,YACxCzS,KAAK0E,KAAOA,KACZ1E,KAAK6C,MAAQA,MACb7C,KAAKyS,WAAaA,WAEtB,MAAOsuE,0BASPxB,eAAkB,WAOlB,QAASA,gBAAenB,kBAAmBsE,uBAAwBC,wBAAyBtD,iBACxFr/E,KAAKo+E,kBAAoBA,kBACzBp+E,KAAK0iF,uBAAyBA,uBAC9B1iF,KAAK2iF,wBAA0BA,wBAC/B3iF,KAAKq/E,gBAAkBA,gBAuC3B,MA/BAE,gBAAel4E,OAAS,SAAU+2E,kBAAmBhgE,WAAYihE,iBAC7D,GAAqBxtD,SAAU,GAAI8tB,iBACdijC,uBAAyB,KACzBpjE,UAAYpB,WAAWhK,KAAK,SAAUoK,WAAa,MAAOA,WAAUA,UAAU9V,aACnG,IAAI8W,UAEA,IAAK,GADgBvX,oBAAqBuX,UAAUhB,UAAUzX,SAASkB,mBAC7C2D,EAAI,EAAGA,EAAI3D,mBAAmB9F,OAAQyJ,IAAK,CACjE,GAAqB1E,UAAWe,mBAAmB2D,EAClC,OAAb1E,SACA07E,uBAAyBh3E,EAGzBimB,QAAQwuB,eAAer5C,YAAYC,MAAMgB,mBAAmB2D,IAAKA,GAI7E,MAAO,IAAI2zE,gBAAenB,kBAAmBvsD,QAAS+wD,uBAAwBvD,kBAMlFE,eAAe93C,UAAU+1C,mBAAqB,SAAUt2E,UACpD,GAAqB27E,oBAMrB,OALA7iF,MAAK0iF,uBAAuBhmE,MAAMxV,SAAU,SAAUA,SAAUyiC,gBAAkBk5C,iBAAiBliF,KAAKgpC,kBACxGk5C,iBAAiB5gE,OACmB,MAAhCjiB,KAAK2iF,yBACLE,iBAAiBliF,KAAKX,KAAK2iF,yBAExBE,iBAAiB1gF,OAAS,EAAI0gF,iBAAiB,GAAK,MAExDtD,kBAuBU3C,sBAAwB,GAAI2C,kBAAe,GAAM,GAAI5/B,iBAAmB,KAAM,MAC9E2/B,qBAAuB,GAAIkD,oBAwD5CM,eAAkB,WAClB,QAASA,mBAOT,MADAA,gBAAer7C,UAAUtiC,IAAM,SAAUkL,KAAO,MAAO,OAChDyyE,kBAkBUC,8BACjBC,QAAS/iF,cAAcgjF,iBACvBxlE,SAAU,KAkBVkI,YAAe,WAIf,QAASA,aAAYu9D,gBACM,SAAnBA,iBAA6BA,eAAiB,MAClDljF,KAAKkjF,eAAiBA,eA6B1B,MAhBAv9D,aAAY8hB,UAAU3mB,QAAU,SAAUN,QAASnQ,KAC/C,GAAqB8yE,aAAc9yE,GACpB,OAAXmQ,SAAmBA,QAAQre,OAAS,IACpCghF,YAAcv7D,YAAYpH,QAAS2iE,aAEvC,IAAqBC,eAAgBt9D,OAAOq9D,aACvB9hF,OAASrB,KAAKkjF,cACnC,IAAc,MAAV7hF,QAAmC,MAAjB+hF,eACuB,WAAzCA,cAAcr9D,gBAAgBC,QAAsB,CACpD,GAAqBtK,MAAO0nE,cAAcr9D,gBAAgBuB,KAG1D,OAFAjmB,QAASA,OAAOS,QAAQ,OAAQ,IAChC4Z,KAAOA,KAAK5Z,QAAQ,OAAQ,IACrBT,OAAS,IAAMqa,KAE1B,MAAOynE,cAEJx9D,cAEXA,aAAYslC,aACN1jD,KAAMiE,qBAKZma,YAAYulC,eAAiB,WAAc,QACrC3jD,KAAMggC,OAAW0jB,aAAe1jD,KAAMtH,cAAci9E,OAAQ/oD,MAAOl0B,cAAcgjF,sBAmHvF,IAAIt8D,UAAW,GAAIlX,QAAO,4HAiBtBsW,kBACJA,iBAAgBC,OAAS,EACzBD,gBAAgBwB,SAAW,EAC3BxB,gBAAgByB,OAAS,EACzBzB,gBAAgB0B,KAAO,EACvB1B,gBAAgBuB,KAAO,EACvBvB,gBAAgB2B,UAAY,EAC5B3B,gBAAgB4B,SAAW,EAC3B5B,gBAAgBA,gBAAgBC,QAAU,SAC1CD,gBAAgBA,gBAAgBwB,UAAY,WAC5CxB,gBAAgBA,gBAAgByB,QAAU,SAC1CzB,gBAAgBA,gBAAgB0B,MAAQ,OACxC1B,gBAAgBA,gBAAgBuB,MAAQ,OACxCvB,gBAAgBA,gBAAgB2B,WAAa,YAC7C3B,gBAAgBA,gBAAgB4B,UAAY,UAwG5C,IAAI6c,qBAAuB,WAOvB,QAASA,qBAAoB6+C,gBAAiBC,aAAc/U,YAAawN,SACrE/7E,KAAKqjF,gBAAkBA,gBACvBrjF,KAAKsjF,aAAeA,aACpBtjF,KAAKuuE,YAAcA,YACnBvuE,KAAK+7E,QAAUA,QACf/7E,KAAKujF,qBAAuB,GAAIhlE,KA4KpC,MAvKAimB,qBAAoBiD,UAAU+7C,WAAa,WAAcxjF,KAAKujF,qBAAqBE,SAKnFj/C,oBAAoBiD,UAAUi8C,cAAgB,SAAUC,qBACpD,GAAIt8C,OAAQrnC,IACP2jF,qBAAoBj7E,cAGzB1I,KAAKujF,qBAAqB9nD,OAAOkoD,oBAAoB58E,SAASe,aAC9D67E,oBAAoB58E,SAAS08C,oBAAoBhjD,QAAQ,SAAUmjF,YAAcv8C,MAAMk8C,qBAAqB9nD,OAAOmoD,WAAW15E,eAMlIs6B,oBAAoBiD,UAAUo8C,OAAS,SAAUxzE,KAC7C,GAAqB/P,QAASN,KAAKujF,qBAAqBp+E,IAAIkL,IAK5D,OAJK/P,UACDA,OAASN,KAAKqjF,gBAAgBl+E,IAAIkL,KAClCrQ,KAAKujF,qBAAqBh+E,IAAI8K,IAAK/P,SAEhCA,QAMXkkC,oBAAoBiD,UAAUq8C,kBAAoB,SAAUC,aACxD,GAEqBC,yBAFjB38C,MAAQrnC,KACSikF,uBAAyB,IAE9C,IAA4B,MAAxBF,YAAYh9E,SAAkB,CAC9B,GAAoC,gBAAzBg9E,aAAYh9E,SACnB,KAAM1D,aAAY,wCAA0CpD,cAAcwF,WAAWs+E,YAAYt+B,eAAiB,mBAEtHw+B,wBAAyBjkF,KAAKkkF,sBAAsBH,aACpDC,wBAA0B7hC,QAAQrhC,QAAQmjE,4BAEzC,CAAA,IAAIF,YAAYj8E,YAOjB,KAAMzE,aAAY,uCAAyCpD,cAAcwF,WAAWs+E,YAAYt+B,eANhG,IAAuC,gBAA5Bs+B,aAAYj8E,YACnB,KAAMzE,aAAY,2CAA6CpD,cAAcwF,WAAWs+E,YAAYt+B,eAAiB,mBAEzHu+B,yBAA0BhkF,KAAKmkF,uBAAuBJ,aAK1D,MAAIE,yBAAsE,IAA5CA,uBAAuBj8E,UAAU7F,OAEpD,GAAI6/C,iBAAgBiiC,wBAIpB,GAAIjiC,iBAAgB,KAAMgiC,wBAAwBI,KAAK,SAAUC,oBAAsB,MAAOh9C,OAAMi9C,6BAA6BD,wBAOhJ7/C,oBAAoBiD,UAAUy8C,sBAAwB,SAAUK,YAC5D,MAAOvkF,MAAKwkF,wBAAwBD,WAAYA,WAAWx9E,SAAUw9E,WAAWr6E,YAMpFs6B,oBAAoBiD,UAAU08C,uBAAyB,SAAUI,YAC7D,GAAIl9C,OAAQrnC,KACS8H,YAAc9H,KAAKsjF,aAAaxiE,QAAQyjE,WAAWr6E,UAAWq6E,WAAWz8E,YAC9F,OAAO9H,MAAK6jF,OAAO/7E,aACds8E,KAAK,SAAUvhF,OAAS,MAAOwkC,OAAMm9C,wBAAwBD,WAAY1hF,MAAOiF,gBAQzF08B,oBAAoBiD,UAAU+8C,wBAA0B,SAAUT,YAAah9E,SAAU09E,gBACrF,GAAqBt8E,YAAa47E,YAAYh9E,SACzByJ,oBAAsBm6C,oBAAoBC,UAAUm5B,YAAYrgC,eAChEghC,mBAAqB1kF,KAAKuuE,YAAYtnE,MAAMF,SAAU6C,mBAAoB/E,UAAWk/E,YAAYl6E,eAAkBtC,MAAQ1C,UAAWk/E,YAAYt+B,iBAAqBt9C,SAAUA,SAAUL,YAAa28E,kBAAmB,EAAMj0E,oBACtP,IAAIk0E,mBAAmBroE,OAAOla,OAAS,EAAG,CACtC,GAAqB0zE,aAAc6O,mBAAmBroE,OAAOhH,KAAK,KAClE,MAAMhS,aAAY,2BAA6BwyE,aAEnD,GAAqB8O,wBAAyB3kF,KAAK4kF,oBAAoB,GAAIphC,4BACvEz7C,OAAQg8E,YAAYh8E,OACpBC,UAAW+7E,YAAY/7E,UACvBkC,UAAW65E,YAAY75E,aAEN/J,QAAU,GAAI0kF,wBACnC50E,UAAS9P,QAASukF,mBAAmB3pB,UACrC,IAAqB+pB,gBAAiB9kF,KAAK4kF,oBAAoB,GAAIphC,4BAA4Bz7C,OAAQ5H,QAAQ4H,OAAQC,UAAW7H,QAAQ6H,UAAWkC,UAAWu6E,kBAC3I98E,cAAgBo8E,YAAYp8E,aAC5B,OAAjBA,gBACAA,cAAgB3H,KAAK+7E,QAAQ33C,qBAEjC,IAAqBr8B,QAAS48E,uBAAuB58E,OAAO2B,OAAOo7E,eAAe/8E,QAC7DC,UAAY28E,uBAAuB38E,UAAU0B,OAAOo7E,eAAe98E,UAKxF,OAJIL,iBAAkB1H,cAAc2H,kBAAkBy8B,UAA8B,IAAlBt8B,OAAO5F,QAChD,IAArB6F,UAAU7F,SACVwF,cAAgB1H,cAAc2H,kBAAkBC,MAE7C,GAAIH,0BACPC,cAAeA,cACfZ,SAAUA,SACVe,YAAa28E,eAAgB18E,OAAQA,OAAQC,UAAWA,UACxDC,mBAAoB9H,QAAQ8H,mBAC5BC,WAAY67E,YAAY77E,WACxBw7C,cAAeqgC,YAAYrgC,cAAev7C,SAAUA,YAO5Dq8B,oBAAoBiD,UAAU68C,6BAA+B,SAAUx6E,cACnE,MAAO9J,MAAK+kF,gCAAgCj7E,aAAa9B,WACpDo8E,KAAK,SAAU3gC,qBAAuB,MAAO,IAAI/7C,0BAClDC,cAAemC,aAAanC,cAC5BZ,SAAU+C,aAAa/C,SACvBe,YAAagC,aAAahC,YAC1BC,OAAQ+B,aAAa/B,OACrBC,UAAW8B,aAAa9B,UACxBy7C,oBAAqBA,oBACrBx7C,mBAAoB6B,aAAa7B,mBACjCC,WAAY4B,aAAa5B,WACzBw7C,cAAe55C,aAAa45C,cAC5Bv7C,SAAU2B,aAAa3B,cAQ/Bq8B,oBAAoBiD,UAAUs9C,gCAAkC,SAAU/8E,UAAWg9E,mBACjF,GAAI39C,OAAQrnC,IAEZ,OAD0B,UAAtBglF,oBAAgCA,kBAAoB,GAAIzmE,MACrD4jC,QACF8iC,IAAIj9E,UAAU+W,OAAO,SAAUmmE,UAAY,OAAQF,kBAAkB9/E,IAAIggF,YACzE1vE,IAAI,SAAU0vE,UAAY,MAAO79C,OAAMw8C,OAAOqB,UAAUd,KAAK,SAAUe,aACxE,GAAqBvB,YAAav8C,MAAMu9C,oBAAoB,GAAIphC,4BAA4Bz7C,QAASo9E,aAAcj7E,UAAWg7E,WAE9H,OADAF,mBAAkBz/E,IAAI2/E,SAAUtB,YACzBv8C,MAAM09C,gCAAgCnB,WAAW57E,UAAWg9E,wBAElEZ,KAAK,SAAUlpE,GAAK,MAAOpY,OAAMkf,KAAKgjE,kBAAkBjgE,aAMjEyf,oBAAoBiD,UAAUm9C,oBAAsB,SAAUhB,YAC1D,GAAIv8C,OAAQrnC,KACSolF,aAAexB,WAAW57E,UAAU+W,OAAOoB,sBAC3D3K,IAAI,SAAUnF,KAAO,MAAOg3B,OAAMi8C,aAAaxiE,QAAQ8iE,WAAW15E,UAAWmG,OAC7Dg1E,UAAYzB,WAAW77E,OAAOyN,IAAI,SAAUmpC,OAC7D,GAAqB2mC,kBAAmBhlE,iBAAiB+mB,MAAMi8C,aAAcM,WAAW15E,UAAWy0C,MAEnG,OADAymC,cAAazkF,KAAKoc,MAAMqoE,aAAcE,iBAAiBt9E,WAChDs9E,iBAAiB3mC,OAE5B,OAAO,IAAI6E,4BAA4Bz7C,OAAQs9E,UAAWr9E,UAAWo9E,aAAcl7E,UAAW05E,WAAW15E,aAEtGs6B,sBAEXA,qBAAoBymB,aACd1jD,KAAMiE,qBAKZg5B,oBAAoB0mB,eAAiB,WAAc,QAC7C3jD,KAAMu7E,iBACNv7E,KAAMoe,cACNpe,KAAMw8B,aACNx8B,KAAM48B,iBAEZ,IAAI0gD,yBAA2B,WAC3B,QAASA,2BACL7kF,KAAKiI,sBACLjI,KAAK+H,UACL/H,KAAKgI,aACLhI,KAAKulF,wBAA0B,EAuEnC,MAhEAV,yBAAwBp9C,UAAUoD,aAAe,SAAUrqC,IAAKH,SAC5D,GAAqBq9E,kBAAmBx7D,gBAAgB1hB,IACxD,QAAQk9E,iBAAiBn2E,MACrB,IAAKyb,sBAAqBG,WACe,IAAjCnjB,KAAKulF,yBACLvlF,KAAKiI,mBAAmBtH,KAAK+8E,iBAAiBv7D,WAElD,MACJ,KAAKa,sBAAqBK,MACtB,GAAqBmiE,eAAgB,EACrChlF,KAAI+b,SAAS9b,QAAQ,SAAU66B,OACvBA,gBAAiB1W,QACjB4gE,eAAiBlqD,MAAMz4B,SAG/B7C,KAAK+H,OAAOpH,KAAK6kF,cACjB,MACJ,KAAKxiE,sBAAqBU,WACtB1jB,KAAKgI,UAAUrH,KAAK+8E,iBAAiBt7D,UAY7C,MAPIs7D,kBAAiBp7D,aACjBtiB,KAAKulF,0BAETt1E,SAASjQ,KAAMQ,IAAI+b,UACfmhE,iBAAiBp7D,aACjBtiB,KAAKulF,0BAEF,MAOXV,wBAAwBp9C,UAAUqsB,eAAiB,SAAUtzD,IAAKH,SAAW4P,SAASjQ,KAAMQ,IAAIgc,QAMhGqoE,wBAAwBp9C,UAAUwsB,mBAAqB,SAAUzzD,IAAKH,SAClE4P,SAASjQ,KAAMQ,IAAIsc,aAOvB+nE,wBAAwBp9C,UAAU4sB,aAAe,SAAU7zD,IAAKH,SAAW,MAAO,OAMlFwkF,wBAAwBp9C,UAAU0sB,eAAiB,SAAU3zD,IAAKH,SAAW,MAAO,OAMpFwkF,wBAAwBp9C,UAAUmC,UAAY,SAAUppC,IAAKH,SAAW,MAAO,OACxEwkF,2BAEP1/C,kBAAqB,WAIrB,QAASA,mBAAkBsgD,YACJ,SAAfA,aAAyBA,WAAaxlF,cAAc6F,YACxD9F,KAAKylF,WAAaA,WAgKtB,MA1JAtgD,mBAAkBsC,UAAU1F,YAAc,SAAUx6B,MAChD,GAAqBm+E,cAAe1lF,KAAKylF,WAAWE,YAAY1lF,cAAcmqB,kBAAkB7iB,MAChG,OAAOm+E,eAAgBA,aAAajgB,KAAKv9C,sBAQ7Cid,kBAAkBsC,UAAU3mB,QAAU,SAAUvZ,KAAMq+E,iBAC1B,SAApBA,kBAA8BA,iBAAkB,EACpD,IAAqBF,cAAe1lF,KAAKylF,WAAWE,YAAY1lF,cAAcmqB,kBAAkB7iB,MAChG,IAAIm+E,aAAc,CACd,GAAqBtoD,UAAWjV,SAASu9D,aAAcx9D,oBACvD,IAAIkV,SAAU,CACV,GAAqByoD,kBAAmB7lF,KAAKylF,WAAWK,aAAav+E;AACrE,MAAOvH,MAAK+lF,2BAA2B3oD,SAAUyoD,iBAAkBt+E,OAG3E,GAAIq+E,gBACA,KAAM,IAAI5kF,OAAM,oCAAsCf,cAAcwF,WAAW8B,MAEnF,OAAO,OAQX49B,kBAAkBsC,UAAUs+C,2BAA6B,SAAUC,GAAIH,iBAAkBI,eACrF,GAAqB19E,WACAC,WACAC,QACAI,UA8CrB,OA7CAhF,QAAOwwB,KAAKwxD,kBAAkBplF,QAAQ,SAAU0gB,UAC5C,GAAqBtf,OAAQsmB,SAAS09D,iBAAiB1kE,UAAW,SAAU1L,GAAK,MAAOA,aAAaxV,eAAcimF,OAC/GrkF,SACIA,MAAMskF,oBACN59E,OAAO5H,KAAKwgB,SAAW,KAAOtf,MAAMskF,qBAGpC59E,OAAO5H,KAAKwgB,UAGpB,IAAqB4V,QAAS5O,SAAS09D,iBAAiB1kE,UAAW,SAAU1L,GAAK,MAAOA,aAAaxV,eAAcmmF,QAChHrvD,UACIA,OAAOovD,oBACP39E,QAAQ7H,KAAKwgB,SAAW,KAAO4V,OAAOovD,qBAGtC39E,QAAQ7H,KAAKwgB,UAGrB,IAAqBklE,cAAeR,iBAAiB1kE,UAAUpC,OAAO,SAAUtJ,GAAK,MAAOA,IAAKA,YAAaxV,eAAcqmF,aAC5HD,cAAa5lF,QAAQ,SAAU8lF,aAC3B,GAAIA,YAAYC,iBAAkB,CAC9B,GAAqBC,WAAYF,YAAYC,iBAAiB,EAC9D,IAAkB,MAAdC,UACA,KAAM,IAAIzlF,OAAM,kEAEf,IAAkB,MAAdylF,UACL,KAAM,IAAIzlF,OAAM,sFAEpByH,MAAK,IAAM89E,YAAYC,iBAAmB,KAAOrlE,aAGjD1Y,MAAK,IAAM0Y,SAAW,KAAOA,UAGrC,IAAqB2iC,eAAgB+hC,iBAAiB1kE,UAAUpC,OAAO,SAAUtJ,GAAK,MAAOA,IAAKA,YAAaxV,eAAcymF,cAC7H5iC,eAAcrjD,QAAQ,SAAUkmF,cAC5B,GAAqBxyD,MAAOwyD,aAAaxyD,QACzC1rB,MAAK,IAAMk+E,aAAazM,UAAY,KAAO/4D,SAAW,IAAMgT,KAAK9e,KAAK,KAAO,KAEjF,IAAqBqK,OAAQyI,SAAS09D,iBAAiB1kE,UAAW,SAAU1L,GAAK,MAAOA,aAAaxV,eAAc2mF,OAC/GlnE,SACA7W,QAAQsY,UAAYzB,SAGrB1f,KAAK6mF,OAAOb,GAAIz9E,OAAQC,QAASC,KAAMI,QAASo9E,gBAM3D9gD,kBAAkBsC,UAAUq/C,mBAAqB,SAAUC,KAAO,MAAO1kF,cAAa0kF,KAAM,KAAMA,MAAM,GAAGpkF,QAK3GwiC,kBAAkBsC,UAAUu/C,gBAAkB,SAAU90B,UAIpD,IAAK,GAHgB+0B,OAAQ,GAAIxlE,KACZylE,kBAEKt7E,EAAIsmD,SAAS/vD,OAAS,EAAGyJ,GAAK,EAAGA,IAAK,CAC5D,GAAqBmtE,SAAU7mB,SAAStmD,GACnBlH,KAAO1E,KAAK8mF,mBAAmB/N,QAC/CkO,OAAM/hF,IAAIR,QACXuiF,MAAMzrD,IAAI92B,MACVwiF,eAAevmF,KAAKo4E,UAG5B,MAAOmO,gBAAe1tE,WAW1B2rB,kBAAkBsC,UAAUo/C,OAAS,SAAUroE,UAAWjW,OAAQC,QAASC,KAAMI,QAASo9E,eACtF,GAAqBkB,cAAennF,KAAKgnF,gBAAgBxoE,UAAUjW,OAASiW,UAAUjW,OAAOmB,OAAOnB,QAAUA,QACzF6+E,cAAgBpnF,KAAKgnF,gBAAgBxoE,UAAUhW,QAAUgW,UAAUhW,QAAQkB,OAAOlB,SAAWA,SAC7F6+E,WAAa7oE,UAAU/V,KAAOxI,cAAcqnF,OAAO9oE,UAAU/V,KAAMA,MAAQA,KAC3E8+E,cAAgB/oE,UAAU3V,QAAU5I,cAAcqnF,OAAO9oE,UAAU3V,QAASA,SAAWA,OAC5G,OAAI2V,qBAAqBve,eAAc2e,UAC5B,GAAI3e,eAAc2e,WACrB1X,SAAUsX,UAAUtX,SACpBqB,OAAQ4+E,aACR3+E,QAAS4+E,cACT3+E,KAAM4+E,WACNxjC,SAAUrlC,UAAUqlC,SACpBh5B,SAAUrM,UAAUqM,SACpBhiB,QAAS0+E,cACTn/E,gBAAiBoW,UAAUpW,gBAC3BO,UAAW6V,UAAU7V,UACrBC,cAAe4V,UAAU5V,cACzBkzB,gBAAiBtd,UAAUsd,gBAC3B/0B,SAAUyX,UAAUzX,SACpBe,YAAa0W,UAAU1W,YACvBC,OAAQyW,UAAUzW,OAClBC,UAAWwW,UAAUxW,UACrBL,cAAe6W,UAAU7W,cACzBO,WAAYsW,UAAUtW,WACtBw7C,cAAellC,UAAUklC,gBAItB,GAAIzjD,eAAc4e,WACrB3X,SAAUsX,UAAUtX,SACpBqB,OAAQ4+E,aACR3+E,QAAS4+E,cACT3+E,KAAM4+E,WACNxjC,SAAUrlC,UAAUqlC,SACpBh7C,QAAS0+E,cACT5+E,UAAW6V,UAAU7V,aAI1Bw8B,oBAEXA,mBAAkB8lB,aACZ1jD,KAAMiE,qBAKZ25B,kBAAkB+lB,eAAiB,WAAc,QAC3C3jD,KAAMtH,cAAcunF;;;;;;;AA8B1B,GAAIv+D,yBAA0B,mCACTP,WAAa,gBAuF9Bwc,iBAAoB,WAIpB,QAASA,kBAAiBugD,YACH,SAAfA,aAAyBA,WAAaxlF,cAAc6F,YACxD9F,KAAKylF,WAAaA,WAyBtB,MAnBAvgD,kBAAiBuC,UAAUggD,WAAa,SAAUlgF,MAAQ,MAAOvH,MAAKylF,WAAWE,YAAYp+E,MAAMk+D,KAAK37C,sBAMxGob,iBAAiBuC,UAAU3mB,QAAU,SAAUvZ,KAAMq+E,iBACzB,SAApBA,kBAA8BA,iBAAkB,EACpD,IAAqBvlD,cAAelY,SAASnoB,KAAKylF,WAAWE,YAAYp+E,MAAOuiB,oBAChF,IAAIuW,aACA,MAAOA,aAGP,IAAIulD,gBACA,KAAM,IAAI5kF,OAAM,mCAAqCf,cAAcwF,WAAW8B,MAAQ,KAE1F,OAAO,OAGR29B,mBAEXA,kBAAiB+lB,aACX1jD,KAAMiE,qBAKZ05B,iBAAiBgmB,eAAiB,WAAc,QAC1C3jD,KAAMtH,cAAcunF,mBAgB1B,IAAIpiD,cAAgB,WAIhB,QAASA,cAAaqgD,YACC,SAAfA,aAAyBA,WAAaxlF,cAAc6F,YACxD9F,KAAKylF,WAAaA,WA8BtB,MAxBArgD,cAAaqC,UAAUzF,OAAS,SAAUz6B,MACtC,GAAqBm+E,cAAe1lF,KAAKylF,WAAWE,YAAY1lF,cAAcmqB,kBAAkB7iB,MAChG,OAAOm+E,eAAgBA,aAAajgB,KAAKz7C,kBAQ7Cob,aAAaqC,UAAU3mB,QAAU,SAAUvZ,KAAMq+E,iBACrB,SAApBA,kBAA8BA,iBAAkB,EACpD,IAAqB8B,OAAQ1nF,KAAKylF,WAAWE,YAAY1lF,cAAcmqB,kBAAkB7iB,MACzF,IAAImgF,MAAO,CACP,GAAqBC,YAAax/D,SAASu/D,MAAO19D,gBAClD,IAAI29D,WACA,MAAOA,YAGf,GAAI/B,gBACA,KAAM,IAAI5kF,OAAM,8BAAgCf,cAAcwF,WAAW8B,MAE7E,OAAO,OAEJ69B,eAEXA,cAAa6lB,aACP1jD,KAAMiE,qBAKZ45B,aAAa8lB,eAAiB,WAAc,QACtC3jD,KAAMtH,cAAcunF,mBAE1B,IAAII,iBAAmB,WACnB,QAASA,oBA6BT,MAvBAA,iBAAgBngD,UAAUnK,cAAgB,SAAUvU,UAAY,OAAO,GAMvE6+D,gBAAgBngD,UAAUogD,mBAAqB,SAAU9+D,UAAY,MAAO,OAK5E6+D,gBAAgBngD,UAAUjK,eAAiB,SAAU34B,WAAa,MAAO,OAMzE+iF,gBAAgBngD,UAAUrG,aAAe,SAAUv7B,UAAY,UAK/D+hF,gBAAgBngD,UAAUjX,YAAc,SAAU3rB,WAAa,MAAOA,YAC/D+iF,kBAEXA,iBAAgB38B,aACV1jD,KAAMiE,qBAKZo8E,gBAAgB18B,eAAiB,WAAc,SAC/C,IAAqB48B,uBAAwB,GAAI7nF,eAAcy7E,eAAe,kBAC1Ez2C,wBAA2B,WAc3B,QAASA,yBAAwB82C,QAASgM,kBAAmBC,mBAAoBC,cAAeC,iBAAkBzQ,gBAAiB0Q,qBAAsBna,SAAUoa,mBAAoB3C,WAAY4C,iBAC5K,SAAf5C,aAAyBA,WAAaxlF,cAAc6F,YACxD9F,KAAK+7E,QAAUA,QACf/7E,KAAK+nF,kBAAoBA,kBACzB/nF,KAAKgoF,mBAAqBA,mBAC1BhoF,KAAKioF,cAAgBA,cACrBjoF,KAAKkoF,iBAAmBA,iBACxBloF,KAAKy3E,gBAAkBA,gBACvBz3E,KAAKmoF,qBAAuBA,qBAC5BnoF,KAAKguE,SAAWA,SAChBhuE,KAAKooF,mBAAqBA,mBAC1BpoF,KAAKylF,WAAaA,WAClBzlF,KAAKqoF,gBAAkBA,gBACvBroF,KAAKsoF,6BAA+B,GAAI/pE,KACxCve,KAAKuoF,gBAAkB,GAAIhqE,KAC3Bve,KAAKwoF,cAAgB,GAAIjqE,KACzBve,KAAKyoF,WAAa,GAAIlqE,KACtBve,KAAK0oF,eAAiB,GAAInqE,KAC1Bve,KAAK2oF,iBAAmB,GAAIpqE,KAsgChC,MAhgCA0mB,yBAAwBwC,UAAUi8C,cAAgB,SAAUn8E,MACxD,GAAqBwwE,SAAU/3E,KAAKuoF,gBAAgBpjF,IAAIoC,KACxDvH,MAAKuoF,gBAAgB9sD,OAAOl0B,MAC5BvH,KAAKsoF,6BAA6B7sD,OAAOl0B,MACzCvH,KAAKwoF,cAAc/sD,OAAOl0B,MAC1BvH,KAAKyoF,WAAWhtD,OAAOl0B,MACvBvH,KAAK2oF,iBAAiBltD,OAAOl0B,MAE7BvH,KAAK0oF,eAAejF,QAChB1L,SACA/3E,KAAKmoF,qBAAqBzE,cAAc3L,UAMhD9yC,wBAAwBwC,UAAU+7C,WAAa,WAC3CxjF,KAAKuoF,gBAAgB9E,QACrBzjF,KAAKsoF,6BAA6B7E,QAClCzjF,KAAKwoF,cAAc/E,QACnBzjF,KAAKyoF,WAAWhF,QAChBzjF,KAAK0oF,eAAejF,QACpBzjF,KAAK2oF,iBAAiBlF,QACtBzjF,KAAKmoF,qBAAqB3E,cAO9Bv+C,wBAAwBwC,UAAUmhD,kBAAoB,SAAUC,SAAUnkF,MACtE,GAAqBokF,UAAW,KACXC,WAAa,WAC9B,IAAKD,SACD,KAAM,IAAI9nF,OAAM,wBAA0B0D,KAAO,aAAezE,cAAcwF,WAAWojF,UAAY,wBAEzG,OAAOC,UAAS/rE,MAAM/c,KAAMkC,WAQhC,OANA6mF,YAAWC,YAAc,SAAU3yE,GAC/ByyE,SAAWzyE,EACX,WAAeoxB,UAAYpxB,EAAEoxB,WAGjC,WAAewhD,eAAiBvkF,KACzBqkF,YAOX9jD,wBAAwBwC,UAAUyhD,kBAAoB,SAAU5iF,QAAS5B,MACrE,MAAI4B,mBAAmBvB,cACZ/E,KAAKooF,mBAAmBjjF,IAAImjB,kBAAkBhiB,QAAQT,UAAWnB,MAGjE1E,KAAK4oF,kBAAkBtiF,QAAS5B,OAO/CugC,wBAAwBwC,UAAU0hD,sBAAwB,SAAU7iF,SAChE,MAAOtG,MAAKkpF,kBAAkB5iF,QAASN,cAAcM,QAAS,KAMlE2+B,wBAAwBwC,UAAU2hD,0BAA4B,SAAU9iF,SACpE,MAAOtG,MAAKkpF,kBAAkB5iF,QAASF,kBAAkBE,WAM7D2+B,wBAAwBwC,UAAU4hD,qBAAuB,SAAU/iF,SAC/D,GAAqB5B,MAAOC,gBAAiBE,UAAWyB,UAAa,OACrE,IAAIA,kBAAmBvB,cACnB,MAAO/E,MAAKooF,mBAAmBjjF,IAAImB,QAAQT,SAAUnB,KAGrD,IAAqB4kF,WAAY,YAEjC,OADAA,WAAUL,eAAiBvkF,KACpB4kF,WAOfrkD,wBAAwBwC,UAAU8hD,gBAAkB,SAAUjjF,SAC1D,MAAIA,mBAAmBvB,cACZ/E,KAAKooF,mBAAmBjjF,IAAImjB,kBAAkBhiB,QAAQT,UAAWM,iBAAiBG,cAajG2+B,wBAAwBwC,UAAU+hD,oBAAsB,SAAUtiF,SAAUZ,SACxE,GAAIA,kBAAmBvB,cACnB,MAAO/E,MAAKooF,mBAAmBjjF,IAAImjB,kBAAkBhiB,QAAQT,UAAWU,qBAAqBD,SAG7F,IAAqBmjF,UAAWzpF,KAAKopF,0BAA0B9iF,QAC/D,OAAOrG,eAAcoyE,KAAKnrE,SAAUZ,QAA0B,WAQtE2+B,wBAAwBwC,UAAUiiD,aAAe,SAAUniF,KAAMoI,MAC7D,GAAqB+tB,aAAc19B,KAAKwoF,cAAcrjF,IAAIoC,KAC1D,KAAKm2B,YAAa,CACd,GAAqBH,SAAUv9B,KAAKkoF,iBAAiB1qD,eAAej2B,KACpEm2B,aAAcH,QAAUA,QAAQh2B,KAAO,KACvCvH,KAAKwoF,cAAcjjF,IAAIgC,KAAMm2B,aAEjC,MAAOA,cAAeA,YAAYE,cAAgBjuB,KAAO+tB,YAAc,MAQ3EuH,wBAAwBwC,UAAUkiD,uBAAyB,SAAU9/E,aAAco8E,cAAe2D,QAC9F,GAAIviD,OAAQrnC,IACZ,KAAIA,KAAKuoF,gBAAgBrjF,IAAI+gF,eAA7B,CAGAA,cAAgBhmF,cAAcmqB,kBAAkB67D,cAChD,IAAIpxE,IAAK7U,KAAK6pF,kCAAkC5D,eAAgB0B,WAAa9yE,GAAG8yE,WAAYvqD,SAAWvoB,GAAGuoB,SACrF0sD,wBAA0B,SAAUC,kBACrD,GAAqBC,mBAAoB,GAAI5iF,2BACzCG,KAAM61B,SAAS71B,KACfmB,YAAa00B,SAAS10B,YACtBxB,SAAUk2B,SAASl2B,SACnB28C,SAAUzmB,SAASymB,SACnBz7C,gBAAiBg1B,SAASh1B,gBAC1BG,OAAQ60B,SAAS70B,OACjBC,QAAS40B,SAAS50B,QAClBs7C,cAAe1mB,SAAS0mB,cACxBzY,eAAgBjO,SAASiO,eACzBjR,eAAgBgD,SAAShD,eACzBzxB,UAAWy0B,SAASz0B,UACpBC,cAAew0B,SAASx0B,cACxBC,QAASu0B,SAASv0B,QAClBC,YAAas0B,SAASt0B,YACtBgzB,gBAAiBsB,SAAStB,gBAC1B/yB,kBAAmBq0B,SAASr0B,kBAC5BC,aAAco0B,SAASp0B,aACvBizB,iBAAkBmB,SAASnB,iBAC3Bl1B,SAAUgjF,kBAId,OAFA1iD,OAAMkhD,gBAAgBhjF,IAAI0gF,cAAe+D,mBACzC3iD,MAAMmhD,cAAcjjF,IAAI0gF,cAAe+D,kBAAkBrmC,aAClDqmC,kBAEX,IAAI5sD,SAAS10B,YAAa,CACtB,GAAqBoB,cAAe9J,KAAKmoF,qBAAqBrE,mBAC1Dj6E,aAAcA,aACd47C,cAAewgC,cACf/7E,UAAWwgB,mBAAmB1qB,KAAKylF,WAAYQ,cAAe0B,YAC9DhgF,cAAey1B,SAASr2B,SAASY,cACjCZ,SAAUq2B,SAASr2B,SAASA,SAC5Be,YAAas1B,SAASr2B,SAASe,YAC/BC,OAAQq1B,SAASr2B,SAASgB,OAC1BC,UAAWo1B,SAASr2B,SAASiB,UAC7BE,WAAYk1B,SAASr2B,SAASmB,WAC9Bw7C,cAAetmB,SAASr2B,SAAS28C,eAErC,OAAI55C,cAAam4C,YACb6nC,wBAAwBhgF,aAAam4C,YAC9B,MAGH2nC,QACA5pF,KAAKyuD,aAAarjC,2BAA2B66D,eAAgBA,eACtD,MAEJn8E,aAAao4C,YAAYkiC,KAAK0F,yBAMzC,MADAA,yBAAwB,MACjB,OAOf7kD,wBAAwBwC,UAAUoiD,kCAAoC,SAAU5D,eAC5E,GAAI5+C,OAAQrnC,IAEZ,IADAimF,cAAgBhmF,cAAcmqB,kBAAkB67D,gBAC3CA,cACD,MAAO,KAEX,IAAqBgE,YAAajqF,KAAKsoF,6BAA6BnjF,IAAI8gF,cACxE,IAAIgE,WACA,MAAOA,WAEX,IAAqBlS,SAAU/3E,KAAKgoF,mBAAmBlnE,QAAQmlE,eAAe,EAC9E,KAAKlO,QACD,MAAO,KAEX,IAAqBmS,8BACrB,IAAInS,kBAAmB93E,eAAc2e,UAAW,CAE5ClT,qBAAqB,SAAUqsE,QAAQhwE,QACvC2D,qBAAqB,YAAaqsE,QAAQ/vE,WAC1C6D,2BAA2B,gBAAiBksE,QAAQr0B,cACpD,IAAqBx7C,YAAa6vE,QAAQ7vE,UAC1CgiF,+BAAgC,GAAIxiF,0BAChCC,cAAeowE,QAAQpwE,cACvBZ,SAAUgxE,QAAQhxE,SAClBe,YAAaiwE,QAAQjwE,YACrBC,OAAQgwE,QAAQhwE,OAChBC,UAAW+vE,QAAQ/vE,UACnBE,WAAYA,WACZw7C,cAAeq0B,QAAQr0B,cACvBv7C,WAAY4vE,QAAQhxE,WAG5B,GAAqBojF,yBAA0B,KAC1BvhF,iBACAwhF,0BACAljF,SAAW6wE,QAAQ7wE,QACpC6wE,mBAAmB93E,eAAc2e,WAEjCurE,wBAA0BpS,QAAQ3vE,gBAC9B2vE,QAAQnvE,gBACRA,cAAgB5I,KAAKqqF,sBAAsBtS,QAAQnvE,cAAewhF,uBAAwB,sBAAyBp/D,cAAci7D,eAAiB,OAAUA,gBAE5JlO,QAAQj8C,kBACRsuD,uBAAyB7/D,sBAAsBwtD,QAAQj8C,iBAClDtmB,IAAI,SAAUjO,MAAQ,MAAO8/B,OAAMijD,2BAA2B/iF,QAC9DmC,OAAO0gF,yBAEXljF,WACDA,SAAWlH,KAAKy3E,gBAAgBpB,mCAK/BnvE,WACDlH,KAAKyuD,aAAaprD,YAAY,aAAe2nB,cAAci7D,eAAiB,oCAAqCA,eACjH/+E,SAAW,QAGnB,IAAqByB,aACI,OAArBovE,QAAQpvE,YACRA,UAAY3I,KAAKqqF,sBAAsBtS,QAAQpvE,UAAWyhF,uBAAwB,kBAAqBp/D,cAAci7D,eAAiB,OAAUA,eAEpJ,IAAqBp9E,YACAC,cACE,OAAnBivE,QAAQlvE,UACRA,QAAU7I,KAAKuqF,oBAAoBxS,QAAQlvE,SAAS,EAAOo9E,eAC3Dn9E,YAAc9I,KAAKuqF,oBAAoBxS,QAAQlvE,SAAS,EAAMo9E,eAElE,IAAqB7oD,UAAWh2B,yBAAyBC,QACrDH,SAAUA,SACV28C,SAAUk0B,QAAQl0B,SAClBn7C,cAAewhF,8BACf3iF,KAAMvH,KAAKwqF,iBAAiBvE,eAC5Bl/E,SAAUmjF,8BACV9hF,gBAAiB+hF,wBACjB5hF,OAAQwvE,QAAQxvE,OAChBC,QAASuvE,QAAQvvE,QACjBC,KAAMsvE,QAAQtvE,KACdE,UAAWA,UACXC,cAAeA,cACfC,QAASA,QACTC,YAAaA,YACbgzB,gBAAiBsuD,uBACjBrhF,kBAAmBmhF,8BAAgClqF,KAAKmpF,sBAAsBlD,eAC1E1+C,OACJv+B,aAAckhF,8BAAgClqF,KAAKupF,gBAAgBtD,eAAiB1+C,OACpFtL,iBAAkBiuD,8BACdlqF,KAAKwpF,oBAAoBtiF,SAAU++E,eACnC1+C,QAIR,OAFA0iD,aAAe7sD,SAAUA,SAAUuqD,WAAY5P,SAC/C/3E,KAAKsoF,6BAA6B/iF,IAAI0gF,cAAegE,YAC9CA,YAQXhlD,wBAAwBwC,UAAUgjD,qBAAuB,SAAUxE,eAC/D,GAAqBlO,SAAU/3E,KAAKuoF,gBAAgBpjF,IAAI8gF,cAIxD,OAHKlO,UACD/3E,KAAKyuD,aAAaprD,YAAY,8IAAgJ2nB,cAAci7D,eAAiB,KAAMA,eAEhNlO,SAMX9yC,wBAAwBwC,UAAUijD,oBAAsB,SAAUpkF,SAC9D,GAAqBqkF,YAAc3qF,KAAK0pF,aAAapjF,QAASu3B,mBAAmBhf,UAIjF,OAHK8rE,aACD3qF,KAAKyuD,aAAaprD,YAAY,2DAA6D2nB,cAAc1kB,SAAW,KAAMA,SAEvHqkF,YAMX1lD,wBAAwBwC,UAAU1F,YAAc,SAAUx6B,MAAQ,MAAOvH,MAAKgoF,mBAAmBjmD,YAAYx6B,OAK7G09B,wBAAwBwC,UAAUzF,OAAS,SAAUz6B,MAAQ,MAAOvH,MAAKioF,cAAcjmD,OAAOz6B,OAK9F09B,wBAAwBwC,UAAUmjD,mBAAqB,SAAUC,YAC7D,GAAqBC,eAAiB9qF,KAAK0pF,aAAamB,WAAYhtD,mBAAmB9T,SACvF,KAAK+gE,cAAe,CAChB,GAAqBxgF,YAAatK,KAAK0hC,oBAAoBmpD,YAAY,EACvEC,eAAgBxgF,WAAaA,WAAWq5C,YAAc,KAClDmnC,eACA9qF,KAAKwoF,cAAcjjF,IAAIslF,WAAYC,eAG3C,MAAOA,gBASX7lD,wBAAwBwC,UAAUsjD,qCAAuC,SAAUF,WAAYjB,OAAQhE,iBACnG,GAAIv+C,OAAQrnC,IACY,UAApB4lF,kBAA8BA,iBAAkB,EACpD,IAAqB/lD,UAAW7/B,KAAK0hC,oBAAoBmpD,WAAYjF,iBAChDoF,UAUrB,OATInrD,YACAA,SAASU,mBAAmB9/B,QAAQ,SAAUwI,IAC1C,GAAqBgiF,SAAU5jD,MAAMsiD,uBAAuBkB,WAAY5hF,GAAGpE,UAAW+kF,OAClFqB,UACAD,QAAQrqF,KAAKsqF,WAGrBprD,SAASa,cAAcjgC,QAAQ,SAAUwI,IAAM,MAAOo+B,OAAM6jD,kBAAkBjiF,GAAGpE,cAE9Es9C,QAAQ8iC,IAAI+F,UAOvB/lD,wBAAwBwC,UAAU/F,oBAAsB,SAAUmpD,WAAYjF,iBAC1E,GAAIv+C,OAAQrnC,IACY,UAApB4lF,kBAA8BA,iBAAkB,GACpDiF,WAAa5qF,cAAcmqB,kBAAkBygE,WAC7C,IAAqBM,aAAcnrF,KAAK0oF,eAAevjF,IAAI0lF,WAC3D,IAAIM,YACA,MAAOA,YAEX,IAAqBnhF,MAAOhK,KAAK+nF,kBAAkBjnE,QAAQ+pE,WAAYjF,gBACvE,KAAK57E,KACD,MAAO,KAEX,IAAqBu2B,uBACA6qD,gCACA1qD,iBACA6jB,mBACAC,mBACA77C,aACAmzB,mBACAwoB,uBACAG,UACjBz6C,MAAKqhF,SACL9gE,sBAAsBvgB,KAAKqhF,SAAS5qF,QAAQ,SAAU6qF,cAClD,GAAqBC,mBACrB,IAAI/gE,YAAY8gE,cACZC,mBAAqBD,iBAEpB,IAAIA,cAAgBA,aAAazrD,SAAU,CAC5C,GAAqB2rD,qBAAsBF,YAC3CC,oBAAqBC,oBAAoB3rD,SACrC2rD,oBAAoB7iF,WACpBA,UAAUhI,KAAKoc,MAAMpU,UAAW0+B,MAAMgjD,sBAAsBmB,oBAAoB7iF,UAAWmzB,gBAAiB,8BAAgC9Q,cAAcugE,oBAAsB,OAASD,eAGjM,IAAIC,mBAYA,WADAlkD,OAAMonB,aAAaprD,YAAY,qBAAuB2nB,cAAcsgE,cAAgB,6BAA+BtgE,cAAc6/D,YAAc,KAAMA,WAVrJ,KAAIxjD,MAAMokD,iBAAiBZ,WAAYU,oBAAvC,CAEA,GAAqBG,uBAAwBrkD,MAAMujD,mBAAmBW,mBACtE,OAAKG,2BAILnnC,iBAAgB5jD,KAAK+qF,2BAHjBrkD,OAAMonB,aAAaprD,YAAY,cAAgBgkC,MAAMskD,mBAAmBL,cAAgB,KAAOtgE,cAAcsgE,cAAgB,6BAA+BtgE,cAAc6/D,YAAc,yCAA0CA,eAW9O7gF,KAAKxK,SACL+qB,sBAAsBvgB,KAAKxK,SAASiB,QAAQ,SAAUmrF,cAClD,IAAKphE,YAAYohE,cAEb,WADAvkD,OAAMonB,aAAaprD,YAAY,qBAAuB2nB,cAAc4gE,cAAgB,6BAA+B5gE,cAAc6/D,YAAc,KAAMA,WAGzJ,IAAqBgB,uBAAwBxkD,MAAMujD,mBAAmBgB,aAClEC,uBACArnC,gBAAgB7jD,KAAKkrF,uBAGrBT,6BAA6BzqF,KAAK0mC,MAAMykD,uBAAuBF,gBAM3E,IAAqBhqD,kBAAmB5hC,KAAK+rF,+BAA+BxnC,gBAAiBC,gBACzFx6C,MAAKgiF,cACLzhE,sBAAsBvgB,KAAKgiF,cAAcvrF,QAAQ,SAAUwrF,cACvD,IAAKzhE,YAAYyhE,cAEb,WADA5kD,OAAMonB,aAAaprD,YAAY,qBAAuB2nB,cAAcihE,cAAgB,6BAA+BjhE,cAAc6/D,YAAc,KAAMA,WAGzJ,IAAqBqB,oBAAqB7kD,MAAMykD,uBAAuBG,aACvE,IAAI5kD,MAAM2gD,mBAAmBjmD,YAAYkqD,cACrCrqD,iBAAiBsjB,aAAagnC,oBAC9B3rD,mBAAmB5/B,KAAKurF,oBACxB7kD,MAAM8kD,iBAAiBF,aAAcpB,gBAEpC,CAAA,IAAIxjD,MAAM4gD,cAAcjmD,OAAOiqD,cAQhC,WADA5kD,OAAMonB,aAAaprD,YAAY,cAAgBgkC,MAAMskD,mBAAmBM,cAAgB,KAAOjhE,cAAcihE,cAAgB,6BAA+BjhE,cAAc6/D,YAAc,2DAA4DA,WANpPjpD,kBAAiBwjB,QAAQ8mC,oBACzBtqD,iBAAiBd,MAAMngC,KAAKurF,oBAC5BxrD,cAAc//B,KAAKurF,oBACnB7kD,MAAM8kD,iBAAiBF,aAAcpB,cAQjD,IAAqB9sD,uBACAC,gBAuDrB,OAtDAotD,8BAA6B3qF,QAAQ,SAAU2rF,YACvCxqD,iBAAiB+iB,cAAcz/C,IAAIknF,WAAWvnF,YAC9Ck5B,mBAAmBp9B,KAAKyrF,YACxBxqD,iBAAiBujB,qBAAqBinC,aAEjCxqD,iBAAiBijB,SAAS3/C,IAAIknF,WAAWvnF,YAC9Cm5B,cAAcr9B,KAAKyrF,YACnBxqD,iBAAiByjB,gBAAgB+mC,aAGjC/kD,MAAMonB,aAAaprD,YAAY,gBAAkBgkC,MAAMskD,mBAAmBS,WAAWvnF,WAAa,IAAMmmB,cAAcohE,WAAWvnF,WAAa,SAAWmmB,cAAc6/D,YAAc,6CAA8CA,cAKvO7gF,KAAKrB,WACLA,UAAUhI,KAAKoc,MAAMpU,UAAW3I,KAAKqqF,sBAAsBrgF,KAAKrB,UAAWmzB,gBAAiB,8BAAgC9Q,cAAc6/D,YAAc,OAASA,aAEjK7gF,KAAK8xB,iBACLA,gBAAgBn7B,KAAKoc,MAAM+e,gBAAiBvR,sBAAsBvgB,KAAK8xB,iBAClEtmB,IAAI,SAAUjO,MAAQ,MAAO8/B,OAAMijD,2BAA2B/iF,SAEnEyC,KAAKqiF,WACL9hE,sBAAsBvgB,KAAKqiF,WAAW5rF,QAAQ,SAAU8G,MACpD,MAAKijB,aAAYjjB,UAIjB+8C,qBAAoB3jD,KAAK0mC,MAAMykD,uBAAuBvkF,WAHlD8/B,OAAMonB,aAAaprD,YAAY,qBAAuB2nB,cAAczjB,MAAQ,+CAAiDyjB,cAAc6/D,YAAc,KAAMA,cAM3K/uD,gBAAgBn7B,KAAKoc,MAAM+e,gBAAiBwoB,oBAAoB9uC,IAAI,SAAUjO,MAAQ,MAAO8/B,OAAMijD,2BAA2B/iF,KAAK1C,cAC/HmF,KAAKy6C,SACLA,QAAQ9jD,KAAKoc,MAAM0nC,QAASl6B,sBAAsBvgB,KAAKy6C,UAE3D0mC,YAAc,GAAI9mC,0BACd98C,KAAMvH,KAAKwqF,iBAAiBK,YAC5BliF,UAAWA,UACXmzB,gBAAiBA,gBACjBwoB,oBAAqBA,oBACrBG,QAASA,QACTlkB,mBAAoBA,mBACpBxC,mBAAoBA,mBACpB2C,cAAeA,cACf1C,cAAeA,cACfumB,gBAAiBA,gBACjBC,gBAAiBA,gBACjB5iB,iBAAkBA,iBAClB34B,GAAIe,KAAKf,KAEb6yB,gBAAgBr7B,QAAQ,SAAUwI,IAAM,MAAO24B,kBAAiB2jB,kBAAkBt8C,MAClFN,UAAUlI,QAAQ,SAAU8c,UAAY,MAAOqkB,kBAAiBqjB,YAAY1nC,SAAU4tE,YAAY5jF,QAClGq6B,iBAAiB0jB,UAAU6lC,YAAY5jF,MACvCvH,KAAK0oF,eAAenjF,IAAIslF,WAAYM,aAC7BA,aAOXlmD,wBAAwBwC,UAAUgkD,iBAAmB,SAAUZ,WAAYU,oBACvE,MAAIV,cAAeU,qBACfvrF,KAAKyuD,aAAaprD,YAAY,IAAM2nB,cAAc6/D,YAAc,gCAAiCA,aAC1F,IAQf5lD,wBAAwBwC,UAAUkkD,mBAAqB,SAAUpkF,MAC7D,MAAIvH,MAAKgoF,mBAAmBjmD,YAAYx6B,MAC7B,YAEPvH,KAAKioF,cAAcjmD,OAAOz6B,MACnB,OAEPvH,KAAK+nF,kBAAkBN,WAAWlgF,MAC3B,SAEP,KAASy7E,QACF,WAEJ,SAOX/9C,wBAAwBwC,UAAU0kD,iBAAmB,SAAU5kF,KAAMsjF,YACjE,GAAqByB,WAAYtsF,KAAK2oF,iBAAiBxjF,IAAIoC,KACvD+kF,YAAaA,YAAczB,YAC3B7qF,KAAKyuD,aAAaprD,YAAY,QAAU2nB,cAAczjB,MAAQ,8CAAgDyjB,cAAcshE,WAAa,QAAUthE,cAAc6/D,YAAc,MAC1K,0BAA4B7/D,cAAczjB,MAAQ,oCAAsCyjB,cAAcshE,WAAa,QAAUthE,cAAc6/D,YAAc,OACzJ,gEAAkE7/D,cAAczjB,MAAQ,iCAAmCyjB,cAAcshE,WAAa,QAAUthE,cAAc6/D,YAAc,MAAOA,YAE5M7qF,KAAK2oF,iBAAiBpjF,IAAIgC,KAAMsjF,aAOpC5lD,wBAAwBwC,UAAUskD,+BAAiC,SAAUxnC,gBAAiBC,iBAE1F,GAAqBlkD,QAAS,GAAIokD,mCACb6nC,eAAiB,GAAIhuE,IA8B1C,OA7BAgmC,iBAAgB76C,OAAO86C,iBAAiB/jD,QAAQ,SAAU+rF,YACtDA,WAAW3qD,QAAQphC,QAAQ,SAAUgsF,KAAO,MAAOnsF,QAAOglD,UAAUmnC,OACpED,WAAW1wD,gBAAgBr7B,QAAQ,SAAUisF,MAAQ,MAAOpsF,QAAOilD,kBAAkBmnC,OACrF,IAAqBC,aAAc,GAAIlrE,IACvC+qE,YAAW7jF,UAAUlI,QAAQ,SAAU6Z,OACnC,GAAqBm6D,UAAW/tE,eAAe4T,MAAMiD,SAAS9W,OACzCmmF,YAAcL,eAAepnF,IAAIsvE,SACjDmY,eACDA,YAAc,GAAInrE,KAClB8qE,eAAehnF,IAAIkvE,SAAUmY,aAEjC,IAAqBC,WAAYvyE,MAAM7a,OAAOoF,WAG1C8nF,YAAYznF,IAAIuvE,WAAcmY,YAAY1nF,IAAI2nF,aAC9CD,YAAYpxD,IAAIqxD,WAChBF,YAAYnxD,IAAIi5C,UAChBn0E,OAAO2kD,YAAY3qC,MAAMiD,SAAUjD,MAAM7a,aAIrD+kD,gBAAgB/jD,QAAQ,SAAU+rF,YAC9BA,WAAWzuD,mBAAmBt9B,QAAQ,SAAUwI,IAAM,MAAO3I,QAAO6kD,qBAAqBl8C,MACzFujF,WAAWxuD,cAAcv9B,QAAQ,SAAUwI,IAAM,MAAO3I,QAAO+kD,gBAAgBp8C,QAEnFs7C,gBAAgB9jD,QAAQ,SAAU+rF,YAC9BA,WAAWzuD,mBAAmBt9B,QAAQ,SAAUwI,IAAM,MAAO3I,QAAO4kD,aAAaj8C,MACjFujF,WAAWxuD,cAAcv9B,QAAQ,SAAUwI,IAAM,MAAO3I,QAAO8kD,QAAQn8C,QAEpE3I,QAMX2kC,wBAAwBwC,UAAUqkD,uBAAyB,SAAUvkF,MAEjE,MADAA,MAAOtH,cAAcmqB,kBAAkB7iB,OAC9B1C,UAAW0C,OAMxB09B,wBAAwBwC,UAAUrH,aAAe,SAAU74B,MACvD,GAAqBo+E,aAAc3lF,KAAKylF,WAAWE,YAAYp+E,KAG/D,OAAOo+E,aAAYlgB,KAAK,SAAUqnB,KAAO,MAAOA,KAAIxjD,cAAgBrpC,cAAcsjD,cAMtFte,wBAAwBwC,UAAUslD,qBAAuB,SAAUxlF,MAC/D,OACIq2B,YAAaC,mBAAmB0lB,WAChCh8C,KAAMvH,KAAKwqF,iBAAiBjjF,KAAM,MAAM,KAQhD09B,wBAAwBwC,UAAUulD,uBAAyB,SAAUzlF,KAAMm3B,cAClD,SAAjBA,eAA2BA,aAAe,KAC9C,IAAqBhB,aAAc19B,KAAK0pF,aAAaniF,KAAMs2B,mBAAmB0lB,WAC9E,OAAI7lB,aACOA,YAAYn2B,KAEhBvH,KAAKwqF,iBAAiBjjF,KAAMm3B,eAQvCuG,wBAAwBwC,UAAU+iD,iBAAmB,SAAUjjF,KAAMm3B,aAAcuuD,oBAC1D,SAAjBvuD,eAA2BA,aAAe,MACnB,SAAvBuuD,qBAAiCA,oBAAqB,EAC1D,IAAqBznF,YAAaxF,KAAK8rF,uBAAuBvkF,KAC9D,QACI1C,UAAWW,WAAWX,UACtB2C,OAAQxH,KAAKktF,yBAAyB1nF,WAAWX,UAAW65B,aAAcuuD,oBAC1ExlF,eAAgBxH,cAAcktF,wBAAwBpuE,OAAO,SAAUoK,MAAQ,MAAOD,kBAAiBC,KAAM3jB,WAAWX,eAQhIogC,wBAAwBwC,UAAU2lD,oBAAsB,SAAU7tF,QAASm/B,cAGvE,MAFqB,UAAjBA,eAA2BA,aAAe,MAC9Cn/B,QAAUU,cAAcmqB,kBAAkB7qB,UACjCsF,UAAWtF,QAASiI,OAAQxH,KAAKktF,yBAAyB3tF,QAASm/B,gBAQhFuG,wBAAwBwC,UAAU4lD,gBAAkB,SAAUC,UAC1D,GAAqB9S,UAAWx6E,KAAKyoF,WAAWtjF,IAAImoF,SAIpD,OAHK9S,WACDx6E,KAAKyuD,aAAaprD,YAAY,oIAAsI2nB,cAAcsiE,UAAY,KAAMA,UAEjM9S,UAMXv1C,wBAAwBwC,UAAU8lD,eAAiB,SAAUD,UACzD,GAAqBE,aAAextF,KAAK0pF,aAAa4D,SAAUzvD,mBAAmB5T,KAInF,OAHKujE,cACDxtF,KAAKyuD,aAAaprD,YAAY,sDAAwD2nB,cAAcsiE,UAAY,KAAMA,UAEnHE,aAMXvoD,wBAAwBwC,UAAUgmD,sBAAwB,SAAUH,UAChE,GAAqB9S,UAAWx6E,KAAKyoF,WAAWtjF,IAAImoF,SAIpD,OAHK9S,YACDA,SAAWx6E,KAAKkrF,kBAAkBoC,WAE/B9S,UAMXv1C,wBAAwBwC,UAAUyjD,kBAAoB,SAAUoC,UAC5DA,SAAWrtF,cAAcmqB,kBAAkBkjE,SAC3C,IAAqBI,gBAAiB1tF,KAAKioF,cAAcnnE,QAAQwsE,UAC5C9S,SAAW,GAAIr2B,sBAChC58C,KAAMvH,KAAKwqF,iBAAiB8C,UAC5B5oF,KAAMgpF,eAAehpF,KACrB0/C,KAAMspC,eAAetpC,MAIzB,OAFApkD,MAAKyoF,WAAWljF,IAAI+nF,SAAU9S,UAC9Bx6E,KAAKwoF,cAAcjjF,IAAI+nF,SAAU9S,SAAS72B,aACnC62B,UAQXv1C,wBAAwBwC,UAAUylD,yBAA2B,SAAUS,WAAYjvD,aAAcuuD,oBAC7F,GAAI5lD,OAAQrnC,IACe,UAAvBitF,qBAAiCA,oBAAqB,EAC1D,IAAqBW,iBAAiB,EACjBvgE,OAASqR,cAAgB1+B,KAAKylF,WAAWoI,WAAWF,gBACpDG,qBAAuBzgE,OAAO7X,IAAI,SAAUyxB,OAC7D,GAAqB7lB,cAAc,EACd9Z,QAAS,EACTkuE,QAAS,EACT98C,YAAa,EACbC,YAAa,EACblyB,MAAQ,IAiC7B,OAhCI3D,OAAMC,QAAQkkC,OACdA,MAAMxmC,QAAQ,SAAUstF,YAChBA,qBAAsB9tF,eAAc+tF,KACpC1mF,QAAS,EAEJymF,qBAAsB9tF,eAAcguF,KACzCzY,QAAS,EAEJuY,qBAAsB9tF,eAAciuF,SACzCx1D,YAAa,EAERq1D,qBAAsB9tF,eAAcg9E,SACzCtkD,YAAa,EAERo1D,qBAAsB9tF,eAAcw5B,WACzCrY,aAAc,EACd3a,MAAQsnF,WAAWI,eAEdJ,qBAAsB9tF,eAAci9E,OACzCz2E,MAAQsnF,WAAWtnF,MAEdsnF,qBAAsB9tF,eAAcy7E,eACzCj1E,MAAQsnF,WAEHvjE,YAAYujE,aAAwB,MAATtnF,QAChCA,MAAQsnF,cAKhBtnF,MAAQwgC,MAEC,MAATxgC,OACAmnF,gBAAiB,EACV,OAGPxsE,YAAaA,YACb9Z,OAAQA,OACRkuE,OAAQA,OACR98C,WAAYA,WACZC,WAAYA,WACZlyB,MAAO4gC,MAAM+mD,kBAAkB3nF,SAGvC,IAAImnF,eAAgB,CAChB,GAAqBS,YAAaP,qBAAqBt4E,IAAI,SAAUgiB,KAAO,MAAOA,KAAMxM,cAAcwM,IAAI/wB,OAAS,MAAQ4O,KAAK,MAC5GlI,QAAU,oCAAsC6d,cAAc2iE,YAAc,MAAQU,WAAa,IAClHpB,oBACAjtF,KAAKyuD,aAAaprD,YAAY8J,SAAUwgF,YAGxC3tF,KAAKguE,SAASM,KAAK,YAAcnhE,QAAU,8CAGnD,MAAO2gF,uBAMX7oD,wBAAwBwC,UAAU2mD,kBAAoB,SAAU3nF,OAC5DA,MAAQxG,cAAcmqB,kBAAkB3jB,MACxC,IAAqB6nF,aAOrB,OALIA,cADiB,gBAAV7nF,QACU5D,MAAO4D,QAGPjB,YAAcX,UAAW4B,SAYlDw+B,wBAAwBwC,UAAU4iD,sBAAwB,SAAU1hF,UAAW4lF,sBAAuBC,UAAWC,iBAAkBlnF,MAC/H,GAAI8/B,OAAQrnC,IA2CZ,OA1CyB,UAArByuF,mBAA+BA,qBACnC9lF,UAAUlI,QAAQ,SAAU8c,SAAUmxE,aAClC,GAAI5rF,MAAMC,QAAQwa,UACd8pB,MAAMgjD,sBAAsB9sE,SAAUgxE,sBAAuBC,UAAWC,sBAEvE,CACDlxE,SAAWtd,cAAcmqB,kBAAkB7M,SAC3C,IAAqB+a,cAAe,MACpC,IAAI/a,UAAgC,gBAAbA,WAAyBA,SAASgsB,eAAe,WACpElC,MAAMsnD,kBAAkBpxE,UACxB+a,aAAe,GAAIotB,cAAanoC,SAASylE,QAASzlE,cAEjD,IAAIiN,YAAYjN,UACjB+a,aAAe,GAAIotB,cAAanoC,UAAYI,SAAUJ,eAErD,IAAiB,SAAbA,SACL8pB,MAAMonB,aAAaprD,YAAY,+IAE9B,CACD,GAAqBurF,eAAkBjmF,UAAUW,OAAO,SAAUulF,MAAOC,aAAcC,iBAUnF,MATIA,iBAAkBL,YAClBG,MAAMluF,KAAK,GAAKqqB,cAAc8jE,eAEzBC,iBAAmBL,YACxBG,MAAMluF,KAAK,IAAMqqB,cAAc8jE,cAAgB,KAE1CC,iBAAmBL,YAAc,GACtCG,MAAMluF,KAAK,OAERkuF,WAENx5E,KAAK,KACVgyB,OAAMonB,aAAaprD,YAAY,YAAcmrF,UAAYA,UAAY,YAAc,6DAA+DI,cAAgB,KAAMrnF,MAExK+wB,aAAa7xB,QAAUkV,kBAAkBqf,YAAY4zC,8BACrD2f,sBAAsB5tF,KAAKoc,MAAMwxE,sBAAuBlnD,MAAM2nD,gCAAgC12D,aAAc/wB,OAG5GknF,iBAAiB9tF,KAAK0mC,MAAM4nD,oBAAoB32D,kBAIrDm2D,kBAMXxpD,wBAAwBwC,UAAUknD,kBAAoB,SAAUpxE,UACxDA,SAASgsB,eAAe,aAAoC,MAArBhsB,SAASI,UAChD3d,KAAKyuD,aAAaprD,YAAY,wBAA0B2nB,cAAczN,SAASylE,SAAW,wBAA0BzlE,SAASI,SAAW,gOAQhJsnB,wBAAwBwC,UAAUunD,gCAAkC,SAAUzxE,SAAUhW,MACpF,GAAI8/B,OAAQrnC,KACSkvF,cACAC,uBACrB,OAAI5xE,UAASK,YAAcL,SAASC,aAAeD,SAASI,UACxD3d,KAAKyuD,aAAaprD,YAAY,kEAAmEkE,UAGhGgW,SAASM,OAIdoN,mBAAmB1N,SAASE,SAAU0xE,sBACtCA,qBAAqB1uF,QAAQ,SAAU+E,YACnC,GAAqB8U,OAAQ+sB,MAAMijD,2BAA2B9kF,WAAWX,WAAW,EAChFyV,QACA40E,WAAWvuF,KAAK2Z,SAGjB40E,aAVHlvF,KAAKyuD,aAAaprD,YAAY,wEAAyEkE,WAiB/G09B,wBAAwBwC,UAAU6iD,2BAA6B,SAAUhkF,QAASs/E,iBACtD,SAApBA,kBAA8BA,iBAAkB,EACpD,IAAqB7N,SAAU/3E,KAAK6pF,kCAAkCvjF,QACtE,IAAIyxE,SAAWA,QAAQ36C,SAAS10B,YAC5B,OAAS+8C,cAAen/C,QAAS21B,iBAAkB87C,QAAQ36C,SAASnB,iBAGpE,IAAqB0uD,YAAc3qF,KAAK0pF,aAAapjF,QAASu3B,mBAAmBhf,UACjF,IAAI8rE,YAAcA,WAAWjiF,YACzB,OAAS+8C,cAAen/C,QAAS21B,iBAAkB0uD,WAAW1uD,iBAGtE,IAAI2pD,gBACA,KAAMviF,aAAYiD,QAAQ5B,KAAO,2CAOzCugC,wBAAwBwC,UAAUwnD,oBAAsB,SAAU1xE,UAC9D,GAAqB6xE,aACAC,oBAAsB,KACtBC,uBAAyB,KACzB7oF,MAAQzG,KAAKouF,kBAAkB7wE,SAAS9W,MAa7D,OAZI8W,UAASI,UACT0xE,oBAAsBrvF,KAAKgtF,uBAAuBzvE,SAASI,SAAUJ,SAASmhB,cAC9E0wD,YAAcC,oBAAoB7nF,OAC9B+V,SAAS9W,QAAU8W,SAASI,WAE5BlX,OAAUjB,WAAY6pF,uBAGrB9xE,SAASK,aACd0xE,uBAAyBtvF,KAAKotF,oBAAoB7vE,SAASK,WAAYL,SAASmhB,cAChF0wD,YAAcE,uBAAuB9nF,SAGrCf,MAAOA,MACPkX,SAAU0xE,oBACV5xE,SAAUF,SAASE,SACnBG,WAAY0xE,uBACZ9xE,YAAaD,SAASC,YAAcxd,KAAKouF,kBAAkB7wE,SAASC,aAAe,KACnFE,KAAM0xE,YACNvxE,MAAON,SAASM,QASxBonB,wBAAwBwC,UAAU8iD,oBAAsB,SAAU1hF,QAAS0mF,YAAatJ,eACpF,GAAI5+C,OAAQrnC,KACSgwB,MAOrB,OANAnsB,QAAOwwB,KAAKxrB,SAASpI,QAAQ,SAAU+uF,cACnC,GAAqB9vE,OAAQ7W,QAAQ2mF,aACjC9vE,OAAM6vE,cAAgBA,aACtBv/D,IAAIrvB,KAAK0mC,MAAMooD,kBAAkB/vE,MAAO8vE,aAAcvJ,kBAGvDj2D,KAMXiV,wBAAwBwC,UAAUioD,kBAAoB,SAAUxoF,UAAY,MAAOA,UAASiD,MAAM,YAOlG86B,wBAAwBwC,UAAUgoD,kBAAoB,SAAUE,EAAGH,aAAc7B,YAC7E,GACqBztE,WADjBmnB,MAAQrnC,IAYZ,OAV0B,gBAAf2vF,GAAEzoF,SACTgZ,UACIlgB,KAAK0vF,kBAAkBC,EAAEzoF,UAAUsO,IAAI,SAAUo6E,SAAW,MAAOvoD,OAAM+mD,kBAAkBwB,YAG1FD,EAAEzoF,UACHlH,KAAKyuD,aAAaprD,YAAY,8CAAgDmsF,aAAe,SAAaxkE,cAAc2iE,YAAc,+CAAgDA,YAE1LztE,WAAalgB,KAAKouF,kBAAkBuB,EAAEzoF,aAGtCgZ,UAAWA,UACX2vE,MAAOF,EAAEE,MACTjb,YAAa+a,EAAE/a,YAAa4a,aAAcA,aAC1Chb,KAAMmb,EAAEnb,KAAOx0E,KAAKouF,kBAAkBuB,EAAEnb,MAAQ,OASxDvvC,wBAAwBwC,UAAUgnB,aAAe,SAAUlrD,MAAOgE,KAAMuoF,WACpE,IAAI9vF,KAAKqoF,gBAOL,KAAM9kF,MANNvD,MAAKqoF,gBAAgB9kF,MAAOgE,MACxBuoF,WACA9vF,KAAKqoF,gBAAgB9kF,MAAOusF,YAOjC7qD,0BAEXA,yBAAwBgmB,aAClB1jD,KAAMiE,qBAKZy5B,wBAAwBimB,eAAiB,WAAc,QACjD3jD,KAAM48B,iBACN58B,KAAM29B,mBACN39B,KAAM49B,oBACN59B,KAAM69B,eACN79B,KAAMqgF,kBACNrgF,KAAMyuE,wBACNzuE,KAAMi9B,sBACNj9B,KAAMtH,cAAc2jC,WACpBr8B,KAAM67B,kBAAmB6nB,aAAe1jD,KAAMtH,cAAcg9E,aAC5D11E,KAAMtH,cAAcunF,mBACpBjgF,KAAMggC,OAAW0jB,aAAe1jD,KAAMtH,cAAcg9E,WAAc11E,KAAMtH,cAAci9E,OAAQ/oD,MAAO2zD,2BA2E3G,IAAI38D,wBAA0B,SAAUs3B,QAEpC,QAASt3B,0BACL,MAAkB,QAAXs3B,QAAmBA,OAAO1lC,MAAM/c,KAAMkC,YAAclC,KAU/D,MAZAopC,WAAUje,uBAAwBs3B,QASlCt3B,uBAAuBsc,UAAUrkC,WAAa,SAAUP,MAAOqoB,mBAC3DA,kBAAkBvqB,MAAOkE,UAAWhC,SAEjCsoB,wBACT42B,kBA+BEguC,eACJA,cAAaC,MAAQ,EACrBD,aAAaA,aAAaC,OAAS,OAInC,IAAIh/D,QAAU,WAIV,QAASA,QAAOpC,WACM,SAAdA,YAAwBA,UAAY,MACxC5uB,KAAK4uB,UAAYA,UACZA,YACD5uB,KAAK4uB,cAeb,MANAoC,QAAOyW,UAAUxW,UAAY,SAAU9wB,QAASE;AAKhD2wB,OAAOyW,UAAUwoD,YAAc,SAAUC,UAAY,MAAOlwF,MAAK4uB,UAAU7tB,QAAQmvF,aAAc,GAC1Fl/D,UAEPm/D,kBACJA,iBAAgBC,QAAU,EAC1BD,gBAAgBE,KAAO,EACvBF,gBAAgB5rF,OAAS,EACzB4rF,gBAAgBG,IAAM,EACtBH,gBAAgBljF,OAAS,EACzBkjF,gBAAgBjoD,SAAW,EAC3BioD,gBAAgBI,SAAW,EAC3BJ,gBAAgBA,gBAAgBC,SAAW,UAC3CD,gBAAgBA,gBAAgBE,MAAQ,OACxCF,gBAAgBA,gBAAgB5rF,QAAU,SAC1C4rF,gBAAgBA,gBAAgBG,KAAO,MACvCH,gBAAgBA,gBAAgBljF,QAAU,SAC1CkjF,gBAAgBA,gBAAgBjoD,UAAY,WAC5CioD,gBAAgBA,gBAAgBI,UAAY,UAC5C,IAAIC,aAAe,SAAU/tC,QAMzB,QAAS+tC,aAAY9rF,KAAMkqB,WACL,SAAdA,YAAwBA,UAAY,KACxC,IAAIyY,OAAQob,OAAOE,KAAK3iD,KAAM4uB,YAAc5uB,IAE5C,OADAqnC,OAAM3iC,KAAOA,KACN2iC,MAUX,MAnBA+B,WAAUonD,YAAa/tC,QAgBvB+tC,YAAY/oD,UAAUxW,UAAY,SAAU9wB,QAASE,SACjD,MAAOF,SAAQswF,kBAAkBzwF,KAAMK,UAEpCmwF,aACTx/D,QACErE,eAAkB,SAAU81B,QAM5B,QAAS91B,gBAAe9pB,MAAO+rB,WACT,SAAdA,YAAwBA,UAAY,KACxC,IAAIyY,OAAQob,OAAOE,KAAK3iD,KAAM4uB,YAAc5uB,IAE5C,OADAqnC,OAAMxkC,MAAQA,MACPwkC,MAUX,MAnBA+B,WAAUzc,eAAgB81B,QAgB1B91B,eAAe8a,UAAUxW,UAAY,SAAU9wB,QAASE,SACpD,MAAOF,SAAQuwF,oBAAoB1wF,KAAMK,UAEtCssB,gBACTqE,QACE2/D,UAAa,SAAUluC,QAMvB,QAASkuC,WAAUC,GAAIhiE,WACD,SAAdA,YAAwBA,UAAY,KACxC,IAAIyY,OAAQob,OAAOE,KAAK3iD,KAAM4uB,YAAc5uB,IAE5C,OADAqnC,OAAMupD,GAAKA,GACJvpD,MAUX,MAnBA+B,WAAUunD,UAAWluC,QAgBrBkuC,UAAUlpD,UAAUxW,UAAY,SAAU9wB,QAASE,SAC/C,MAAOF,SAAQ0wF,eAAe7wF,KAAMK,UAEjCswF,WACT3/D,QACE8/D,QAAW,SAAUruC,QAMrB,QAASquC,SAAQC,UAAWniE,WACN,SAAdA,YAAwBA,UAAY,KACxC,IAAIyY,OAAQob,OAAOE,KAAK3iD,KAAM4uB,YAAc5uB,IAE5C,OADAqnC,OAAM0pD,UAAYA,UACX1pD,MAQX,MAjBA+B,WAAU0nD,QAASruC,QAgBnBquC,QAAQrpD,UAAUxW,UAAY,SAAU9wB,QAASE,SAAW,MAAOF,SAAQ6wF,aAAahxF,KAAMK,UACvFywF,SACT9/D,QACmBqE,aAAe,GAAIm7D,aAAYL,gBAAgBC,SAC/Cj4D,cAAgB,GAAIq4D,aAAYL,gBAAgBI,UAChDU,UAAY,GAAIT,aAAYL,gBAAgBE,MAK7Da,gBAJ4B,GAAIV,aAAYL,gBAAgBG,KAC7B,GAAIE,aAAYL,gBAAgBljF,QAChC,GAAIujF,aAAYL,gBAAgB5rF,QAC9B,GAAIisF,aAAYL,gBAAgBjoD,aAErEgpD,gBAAeC,OAAS,EACxBD,eAAeE,UAAY,EAC3BF,eAAeG,UAAY,EAC3BH,eAAeI,aAAe,EAC9BJ,eAAeK,MAAQ,EACvBL,eAAeM,KAAO,EACtBN,eAAeO,OAAS,EACxBP,eAAeQ,SAAW,EAC1BR,eAAeS,OAAS,EACxBT,eAAeU,IAAM,EACrBV,eAAeW,GAAK,GACpBX,eAAeY,MAAQ,GACvBZ,eAAea,YAAc,GAC7Bb,eAAec,OAAS,GACxBd,eAAee,aAAe,GAC9Bf,eAAeA,eAAeC,QAAU,SACxCD,eAAeA,eAAeE,WAAa,YAC3CF,eAAeA,eAAeG,WAAa,YAC3CH,eAAeA,eAAeI,cAAgB,eAC9CJ,eAAeA,eAAeK,OAAS,QACvCL,eAAeA,eAAeM,MAAQ,OACtCN,eAAeA,eAAeO,QAAU,SACxCP,eAAeA,eAAeQ,UAAY,WAC1CR,eAAeA,eAAeS,QAAU,SACxCT,eAAeA,eAAeU,KAAO,MACrCV,eAAeA,eAAeW,IAAM,KACpCX,eAAeA,eAAeY,OAAS,QACvCZ,eAAeA,eAAea,aAAe,cAC7Cb,eAAeA,eAAec,QAAU,SACxCd,eAAeA,eAAee,cAAgB,cAI9C,IAAIlhE,YAAc,WAKd,QAASA,YAAWxpB,KAAMkL,YACtBzS,KAAKuH,KAAOA,KACZvH,KAAKyS,WAAaA,WA6MtB,MArMAse,YAAW0W,UAAUvb,gBAAkB,SAAU/rB,QAASE,WAM1D0wB,WAAW0W,UAAUhW,KAAO,SAAU/sB,KAAM+N,YACxC,MAAO,IAAIy/E,cAAalyF,KAAM0E,KAAM,KAAM+N,aAQ9Cse,WAAW0W,UAAUnT,IAAM,SAAUnwB,MAAOoD,KAAMkL,YAE9C,MADa,UAATlL,OAAmBA,KAAO,MACvB,GAAI4qF,aAAYnyF,KAAMmE,MAAOoD,KAAMkL,aAQ9Cse,WAAW0W,UAAU2qD,WAAa,SAAU1tF,KAAM2oB,OAAQ5a,YACtD,MAAO,IAAI4/E,kBAAiBryF,KAAM0E,KAAM2oB,OAAQ,KAAM5a,aAO1Dse,WAAW0W,UAAU1Z,OAAS,SAAUV,OAAQ5a,YAC5C,MAAO,IAAI6/E,oBAAmBtyF,KAAMqtB,OAAQ,KAAM5a,aAQtDse,WAAW0W,UAAUxP,YAAc,SAAU5K,OAAQ9lB,KAAMkL,YAEvD,MADa,UAATlL,OAAmBA,KAAO,MACvB,GAAIgrF,iBAAgBvyF,KAAMqtB,OAAQ9lB,KAAMkL,aAQnDse,WAAW0W,UAAU+qD,YAAc,SAAUC,SAAUC,UAAWjgF,YAE9D,MADkB,UAAdigF,YAAwBA,UAAY,MACjC,GAAIC,iBAAgB3yF,KAAMyyF,SAAUC,UAAW,KAAMjgF,aAOhEse,WAAW0W,UAAUmrD,OAAS,SAAUC,IAAKpgF,YACzC,MAAO,IAAIqgF,oBAAmB5B,eAAeC,OAAQnxF,KAAM6yF,IAAK,KAAMpgF,aAO1Ese,WAAW0W,UAAUsrD,UAAY,SAAUF,IAAKpgF,YAC5C,MAAO,IAAIqgF,oBAAmB5B,eAAeE,UAAWpxF,KAAM6yF,IAAK,KAAMpgF,aAO7Ese,WAAW0W,UAAUurD,UAAY,SAAUH,IAAKpgF,YAC5C,MAAO,IAAIqgF,oBAAmB5B,eAAeG,UAAWrxF,KAAM6yF,IAAK,KAAMpgF,aAO7Ese,WAAW0W,UAAUnS,aAAe,SAAUu9D,IAAKpgF,YAC/C,MAAO,IAAIqgF,oBAAmB5B,eAAeI,aAActxF,KAAM6yF,IAAK,KAAMpgF,aAOhFse,WAAW0W,UAAUwM,MAAQ,SAAU4+C,IAAKpgF,YACxC,MAAO,IAAIqgF,oBAAmB5B,eAAeK,MAAOvxF,KAAM6yF,IAAK,KAAMpgF,aAOzEse,WAAW0W,UAAUwrD,KAAO,SAAUJ,IAAKpgF,YACvC,MAAO,IAAIqgF,oBAAmB5B,eAAeM,KAAMxxF,KAAM6yF,IAAK,KAAMpgF,aAOxEse,WAAW0W,UAAU+H,OAAS,SAAUqjD,IAAKpgF,YACzC,MAAO,IAAIqgF,oBAAmB5B,eAAeO,OAAQzxF,KAAM6yF,IAAK,KAAMpgF,aAO1Ese,WAAW0W,UAAUyrD,SAAW,SAAUL,IAAKpgF,YAC3C,MAAO,IAAIqgF,oBAAmB5B,eAAeQ,SAAU1xF,KAAM6yF,IAAK,KAAMpgF,aAO5Ese,WAAW0W,UAAU0rD,OAAS,SAAUN,IAAKpgF,YACzC,MAAO,IAAIqgF,oBAAmB5B,eAAeS,OAAQ3xF,KAAM6yF,IAAK,KAAMpgF,aAO1Ese,WAAW0W,UAAU0F,IAAM,SAAU0lD,IAAKpgF,YACtC,MAAO,IAAIqgF,oBAAmB5B,eAAeU,IAAK5xF,KAAM6yF,IAAK,KAAMpgF,aAOvEse,WAAW0W,UAAUoO,GAAK,SAAUg9C,IAAKpgF,YACrC,MAAO,IAAIqgF,oBAAmB5B,eAAeW,GAAI7xF,KAAM6yF,IAAK,KAAMpgF,aAOtEse,WAAW0W,UAAU2rD,MAAQ,SAAUP,IAAKpgF,YACxC,MAAO,IAAIqgF,oBAAmB5B,eAAeY,MAAO9xF,KAAM6yF,IAAK,KAAMpgF,aAOzEse,WAAW0W,UAAU4rD,YAAc,SAAUR,IAAKpgF,YAC9C,MAAO,IAAIqgF,oBAAmB5B,eAAea,YAAa/xF,KAAM6yF,IAAK,KAAMpgF,aAO/Ese,WAAW0W,UAAU6rD,OAAS,SAAUT,IAAKpgF,YACzC,MAAO,IAAIqgF,oBAAmB5B,eAAec,OAAQhyF,KAAM6yF,IAAK,KAAMpgF,aAO1Ese,WAAW0W,UAAU8rD,aAAe,SAAUV,IAAKpgF,YAC/C,MAAO,IAAIqgF,oBAAmB5B,eAAee,aAAcjyF,KAAM6yF,IAAK,KAAMpgF,aAMhFse,WAAW0W,UAAU+rD,QAAU,SAAU/gF,YAGrC,MAAOzS,MAAK4yF,OAAOa,gBAAiBhhF,aAOxCse,WAAW0W,UAAUrS,KAAO,SAAU7tB,KAAMkL,YACxC,MAAO,IAAIihF,UAAS1zF,KAAMuH,KAAMkL,aAKpCse,WAAW0W,UAAUzZ,OAAS,WAAc,MAAO,IAAIgJ,qBAAoBh3B,OACpE+wB,cAEP4iE,aACJA,YAAWC,KAAO,EAClBD,WAAWE,MAAQ,EACnBF,WAAWG,WAAa,EACxBH,WAAWI,WAAa,EACxBJ,WAAWA,WAAWC,MAAQ,OAC9BD,WAAWA,WAAWE,OAAS,QAC/BF,WAAWA,WAAWG,YAAc,aACpCH,WAAWA,WAAWI,YAAc,YACpC,IAAI3nE,aAAe,SAAUq2B,QAOzB,QAASr2B,aAAY1nB,KAAM6C,KAAMkL,YAChB,SAATlL,OAAmBA,KAAO,KAC9B,IAAI8/B,OAAQob,OAAOE,KAAK3iD,KAAMuH,KAAMkL,aAAezS,IASnD,OARoB,gBAAT0E,OACP2iC,MAAM3iC,KAAOA,KACb2iC,MAAM2sD,QAAU,OAGhB3sD,MAAM3iC,KAAO,KACb2iC,MAAM2sD,QAAUtvF,MAEb2iC,MAiBX,MAlCA+B,WAAUhd,YAAaq2B,QAwBvBr2B,YAAYqb,UAAUvb,gBAAkB,SAAU/rB,QAASE,SACvD,MAAOF,SAAQ8zF,iBAAiBj0F,KAAMK,UAM1C+rB,YAAYqb,UAAUliC,IAAM,SAAU1C,OAClC,MAAO,IAAIqxF,cAAal0F,KAAK0E,KAAM7B,MAAO,KAAM7C,KAAKyS,aAElD2Z,aACT2E,YACEmjE,aAAgB,SAAUzxC,QAQ1B,QAASyxC,cAAaxvF,KAAM7B,MAAO0E,KAAMkL,YACxB,SAATlL,OAAmBA,KAAO,KAC9B,IAAI8/B,OAAQob,OAAOE,KAAK3iD,KAAMuH,MAAQ1E,MAAM0E,KAAMkL,aAAezS,IAGjE,OAFAqnC,OAAM3iC,KAAOA,KACb2iC,MAAMxkC,MAAQA,MACPwkC,MAoBX,MAhCA+B,WAAU8qD,aAAczxC,QAmBxByxC,aAAazsD,UAAUvb,gBAAkB,SAAU/rB,QAASE,SACxD,MAAOF,SAAQg0F,kBAAkBn0F,KAAMK,UAO3C6zF,aAAazsD,UAAUlS,WAAa,SAAUhuB,KAAMqnB,WAGhD,MAFa,UAATrnB,OAAmBA,KAAO,MACZ,SAAdqnB,YAAwBA,UAAY,MACjC,GAAI2H,gBAAev2B,KAAK0E,KAAM1E,KAAK6C,MAAO0E,KAAMqnB,UAAW5uB,KAAKyS,aAEpEyhF,cACTnjE,YACEqjE,aAAgB,SAAU3xC,QAS1B,QAAS2xC,cAAartC,SAAU5iD,MAAOtB,MAAO0E,KAAMkL,YACnC,SAATlL,OAAmBA,KAAO,KAC9B,IAAI8/B,OAAQob,OAAOE,KAAK3iD,KAAMuH,MAAQ1E,MAAM0E,KAAMkL,aAAezS,IAIjE,OAHAqnC,OAAM0f,SAAWA,SACjB1f,MAAMljC,MAAQA,MACdkjC,MAAMxkC,MAAQA,MACPwkC,MAUX,MAxBA+B,WAAUgrD,aAAc3xC,QAqBxB2xC,aAAa3sD,UAAUvb,gBAAkB,SAAU/rB,QAASE,SACxD,MAAOF,SAAQk0F,kBAAkBr0F,KAAMK,UAEpC+zF,cACTrjE,YACEujE,cAAiB,SAAU7xC,QAS3B,QAAS6xC,eAAcvtC,SAAUriD,KAAM7B,MAAO0E,KAAMkL,YACnC,SAATlL,OAAmBA,KAAO,KAC9B,IAAI8/B,OAAQob,OAAOE,KAAK3iD,KAAMuH,MAAQ1E,MAAM0E,KAAMkL,aAAezS,IAIjE,OAHAqnC,OAAM0f,SAAWA,SACjB1f,MAAM3iC,KAAOA,KACb2iC,MAAMxkC,MAAQA,MACPwkC,MAUX,MAxBA+B,WAAUkrD,cAAe7xC,QAqBzB6xC,cAAc7sD,UAAUvb,gBAAkB,SAAU/rB,QAASE,SACzD,MAAOF,SAAQo0F,mBAAmBv0F,KAAMK,UAErCi0F,eACTvjE,YACEyjE,gBACJA,eAAcC,YAAc,EAC5BD,cAAcE,oBAAsB,EACpCF,cAAcG,KAAO,EACrBH,cAAcA,cAAcC,aAAe,cAC3CD,cAAcA,cAAcE,qBAAuB,sBACnDF,cAAcA,cAAcG,MAAQ,MACpC,IAAItC,kBAAoB,SAAU5vC,QAS9B,QAAS4vC,kBAAiBtrC,SAAUhgB,OAAQ5S,KAAM5sB,KAAMkL,YACvC,SAATlL,OAAmBA,KAAO,KAC9B,IAAI8/B,OAAQob,OAAOE,KAAK3iD,KAAMuH,KAAMkL,aAAezS,IAWnD,OAVAqnC,OAAM0f,SAAWA,SACjB1f,MAAMlT,KAAOA,KACS,gBAAX4S,SACPM,MAAM3iC,KAAOqiC,OACbM,MAAM2sD,QAAU,OAGhB3sD,MAAM3iC,KAAO,KACb2iC,MAAM2sD,QAAUjtD,QAEbM,MAUX,MA/BA+B,WAAUipD,iBAAkB5vC,QA4B5B4vC,iBAAiB5qD,UAAUvb,gBAAkB,SAAU/rB,QAASE,SAC5D,MAAOF,SAAQy0F,sBAAsB50F,KAAMK,UAExCgyF,kBACTthE,YACEuhE,mBAAsB,SAAU7vC,QAQhC,QAAS6vC,oBAAmBllE,GAAI+G,KAAM5sB,KAAMkL,YAC3B,SAATlL,OAAmBA,KAAO,KAC9B,IAAI8/B,OAAQob,OAAOE,KAAK3iD,KAAMuH,KAAMkL,aAAezS,IAGnD,OAFAqnC,OAAMja,GAAKA,GACXia,MAAMlT,KAAOA,KACNkT,MAUX,MAtBA+B,WAAUkpD,mBAAoB7vC,QAmB9B6vC,mBAAmB7qD,UAAUvb,gBAAkB,SAAU/rB,QAASE,SAC9D,MAAOF,SAAQ00F,wBAAwB70F,KAAMK,UAE1CiyF,oBACTvhE,YACEwhE,gBAAmB,SAAU9vC,QAQ7B,QAAS8vC,iBAAgBuC,UAAW3gE,KAAM5sB,KAAMkL,YAC5C,GAAI40B,OAAQob,OAAOE,KAAK3iD,KAAMuH,KAAMkL,aAAezS,IAGnD,OAFAqnC,OAAMytD,UAAYA,UAClBztD,MAAMlT,KAAOA,KACNkT,MAUX,MArBA+B,WAAUmpD,gBAAiB9vC,QAkB3B8vC,gBAAgB9qD,UAAUvb,gBAAkB,SAAU/rB,QAASE,SAC3D,MAAOF,SAAQ40F,qBAAqB/0F,KAAMK,UAEvCkyF,iBACTxhE,YACEtD,YAAe,SAAUg1B,QAOzB,QAASh1B,aAAY5qB,MAAO0E,KAAMkL,YACjB,SAATlL,OAAmBA,KAAO,KAC9B,IAAI8/B,OAAQob,OAAOE,KAAK3iD,KAAMuH,KAAMkL,aAAezS,IAEnD,OADAqnC,OAAMxkC,MAAQA,MACPwkC,MAUX,MApBA+B,WAAU3b,YAAag1B,QAiBvBh1B,YAAYga,UAAUvb,gBAAkB,SAAU/rB,QAASE,SACvD,MAAOF,SAAQ60F,iBAAiBh1F,KAAMK,UAEnCotB,aACTsD,YACExE,aAAgB,SAAUk2B,QAQ1B,QAASl2B,cAAa1pB,MAAO0E,KAAM+kB,WAAY7Z,YAC9B,SAATlL,OAAmBA,KAAO,MACX,SAAf+kB,aAAyBA,WAAa,KAC1C,IAAI+a,OAAQob,OAAOE,KAAK3iD,KAAMuH,KAAMkL,aAAezS,IAGnD,OAFAqnC,OAAMxkC,MAAQA,MACdwkC,MAAM/a,WAAaA,WACZ+a,MAUX,MAvBA+B,WAAU7c,aAAck2B,QAoBxBl2B,aAAakb,UAAUvb,gBAAkB,SAAU/rB,QAASE,SACxD,MAAOF,SAAQ80F,kBAAkBj1F,KAAMK,UAEpCksB,cACTwE,YACE4hE,gBAAmB,SAAUlwC,QAS7B,QAASkwC,iBAAgBtqE,UAAWoqE,SAAUC,UAAWnrF,KAAMkL,YACzC,SAAdigF,YAAwBA,UAAY,MAC3B,SAATnrF,OAAmBA,KAAO,KAC9B,IAAI8/B,OAAQob,OAAOE,KAAK3iD,KAAMuH,MAAQkrF,SAASlrF,KAAMkL,aAAezS,IAIpE,OAHAqnC,OAAMhf,UAAYA,UAClBgf,MAAMqrD,UAAYA,UAClBrrD,MAAMorD,SAAWA,SACVprD,MAUX,MAzBA+B,WAAUupD,gBAAiBlwC,QAsB3BkwC,gBAAgBlrD,UAAUvb,gBAAkB,SAAU/rB,QAASE,SAC3D,MAAOF,SAAQ+0F,qBAAqBl1F,KAAMK,UAEvCsyF,iBACT5hE,YACE5D,QAAW,SAAUs1B,QAMrB,QAASt1B,SAAQ9E,UAAW5V,YACxB,GAAI40B,OAAQob,OAAOE,KAAK3iD,KAAMixF,UAAWx+E,aAAezS,IAExD,OADAqnC,OAAMhf,UAAYA,UACXgf,MAUX,MAlBA+B,WAAUjc,QAASs1B,QAenBt1B,QAAQsa,UAAUvb,gBAAkB,SAAU/rB,QAASE,SACnD,MAAOF,SAAQg1F,aAAan1F,KAAMK,UAE/B8sB,SACT4D,YACE2iE,SAAY,SAAUjxC,QAOtB,QAASixC,UAAS7wF,MAAO0E,KAAMkL,YAC3B,GAAI40B,OAAQob,OAAOE,KAAK3iD,KAAMuH,KAAMkL,aAAezS,IAEnD,OADAqnC,OAAMxkC,MAAQA,MACPwkC,MAUX,MAnBA+B,WAAUsqD,SAAUjxC,QAgBpBixC,SAASjsD,UAAUvb,gBAAkB,SAAU/rB,QAASE,SACpD,MAAOF,SAAQi1F,cAAcp1F,KAAMK,UAEhCqzF,UACT3iE,YACE6G,QAAW,WAKX,QAASA,SAAQlzB,KAAM6C,MACN,SAATA,OAAmBA,KAAO,MAC9BvH,KAAK0E,KAAOA,KACZ1E,KAAKuH,KAAOA,KAEhB,MAAOqwB,YAEPrK,aAAgB,SAAUk1B,QAQ1B,QAASl1B,cAAaF,OAAQoJ,WAAYlvB,KAAMkL,YAC/B,SAATlL,OAAmBA,KAAO,KAC9B,IAAI8/B,OAAQob,OAAOE,KAAK3iD,KAAMuH,KAAMkL,aAAezS,IAGnD,OAFAqnC,OAAMha,OAASA,OACfga,MAAM5Q,WAAaA,WACZ4Q,MAmBX,MA/BA+B,WAAU7b,aAAck1B,QAmBxBl1B,aAAaka,UAAUvb,gBAAkB,SAAU/rB,QAASE,SACxD,MAAOF,SAAQk1F,kBAAkBr1F,KAAMK,UAO3CktB,aAAaka,UAAUlS,WAAa,SAAU7wB,KAAMkqB,WAEhD,MADkB,UAAdA,YAAwBA,UAAY,MACjC,GAAI0mE,qBAAoB5wF,KAAM1E,KAAKqtB,OAAQrtB,KAAKy2B,WAAYz2B,KAAKuH,KAAMqnB,UAAW5uB,KAAKyS,aAE3F8a,cACTwD,YACE+hE,mBAAsB,SAAUrwC,QAShC,QAASqwC,oBAAmBxiC,SAAUilC,IAAK1C,IAAKtrF,KAAMkL,YACrC,SAATlL,OAAmBA,KAAO,KAC9B,IAAI8/B,OAAQob,OAAOE,KAAK3iD,KAAMuH,MAAQguF,IAAIhuF,KAAMkL,aAAezS,IAI/D,OAHAqnC,OAAMipB,SAAWA,SACjBjpB,MAAMwrD,IAAMA,IACZxrD,MAAMkuD,IAAMA,IACLluD,MAUX,MAxBA+B,WAAU0pD,mBAAoBrwC,QAqB9BqwC,mBAAmBrrD,UAAUvb,gBAAkB,SAAU/rB,QAASE,SAC9D,MAAOF,SAAQq1F,wBAAwBx1F,KAAMK,UAE1CyyF,oBACT/hE,YACEmhE,aAAgB,SAAUzvC,QAQ1B,QAASyvC,cAAanrC,SAAUriD,KAAM6C,KAAMkL,YAC3B,SAATlL,OAAmBA,KAAO,KAC9B,IAAI8/B,OAAQob,OAAOE,KAAK3iD,KAAMuH,KAAMkL,aAAezS,IAGnD,OAFAqnC,OAAM0f,SAAWA,SACjB1f,MAAM3iC,KAAOA,KACN2iC,MAiBX,MA7BA+B,WAAU8oD,aAAczvC,QAmBxByvC,aAAazqD,UAAUvb,gBAAkB,SAAU/rB,QAASE,SACxD,MAAOF,SAAQs1F,kBAAkBz1F,KAAMK,UAM3C6xF,aAAazqD,UAAUliC,IAAM,SAAU1C,OACnC,MAAO,IAAIyxF,eAAct0F,KAAK+mD,SAAU/mD,KAAK0E,KAAM7B,MAAO,KAAM7C,KAAKyS,aAElEy/E,cACTnhE,YACEohE,YAAe,SAAU1vC,QAQzB,QAAS0vC,aAAYprC,SAAU5iD,MAAOoD,KAAMkL,YAC3B,SAATlL,OAAmBA,KAAO,KAC9B,IAAI8/B,OAAQob,OAAOE,KAAK3iD,KAAMuH,KAAMkL,aAAezS,IAGnD,OAFAqnC,OAAM0f,SAAWA,SACjB1f,MAAMljC,MAAQA,MACPkjC,MAiBX,MA7BA+B,WAAU+oD,YAAa1vC,QAmBvB0vC,YAAY1qD,UAAUvb,gBAAkB,SAAU/rB,QAASE,SACvD,MAAOF,SAAQu1F,iBAAiB11F,KAAMK,UAM1C8xF,YAAY1qD,UAAUliC,IAAM,SAAU1C,OAClC,MAAO,IAAIuxF,cAAap0F,KAAK+mD,SAAU/mD,KAAKmE,MAAOtB,MAAO,KAAM7C,KAAKyS,aAElE0/E,aACTphE,YACElE,iBAAoB,SAAU41B,QAO9B,QAAS51B,kBAAiB8oE,QAASpuF,KAAMkL,YACxB,SAATlL,OAAmBA,KAAO,KAC9B,IAAI8/B,OAAQob,OAAOE,KAAK3iD,KAAMuH,KAAMkL,aAAezS,IAEnD,OADAqnC,OAAMsuD,QAAUA,QACTtuD,MAUX,MApBA+B,WAAUvc,iBAAkB41B,QAiB5B51B,iBAAiB4a,UAAUvb,gBAAkB,SAAU/rB,QAASE,SAC5D,MAAOF,SAAQy1F,sBAAsB51F,KAAMK,UAExCwsB,kBACTkE,YACE9D,gBAAmB,WAMnB,QAASA,iBAAgBqH,IAAKzxB,MAAOkqB,QAClB,SAAXA,SAAqBA,QAAS,GAClC/sB,KAAKs0B,IAAMA,IACXt0B,KAAK6C,MAAQA,MACb7C,KAAK+sB,OAASA,OAElB,MAAOE,oBAEPD,eAAkB,SAAUy1B,QAO5B,QAASz1B,gBAAe2oE,QAASpuF,KAAMkL,YACtB,SAATlL,OAAmBA,KAAO,KAC9B,IAAI8/B,OAAQob,OAAOE,KAAK3iD,KAAMuH,KAAMkL,aAAezS,IAMnD,OALAqnC,OAAMsuD,QAAUA,QAChBtuD,MAAM0pD,UAAY,KACdxpF,OACA8/B,MAAM0pD,UAAYxpF,KAAKwpF,WAEpB1pD,MAUX,MAxBA+B,WAAUpc,eAAgBy1B,QAqB1Bz1B,eAAeya,UAAUvb,gBAAkB,SAAU/rB,QAASE,SAC1D,MAAOF,SAAQ01F,oBAAoB71F,KAAMK,UAEtC2sB,gBACT+D,YACE+kE,UAAa,SAAUrzC,QAMvB,QAASqzC,WAAUtjF,MAAOC,YACtB,GAAI40B,OAAQob,OAAOE,KAAK3iD,KAAMwS,MAAMA,MAAMrQ,OAAS,GAAGoF,KAAMkL,aAAezS,IAE3E,OADAqnC,OAAM70B,MAAQA,MACP60B,MAUX,MAlBA+B,WAAU0sD,UAAWrzC,QAerBqzC,UAAUruD,UAAUvb,gBAAkB,SAAU/rB,QAASE,SACrD,MAAOF,SAAQ41F,eAAe/1F,KAAMK,UAEjCy1F,WACT/kE,YACmBilE,UAAY,GAAI5pE,aAAYunE,WAAWC,MACvC9lE,WAAa,GAAI1B,aAAYunE,WAAWE,OAGxCr9D,WAFkB,GAAIpK,aAAYunE,WAAWG,YAC3B,GAAI1nE,aAAYunE,WAAWI,YACjC,GAAItmE,aAAY,KAAM,OAClCgmE,gBAAkB,GAAIhmE,aAAY,KAAM0K,eACzD3C,eACJA,cAAaC,MAAQ,EACrBD,aAAaygE,QAAU,EACvBzgE,aAAaA,aAAaC,OAAS,QACnCD,aAAaA,aAAaygE,SAAW,SAIrC,IAAInlE,WAAa,WAKb,QAASA,WAAUlC,UAAWnc,YACR,SAAdmc,YAAwBA,UAAY,MACxC5uB,KAAK4uB,UAAYA,UACjB5uB,KAAKyS,WAAaA,WACbmc,YACD5uB,KAAK4uB,cAeb,MANAkC,WAAU2W,UAAU1b,eAAiB,SAAU5rB,QAASE,WAKxDywB,UAAU2W,UAAUwoD,YAAc,SAAUC,UAAY,MAAOlwF,MAAK4uB,UAAU7tB,QAAQmvF,aAAc,GAC7Fp/D,aAEPyF,eAAkB,SAAUksB,QAS5B,QAASlsB,gBAAe7xB,KAAM7B,MAAO0E,KAAMqnB,UAAWnc,YACrC,SAATlL,OAAmBA,KAAO,MACZ,SAAdqnB,YAAwBA,UAAY,KACxC,IAAIyY,OAAQob,OAAOE,KAAK3iD,KAAM4uB,UAAWnc,aAAezS,IAIxD,OAHAqnC,OAAM3iC,KAAOA,KACb2iC,MAAMxkC,MAAQA,MACdwkC,MAAM9/B,KAAOA,MAAQ1E,MAAM0E,KACpB8/B,MAUX,MAzBA+B,WAAU7S,eAAgBksB,QAsB1BlsB,eAAekR,UAAU1b,eAAiB,SAAU5rB,QAASE,SACzD,MAAOF,SAAQ+1F,oBAAoBl2F,KAAMK,UAEtCk2B,gBACTzF,WACEwkE,oBAAuB,SAAU7yC,QAUjC,QAAS6yC,qBAAoB5wF,KAAM2oB,OAAQoJ,WAAYlvB,KAAMqnB,UAAWnc,YACvD,SAATlL,OAAmBA,KAAO,MACZ,SAAdqnB,YAAwBA,UAAY,KACxC,IAAIyY,OAAQob,OAAOE,KAAK3iD,KAAM4uB,UAAWnc,aAAezS,IAKxD,OAJAqnC,OAAM3iC,KAAOA,KACb2iC,MAAMha,OAASA,OACfga,MAAM5Q,WAAaA,WACnB4Q,MAAM9/B,KAAOA,KACN8/B,MAUX,MA3BA+B,WAAUksD,oBAAqB7yC,QAwB/B6yC,oBAAoB7tD,UAAU1b,eAAiB,SAAU5rB,QAASE,SAC9D,MAAOF,SAAQg2F,yBAAyBn2F,KAAMK,UAE3Ci1F,qBACTxkE,WACEkG,oBAAuB,SAAUyrB,QAMjC,QAASzrB,qBAAoB/K,KAAMxZ,YAC/B,GAAI40B,OAAQob,OAAOE,KAAK3iD,KAAM,KAAMyS,aAAezS,IAEnD,OADAqnC,OAAMpb,KAAOA,KACNob,MAUX,MAlBA+B,WAAUpS,oBAAqByrB,QAe/BzrB,oBAAoByQ,UAAU1b,eAAiB,SAAU5rB,QAASE,SAC9D,MAAOF,SAAQi2F,oBAAoBp2F,KAAMK,UAEtC22B,qBACTlG,WACEmG,gBAAmB,SAAUwrB,QAM7B,QAASxrB,iBAAgBp0B,MAAO4P,YAC5B,GAAI40B,OAAQob,OAAOE,KAAK3iD,KAAM,KAAMyS,aAAezS,IAEnD,OADAqnC,OAAMxkC,MAAQA,MACPwkC,MAUX,MAlBA+B,WAAUnS,gBAAiBwrB,QAe3BxrB,gBAAgBwQ,UAAU1b,eAAiB,SAAU5rB,QAASE,SAC1D,MAAOF,SAAQk2F,gBAAgBr2F,KAAMK,UAElC42B,iBACTnG,WACEwlE,kBAAqB,WAKrB,QAASA,mBAAkB/uF,KAAMqnB,WAChB,SAATrnB,OAAmBA,KAAO,MAC9BvH,KAAKuH,KAAOA,KACZvH,KAAK4uB,UAAYA,UACZA,YACD5uB,KAAK4uB,cAQb,MADA0nE,mBAAkB7uD,UAAUwoD,YAAc,SAAUC,UAAY,MAAOlwF,MAAK4uB,UAAU7tB,QAAQmvF,aAAc,GACrGoG,qBAEPC,WAAc,SAAU9zC,QAOxB,QAAS8zC,YAAW7xF,KAAM6C,KAAMqnB,WACf,SAATrnB,OAAmBA,KAAO,MACZ,SAAdqnB,YAAwBA,UAAY,KACxC,IAAIyY,OAAQob,OAAOE,KAAK3iD,KAAMuH,KAAMqnB,YAAc5uB,IAElD,OADAqnC,OAAM3iC,KAAOA,KACN2iC,MAEX,MAbA+B,WAAUmtD,WAAY9zC,QAaf8zC,YACTD,mBACEjoE,YAAe,SAAUo0B,QASzB,QAASp0B,aAAY3pB,KAAM2oB,OAAQC,KAAM/lB,KAAMqnB,WAC9B,SAATrnB,OAAmBA,KAAO,MACZ,SAAdqnB,YAAwBA,UAAY,KACxC,IAAIyY,OAAQob,OAAOE,KAAK3iD,KAAMuH,KAAMqnB,YAAc5uB,IAIlD,OAHAqnC,OAAM3iC,KAAOA,KACb2iC,MAAMha,OAASA,OACfga,MAAM/Z,KAAOA,KACN+Z,MAEX,MAjBA+B,WAAU/a,YAAao0B,QAiBhBp0B,aACTioE,mBACEE,YAAe,SAAU/zC,QAQzB,QAAS+zC,aAAY9xF,KAAM4oB,KAAM/lB,KAAMqnB,WACtB,SAATrnB,OAAmBA,KAAO,MACZ,SAAdqnB,YAAwBA,UAAY,KACxC,IAAIyY,OAAQob,OAAOE,KAAK3iD,KAAMuH,KAAMqnB,YAAc5uB,IAGlD,OAFAqnC,OAAM3iC,KAAOA,KACb2iC,MAAM/Z,KAAOA,KACN+Z,MAEX,MAfA+B,WAAUotD,YAAa/zC,QAehB+zC,aACTF,mBACE9nE,UAAa,SAAUi0B,QAYvB,QAASj0B,WAAU9pB,KAAMmpB,OAAQY,OAAQC,QAAS0Y,kBAAmBzY,QAASC,UAAWnc,YACnE,SAAdmc,YAAwBA,UAAY,KACxC,IAAIyY,OAAQob,OAAOE,KAAK3iD,KAAM4uB,UAAWnc,aAAezS,IAOxD,OANAqnC,OAAM3iC,KAAOA,KACb2iC,MAAMxZ,OAASA,OACfwZ,MAAM5Y,OAASA,OACf4Y,MAAM3Y,QAAUA,QAChB2Y,MAAMD,kBAAoBA,kBAC1BC,MAAM1Y,QAAUA,QACT0Y,MAUX,MA9BA+B,WAAU5a,UAAWi0B,QA2BrBj0B,UAAUiZ,UAAU1b,eAAiB,SAAU5rB,QAASE,SACpD,MAAOF,SAAQs2F,sBAAsBz2F,KAAMK,UAExCmuB,WACTsC,WACE4lE,OAAU,SAAUj0C,QAQpB,QAASi0C,QAAOruE,UAAWoqE,SAAUC,UAAWjgF,YAC1B,SAAdigF,YAAwBA,aAC5B,IAAIrrD,OAAQob,OAAOE,KAAK3iD,KAAM,KAAMyS,aAAezS,IAInD,OAHAqnC,OAAMhf,UAAYA,UAClBgf,MAAMorD,SAAWA,SACjBprD,MAAMqrD,UAAYA,UACXrrD,MAUX,MAvBA+B,WAAUstD,OAAQj0C,QAoBlBi0C,OAAOjvD,UAAU1b,eAAiB,SAAU5rB,QAASE,SACjD,MAAOF,SAAQw2F,YAAY32F,KAAMK,UAE9Bq2F,QACT5lE,WACE8lE,aAAgB,SAAUn0C,QAO1B,QAASm0C,cAAaC,UAAWC,WAAYrkF,YACzC,GAAI40B,OAAQob,OAAOE,KAAK3iD,KAAM,KAAMyS,aAAezS,IAGnD,OAFAqnC,OAAMwvD,UAAYA,UAClBxvD,MAAMyvD,WAAaA,WACZzvD,MAUX,MApBA+B,WAAUwtD,aAAcn0C,QAiBxBm0C,aAAanvD,UAAU1b,eAAiB,SAAU5rB,QAASE,SACvD,MAAOF,SAAQ42F,kBAAkB/2F,KAAMK,UAEpCu2F,cACT9lE,WACEkmE,UAAa,SAAUv0C,QAMvB,QAASu0C,WAAUzzF,MAAOkP,YACtB,GAAI40B,OAAQob,OAAOE,KAAK3iD,KAAM,KAAMyS,aAAezS,IAEnD,OADAqnC,OAAM9jC,MAAQA,MACP8jC,MAUX,MAlBA+B,WAAU4tD,UAAWv0C,QAerBu0C,UAAUvvD,UAAU1b,eAAiB,SAAU5rB,QAASE,SACpD,MAAOF,SAAQ82F,eAAej3F,KAAMK,UAEjC22F,WACTlmE,WACEomE,iBAAoB,WACpB,QAASA,qBAsQT,MA/PAA,kBAAiBzvD,UAAU0vD,cAAgB,SAAUlrE,KAAM5rB,SAAW,MAAO4rB,OAM7EirE,iBAAiBzvD,UAAU2vD,cAAgB,SAAUxrE,KAAMvrB,SAAW,MAAOurB,OAM7EsrE,iBAAiBzvD,UAAUwsD,iBAAmB,SAAUzzF,IAAKH,SAAW,MAAOL,MAAKm3F,cAAc32F,IAAKH,UAMvG62F,iBAAiBzvD,UAAU0sD,kBAAoB,SAAUloE,KAAM5rB,SAC3D,MAAOL,MAAKm3F,cAAc,GAAIjD,cAAajoE,KAAKvnB,KAAMunB,KAAKppB,MAAMqpB,gBAAgBlsB,KAAMK,SAAU4rB,KAAK1kB,KAAM0kB,KAAKxZ,YAAapS,UAOlI62F,iBAAiBzvD,UAAU4sD,kBAAoB,SAAUpoE,KAAM5rB,SAC3D,MAAOL,MAAKm3F,cAAc,GAAI/C,cAAanoE,KAAK86B,SAAS76B,gBAAgBlsB,KAAMK,SAAU4rB,KAAK9nB,MAAM+nB,gBAAgBlsB,KAAMK,SAAU4rB,KAAKppB,MAAMqpB,gBAAgBlsB,KAAMK,SAAU4rB,KAAK1kB,KAAM0kB,KAAKxZ,YAAapS,UAOhN62F,iBAAiBzvD,UAAU8sD,mBAAqB,SAAUtoE,KAAM5rB,SAC5D,MAAOL,MAAKm3F,cAAc,GAAI7C,eAAcroE,KAAK86B,SAAS76B,gBAAgBlsB,KAAMK,SAAU4rB,KAAKvnB,KAAMunB,KAAKppB,MAAMqpB,gBAAgBlsB,KAAMK,SAAU4rB,KAAK1kB,KAAM0kB,KAAKxZ,YAAapS,UAOjL62F,iBAAiBzvD,UAAUmtD,sBAAwB,SAAUp0F,IAAKH,SAC9D,GAAqB0mC,QAASvmC,IAAIwzF,SAAWxzF,IAAIkE,IACjD,OAAO1E,MAAKm3F,cAAc,GAAI9E,kBAAiB7xF,IAAIumD,SAAS76B,gBAAgBlsB,KAAMK,SAAU0mC,OAAQ/mC,KAAKq3F,oBAAoB72F,IAAI2zB,KAAM9zB,SAAUG,IAAI+G,KAAM/G,IAAIiS,YAAapS,UAOhL62F,iBAAiBzvD,UAAUotD,wBAA0B,SAAUr0F,IAAKH,SAChE,MAAOL,MAAKm3F,cAAc,GAAI7E,oBAAmB9xF,IAAI4sB,GAAGlB,gBAAgBlsB,KAAMK,SAAUL,KAAKq3F,oBAAoB72F,IAAI2zB,KAAM9zB,SAAUG,IAAI+G,KAAM/G,IAAIiS,YAAapS,UAOpK62F,iBAAiBzvD,UAAUstD,qBAAuB,SAAUv0F,IAAKH,SAC7D,MAAOL,MAAKm3F,cAAc,GAAI5E,iBAAgB/xF,IAAIs0F,UAAU5oE,gBAAgBlsB,KAAMK,SAAUL,KAAKq3F,oBAAoB72F,IAAI2zB,KAAM9zB,SAAUG,IAAI+G,KAAM/G,IAAIiS,YAAapS,UAOxK62F,iBAAiBzvD,UAAUutD,iBAAmB,SAAUx0F,IAAKH,SAAW,MAAOL,MAAKm3F,cAAc32F,IAAKH,UAMvG62F,iBAAiBzvD,UAAUwtD,kBAAoB,SAAUz0F,IAAKH,SAC1D,MAAOL,MAAKm3F,cAAc32F,IAAKH,UAOnC62F,iBAAiBzvD,UAAUytD,qBAAuB,SAAU10F,IAAKH,SAC7D,MAAOL,MAAKm3F,cAAc,GAAIxE,iBAAgBnyF,IAAI6nB,UAAU6D,gBAAgBlsB,KAAMK,SAAUG,IAAIiyF,SAASvmE,gBAAgBlsB,KAAMK,SAAUG,IAAIkyF,UAAUxmE,gBAAgBlsB,KAAMK,SAAUG,IAAI+G,KAAM/G,IAAIiS,YAAapS,UAOtN62F,iBAAiBzvD,UAAU0tD,aAAe,SAAU30F,IAAKH,SACrD,MAAOL,MAAKm3F,cAAc,GAAIhqE,SAAQ3sB,IAAI6nB,UAAU6D,gBAAgBlsB,KAAMK,SAAUG,IAAIiS,YAAapS,UAOzG62F,iBAAiBzvD,UAAU2tD,cAAgB,SAAU50F,IAAKH,SACtD,MAAOL,MAAKm3F,cAAc,GAAIzD,UAASlzF,IAAIqC,MAAMqpB,gBAAgBlsB,KAAMK,SAAUG,IAAI+G,KAAM/G,IAAIiS,YAAapS,UAOhH62F,iBAAiBzvD,UAAU4tD,kBAAoB,SAAU70F,IAAKH,SAC1D,MAAOL,MAAKm3F,cAAc,GAAI5pE,cAAa/sB,IAAI6sB,OAAQrtB,KAAKyrB,mBAAmBjrB,IAAIi2B,WAAYp2B,SAAUG,IAAI+G,KAAM/G,IAAIiS,YAAapS,UAOxI62F,iBAAiBzvD,UAAU+tD,wBAA0B,SAAUh1F,IAAKH,SAChE,MAAOL,MAAKm3F,cAAc,GAAIrE,oBAAmBtyF,IAAI8vD,SAAU9vD,IAAI+0F,IAAIrpE,gBAAgBlsB,KAAMK,SAAUG,IAAIqyF,IAAI3mE,gBAAgBlsB,KAAMK,SAAUG,IAAI+G,KAAM/G,IAAIiS,YAAapS,UAO9K62F,iBAAiBzvD,UAAUguD,kBAAoB,SAAUj1F,IAAKH,SAC1D,MAAOL,MAAKm3F,cAAc,GAAIjF,cAAa1xF,IAAIumD,SAAS76B,gBAAgBlsB,KAAMK,SAAUG,IAAIkE,KAAMlE,IAAI+G,KAAM/G,IAAIiS,YAAapS,UAOjI62F,iBAAiBzvD,UAAUiuD,iBAAmB,SAAUl1F,IAAKH,SACzD,MAAOL,MAAKm3F,cAAc,GAAIhF,aAAY3xF,IAAIumD,SAAS76B,gBAAgBlsB,KAAMK,SAAUG,IAAI2D,MAAM+nB,gBAAgBlsB,KAAMK,SAAUG,IAAI+G,KAAM/G,IAAIiS,YAAapS,UAOhK62F,iBAAiBzvD,UAAUmuD,sBAAwB,SAAUp1F,IAAKH,SAC9D,MAAOL,MAAKm3F,cAAc,GAAItqE,kBAAiB7sB,KAAKq3F,oBAAoB72F,IAAIm1F,QAASt1F,SAAUG,IAAI+G,KAAM/G,IAAIiS,YAAapS,UAO9H62F,iBAAiBzvD,UAAUouD,oBAAsB,SAAUr1F,IAAKH,SAC5D,GAAIgnC,OAAQrnC,KACS21F,QAAUn1F,IAAIm1F,QAAQngF,IAAI,SAAU8E,OAAS,MAAO,IAAI2S,iBAAgB3S,MAAMga,IAAKha,MAAMzX,MAAMqpB,gBAAgBmb,MAAOhnC,SAAUia,MAAMyS,UACtIuqE,QAAU,GAAIxG,SAAQtwF,IAAIuwF,UAC/C,OAAO/wF,MAAKm3F,cAAc,GAAInqE,gBAAe2oE,QAAS2B,QAAS92F,IAAIiS,YAAapS,UAOpF62F,iBAAiBzvD,UAAUsuD,eAAiB,SAAUv1F,IAAKH,SACvD,MAAOL,MAAKm3F,cAAc,GAAIrB,WAAU91F,KAAKq3F,oBAAoB72F,IAAIgS,MAAOnS,SAAUG,IAAIiS,YAAapS,UAO3G62F,iBAAiBzvD,UAAU4vD,oBAAsB,SAAUt/D,MAAO13B,SAC9D,GAAIgnC,OAAQrnC,IACZ,OAAO+3B,OAAMviB,IAAI,SAAUyW,MAAQ,MAAOA,MAAKC,gBAAgBmb,MAAOhnC,YAO1E62F,iBAAiBzvD,UAAUyuD,oBAAsB,SAAUtqE,KAAMvrB,SAC7D,MAAOL,MAAKo3F,cAAc,GAAI7gE,gBAAe3K,KAAKlnB,KAAMknB,KAAK/oB,MAAMqpB,gBAAgBlsB,KAAMK,SAAUurB,KAAKrkB,KAAMqkB,KAAKgD,UAAWhD,KAAKnZ,YAAapS,UAOpJ62F,iBAAiBzvD,UAAU0uD,yBAA2B,SAAUvqE,KAAMvrB,SAClE,MAAOL,MAAKo3F,cAAc,GAAI9B,qBAAoB1pE,KAAKlnB,KAAMknB,KAAKyB,OAAQrtB,KAAKyrB,mBAAmBG,KAAK6K,WAAYp2B,SAAUurB,KAAKrkB,KAAMqkB,KAAKgD,UAAWhD,KAAKnZ,YAAapS,UAO9K62F,iBAAiBzvD,UAAU2uD,oBAAsB,SAAUxqE,KAAMvrB,SAC7D,MAAOL,MAAKo3F,cAAc,GAAIpgE,qBAAoBpL,KAAKK,KAAKC,gBAAgBlsB,KAAMK,SAAUurB,KAAKnZ,YAAapS,UAOlH62F,iBAAiBzvD,UAAU4uD,gBAAkB,SAAUzqE,KAAMvrB,SACzD,MAAOL,MAAKo3F,cAAc,GAAIngE,iBAAgBrL,KAAK/oB,MAAMqpB,gBAAgBlsB,KAAMK,SAAUurB,KAAKnZ,YAAapS,UAO/G62F,iBAAiBzvD,UAAUgvD,sBAAwB,SAAU7qE,KAAMvrB,SAC/D,GAAIgnC,OAAQrnC,KACS6tB,OAASjC,KAAKiC,OAAO3B,gBAAgBlsB,KAAMK,SAC3CquB,QAAU9C,KAAK8C,QAAQlZ,IAAI,SAAUqxB,QAAU,MAAO,IAAI2vD,aAAY3vD,OAAOniC,KAAM2iC,MAAM5b,mBAAmBob,OAAOvZ,KAAMjtB,SAAUwmC,OAAOt/B,KAAMs/B,OAAOjY,aACvJ2oE,WAAa3rE,KAAKwb,mBACnC,GAAI/Y,aAAYzC,KAAKwb,kBAAkB1iC,KAAMknB,KAAKwb,kBAAkB/Z,OAAQrtB,KAAKyrB,mBAAmBG,KAAKwb,kBAAkB9Z,KAAMjtB,SAAUurB,KAAKwb,kBAAkB7/B,KAAMqkB,KAAKwb,kBAAkBxY,WAC9KD,QAAU/C,KAAK+C,QAAQnZ,IAAI,SAAUuxB,QAAU,MAAO,IAAI1Y,aAAY0Y,OAAOriC,KAAMqiC,OAAO1Z,OAAQga,MAAM5b,mBAAmBsb,OAAOzZ,KAAMjtB,SAAU0mC,OAAOx/B,KAAMw/B,OAAOnY,YAC3L,OAAO5uB,MAAKo3F,cAAc,GAAI5oE,WAAU5C,KAAKlnB,KAAMmpB,OAAQjC,KAAK6C,OAAQC,QAAS6oE,WAAY5oE,QAAS/C,KAAKgD,UAAWhD,KAAKnZ,YAAapS,UAO5I62F,iBAAiBzvD,UAAUkvD,YAAc,SAAU/qE,KAAMvrB,SACrD,MAAOL,MAAKo3F,cAAc,GAAIV,QAAO9qE,KAAKvD,UAAU6D,gBAAgBlsB,KAAMK,SAAUL,KAAKyrB,mBAAmBG,KAAK6mE,SAAUpyF,SAAUL,KAAKyrB,mBAAmBG,KAAK8mE,UAAWryF,SAAUurB,KAAKnZ,YAAapS,UAO7M62F,iBAAiBzvD,UAAUsvD,kBAAoB,SAAUnrE,KAAMvrB,SAC3D,MAAOL,MAAKo3F,cAAc,GAAIR,cAAa52F,KAAKyrB,mBAAmBG,KAAKirE,UAAWx2F,SAAUL,KAAKyrB,mBAAmBG,KAAKkrE,WAAYz2F,SAAUurB,KAAKnZ,YAAapS,UAOtK62F,iBAAiBzvD,UAAUwvD,eAAiB,SAAUrrE,KAAMvrB,SACxD,MAAOL,MAAKo3F,cAAc,GAAIJ,WAAUprE,KAAKroB,MAAM2oB,gBAAgBlsB,KAAMK,SAAUurB,KAAKnZ,YAAapS,UAOzG62F,iBAAiBzvD,UAAU+vD,iBAAmB,SAAU5rE,KAAMvrB,SAC1D,MAAOL,MAAKo3F,cAAcxrE,KAAMvrB,UAOpC62F,iBAAiBzvD,UAAUhc,mBAAqB,SAAUF,MAAOlrB,SAC7D,GAAIgnC,OAAQrnC,IACZ,OAAOurB,OAAM/V,IAAI,SAAUoW,MAAQ,MAAOA,MAAKG,eAAesb,MAAOhnC,YAElE62F,oBAEPO,sBAAyB,WACzB,QAASA,0BAuRT,MAhRAA,uBAAsBhwD,UAAUwsD,iBAAmB,SAAUzzF,IAAKH,SAAW,MAAOG,MAMpFi3F,sBAAsBhwD,UAAU0sD,kBAAoB,SAAUloE,KAAM5rB,SAEhE,MADA4rB,MAAKppB,MAAMqpB,gBAAgBlsB,KAAMK,SAC1B4rB,MAOXwrE,sBAAsBhwD,UAAU4sD,kBAAoB,SAAUpoE,KAAM5rB,SAIhE,MAHA4rB,MAAK86B,SAAS76B,gBAAgBlsB,KAAMK,SACpC4rB,KAAK9nB,MAAM+nB,gBAAgBlsB,KAAMK,SACjC4rB,KAAKppB,MAAMqpB,gBAAgBlsB,KAAMK,SAC1B4rB,MAOXwrE,sBAAsBhwD,UAAU8sD,mBAAqB,SAAUtoE,KAAM5rB,SAGjE,MAFA4rB,MAAK86B,SAAS76B,gBAAgBlsB,KAAMK,SACpC4rB,KAAKppB,MAAMqpB,gBAAgBlsB,KAAMK,SAC1B4rB,MAOXwrE,sBAAsBhwD,UAAUmtD,sBAAwB,SAAUp0F,IAAKH,SAGnE,MAFAG,KAAIumD,SAAS76B,gBAAgBlsB,KAAMK,SACnCL,KAAKq3F,oBAAoB72F,IAAI2zB,KAAM9zB,SAC5BG,KAOXi3F,sBAAsBhwD,UAAUotD,wBAA0B,SAAUr0F,IAAKH,SAGrE,MAFAG,KAAI4sB,GAAGlB,gBAAgBlsB,KAAMK,SAC7BL,KAAKq3F,oBAAoB72F,IAAI2zB,KAAM9zB,SAC5BG,KAOXi3F,sBAAsBhwD,UAAUstD,qBAAuB,SAAUv0F,IAAKH,SAGlE,MAFAG,KAAIs0F,UAAU5oE,gBAAgBlsB,KAAMK,SACpCL,KAAKq3F,oBAAoB72F,IAAI2zB,KAAM9zB,SAC5BG,KAOXi3F,sBAAsBhwD,UAAUutD,iBAAmB,SAAUx0F,IAAKH,SAAW,MAAOG,MAMpFi3F,sBAAsBhwD,UAAUwtD,kBAAoB,SAAUz0F,IAAKH,SAAW,MAAOG,MAMrFi3F,sBAAsBhwD,UAAUytD,qBAAuB,SAAU10F,IAAKH,SAIlE,MAHAG,KAAI6nB,UAAU6D,gBAAgBlsB,KAAMK,SACpCG,IAAIiyF,SAASvmE,gBAAgBlsB,KAAMK,SACnCG,IAAIkyF,UAAUxmE,gBAAgBlsB,KAAMK,SAC7BG,KAOXi3F,sBAAsBhwD,UAAU0tD,aAAe,SAAU30F,IAAKH,SAE1D,MADAG,KAAI6nB,UAAU6D,gBAAgBlsB,KAAMK,SAC7BG,KAOXi3F,sBAAsBhwD,UAAU2tD,cAAgB,SAAU50F,IAAKH,SAE3D,MADAG,KAAIqC,MAAMqpB,gBAAgBlsB,KAAMK,SACzBG,KAOXi3F,sBAAsBhwD,UAAU4tD,kBAAoB,SAAU70F,IAAKH,SAE/D,MADAL,MAAKyrB,mBAAmBjrB,IAAIi2B,WAAYp2B,SACjCG,KAOXi3F,sBAAsBhwD,UAAU+tD,wBAA0B,SAAUh1F,IAAKH,SAGrE,MAFAG,KAAI+0F,IAAIrpE,gBAAgBlsB,KAAMK,SAC9BG,IAAIqyF,IAAI3mE,gBAAgBlsB,KAAMK,SACvBG,KAOXi3F,sBAAsBhwD,UAAUguD,kBAAoB,SAAUj1F,IAAKH,SAE/D,MADAG,KAAIumD,SAAS76B,gBAAgBlsB,KAAMK,SAC5BG,KAOXi3F,sBAAsBhwD,UAAUiuD,iBAAmB,SAAUl1F,IAAKH,SAG9D,MAFAG,KAAIumD,SAAS76B,gBAAgBlsB,KAAMK,SACnCG,IAAI2D,MAAM+nB,gBAAgBlsB,KAAMK,SACzBG,KAOXi3F,sBAAsBhwD,UAAUmuD,sBAAwB,SAAUp1F,IAAKH,SAEnE,MADAL,MAAKq3F,oBAAoB72F,IAAIm1F,QAASt1F,SAC/BG,KAOXi3F,sBAAsBhwD,UAAUouD,oBAAsB,SAAUr1F,IAAKH,SACjE,GAAIgnC,OAAQrnC,IAEZ,OADAQ,KAAIm1F,QAAQl1F,QAAQ,SAAU6Z,OAAS,MAAOA,OAAMzX,MAAMqpB,gBAAgBmb,MAAOhnC,WAC1EG,KAOXi3F,sBAAsBhwD,UAAUsuD,eAAiB,SAAUv1F,IAAKH,SAC5DL,KAAKq3F,oBAAoB72F,IAAIgS,MAAOnS,UAOxCo3F,sBAAsBhwD,UAAU4vD,oBAAsB,SAAUt/D,MAAO13B,SACnE,GAAIgnC,OAAQrnC,IACZ+3B,OAAMt3B,QAAQ,SAAUwrB,MAAQ,MAAOA,MAAKC,gBAAgBmb,MAAOhnC,YAOvEo3F,sBAAsBhwD,UAAUyuD,oBAAsB,SAAUtqE,KAAMvrB,SAElE,MADAurB,MAAK/oB,MAAMqpB,gBAAgBlsB,KAAMK,SAC1BurB,MAOX6rE,sBAAsBhwD,UAAU0uD,yBAA2B,SAAUvqE,KAAMvrB,SAEvE,MADAL,MAAKyrB,mBAAmBG,KAAK6K,WAAYp2B,SAClCurB,MAOX6rE,sBAAsBhwD,UAAU2uD,oBAAsB,SAAUxqE,KAAMvrB,SAElE,MADAurB,MAAKK,KAAKC,gBAAgBlsB,KAAMK,SACzBurB,MAOX6rE,sBAAsBhwD,UAAU4uD,gBAAkB,SAAUzqE,KAAMvrB,SAE9D,MADAurB,MAAK/oB,MAAMqpB,gBAAgBlsB,KAAMK,SAC1BurB,MAOX6rE,sBAAsBhwD,UAAUgvD,sBAAwB,SAAU7qE,KAAMvrB,SACpE,GAAIgnC,OAAQrnC,IAOZ,OANA4rB,MAAKiC,OAAO3B,gBAAgBlsB,KAAMK;AAClCurB,KAAK8C,QAAQjuB,QAAQ,SAAUomC,QAAU,MAAOQ,OAAM5b,mBAAmBob,OAAOvZ,KAAMjtB,WAClFurB,KAAKwb,mBACLpnC,KAAKyrB,mBAAmBG,KAAKwb,kBAAkB9Z,KAAMjtB,SAEzDurB,KAAK+C,QAAQluB,QAAQ,SAAUsmC,QAAU,MAAOM,OAAM5b,mBAAmBsb,OAAOzZ,KAAMjtB,WAC/EurB,MAOX6rE,sBAAsBhwD,UAAUkvD,YAAc,SAAU/qE,KAAMvrB,SAI1D,MAHAurB,MAAKvD,UAAU6D,gBAAgBlsB,KAAMK,SACrCL,KAAKyrB,mBAAmBG,KAAK6mE,SAAUpyF,SACvCL,KAAKyrB,mBAAmBG,KAAK8mE,UAAWryF,SACjCurB,MAOX6rE,sBAAsBhwD,UAAUsvD,kBAAoB,SAAUnrE,KAAMvrB,SAGhE,MAFAL,MAAKyrB,mBAAmBG,KAAKirE,UAAWx2F,SACxCL,KAAKyrB,mBAAmBG,KAAKkrE,WAAYz2F,SAClCurB,MAOX6rE,sBAAsBhwD,UAAUwvD,eAAiB,SAAUrrE,KAAMvrB,SAE7D,MADAurB,MAAKroB,MAAM2oB,gBAAgBlsB,KAAMK,SAC1BurB,MAOX6rE,sBAAsBhwD,UAAU+vD,iBAAmB,SAAU5rE,KAAMvrB,SAAW,MAAOurB,OAMrF6rE,sBAAsBhwD,UAAUhc,mBAAqB,SAAUF,MAAOlrB,SAClE,GAAIgnC,OAAQrnC,IACZurB,OAAM9qB,QAAQ,SAAUmrB,MAAQ,MAAOA,MAAKG,eAAesb,MAAOhnC,YAE/Do3F,yBAWPjsE,gBAAmB,SAAUi3B,QAE7B,QAASj3B,mBACL,GAAI6b,OAAQob,OAAO1lC,MAAM/c,KAAMkC,YAAclC,IAE7C,OADAqnC,OAAM3b,SAAW,GAAIjK,KACd4lB,MA6BX,MAjCA+B,WAAU5d,gBAAiBi3B,QAW3Bj3B,gBAAgBic,UAAU0uD,yBAA2B,SAAUvqE,KAAMvrB,SAEjE,MAAOurB,OAOXJ,gBAAgBic,UAAUgvD,sBAAwB,SAAU7qE,KAAMvrB,SAE9D,MAAOurB,OAOXJ,gBAAgBic,UAAUwsD,iBAAmB,SAAUzzF,IAAKH,SAExD,MADAL,MAAK0rB,SAAS8P,IAAIh7B,IAAIkE,MACf,MAEJ8mB,iBACTisE,uBAyBE3rE,4BAA+B,SAAU22B,QAKzC,QAAS32B,6BAA4BrZ,YACjC,GAAI40B,OAAQob,OAAOE,KAAK3iD,OAASA,IAEjC,OADAqnC,OAAM50B,WAAaA,WACZ40B,MAqCX,MA5CA+B,WAAUtd,4BAA6B22B,QAavC32B,4BAA4B2b,UAAUiwD,OAAS,SAAU9zF,KACrD,GAAqB+zF,OAAQ9zF,OAAOwD,OAAOzD,IAAI0lC,YAAY7B,UAC3D,KAAK,GAAqBhW,QAAQ7tB,KAC9B+zF,MAAMlmE,MAAQ7tB,IAAI6tB,KAEtB,OAAOkmE,QAOX7rE,4BAA4B2b,UAAU0vD,cAAgB,SAAUlrE,KAAM5rB,SAKlE,MAJK4rB,MAAKxZ,aACNwZ,KAAOjsB,KAAK03F,OAAOzrE,MACnBA,KAAKxZ,WAAazS,KAAKyS,YAEpBwZ,MAOXH,4BAA4B2b,UAAU2vD,cAAgB,SAAUxrE,KAAMvrB,SAKlE,MAJKurB,MAAKnZ,aACNmZ,KAAO5rB,KAAK03F,OAAO9rE,MACnBA,KAAKnZ,WAAazS,KAAKyS,YAEpBmZ,MAEJE,6BACTorE,kBAmHmBU,YAAc,WAU/B9oE,2BAA8B,WAC9B,QAASA,+BA4CT,MArCAA,4BAA2B2Y,UAAUzkC,WAAa,SAAUolB,IAAK7gB,MAC7D,GAAI8/B,OAAQrnC,IACZ,OAAO4sB,YAAWxE,IAAI5S,IAAI,SAAU3S,OAAS,MAAOD,YAAWC,MAAOwkC,MAAO,QAAW9/B,OAO5FunB,2BAA2B2Y,UAAUvkC,eAAiB,SAAUsS,IAAKjO,MACjE,GAAI8/B,OAAQrnC,KACS21F,WACAkC,UAAY,GAAIp2E,KAAIjM,KAAOA,IAAIoiF,aAIpD,OAHA/zF,QAAOwwB,KAAK7e,KAAK/U,QAAQ,SAAU6zB,KAC/BqhE,QAAQh1F,KAAK,GAAIssB,iBAAgBqH,IAAK1xB,WAAW4S,IAAI8e,KAAM+S,MAAO,MAAOwwD,UAAU3yF,IAAIovB,SAEpF,GAAItH,gBAAe2oE,QAASpuF,OAOvCunB,2BAA2B2Y,UAAUtkC,eAAiB,SAAUN,MAAO0E,MAAQ,MAAOimB,SAAQ3qB,MAAO0E,OAMrGunB,2BAA2B2Y,UAAUrkC,WAAa,SAAUP,MAAO0E,MAC/D,MAAI1E,iBAAiBkuB,YACVluB,MAGAwpB,YAAaxnB,UAAWhC,SAGhCisB,8BAMPgpE,2BAA8B,WAI9B,QAASA,4BAA2B7xF,UAChCjG,KAAKiG,SAAWA,SAEpB,MAAO6xF,+BAEPC,sBAAyB,WAMzB,QAASA,uBAAsBthE,WAAYuhE,mBAAoBt5D,cAC3D1+B,KAAKy2B,WAAaA,WAClBz2B,KAAKg4F,mBAAqBA,mBAC1Bh4F,KAAK0+B,aAAeA,aAExB,MAAOq5D,0BAEPryD,iBAAoB,WACpB,QAASA,qBAoCT,MA7BAA,kBAAiB+B,UAAUwwD,QAAU,SAAU53D,aAAcs1C,gBACzD,GAAqBljE,YAAa/C,eAAe,WAAY2wB,aAAa94B,MACrDmW,QACAw6E,+BACAn8D,wBAA0BsE,aAAauB,iBAAiB9F,gBAAgBtmB,IAAI,SAAUwmB,gBAKvG,MAJIqE,cAAaikB,oBAAoBmhB,KAAK,SAAUx8D,IAAM,MAAOA,IAAGpE,YAAcm3B,eAAeypB,iBAC7FyyC,4BAA4Bv3F,MAAOkE,UAAWm3B,eAAeC,mBAEjEve,KAAK/c,KAAK,GAAIm3F,4BAA2B97D,eAAeypB,iBAC/C5gD,UAAWm3B,eAAeC,oBAElBhO,QAAU,GAAIkqE,kBAAiB93D,aAActE,wBAAyBm8D,4BAA6BzlF,YACnG2lF,eAAiB,GAAI1iB,0BAAyBr1C,aAAcs1C,eAAgBljE,WACjG2lF,gBAAenxF,QAAQxG,QAAQ,SAAU8c,UAAY,MAAO0Q,SAAQg3B,YAAY1nC,WAChF,IAAqB86E,eAAgBpqE,QAAQotC,QACxB28B,mBAAqBrzF,eAAe07B,aAAa94B,MAAQ,YACzD+wF,oBAAsBnsE,SAAS6rE,oBAC/CzyF,IAAI8mB,WAAWxQ,iBAAiBmf,YAAYq0C,kBAC5Cp3C,aAAa9L,SAASksE,cAAc3zF,MAAO2nB,WAAWgU,aAAa94B,OAAQilB,WAAW3Q,iBAAiBmf,YAAYq0C,kBAAmB7iD,WAAW6T,aAAa94B,QAASwoF,aAAaC,UACpLz6D,WAAW,MAAOC,aAAaC,QACflK,OAAS8sE,cAAeC,oBAC7C,IAAIj4D,aAAap3B,GAAI,CACjB,GAAqBsvF,qBAAsBlsE,WAAWxQ,iBAAiBmf,YAAYw0C,0BAC9EzhD,QAAQP,QAAQ6S,aAAap3B,IAAKkjB,SAAS6rE,sBAC3ChqE,QACLzC,OAAM5qB,KAAK43F,qBAEf,MAAO,IAAIR,uBAAsBxsE,MAAOysE,mBAAoBt6E,OAEzDgoB,mBAEXA,kBAAiBulB,aACX1jD,KAAMiE,qBAKZk6B,iBAAiBwlB,eAAiB,WAAc,SAChD,IAAIitC,kBAAoB,WAOpB,QAASA,kBAAiBK,cAAeC,yBAA0BC,6BAA8B5lB,aAC7F9yE,KAAKw4F,cAAgBA,cACrBx4F,KAAKy4F,yBAA2BA,yBAChCz4F,KAAK04F,6BAA+BA,6BACpC14F,KAAK8yE,YAAcA,YACnB9yE,KAAKyuB,UACLzuB,KAAK0uB,WACL1uB,KAAK2uB,WACL3uB,KAAKuuB,aACLvuB,KAAK24F,WAAa,GAAIp6E,KACtBve,KAAK44F,WACL54F,KAAK64F,WAAa,GAAIt6E,KACtBve,KAAK84F,gBACL94F,KAAK+4F,iBAoJT,MA9IAZ,kBAAiB1wD,UAAUwd,YAAc,SAAU7lC,kBAC/C,GAAIioB,OAAQrnC,KACSg5F,yBAA2B55E,iBAAiBzW,UAAU6M,IAAI,SAAU+H,UAAY,MAAO8pB,OAAM4xD,kBAAkB17E,YAC/G4D,SAAW,IAAM3a,UAAU4Y,iBAAiB3Y,OAAS,IAAMzG,KAAK64F,WAAW7X,KAC3EkY,SAAWl5F,KAAKm5F,wBAAwBh4E,SAAU/B,iBAAkB45E,yBAA0B55E,iBAAiBnB,cAAemB,iBAAiBrB,MACpK,IAAIqB,iBAAiB3X,eAAe1G,QAAQd,cAAcopB,gBAAgBE,cAAe,EAAI,CACzF,GAAqB6vE,iBAAkBF,SAAS9G,WAAW,iBACtDhzE,kBAAiBrB,QAClBq7E,gBAAkBp5F,KAAK24F,WAAWxzF,IAAI+zF,SAASx0F,MAAMyoC,IAAIisD,kBAE7Dp5F,KAAK+4F,cAAcp4F,KAAKy4F,gBAAgBprE,UAE5ChuB,KAAK44F,QAAQj4F,KAAKye,iBAAiB3Y,OACnCzG,KAAK64F,WAAWtzF,IAAImB,eAAe0Y,iBAAiB3Y,OAAQyyF,WAKhEf,iBAAiB1wD,UAAU4zB,MAAQ,WAC/B,GAAIh0B,OAAQrnC,KACSq5F,eAAiBr5F,KAAK44F,QAAQpjF,IAAI,SAAU/O,OAC7D,GAAqByxB,cAAemP,MAAMwxD,WAAW1zF,IAAIuB,eAAeD,OACxE,OAAO,IAAIiwF,QAAO4C,iBAAiB7yF,MAAMusF,UAAUjkE,wBAAwBtoB,SAAU,GAAIwwB,iBAAgBiB,kBAExFvJ,SACjB,GAAIN,aAAY,oBAAsBruB,KAAK84F,aAAapvF,OAAO,GAAIutB,iBAAgBj3B,KAAK64F,WAAW1zF,IAAInF,KAAKw4F,cAAcjxF,KAAK1C,aAAc2nB,WAAWxsB,KAAKw4F,cAAcjxF,OAC3K,GAAI8mB,aAAY,eACZ,GAAIuJ,SAAQ0hE,iBAAiB7yF,MAAM/B,KAAM2wB,cACzC,GAAIuC,SAAQ0hE,iBAAiBC,eAAe70F,KAAM2wB,eACnDgkE,eAAe3vF,QAAQ,GAAIutB,iBAAgBqiE,iBAAiBC,kBAAmBlkE,cAClF,GAAIhH,aAAY,qBAAuBruB,KAAK+4F,gBAE3BprE,YACjBxB,SAASqtE,cAAc3rE,OAAOnpB,MAC9BkoB,WAAW5sB,KAAKy4F,yBAAyBjjF,IAAI,SAAUymB,kBAAoB,MAAO5P,YAAW4P,qBAC7FrP,WAAW5sB,KAAK04F,6BAA6BljF,IAAI,SAAUymB,kBAAoB,MAAO5P,YAAW4P,sBAEhFw9D,aAAe90F,eAAe3E,KAAKw4F,cAAcjxF,MAAQ,UAC9E,OAAOmmB,kBACHhpB,KAAM+0F,aACNnrE,YAAa,GAAIsJ,SAAQ4hE,cAAc3rE,OAAOnpB,KAAM8nB,WAAW3Q,iBAAiBmf,YAAY00C,aAC5F7hD,OAAQxB,WAAWxQ,iBAAiBmf,YAAYs0C,mBAAoB9iD,WAAWxsB,KAAKw4F,cAAcjxF,QAClGomB,WAAYA,WACZQ,WAAaQ,QAASA,SAAW3uB,SAOzCm4F,iBAAiB1wD,UAAUwxD,kBAAoB,SAAU17E,UACrD,GACqBjd,QADjB+mC,MAAQrnC,IAEZ,IAA4B,MAAxBud,SAASC,YACTld,OAASN,KAAKo1E,gBAAiB3uE,MAAO8W,SAASC,kBAE9C,IAA2B,MAAvBD,SAASK,WAAoB,CAClC,GAAqBF,MAAOH,SAASG,MAAQH,SAASK,WAAWpW,OAC5C6wB,SAAW3a,KAAKlI,IAAI,SAAUgiB,KAAO,MAAO6P,OAAM+tC,eAAe59C,MACtFl3B,QAAS+rB,WAAW9O,SAASK,YAAYmQ,OAAOsK,cAE/C,IAAyB,MAArB9a,SAASI,SAAkB,CAChC,GAAqBD,MAAOH,SAASG,MAAQH,SAASI,SAASnW,OAC1C6wB,SAAW3a,KAAKlI,IAAI,SAAUgiB,KAAO,MAAO6P,OAAM+tC,eAAe59C,MACtFl3B,QACI+rB,WAAW9O,SAASI,UAAUsa,YAAYI,SAAU7L,WAAWjP,SAASI,eAG5Erd,QAASuuB,wBAAwBtR,SAASE,SAE9C,OAAOnd,SAUX63F,iBAAiB1wD,UAAU0xD,wBAA0B,SAAUh4E,SAAU5D,SAAUy7E,yBAA0BU,QAASC,SAClH,GAAqBC,2BACAryF,IAYrB,IAXImyF,SACAE,0BAA4BhtE,WAAWosE,0BACvCzxF,KAAO,GAAIopF,WAAUt7D,gBAGrBukE,0BAA4BZ,yBAAyB,GACrDzxF,KAAOyxF,yBAAyB,GAAGzxF,MAElCA,OACDA,KAAO8tB,cAEPskE,QACA35F,KAAKyuB,OAAO9tB,KAAK,GAAI41F,YAAWp1E,SAAU5Z,OAC1CvH,KAAK84F,aAAan4F,KAAKq1F,UAAUvkE,KAAKtQ,UAAU5b,IAAIq0F,2BAA2B5rE,cAE9E,CACD,GAAqB6rE,mBAAoB7D,UAAUvkE,KAAK,IAAMtQ,SAC9DnhB,MAAKyuB,OAAO9tB,KAAK,GAAI41F,YAAWsD,kBAAkBn1F,KAAM6C,MAExD,IAAqBuyF,cACjB,GAAIpD,QAAOmD,kBAAkBrG,WAAYqG,kBAAkBt0F,IAAIq0F,2BAA2B5rE,WAC1F,GAAIiJ,iBAAgB4iE,mBAExB75F,MAAK0uB,QAAQ/tB,KAAK,GAAI61F,aAAYr1E,SAAU24E,YAAavyF,OACzDvH,KAAK24F,WAAWpzF,IAAI4b,SAAU04E,mBAElC,MAAO7D,WAAUvkE,KAAKtQ,WAM1Bg3E,iBAAiB1wD,UAAU2tC,eAAiB,SAAU59C,KAClD,GAAqBl3B,QAAS,IAiB9B,IAhBIk3B,IAAIiB,UACJn4B,OAASktB,QAAQgK,IAAI30B,QAEpB20B,IAAIkB,aACDlB,IAAI/wB,QACAC,eAAe8wB,IAAI/wB,SAAWkV,kBAAkBqf,YAAY00C,UAC5DpvE,OAAS01F,UAEJtvF,eAAe8wB,IAAI/wB,SAAWkV,kBAAkBqf,YAAYkB,4BACjE57B,OAAS01F,UAAUvkE,KAAK,8BAG3BnxB,SACDA,OAASN,KAAK64F,WAAW1zF,IAAIuB,eAAe8wB,IAAI/wB,WAGnDnG,OAAQ,CACT,GAAqB6zB,OAAQpF,wBAAwByI,IAAI/wB,OACrD+wB,KAAImB,YACJxE,KAAKxzB,KAAK61B,WAEdl2B,OAASk5F,cAAc3rE,OAAOukE,WAAW,MAAOj+D,MAEpD,MAAO7zB,SAEJ63F,oBAcPqB,cAAiB,WACjB,QAASA,kBAET,MAAOA,iBAEXA,eAAc3rE,OAASmoE,UAAUvkE,KAAK,SACtC,IAAI6nE,kBAAoB,WACpB,QAASA,qBAET,MAAOA,oBAEXA,kBAAiB7yF,MAAQ0lB,SAAS,SAClCmtE,iBAAiBC,eAAiBptE,SAAS,iBAE3C,IAAqB4tE,WAAY,EACZC,cAAgB,mDACjCC,mBAAsB,WAItB,QAASA,oBAAmBxnC,MACX,SAATA,OAAmBA,KAAO,MAC9BzyD,KAAKyyD,KAAOA,KACZzyD,KAAKk6F,eAAiB,GAAI37E,KAC1Bve,KAAKm6F,SACLn6F,KAAKo6F,SAAW,EAChBp6F,KAAKq6F,aAAc,EAwHvB,MAjHAJ,oBAAmBxyD,UAAU6yD,UAAY,SAAUjqF,IAAKiiB,SAKpD,MAJgB,UAAZA,UAAsBA,QAAU,MAC/BtyB,KAAKk6F,eAAeh1F,IAAImL,MACzBrQ,KAAKk6F,eAAe30F,IAAI8K,IAAKiiB,SAE1BtyB,MAKXi6F,mBAAmBxyD,UAAU8yD,QAAU,WAGnC,MAFAv6F,MAAKm6F,MAAMx5F,SACXX,KAAKo6F,SAAW,EACTp6F,MASXi6F,mBAAmBxyD,UAAU+yD,WAAa,SAAUC,KAAM7yD,UAAW8yD,YAAaC,YAC9E,IAAK36F,KAAK46F,YACN,KAAM,IAAI55F,OAAM,oDAEpB,IAAiB,MAAb4mC,YAAsB5nC,KAAKk6F,eAAeh1F,IAAI0iC,WAC9C,KAAM,IAAI5mC,OAAM,wBAA2B4mC,UAAY,IAE3D,IAAY,MAAR6yD,KACA,KAAM,IAAIz5F,OAAM,oDAEpB,IAAIy5F,KAAOz6F,KAAKo6F,SACZ,KAAM,IAAIp5F,OAAM,0CAEpB,IAAI4mC,YAA6B,MAAf8yD,aAAqC,MAAdC,YACrC,KAAM,IAAI35F,OAAM,qEAKpB,OAHAhB,MAAKq6F,aAAc,EACnBr6F,KAAKo6F,SAAWK,KAChBz6F,KAAK46F,YAAYj6F,MAAO85F,KAAMA,KAAM7yD,UAAWA,UAAW8yD,YAAaA,YAAaC,WAAYA,aACzF36F,MAEX6D,OAAOkX,eAAek/E,mBAAmBxyD,UAAW,eAIhDtiC,IAAK,WAAc,MAAOnF,MAAKm6F,MAAMl5F,OAAM,GAAI,IAC/Cga,YAAY,EACZD,cAAc,IAKlBi/E,mBAAmBxyD,UAAUozD,OAAS,WAClC,GAAIxzD,OAAQrnC,IACZ,KAAKA,KAAKq6F,YACN,MAAO,KAEX,IAAqBS,cAAe,GAAIv8E,KACnBw8E,WACAb,iBACrBp3F,OAAMkf,KAAKhiB,KAAKk6F,eAAe7lE,QAAQ5zB,QAAQ,SAAU4P,IAAKzE,GAC1DkvF,aAAav1F,IAAI8K,IAAKzE,GACtBmvF,QAAQp6F,KAAK0P,KACb6pF,eAAev5F,KAAK0mC,MAAM6yD,eAAe/0F,IAAIkL,MAAQ,OAEzD,IAAqB2qF,UAAW,GACXZ,SAAW,EACXa,gBAAkB,EAClBC,gBAAkB,EAClBC,eAAiB,CA0BtC,OAzBAn7F,MAAKm6F,MAAM15F,QAAQ,SAAUsmB,UACzBqzE,SAAW,EACXY,UAAYj0E,SACPvR,IAAI,SAAU0R,SAEf,GAAqBk0E,UAAW9rE,YAAYpI,QAAQuzE,KAAOL,SAc3D,OAbAA,UAAWlzE,QAAQuzE,KACM,MAArBvzE,QAAQ0gB,YAERwzD,UACI9rE,YAAYwrE,aAAa31F,IAAI+hB,QAAQ0gB,WAAaqzD,iBACtDA,gBAAkBH,aAAa31F,IAAI+hB,QAAQ0gB,WAE3CwzD,UAAY9rE,YAAYpI,QAAQwzE,YAAcQ,iBAC9CA,gBAAkBh0E,QAAQwzE,YAE1BU,UAAY9rE,YAAYpI,QAAQyzE,WAAaQ,gBAC7CA,eAAiBj0E,QAAQyzE,YAEtBS,WAEN/lF,KAAK,KACV2lF,UAAY,MAEhBA,SAAWA,SAAS/5F,MAAM,GAAG,IAEzBwxD,KAAQzyD,KAAKyyD,MAAQ,GACrBqX,QAAWiwB,UACXsB,WAAc,GACdN,QAAWA,QACXb,eAAkBA,eAClBc,SAAYA,WAMpBf,mBAAmBxyD,UAAUa,YAAc,WACvC,MAAOtoC,MAAKq6F,YAAc,KAAOL,cAAgBhrE,eAAe4c,KAAKC,UAAU7rC,KAAM,KAAM,IACvF,IAEDi6F,sBAqCUzqE,WAAa,mEAWbI,+BAAiC,iBACjCE,qBAAuB,wBACvBG,aAAe,KACfqrE,kBAAoBnvE,SAAS,SAC7BovE,kBAAoBpvE,SAAS,SAC9CqvE,aAAgB,WAIhB,QAASA,cAAaC,QAClBz7F,KAAKy7F,OAASA,OACdz7F,KAAKwS,SACLxS,KAAK07F,YAET,MAAOF,iBAEP5qE,sBAAyB,WAKzB,QAASA,uBAAsB+qE,cAAeC,SAC1C57F,KAAK27F,cAAgBA,cACrB37F,KAAK47F,QAAUA,QACf57F,KAAK67F,YACL77F,KAAK87F,QAAU,GAAIN,cAAaI,UAwKpC,MAlKAhrE,uBAAsBC,WAAa,SAAUkrE,cACzC,MAAO,IAAInrE,uBAAsBmrE,aAAc,IAEnDl4F,OAAOkX,eAAe6V,sBAAsB6W,UAAW,gBAInDtiC,IAAK,WAAc,MAAOnF,MAAK87F,OAAO97F,KAAK87F,OAAO35F,OAAS,IAC3D8Y,YAAY,EACZD,cAAc,IAMlB4V,sBAAsB6W,UAAUu0D,cAAgB,SAAUpM,SAAW,MAAO5vF,MAAK27F,cAAc56F,QAAQ6uF,YAAa,GAMpHh/D,sBAAsB6W,UAAUw0D,QAAU,SAAUj6E,KAAMk6E,UACrC,SAAbA,WAAuBA,SAAW,IACtCl8F,KAAKm8F,MAAMn6E,KAAMk6E,UAAU,IAK/BtrE,sBAAsB6W,UAAU20D,YAAc,WAAc,MAA0C,KAAnCp8F,KAAKq8F,aAAa7pF,MAAMrQ,QAO3FyuB,sBAAsB6W,UAAU00D,MAAQ,SAAUn6E,KAAMoR,KAAMkpE,SAC1C,SAAZA,UAAsBA,SAAU,GAChClpE,KAAKjxB,OAAS,IACdnC,KAAKq8F,aAAa7pF,MAAM7R,KAAKyyB,MAC7BpzB,KAAKq8F,aAAaX,SAAS/6F,KAAKqhB,MAAQA,KAAKvP,YAAc,OAE3D6pF,SACAt8F,KAAK87F,OAAOn7F,KAAK,GAAI66F,cAAax7F,KAAK47F,WAM/ChrE,sBAAsB6W,UAAU80D,oBAAsB,WAC9Cv8F,KAAKo8F,eACLp8F,KAAK87F,OAAO30E,OAMpByJ,sBAAsB6W,UAAU+0D,UAAY,WACxCx8F,KAAK47F,UACL57F,KAAKq8F,aAAaZ,OAASz7F,KAAK47F,SAKpChrE,sBAAsB6W,UAAUg1D,UAAY,WACxCz8F,KAAK47F,UACL57F,KAAKq8F,aAAaZ,OAASz7F,KAAK47F,SAMpChrE,sBAAsB6W,UAAUi1D,UAAY,SAAUC,OAAS38F,KAAK67F,SAASl7F,KAAKg8F,QAIlF/rE,sBAAsB6W,UAAUm1D,SAAW,WAAc,MAAO58F,MAAK67F,SAAS10E,OAC9EtjB,OAAOkX,eAAe6V,sBAAsB6W,UAAW,gBAInDtiC,IAAK,WACD,MAAOnF,MAAK67F,SAAS15F,OAAS,EAAInC,KAAK67F,SAAS77F,KAAK67F,SAAS15F,OAAS,GAAK,MAEhF8Y,YAAY,EACZD,cAAc,IAKlB4V,sBAAsB6W,UAAUvW,SAAW,WACvC,MAAOlxB,MAAK68F,YACPrnF,IAAI,SAAUoD,GAAK,MAAOA,GAAEpG,MAAMrQ,OAAS,EAAI4tB,cAAcnX,EAAE6iF,QAAU7iF,EAAEpG,MAAM6C,KAAK,IAAM,KAC5FA,KAAK,OAQdub,sBAAsB6W,UAAUY,qBAAuB,SAAUy0D,eAAgBC,YAAaC,cACrE,SAAjBA,eAA2BA,aAAe,EAS9C,KAAK,GARgBxnF,KAAM,GAAIykF,oBAAmB8C,aAC7BE,mBAAoB,EACpBC,uBAAyB,WACrCD,oBACDznF,IAAI8kF,UAAUwC,gBAAgBtC,WAAW,EAAGsC,eAAgB,EAAG,GAC/DG,mBAAoB,IAGFrxF,EAAI,EAAGA,EAAIoxF,aAAcpxF,IAC/C4J,IAAI+kF,UACJ2C,wBAmCJ,OAjCAl9F,MAAK68F,YAAYp8F,QAAQ,SAAUmiC,KAAMu6D,SACrC3nF,IAAI+kF,SAMJ,KALA,GAAqB6C,OAAQx6D,KAAK84D,SACblpF,MAAQowB,KAAKpwB,MACbioF,KAAO73D,KAAK64D,OAASxrE,aAAa9tB,OAClCk7F,QAAU,EAExBA,QAAUD,MAAMj7F,SAAWi7F,MAAMC,UACpC5C,MAAQjoF,MAAM6qF,SAASl7F,OACvBk7F,SAQJ,KANIA,QAAUD,MAAMj7F,QAAsB,IAAZg7F,SAA0B,IAAT1C,KAC3CwC,mBAAoB,EAGpBC,yBAEGG,QAAUD,MAAMj7F,QAAQ,CAC3B,GAAqB6jD,MAAOo3C,MAAMC,SACbjtF,OAAS41C,KAAKz2C,MAAMkjD,KACpB6qC,WAAat3C,KAAKz2C,MAAMqzB,KACxB26D,UAAYv3C,KAAKz2C,MAAMsuC,GAM5C,KALAroC,IAAI8kF,UAAUlqF,OAAOC,IAAKD,OAAOkiB,SAC5BkoE,WAAWC,KAAMrqF,OAAOC,IAAKitF,WAAYC,WAC9C9C,MAAQjoF,MAAM6qF,SAASl7F,OACvBk7F,UAEOA,QAAUD,MAAMj7F,SAAW6jD,OAASo3C,MAAMC,WAAaD,MAAMC,WAChE5C,MAAQjoF,MAAM6qF,SAASl7F,OACvBk7F,aAIL7nF,KAEX3R,OAAOkX,eAAe6V,sBAAsB6W,UAAW,eAInDtiC,IAAK,WACD,MAAInF,MAAK87F,OAAO35F,QAA+D,IAArDnC,KAAK87F,OAAO97F,KAAK87F,OAAO35F,OAAS,GAAGqQ,MAAMrQ,OACzDnC,KAAK87F,OAAO76F,MAAM,GAAG,GAEzBjB,KAAK87F,QAEhB7gF,YAAY,EACZD,cAAc,IAEX4V,yBAKP4sE,uBAA0B,WAI1B,QAASA,wBAAuBC,wBAC5Bz9F,KAAKy9F,uBAAyBA,uBAqdlC,MA9cAD,wBAAuB/1D,UAAU2uD,oBAAsB,SAAUxqE,KAAM+E,KAGnE,MAFA/E,MAAKK,KAAKC,gBAAgBlsB,KAAM2wB,KAChCA,IAAIsrE,QAAQrwE,KAAM,KACX,MAOX4xE,uBAAuB/1D,UAAU4uD,gBAAkB,SAAUzqE,KAAM+E,KAI/D,MAHAA,KAAIwrE,MAAMvwE,KAAM,WAChBA,KAAK/oB,MAAMqpB,gBAAgBlsB,KAAM2wB,KACjCA,IAAIsrE,QAAQrwE,KAAM,KACX,MAQX4xE,uBAAuB/1D,UAAU2tD,cAAgB,SAAU50F,IAAKH,WAOhEm9F,uBAAuB/1D,UAAUgvD,sBAAwB,SAAU7qE,KAAM+E,OAMzE6sE,uBAAuB/1D,UAAUkvD,YAAc,SAAU/qE,KAAM+E,KAC3DA,IAAIwrE,MAAMvwE,KAAM,QAChBA,KAAKvD,UAAU6D,gBAAgBlsB,KAAM2wB,KACrCA,IAAIwrE,MAAMvwE,KAAM,MAChB,IAAqB8xE,aAAgC,MAAlB9xE,KAAK8mE,WAAqB9mE,KAAK8mE,UAAUvwF,OAAS,CAoBrF,OAnBIypB,MAAK6mE,SAAStwF,QAAU,IAAMu7F,aAC9B/sE,IAAIwrE,MAAMvwE,KAAM,KAChB5rB,KAAKyrB,mBAAmBG,KAAK6mE,SAAU9hE,KACvCA,IAAI4rE,sBACJ5rE,IAAIwrE,MAAMvwE,KAAM,OAGhB+E,IAAIsrE,UACJtrE,IAAI6rE,YACJx8F,KAAKyrB,mBAAmBG,KAAK6mE,SAAU9hE,KACvCA,IAAI8rE,YACAiB,cACA/sE,IAAIsrE,QAAQrwE,KAAM,YAClB+E,IAAI6rE,YACJx8F,KAAKyrB,mBAAmBG,KAAK8mE,UAAW/hE,KACxCA,IAAI8rE,cAGZ9rE,IAAIsrE,QAAQrwE,KAAM,KACX,MAQX4xE,uBAAuB/1D,UAAUsvD,kBAAoB,SAAUnrE,KAAM+E,OAMrE6sE,uBAAuB/1D,UAAUwvD,eAAiB,SAAUrrE,KAAM+E,KAI9D,MAHAA,KAAIwrE,MAAMvwE,KAAM,UAChBA,KAAKroB,MAAM2oB,gBAAgBlsB,KAAM2wB,KACjCA,IAAIsrE,QAAQrwE,KAAM,KACX,MAOX4xE,uBAAuB/1D,UAAU+vD,iBAAmB,SAAU5rE,KAAM+E,KAChE,GAAqBwpE,OAAQvuE,KAAK42C,QAAQr4D,MAAM,KAEhD,OADAgwF,OAAM15F,QAAQ,SAAUmiC,MAAQjS,IAAIsrE,QAAQrwE,KAAM,MAAQgX,QACnD,MAQX46D,uBAAuB/1D,UAAUyuD,oBAAsB,SAAUtqE,KAAM+E,OAMvE6sE,uBAAuB/1D,UAAU0sD,kBAAoB,SAAUloE,KAAM0E,KACjE,GAAqBgtE,cAAehtE,IAAIyrE,aASxC,OARKuB,eACDhtE,IAAIwrE,MAAMlwE,KAAM,KAEpB0E,IAAIwrE,MAAMlwE,KAAMA,KAAKvnB,KAAO,OAC5BunB,KAAKppB,MAAMqpB,gBAAgBlsB,KAAM2wB,KAC5BgtE,cACDhtE,IAAIwrE,MAAMlwE,KAAM,KAEb,MAOXuxE,uBAAuB/1D,UAAU4sD,kBAAoB,SAAUpoE,KAAM0E,KACjE,GAAqBgtE,cAAehtE,IAAIyrE,aAYxC,OAXKuB,eACDhtE,IAAIwrE,MAAMlwE,KAAM,KAEpBA,KAAK86B,SAAS76B,gBAAgBlsB,KAAM2wB,KACpCA,IAAIwrE,MAAMlwE,KAAM,KAChBA,KAAK9nB,MAAM+nB,gBAAgBlsB,KAAM2wB,KACjCA,IAAIwrE,MAAMlwE,KAAM,QAChBA,KAAKppB,MAAMqpB,gBAAgBlsB,KAAM2wB,KAC5BgtE,cACDhtE,IAAIwrE,MAAMlwE,KAAM,KAEb,MAOXuxE,uBAAuB/1D,UAAU8sD,mBAAqB,SAAUtoE,KAAM0E,KAClE,GAAqBgtE,cAAehtE,IAAIyrE,aAUxC,OATKuB,eACDhtE,IAAIwrE,MAAMlwE,KAAM,KAEpBA,KAAK86B,SAAS76B,gBAAgBlsB,KAAM2wB,KACpCA,IAAIwrE,MAAMlwE,KAAM,IAAMA,KAAKvnB,KAAO,OAClCunB,KAAKppB,MAAMqpB,gBAAgBlsB,KAAM2wB,KAC5BgtE,cACDhtE,IAAIwrE,MAAMlwE,KAAM,KAEb,MAOXuxE,uBAAuB/1D,UAAUmtD,sBAAwB,SAAU3oE,KAAM0E,KACrE1E,KAAK86B,SAAS76B,gBAAgBlsB,KAAM2wB,IACpC,IAAqBjsB,MAAOunB,KAAKvnB,IACjC,OAAoB,OAAhBunB,KAAK+nE,UACLtvF,KAAO1E,KAAK49F,qBAAqB3xE,KAAK+nE,SAC1B,MAARtvF,MAEO,MAGfisB,IAAIwrE,MAAMlwE,KAAM,IAAMvnB,KAAO,KAC7B1E,KAAKq3F,oBAAoBprE,KAAKkI,KAAMxD,IAAK,KACzCA,IAAIwrE,MAAMlwE,KAAM,KACT,OAOXuxE,uBAAuB/1D,UAAUm2D,qBAAuB,SAAU72D,UAMlEy2D,uBAAuB/1D,UAAUotD,wBAA0B,SAAU5oE,KAAM0E,KAKvE,MAJA1E,MAAKmB,GAAGlB,gBAAgBlsB,KAAM2wB,KAC9BA,IAAIwrE,MAAMlwE,KAAM,KAChBjsB,KAAKq3F,oBAAoBprE,KAAKkI,KAAMxD,IAAK,KACzCA,IAAIwrE,MAAMlwE,KAAM,KACT,MAOXuxE,uBAAuB/1D,UAAUwsD,iBAAmB,SAAUzzF,IAAKmwB,KAC/D,GAAqBi/D,SAAUpvF,IAAIkE,IACnC,IAAmB,MAAflE,IAAIwzF,QACJ,OAAQxzF,IAAIwzF,SACR,IAAKL,YAAWE,MACZjE,QAAU,OACV,MACJ,KAAK+D,YAAWC,KACZhE,QAAU,MACV,MACJ,KAAK+D,YAAWG,WACZlE,QAAU0L,kBAAkB52F,IAC5B,MACJ,KAAKivF,YAAWI,WACZnE,QAAU2L,kBAAkB72F,IAC5B,MACJ,SACI,KAAM,IAAI1D,OAAM,4BAA8BR,IAAIwzF,SAI9D,MADArjE,KAAIwrE,MAAM37F,IAAKovF,SACR,MAOX4N,uBAAuB/1D,UAAUstD,qBAAuB,SAAUv0F,IAAKmwB,KAMnE,MALAA,KAAIwrE,MAAM37F,IAAK,QACfA,IAAIs0F,UAAU5oE,gBAAgBlsB,KAAM2wB,KACpCA,IAAIwrE,MAAM37F,IAAK,KACfR,KAAKq3F,oBAAoB72F,IAAI2zB,KAAMxD,IAAK,KACxCA,IAAIwrE,MAAM37F,IAAK,KACR,MAOXg9F,uBAAuB/1D,UAAUutD,iBAAmB,SAAUx0F,IAAKmwB,KAC/D,GAAqB9tB,OAAQrC,IAAIqC,KAOjC,OANqB,gBAAVA,OACP8tB,IAAIwrE,MAAM37F,IAAKivB,iBAAiB5sB,MAAO7C,KAAKy9F,yBAG5C9sE,IAAIwrE,MAAM37F,IAAK,GAAKqC,OAEjB,MAQX26F,uBAAuB/1D,UAAUwtD,kBAAoB,SAAUz0F,IAAKmwB,OAMpE6sE,uBAAuB/1D,UAAUytD,qBAAuB,SAAU10F,IAAKmwB,KAQnE,MAPAA,KAAIwrE,MAAM37F,IAAK,KACfA,IAAI6nB,UAAU6D,gBAAgBlsB,KAAM2wB,KACpCA,IAAIwrE,MAAM37F,IAAK,MACfA,IAAIiyF,SAASvmE,gBAAgBlsB,KAAM2wB,KACnCA,IAAIwrE,MAAM37F,IAAK,MACfA,IAAIkyF,UAAUxmE,gBAAgBlsB,KAAM2wB,KACpCA,IAAIwrE,MAAM37F,IAAK,KACR,MAOXg9F,uBAAuB/1D,UAAU0tD,aAAe,SAAU30F,IAAKmwB,KAG3D,MAFAA,KAAIwrE,MAAM37F,IAAK,KACfA,IAAI6nB,UAAU6D,gBAAgBlsB,KAAM2wB,KAC7B,MAQX6sE,uBAAuB/1D,UAAU4tD,kBAAoB,SAAU70F,IAAKmwB,OAOpE6sE,uBAAuB/1D,UAAU0uD,yBAA2B,SAAUvqE,KAAMvrB,WAM5Em9F,uBAAuB/1D,UAAU+tD,wBAA0B,SAAUh1F,IAAKmwB,KACtE,GAAqBktE,MACrB,QAAQr9F,IAAI8vD,UACR,IAAK4gC,gBAAeC,OAChB0M,MAAQ,IACR,MACJ,KAAK3M,gBAAeG,UAChBwM,MAAQ,KACR,MACJ,KAAK3M,gBAAeE,UAChByM,MAAQ,IACR,MACJ,KAAK3M,gBAAeI,aAChBuM,MAAQ,KACR,MACJ,KAAK3M,gBAAeU,IAChBiM,MAAQ,IACR,MACJ,KAAK3M,gBAAeW,GAChBgM,MAAQ,IACR,MACJ,KAAK3M,gBAAeM,KAChBqM,MAAQ,GACR,MACJ,KAAK3M,gBAAeK,MAChBsM,MAAQ,GACR,MACJ,KAAK3M,gBAAeO,OAChBoM,MAAQ,GACR,MACJ,KAAK3M,gBAAeQ,SAChBmM,MAAQ,GACR,MACJ,KAAK3M,gBAAeS,OAChBkM,MAAQ,GACR,MACJ,KAAK3M,gBAAeY,MAChB+L,MAAQ,GACR,MACJ,KAAK3M,gBAAea,YAChB8L,MAAQ,IACR,MACJ,KAAK3M,gBAAec,OAChB6L,MAAQ,GACR,MACJ,KAAK3M,gBAAee,aAChB4L,MAAQ,IACR,MACJ,SACI,KAAM,IAAI78F,OAAM,oBAAsBR,IAAI8vD,UAOlD,MALA3/B,KAAIwrE,MAAM37F,IAAK,KACfA,IAAI+0F,IAAIrpE,gBAAgBlsB,KAAM2wB,KAC9BA,IAAIwrE,MAAM37F,IAAK,IAAMq9F,MAAQ,KAC7Br9F,IAAIqyF,IAAI3mE,gBAAgBlsB,KAAM2wB,KAC9BA,IAAIwrE,MAAM37F,IAAK,KACR,MAOXg9F,uBAAuB/1D,UAAUguD,kBAAoB,SAAUj1F,IAAKmwB,KAIhE,MAHAnwB,KAAIumD,SAAS76B,gBAAgBlsB,KAAM2wB,KACnCA,IAAIwrE,MAAM37F,IAAK,KACfmwB,IAAIwrE,MAAM37F,IAAKA,IAAIkE,MACZ,MAOX84F,uBAAuB/1D,UAAUiuD,iBAAmB,SAAUl1F,IAAKmwB,KAK/D,MAJAnwB,KAAIumD,SAAS76B,gBAAgBlsB,KAAM2wB,KACnCA,IAAIwrE,MAAM37F,IAAK,KACfA,IAAI2D,MAAM+nB,gBAAgBlsB,KAAM2wB,KAChCA,IAAIwrE,MAAM37F,IAAK,KACR,MAOXg9F,uBAAuB/1D,UAAUmuD,sBAAwB,SAAUp1F,IAAKmwB,KACpE,GAAqBmtE,YAAat9F,IAAIm1F,QAAQxzF,OAAS,CAMvD,OALAwuB,KAAIwrE,MAAM37F,IAAK,IAAKs9F,YACpBntE,IAAI6rE,YACJx8F,KAAKq3F,oBAAoB72F,IAAIm1F,QAAShlE,IAAK,IAAKmtE,YAChDntE,IAAI8rE,YACJ9rE,IAAIwrE,MAAM37F,IAAK,IAAKs9F,YACb,MAOXN,uBAAuB/1D,UAAUouD,oBAAsB,SAAUr1F,IAAKmwB,KAClE,GAAI0W,OAAQrnC,KACS89F,WAAat9F,IAAIm1F,QAAQxzF,OAAS,CASvD,OARAwuB,KAAIwrE,MAAM37F,IAAK,IAAKs9F,YACpBntE,IAAI6rE,YACJx8F,KAAK+9F,gBAAgB,SAAUzjF,OAC3BqW,IAAIwrE,MAAM37F,IAAKivB,iBAAiBnV,MAAMga,IAAK+S,MAAMo2D,uBAAwBnjF,MAAMyS,QAAU,MACzFzS,MAAMzX,MAAMqpB,gBAAgBmb,MAAO1W,MACpCnwB,IAAIm1F,QAAShlE,IAAK,IAAKmtE,YAC1BntE,IAAI8rE,YACJ9rE,IAAIwrE,MAAM37F,IAAK,IAAKs9F,YACb,MAOXN,uBAAuB/1D,UAAUsuD,eAAiB,SAAUv1F,IAAKmwB,KAI7D,MAHAA,KAAIwrE,MAAM37F,IAAK,KACfR,KAAKq3F,oBAAoB72F,IAAIgS,MAAOme,IAAK,KACzCA,IAAIwrE,MAAM37F,IAAK,KACR,MASXg9F,uBAAuB/1D,UAAU4vD,oBAAsB,SAAU7wC,YAAa71B,IAAKqtE,UAAW1B,SAC1F,GAAIj1D,OAAQrnC,IACI,UAAZs8F,UAAsBA,SAAU,GACpCt8F,KAAK+9F,gBAAgB,SAAU9xE,MAAQ,MAAOA,MAAKC,gBAAgBmb,MAAO1W,MAAS61B,YAAa71B,IAAKqtE,UAAW1B,UAWpHkB,uBAAuB/1D,UAAUs2D,gBAAkB,SAAU3zD,QAASoc,YAAa71B,IAAKqtE,UAAW1B,SAC/E,SAAZA,UAAsBA,SAAU,EACpC,KAAK,GAAqB1wF,GAAI,EAAGA,EAAI46C,YAAYrkD,OAAQyJ,IACjDA,EAAI,GACJ+kB,IAAIwrE,MAAM,KAAM6B,UAAW1B,SAE/BlyD,QAAQoc,YAAY56C,GAEpB0wF,UACA3rE,IAAIsrE,WAQZuB,uBAAuB/1D,UAAUhc,mBAAqB,SAAUgL,WAAY9F,KACxE,GAAI0W,OAAQrnC,IACZy2B,YAAWh2B,QAAQ,SAAUmrB,MAAQ,MAAOA,MAAKG,eAAesb,MAAO1W,QAEpE6sE,0BA6CUntE,eAAiB,aAsClCsV,kBAAqB,WAIrB,QAASA,mBAAkBs4D,iBACvBj+F,KAAKi+F,gBAAkBA,gBAkC3B,MAxBAt4D,mBAAkB8B,UAAUy2D,eAAiB,SAAUC,YAAapB,YAAaxxE,MAAOwwE,aAAcqC,UAClG,GAAI/2D,OAAQrnC,IACK,UAAbo+F,WAAuBA,SAAW,GACtC,IAAqBjuE,WAAY,GAAIC,mBAAkB2sE,YAAa/8F,KAAKi+F,iBACpDttE,IAAMC,sBAAsBC,WAAWkrE,aAC5D5rE,WAAU1E,mBAAmBF,MAAOoF,IACpC,IAAqB0tE,eAAgBD,SAAWA,SAASj0F,MAAM,QAC/DgmB,WAAUmuE,UAAU79F,QAAQ,SAAU69F,UAAWC,kBAC7C,GAAqBC,eAAgBF,UAAU9oF,IAAI,SAAUipF,UAAY,MAAOA,UAAS/5F,KAAO,OAAS+5F,SAASC,KAAOrpF,KAAK,IAC9HgpF,eAAc19F,KAAK,WAAa69F,cAAgB,WAAan3D,MAAM42D,gBAAgB3tE,qBAAqBiuE,iBAAkBxB,aAAe,QAE7I5sE,UAAUwuE,oBAAoBl+F,QAAQ,SAAUY,OAAQu9F,kBAEpDP,cAAc19F,KAAK,OACd,YAAcU,OAAS,UAAYgmC,MAAM42D,gBAAgB3tE,qBAAqBsuE,iBAAkB7B,aAAe,QAExH,IAAqB8B,IAAKluE,IAAI0X,qBAAqB81D,YAAapB,YAAasB,cAAcl8F,QAAQmmC,cAC9E6xD,MAAQkE,cAAc30F,QAAQinB,IAAIO,WAAY2tE,IAKnE,OAJIA,KAEA1E,MAAMx5F,KAAK,IAERw5F,MAAM9kF,KAAK,OAEfswB,qBAEPvV,kBAAqB,SAAUqyB,QAM/B,QAASryB,mBAAkB0uE,aAAcb,iBACrC,GAAI52D,OAAQob,OAAOE,KAAK3iD,MAAM,IAAUA,IAMxC,OALAqnC,OAAMy3D,aAAeA,aACrBz3D,MAAM42D,gBAAkBA,gBACxB52D,MAAM03D,eAAiB,EACvB13D,MAAMs3D,oBAAsB,GAAIpgF,KAChC8oB,MAAMi3D,UAAY,GAAI//E,KACf8oB,MA4bX,MAxcA+B,WAAUhZ,kBAAmBqyB,QAoB7BryB,kBAAkBqX,UAAUxW,UAAY,SAAU89B,EAAGp+B,IAAKquE,aAClC,SAAhBA,cAA0BA,YAAc,OACnC,MAALjwC,GACA/uD,KAAK++F,iBACLhwC,EAAE99B,UAAUjxB,KAAM2wB,KAClB3wB,KAAK++F,kBAGLpuE,IAAIwrE,MAAM,KAAM6C,cAQxB5uE,kBAAkBqX,UAAUutD,iBAAmB,SAAUx0F,IAAKmwB,KAC1D,GAAqB9tB,OAAQrC,IAAIqC,KACjC,OAAa,OAATA,OAAiBrC,IAAI+G,MAAQ4wB,eAC7BxH,IAAIwrE,MAAM37F,IAAK,IAAMqC,MAAQ,YACtB,MAEJ4/C,OAAOhb,UAAUutD,iBAAiBryC,KAAK3iD,KAAMQ,IAAKmwB,MAO7DP,kBAAkBqX,UAAUmuD,sBAAwB,SAAUp1F,IAAKmwB,KACpC,IAAvBnwB,IAAIm1F,QAAQxzF,QACZwuB,IAAIwrE,MAAM37F,IAAK,IAEnB,IAAqBF,QAASmiD,OAAOhb,UAAUmuD,sBAAsBjzC,KAAK3iD,KAAMQ,IAAKmwB,IAIrF,OAH2B,KAAvBnwB,IAAIm1F,QAAQxzF,QACZwuB,IAAIwrE,MAAM37F,IAAK,cAEZF,QAOX8vB,kBAAkBqX,UAAUwtD,kBAAoB,SAAUz0F,IAAKmwB,KAE3D,MADA3wB,MAAKi/F,iBAAiBz+F,IAAIqC,MAAOrC,IAAI8rB,WAAYqE,KAC1C,MAOXP,kBAAkBqX,UAAUyuD,oBAAsB,SAAUtqE,KAAM+E,KAC9D,GAAIA,IAAIqrE,cAAcpwE,KAAKlnB,OAASknB,KAAK/oB,gBAAiB0pB,gBAAiBX,KAAKrkB,KAAM,CAElF,GAAIsN,IAAK7U,KAAKk/F,qBAAqBtzE,KAAK/oB,MAAMA,OAAQ6B,KAAOmQ,GAAGnQ,KAAMmB,SAAWgP,GAAGhP,SAAU6lC,QAAU72B,GAAG62B,OAC3G,IAAuB,IAAnBA,QAAQvpC,QAAgB0D,WAAa7F,KAAK8+F,aAAc,CACxD,GAAqBR,WAAYt+F,KAAKs+F,UAAUn5F,IAAIU,SAMpD,OALKy4F,aACDA,aACAt+F,KAAKs+F,UAAU/4F,IAAIM,SAAUy4F,YAEjCA,UAAU39F,MAAO+D,KAAMA,KAAMg6F,GAAI9yE,KAAKlnB,OAC/B,MAiBf,MAdIisB,KAAIqrE,cAAcpwE,KAAKlnB,OACvBisB,IAAIwrE,MAAMvwE,KAAM,WAEhBA,KAAKqkE,YAAYz6D,aAAaC,OAC9B9E,IAAIwrE,MAAMvwE,KAAM,SAGhB+E,IAAIwrE,MAAMvwE,KAAM,OAEpB+E,IAAIwrE,MAAMvwE,KAAM,IAAMA,KAAKlnB,MAC3B1E,KAAKm/F,gBAAgBvzE,KAAKrkB,KAAMopB,KAChCA,IAAIwrE,MAAMvwE,KAAM,OAChBA,KAAK/oB,MAAMqpB,gBAAgBlsB,KAAM2wB,KACjCA,IAAIsrE,QAAQrwE,KAAM,KACX,MAOXwE,kBAAkBqX,UAAU2tD,cAAgB,SAAU50F,IAAKmwB,KAMvD,MALAA,KAAIwrE,MAAM37F,IAAK,MACfA,IAAI+G,KAAK0pB,UAAUjxB,KAAM2wB,KACzBA,IAAIwrE,MAAM37F,IAAK,KACfA,IAAIqC,MAAMqpB,gBAAgBlsB,KAAM2wB,KAChCA,IAAIwrE,MAAM37F,IAAK,KACR,MAOX4vB,kBAAkBqX,UAAUstD,qBAAuB,SAAUv0F,IAAKmwB,KAQ9D,MAPAA,KAAIwrE,MAAM37F,IAAK,QACfR,KAAK++F,iBACLv+F,IAAIs0F,UAAU5oE,gBAAgBlsB,KAAM2wB,KACpC3wB,KAAK++F,iBACLpuE,IAAIwrE,MAAM37F,IAAK,KACfR,KAAKq3F,oBAAoB72F,IAAI2zB,KAAMxD,IAAK,KACxCA,IAAIwrE,MAAM37F,IAAK,KACR,MAOX4vB,kBAAkBqX,UAAUgvD,sBAAwB,SAAU7qE,KAAM+E,KAChE,GAAI0W,OAAQrnC,IAuBZ,OAtBA2wB,KAAI+rE,UAAU9wE,MACV+E,IAAIqrE,cAAcpwE,KAAKlnB,OACvBisB,IAAIwrE,MAAMvwE,KAAM,WAEpB+E,IAAIwrE,MAAMvwE,KAAM,SAAWA,KAAKlnB,MACb,MAAfknB,KAAKiC,SACL8C,IAAIwrE,MAAMvwE,KAAM,aAChB5rB,KAAK++F,iBACLnzE,KAAKiC,OAAO3B,gBAAgBlsB,KAAM2wB,KAClC3wB,KAAK++F,kBAETpuE,IAAIsrE,QAAQrwE,KAAM,MAClB+E,IAAI6rE,YACJ5wE,KAAK6C,OAAOhuB,QAAQ,SAAU6mC,OAAS,MAAOD,OAAM+3D,iBAAiB93D,MAAO3W,OAC9C,MAA1B/E,KAAKwb,mBACLpnC,KAAKq/F,uBAAuBzzE,KAAM+E,KAEtC/E,KAAK8C,QAAQjuB,QAAQ,SAAUomC,QAAU,MAAOQ,OAAMi4D,kBAAkBz4D,OAAQlW,OAChF/E,KAAK+C,QAAQluB,QAAQ,SAAUsmC,QAAU,MAAOM,OAAMk4D,kBAAkBx4D,OAAQpW,OAChFA,IAAI8rE,YACJ9rE,IAAIsrE,QAAQrwE,KAAM,KAClB+E,IAAIisE,WACG,MAOXxsE,kBAAkBqX,UAAU23D,iBAAmB,SAAU93D,MAAO3W,KACxD2W,MAAM2oD,YAAYz6D,aAAaygE,UAE/BtlE,IAAIwrE,MAAM,KAAM,gBAEpBxrE,IAAIwrE,MAAM,KAAM70D,MAAM5iC,MACtB1E,KAAKm/F,gBAAgB73D,MAAM//B,KAAMopB,KACjCA,IAAIsrE,QAAQ,KAAM,MAOtB7rE,kBAAkBqX,UAAU63D,kBAAoB,SAAUz4D,OAAQlW,KAC1DkW,OAAOopD,YAAYz6D,aAAaygE,UAChCtlE,IAAIwrE,MAAM,KAAM,YAEpBxrE,IAAIwrE,MAAM,KAAM,OAASt1D,OAAOniC,KAAO,MACvC1E,KAAKm/F,gBAAgBt4D,OAAOt/B,KAAMopB,KAClCA,IAAIsrE,QAAQ,KAAM,MAClBtrE,IAAI6rE,YACJx8F,KAAKyrB,mBAAmBob,OAAOvZ,KAAMqD,KACrCA,IAAI8rE,YACJ9rE,IAAIsrE,QAAQ,KAAM,MAOtB7rE,kBAAkBqX,UAAU43D,uBAAyB,SAAUzzE,KAAM+E,KACjEA,IAAIwrE,MAAMvwE,KAAM,gBAChB5rB,KAAKw/F,aAAa5zE,KAAKwb,kBAAkB/Z,OAAQsD,KACjDA,IAAIsrE,QAAQrwE,KAAM,OAClB+E,IAAI6rE,YACJx8F,KAAKyrB,mBAAmBG,KAAKwb,kBAAkB9Z,KAAMqD,KACrDA,IAAI8rE,YACJ9rE,IAAIsrE,QAAQrwE,KAAM,MAOtBwE,kBAAkBqX,UAAU83D,kBAAoB,SAAUx4D,OAAQpW,KAC1DoW,OAAOkpD,YAAYz6D,aAAaygE,UAChCtlE,IAAIwrE,MAAM,KAAM,YAEpBxrE,IAAIwrE,MAAM,KAAMp1D,OAAOriC,KAAO,KAC9B1E,KAAKw/F,aAAaz4D,OAAO1Z,OAAQsD,KACjCA,IAAIwrE,MAAM,KAAM,KAChBn8F,KAAKm/F,gBAAgBp4D,OAAOx/B,KAAMopB,IAAK,QACvCA,IAAIsrE,QAAQ,KAAM,MAClBtrE,IAAI6rE,YACJx8F,KAAKyrB,mBAAmBsb,OAAOzZ,KAAMqD,KACrCA,IAAI8rE,YACJ9rE,IAAIsrE,QAAQ,KAAM,MAOtB7rE,kBAAkBqX,UAAU4tD,kBAAoB,SAAU70F,IAAKmwB,KAU3D,MATAA,KAAIwrE,MAAM37F,IAAK,KACfR,KAAKw/F,aAAah/F,IAAI6sB,OAAQsD,KAC9BA,IAAIwrE,MAAM37F,IAAK,KACfR,KAAKm/F,gBAAgB3+F,IAAI+G,KAAMopB,IAAK,QACpCA,IAAIsrE,QAAQz7F,IAAK,SACjBmwB,IAAI6rE,YACJx8F,KAAKyrB,mBAAmBjrB,IAAIi2B,WAAY9F,KACxCA,IAAI8rE,YACJ9rE,IAAIwrE,MAAM37F,IAAK,KACR,MAOX4vB,kBAAkBqX,UAAU0uD,yBAA2B,SAAUvqE,KAAM+E,KAanE,MAZIA,KAAIqrE,cAAcpwE,KAAKlnB,OACvBisB,IAAIwrE,MAAMvwE,KAAM,WAEpB+E,IAAIwrE,MAAMvwE,KAAM,YAAcA,KAAKlnB,KAAO,KAC1C1E,KAAKw/F,aAAa5zE,KAAKyB,OAAQsD,KAC/BA,IAAIwrE,MAAMvwE,KAAM,KAChB5rB,KAAKm/F,gBAAgBvzE,KAAKrkB,KAAMopB,IAAK,QACrCA,IAAIsrE,QAAQrwE,KAAM,MAClB+E,IAAI6rE,YACJx8F,KAAKyrB,mBAAmBG,KAAK6K,WAAY9F,KACzCA,IAAI8rE,YACJ9rE,IAAIsrE,QAAQrwE,KAAM,KACX,MAOXwE,kBAAkBqX,UAAUsvD,kBAAoB,SAAUnrE,KAAM+E,KAC5DA,IAAIsrE,QAAQrwE,KAAM,SAClB+E,IAAI6rE,YACJx8F,KAAKyrB,mBAAmBG,KAAKirE,UAAWlmE,KACxCA,IAAI8rE,YACJ9rE,IAAIsrE,QAAQrwE,KAAM,YAAc0vE,kBAAkB52F,KAAO,OACzDisB,IAAI6rE,WACJ,IAAqB1F,aAAgCyE,kBAAkBh2F,IAAI+1F,kBAAkB7pE,KAAK,UAAU8D,WAAW,MAC/GC,aAAaC,SACZ/rB,OAAOkiB,KAAKkrE,WAIrB,OAHA92F,MAAKyrB,mBAAmBqrE,WAAYnmE,KACpCA,IAAI8rE,YACJ9rE,IAAIsrE,QAAQrwE,KAAM,KACX,MAOXwE,kBAAkBqX,UAAUgpD,kBAAoB,SAAUlpF,KAAMopB,KAC5D,GAAqB8uE,QACrB,QAAQl4F,KAAK7C,MACT,IAAKyrF,iBAAgBE,KACjBoP,QAAU,SACV,MACJ,KAAKtP,iBAAgBC,QACjBqP,QAAU,KACV,MACJ,KAAKtP,iBAAgBjoD,SACjBu3D,QAAU,UACV,MACJ,KAAKtP,iBAAgBljF,OACjBwyF,QAAU,QACV,MACJ,KAAKtP,iBAAgBG,IACjBmP,QAAU,QACV,MACJ,KAAKtP,iBAAgB5rF,OACjBk7F,QAAU,QACV,MACJ,SACI,KAAM,IAAIz+F,OAAM,4BAA8BuG,KAAK7C,MAG3D,MADAisB,KAAIwrE,MAAM,KAAMsD,SACT,MAOXrvE,kBAAkBqX,UAAUipD,oBAAsB,SAAUlwF,IAAKmwB;AAE7D,MADAnwB,KAAIqC,MAAMqpB,gBAAgBlsB,KAAM2wB,KACzB,MAOXP,kBAAkBqX,UAAUopD,eAAiB,SAAUtpF,KAAMopB,KAGzD,MAFA3wB,MAAKixB,UAAU1pB,KAAKqpF,GAAIjgE,KACxBA,IAAIwrE,MAAM,KAAM,MACT,MAOX/rE,kBAAkBqX,UAAUupD,aAAe,SAAUzpF,KAAMopB,KAIvD,MAHAA,KAAIwrE,MAAM,KAAM,mBAChBn8F,KAAKixB,UAAU1pB,KAAKwpF,UAAWpgE,KAC/BA,IAAIwrE,MAAM,KAAM,KACT,MAMX/rE,kBAAkBqX,UAAUm2D,qBAAuB,SAAU72D,QACzD,GAAqBriC,KACrB,QAAQqiC,QACJ,IAAKytD,eAAcC,YACf/vF,KAAO,QACP,MACJ,KAAK8vF,eAAcE,oBACfhwF,KAAO,WACP,MACJ,KAAK8vF,eAAcG,KACfjwF,KAAO,MACP,MACJ,SACI,KAAM,IAAI1D,OAAM,2BAA6B+lC,QAErD,MAAOriC,OAOX0rB,kBAAkBqX,UAAU+3D,aAAe,SAAUnyE,OAAQsD,KACzD,GAAI0W,OAAQrnC,IACZA,MAAK+9F,gBAAgB,SAAU92D,OAC3BtW,IAAIwrE,MAAM,KAAMl1D,MAAMviC,MACtB2iC,MAAM83D,gBAAgBl4D,MAAM1/B,KAAMopB,MACnCtD,OAAQsD,IAAK,MAMpBP,kBAAkBqX,UAAUy3D,qBAAuB,SAAUr8F,OACzD,GAAqBgC,WAAYhC,MAAMgC,SACvC,MAAMA,oBAAqBE,eACvB,KAAM,IAAI/D,OAAM,sCAAwC4qC,KAAKC,UAAUhpC,OAE3E,IAAqB68F,OAAQ1/F,KAAKi+F,gBAAgBvtE,aAAa7rB,YAAc0iC,OACxDo4D,gBAAkB3/F,KAAKi+F,gBAAgBztE,YAAY3rB,YAAcA,SACtF,QACIH,KAAMi7F,gBAAgBj7F,KACtBmB,SAAU85F,gBAAgB95F,SAC1B6lC,QAASi0D,gBAAgBj0D,QAASg0D,MAAOA,QASjDtvE,kBAAkBqX,UAAUw3D,iBAAmB,SAAUp8F,MAAOypB,WAAYqE,KACxE,GAAI0W,OAAQrnC,KACR6U,GAAK7U,KAAKk/F,qBAAqBr8F,OAAQ6B,KAAOmQ,GAAGnQ,KAAMmB,SAAWgP,GAAGhP,SAAU6lC,QAAU72B,GAAG62B,QAASg0D,MAAQ7qF,GAAG6qF,KACpH,IAAI75F,UAAY7F,KAAK8+F,aAAc,CAC/B,GAAqBz9F,QAASrB,KAAK2+F,oBAAoBx5F,IAAIU,SAC7C,OAAVxE,SACAA,OAAS,SAAWrB,KAAK2+F,oBAAoB3d,KAC7ChhF,KAAK2+F,oBAAoBp5F,IAAIM,SAAUxE,SAE3CsvB,IAAIwrE,MAAM,KAAM96F,OAAS,KAU7B,GARIqqC,QAAQvpC,QACRwuB,IAAIwrE,MAAM,KAAMz3F,MAChBisB,IAAIwrE,MAAM,KAAM,KAChBxrE,IAAIwrE,MAAM,KAAMzwD,QAAQr2B,KAAK,OAG7Bsb,IAAIwrE,MAAM,KAAMz3F,MAEhB1E,KAAK++F,eAAiB,EAAG,CAMzB,GAAqBa,oBAAsBtzE,YAAcA,WAAWnqB,QAAW,EAC1D09F,sBAAwBH,OAAS,GAAKE,kBAC3D,IAAIA,mBAAqB,GAAKC,qBAAuB,EAAG,CAKpD,GAJAlvE,IAAIwrE,MAAM,KAAM,KACZyD,mBAAqB,GACrB5/F,KAAK+9F,gBAAgB,SAAUx2F,MAAQ,MAAOA,MAAK0pB,UAAUoW,MAAO1W,MAASrE,WAAYqE,IAAK,KAE9FkvE,qBAAuB,EACvB,IAAK,GAAqBj0F,GAAI,EAAGA,EAAIi0F,qBAAsBj0F,KACnDA,EAAI,GAAKg0F,mBAAqB,IAC9BjvE,IAAIwrE,MAAM,KAAM,KACpBxrE,IAAIwrE,MAAM,KAAM,MAGxBxrE,KAAIwrE,MAAM,KAAM,QAU5B/rE,kBAAkBqX,UAAU03D,gBAAkB,SAAU53F,KAAMopB,IAAKquE,aAC3Dz3F,OAAS4wB,gBACTxH,IAAIwrE,MAAM,KAAM,KAChBn8F,KAAKixB,UAAU1pB,KAAMopB,IAAKquE,eAG3B5uE,mBACTotE,wBAYmBjsE,kBAarBJ,iBAAgBlxB,cAAc6hB,gBAAgBg+E,MAC1C,gBACA,cACA,gBAEJ3uE,gBAAgBlxB,cAAc6hB,gBAAgBuB,OAAQ,YAEtD8N,gBAAgBlxB,cAAc6hB,gBAAgBi+E,KAC1C,eAAgB,YAAa,YAAa,YAAa,SACvD,SAAU,kBAAmB,kBAAmB,WAAY,cAC5D,UAAW,aAAc,YAAa,WAAY,SAClD,aAAc,gBAAiB,YAAa,eAAgB,cAEhE5uE,gBAAgBlxB,cAAc6hB,gBAAgBk+E,cAC1C,cACA,kBACA,YACA,YACA,YACA,eACA,gBACA,aACA,YACA,YACA,kBACA,cACA,cAEJ,IAAqBC,SAAU,UACVC,OAAS,SACTC,OAAS,SACTC,OAAS,SAuDTC,QACjB,4NACA,69BACA,4oCACA,mMACA,ilBACA,uBACA,2CACA,uBACA,wCACA,uBACA,kCACA,yCACA,mLACA,iJACA,eACA,yBACA,iCACA,iQACA,yHACA,sCACA,+BACA,4BACA,0BACA,8BACA,yCACA,6BACA,0BACA,uDACA,wCACA,qCACA,uGACA,iGACA,sOACA,mDACA,sBACA,wCACA,6BACA,2JACA,oJACA,wbACA,mEACA,+BACA,8BACA,6BACA,yHACA,yBACA,4HACA,8BACA,mDACA,2DACA,sCACA,kDACA,uIACA,yCACA,6EACA,wDACA,wBACA,gDACA,yBACA,2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,qBACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,2BACA,sBACA,+CACA,+CACA,+CACA,+CACA,6BACA,sBACA,sBACA,0BACA,2BACA,uBACA,2BACA,iCACA,0BACA,qBACA,2BACA,qBACA,oCACA,wBACA,4BACA,2BACA,qCACA,oBACA,qBACA,mBACA,uBACA,2BACA,sBACA,8BACA,+BACA,qCACA,2BACA,mDACA,yBACA,2BACA,mBACA,8CACA,6BACA,qBACA,mCACA,kCACA,kCACA,oBACA,0BACA,8BACA,2BACA,gFACA,yBACA,+BAEiBC,eACjBC,MAAS,YACTC,IAAO,UACPC,WAAc,aACdC,UAAa,YACbC,SAAY,WACZC,SAAY,YAEZ97D,yBAA4B,SAAU2d,QAEtC,QAAS3d,4BACL,GAAIuC,OAAQob,OAAOE,KAAK3iD,OAASA,IAqCjC,OApCAqnC,OAAMw5D,WACNR,OAAO5/F,QAAQ,SAAUqgG,aACrB,GAAIv5F,SACAsN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","file":"/home/travis/build/angular/angular/dist/packages-dist/compiler/bundles/compiler.umd.min.js","sourcesContent":["/**\n * @license Angular v4.0.0-rc.3-492153a\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@angular/core'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.compiler = global.ng.compiler || {}),global.ng.core));\n}(this, function (exports,_angular_core) { 'use strict';\n\n    var __extends = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * \\@stable\n     */\n    var VERSION = new _angular_core.Version('4.0.0-rc.3-492153a');\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A segment of text within the template.\n     */\n    var TextAst = (function () {\n        /**\n         * @param {?} value\n         * @param {?} ngContentIndex\n         * @param {?} sourceSpan\n         */\n        function TextAst(value, ngContentIndex, sourceSpan) {\n            this.value = value;\n            this.ngContentIndex = ngContentIndex;\n            this.sourceSpan = sourceSpan;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        TextAst.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n        return TextAst;\n    }());\n    /**\n     * A bound expression within the text of a template.\n     */\n    var BoundTextAst = (function () {\n        /**\n         * @param {?} value\n         * @param {?} ngContentIndex\n         * @param {?} sourceSpan\n         */\n        function BoundTextAst(value, ngContentIndex, sourceSpan) {\n            this.value = value;\n            this.ngContentIndex = ngContentIndex;\n            this.sourceSpan = sourceSpan;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        BoundTextAst.prototype.visit = function (visitor, context) {\n            return visitor.visitBoundText(this, context);\n        };\n        return BoundTextAst;\n    }());\n    /**\n     * A plain attribute on an element.\n     */\n    var AttrAst = (function () {\n        /**\n         * @param {?} name\n         * @param {?} value\n         * @param {?} sourceSpan\n         */\n        function AttrAst(name, value, sourceSpan) {\n            this.name = name;\n            this.value = value;\n            this.sourceSpan = sourceSpan;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        AttrAst.prototype.visit = function (visitor, context) { return visitor.visitAttr(this, context); };\n        return AttrAst;\n    }());\n    /**\n     * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n     * `[\\@trigger]=\"stateExp\"`)\n     */\n    var BoundElementPropertyAst = (function () {\n        /**\n         * @param {?} name\n         * @param {?} type\n         * @param {?} securityContext\n         * @param {?} value\n         * @param {?} unit\n         * @param {?} sourceSpan\n         */\n        function BoundElementPropertyAst(name, type, securityContext, value, unit, sourceSpan) {\n            this.name = name;\n            this.type = type;\n            this.securityContext = securityContext;\n            this.value = value;\n            this.unit = unit;\n            this.sourceSpan = sourceSpan;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        BoundElementPropertyAst.prototype.visit = function (visitor, context) {\n            return visitor.visitElementProperty(this, context);\n        };\n        Object.defineProperty(BoundElementPropertyAst.prototype, \"isAnimation\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.type === PropertyBindingType.Animation; },\n            enumerable: true,\n            configurable: true\n        });\n        return BoundElementPropertyAst;\n    }());\n    /**\n     * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n     * `(\\@trigger.phase)=\"callback($event)\"`).\n     */\n    var BoundEventAst = (function () {\n        /**\n         * @param {?} name\n         * @param {?} target\n         * @param {?} phase\n         * @param {?} handler\n         * @param {?} sourceSpan\n         */\n        function BoundEventAst(name, target, phase, handler, sourceSpan) {\n            this.name = name;\n            this.target = target;\n            this.phase = phase;\n            this.handler = handler;\n            this.sourceSpan = sourceSpan;\n        }\n        /**\n         * @param {?} name\n         * @param {?} target\n         * @param {?} phase\n         * @return {?}\n         */\n        BoundEventAst.calcFullName = function (name, target, phase) {\n            if (target) {\n                return target + \":\" + name;\n            }\n            else if (phase) {\n                return \"@\" + name + \".\" + phase;\n            }\n            else {\n                return name;\n            }\n        };\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        BoundEventAst.prototype.visit = function (visitor, context) {\n            return visitor.visitEvent(this, context);\n        };\n        Object.defineProperty(BoundEventAst.prototype, \"fullName\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return BoundEventAst.calcFullName(this.name, this.target, this.phase); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BoundEventAst.prototype, \"isAnimation\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return !!this.phase; },\n            enumerable: true,\n            configurable: true\n        });\n        return BoundEventAst;\n    }());\n    /**\n     * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n     */\n    var ReferenceAst = (function () {\n        /**\n         * @param {?} name\n         * @param {?} value\n         * @param {?} sourceSpan\n         */\n        function ReferenceAst(name, value, sourceSpan) {\n            this.name = name;\n            this.value = value;\n            this.sourceSpan = sourceSpan;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        ReferenceAst.prototype.visit = function (visitor, context) {\n            return visitor.visitReference(this, context);\n        };\n        return ReferenceAst;\n    }());\n    /**\n     * A variable declaration on a <ng-template> (e.g. `var-someName=\"someLocalName\"`).\n     */\n    var VariableAst = (function () {\n        /**\n         * @param {?} name\n         * @param {?} value\n         * @param {?} sourceSpan\n         */\n        function VariableAst(name, value, sourceSpan) {\n            this.name = name;\n            this.value = value;\n            this.sourceSpan = sourceSpan;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        VariableAst.prototype.visit = function (visitor, context) {\n            return visitor.visitVariable(this, context);\n        };\n        return VariableAst;\n    }());\n    /**\n     * An element declaration in a template.\n     */\n    var ElementAst = (function () {\n        /**\n         * @param {?} name\n         * @param {?} attrs\n         * @param {?} inputs\n         * @param {?} outputs\n         * @param {?} references\n         * @param {?} directives\n         * @param {?} providers\n         * @param {?} hasViewContainer\n         * @param {?} queryMatches\n         * @param {?} children\n         * @param {?} ngContentIndex\n         * @param {?} sourceSpan\n         * @param {?} endSourceSpan\n         */\n        function ElementAst(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan, endSourceSpan) {\n            this.name = name;\n            this.attrs = attrs;\n            this.inputs = inputs;\n            this.outputs = outputs;\n            this.references = references;\n            this.directives = directives;\n            this.providers = providers;\n            this.hasViewContainer = hasViewContainer;\n            this.queryMatches = queryMatches;\n            this.children = children;\n            this.ngContentIndex = ngContentIndex;\n            this.sourceSpan = sourceSpan;\n            this.endSourceSpan = endSourceSpan;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        ElementAst.prototype.visit = function (visitor, context) {\n            return visitor.visitElement(this, context);\n        };\n        return ElementAst;\n    }());\n    /**\n     * A `<ng-template>` element included in an Angular template.\n     */\n    var EmbeddedTemplateAst = (function () {\n        /**\n         * @param {?} attrs\n         * @param {?} outputs\n         * @param {?} references\n         * @param {?} variables\n         * @param {?} directives\n         * @param {?} providers\n         * @param {?} hasViewContainer\n         * @param {?} queryMatches\n         * @param {?} children\n         * @param {?} ngContentIndex\n         * @param {?} sourceSpan\n         */\n        function EmbeddedTemplateAst(attrs, outputs, references, variables, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan) {\n            this.attrs = attrs;\n            this.outputs = outputs;\n            this.references = references;\n            this.variables = variables;\n            this.directives = directives;\n            this.providers = providers;\n            this.hasViewContainer = hasViewContainer;\n            this.queryMatches = queryMatches;\n            this.children = children;\n            this.ngContentIndex = ngContentIndex;\n            this.sourceSpan = sourceSpan;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        EmbeddedTemplateAst.prototype.visit = function (visitor, context) {\n            return visitor.visitEmbeddedTemplate(this, context);\n        };\n        return EmbeddedTemplateAst;\n    }());\n    /**\n     * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n     */\n    var BoundDirectivePropertyAst = (function () {\n        /**\n         * @param {?} directiveName\n         * @param {?} templateName\n         * @param {?} value\n         * @param {?} sourceSpan\n         */\n        function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\n            this.directiveName = directiveName;\n            this.templateName = templateName;\n            this.value = value;\n            this.sourceSpan = sourceSpan;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        BoundDirectivePropertyAst.prototype.visit = function (visitor, context) {\n            return visitor.visitDirectiveProperty(this, context);\n        };\n        return BoundDirectivePropertyAst;\n    }());\n    /**\n     * A directive declared on an element.\n     */\n    var DirectiveAst = (function () {\n        /**\n         * @param {?} directive\n         * @param {?} inputs\n         * @param {?} hostProperties\n         * @param {?} hostEvents\n         * @param {?} contentQueryStartId\n         * @param {?} sourceSpan\n         */\n        function DirectiveAst(directive, inputs, hostProperties, hostEvents, contentQueryStartId, sourceSpan) {\n            this.directive = directive;\n            this.inputs = inputs;\n            this.hostProperties = hostProperties;\n            this.hostEvents = hostEvents;\n            this.contentQueryStartId = contentQueryStartId;\n            this.sourceSpan = sourceSpan;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        DirectiveAst.prototype.visit = function (visitor, context) {\n            return visitor.visitDirective(this, context);\n        };\n        return DirectiveAst;\n    }());\n    /**\n     * A provider declared on an element\n     */\n    var ProviderAst = (function () {\n        /**\n         * @param {?} token\n         * @param {?} multiProvider\n         * @param {?} eager\n         * @param {?} providers\n         * @param {?} providerType\n         * @param {?} lifecycleHooks\n         * @param {?} sourceSpan\n         */\n        function ProviderAst(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan) {\n            this.token = token;\n            this.multiProvider = multiProvider;\n            this.eager = eager;\n            this.providers = providers;\n            this.providerType = providerType;\n            this.lifecycleHooks = lifecycleHooks;\n            this.sourceSpan = sourceSpan;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        ProviderAst.prototype.visit = function (visitor, context) {\n            // No visit method in the visitor for now...\n            return null;\n        };\n        return ProviderAst;\n    }());\n    var ProviderAstType = {};\n    ProviderAstType.PublicService = 0;\n    ProviderAstType.PrivateService = 1;\n    ProviderAstType.Component = 2;\n    ProviderAstType.Directive = 3;\n    ProviderAstType.Builtin = 4;\n    ProviderAstType[ProviderAstType.PublicService] = \"PublicService\";\n    ProviderAstType[ProviderAstType.PrivateService] = \"PrivateService\";\n    ProviderAstType[ProviderAstType.Component] = \"Component\";\n    ProviderAstType[ProviderAstType.Directive] = \"Directive\";\n    ProviderAstType[ProviderAstType.Builtin] = \"Builtin\";\n    /**\n     * Position where content is to be projected (instance of `<ng-content>` in a template).\n     */\n    var NgContentAst = (function () {\n        /**\n         * @param {?} index\n         * @param {?} ngContentIndex\n         * @param {?} sourceSpan\n         */\n        function NgContentAst(index, ngContentIndex, sourceSpan) {\n            this.index = index;\n            this.ngContentIndex = ngContentIndex;\n            this.sourceSpan = sourceSpan;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        NgContentAst.prototype.visit = function (visitor, context) {\n            return visitor.visitNgContent(this, context);\n        };\n        return NgContentAst;\n    }());\n    var PropertyBindingType = {};\n    PropertyBindingType.Property = 0;\n    PropertyBindingType.Attribute = 1;\n    PropertyBindingType.Class = 2;\n    PropertyBindingType.Style = 3;\n    PropertyBindingType.Animation = 4;\n    PropertyBindingType[PropertyBindingType.Property] = \"Property\";\n    PropertyBindingType[PropertyBindingType.Attribute] = \"Attribute\";\n    PropertyBindingType[PropertyBindingType.Class] = \"Class\";\n    PropertyBindingType[PropertyBindingType.Style] = \"Style\";\n    PropertyBindingType[PropertyBindingType.Animation] = \"Animation\";\n    /**\n     * Visit every node in a list of {\\@link TemplateAst}s with the given {\\@link TemplateAstVisitor}.\n     * @param {?} visitor\n     * @param {?} asts\n     * @param {?=} context\n     * @return {?}\n     */\n    function templateVisitAll(visitor, asts, context) {\n        if (context === void 0) { context = null; }\n        var /** @type {?} */ result = [];\n        var /** @type {?} */ visit = visitor.visit ?\n            function (ast) { return visitor.visit(ast, context) || ast.visit(visitor, context); } :\n            function (ast) { return ast.visit(visitor, context); };\n        asts.forEach(function (ast) {\n            var /** @type {?} */ astResult = visit(ast);\n            if (astResult) {\n                result.push(astResult);\n            }\n        });\n        return result;\n    }\n    /**\n     * A token representing the a reference to a static type.\n     *\n     * This token is unique for a filePath and name and can be used as a hash table key.\n     */\n    var StaticSymbol = (function () {\n        /**\n         * @param {?} filePath\n         * @param {?} name\n         * @param {?} members\n         */\n        function StaticSymbol(filePath, name, members) {\n            this.filePath = filePath;\n            this.name = name;\n            this.members = members;\n        }\n        /**\n         * @return {?}\n         */\n        StaticSymbol.prototype.assertNoMembers = function () {\n            if (this.members.length) {\n                throw new Error(\"Illegal state: symbol without members expected, but got \" + JSON.stringify(this) + \".\");\n            }\n        };\n        return StaticSymbol;\n    }());\n    /**\n     * A cache of static symbol used by the StaticReflector to return the same symbol for the\n     * same symbol values.\n     */\n    var StaticSymbolCache = (function () {\n        function StaticSymbolCache() {\n            this.cache = new Map();\n        }\n        /**\n         * @param {?} declarationFile\n         * @param {?} name\n         * @param {?=} members\n         * @return {?}\n         */\n        StaticSymbolCache.prototype.get = function (declarationFile, name, members) {\n            members = members || [];\n            var /** @type {?} */ memberSuffix = members.length ? \".\" + members.join('.') : '';\n            var /** @type {?} */ key = \"\\\"\" + declarationFile + \"\\\".\" + name + memberSuffix;\n            var /** @type {?} */ result = this.cache.get(key);\n            if (!result) {\n                result = new StaticSymbol(declarationFile, name, members);\n                this.cache.set(key, result);\n            }\n            return result;\n        };\n        return StaticSymbolCache;\n    }());\n    var TagContentType = {};\n    TagContentType.RAW_TEXT = 0;\n    TagContentType.ESCAPABLE_RAW_TEXT = 1;\n    TagContentType.PARSABLE_DATA = 2;\n    TagContentType[TagContentType.RAW_TEXT] = \"RAW_TEXT\";\n    TagContentType[TagContentType.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\n    TagContentType[TagContentType.PARSABLE_DATA] = \"PARSABLE_DATA\";\n    /**\n     * @param {?} elementName\n     * @return {?}\n     */\n    function splitNsName(elementName) {\n        if (elementName[0] != ':') {\n            return [null, elementName];\n        }\n        var /** @type {?} */ colonIndex = elementName.indexOf(':', 1);\n        if (colonIndex == -1) {\n            throw new Error(\"Unsupported format \\\"\" + elementName + \"\\\" expecting \\\":namespace:name\\\"\");\n        }\n        return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n    }\n    /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    function getNsPrefix(fullName) {\n        return fullName === null ? null : splitNsName(fullName)[0];\n    }\n    /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @return {?}\n     */\n    function mergeNsAndName(prefix, localName) {\n        return prefix ? \":\" + prefix + \":\" + localName : localName;\n    }\n    // see http://www.w3.org/TR/html51/syntax.html#named-character-references\n    // see https://html.spec.whatwg.org/multipage/entities.json\n    // This list is not exhaustive to keep the compiler footprint low.\n    // The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not exist.\n    var /** @type {?} */ NAMED_ENTITIES = {\n        'Aacute': '\\u00C1',\n        'aacute': '\\u00E1',\n        'Acirc': '\\u00C2',\n        'acirc': '\\u00E2',\n        'acute': '\\u00B4',\n        'AElig': '\\u00C6',\n        'aelig': '\\u00E6',\n        'Agrave': '\\u00C0',\n        'agrave': '\\u00E0',\n        'alefsym': '\\u2135',\n        'Alpha': '\\u0391',\n        'alpha': '\\u03B1',\n        'amp': '&',\n        'and': '\\u2227',\n        'ang': '\\u2220',\n        'apos': '\\u0027',\n        'Aring': '\\u00C5',\n        'aring': '\\u00E5',\n        'asymp': '\\u2248',\n        'Atilde': '\\u00C3',\n        'atilde': '\\u00E3',\n        'Auml': '\\u00C4',\n        'auml': '\\u00E4',\n        'bdquo': '\\u201E',\n        'Beta': '\\u0392',\n        'beta': '\\u03B2',\n        'brvbar': '\\u00A6',\n        'bull': '\\u2022',\n        'cap': '\\u2229',\n        'Ccedil': '\\u00C7',\n        'ccedil': '\\u00E7',\n        'cedil': '\\u00B8',\n        'cent': '\\u00A2',\n        'Chi': '\\u03A7',\n        'chi': '\\u03C7',\n        'circ': '\\u02C6',\n        'clubs': '\\u2663',\n        'cong': '\\u2245',\n        'copy': '\\u00A9',\n        'crarr': '\\u21B5',\n        'cup': '\\u222A',\n        'curren': '\\u00A4',\n        'dagger': '\\u2020',\n        'Dagger': '\\u2021',\n        'darr': '\\u2193',\n        'dArr': '\\u21D3',\n        'deg': '\\u00B0',\n        'Delta': '\\u0394',\n        'delta': '\\u03B4',\n        'diams': '\\u2666',\n        'divide': '\\u00F7',\n        'Eacute': '\\u00C9',\n        'eacute': '\\u00E9',\n        'Ecirc': '\\u00CA',\n        'ecirc': '\\u00EA',\n        'Egrave': '\\u00C8',\n        'egrave': '\\u00E8',\n        'empty': '\\u2205',\n        'emsp': '\\u2003',\n        'ensp': '\\u2002',\n        'Epsilon': '\\u0395',\n        'epsilon': '\\u03B5',\n        'equiv': '\\u2261',\n        'Eta': '\\u0397',\n        'eta': '\\u03B7',\n        'ETH': '\\u00D0',\n        'eth': '\\u00F0',\n        'Euml': '\\u00CB',\n        'euml': '\\u00EB',\n        'euro': '\\u20AC',\n        'exist': '\\u2203',\n        'fnof': '\\u0192',\n        'forall': '\\u2200',\n        'frac12': '\\u00BD',\n        'frac14': '\\u00BC',\n        'frac34': '\\u00BE',\n        'frasl': '\\u2044',\n        'Gamma': '\\u0393',\n        'gamma': '\\u03B3',\n        'ge': '\\u2265',\n        'gt': '>',\n        'harr': '\\u2194',\n        'hArr': '\\u21D4',\n        'hearts': '\\u2665',\n        'hellip': '\\u2026',\n        'Iacute': '\\u00CD',\n        'iacute': '\\u00ED',\n        'Icirc': '\\u00CE',\n        'icirc': '\\u00EE',\n        'iexcl': '\\u00A1',\n        'Igrave': '\\u00CC',\n        'igrave': '\\u00EC',\n        'image': '\\u2111',\n        'infin': '\\u221E',\n        'int': '\\u222B',\n        'Iota': '\\u0399',\n        'iota': '\\u03B9',\n        'iquest': '\\u00BF',\n        'isin': '\\u2208',\n        'Iuml': '\\u00CF',\n        'iuml': '\\u00EF',\n        'Kappa': '\\u039A',\n        'kappa': '\\u03BA',\n        'Lambda': '\\u039B',\n        'lambda': '\\u03BB',\n        'lang': '\\u27E8',\n        'laquo': '\\u00AB',\n        'larr': '\\u2190',\n        'lArr': '\\u21D0',\n        'lceil': '\\u2308',\n        'ldquo': '\\u201C',\n        'le': '\\u2264',\n        'lfloor': '\\u230A',\n        'lowast': '\\u2217',\n        'loz': '\\u25CA',\n        'lrm': '\\u200E',\n        'lsaquo': '\\u2039',\n        'lsquo': '\\u2018',\n        'lt': '<',\n        'macr': '\\u00AF',\n        'mdash': '\\u2014',\n        'micro': '\\u00B5',\n        'middot': '\\u00B7',\n        'minus': '\\u2212',\n        'Mu': '\\u039C',\n        'mu': '\\u03BC',\n        'nabla': '\\u2207',\n        'nbsp': '\\u00A0',\n        'ndash': '\\u2013',\n        'ne': '\\u2260',\n        'ni': '\\u220B',\n        'not': '\\u00AC',\n        'notin': '\\u2209',\n        'nsub': '\\u2284',\n        'Ntilde': '\\u00D1',\n        'ntilde': '\\u00F1',\n        'Nu': '\\u039D',\n        'nu': '\\u03BD',\n        'Oacute': '\\u00D3',\n        'oacute': '\\u00F3',\n        'Ocirc': '\\u00D4',\n        'ocirc': '\\u00F4',\n        'OElig': '\\u0152',\n        'oelig': '\\u0153',\n        'Ograve': '\\u00D2',\n        'ograve': '\\u00F2',\n        'oline': '\\u203E',\n        'Omega': '\\u03A9',\n        'omega': '\\u03C9',\n        'Omicron': '\\u039F',\n        'omicron': '\\u03BF',\n        'oplus': '\\u2295',\n        'or': '\\u2228',\n        'ordf': '\\u00AA',\n        'ordm': '\\u00BA',\n        'Oslash': '\\u00D8',\n        'oslash': '\\u00F8',\n        'Otilde': '\\u00D5',\n        'otilde': '\\u00F5',\n        'otimes': '\\u2297',\n        'Ouml': '\\u00D6',\n        'ouml': '\\u00F6',\n        'para': '\\u00B6',\n        'permil': '\\u2030',\n        'perp': '\\u22A5',\n        'Phi': '\\u03A6',\n        'phi': '\\u03C6',\n        'Pi': '\\u03A0',\n        'pi': '\\u03C0',\n        'piv': '\\u03D6',\n        'plusmn': '\\u00B1',\n        'pound': '\\u00A3',\n        'prime': '\\u2032',\n        'Prime': '\\u2033',\n        'prod': '\\u220F',\n        'prop': '\\u221D',\n        'Psi': '\\u03A8',\n        'psi': '\\u03C8',\n        'quot': '\\u0022',\n        'radic': '\\u221A',\n        'rang': '\\u27E9',\n        'raquo': '\\u00BB',\n        'rarr': '\\u2192',\n        'rArr': '\\u21D2',\n        'rceil': '\\u2309',\n        'rdquo': '\\u201D',\n        'real': '\\u211C',\n        'reg': '\\u00AE',\n        'rfloor': '\\u230B',\n        'Rho': '\\u03A1',\n        'rho': '\\u03C1',\n        'rlm': '\\u200F',\n        'rsaquo': '\\u203A',\n        'rsquo': '\\u2019',\n        'sbquo': '\\u201A',\n        'Scaron': '\\u0160',\n        'scaron': '\\u0161',\n        'sdot': '\\u22C5',\n        'sect': '\\u00A7',\n        'shy': '\\u00AD',\n        'Sigma': '\\u03A3',\n        'sigma': '\\u03C3',\n        'sigmaf': '\\u03C2',\n        'sim': '\\u223C',\n        'spades': '\\u2660',\n        'sub': '\\u2282',\n        'sube': '\\u2286',\n        'sum': '\\u2211',\n        'sup': '\\u2283',\n        'sup1': '\\u00B9',\n        'sup2': '\\u00B2',\n        'sup3': '\\u00B3',\n        'supe': '\\u2287',\n        'szlig': '\\u00DF',\n        'Tau': '\\u03A4',\n        'tau': '\\u03C4',\n        'there4': '\\u2234',\n        'Theta': '\\u0398',\n        'theta': '\\u03B8',\n        'thetasym': '\\u03D1',\n        'thinsp': '\\u2009',\n        'THORN': '\\u00DE',\n        'thorn': '\\u00FE',\n        'tilde': '\\u02DC',\n        'times': '\\u00D7',\n        'trade': '\\u2122',\n        'Uacute': '\\u00DA',\n        'uacute': '\\u00FA',\n        'uarr': '\\u2191',\n        'uArr': '\\u21D1',\n        'Ucirc': '\\u00DB',\n        'ucirc': '\\u00FB',\n        'Ugrave': '\\u00D9',\n        'ugrave': '\\u00F9',\n        'uml': '\\u00A8',\n        'upsih': '\\u03D2',\n        'Upsilon': '\\u03A5',\n        'upsilon': '\\u03C5',\n        'Uuml': '\\u00DC',\n        'uuml': '\\u00FC',\n        'weierp': '\\u2118',\n        'Xi': '\\u039E',\n        'xi': '\\u03BE',\n        'Yacute': '\\u00DD',\n        'yacute': '\\u00FD',\n        'yen': '\\u00A5',\n        'yuml': '\\u00FF',\n        'Yuml': '\\u0178',\n        'Zeta': '\\u0396',\n        'zeta': '\\u03B6',\n        'zwj': '\\u200D',\n        'zwnj': '\\u200C',\n    };\n    var HtmlTagDefinition = (function () {\n        /**\n         * @param {?=} __0\n         */\n        function HtmlTagDefinition(_a) {\n            var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, _c = _b.contentType, contentType = _c === void 0 ? TagContentType.PARSABLE_DATA : _c, _d = _b.closedByParent, closedByParent = _d === void 0 ? false : _d, _e = _b.isVoid, isVoid = _e === void 0 ? false : _e, _f = _b.ignoreFirstLf, ignoreFirstLf = _f === void 0 ? false : _f;\n            var _this = this;\n            this.closedByChildren = {};\n            this.closedByParent = false;\n            this.canSelfClose = false;\n            if (closedByChildren && closedByChildren.length > 0) {\n                closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\n            }\n            this.isVoid = isVoid;\n            this.closedByParent = closedByParent || isVoid;\n            if (requiredParents && requiredParents.length > 0) {\n                this.requiredParents = {};\n                // The first parent is the list is automatically when none of the listed parents are present\n                this.parentToAdd = requiredParents[0];\n                requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\n            }\n            this.implicitNamespacePrefix = implicitNamespacePrefix;\n            this.contentType = contentType;\n            this.ignoreFirstLf = ignoreFirstLf;\n        }\n        /**\n         * @param {?} currentParent\n         * @return {?}\n         */\n        HtmlTagDefinition.prototype.requireExtraParent = function (currentParent) {\n            if (!this.requiredParents) {\n                return false;\n            }\n            if (!currentParent) {\n                return true;\n            }\n            var /** @type {?} */ lcParent = currentParent.toLowerCase();\n            var /** @type {?} */ isParentTemplate = lcParent === 'template' || currentParent === 'ng-template';\n            return !isParentTemplate && this.requiredParents[lcParent] != true;\n        };\n        /**\n         * @param {?} name\n         * @return {?}\n         */\n        HtmlTagDefinition.prototype.isClosedByChild = function (name) {\n            return this.isVoid || name.toLowerCase() in this.closedByChildren;\n        };\n        return HtmlTagDefinition;\n    }());\n    // see http://www.w3.org/TR/html51/syntax.html#optional-tags\n    // This implementation does not fully conform to the HTML5 spec.\n    var /** @type {?} */ TAG_DEFINITIONS = {\n        'base': new HtmlTagDefinition({ isVoid: true }),\n        'meta': new HtmlTagDefinition({ isVoid: true }),\n        'area': new HtmlTagDefinition({ isVoid: true }),\n        'embed': new HtmlTagDefinition({ isVoid: true }),\n        'link': new HtmlTagDefinition({ isVoid: true }),\n        'img': new HtmlTagDefinition({ isVoid: true }),\n        'input': new HtmlTagDefinition({ isVoid: true }),\n        'param': new HtmlTagDefinition({ isVoid: true }),\n        'hr': new HtmlTagDefinition({ isVoid: true }),\n        'br': new HtmlTagDefinition({ isVoid: true }),\n        'source': new HtmlTagDefinition({ isVoid: true }),\n        'track': new HtmlTagDefinition({ isVoid: true }),\n        'wbr': new HtmlTagDefinition({ isVoid: true }),\n        'p': new HtmlTagDefinition({\n            closedByChildren: [\n                'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset', 'footer', 'form',\n                'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr',\n                'main', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'\n            ],\n            closedByParent: true\n        }),\n        'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n        'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n        'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n        'tr': new HtmlTagDefinition({\n            closedByChildren: ['tr'],\n            requiredParents: ['tbody', 'tfoot', 'thead'],\n            closedByParent: true\n        }),\n        'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n        'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n        'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n        'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n        'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n        'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n        'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n        'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n        'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n        'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n        'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n        'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n        'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n        'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n        'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n        'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n        'style': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n        'script': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n        'title': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT }),\n        'textarea': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n    };\n    var /** @type {?} */ _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n    /**\n     * @param {?} tagName\n     * @return {?}\n     */\n    function getHtmlTagDefinition(tagName) {\n        return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n    }\n    var /** @type {?} */ _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' +\n        '([-\\\\w]+)|' +\n        '(?:\\\\.([-\\\\w]+))|' +\n        // \"-\" should appear first in the regexp below as FF31 parses \"[.-\\w]\" as a range\n        '(?:\\\\[([-.\\\\w*]+)(?:=([\\\"\\']?)([^\\\\]\\\"\\']*)\\\\5)?\\\\])|' +\n        // \"[name=\"value\"]\",\n        // \"[name='value']\"\n        '(\\\\))|' +\n        '(\\\\s*,\\\\s*)', // \",\"\n    'g');\n    /**\n     * A css selector contains an element name,\n     * css classes and attribute/value pairs with the purpose\n     * of selecting subsets out of them.\n     */\n    var CssSelector = (function () {\n        function CssSelector() {\n            this.element = null;\n            this.classNames = [];\n            this.attrs = [];\n            this.notSelectors = [];\n        }\n        /**\n         * @param {?} selector\n         * @return {?}\n         */\n        CssSelector.parse = function (selector) {\n            var /** @type {?} */ results = [];\n            var /** @type {?} */ _addResult = function (res, cssSel) {\n                if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n                    cssSel.attrs.length == 0) {\n                    cssSel.element = '*';\n                }\n                res.push(cssSel);\n            };\n            var /** @type {?} */ cssSelector = new CssSelector();\n            var /** @type {?} */ match;\n            var /** @type {?} */ current = cssSelector;\n            var /** @type {?} */ inNot = false;\n            _SELECTOR_REGEXP.lastIndex = 0;\n            while (match = _SELECTOR_REGEXP.exec(selector)) {\n                if (match[1]) {\n                    if (inNot) {\n                        throw new Error('Nesting :not is not allowed in a selector');\n                    }\n                    inNot = true;\n                    current = new CssSelector();\n                    cssSelector.notSelectors.push(current);\n                }\n                if (match[2]) {\n                    current.setElement(match[2]);\n                }\n                if (match[3]) {\n                    current.addClassName(match[3]);\n                }\n                if (match[4]) {\n                    current.addAttribute(match[4], match[6]);\n                }\n                if (match[7]) {\n                    inNot = false;\n                    current = cssSelector;\n                }\n                if (match[8]) {\n                    if (inNot) {\n                        throw new Error('Multiple selectors in :not are not supported');\n                    }\n                    _addResult(results, cssSelector);\n                    cssSelector = current = new CssSelector();\n                }\n            }\n            _addResult(results, cssSelector);\n            return results;\n        };\n        /**\n         * @return {?}\n         */\n        CssSelector.prototype.isElementSelector = function () {\n            return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n                this.notSelectors.length === 0;\n        };\n        /**\n         * @return {?}\n         */\n        CssSelector.prototype.hasElementSelector = function () { return !!this.element; };\n        /**\n         * @param {?=} element\n         * @return {?}\n         */\n        CssSelector.prototype.setElement = function (element) {\n            if (element === void 0) { element = null; }\n            this.element = element;\n        };\n        /**\n         * Gets a template string for an element that matches the selector.\n         * @return {?}\n         */\n        CssSelector.prototype.getMatchingElementTemplate = function () {\n            var /** @type {?} */ tagName = this.element || 'div';\n            var /** @type {?} */ classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\n            var /** @type {?} */ attrs = '';\n            for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n                var /** @type {?} */ attrName = this.attrs[i];\n                var /** @type {?} */ attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\n                attrs += \" \" + attrName + attrValue;\n            }\n            return getHtmlTagDefinition(tagName).isVoid ? \"<\" + tagName + classAttr + attrs + \"/>\" :\n                \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\n        };\n        /**\n         * @param {?} name\n         * @param {?=} value\n         * @return {?}\n         */\n        CssSelector.prototype.addAttribute = function (name, value) {\n            if (value === void 0) { value = ''; }\n            this.attrs.push(name, value && value.toLowerCase() || '');\n        };\n        /**\n         * @param {?} name\n         * @return {?}\n         */\n        CssSelector.prototype.addClassName = function (name) { this.classNames.push(name.toLowerCase()); };\n        /**\n         * @return {?}\n         */\n        CssSelector.prototype.toString = function () {\n            var /** @type {?} */ res = this.element || '';\n            if (this.classNames) {\n                this.classNames.forEach(function (klass) { return res += \".\" + klass; });\n            }\n            if (this.attrs) {\n                for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n                    var /** @type {?} */ name = this.attrs[i];\n                    var /** @type {?} */ value = this.attrs[i + 1];\n                    res += \"[\" + name + (value ? '=' + value : '') + \"]\";\n                }\n            }\n            this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\n            return res;\n        };\n        return CssSelector;\n    }());\n    /**\n     * Reads a list of CssSelectors and allows to calculate which ones\n     * are contained in a given CssSelector.\n     */\n    var SelectorMatcher = (function () {\n        function SelectorMatcher() {\n            this._elementMap = new Map();\n            this._elementPartialMap = new Map();\n            this._classMap = new Map();\n            this._classPartialMap = new Map();\n            this._attrValueMap = new Map();\n            this._attrValuePartialMap = new Map();\n            this._listContexts = [];\n        }\n        /**\n         * @param {?} notSelectors\n         * @return {?}\n         */\n        SelectorMatcher.createNotMatcher = function (notSelectors) {\n            var /** @type {?} */ notMatcher = new SelectorMatcher();\n            notMatcher.addSelectables(notSelectors, null);\n            return notMatcher;\n        };\n        /**\n         * @param {?} cssSelectors\n         * @param {?=} callbackCtxt\n         * @return {?}\n         */\n        SelectorMatcher.prototype.addSelectables = function (cssSelectors, callbackCtxt) {\n            var /** @type {?} */ listContext = null;\n            if (cssSelectors.length > 1) {\n                listContext = new SelectorListContext(cssSelectors);\n                this._listContexts.push(listContext);\n            }\n            for (var /** @type {?} */ i = 0; i < cssSelectors.length; i++) {\n                this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n            }\n        };\n        /**\n         * Add an object that can be found later on by calling `match`.\n         * @param {?} cssSelector A css selector\n         * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n         * @param {?} listContext\n         * @return {?}\n         */\n        SelectorMatcher.prototype._addSelectable = function (cssSelector, callbackCtxt, listContext) {\n            var /** @type {?} */ matcher = this;\n            var /** @type {?} */ element = cssSelector.element;\n            var /** @type {?} */ classNames = cssSelector.classNames;\n            var /** @type {?} */ attrs = cssSelector.attrs;\n            var /** @type {?} */ selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n            if (element) {\n                var /** @type {?} */ isTerminal = attrs.length === 0 && classNames.length === 0;\n                if (isTerminal) {\n                    this._addTerminal(matcher._elementMap, element, selectable);\n                }\n                else {\n                    matcher = this._addPartial(matcher._elementPartialMap, element);\n                }\n            }\n            if (classNames) {\n                for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                    var /** @type {?} */ isTerminal = attrs.length === 0 && i === classNames.length - 1;\n                    var /** @type {?} */ className = classNames[i];\n                    if (isTerminal) {\n                        this._addTerminal(matcher._classMap, className, selectable);\n                    }\n                    else {\n                        matcher = this._addPartial(matcher._classPartialMap, className);\n                    }\n                }\n            }\n            if (attrs) {\n                for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                    var /** @type {?} */ isTerminal = i === attrs.length - 2;\n                    var /** @type {?} */ name = attrs[i];\n                    var /** @type {?} */ value = attrs[i + 1];\n                    if (isTerminal) {\n                        var /** @type {?} */ terminalMap = matcher._attrValueMap;\n                        var /** @type {?} */ terminalValuesMap = terminalMap.get(name);\n                        if (!terminalValuesMap) {\n                            terminalValuesMap = new Map();\n                            terminalMap.set(name, terminalValuesMap);\n                        }\n                        this._addTerminal(terminalValuesMap, value, selectable);\n                    }\n                    else {\n                        var /** @type {?} */ partialMap = matcher._attrValuePartialMap;\n                        var /** @type {?} */ partialValuesMap = partialMap.get(name);\n                        if (!partialValuesMap) {\n                            partialValuesMap = new Map();\n                            partialMap.set(name, partialValuesMap);\n                        }\n                        matcher = this._addPartial(partialValuesMap, value);\n                    }\n                }\n            }\n        };\n        /**\n         * @param {?} map\n         * @param {?} name\n         * @param {?} selectable\n         * @return {?}\n         */\n        SelectorMatcher.prototype._addTerminal = function (map, name, selectable) {\n            var /** @type {?} */ terminalList = map.get(name);\n            if (!terminalList) {\n                terminalList = [];\n                map.set(name, terminalList);\n            }\n            terminalList.push(selectable);\n        };\n        /**\n         * @param {?} map\n         * @param {?} name\n         * @return {?}\n         */\n        SelectorMatcher.prototype._addPartial = function (map, name) {\n            var /** @type {?} */ matcher = map.get(name);\n            if (!matcher) {\n                matcher = new SelectorMatcher();\n                map.set(name, matcher);\n            }\n            return matcher;\n        };\n        /**\n         * Find the objects that have been added via `addSelectable`\n         * whose css selector is contained in the given css selector.\n         * @param {?} cssSelector A css selector\n         * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n         * @return {?} boolean true if a match was found\n         */\n        SelectorMatcher.prototype.match = function (cssSelector, matchedCallback) {\n            var /** @type {?} */ result = false;\n            var /** @type {?} */ element = cssSelector.element;\n            var /** @type {?} */ classNames = cssSelector.classNames;\n            var /** @type {?} */ attrs = cssSelector.attrs;\n            for (var /** @type {?} */ i = 0; i < this._listContexts.length; i++) {\n                this._listContexts[i].alreadyMatched = false;\n            }\n            result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n            result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n                result;\n            if (classNames) {\n                for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                    var /** @type {?} */ className = classNames[i];\n                    result =\n                        this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n                    result =\n                        this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n                            result;\n                }\n            }\n            if (attrs) {\n                for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                    var /** @type {?} */ name = attrs[i];\n                    var /** @type {?} */ value = attrs[i + 1];\n                    var /** @type {?} */ terminalValuesMap = this._attrValueMap.get(name);\n                    if (value) {\n                        result =\n                            this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n                    }\n                    result =\n                        this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n                    var /** @type {?} */ partialValuesMap = this._attrValuePartialMap.get(name);\n                    if (value) {\n                        result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n                    }\n                    result =\n                        this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n                }\n            }\n            return result;\n        };\n        /**\n         * \\@internal\n         * @param {?} map\n         * @param {?} name\n         * @param {?} cssSelector\n         * @param {?} matchedCallback\n         * @return {?}\n         */\n        SelectorMatcher.prototype._matchTerminal = function (map, name, cssSelector, matchedCallback) {\n            if (!map || typeof name !== 'string') {\n                return false;\n            }\n            var /** @type {?} */ selectables = map.get(name) || [];\n            var /** @type {?} */ starSelectables = map.get('*');\n            if (starSelectables) {\n                selectables = selectables.concat(starSelectables);\n            }\n            if (selectables.length === 0) {\n                return false;\n            }\n            var /** @type {?} */ selectable;\n            var /** @type {?} */ result = false;\n            for (var /** @type {?} */ i = 0; i < selectables.length; i++) {\n                selectable = selectables[i];\n                result = selectable.finalize(cssSelector, matchedCallback) || result;\n            }\n            return result;\n        };\n        /**\n         * \\@internal\n         * @param {?} map\n         * @param {?} name\n         * @param {?} cssSelector\n         * @param {?} matchedCallback\n         * @return {?}\n         */\n        SelectorMatcher.prototype._matchPartial = function (map, name, cssSelector, matchedCallback) {\n            if (!map || typeof name !== 'string') {\n                return false;\n            }\n            var /** @type {?} */ nestedSelector = map.get(name);\n            if (!nestedSelector) {\n                return false;\n            }\n            // TODO(perf): get rid of recursion and measure again\n            // TODO(perf): don't pass the whole selector into the recursion,\n            // but only the not processed parts\n            return nestedSelector.match(cssSelector, matchedCallback);\n        };\n        return SelectorMatcher;\n    }());\n    var SelectorListContext = (function () {\n        /**\n         * @param {?} selectors\n         */\n        function SelectorListContext(selectors) {\n            this.selectors = selectors;\n            this.alreadyMatched = false;\n        }\n        return SelectorListContext;\n    }());\n    var SelectorContext = (function () {\n        /**\n         * @param {?} selector\n         * @param {?} cbContext\n         * @param {?} listContext\n         */\n        function SelectorContext(selector, cbContext, listContext) {\n            this.selector = selector;\n            this.cbContext = cbContext;\n            this.listContext = listContext;\n            this.notSelectors = selector.notSelectors;\n        }\n        /**\n         * @param {?} cssSelector\n         * @param {?} callback\n         * @return {?}\n         */\n        SelectorContext.prototype.finalize = function (cssSelector, callback) {\n            var /** @type {?} */ result = true;\n            if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n                var /** @type {?} */ notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n                result = !notMatcher.match(cssSelector, null);\n            }\n            if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n                if (this.listContext) {\n                    this.listContext.alreadyMatched = true;\n                }\n                callback(this.selector, this.cbContext);\n            }\n            return result;\n        };\n        return SelectorContext;\n    }());\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MODULE_SUFFIX = '';\n    var /** @type {?} */ DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    function dashCaseToCamelCase(input) {\n        return input.replace(DASH_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return m[1].toUpperCase();\n        });\n    }\n    /**\n     * @param {?} input\n     * @param {?} defaultValues\n     * @return {?}\n     */\n    function splitAtColon(input, defaultValues) {\n        return _splitAt(input, ':', defaultValues);\n    }\n    /**\n     * @param {?} input\n     * @param {?} defaultValues\n     * @return {?}\n     */\n    function splitAtPeriod(input, defaultValues) {\n        return _splitAt(input, '.', defaultValues);\n    }\n    /**\n     * @param {?} input\n     * @param {?} character\n     * @param {?} defaultValues\n     * @return {?}\n     */\n    function _splitAt(input, character, defaultValues) {\n        var /** @type {?} */ characterIndex = input.indexOf(character);\n        if (characterIndex == -1)\n            return defaultValues;\n        return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n    }\n    /**\n     * @param {?} value\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function visitValue(value, visitor, context) {\n        if (Array.isArray(value)) {\n            return visitor.visitArray(/** @type {?} */ (value), context);\n        }\n        if (isStrictStringMap(value)) {\n            return visitor.visitStringMap(/** @type {?} */ (value), context);\n        }\n        if (value == null || typeof value == 'string' || typeof value == 'number' ||\n            typeof value == 'boolean') {\n            return visitor.visitPrimitive(value, context);\n        }\n        return visitor.visitOther(value, context);\n    }\n    var ValueTransformer = (function () {\n        function ValueTransformer() {\n        }\n        /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        ValueTransformer.prototype.visitArray = function (arr, context) {\n            var _this = this;\n            return arr.map(function (value) { return visitValue(value, _this, context); });\n        };\n        /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        ValueTransformer.prototype.visitStringMap = function (map, context) {\n            var _this = this;\n            var /** @type {?} */ result = {};\n            Object.keys(map).forEach(function (key) { result[key] = visitValue(map[key], _this, context); });\n            return result;\n        };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        ValueTransformer.prototype.visitPrimitive = function (value, context) { return value; };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        ValueTransformer.prototype.visitOther = function (value, context) { return value; };\n        return ValueTransformer;\n    }());\n    var SyncAsyncResult = (function () {\n        /**\n         * @param {?} syncResult\n         * @param {?=} asyncResult\n         */\n        function SyncAsyncResult(syncResult, asyncResult) {\n            if (asyncResult === void 0) { asyncResult = null; }\n            this.syncResult = syncResult;\n            this.asyncResult = asyncResult;\n            if (!asyncResult) {\n                this.asyncResult = Promise.resolve(syncResult);\n            }\n        }\n        return SyncAsyncResult;\n    }());\n    /**\n     * @param {?} msg\n     * @return {?}\n     */\n    function syntaxError(msg) {\n        var /** @type {?} */ error = Error(msg);\n        ((error))[ERROR_SYNTAX_ERROR] = true;\n        return error;\n    }\n    var /** @type {?} */ ERROR_SYNTAX_ERROR = 'ngSyntaxError';\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    function isSyntaxError(error) {\n        return ((error))[ERROR_SYNTAX_ERROR];\n    }\n    /**\n     * @param {?} s\n     * @return {?}\n     */\n    function escapeRegExp(s) {\n        return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n    }\n    var /** @type {?} */ STRING_MAP_PROTO = Object.getPrototypeOf({});\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function isStrictStringMap(obj) {\n        return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n    }\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    function utf8Encode(str) {\n        var /** @type {?} */ encoded = '';\n        for (var /** @type {?} */ index = 0; index < str.length; index++) {\n            var /** @type {?} */ codePoint = str.charCodeAt(index);\n            // decode surrogate\n            // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            if (codePoint >= 0xd800 && codePoint <= 0xdbff && str.length > (index + 1)) {\n                var /** @type {?} */ low = str.charCodeAt(index + 1);\n                if (low >= 0xdc00 && low <= 0xdfff) {\n                    index++;\n                    codePoint = ((codePoint - 0xd800) << 10) + low - 0xdc00 + 0x10000;\n                }\n            }\n            if (codePoint <= 0x7f) {\n                encoded += String.fromCharCode(codePoint);\n            }\n            else if (codePoint <= 0x7ff) {\n                encoded += String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xc0, (codePoint & 0x3f) | 0x80);\n            }\n            else if (codePoint <= 0xffff) {\n                encoded += String.fromCharCode((codePoint >> 12) | 0xe0, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n            }\n            else if (codePoint <= 0x1fffff) {\n                encoded += String.fromCharCode(((codePoint >> 18) & 0x07) | 0xf0, ((codePoint >> 12) & 0x3f) | 0x80, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n            }\n        }\n        return encoded;\n    }\n    // group 0: \"[prop] or (event) or @trigger\"\n    // group 1: \"prop\" from \"[prop]\"\n    // group 2: \"event\" from \"(event)\"\n    // group 3: \"@trigger\" from \"@trigger\"\n    var /** @type {?} */ HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\n    var CompileAnimationEntryMetadata = (function () {\n        /**\n         * @param {?=} name\n         * @param {?=} definitions\n         */\n        function CompileAnimationEntryMetadata(name, definitions) {\n            if (name === void 0) { name = null; }\n            if (definitions === void 0) { definitions = null; }\n            this.name = name;\n            this.definitions = definitions;\n        }\n        return CompileAnimationEntryMetadata;\n    }());\n    /**\n     * @abstract\n     */\n    var CompileAnimationStateMetadata = (function () {\n        function CompileAnimationStateMetadata() {\n        }\n        return CompileAnimationStateMetadata;\n    }());\n    var CompileAnimationStateDeclarationMetadata = (function (_super) {\n        __extends(CompileAnimationStateDeclarationMetadata, _super);\n        /**\n         * @param {?} stateNameExpr\n         * @param {?} styles\n         */\n        function CompileAnimationStateDeclarationMetadata(stateNameExpr, styles) {\n            var _this = _super.call(this) || this;\n            _this.stateNameExpr = stateNameExpr;\n            _this.styles = styles;\n            return _this;\n        }\n        return CompileAnimationStateDeclarationMetadata;\n    }(CompileAnimationStateMetadata));\n    var CompileAnimationStateTransitionMetadata = (function (_super) {\n        __extends(CompileAnimationStateTransitionMetadata, _super);\n        /**\n         * @param {?} stateChangeExpr\n         * @param {?} steps\n         */\n        function CompileAnimationStateTransitionMetadata(stateChangeExpr, steps) {\n            var _this = _super.call(this) || this;\n            _this.stateChangeExpr = stateChangeExpr;\n            _this.steps = steps;\n            return _this;\n        }\n        return CompileAnimationStateTransitionMetadata;\n    }(CompileAnimationStateMetadata));\n    /**\n     * @abstract\n     */\n    var CompileAnimationMetadata = (function () {\n        function CompileAnimationMetadata() {\n        }\n        return CompileAnimationMetadata;\n    }());\n    var CompileAnimationKeyframesSequenceMetadata = (function (_super) {\n        __extends(CompileAnimationKeyframesSequenceMetadata, _super);\n        /**\n         * @param {?=} steps\n         */\n        function CompileAnimationKeyframesSequenceMetadata(steps) {\n            if (steps === void 0) { steps = []; }\n            var _this = _super.call(this) || this;\n            _this.steps = steps;\n            return _this;\n        }\n        return CompileAnimationKeyframesSequenceMetadata;\n    }(CompileAnimationMetadata));\n    var CompileAnimationStyleMetadata = (function (_super) {\n        __extends(CompileAnimationStyleMetadata, _super);\n        /**\n         * @param {?} offset\n         * @param {?=} styles\n         */\n        function CompileAnimationStyleMetadata(offset, styles) {\n            if (styles === void 0) { styles = null; }\n            var _this = _super.call(this) || this;\n            _this.offset = offset;\n            _this.styles = styles;\n            return _this;\n        }\n        return CompileAnimationStyleMetadata;\n    }(CompileAnimationMetadata));\n    var CompileAnimationAnimateMetadata = (function (_super) {\n        __extends(CompileAnimationAnimateMetadata, _super);\n        /**\n         * @param {?=} timings\n         * @param {?=} styles\n         */\n        function CompileAnimationAnimateMetadata(timings, styles) {\n            if (timings === void 0) { timings = 0; }\n            if (styles === void 0) { styles = null; }\n            var _this = _super.call(this) || this;\n            _this.timings = timings;\n            _this.styles = styles;\n            return _this;\n        }\n        return CompileAnimationAnimateMetadata;\n    }(CompileAnimationMetadata));\n    /**\n     * @abstract\n     */\n    var CompileAnimationWithStepsMetadata = (function (_super) {\n        __extends(CompileAnimationWithStepsMetadata, _super);\n        /**\n         * @param {?=} steps\n         */\n        function CompileAnimationWithStepsMetadata(steps) {\n            if (steps === void 0) { steps = null; }\n            var _this = _super.call(this) || this;\n            _this.steps = steps;\n            return _this;\n        }\n        return CompileAnimationWithStepsMetadata;\n    }(CompileAnimationMetadata));\n    var CompileAnimationSequenceMetadata = (function (_super) {\n        __extends(CompileAnimationSequenceMetadata, _super);\n        /**\n         * @param {?=} steps\n         */\n        function CompileAnimationSequenceMetadata(steps) {\n            if (steps === void 0) { steps = null; }\n            return _super.call(this, steps) || this;\n        }\n        return CompileAnimationSequenceMetadata;\n    }(CompileAnimationWithStepsMetadata));\n    var CompileAnimationGroupMetadata = (function (_super) {\n        __extends(CompileAnimationGroupMetadata, _super);\n        /**\n         * @param {?=} steps\n         */\n        function CompileAnimationGroupMetadata(steps) {\n            if (steps === void 0) { steps = null; }\n            return _super.call(this, steps) || this;\n        }\n        return CompileAnimationGroupMetadata;\n    }(CompileAnimationWithStepsMetadata));\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    function _sanitizeIdentifier(name) {\n        return name.replace(/\\W/g, '_');\n    }\n    var /** @type {?} */ _anonymousTypeIndex = 0;\n    var /** @type {?} */ symbolId = 0;\n    var /** @type {?} */ symbolIds = new Map();\n    /**\n     * @param {?} compileIdentifier\n     * @return {?}\n     */\n    function identifierName(compileIdentifier) {\n        if (!compileIdentifier || !compileIdentifier.reference) {\n            return null;\n        }\n        var /** @type {?} */ ref = compileIdentifier.reference;\n        if (ref instanceof StaticSymbol) {\n            return ref.name;\n        }\n        if (isSymbol(ref)) {\n            if (symbolIds.has(ref)) {\n                return symbolIds.get(ref);\n            }\n            var /** @type {?} */ symbolStr = \"_symbol_\" + _sanitizeIdentifier(ref.toString()) + \"_\" + symbolId++;\n            symbolIds.set(ref, symbolStr);\n            return symbolStr;\n        }\n        if (ref['__anonymousType']) {\n            return ref['__anonymousType'];\n        }\n        var /** @type {?} */ identifier = _angular_core.ɵstringify(ref);\n        if (identifier.indexOf('(') >= 0) {\n            // case: anonymous functions!\n            identifier = \"anonymous_\" + _anonymousTypeIndex++;\n            ref['__anonymousType'] = identifier;\n        }\n        else {\n            identifier = _sanitizeIdentifier(identifier);\n        }\n        return identifier;\n    }\n    /**\n     * @param {?} sym\n     * @return {?}\n     */\n    function isSymbol(sym) {\n        return typeof sym === 'symbol';\n    }\n    /**\n     * @param {?} compileIdentifier\n     * @return {?}\n     */\n    function identifierModuleUrl(compileIdentifier) {\n        var /** @type {?} */ ref = compileIdentifier.reference;\n        if (ref instanceof StaticSymbol) {\n            return ref.filePath;\n        }\n        return _angular_core.ɵreflector.importUri(ref);\n    }\n    /**\n     * @param {?} compType\n     * @param {?} embeddedTemplateIndex\n     * @return {?}\n     */\n    function viewClassName(compType, embeddedTemplateIndex) {\n        return \"View_\" + identifierName({ reference: compType }) + \"_\" + embeddedTemplateIndex;\n    }\n    /**\n     * @param {?} compType\n     * @return {?}\n     */\n    function rendererTypeName(compType) {\n        return \"RenderType_\" + identifierName({ reference: compType });\n    }\n    /**\n     * @param {?} compType\n     * @return {?}\n     */\n    function hostViewClassName(compType) {\n        return \"HostView_\" + identifierName({ reference: compType });\n    }\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function dirWrapperClassName(dirType) {\n        return \"Wrapper_\" + identifierName({ reference: dirType });\n    }\n    /**\n     * @param {?} compType\n     * @return {?}\n     */\n    function componentFactoryName(compType) {\n        return identifierName({ reference: compType }) + \"NgFactory\";\n    }\n    var CompileSummaryKind = {};\n    CompileSummaryKind.Pipe = 0;\n    CompileSummaryKind.Directive = 1;\n    CompileSummaryKind.NgModule = 2;\n    CompileSummaryKind.Injectable = 3;\n    CompileSummaryKind[CompileSummaryKind.Pipe] = \"Pipe\";\n    CompileSummaryKind[CompileSummaryKind.Directive] = \"Directive\";\n    CompileSummaryKind[CompileSummaryKind.NgModule] = \"NgModule\";\n    CompileSummaryKind[CompileSummaryKind.Injectable] = \"Injectable\";\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    function tokenName(token) {\n        return token.value != null ? _sanitizeIdentifier(token.value) : identifierName(token.identifier);\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    function tokenReference(token) {\n        if (token.identifier != null) {\n            return token.identifier.reference;\n        }\n        else {\n            return token.value;\n        }\n    }\n    /**\n     * Metadata about a stylesheet\n     */\n    var CompileStylesheetMetadata = (function () {\n        /**\n         * @param {?=} __0\n         */\n        function CompileStylesheetMetadata(_a) {\n            var _b = _a === void 0 ? {} : _a, moduleUrl = _b.moduleUrl, styles = _b.styles, styleUrls = _b.styleUrls;\n            this.moduleUrl = moduleUrl;\n            this.styles = _normalizeArray(styles);\n            this.styleUrls = _normalizeArray(styleUrls);\n        }\n        return CompileStylesheetMetadata;\n    }());\n    /**\n     * Metadata regarding compilation of a template.\n     */\n    var CompileTemplateMetadata = (function () {\n        /**\n         * @param {?=} __0\n         */\n        function CompileTemplateMetadata(_a) {\n            var _b = _a === void 0 ? {} : _a, encapsulation = _b.encapsulation, template = _b.template, templateUrl = _b.templateUrl, styles = _b.styles, styleUrls = _b.styleUrls, externalStylesheets = _b.externalStylesheets, animations = _b.animations, ngContentSelectors = _b.ngContentSelectors, interpolation = _b.interpolation, isInline = _b.isInline;\n            this.encapsulation = encapsulation;\n            this.template = template;\n            this.templateUrl = templateUrl;\n            this.styles = _normalizeArray(styles);\n            this.styleUrls = _normalizeArray(styleUrls);\n            this.externalStylesheets = _normalizeArray(externalStylesheets);\n            this.animations = animations ? flatten(animations) : [];\n            this.ngContentSelectors = ngContentSelectors || [];\n            if (interpolation && interpolation.length != 2) {\n                throw new Error(\"'interpolation' should have a start and an end symbol.\");\n            }\n            this.interpolation = interpolation;\n            this.isInline = isInline;\n        }\n        /**\n         * @return {?}\n         */\n        CompileTemplateMetadata.prototype.toSummary = function () {\n            return {\n                animations: this.animations.map(function (anim) { return anim.name; }),\n                ngContentSelectors: this.ngContentSelectors,\n                encapsulation: this.encapsulation,\n            };\n        };\n        return CompileTemplateMetadata;\n    }());\n    /**\n     * Metadata regarding compilation of a directive.\n     */\n    var CompileDirectiveMetadata = (function () {\n        /**\n         * @param {?=} __0\n         */\n        function CompileDirectiveMetadata(_a) {\n            var _b = _a === void 0 ? {} : _a, isHost = _b.isHost, type = _b.type, isComponent = _b.isComponent, selector = _b.selector, exportAs = _b.exportAs, changeDetection = _b.changeDetection, inputs = _b.inputs, outputs = _b.outputs, hostListeners = _b.hostListeners, hostProperties = _b.hostProperties, hostAttributes = _b.hostAttributes, providers = _b.providers, viewProviders = _b.viewProviders, queries = _b.queries, viewQueries = _b.viewQueries, entryComponents = _b.entryComponents, template = _b.template, componentViewType = _b.componentViewType, rendererType = _b.rendererType, componentFactory = _b.componentFactory;\n            this.isHost = !!isHost;\n            this.type = type;\n            this.isComponent = isComponent;\n            this.selector = selector;\n            this.exportAs = exportAs;\n            this.changeDetection = changeDetection;\n            this.inputs = inputs;\n            this.outputs = outputs;\n            this.hostListeners = hostListeners;\n            this.hostProperties = hostProperties;\n            this.hostAttributes = hostAttributes;\n            this.providers = _normalizeArray(providers);\n            this.viewProviders = _normalizeArray(viewProviders);\n            this.queries = _normalizeArray(queries);\n            this.viewQueries = _normalizeArray(viewQueries);\n            this.entryComponents = _normalizeArray(entryComponents);\n            this.template = template;\n            this.componentViewType = componentViewType;\n            this.rendererType = rendererType;\n            this.componentFactory = componentFactory;\n        }\n        /**\n         * @param {?=} __0\n         * @return {?}\n         */\n        CompileDirectiveMetadata.create = function (_a) {\n            var _b = _a === void 0 ? {} : _a, isHost = _b.isHost, type = _b.type, isComponent = _b.isComponent, selector = _b.selector, exportAs = _b.exportAs, changeDetection = _b.changeDetection, inputs = _b.inputs, outputs = _b.outputs, host = _b.host, providers = _b.providers, viewProviders = _b.viewProviders, queries = _b.queries, viewQueries = _b.viewQueries, entryComponents = _b.entryComponents, template = _b.template, componentViewType = _b.componentViewType, rendererType = _b.rendererType, componentFactory = _b.componentFactory;\n            var /** @type {?} */ hostListeners = {};\n            var /** @type {?} */ hostProperties = {};\n            var /** @type {?} */ hostAttributes = {};\n            if (host != null) {\n                Object.keys(host).forEach(function (key) {\n                    var /** @type {?} */ value = host[key];\n                    var /** @type {?} */ matches = key.match(HOST_REG_EXP);\n                    if (matches === null) {\n                        hostAttributes[key] = value;\n                    }\n                    else if (matches[1] != null) {\n                        hostProperties[matches[1]] = value;\n                    }\n                    else if (matches[2] != null) {\n                        hostListeners[matches[2]] = value;\n                    }\n                });\n            }\n            var /** @type {?} */ inputsMap = {};\n            if (inputs != null) {\n                inputs.forEach(function (bindConfig) {\n                    // canonical syntax: `dirProp: elProp`\n                    // if there is no `:`, use dirProp = elProp\n                    var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                    inputsMap[parts[0]] = parts[1];\n                });\n            }\n            var /** @type {?} */ outputsMap = {};\n            if (outputs != null) {\n                outputs.forEach(function (bindConfig) {\n                    // canonical syntax: `dirProp: elProp`\n                    // if there is no `:`, use dirProp = elProp\n                    var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                    outputsMap[parts[0]] = parts[1];\n                });\n            }\n            return new CompileDirectiveMetadata({\n                isHost: isHost,\n                type: type,\n                isComponent: !!isComponent, selector: selector, exportAs: exportAs, changeDetection: changeDetection,\n                inputs: inputsMap,\n                outputs: outputsMap,\n                hostListeners: hostListeners,\n                hostProperties: hostProperties,\n                hostAttributes: hostAttributes,\n                providers: providers,\n                viewProviders: viewProviders,\n                queries: queries,\n                viewQueries: viewQueries,\n                entryComponents: entryComponents,\n                template: template,\n                componentViewType: componentViewType,\n                rendererType: rendererType,\n                componentFactory: componentFactory,\n            });\n        };\n        /**\n         * @return {?}\n         */\n        CompileDirectiveMetadata.prototype.toSummary = function () {\n            return {\n                summaryKind: CompileSummaryKind.Directive,\n                type: this.type,\n                isComponent: this.isComponent,\n                selector: this.selector,\n                exportAs: this.exportAs,\n                inputs: this.inputs,\n                outputs: this.outputs,\n                hostListeners: this.hostListeners,\n                hostProperties: this.hostProperties,\n                hostAttributes: this.hostAttributes,\n                providers: this.providers,\n                viewProviders: this.viewProviders,\n                queries: this.queries,\n                viewQueries: this.viewQueries,\n                entryComponents: this.entryComponents,\n                changeDetection: this.changeDetection,\n                template: this.template && this.template.toSummary(),\n                componentViewType: this.componentViewType,\n                rendererType: this.rendererType,\n                componentFactory: this.componentFactory\n            };\n        };\n        return CompileDirectiveMetadata;\n    }());\n    /**\n     * Construct {\\@link CompileDirectiveMetadata} from {\\@link ComponentTypeMetadata} and a selector.\n     * @param {?} hostTypeReference\n     * @param {?} compMeta\n     * @param {?} hostViewType\n     * @return {?}\n     */\n    function createHostComponentMeta(hostTypeReference, compMeta, hostViewType) {\n        var /** @type {?} */ template = CssSelector.parse(compMeta.selector)[0].getMatchingElementTemplate();\n        return CompileDirectiveMetadata.create({\n            isHost: true,\n            type: { reference: hostTypeReference, diDeps: [], lifecycleHooks: [] },\n            template: new CompileTemplateMetadata({\n                encapsulation: _angular_core.ViewEncapsulation.None,\n                template: template,\n                templateUrl: '',\n                styles: [],\n                styleUrls: [],\n                ngContentSelectors: [],\n                animations: [],\n                isInline: true,\n            }),\n            changeDetection: _angular_core.ChangeDetectionStrategy.Default,\n            inputs: [],\n            outputs: [],\n            host: {},\n            isComponent: true,\n            selector: '*',\n            providers: [],\n            viewProviders: [],\n            queries: [],\n            viewQueries: [],\n            componentViewType: hostViewType,\n            rendererType: { id: '__Host__', encapsulation: _angular_core.ViewEncapsulation.None, styles: [], data: {} }\n        });\n    }\n    var CompilePipeMetadata = (function () {\n        /**\n         * @param {?=} __0\n         */\n        function CompilePipeMetadata(_a) {\n            var _b = _a === void 0 ? {} : _a, type = _b.type, name = _b.name, pure = _b.pure;\n            this.type = type;\n            this.name = name;\n            this.pure = !!pure;\n        }\n        /**\n         * @return {?}\n         */\n        CompilePipeMetadata.prototype.toSummary = function () {\n            return {\n                summaryKind: CompileSummaryKind.Pipe,\n                type: this.type,\n                name: this.name,\n                pure: this.pure\n            };\n        };\n        return CompilePipeMetadata;\n    }());\n    /**\n     * Metadata regarding compilation of a module.\n     */\n    var CompileNgModuleMetadata = (function () {\n        /**\n         * @param {?=} __0\n         */\n        function CompileNgModuleMetadata(_a) {\n            var _b = _a === void 0 ? {} : _a, type = _b.type, providers = _b.providers, declaredDirectives = _b.declaredDirectives, exportedDirectives = _b.exportedDirectives, declaredPipes = _b.declaredPipes, exportedPipes = _b.exportedPipes, entryComponents = _b.entryComponents, bootstrapComponents = _b.bootstrapComponents, importedModules = _b.importedModules, exportedModules = _b.exportedModules, schemas = _b.schemas, transitiveModule = _b.transitiveModule, id = _b.id;\n            this.type = type;\n            this.declaredDirectives = _normalizeArray(declaredDirectives);\n            this.exportedDirectives = _normalizeArray(exportedDirectives);\n            this.declaredPipes = _normalizeArray(declaredPipes);\n            this.exportedPipes = _normalizeArray(exportedPipes);\n            this.providers = _normalizeArray(providers);\n            this.entryComponents = _normalizeArray(entryComponents);\n            this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n            this.importedModules = _normalizeArray(importedModules);\n            this.exportedModules = _normalizeArray(exportedModules);\n            this.schemas = _normalizeArray(schemas);\n            this.id = id;\n            this.transitiveModule = transitiveModule;\n        }\n        /**\n         * @return {?}\n         */\n        CompileNgModuleMetadata.prototype.toSummary = function () {\n            return {\n                summaryKind: CompileSummaryKind.NgModule,\n                type: this.type,\n                entryComponents: this.transitiveModule.entryComponents,\n                providers: this.transitiveModule.providers,\n                modules: this.transitiveModule.modules,\n                exportedDirectives: this.transitiveModule.exportedDirectives,\n                exportedPipes: this.transitiveModule.exportedPipes\n            };\n        };\n        return CompileNgModuleMetadata;\n    }());\n    var TransitiveCompileNgModuleMetadata = (function () {\n        function TransitiveCompileNgModuleMetadata() {\n            this.directivesSet = new Set();\n            this.directives = [];\n            this.exportedDirectivesSet = new Set();\n            this.exportedDirectives = [];\n            this.pipesSet = new Set();\n            this.pipes = [];\n            this.exportedPipesSet = new Set();\n            this.exportedPipes = [];\n            this.modulesSet = new Set();\n            this.modules = [];\n            this.entryComponentsSet = new Set();\n            this.entryComponents = [];\n            this.providers = [];\n        }\n        /**\n         * @param {?} provider\n         * @param {?} module\n         * @return {?}\n         */\n        TransitiveCompileNgModuleMetadata.prototype.addProvider = function (provider, module) {\n            this.providers.push({ provider: provider, module: module });\n        };\n        /**\n         * @param {?} id\n         * @return {?}\n         */\n        TransitiveCompileNgModuleMetadata.prototype.addDirective = function (id) {\n            if (!this.directivesSet.has(id.reference)) {\n                this.directivesSet.add(id.reference);\n                this.directives.push(id);\n            }\n        };\n        /**\n         * @param {?} id\n         * @return {?}\n         */\n        TransitiveCompileNgModuleMetadata.prototype.addExportedDirective = function (id) {\n            if (!this.exportedDirectivesSet.has(id.reference)) {\n                this.exportedDirectivesSet.add(id.reference);\n                this.exportedDirectives.push(id);\n            }\n        };\n        /**\n         * @param {?} id\n         * @return {?}\n         */\n        TransitiveCompileNgModuleMetadata.prototype.addPipe = function (id) {\n            if (!this.pipesSet.has(id.reference)) {\n                this.pipesSet.add(id.reference);\n                this.pipes.push(id);\n            }\n        };\n        /**\n         * @param {?} id\n         * @return {?}\n         */\n        TransitiveCompileNgModuleMetadata.prototype.addExportedPipe = function (id) {\n            if (!this.exportedPipesSet.has(id.reference)) {\n                this.exportedPipesSet.add(id.reference);\n                this.exportedPipes.push(id);\n            }\n        };\n        /**\n         * @param {?} id\n         * @return {?}\n         */\n        TransitiveCompileNgModuleMetadata.prototype.addModule = function (id) {\n            if (!this.modulesSet.has(id.reference)) {\n                this.modulesSet.add(id.reference);\n                this.modules.push(id);\n            }\n        };\n        /**\n         * @param {?} ec\n         * @return {?}\n         */\n        TransitiveCompileNgModuleMetadata.prototype.addEntryComponent = function (ec) {\n            if (!this.entryComponentsSet.has(ec.componentType)) {\n                this.entryComponentsSet.add(ec.componentType);\n                this.entryComponents.push(ec);\n            }\n        };\n        return TransitiveCompileNgModuleMetadata;\n    }());\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function _normalizeArray(obj) {\n        return obj || [];\n    }\n    var ProviderMeta = (function () {\n        /**\n         * @param {?} token\n         * @param {?} __1\n         */\n        function ProviderMeta(token, _a) {\n            var useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n            this.token = token;\n            this.useClass = useClass;\n            this.useValue = useValue;\n            this.useExisting = useExisting;\n            this.useFactory = useFactory;\n            this.dependencies = deps;\n            this.multi = !!multi;\n        }\n        return ProviderMeta;\n    }());\n    /**\n     * @template T\n     * @param {?} list\n     * @return {?}\n     */\n    function flatten(list) {\n        return list.reduce(function (flat, item) {\n            var /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n            return ((flat)).concat(flatItem);\n        }, []);\n    }\n    /**\n     * Note: Using `location.origin` as prefix helps displaying them as a hierarchy in chrome.\n     * It also helps long-stack-trace zone when rewriting stack traces to not break\n     * source maps (as now all scripts have the same origin).\n     * @return {?}\n     */\n    function ngJitFolder() {\n        return 'ng://';\n    }\n    /**\n     * @param {?} ngModuleType\n     * @param {?} compMeta\n     * @param {?} templateMeta\n     * @return {?}\n     */\n    function templateSourceUrl(ngModuleType, compMeta, templateMeta) {\n        if (templateMeta.isInline) {\n            if (compMeta.type.reference instanceof StaticSymbol) {\n                // Note: a .ts file might contain multiple components with inline templates,\n                // so we need to give them unique urls, as these will be used for sourcemaps.\n                return compMeta.type.reference.filePath + \"#\" + compMeta.type.reference.name + \".html\";\n            }\n            else {\n                return ngJitFolder() + \"/\" + identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".html\";\n            }\n        }\n        else {\n            return templateMeta.templateUrl;\n        }\n    }\n    /**\n     * @param {?} meta\n     * @param {?} id\n     * @return {?}\n     */\n    function sharedStylesheetJitUrl(meta, id) {\n        var /** @type {?} */ pathParts = meta.moduleUrl.split(/\\/\\\\/g);\n        var /** @type {?} */ baseName = pathParts[pathParts.length - 1];\n        return ngJitFolder() + \"/css/\" + id + baseName + \".ngstyle.js\";\n    }\n    /**\n     * @param {?} moduleMeta\n     * @return {?}\n     */\n    function ngModuleJitUrl(moduleMeta) {\n        return ngJitFolder() + \"/\" + identifierName(moduleMeta.type) + \"/module.ngfactory.js\";\n    }\n    /**\n     * @param {?} ngModuleType\n     * @param {?} compMeta\n     * @return {?}\n     */\n    function templateJitUrl(ngModuleType, compMeta) {\n        return ngJitFolder() + \"/\" + identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".ngfactory.js\";\n    }\n    var CompilerConfig = (function () {\n        /**\n         * @param {?=} __0\n         */\n        function CompilerConfig(_a) {\n            var _b = _a === void 0 ? {} : _a, _c = _b.defaultEncapsulation, defaultEncapsulation = _c === void 0 ? _angular_core.ViewEncapsulation.Emulated : _c, _d = _b.useJit, useJit = _d === void 0 ? true : _d, missingTranslation = _b.missingTranslation, enableLegacyTemplate = _b.enableLegacyTemplate;\n            this.defaultEncapsulation = defaultEncapsulation;\n            this.useJit = useJit;\n            this.missingTranslation = missingTranslation;\n            this.enableLegacyTemplate = enableLegacyTemplate !== false;\n        }\n        return CompilerConfig;\n    }());\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ParserError = (function () {\n        /**\n         * @param {?} message\n         * @param {?} input\n         * @param {?} errLocation\n         * @param {?=} ctxLocation\n         */\n        function ParserError(message, input, errLocation, ctxLocation) {\n            this.input = input;\n            this.errLocation = errLocation;\n            this.ctxLocation = ctxLocation;\n            this.message = \"Parser Error: \" + message + \" \" + errLocation + \" [\" + input + \"] in \" + ctxLocation;\n        }\n        return ParserError;\n    }());\n    var ParseSpan = (function () {\n        /**\n         * @param {?} start\n         * @param {?} end\n         */\n        function ParseSpan(start, end) {\n            this.start = start;\n            this.end = end;\n        }\n        return ParseSpan;\n    }());\n    var AST = (function () {\n        /**\n         * @param {?} span\n         */\n        function AST(span) {\n            this.span = span;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?=} context\n         * @return {?}\n         */\n        AST.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return null;\n        };\n        /**\n         * @return {?}\n         */\n        AST.prototype.toString = function () { return 'AST'; };\n        return AST;\n    }());\n    /**\n     * Represents a quoted expression of the form:\n     *\n     * quote = prefix `:` uninterpretedExpression\n     * prefix = identifier\n     * uninterpretedExpression = arbitrary string\n     *\n     * A quoted expression is meant to be pre-processed by an AST transformer that\n     * converts it into another AST that no longer contains quoted expressions.\n     * It is meant to allow third-party developers to extend Angular template\n     * expression language. The `uninterpretedExpression` part of the quote is\n     * therefore not interpreted by the Angular's own expression parser.\n     */\n    var Quote = (function (_super) {\n        __extends(Quote, _super);\n        /**\n         * @param {?} span\n         * @param {?} prefix\n         * @param {?} uninterpretedExpression\n         * @param {?} location\n         */\n        function Quote(span, prefix, uninterpretedExpression, location) {\n            var _this = _super.call(this, span) || this;\n            _this.prefix = prefix;\n            _this.uninterpretedExpression = uninterpretedExpression;\n            _this.location = location;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?=} context\n         * @return {?}\n         */\n        Quote.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return visitor.visitQuote(this, context);\n        };\n        /**\n         * @return {?}\n         */\n        Quote.prototype.toString = function () { return 'Quote'; };\n        return Quote;\n    }(AST));\n    var EmptyExpr = (function (_super) {\n        __extends(EmptyExpr, _super);\n        function EmptyExpr() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?=} context\n         * @return {?}\n         */\n        EmptyExpr.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            // do nothing\n        };\n        return EmptyExpr;\n    }(AST));\n    var ImplicitReceiver = (function (_super) {\n        __extends(ImplicitReceiver, _super);\n        function ImplicitReceiver() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?=} context\n         * @return {?}\n         */\n        ImplicitReceiver.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return visitor.visitImplicitReceiver(this, context);\n        };\n        return ImplicitReceiver;\n    }(AST));\n    /**\n     * Multiple expressions separated by a semicolon.\n     */\n    var Chain = (function (_super) {\n        __extends(Chain, _super);\n        /**\n         * @param {?} span\n         * @param {?} expressions\n         */\n        function Chain(span, expressions) {\n            var _this = _super.call(this, span) || this;\n            _this.expressions = expressions;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?=} context\n         * @return {?}\n         */\n        Chain.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return visitor.visitChain(this, context);\n        };\n        return Chain;\n    }(AST));\n    var Conditional = (function (_super) {\n        __extends(Conditional, _super);\n        /**\n         * @param {?} span\n         * @param {?} condition\n         * @param {?} trueExp\n         * @param {?} falseExp\n         */\n        function Conditional(span, condition, trueExp, falseExp) {\n            var _this = _super.call(this, span) || this;\n            _this.condition = condition;\n            _this.trueExp = trueExp;\n            _this.falseExp = falseExp;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?=} context\n         * @return {?}\n         */\n        Conditional.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return visitor.visitConditional(this, context);\n        };\n        return Conditional;\n    }(AST));\n    var PropertyRead = (function (_super) {\n        __extends(PropertyRead, _super);\n        /**\n         * @param {?} span\n         * @param {?} receiver\n         * @param {?} name\n         */\n        function PropertyRead(span, receiver, name) {\n            var _this = _super.call(this, span) || this;\n            _this.receiver = receiver;\n            _this.name = name;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?=} context\n         * @return {?}\n         */\n        PropertyRead.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return visitor.visitPropertyRead(this, context);\n        };\n        return PropertyRead;\n    }(AST));\n    var PropertyWrite = (function (_super) {\n        __extends(PropertyWrite, _super);\n        /**\n         * @param {?} span\n         * @param {?} receiver\n         * @param {?} name\n         * @param {?} value\n         */\n        function PropertyWrite(span, receiver, name, value) {\n            var _this = _super.call(this, span) || this;\n            _this.receiver = receiver;\n            _this.name = name;\n            _this.value = value;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?=} context\n         * @return {?}\n         */\n        PropertyWrite.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return visitor.visitPropertyWrite(this, context);\n        };\n        return PropertyWrite;\n    }(AST));\n    var SafePropertyRead = (function (_super) {\n        __extends(SafePropertyRead, _super);\n        /**\n         * @param {?} span\n         * @param {?} receiver\n         * @param {?} name\n         */\n        function SafePropertyRead(span, receiver, name) {\n            var _this = _super.call(this, span) || this;\n            _this.receiver = receiver;\n            _this.name = name;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?=} context\n         * @return {?}\n         */\n        SafePropertyRead.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return visitor.visitSafePropertyRead(this, context);\n        };\n        return SafePropertyRead;\n    }(AST));\n    var KeyedRead = (function (_super) {\n        __extends(KeyedRead, _super);\n        /**\n         * @param {?} span\n         * @param {?} obj\n         * @param {?} key\n         */\n        function KeyedRead(span, obj, key) {\n            var _this = _super.call(this, span) || this;\n            _this.obj = obj;\n            _this.key = key;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?=} context\n         * @return {?}\n         */\n        KeyedRead.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return visitor.visitKeyedRead(this, context);\n        };\n        return KeyedRead;\n    }(AST));\n    var KeyedWrite = (function (_super) {\n        __extends(KeyedWrite, _super);\n        /**\n         * @param {?} span\n         * @param {?} obj\n         * @param {?} key\n         * @param {?} value\n         */\n        function KeyedWrite(span, obj, key, value) {\n            var _this = _super.call(this, span) || this;\n            _this.obj = obj;\n            _this.key = key;\n            _this.value = value;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?=} context\n         * @return {?}\n         */\n        KeyedWrite.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return visitor.visitKeyedWrite(this, context);\n        };\n        return KeyedWrite;\n    }(AST));\n    var BindingPipe = (function (_super) {\n        __extends(BindingPipe, _super);\n        /**\n         * @param {?} span\n         * @param {?} exp\n         * @param {?} name\n         * @param {?} args\n         */\n        function BindingPipe(span, exp, name, args) {\n            var _this = _super.call(this, span) || this;\n            _this.exp = exp;\n            _this.name = name;\n            _this.args = args;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?=} context\n         * @return {?}\n         */\n        BindingPipe.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return visitor.visitPipe(this, context);\n        };\n        return BindingPipe;\n    }(AST));\n    var LiteralPrimitive = (function (_super) {\n        __extends(LiteralPrimitive, _super);\n        /**\n         * @param {?} span\n         * @param {?} value\n         */\n        function LiteralPrimitive(span, value) {\n            var _this = _super.call(this, span) || this;\n            _this.value = value;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?=} context\n         * @return {?}\n         */\n        LiteralPrimitive.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return visitor.visitLiteralPrimitive(this, context);\n        };\n        return LiteralPrimitive;\n    }(AST));\n    var LiteralArray = (function (_super) {\n        __extends(LiteralArray, _super);\n        /**\n         * @param {?} span\n         * @param {?} expressions\n         */\n        function LiteralArray(span, expressions) {\n            var _this = _super.call(this, span) || this;\n            _this.expressions = expressions;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?=} context\n         * @return {?}\n         */\n        LiteralArray.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return visitor.visitLiteralArray(this, context);\n        };\n        return LiteralArray;\n    }(AST));\n    var LiteralMap = (function (_super) {\n        __extends(LiteralMap, _super);\n        /**\n         * @param {?} span\n         * @param {?} keys\n         * @param {?} values\n         */\n        function LiteralMap(span, keys, values) {\n            var _this = _super.call(this, span) || this;\n            _this.keys = keys;\n            _this.values = values;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?=} context\n         * @return {?}\n         */\n        LiteralMap.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return visitor.visitLiteralMap(this, context);\n        };\n        return LiteralMap;\n    }(AST));\n    var Interpolation = (function (_super) {\n        __extends(Interpolation, _super);\n        /**\n         * @param {?} span\n         * @param {?} strings\n         * @param {?} expressions\n         */\n        function Interpolation(span, strings, expressions) {\n            var _this = _super.call(this, span) || this;\n            _this.strings = strings;\n            _this.expressions = expressions;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?=} context\n         * @return {?}\n         */\n        Interpolation.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return visitor.visitInterpolation(this, context);\n        };\n        return Interpolation;\n    }(AST));\n    var Binary = (function (_super) {\n        __extends(Binary, _super);\n        /**\n         * @param {?} span\n         * @param {?} operation\n         * @param {?} left\n         * @param {?} right\n         */\n        function Binary(span, operation, left, right) {\n            var _this = _super.call(this, span) || this;\n            _this.operation = operation;\n            _this.left = left;\n            _this.right = right;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?=} context\n         * @return {?}\n         */\n        Binary.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return visitor.visitBinary(this, context);\n        };\n        return Binary;\n    }(AST));\n    var PrefixNot = (function (_super) {\n        __extends(PrefixNot, _super);\n        /**\n         * @param {?} span\n         * @param {?} expression\n         */\n        function PrefixNot(span, expression) {\n            var _this = _super.call(this, span) || this;\n            _this.expression = expression;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?=} context\n         * @return {?}\n         */\n        PrefixNot.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return visitor.visitPrefixNot(this, context);\n        };\n        return PrefixNot;\n    }(AST));\n    var MethodCall = (function (_super) {\n        __extends(MethodCall, _super);\n        /**\n         * @param {?} span\n         * @param {?} receiver\n         * @param {?} name\n         * @param {?} args\n         */\n        function MethodCall(span, receiver, name, args) {\n            var _this = _super.call(this, span) || this;\n            _this.receiver = receiver;\n            _this.name = name;\n            _this.args = args;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?=} context\n         * @return {?}\n         */\n        MethodCall.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return visitor.visitMethodCall(this, context);\n        };\n        return MethodCall;\n    }(AST));\n    var SafeMethodCall = (function (_super) {\n        __extends(SafeMethodCall, _super);\n        /**\n         * @param {?} span\n         * @param {?} receiver\n         * @param {?} name\n         * @param {?} args\n         */\n        function SafeMethodCall(span, receiver, name, args) {\n            var _this = _super.call(this, span) || this;\n            _this.receiver = receiver;\n            _this.name = name;\n            _this.args = args;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?=} context\n         * @return {?}\n         */\n        SafeMethodCall.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return visitor.visitSafeMethodCall(this, context);\n        };\n        return SafeMethodCall;\n    }(AST));\n    var FunctionCall = (function (_super) {\n        __extends(FunctionCall, _super);\n        /**\n         * @param {?} span\n         * @param {?} target\n         * @param {?} args\n         */\n        function FunctionCall(span, target, args) {\n            var _this = _super.call(this, span) || this;\n            _this.target = target;\n            _this.args = args;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?=} context\n         * @return {?}\n         */\n        FunctionCall.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return visitor.visitFunctionCall(this, context);\n        };\n        return FunctionCall;\n    }(AST));\n    var ASTWithSource = (function (_super) {\n        __extends(ASTWithSource, _super);\n        /**\n         * @param {?} ast\n         * @param {?} source\n         * @param {?} location\n         * @param {?} errors\n         */\n        function ASTWithSource(ast, source, location, errors) {\n            var _this = _super.call(this, new ParseSpan(0, source == null ? 0 : source.length)) || this;\n            _this.ast = ast;\n            _this.source = source;\n            _this.location = location;\n            _this.errors = errors;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?=} context\n         * @return {?}\n         */\n        ASTWithSource.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return this.ast.visit(visitor, context);\n        };\n        /**\n         * @return {?}\n         */\n        ASTWithSource.prototype.toString = function () { return this.source + \" in \" + this.location; };\n        return ASTWithSource;\n    }(AST));\n    var TemplateBinding = (function () {\n        /**\n         * @param {?} span\n         * @param {?} key\n         * @param {?} keyIsVar\n         * @param {?} name\n         * @param {?} expression\n         */\n        function TemplateBinding(span, key, keyIsVar, name, expression) {\n            this.span = span;\n            this.key = key;\n            this.keyIsVar = keyIsVar;\n            this.name = name;\n            this.expression = expression;\n        }\n        return TemplateBinding;\n    }());\n    var RecursiveAstVisitor = (function () {\n        function RecursiveAstVisitor() {\n        }\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor.prototype.visitBinary = function (ast, context) {\n            ast.left.visit(this);\n            ast.right.visit(this);\n            return null;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor.prototype.visitChain = function (ast, context) { return this.visitAll(ast.expressions, context); };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor.prototype.visitConditional = function (ast, context) {\n            ast.condition.visit(this);\n            ast.trueExp.visit(this);\n            ast.falseExp.visit(this);\n            return null;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor.prototype.visitPipe = function (ast, context) {\n            ast.exp.visit(this);\n            this.visitAll(ast.args, context);\n            return null;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor.prototype.visitFunctionCall = function (ast, context) {\n            ast.target.visit(this);\n            this.visitAll(ast.args, context);\n            return null;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor.prototype.visitImplicitReceiver = function (ast, context) { return null; };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor.prototype.visitInterpolation = function (ast, context) {\n            return this.visitAll(ast.expressions, context);\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor.prototype.visitKeyedRead = function (ast, context) {\n            ast.obj.visit(this);\n            ast.key.visit(this);\n            return null;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor.prototype.visitKeyedWrite = function (ast, context) {\n            ast.obj.visit(this);\n            ast.key.visit(this);\n            ast.value.visit(this);\n            return null;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor.prototype.visitLiteralArray = function (ast, context) {\n            return this.visitAll(ast.expressions, context);\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor.prototype.visitLiteralMap = function (ast, context) { return this.visitAll(ast.values, context); };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor.prototype.visitLiteralPrimitive = function (ast, context) { return null; };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor.prototype.visitMethodCall = function (ast, context) {\n            ast.receiver.visit(this);\n            return this.visitAll(ast.args, context);\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor.prototype.visitPrefixNot = function (ast, context) {\n            ast.expression.visit(this);\n            return null;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor.prototype.visitPropertyRead = function (ast, context) {\n            ast.receiver.visit(this);\n            return null;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor.prototype.visitPropertyWrite = function (ast, context) {\n            ast.receiver.visit(this);\n            ast.value.visit(this);\n            return null;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor.prototype.visitSafePropertyRead = function (ast, context) {\n            ast.receiver.visit(this);\n            return null;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor.prototype.visitSafeMethodCall = function (ast, context) {\n            ast.receiver.visit(this);\n            return this.visitAll(ast.args, context);\n        };\n        /**\n         * @param {?} asts\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor.prototype.visitAll = function (asts, context) {\n            var _this = this;\n            asts.forEach(function (ast) { return ast.visit(_this, context); });\n            return null;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor.prototype.visitQuote = function (ast, context) { return null; };\n        return RecursiveAstVisitor;\n    }());\n    var AstTransformer = (function () {\n        function AstTransformer() {\n        }\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer.prototype.visitImplicitReceiver = function (ast, context) { return ast; };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer.prototype.visitInterpolation = function (ast, context) {\n            return new Interpolation(ast.span, ast.strings, this.visitAll(ast.expressions));\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer.prototype.visitLiteralPrimitive = function (ast, context) {\n            return new LiteralPrimitive(ast.span, ast.value);\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer.prototype.visitPropertyRead = function (ast, context) {\n            return new PropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer.prototype.visitPropertyWrite = function (ast, context) {\n            return new PropertyWrite(ast.span, ast.receiver.visit(this), ast.name, ast.value.visit(this));\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer.prototype.visitSafePropertyRead = function (ast, context) {\n            return new SafePropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer.prototype.visitMethodCall = function (ast, context) {\n            return new MethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer.prototype.visitSafeMethodCall = function (ast, context) {\n            return new SafeMethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer.prototype.visitFunctionCall = function (ast, context) {\n            return new FunctionCall(ast.span, ast.target.visit(this), this.visitAll(ast.args));\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer.prototype.visitLiteralArray = function (ast, context) {\n            return new LiteralArray(ast.span, this.visitAll(ast.expressions));\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer.prototype.visitLiteralMap = function (ast, context) {\n            return new LiteralMap(ast.span, ast.keys, this.visitAll(ast.values));\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer.prototype.visitBinary = function (ast, context) {\n            return new Binary(ast.span, ast.operation, ast.left.visit(this), ast.right.visit(this));\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer.prototype.visitPrefixNot = function (ast, context) {\n            return new PrefixNot(ast.span, ast.expression.visit(this));\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer.prototype.visitConditional = function (ast, context) {\n            return new Conditional(ast.span, ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer.prototype.visitPipe = function (ast, context) {\n            return new BindingPipe(ast.span, ast.exp.visit(this), ast.name, this.visitAll(ast.args));\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer.prototype.visitKeyedRead = function (ast, context) {\n            return new KeyedRead(ast.span, ast.obj.visit(this), ast.key.visit(this));\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer.prototype.visitKeyedWrite = function (ast, context) {\n            return new KeyedWrite(ast.span, ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));\n        };\n        /**\n         * @param {?} asts\n         * @return {?}\n         */\n        AstTransformer.prototype.visitAll = function (asts) {\n            var /** @type {?} */ res = new Array(asts.length);\n            for (var /** @type {?} */ i = 0; i < asts.length; ++i) {\n                res[i] = asts[i].visit(this);\n            }\n            return res;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer.prototype.visitChain = function (ast, context) {\n            return new Chain(ast.span, this.visitAll(ast.expressions));\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer.prototype.visitQuote = function (ast, context) {\n            return new Quote(ast.span, ast.prefix, ast.uninterpretedExpression, ast.location);\n        };\n        return AstTransformer;\n    }());\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var $EOF = 0;\n    var /** @type {?} */ $TAB = 9;\n    var /** @type {?} */ $LF = 10;\n    var /** @type {?} */ $VTAB = 11;\n    var /** @type {?} */ $FF = 12;\n    var /** @type {?} */ $CR = 13;\n    var /** @type {?} */ $SPACE = 32;\n    var /** @type {?} */ $BANG = 33;\n    var /** @type {?} */ $DQ = 34;\n    var /** @type {?} */ $HASH = 35;\n    var /** @type {?} */ $$ = 36;\n    var /** @type {?} */ $PERCENT = 37;\n    var /** @type {?} */ $AMPERSAND = 38;\n    var /** @type {?} */ $SQ = 39;\n    var /** @type {?} */ $LPAREN = 40;\n    var /** @type {?} */ $RPAREN = 41;\n    var /** @type {?} */ $STAR = 42;\n    var /** @type {?} */ $PLUS = 43;\n    var /** @type {?} */ $COMMA = 44;\n    var /** @type {?} */ $MINUS = 45;\n    var /** @type {?} */ $PERIOD = 46;\n    var /** @type {?} */ $SLASH = 47;\n    var /** @type {?} */ $COLON = 58;\n    var /** @type {?} */ $SEMICOLON = 59;\n    var /** @type {?} */ $LT = 60;\n    var /** @type {?} */ $EQ = 61;\n    var /** @type {?} */ $GT = 62;\n    var /** @type {?} */ $QUESTION = 63;\n    var /** @type {?} */ $0 = 48;\n    var /** @type {?} */ $9 = 57;\n    var /** @type {?} */ $A = 65;\n    var /** @type {?} */ $E = 69;\n    var /** @type {?} */ $F = 70;\n    var /** @type {?} */ $X = 88;\n    var /** @type {?} */ $Z = 90;\n    var /** @type {?} */ $LBRACKET = 91;\n    var /** @type {?} */ $BACKSLASH = 92;\n    var /** @type {?} */ $RBRACKET = 93;\n    var /** @type {?} */ $CARET = 94;\n    var /** @type {?} */ $_ = 95;\n    var /** @type {?} */ $a = 97;\n    var /** @type {?} */ $e = 101;\n    var /** @type {?} */ $f = 102;\n    var /** @type {?} */ $n = 110;\n    var /** @type {?} */ $r = 114;\n    var /** @type {?} */ $t = 116;\n    var /** @type {?} */ $u = 117;\n    var /** @type {?} */ $v = 118;\n    var /** @type {?} */ $x = 120;\n    var /** @type {?} */ $z = 122;\n    var /** @type {?} */ $LBRACE = 123;\n    var /** @type {?} */ $BAR = 124;\n    var /** @type {?} */ $RBRACE = 125;\n    var /** @type {?} */ $NBSP = 160;\n    var /** @type {?} */ $BT = 96;\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    function isWhitespace(code) {\n        return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    function isDigit(code) {\n        return $0 <= code && code <= $9;\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    function isAsciiLetter(code) {\n        return code >= $a && code <= $z || code >= $A && code <= $Z;\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    function isAsciiHexDigit(code) {\n        return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n    }\n    /**\n     * A replacement for \\@Injectable to be used in the compiler, so that\n     * we don't try to evaluate the metadata in the compiler during AoT.\n     * This decorator is enough to make the compiler work with the ReflectiveInjector though.\n     * \\@Annotation\n     * @return {?}\n     */\n    function CompilerInjectable() {\n        return function (x) { return x; };\n    }\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @return {?}\n     */\n    function assertArrayOfStrings(identifier, value) {\n        if (!_angular_core.isDevMode() || value == null) {\n            return;\n        }\n        if (!Array.isArray(value)) {\n            throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n        }\n        for (var /** @type {?} */ i = 0; i < value.length; i += 1) {\n            if (typeof value[i] !== 'string') {\n                throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n            }\n        }\n    }\n    var /** @type {?} */ INTERPOLATION_BLACKLIST_REGEXPS = [\n        /^\\s*$/,\n        /[<>]/,\n        /^[{}]$/,\n        /&(#|[a-z])/i,\n        /^\\/\\//,\n    ];\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @return {?}\n     */\n    function assertInterpolationSymbols(identifier, value) {\n        if (value != null && !(Array.isArray(value) && value.length == 2)) {\n            throw new Error(\"Expected '\" + identifier + \"' to be an array, [start, end].\");\n        }\n        else if (_angular_core.isDevMode() && value != null) {\n            var /** @type {?} */ start_1 = (value[0]);\n            var /** @type {?} */ end_1 = (value[1]);\n            // black list checking\n            INTERPOLATION_BLACKLIST_REGEXPS.forEach(function (regexp) {\n                if (regexp.test(start_1) || regexp.test(end_1)) {\n                    throw new Error(\"['\" + start_1 + \"', '\" + end_1 + \"'] contains unusable interpolation symbol.\");\n                }\n            });\n        }\n    }\n    var InterpolationConfig = (function () {\n        /**\n         * @param {?} start\n         * @param {?} end\n         */\n        function InterpolationConfig(start, end) {\n            this.start = start;\n            this.end = end;\n        }\n        /**\n         * @param {?} markers\n         * @return {?}\n         */\n        InterpolationConfig.fromArray = function (markers) {\n            if (!markers) {\n                return DEFAULT_INTERPOLATION_CONFIG;\n            }\n            assertInterpolationSymbols('interpolation', markers);\n            return new InterpolationConfig(markers[0], markers[1]);\n        };\n        ;\n        return InterpolationConfig;\n    }());\n    var /** @type {?} */ DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n    var TokenType = {};\n    TokenType.Character = 0;\n    TokenType.Identifier = 1;\n    TokenType.Keyword = 2;\n    TokenType.String = 3;\n    TokenType.Operator = 4;\n    TokenType.Number = 5;\n    TokenType.Error = 6;\n    TokenType[TokenType.Character] = \"Character\";\n    TokenType[TokenType.Identifier] = \"Identifier\";\n    TokenType[TokenType.Keyword] = \"Keyword\";\n    TokenType[TokenType.String] = \"String\";\n    TokenType[TokenType.Operator] = \"Operator\";\n    TokenType[TokenType.Number] = \"Number\";\n    TokenType[TokenType.Error] = \"Error\";\n    var /** @type {?} */ KEYWORDS = ['var', 'let', 'as', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\n    var Lexer = (function () {\n        function Lexer() {\n        }\n        /**\n         * @param {?} text\n         * @return {?}\n         */\n        Lexer.prototype.tokenize = function (text) {\n            var /** @type {?} */ scanner = new _Scanner(text);\n            var /** @type {?} */ tokens = [];\n            var /** @type {?} */ token = scanner.scanToken();\n            while (token != null) {\n                tokens.push(token);\n                token = scanner.scanToken();\n            }\n            return tokens;\n        };\n        return Lexer;\n    }());\n    Lexer.decorators = [\n        { type: CompilerInjectable },\n    ];\n    /**\n     * @nocollapse\n     */\n    Lexer.ctorParameters = function () { return []; };\n    var Token = (function () {\n        /**\n         * @param {?} index\n         * @param {?} type\n         * @param {?} numValue\n         * @param {?} strValue\n         */\n        function Token(index, type, numValue, strValue) {\n            this.index = index;\n            this.type = type;\n            this.numValue = numValue;\n            this.strValue = strValue;\n        }\n        /**\n         * @param {?} code\n         * @return {?}\n         */\n        Token.prototype.isCharacter = function (code) {\n            return this.type == TokenType.Character && this.numValue == code;\n        };\n        /**\n         * @return {?}\n         */\n        Token.prototype.isNumber = function () { return this.type == TokenType.Number; };\n        /**\n         * @return {?}\n         */\n        Token.prototype.isString = function () { return this.type == TokenType.String; };\n        /**\n         * @param {?} operater\n         * @return {?}\n         */\n        Token.prototype.isOperator = function (operater) {\n            return this.type == TokenType.Operator && this.strValue == operater;\n        };\n        /**\n         * @return {?}\n         */\n        Token.prototype.isIdentifier = function () { return this.type == TokenType.Identifier; };\n        /**\n         * @return {?}\n         */\n        Token.prototype.isKeyword = function () { return this.type == TokenType.Keyword; };\n        /**\n         * @return {?}\n         */\n        Token.prototype.isKeywordLet = function () { return this.type == TokenType.Keyword && this.strValue == 'let'; };\n        /**\n         * @return {?}\n         */\n        Token.prototype.isKeywordAs = function () { return this.type == TokenType.Keyword && this.strValue == 'as'; };\n        /**\n         * @return {?}\n         */\n        Token.prototype.isKeywordNull = function () { return this.type == TokenType.Keyword && this.strValue == 'null'; };\n        /**\n         * @return {?}\n         */\n        Token.prototype.isKeywordUndefined = function () {\n            return this.type == TokenType.Keyword && this.strValue == 'undefined';\n        };\n        /**\n         * @return {?}\n         */\n        Token.prototype.isKeywordTrue = function () { return this.type == TokenType.Keyword && this.strValue == 'true'; };\n        /**\n         * @return {?}\n         */\n        Token.prototype.isKeywordFalse = function () { return this.type == TokenType.Keyword && this.strValue == 'false'; };\n        /**\n         * @return {?}\n         */\n        Token.prototype.isKeywordThis = function () { return this.type == TokenType.Keyword && this.strValue == 'this'; };\n        /**\n         * @return {?}\n         */\n        Token.prototype.isError = function () { return this.type == TokenType.Error; };\n        /**\n         * @return {?}\n         */\n        Token.prototype.toNumber = function () { return this.type == TokenType.Number ? this.numValue : -1; };\n        /**\n         * @return {?}\n         */\n        Token.prototype.toString = function () {\n            switch (this.type) {\n                case TokenType.Character:\n                case TokenType.Identifier:\n                case TokenType.Keyword:\n                case TokenType.Operator:\n                case TokenType.String:\n                case TokenType.Error:\n                    return this.strValue;\n                case TokenType.Number:\n                    return this.numValue.toString();\n                default:\n                    return null;\n            }\n        };\n        return Token;\n    }());\n    /**\n     * @param {?} index\n     * @param {?} code\n     * @return {?}\n     */\n    function newCharacterToken(index, code) {\n        return new Token(index, TokenType.Character, code, String.fromCharCode(code));\n    }\n    /**\n     * @param {?} index\n     * @param {?} text\n     * @return {?}\n     */\n    function newIdentifierToken(index, text) {\n        return new Token(index, TokenType.Identifier, 0, text);\n    }\n    /**\n     * @param {?} index\n     * @param {?} text\n     * @return {?}\n     */\n    function newKeywordToken(index, text) {\n        return new Token(index, TokenType.Keyword, 0, text);\n    }\n    /**\n     * @param {?} index\n     * @param {?} text\n     * @return {?}\n     */\n    function newOperatorToken(index, text) {\n        return new Token(index, TokenType.Operator, 0, text);\n    }\n    /**\n     * @param {?} index\n     * @param {?} text\n     * @return {?}\n     */\n    function newStringToken(index, text) {\n        return new Token(index, TokenType.String, 0, text);\n    }\n    /**\n     * @param {?} index\n     * @param {?} n\n     * @return {?}\n     */\n    function newNumberToken(index, n) {\n        return new Token(index, TokenType.Number, n, '');\n    }\n    /**\n     * @param {?} index\n     * @param {?} message\n     * @return {?}\n     */\n    function newErrorToken(index, message) {\n        return new Token(index, TokenType.Error, 0, message);\n    }\n    var /** @type {?} */ EOF = new Token(-1, TokenType.Character, 0, '');\n    var _Scanner = (function () {\n        /**\n         * @param {?} input\n         */\n        function _Scanner(input) {\n            this.input = input;\n            this.peek = 0;\n            this.index = -1;\n            this.length = input.length;\n            this.advance();\n        }\n        /**\n         * @return {?}\n         */\n        _Scanner.prototype.advance = function () {\n            this.peek = ++this.index >= this.length ? $EOF : this.input.charCodeAt(this.index);\n        };\n        /**\n         * @return {?}\n         */\n        _Scanner.prototype.scanToken = function () {\n            var /** @type {?} */ input = this.input, /** @type {?} */ length = this.length;\n            var /** @type {?} */ peek = this.peek, /** @type {?} */ index = this.index;\n            // Skip whitespace.\n            while (peek <= $SPACE) {\n                if (++index >= length) {\n                    peek = $EOF;\n                    break;\n                }\n                else {\n                    peek = input.charCodeAt(index);\n                }\n            }\n            this.peek = peek;\n            this.index = index;\n            if (index >= length) {\n                return null;\n            }\n            // Handle identifiers and numbers.\n            if (isIdentifierStart(peek))\n                return this.scanIdentifier();\n            if (isDigit(peek))\n                return this.scanNumber(index);\n            var /** @type {?} */ start = index;\n            switch (peek) {\n                case $PERIOD:\n                    this.advance();\n                    return isDigit(this.peek) ? this.scanNumber(start) :\n                        newCharacterToken(start, $PERIOD);\n                case $LPAREN:\n                case $RPAREN:\n                case $LBRACE:\n                case $RBRACE:\n                case $LBRACKET:\n                case $RBRACKET:\n                case $COMMA:\n                case $COLON:\n                case $SEMICOLON:\n                    return this.scanCharacter(start, peek);\n                case $SQ:\n                case $DQ:\n                    return this.scanString();\n                case $HASH:\n                case $PLUS:\n                case $MINUS:\n                case $STAR:\n                case $SLASH:\n                case $PERCENT:\n                case $CARET:\n                    return this.scanOperator(start, String.fromCharCode(peek));\n                case $QUESTION:\n                    return this.scanComplexOperator(start, '?', $PERIOD, '.');\n                case $LT:\n                case $GT:\n                    return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=');\n                case $BANG:\n                case $EQ:\n                    return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=', $EQ, '=');\n                case $AMPERSAND:\n                    return this.scanComplexOperator(start, '&', $AMPERSAND, '&');\n                case $BAR:\n                    return this.scanComplexOperator(start, '|', $BAR, '|');\n                case $NBSP:\n                    while (isWhitespace(this.peek))\n                        this.advance();\n                    return this.scanToken();\n            }\n            this.advance();\n            return this.error(\"Unexpected character [\" + String.fromCharCode(peek) + \"]\", 0);\n        };\n        /**\n         * @param {?} start\n         * @param {?} code\n         * @return {?}\n         */\n        _Scanner.prototype.scanCharacter = function (start, code) {\n            this.advance();\n            return newCharacterToken(start, code);\n        };\n        /**\n         * @param {?} start\n         * @param {?} str\n         * @return {?}\n         */\n        _Scanner.prototype.scanOperator = function (start, str) {\n            this.advance();\n            return newOperatorToken(start, str);\n        };\n        /**\n         * Tokenize a 2/3 char long operator\n         *\n         * @param {?} start start index in the expression\n         * @param {?} one first symbol (always part of the operator)\n         * @param {?} twoCode code point for the second symbol\n         * @param {?} two second symbol (part of the operator when the second code point matches)\n         * @param {?=} threeCode code point for the third symbol\n         * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n         * @return {?}\n         */\n        _Scanner.prototype.scanComplexOperator = function (start, one, twoCode, two, threeCode, three) {\n            this.advance();\n            var /** @type {?} */ str = one;\n            if (this.peek == twoCode) {\n                this.advance();\n                str += two;\n            }\n            if (threeCode != null && this.peek == threeCode) {\n                this.advance();\n                str += three;\n            }\n            return newOperatorToken(start, str);\n        };\n        /**\n         * @return {?}\n         */\n        _Scanner.prototype.scanIdentifier = function () {\n            var /** @type {?} */ start = this.index;\n            this.advance();\n            while (isIdentifierPart(this.peek))\n                this.advance();\n            var /** @type {?} */ str = this.input.substring(start, this.index);\n            return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n                newIdentifierToken(start, str);\n        };\n        /**\n         * @param {?} start\n         * @return {?}\n         */\n        _Scanner.prototype.scanNumber = function (start) {\n            var /** @type {?} */ simple = (this.index === start);\n            this.advance(); // Skip initial digit.\n            while (true) {\n                if (isDigit(this.peek)) {\n                }\n                else if (this.peek == $PERIOD) {\n                    simple = false;\n                }\n                else if (isExponentStart(this.peek)) {\n                    this.advance();\n                    if (isExponentSign(this.peek))\n                        this.advance();\n                    if (!isDigit(this.peek))\n                        return this.error('Invalid exponent', -1);\n                    simple = false;\n                }\n                else {\n                    break;\n                }\n                this.advance();\n            }\n            var /** @type {?} */ str = this.input.substring(start, this.index);\n            var /** @type {?} */ value = simple ? parseIntAutoRadix(str) : parseFloat(str);\n            return newNumberToken(start, value);\n        };\n        /**\n         * @return {?}\n         */\n        _Scanner.prototype.scanString = function () {\n            var /** @type {?} */ start = this.index;\n            var /** @type {?} */ quote = this.peek;\n            this.advance(); // Skip initial quote.\n            var /** @type {?} */ buffer = '';\n            var /** @type {?} */ marker = this.index;\n            var /** @type {?} */ input = this.input;\n            while (this.peek != quote) {\n                if (this.peek == $BACKSLASH) {\n                    buffer += input.substring(marker, this.index);\n                    this.advance();\n                    var /** @type {?} */ unescapedCode = void 0;\n                    // Workaround for TS2.1-introduced type strictness\n                    this.peek = this.peek;\n                    if (this.peek == $u) {\n                        // 4 character hex code for unicode character.\n                        var /** @type {?} */ hex = input.substring(this.index + 1, this.index + 5);\n                        if (/^[0-9a-f]+$/i.test(hex)) {\n                            unescapedCode = parseInt(hex, 16);\n                        }\n                        else {\n                            return this.error(\"Invalid unicode escape [\\\\u\" + hex + \"]\", 0);\n                        }\n                        for (var /** @type {?} */ i = 0; i < 5; i++) {\n                            this.advance();\n                        }\n                    }\n                    else {\n                        unescapedCode = unescape(this.peek);\n                        this.advance();\n                    }\n                    buffer += String.fromCharCode(unescapedCode);\n                    marker = this.index;\n                }\n                else if (this.peek == $EOF) {\n                    return this.error('Unterminated quote', 0);\n                }\n                else {\n                    this.advance();\n                }\n            }\n            var /** @type {?} */ last = input.substring(marker, this.index);\n            this.advance(); // Skip terminating quote.\n            return newStringToken(start, buffer + last);\n        };\n        /**\n         * @param {?} message\n         * @param {?} offset\n         * @return {?}\n         */\n        _Scanner.prototype.error = function (message, offset) {\n            var /** @type {?} */ position = this.index + offset;\n            return newErrorToken(position, \"Lexer Error: \" + message + \" at column \" + position + \" in expression [\" + this.input + \"]\");\n        };\n        return _Scanner;\n    }());\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    function isIdentifierStart(code) {\n        return ($a <= code && code <= $z) || ($A <= code && code <= $Z) ||\n            (code == $_) || (code == $$);\n    }\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    function isIdentifier(input) {\n        if (input.length == 0)\n            return false;\n        var /** @type {?} */ scanner = new _Scanner(input);\n        if (!isIdentifierStart(scanner.peek))\n            return false;\n        scanner.advance();\n        while (scanner.peek !== $EOF) {\n            if (!isIdentifierPart(scanner.peek))\n                return false;\n            scanner.advance();\n        }\n        return true;\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    function isIdentifierPart(code) {\n        return isAsciiLetter(code) || isDigit(code) || (code == $_) ||\n            (code == $$);\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    function isExponentStart(code) {\n        return code == $e || code == $E;\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    function isExponentSign(code) {\n        return code == $MINUS || code == $PLUS;\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    function isQuote(code) {\n        return code === $SQ || code === $DQ || code === $BT;\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    function unescape(code) {\n        switch (code) {\n            case $n:\n                return $LF;\n            case $f:\n                return $FF;\n            case $r:\n                return $CR;\n            case $t:\n                return $TAB;\n            case $v:\n                return $VTAB;\n            default:\n                return code;\n        }\n    }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    function parseIntAutoRadix(text) {\n        var /** @type {?} */ result = parseInt(text);\n        if (isNaN(result)) {\n            throw new Error('Invalid integer literal when parsing ' + text);\n        }\n        return result;\n    }\n    var SplitInterpolation = (function () {\n        /**\n         * @param {?} strings\n         * @param {?} expressions\n         * @param {?} offsets\n         */\n        function SplitInterpolation(strings, expressions, offsets) {\n            this.strings = strings;\n            this.expressions = expressions;\n            this.offsets = offsets;\n        }\n        return SplitInterpolation;\n    }());\n    var TemplateBindingParseResult = (function () {\n        /**\n         * @param {?} templateBindings\n         * @param {?} warnings\n         * @param {?} errors\n         */\n        function TemplateBindingParseResult(templateBindings, warnings, errors) {\n            this.templateBindings = templateBindings;\n            this.warnings = warnings;\n            this.errors = errors;\n        }\n        return TemplateBindingParseResult;\n    }());\n    /**\n     * @param {?} config\n     * @return {?}\n     */\n    function _createInterpolateRegExp(config) {\n        var /** @type {?} */ pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n        return new RegExp(pattern, 'g');\n    }\n    var Parser = (function () {\n        /**\n         * @param {?} _lexer\n         */\n        function Parser(_lexer) {\n            this._lexer = _lexer;\n            this.errors = [];\n        }\n        /**\n         * @param {?} input\n         * @param {?} location\n         * @param {?=} interpolationConfig\n         * @return {?}\n         */\n        Parser.prototype.parseAction = function (input, location, interpolationConfig) {\n            if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n            this._checkNoInterpolation(input, location, interpolationConfig);\n            var /** @type {?} */ sourceToLex = this._stripComments(input);\n            var /** @type {?} */ tokens = this._lexer.tokenize(this._stripComments(input));\n            var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n                .parseChain();\n            return new ASTWithSource(ast, input, location, this.errors);\n        };\n        /**\n         * @param {?} input\n         * @param {?} location\n         * @param {?=} interpolationConfig\n         * @return {?}\n         */\n        Parser.prototype.parseBinding = function (input, location, interpolationConfig) {\n            if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n            var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n            return new ASTWithSource(ast, input, location, this.errors);\n        };\n        /**\n         * @param {?} input\n         * @param {?} location\n         * @param {?=} interpolationConfig\n         * @return {?}\n         */\n        Parser.prototype.parseSimpleBinding = function (input, location, interpolationConfig) {\n            if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n            var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n            var /** @type {?} */ errors = SimpleExpressionChecker.check(ast);\n            if (errors.length > 0) {\n                this._reportError(\"Host binding expression cannot contain \" + errors.join(' '), input, location);\n            }\n            return new ASTWithSource(ast, input, location, this.errors);\n        };\n        /**\n         * @param {?} message\n         * @param {?} input\n         * @param {?} errLocation\n         * @param {?=} ctxLocation\n         * @return {?}\n         */\n        Parser.prototype._reportError = function (message, input, errLocation, ctxLocation) {\n            this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n        };\n        /**\n         * @param {?} input\n         * @param {?} location\n         * @param {?} interpolationConfig\n         * @return {?}\n         */\n        Parser.prototype._parseBindingAst = function (input, location, interpolationConfig) {\n            // Quotes expressions use 3rd-party expression language. We don't want to use\n            // our lexer or parser for that, so we check for that ahead of time.\n            var /** @type {?} */ quote = this._parseQuote(input, location);\n            if (quote != null) {\n                return quote;\n            }\n            this._checkNoInterpolation(input, location, interpolationConfig);\n            var /** @type {?} */ sourceToLex = this._stripComments(input);\n            var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n            return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n                .parseChain();\n        };\n        /**\n         * @param {?} input\n         * @param {?} location\n         * @return {?}\n         */\n        Parser.prototype._parseQuote = function (input, location) {\n            if (input == null)\n                return null;\n            var /** @type {?} */ prefixSeparatorIndex = input.indexOf(':');\n            if (prefixSeparatorIndex == -1)\n                return null;\n            var /** @type {?} */ prefix = input.substring(0, prefixSeparatorIndex).trim();\n            if (!isIdentifier(prefix))\n                return null;\n            var /** @type {?} */ uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n            return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n        };\n        /**\n         * @param {?} prefixToken\n         * @param {?} input\n         * @param {?} location\n         * @return {?}\n         */\n        Parser.prototype.parseTemplateBindings = function (prefixToken, input, location) {\n            var /** @type {?} */ tokens = this._lexer.tokenize(input);\n            if (prefixToken) {\n                // Prefix the tokens with the tokens from prefixToken but have them take no space (0 index).\n                var /** @type {?} */ prefixTokens = this._lexer.tokenize(prefixToken).map(function (t) {\n                    t.index = 0;\n                    return t;\n                });\n                tokens.unshift.apply(tokens, prefixTokens);\n            }\n            return new _ParseAST(input, location, tokens, input.length, false, this.errors, 0)\n                .parseTemplateBindings();\n        };\n        /**\n         * @param {?} input\n         * @param {?} location\n         * @param {?=} interpolationConfig\n         * @return {?}\n         */\n        Parser.prototype.parseInterpolation = function (input, location, interpolationConfig) {\n            if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n            var /** @type {?} */ split = this.splitInterpolation(input, location, interpolationConfig);\n            if (split == null)\n                return null;\n            var /** @type {?} */ expressions = [];\n            for (var /** @type {?} */ i = 0; i < split.expressions.length; ++i) {\n                var /** @type {?} */ expressionText = split.expressions[i];\n                var /** @type {?} */ sourceToLex = this._stripComments(expressionText);\n                var /** @type {?} */ tokens = this._lexer.tokenize(this._stripComments(split.expressions[i]));\n                var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n                    .parseChain();\n                expressions.push(ast);\n            }\n            return new ASTWithSource(new Interpolation(new ParseSpan(0, input == null ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n        };\n        /**\n         * @param {?} input\n         * @param {?} location\n         * @param {?=} interpolationConfig\n         * @return {?}\n         */\n        Parser.prototype.splitInterpolation = function (input, location, interpolationConfig) {\n            if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n            var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n            var /** @type {?} */ parts = input.split(regexp);\n            if (parts.length <= 1) {\n                return null;\n            }\n            var /** @type {?} */ strings = [];\n            var /** @type {?} */ expressions = [];\n            var /** @type {?} */ offsets = [];\n            var /** @type {?} */ offset = 0;\n            for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n                var /** @type {?} */ part = parts[i];\n                if (i % 2 === 0) {\n                    // fixed string\n                    strings.push(part);\n                    offset += part.length;\n                }\n                else if (part.trim().length > 0) {\n                    offset += interpolationConfig.start.length;\n                    expressions.push(part);\n                    offsets.push(offset);\n                    offset += part.length + interpolationConfig.end.length;\n                }\n                else {\n                    this._reportError('Blank expressions are not allowed in interpolated strings', input, \"at column \" + this._findInterpolationErrorColumn(parts, i, interpolationConfig) + \" in\", location);\n                    expressions.push('$implict');\n                    offsets.push(offset);\n                }\n            }\n            return new SplitInterpolation(strings, expressions, offsets);\n        };\n        /**\n         * @param {?} input\n         * @param {?} location\n         * @return {?}\n         */\n        Parser.prototype.wrapLiteralPrimitive = function (input, location) {\n            return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, input == null ? 0 : input.length), input), input, location, this.errors);\n        };\n        /**\n         * @param {?} input\n         * @return {?}\n         */\n        Parser.prototype._stripComments = function (input) {\n            var /** @type {?} */ i = this._commentStart(input);\n            return i != null ? input.substring(0, i).trim() : input;\n        };\n        /**\n         * @param {?} input\n         * @return {?}\n         */\n        Parser.prototype._commentStart = function (input) {\n            var /** @type {?} */ outerQuote = null;\n            for (var /** @type {?} */ i = 0; i < input.length - 1; i++) {\n                var /** @type {?} */ char = input.charCodeAt(i);\n                var /** @type {?} */ nextChar = input.charCodeAt(i + 1);\n                if (char === $SLASH && nextChar == $SLASH && outerQuote == null)\n                    return i;\n                if (outerQuote === char) {\n                    outerQuote = null;\n                }\n                else if (outerQuote == null && isQuote(char)) {\n                    outerQuote = char;\n                }\n            }\n            return null;\n        };\n        /**\n         * @param {?} input\n         * @param {?} location\n         * @param {?} interpolationConfig\n         * @return {?}\n         */\n        Parser.prototype._checkNoInterpolation = function (input, location, interpolationConfig) {\n            var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n            var /** @type {?} */ parts = input.split(regexp);\n            if (parts.length > 1) {\n                this._reportError(\"Got interpolation (\" + interpolationConfig.start + interpolationConfig.end + \") where expression was expected\", input, \"at column \" + this._findInterpolationErrorColumn(parts, 1, interpolationConfig) + \" in\", location);\n            }\n        };\n        /**\n         * @param {?} parts\n         * @param {?} partInErrIdx\n         * @param {?} interpolationConfig\n         * @return {?}\n         */\n        Parser.prototype._findInterpolationErrorColumn = function (parts, partInErrIdx, interpolationConfig) {\n            var /** @type {?} */ errLocation = '';\n            for (var /** @type {?} */ j = 0; j < partInErrIdx; j++) {\n                errLocation += j % 2 === 0 ?\n                    parts[j] :\n                    \"\" + interpolationConfig.start + parts[j] + interpolationConfig.end;\n            }\n            return errLocation.length;\n        };\n        return Parser;\n    }());\n    Parser.decorators = [\n        { type: CompilerInjectable },\n    ];\n    /**\n     * @nocollapse\n     */\n    Parser.ctorParameters = function () { return [\n        { type: Lexer, },\n    ]; };\n    var _ParseAST = (function () {\n        /**\n         * @param {?} input\n         * @param {?} location\n         * @param {?} tokens\n         * @param {?} inputLength\n         * @param {?} parseAction\n         * @param {?} errors\n         * @param {?} offset\n         */\n        function _ParseAST(input, location, tokens, inputLength, parseAction, errors, offset) {\n            this.input = input;\n            this.location = location;\n            this.tokens = tokens;\n            this.inputLength = inputLength;\n            this.parseAction = parseAction;\n            this.errors = errors;\n            this.offset = offset;\n            this.rparensExpected = 0;\n            this.rbracketsExpected = 0;\n            this.rbracesExpected = 0;\n            this.index = 0;\n        }\n        /**\n         * @param {?} offset\n         * @return {?}\n         */\n        _ParseAST.prototype.peek = function (offset) {\n            var /** @type {?} */ i = this.index + offset;\n            return i < this.tokens.length ? this.tokens[i] : EOF;\n        };\n        Object.defineProperty(_ParseAST.prototype, \"next\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.peek(0); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(_ParseAST.prototype, \"inputIndex\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                return (this.index < this.tokens.length) ? this.next.index + this.offset :\n                    this.inputLength + this.offset;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} start\n         * @return {?}\n         */\n        _ParseAST.prototype.span = function (start) { return new ParseSpan(start, this.inputIndex); };\n        /**\n         * @return {?}\n         */\n        _ParseAST.prototype.advance = function () { this.index++; };\n        /**\n         * @param {?} code\n         * @return {?}\n         */\n        _ParseAST.prototype.optionalCharacter = function (code) {\n            if (this.next.isCharacter(code)) {\n                this.advance();\n                return true;\n            }\n            else {\n                return false;\n            }\n        };\n        /**\n         * @return {?}\n         */\n        _ParseAST.prototype.peekKeywordLet = function () { return this.next.isKeywordLet(); };\n        /**\n         * @return {?}\n         */\n        _ParseAST.prototype.peekKeywordAs = function () { return this.next.isKeywordAs(); };\n        /**\n         * @param {?} code\n         * @return {?}\n         */\n        _ParseAST.prototype.expectCharacter = function (code) {\n            if (this.optionalCharacter(code))\n                return;\n            this.error(\"Missing expected \" + String.fromCharCode(code));\n        };\n        /**\n         * @param {?} op\n         * @return {?}\n         */\n        _ParseAST.prototype.optionalOperator = function (op) {\n            if (this.next.isOperator(op)) {\n                this.advance();\n                return true;\n            }\n            else {\n                return false;\n            }\n        };\n        /**\n         * @param {?} operator\n         * @return {?}\n         */\n        _ParseAST.prototype.expectOperator = function (operator) {\n            if (this.optionalOperator(operator))\n                return;\n            this.error(\"Missing expected operator \" + operator);\n        };\n        /**\n         * @return {?}\n         */\n        _ParseAST.prototype.expectIdentifierOrKeyword = function () {\n            var /** @type {?} */ n = this.next;\n            if (!n.isIdentifier() && !n.isKeyword()) {\n                this.error(\"Unexpected token \" + n + \", expected identifier or keyword\");\n                return '';\n            }\n            this.advance();\n            return n.toString();\n        };\n        /**\n         * @return {?}\n         */\n        _ParseAST.prototype.expectIdentifierOrKeywordOrString = function () {\n            var /** @type {?} */ n = this.next;\n            if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n                this.error(\"Unexpected token \" + n + \", expected identifier, keyword, or string\");\n                return '';\n            }\n            this.advance();\n            return n.toString();\n        };\n        /**\n         * @return {?}\n         */\n        _ParseAST.prototype.parseChain = function () {\n            var /** @type {?} */ exprs = [];\n            var /** @type {?} */ start = this.inputIndex;\n            while (this.index < this.tokens.length) {\n                var /** @type {?} */ expr = this.parsePipe();\n                exprs.push(expr);\n                if (this.optionalCharacter($SEMICOLON)) {\n                    if (!this.parseAction) {\n                        this.error('Binding expression cannot contain chained expression');\n                    }\n                    while (this.optionalCharacter($SEMICOLON)) {\n                    } // read all semicolons\n                }\n                else if (this.index < this.tokens.length) {\n                    this.error(\"Unexpected token '\" + this.next + \"'\");\n                }\n            }\n            if (exprs.length == 0)\n                return new EmptyExpr(this.span(start));\n            if (exprs.length == 1)\n                return exprs[0];\n            return new Chain(this.span(start), exprs);\n        };\n        /**\n         * @return {?}\n         */\n        _ParseAST.prototype.parsePipe = function () {\n            var /** @type {?} */ result = this.parseExpression();\n            if (this.optionalOperator('|')) {\n                if (this.parseAction) {\n                    this.error('Cannot have a pipe in an action expression');\n                }\n                do {\n                    var /** @type {?} */ name = this.expectIdentifierOrKeyword();\n                    var /** @type {?} */ args = [];\n                    while (this.optionalCharacter($COLON)) {\n                        args.push(this.parseExpression());\n                    }\n                    result = new BindingPipe(this.span(result.span.start), result, name, args);\n                } while (this.optionalOperator('|'));\n            }\n            return result;\n        };\n        /**\n         * @return {?}\n         */\n        _ParseAST.prototype.parseExpression = function () { return this.parseConditional(); };\n        /**\n         * @return {?}\n         */\n        _ParseAST.prototype.parseConditional = function () {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ result = this.parseLogicalOr();\n            if (this.optionalOperator('?')) {\n                var /** @type {?} */ yes = this.parsePipe();\n                var /** @type {?} */ no = void 0;\n                if (!this.optionalCharacter($COLON)) {\n                    var /** @type {?} */ end = this.inputIndex;\n                    var /** @type {?} */ expression = this.input.substring(start, end);\n                    this.error(\"Conditional expression \" + expression + \" requires all 3 expressions\");\n                    no = new EmptyExpr(this.span(start));\n                }\n                else {\n                    no = this.parsePipe();\n                }\n                return new Conditional(this.span(start), result, yes, no);\n            }\n            else {\n                return result;\n            }\n        };\n        /**\n         * @return {?}\n         */\n        _ParseAST.prototype.parseLogicalOr = function () {\n            // '||'\n            var /** @type {?} */ result = this.parseLogicalAnd();\n            while (this.optionalOperator('||')) {\n                var /** @type {?} */ right = this.parseLogicalAnd();\n                result = new Binary(this.span(result.span.start), '||', result, right);\n            }\n            return result;\n        };\n        /**\n         * @return {?}\n         */\n        _ParseAST.prototype.parseLogicalAnd = function () {\n            // '&&'\n            var /** @type {?} */ result = this.parseEquality();\n            while (this.optionalOperator('&&')) {\n                var /** @type {?} */ right = this.parseEquality();\n                result = new Binary(this.span(result.span.start), '&&', result, right);\n            }\n            return result;\n        };\n        /**\n         * @return {?}\n         */\n        _ParseAST.prototype.parseEquality = function () {\n            // '==','!=','===','!=='\n            var /** @type {?} */ result = this.parseRelational();\n            while (this.next.type == TokenType.Operator) {\n                var /** @type {?} */ operator = this.next.strValue;\n                switch (operator) {\n                    case '==':\n                    case '===':\n                    case '!=':\n                    case '!==':\n                        this.advance();\n                        var /** @type {?} */ right = this.parseRelational();\n                        result = new Binary(this.span(result.span.start), operator, result, right);\n                        continue;\n                }\n                break;\n            }\n            return result;\n        };\n        /**\n         * @return {?}\n         */\n        _ParseAST.prototype.parseRelational = function () {\n            // '<', '>', '<=', '>='\n            var /** @type {?} */ result = this.parseAdditive();\n            while (this.next.type == TokenType.Operator) {\n                var /** @type {?} */ operator = this.next.strValue;\n                switch (operator) {\n                    case '<':\n                    case '>':\n                    case '<=':\n                    case '>=':\n                        this.advance();\n                        var /** @type {?} */ right = this.parseAdditive();\n                        result = new Binary(this.span(result.span.start), operator, result, right);\n                        continue;\n                }\n                break;\n            }\n            return result;\n        };\n        /**\n         * @return {?}\n         */\n        _ParseAST.prototype.parseAdditive = function () {\n            // '+', '-'\n            var /** @type {?} */ result = this.parseMultiplicative();\n            while (this.next.type == TokenType.Operator) {\n                var /** @type {?} */ operator = this.next.strValue;\n                switch (operator) {\n                    case '+':\n                    case '-':\n                        this.advance();\n                        var /** @type {?} */ right = this.parseMultiplicative();\n                        result = new Binary(this.span(result.span.start), operator, result, right);\n                        continue;\n                }\n                break;\n            }\n            return result;\n        };\n        /**\n         * @return {?}\n         */\n        _ParseAST.prototype.parseMultiplicative = function () {\n            // '*', '%', '/'\n            var /** @type {?} */ result = this.parsePrefix();\n            while (this.next.type == TokenType.Operator) {\n                var /** @type {?} */ operator = this.next.strValue;\n                switch (operator) {\n                    case '*':\n                    case '%':\n                    case '/':\n                        this.advance();\n                        var /** @type {?} */ right = this.parsePrefix();\n                        result = new Binary(this.span(result.span.start), operator, result, right);\n                        continue;\n                }\n                break;\n            }\n            return result;\n        };\n        /**\n         * @return {?}\n         */\n        _ParseAST.prototype.parsePrefix = function () {\n            if (this.next.type == TokenType.Operator) {\n                var /** @type {?} */ start = this.inputIndex;\n                var /** @type {?} */ operator = this.next.strValue;\n                var /** @type {?} */ result = void 0;\n                switch (operator) {\n                    case '+':\n                        this.advance();\n                        return this.parsePrefix();\n                    case '-':\n                        this.advance();\n                        result = this.parsePrefix();\n                        return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n                    case '!':\n                        this.advance();\n                        result = this.parsePrefix();\n                        return new PrefixNot(this.span(start), result);\n                }\n            }\n            return this.parseCallChain();\n        };\n        /**\n         * @return {?}\n         */\n        _ParseAST.prototype.parseCallChain = function () {\n            var /** @type {?} */ result = this.parsePrimary();\n            while (true) {\n                if (this.optionalCharacter($PERIOD)) {\n                    result = this.parseAccessMemberOrMethodCall(result, false);\n                }\n                else if (this.optionalOperator('?.')) {\n                    result = this.parseAccessMemberOrMethodCall(result, true);\n                }\n                else if (this.optionalCharacter($LBRACKET)) {\n                    this.rbracketsExpected++;\n                    var /** @type {?} */ key = this.parsePipe();\n                    this.rbracketsExpected--;\n                    this.expectCharacter($RBRACKET);\n                    if (this.optionalOperator('=')) {\n                        var /** @type {?} */ value = this.parseConditional();\n                        result = new KeyedWrite(this.span(result.span.start), result, key, value);\n                    }\n                    else {\n                        result = new KeyedRead(this.span(result.span.start), result, key);\n                    }\n                }\n                else if (this.optionalCharacter($LPAREN)) {\n                    this.rparensExpected++;\n                    var /** @type {?} */ args = this.parseCallArguments();\n                    this.rparensExpected--;\n                    this.expectCharacter($RPAREN);\n                    result = new FunctionCall(this.span(result.span.start), result, args);\n                }\n                else {\n                    return result;\n                }\n            }\n        };\n        /**\n         * @return {?}\n         */\n        _ParseAST.prototype.parsePrimary = function () {\n            var /** @type {?} */ start = this.inputIndex;\n            if (this.optionalCharacter($LPAREN)) {\n                this.rparensExpected++;\n                var /** @type {?} */ result = this.parsePipe();\n                this.rparensExpected--;\n                this.expectCharacter($RPAREN);\n                return result;\n            }\n            else if (this.next.isKeywordNull()) {\n                this.advance();\n                return new LiteralPrimitive(this.span(start), null);\n            }\n            else if (this.next.isKeywordUndefined()) {\n                this.advance();\n                return new LiteralPrimitive(this.span(start), void 0);\n            }\n            else if (this.next.isKeywordTrue()) {\n                this.advance();\n                return new LiteralPrimitive(this.span(start), true);\n            }\n            else if (this.next.isKeywordFalse()) {\n                this.advance();\n                return new LiteralPrimitive(this.span(start), false);\n            }\n            else if (this.next.isKeywordThis()) {\n                this.advance();\n                return new ImplicitReceiver(this.span(start));\n            }\n            else if (this.optionalCharacter($LBRACKET)) {\n                this.rbracketsExpected++;\n                var /** @type {?} */ elements = this.parseExpressionList($RBRACKET);\n                this.rbracketsExpected--;\n                this.expectCharacter($RBRACKET);\n                return new LiteralArray(this.span(start), elements);\n            }\n            else if (this.next.isCharacter($LBRACE)) {\n                return this.parseLiteralMap();\n            }\n            else if (this.next.isIdentifier()) {\n                return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n            }\n            else if (this.next.isNumber()) {\n                var /** @type {?} */ value = this.next.toNumber();\n                this.advance();\n                return new LiteralPrimitive(this.span(start), value);\n            }\n            else if (this.next.isString()) {\n                var /** @type {?} */ literalValue = this.next.toString();\n                this.advance();\n                return new LiteralPrimitive(this.span(start), literalValue);\n            }\n            else if (this.index >= this.tokens.length) {\n                this.error(\"Unexpected end of expression: \" + this.input);\n                return new EmptyExpr(this.span(start));\n            }\n            else {\n                this.error(\"Unexpected token \" + this.next);\n                return new EmptyExpr(this.span(start));\n            }\n        };\n        /**\n         * @param {?} terminator\n         * @return {?}\n         */\n        _ParseAST.prototype.parseExpressionList = function (terminator) {\n            var /** @type {?} */ result = [];\n            if (!this.next.isCharacter(terminator)) {\n                do {\n                    result.push(this.parsePipe());\n                } while (this.optionalCharacter($COMMA));\n            }\n            return result;\n        };\n        /**\n         * @return {?}\n         */\n        _ParseAST.prototype.parseLiteralMap = function () {\n            var /** @type {?} */ keys = [];\n            var /** @type {?} */ values = [];\n            var /** @type {?} */ start = this.inputIndex;\n            this.expectCharacter($LBRACE);\n            if (!this.optionalCharacter($RBRACE)) {\n                this.rbracesExpected++;\n                do {\n                    var /** @type {?} */ key = this.expectIdentifierOrKeywordOrString();\n                    keys.push(key);\n                    this.expectCharacter($COLON);\n                    values.push(this.parsePipe());\n                } while (this.optionalCharacter($COMMA));\n                this.rbracesExpected--;\n                this.expectCharacter($RBRACE);\n            }\n            return new LiteralMap(this.span(start), keys, values);\n        };\n        /**\n         * @param {?} receiver\n         * @param {?=} isSafe\n         * @return {?}\n         */\n        _ParseAST.prototype.parseAccessMemberOrMethodCall = function (receiver, isSafe) {\n            if (isSafe === void 0) { isSafe = false; }\n            var /** @type {?} */ start = receiver.span.start;\n            var /** @type {?} */ id = this.expectIdentifierOrKeyword();\n            if (this.optionalCharacter($LPAREN)) {\n                this.rparensExpected++;\n                var /** @type {?} */ args = this.parseCallArguments();\n                this.expectCharacter($RPAREN);\n                this.rparensExpected--;\n                var /** @type {?} */ span = this.span(start);\n                return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                    new MethodCall(span, receiver, id, args);\n            }\n            else {\n                if (isSafe) {\n                    if (this.optionalOperator('=')) {\n                        this.error('The \\'?.\\' operator cannot be used in the assignment');\n                        return new EmptyExpr(this.span(start));\n                    }\n                    else {\n                        return new SafePropertyRead(this.span(start), receiver, id);\n                    }\n                }\n                else {\n                    if (this.optionalOperator('=')) {\n                        if (!this.parseAction) {\n                            this.error('Bindings cannot contain assignments');\n                            return new EmptyExpr(this.span(start));\n                        }\n                        var /** @type {?} */ value = this.parseConditional();\n                        return new PropertyWrite(this.span(start), receiver, id, value);\n                    }\n                    else {\n                        return new PropertyRead(this.span(start), receiver, id);\n                    }\n                }\n            }\n        };\n        /**\n         * @return {?}\n         */\n        _ParseAST.prototype.parseCallArguments = function () {\n            if (this.next.isCharacter($RPAREN))\n                return [];\n            var /** @type {?} */ positionals = [];\n            do {\n                positionals.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n            return (positionals);\n        };\n        /**\n         * An identifier, a keyword, a string with an optional `-` inbetween.\n         * @return {?}\n         */\n        _ParseAST.prototype.expectTemplateBindingKey = function () {\n            var /** @type {?} */ result = '';\n            var /** @type {?} */ operatorFound = false;\n            do {\n                result += this.expectIdentifierOrKeywordOrString();\n                operatorFound = this.optionalOperator('-');\n                if (operatorFound) {\n                    result += '-';\n                }\n            } while (operatorFound);\n            return result.toString();\n        };\n        /**\n         * @return {?}\n         */\n        _ParseAST.prototype.parseTemplateBindings = function () {\n            var /** @type {?} */ bindings = [];\n            var /** @type {?} */ prefix = null;\n            var /** @type {?} */ warnings = [];\n            while (this.index < this.tokens.length) {\n                var /** @type {?} */ start = this.inputIndex;\n                var /** @type {?} */ keyIsVar = this.peekKeywordLet();\n                if (keyIsVar) {\n                    this.advance();\n                }\n                var /** @type {?} */ rawKey = this.expectTemplateBindingKey();\n                var /** @type {?} */ key = rawKey;\n                if (!keyIsVar) {\n                    if (prefix == null) {\n                        prefix = key;\n                    }\n                    else {\n                        key = prefix + key[0].toUpperCase() + key.substring(1);\n                    }\n                }\n                this.optionalCharacter($COLON);\n                var /** @type {?} */ name = null;\n                var /** @type {?} */ expression = null;\n                if (keyIsVar) {\n                    if (this.optionalOperator('=')) {\n                        name = this.expectTemplateBindingKey();\n                    }\n                    else {\n                        name = '\\$implicit';\n                    }\n                }\n                else if (this.peekKeywordAs()) {\n                    var /** @type {?} */ letStart = this.inputIndex;\n                    this.advance(); // consume `as`\n                    name = rawKey;\n                    key = this.expectTemplateBindingKey(); // read local var name\n                    keyIsVar = true;\n                }\n                else if (this.next !== EOF && !this.peekKeywordLet()) {\n                    var /** @type {?} */ start_2 = this.inputIndex;\n                    var /** @type {?} */ ast = this.parsePipe();\n                    var /** @type {?} */ source = this.input.substring(start_2 - this.offset, this.inputIndex - this.offset);\n                    expression = new ASTWithSource(ast, source, this.location, this.errors);\n                }\n                bindings.push(new TemplateBinding(this.span(start), key, keyIsVar, name, expression));\n                if (this.peekKeywordAs() && !keyIsVar) {\n                    var /** @type {?} */ letStart = this.inputIndex;\n                    this.advance(); // consume `as`\n                    var /** @type {?} */ letName = this.expectTemplateBindingKey(); // read local var name\n                    bindings.push(new TemplateBinding(this.span(letStart), letName, true, key, null));\n                }\n                if (!this.optionalCharacter($SEMICOLON)) {\n                    this.optionalCharacter($COMMA);\n                }\n            }\n            return new TemplateBindingParseResult(bindings, warnings, this.errors);\n        };\n        /**\n         * @param {?} message\n         * @param {?=} index\n         * @return {?}\n         */\n        _ParseAST.prototype.error = function (message, index) {\n            if (index === void 0) { index = null; }\n            this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n            this.skip();\n        };\n        /**\n         * @param {?=} index\n         * @return {?}\n         */\n        _ParseAST.prototype.locationText = function (index) {\n            if (index === void 0) { index = null; }\n            if (index == null)\n                index = this.index;\n            return (index < this.tokens.length) ? \"at column \" + (this.tokens[index].index + 1) + \" in\" :\n                \"at the end of the expression\";\n        };\n        /**\n         * @return {?}\n         */\n        _ParseAST.prototype.skip = function () {\n            var /** @type {?} */ n = this.next;\n            while (this.index < this.tokens.length && !n.isCharacter($SEMICOLON) &&\n                (this.rparensExpected <= 0 || !n.isCharacter($RPAREN)) &&\n                (this.rbracesExpected <= 0 || !n.isCharacter($RBRACE)) &&\n                (this.rbracketsExpected <= 0 || !n.isCharacter($RBRACKET))) {\n                if (this.next.isError()) {\n                    this.errors.push(new ParserError(this.next.toString(), this.input, this.locationText(), this.location));\n                }\n                this.advance();\n                n = this.next;\n            }\n        };\n        return _ParseAST;\n    }());\n    var SimpleExpressionChecker = (function () {\n        function SimpleExpressionChecker() {\n            this.errors = [];\n        }\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        SimpleExpressionChecker.check = function (ast) {\n            var /** @type {?} */ s = new SimpleExpressionChecker();\n            ast.visit(s);\n            return s.errors;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        SimpleExpressionChecker.prototype.visitImplicitReceiver = function (ast, context) { };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        SimpleExpressionChecker.prototype.visitInterpolation = function (ast, context) { };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        SimpleExpressionChecker.prototype.visitLiteralPrimitive = function (ast, context) { };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        SimpleExpressionChecker.prototype.visitPropertyRead = function (ast, context) { };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        SimpleExpressionChecker.prototype.visitPropertyWrite = function (ast, context) { };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        SimpleExpressionChecker.prototype.visitSafePropertyRead = function (ast, context) { };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        SimpleExpressionChecker.prototype.visitMethodCall = function (ast, context) { };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        SimpleExpressionChecker.prototype.visitSafeMethodCall = function (ast, context) { };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        SimpleExpressionChecker.prototype.visitFunctionCall = function (ast, context) { };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        SimpleExpressionChecker.prototype.visitLiteralArray = function (ast, context) { this.visitAll(ast.expressions); };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        SimpleExpressionChecker.prototype.visitLiteralMap = function (ast, context) { this.visitAll(ast.values); };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        SimpleExpressionChecker.prototype.visitBinary = function (ast, context) { };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        SimpleExpressionChecker.prototype.visitPrefixNot = function (ast, context) { };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        SimpleExpressionChecker.prototype.visitConditional = function (ast, context) { };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        SimpleExpressionChecker.prototype.visitPipe = function (ast, context) { this.errors.push('pipes'); };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        SimpleExpressionChecker.prototype.visitKeyedRead = function (ast, context) { };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        SimpleExpressionChecker.prototype.visitKeyedWrite = function (ast, context) { };\n        /**\n         * @param {?} asts\n         * @return {?}\n         */\n        SimpleExpressionChecker.prototype.visitAll = function (asts) {\n            var _this = this;\n            return asts.map(function (node) { return node.visit(_this); });\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        SimpleExpressionChecker.prototype.visitChain = function (ast, context) { };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        SimpleExpressionChecker.prototype.visitQuote = function (ast, context) { };\n        return SimpleExpressionChecker;\n    }());\n    var ParseLocation = (function () {\n        /**\n         * @param {?} file\n         * @param {?} offset\n         * @param {?} line\n         * @param {?} col\n         */\n        function ParseLocation(file, offset, line, col) {\n            this.file = file;\n            this.offset = offset;\n            this.line = line;\n            this.col = col;\n        }\n        /**\n         * @return {?}\n         */\n        ParseLocation.prototype.toString = function () {\n            return this.offset != null ? this.file.url + \"@\" + this.line + \":\" + this.col : this.file.url;\n        };\n        /**\n         * @param {?} delta\n         * @return {?}\n         */\n        ParseLocation.prototype.moveBy = function (delta) {\n            var /** @type {?} */ source = this.file.content;\n            var /** @type {?} */ len = source.length;\n            var /** @type {?} */ offset = this.offset;\n            var /** @type {?} */ line = this.line;\n            var /** @type {?} */ col = this.col;\n            while (offset > 0 && delta < 0) {\n                offset--;\n                delta++;\n                var /** @type {?} */ ch = source.charCodeAt(offset);\n                if (ch == $LF) {\n                    line--;\n                    var /** @type {?} */ priorLine = source.substr(0, offset - 1).lastIndexOf(String.fromCharCode($LF));\n                    col = priorLine > 0 ? offset - priorLine : offset;\n                }\n                else {\n                    col--;\n                }\n            }\n            while (offset < len && delta > 0) {\n                var /** @type {?} */ ch = source.charCodeAt(offset);\n                offset++;\n                delta--;\n                if (ch == $LF) {\n                    line++;\n                    col = 0;\n                }\n                else {\n                    col++;\n                }\n            }\n            return new ParseLocation(this.file, offset, line, col);\n        };\n        /**\n         * @param {?} maxChars\n         * @param {?} maxLines\n         * @return {?}\n         */\n        ParseLocation.prototype.getContext = function (maxChars, maxLines) {\n            var /** @type {?} */ content = this.file.content;\n            var /** @type {?} */ startOffset = this.offset;\n            if (startOffset != null) {\n                if (startOffset > content.length - 1) {\n                    startOffset = content.length - 1;\n                }\n                var /** @type {?} */ endOffset = startOffset;\n                var /** @type {?} */ ctxChars = 0;\n                var /** @type {?} */ ctxLines = 0;\n                while (ctxChars < maxChars && startOffset > 0) {\n                    startOffset--;\n                    ctxChars++;\n                    if (content[startOffset] == '\\n') {\n                        if (++ctxLines == maxLines) {\n                            break;\n                        }\n                    }\n                }\n                ctxChars = 0;\n                ctxLines = 0;\n                while (ctxChars < maxChars && endOffset < content.length - 1) {\n                    endOffset++;\n                    ctxChars++;\n                    if (content[endOffset] == '\\n') {\n                        if (++ctxLines == maxLines) {\n                            break;\n                        }\n                    }\n                }\n                return {\n                    before: content.substring(startOffset, this.offset),\n                    after: content.substring(this.offset, endOffset + 1),\n                };\n            }\n            return null;\n        };\n        return ParseLocation;\n    }());\n    var ParseSourceFile = (function () {\n        /**\n         * @param {?} content\n         * @param {?} url\n         */\n        function ParseSourceFile(content, url) {\n            this.content = content;\n            this.url = url;\n        }\n        return ParseSourceFile;\n    }());\n    var ParseSourceSpan = (function () {\n        /**\n         * @param {?} start\n         * @param {?} end\n         * @param {?=} details\n         */\n        function ParseSourceSpan(start, end, details) {\n            if (details === void 0) { details = null; }\n            this.start = start;\n            this.end = end;\n            this.details = details;\n        }\n        /**\n         * @return {?}\n         */\n        ParseSourceSpan.prototype.toString = function () {\n            return this.start.file.content.substring(this.start.offset, this.end.offset);\n        };\n        return ParseSourceSpan;\n    }());\n    var ParseErrorLevel = {};\n    ParseErrorLevel.WARNING = 0;\n    ParseErrorLevel.ERROR = 1;\n    ParseErrorLevel[ParseErrorLevel.WARNING] = \"WARNING\";\n    ParseErrorLevel[ParseErrorLevel.ERROR] = \"ERROR\";\n    var ParseError = (function () {\n        /**\n         * @param {?} span\n         * @param {?} msg\n         * @param {?=} level\n         */\n        function ParseError(span, msg, level) {\n            if (level === void 0) { level = ParseErrorLevel.ERROR; }\n            this.span = span;\n            this.msg = msg;\n            this.level = level;\n        }\n        /**\n         * @return {?}\n         */\n        ParseError.prototype.toString = function () {\n            var /** @type {?} */ ctx = this.span.start.getContext(100, 3);\n            var /** @type {?} */ contextStr = ctx ? \" (\\\"\" + ctx.before + \"[\" + ParseErrorLevel[this.level] + \" ->]\" + ctx.after + \"\\\")\" : '';\n            var /** @type {?} */ details = this.span.details ? \", \" + this.span.details : '';\n            return \"\" + this.msg + contextStr + \": \" + this.span.start + details;\n        };\n        return ParseError;\n    }());\n    /**\n     * @param {?} kind\n     * @param {?} type\n     * @return {?}\n     */\n    function typeSourceSpan(kind, type) {\n        var /** @type {?} */ moduleUrl = identifierModuleUrl(type);\n        var /** @type {?} */ sourceFileName = moduleUrl != null ? \"in \" + kind + \" \" + identifierName(type) + \" in \" + moduleUrl :\n            \"in \" + kind + \" \" + identifierName(type);\n        var /** @type {?} */ sourceFile = new ParseSourceFile('', sourceFileName);\n        return new ParseSourceSpan(new ParseLocation(sourceFile, null, null, null), new ParseLocation(sourceFile, null, null, null));\n    }\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Text = (function () {\n        /**\n         * @param {?} value\n         * @param {?} sourceSpan\n         */\n        function Text(value, sourceSpan) {\n            this.value = value;\n            this.sourceSpan = sourceSpan;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        Text.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n        return Text;\n    }());\n    var Expansion = (function () {\n        /**\n         * @param {?} switchValue\n         * @param {?} type\n         * @param {?} cases\n         * @param {?} sourceSpan\n         * @param {?} switchValueSourceSpan\n         */\n        function Expansion(switchValue, type, cases, sourceSpan, switchValueSourceSpan) {\n            this.switchValue = switchValue;\n            this.type = type;\n            this.cases = cases;\n            this.sourceSpan = sourceSpan;\n            this.switchValueSourceSpan = switchValueSourceSpan;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        Expansion.prototype.visit = function (visitor, context) { return visitor.visitExpansion(this, context); };\n        return Expansion;\n    }());\n    var ExpansionCase = (function () {\n        /**\n         * @param {?} value\n         * @param {?} expression\n         * @param {?} sourceSpan\n         * @param {?} valueSourceSpan\n         * @param {?} expSourceSpan\n         */\n        function ExpansionCase(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n            this.value = value;\n            this.expression = expression;\n            this.sourceSpan = sourceSpan;\n            this.valueSourceSpan = valueSourceSpan;\n            this.expSourceSpan = expSourceSpan;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        ExpansionCase.prototype.visit = function (visitor, context) { return visitor.visitExpansionCase(this, context); };\n        return ExpansionCase;\n    }());\n    var Attribute$1 = (function () {\n        /**\n         * @param {?} name\n         * @param {?} value\n         * @param {?} sourceSpan\n         * @param {?=} valueSpan\n         */\n        function Attribute$1(name, value, sourceSpan, valueSpan) {\n            this.name = name;\n            this.value = value;\n            this.sourceSpan = sourceSpan;\n            this.valueSpan = valueSpan;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        Attribute$1.prototype.visit = function (visitor, context) { return visitor.visitAttribute(this, context); };\n        return Attribute$1;\n    }());\n    var Element = (function () {\n        /**\n         * @param {?} name\n         * @param {?} attrs\n         * @param {?} children\n         * @param {?} sourceSpan\n         * @param {?} startSourceSpan\n         * @param {?} endSourceSpan\n         */\n        function Element(name, attrs, children, sourceSpan, startSourceSpan, endSourceSpan) {\n            this.name = name;\n            this.attrs = attrs;\n            this.children = children;\n            this.sourceSpan = sourceSpan;\n            this.startSourceSpan = startSourceSpan;\n            this.endSourceSpan = endSourceSpan;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        Element.prototype.visit = function (visitor, context) { return visitor.visitElement(this, context); };\n        return Element;\n    }());\n    var Comment = (function () {\n        /**\n         * @param {?} value\n         * @param {?} sourceSpan\n         */\n        function Comment(value, sourceSpan) {\n            this.value = value;\n            this.sourceSpan = sourceSpan;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        Comment.prototype.visit = function (visitor, context) { return visitor.visitComment(this, context); };\n        return Comment;\n    }());\n    /**\n     * @param {?} visitor\n     * @param {?} nodes\n     * @param {?=} context\n     * @return {?}\n     */\n    function visitAll(visitor, nodes, context) {\n        if (context === void 0) { context = null; }\n        var /** @type {?} */ result = [];\n        var /** @type {?} */ visit = visitor.visit ?\n            function (ast) { return visitor.visit(ast, context) || ast.visit(visitor, context); } :\n            function (ast) { return ast.visit(visitor, context); };\n        nodes.forEach(function (ast) {\n            var /** @type {?} */ astResult = visit(ast);\n            if (astResult) {\n                result.push(astResult);\n            }\n        });\n        return result;\n    }\n    var TokenType$1 = {};\n    TokenType$1.TAG_OPEN_START = 0;\n    TokenType$1.TAG_OPEN_END = 1;\n    TokenType$1.TAG_OPEN_END_VOID = 2;\n    TokenType$1.TAG_CLOSE = 3;\n    TokenType$1.TEXT = 4;\n    TokenType$1.ESCAPABLE_RAW_TEXT = 5;\n    TokenType$1.RAW_TEXT = 6;\n    TokenType$1.COMMENT_START = 7;\n    TokenType$1.COMMENT_END = 8;\n    TokenType$1.CDATA_START = 9;\n    TokenType$1.CDATA_END = 10;\n    TokenType$1.ATTR_NAME = 11;\n    TokenType$1.ATTR_VALUE = 12;\n    TokenType$1.DOC_TYPE = 13;\n    TokenType$1.EXPANSION_FORM_START = 14;\n    TokenType$1.EXPANSION_CASE_VALUE = 15;\n    TokenType$1.EXPANSION_CASE_EXP_START = 16;\n    TokenType$1.EXPANSION_CASE_EXP_END = 17;\n    TokenType$1.EXPANSION_FORM_END = 18;\n    TokenType$1.EOF = 19;\n    TokenType$1[TokenType$1.TAG_OPEN_START] = \"TAG_OPEN_START\";\n    TokenType$1[TokenType$1.TAG_OPEN_END] = \"TAG_OPEN_END\";\n    TokenType$1[TokenType$1.TAG_OPEN_END_VOID] = \"TAG_OPEN_END_VOID\";\n    TokenType$1[TokenType$1.TAG_CLOSE] = \"TAG_CLOSE\";\n    TokenType$1[TokenType$1.TEXT] = \"TEXT\";\n    TokenType$1[TokenType$1.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\n    TokenType$1[TokenType$1.RAW_TEXT] = \"RAW_TEXT\";\n    TokenType$1[TokenType$1.COMMENT_START] = \"COMMENT_START\";\n    TokenType$1[TokenType$1.COMMENT_END] = \"COMMENT_END\";\n    TokenType$1[TokenType$1.CDATA_START] = \"CDATA_START\";\n    TokenType$1[TokenType$1.CDATA_END] = \"CDATA_END\";\n    TokenType$1[TokenType$1.ATTR_NAME] = \"ATTR_NAME\";\n    TokenType$1[TokenType$1.ATTR_VALUE] = \"ATTR_VALUE\";\n    TokenType$1[TokenType$1.DOC_TYPE] = \"DOC_TYPE\";\n    TokenType$1[TokenType$1.EXPANSION_FORM_START] = \"EXPANSION_FORM_START\";\n    TokenType$1[TokenType$1.EXPANSION_CASE_VALUE] = \"EXPANSION_CASE_VALUE\";\n    TokenType$1[TokenType$1.EXPANSION_CASE_EXP_START] = \"EXPANSION_CASE_EXP_START\";\n    TokenType$1[TokenType$1.EXPANSION_CASE_EXP_END] = \"EXPANSION_CASE_EXP_END\";\n    TokenType$1[TokenType$1.EXPANSION_FORM_END] = \"EXPANSION_FORM_END\";\n    TokenType$1[TokenType$1.EOF] = \"EOF\";\n    var Token$1 = (function () {\n        /**\n         * @param {?} type\n         * @param {?} parts\n         * @param {?} sourceSpan\n         */\n        function Token$1(type, parts, sourceSpan) {\n            this.type = type;\n            this.parts = parts;\n            this.sourceSpan = sourceSpan;\n        }\n        return Token$1;\n    }());\n    var TokenError = (function (_super) {\n        __extends(TokenError, _super);\n        /**\n         * @param {?} errorMsg\n         * @param {?} tokenType\n         * @param {?} span\n         */\n        function TokenError(errorMsg, tokenType, span) {\n            var _this = _super.call(this, span, errorMsg) || this;\n            _this.tokenType = tokenType;\n            return _this;\n        }\n        return TokenError;\n    }(ParseError));\n    var TokenizeResult = (function () {\n        /**\n         * @param {?} tokens\n         * @param {?} errors\n         */\n        function TokenizeResult(tokens, errors) {\n            this.tokens = tokens;\n            this.errors = errors;\n        }\n        return TokenizeResult;\n    }());\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?} getTagDefinition\n     * @param {?=} tokenizeExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function tokenize(source, url, getTagDefinition, tokenizeExpansionForms, interpolationConfig) {\n        if (tokenizeExpansionForms === void 0) { tokenizeExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n            .tokenize();\n    }\n    var /** @type {?} */ _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function _unexpectedCharacterErrorMsg(charCode) {\n        var /** @type {?} */ char = charCode === $EOF ? 'EOF' : String.fromCharCode(charCode);\n        return \"Unexpected character \\\"\" + char + \"\\\"\";\n    }\n    /**\n     * @param {?} entitySrc\n     * @return {?}\n     */\n    function _unknownEntityErrorMsg(entitySrc) {\n        return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\n    }\n    var _ControlFlowError = (function () {\n        /**\n         * @param {?} error\n         */\n        function _ControlFlowError(error) {\n            this.error = error;\n        }\n        return _ControlFlowError;\n    }());\n    var _Tokenizer = (function () {\n        /**\n         * @param {?} _file The html source\n         * @param {?} _getTagDefinition\n         * @param {?} _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n         * @param {?=} _interpolationConfig\n         */\n        function _Tokenizer(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig) {\n            if (_interpolationConfig === void 0) { _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n            this._file = _file;\n            this._getTagDefinition = _getTagDefinition;\n            this._tokenizeIcu = _tokenizeIcu;\n            this._interpolationConfig = _interpolationConfig;\n            this._peek = -1;\n            this._nextPeek = -1;\n            this._index = -1;\n            this._line = 0;\n            this._column = -1;\n            this._expansionCaseStack = [];\n            this._inInterpolation = false;\n            this.tokens = [];\n            this.errors = [];\n            this._input = _file.content;\n            this._length = _file.content.length;\n            this._advance();\n        }\n        /**\n         * @param {?} content\n         * @return {?}\n         */\n        _Tokenizer.prototype._processCarriageReturns = function (content) {\n            // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n            // In order to keep the original position in the source, we can not\n            // pre-process it.\n            // Instead CRs are processed right before instantiating the tokens.\n            return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n        };\n        /**\n         * @return {?}\n         */\n        _Tokenizer.prototype.tokenize = function () {\n            while (this._peek !== $EOF) {\n                var /** @type {?} */ start = this._getLocation();\n                try {\n                    if (this._attemptCharCode($LT)) {\n                        if (this._attemptCharCode($BANG)) {\n                            if (this._attemptCharCode($LBRACKET)) {\n                                this._consumeCdata(start);\n                            }\n                            else if (this._attemptCharCode($MINUS)) {\n                                this._consumeComment(start);\n                            }\n                            else {\n                                this._consumeDocType(start);\n                            }\n                        }\n                        else if (this._attemptCharCode($SLASH)) {\n                            this._consumeTagClose(start);\n                        }\n                        else {\n                            this._consumeTagOpen(start);\n                        }\n                    }\n                    else if (!(this._tokenizeIcu && this._tokenizeExpansionForm())) {\n                        this._consumeText();\n                    }\n                }\n                catch (e) {\n                    if (e instanceof _ControlFlowError) {\n                        this.errors.push(e.error);\n                    }\n                    else {\n                        throw e;\n                    }\n                }\n            }\n            this._beginToken(TokenType$1.EOF);\n            this._endToken([]);\n            return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n        };\n        /**\n         * \\@internal\n         * @return {?}\n         */\n        _Tokenizer.prototype._tokenizeExpansionForm = function () {\n            if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                this._consumeExpansionFormStart();\n                return true;\n            }\n            if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n                this._consumeExpansionCaseStart();\n                return true;\n            }\n            if (this._peek === $RBRACE) {\n                if (this._isInExpansionCase()) {\n                    this._consumeExpansionCaseEnd();\n                    return true;\n                }\n                if (this._isInExpansionForm()) {\n                    this._consumeExpansionFormEnd();\n                    return true;\n                }\n            }\n            return false;\n        };\n        /**\n         * @return {?}\n         */\n        _Tokenizer.prototype._getLocation = function () {\n            return new ParseLocation(this._file, this._index, this._line, this._column);\n        };\n        /**\n         * @param {?=} start\n         * @param {?=} end\n         * @return {?}\n         */\n        _Tokenizer.prototype._getSpan = function (start, end) {\n            if (start === void 0) { start = this._getLocation(); }\n            if (end === void 0) { end = this._getLocation(); }\n            return new ParseSourceSpan(start, end);\n        };\n        /**\n         * @param {?} type\n         * @param {?=} start\n         * @return {?}\n         */\n        _Tokenizer.prototype._beginToken = function (type, start) {\n            if (start === void 0) { start = this._getLocation(); }\n            this._currentTokenStart = start;\n            this._currentTokenType = type;\n        };\n        /**\n         * @param {?} parts\n         * @param {?=} end\n         * @return {?}\n         */\n        _Tokenizer.prototype._endToken = function (parts, end) {\n            if (end === void 0) { end = this._getLocation(); }\n            var /** @type {?} */ token = new Token$1(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n            this.tokens.push(token);\n            this._currentTokenStart = null;\n            this._currentTokenType = null;\n            return token;\n        };\n        /**\n         * @param {?} msg\n         * @param {?} span\n         * @return {?}\n         */\n        _Tokenizer.prototype._createError = function (msg, span) {\n            if (this._isInExpansionForm()) {\n                msg += \" (Do you have an unescaped \\\"{\\\" in your template? Use \\\"{{ '{' }}\\\") to escape it.)\";\n            }\n            var /** @type {?} */ error = new TokenError(msg, this._currentTokenType, span);\n            this._currentTokenStart = null;\n            this._currentTokenType = null;\n            return new _ControlFlowError(error);\n        };\n        /**\n         * @return {?}\n         */\n        _Tokenizer.prototype._advance = function () {\n            if (this._index >= this._length) {\n                throw this._createError(_unexpectedCharacterErrorMsg($EOF), this._getSpan());\n            }\n            if (this._peek === $LF) {\n                this._line++;\n                this._column = 0;\n            }\n            else if (this._peek !== $LF && this._peek !== $CR) {\n                this._column++;\n            }\n            this._index++;\n            this._peek = this._index >= this._length ? $EOF : this._input.charCodeAt(this._index);\n            this._nextPeek =\n                this._index + 1 >= this._length ? $EOF : this._input.charCodeAt(this._index + 1);\n        };\n        /**\n         * @param {?} charCode\n         * @return {?}\n         */\n        _Tokenizer.prototype._attemptCharCode = function (charCode) {\n            if (this._peek === charCode) {\n                this._advance();\n                return true;\n            }\n            return false;\n        };\n        /**\n         * @param {?} charCode\n         * @return {?}\n         */\n        _Tokenizer.prototype._attemptCharCodeCaseInsensitive = function (charCode) {\n            if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n                this._advance();\n                return true;\n            }\n            return false;\n        };\n        /**\n         * @param {?} charCode\n         * @return {?}\n         */\n        _Tokenizer.prototype._requireCharCode = function (charCode) {\n            var /** @type {?} */ location = this._getLocation();\n            if (!this._attemptCharCode(charCode)) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n            }\n        };\n        /**\n         * @param {?} chars\n         * @return {?}\n         */\n        _Tokenizer.prototype._attemptStr = function (chars) {\n            var /** @type {?} */ len = chars.length;\n            if (this._index + len > this._length) {\n                return false;\n            }\n            var /** @type {?} */ initialPosition = this._savePosition();\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                if (!this._attemptCharCode(chars.charCodeAt(i))) {\n                    // If attempting to parse the string fails, we want to reset the parser\n                    // to where it was before the attempt\n                    this._restorePosition(initialPosition);\n                    return false;\n                }\n            }\n            return true;\n        };\n        /**\n         * @param {?} chars\n         * @return {?}\n         */\n        _Tokenizer.prototype._attemptStrCaseInsensitive = function (chars) {\n            for (var /** @type {?} */ i = 0; i < chars.length; i++) {\n                if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        /**\n         * @param {?} chars\n         * @return {?}\n         */\n        _Tokenizer.prototype._requireStr = function (chars) {\n            var /** @type {?} */ location = this._getLocation();\n            if (!this._attemptStr(chars)) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n            }\n        };\n        /**\n         * @param {?} predicate\n         * @return {?}\n         */\n        _Tokenizer.prototype._attemptCharCodeUntilFn = function (predicate) {\n            while (!predicate(this._peek)) {\n                this._advance();\n            }\n        };\n        /**\n         * @param {?} predicate\n         * @param {?} len\n         * @return {?}\n         */\n        _Tokenizer.prototype._requireCharCodeUntilFn = function (predicate, len) {\n            var /** @type {?} */ start = this._getLocation();\n            this._attemptCharCodeUntilFn(predicate);\n            if (this._index - start.offset < len) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n            }\n        };\n        /**\n         * @param {?} char\n         * @return {?}\n         */\n        _Tokenizer.prototype._attemptUntilChar = function (char) {\n            while (this._peek !== char) {\n                this._advance();\n            }\n        };\n        /**\n         * @param {?} decodeEntities\n         * @return {?}\n         */\n        _Tokenizer.prototype._readChar = function (decodeEntities) {\n            if (decodeEntities && this._peek === $AMPERSAND) {\n                return this._decodeEntity();\n            }\n            else {\n                var /** @type {?} */ index = this._index;\n                this._advance();\n                return this._input[index];\n            }\n        };\n        /**\n         * @return {?}\n         */\n        _Tokenizer.prototype._decodeEntity = function () {\n            var /** @type {?} */ start = this._getLocation();\n            this._advance();\n            if (this._attemptCharCode($HASH)) {\n                var /** @type {?} */ isHex = this._attemptCharCode($x) || this._attemptCharCode($X);\n                var /** @type {?} */ numberStart = this._getLocation().offset;\n                this._attemptCharCodeUntilFn(isDigitEntityEnd);\n                if (this._peek != $SEMICOLON) {\n                    throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n                }\n                this._advance();\n                var /** @type {?} */ strNum = this._input.substring(numberStart, this._index - 1);\n                try {\n                    var /** @type {?} */ charCode = parseInt(strNum, isHex ? 16 : 10);\n                    return String.fromCharCode(charCode);\n                }\n                catch (e) {\n                    var /** @type {?} */ entity = this._input.substring(start.offset + 1, this._index - 1);\n                    throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n                }\n            }\n            else {\n                var /** @type {?} */ startPosition = this._savePosition();\n                this._attemptCharCodeUntilFn(isNamedEntityEnd);\n                if (this._peek != $SEMICOLON) {\n                    this._restorePosition(startPosition);\n                    return '&';\n                }\n                this._advance();\n                var /** @type {?} */ name = this._input.substring(start.offset + 1, this._index - 1);\n                var /** @type {?} */ char = NAMED_ENTITIES[name];\n                if (!char) {\n                    throw this._createError(_unknownEntityErrorMsg(name), this._getSpan(start));\n                }\n                return char;\n            }\n        };\n        /**\n         * @param {?} decodeEntities\n         * @param {?} firstCharOfEnd\n         * @param {?} attemptEndRest\n         * @return {?}\n         */\n        _Tokenizer.prototype._consumeRawText = function (decodeEntities, firstCharOfEnd, attemptEndRest) {\n            var /** @type {?} */ tagCloseStart;\n            var /** @type {?} */ textStart = this._getLocation();\n            this._beginToken(decodeEntities ? TokenType$1.ESCAPABLE_RAW_TEXT : TokenType$1.RAW_TEXT, textStart);\n            var /** @type {?} */ parts = [];\n            while (true) {\n                tagCloseStart = this._getLocation();\n                if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n                    break;\n                }\n                if (this._index > tagCloseStart.offset) {\n                    // add the characters consumed by the previous if statement to the output\n                    parts.push(this._input.substring(tagCloseStart.offset, this._index));\n                }\n                while (this._peek !== firstCharOfEnd) {\n                    parts.push(this._readChar(decodeEntities));\n                }\n            }\n            return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n        };\n        /**\n         * @param {?} start\n         * @return {?}\n         */\n        _Tokenizer.prototype._consumeComment = function (start) {\n            var _this = this;\n            this._beginToken(TokenType$1.COMMENT_START, start);\n            this._requireCharCode($MINUS);\n            this._endToken([]);\n            var /** @type {?} */ textToken = this._consumeRawText(false, $MINUS, function () { return _this._attemptStr('->'); });\n            this._beginToken(TokenType$1.COMMENT_END, textToken.sourceSpan.end);\n            this._endToken([]);\n        };\n        /**\n         * @param {?} start\n         * @return {?}\n         */\n        _Tokenizer.prototype._consumeCdata = function (start) {\n            var _this = this;\n            this._beginToken(TokenType$1.CDATA_START, start);\n            this._requireStr('CDATA[');\n            this._endToken([]);\n            var /** @type {?} */ textToken = this._consumeRawText(false, $RBRACKET, function () { return _this._attemptStr(']>'); });\n            this._beginToken(TokenType$1.CDATA_END, textToken.sourceSpan.end);\n            this._endToken([]);\n        };\n        /**\n         * @param {?} start\n         * @return {?}\n         */\n        _Tokenizer.prototype._consumeDocType = function (start) {\n            this._beginToken(TokenType$1.DOC_TYPE, start);\n            this._attemptUntilChar($GT);\n            this._advance();\n            this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n        };\n        /**\n         * @return {?}\n         */\n        _Tokenizer.prototype._consumePrefixAndName = function () {\n            var /** @type {?} */ nameOrPrefixStart = this._index;\n            var /** @type {?} */ prefix = null;\n            while (this._peek !== $COLON && !isPrefixEnd(this._peek)) {\n                this._advance();\n            }\n            var /** @type {?} */ nameStart;\n            if (this._peek === $COLON) {\n                this._advance();\n                prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n                nameStart = this._index;\n            }\n            else {\n                nameStart = nameOrPrefixStart;\n            }\n            this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n            var /** @type {?} */ name = this._input.substring(nameStart, this._index);\n            return [prefix, name];\n        };\n        /**\n         * @param {?} start\n         * @return {?}\n         */\n        _Tokenizer.prototype._consumeTagOpen = function (start) {\n            var /** @type {?} */ savedPos = this._savePosition();\n            var /** @type {?} */ tagName;\n            var /** @type {?} */ lowercaseTagName;\n            try {\n                if (!isAsciiLetter(this._peek)) {\n                    throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n                }\n                var /** @type {?} */ nameStart = this._index;\n                this._consumeTagOpenStart(start);\n                tagName = this._input.substring(nameStart, this._index);\n                lowercaseTagName = tagName.toLowerCase();\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n                while (this._peek !== $SLASH && this._peek !== $GT) {\n                    this._consumeAttributeName();\n                    this._attemptCharCodeUntilFn(isNotWhitespace);\n                    if (this._attemptCharCode($EQ)) {\n                        this._attemptCharCodeUntilFn(isNotWhitespace);\n                        this._consumeAttributeValue();\n                    }\n                    this._attemptCharCodeUntilFn(isNotWhitespace);\n                }\n                this._consumeTagOpenEnd();\n            }\n            catch (e) {\n                if (e instanceof _ControlFlowError) {\n                    // When the start tag is invalid, assume we want a \"<\"\n                    this._restorePosition(savedPos);\n                    // Back to back text tokens are merged at the end\n                    this._beginToken(TokenType$1.TEXT, start);\n                    this._endToken(['<']);\n                    return;\n                }\n                throw e;\n            }\n            var /** @type {?} */ contentTokenType = this._getTagDefinition(tagName).contentType;\n            if (contentTokenType === TagContentType.RAW_TEXT) {\n                this._consumeRawTextWithTagClose(lowercaseTagName, false);\n            }\n            else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n                this._consumeRawTextWithTagClose(lowercaseTagName, true);\n            }\n        };\n        /**\n         * @param {?} lowercaseTagName\n         * @param {?} decodeEntities\n         * @return {?}\n         */\n        _Tokenizer.prototype._consumeRawTextWithTagClose = function (lowercaseTagName, decodeEntities) {\n            var _this = this;\n            var /** @type {?} */ textToken = this._consumeRawText(decodeEntities, $LT, function () {\n                if (!_this._attemptCharCode($SLASH))\n                    return false;\n                _this._attemptCharCodeUntilFn(isNotWhitespace);\n                if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\n                    return false;\n                _this._attemptCharCodeUntilFn(isNotWhitespace);\n                return _this._attemptCharCode($GT);\n            });\n            this._beginToken(TokenType$1.TAG_CLOSE, textToken.sourceSpan.end);\n            this._endToken([null, lowercaseTagName]);\n        };\n        /**\n         * @param {?} start\n         * @return {?}\n         */\n        _Tokenizer.prototype._consumeTagOpenStart = function (start) {\n            this._beginToken(TokenType$1.TAG_OPEN_START, start);\n            var /** @type {?} */ parts = this._consumePrefixAndName();\n            this._endToken(parts);\n        };\n        /**\n         * @return {?}\n         */\n        _Tokenizer.prototype._consumeAttributeName = function () {\n            this._beginToken(TokenType$1.ATTR_NAME);\n            var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n            this._endToken(prefixAndName);\n        };\n        /**\n         * @return {?}\n         */\n        _Tokenizer.prototype._consumeAttributeValue = function () {\n            this._beginToken(TokenType$1.ATTR_VALUE);\n            var /** @type {?} */ value;\n            if (this._peek === $SQ || this._peek === $DQ) {\n                var /** @type {?} */ quoteChar = this._peek;\n                this._advance();\n                var /** @type {?} */ parts = [];\n                while (this._peek !== quoteChar) {\n                    parts.push(this._readChar(true));\n                }\n                value = parts.join('');\n                this._advance();\n            }\n            else {\n                var /** @type {?} */ valueStart = this._index;\n                this._requireCharCodeUntilFn(isNameEnd, 1);\n                value = this._input.substring(valueStart, this._index);\n            }\n            this._endToken([this._processCarriageReturns(value)]);\n        };\n        /**\n         * @return {?}\n         */\n        _Tokenizer.prototype._consumeTagOpenEnd = function () {\n            var /** @type {?} */ tokenType = this._attemptCharCode($SLASH) ? TokenType$1.TAG_OPEN_END_VOID : TokenType$1.TAG_OPEN_END;\n            this._beginToken(tokenType);\n            this._requireCharCode($GT);\n            this._endToken([]);\n        };\n        /**\n         * @param {?} start\n         * @return {?}\n         */\n        _Tokenizer.prototype._consumeTagClose = function (start) {\n            this._beginToken(TokenType$1.TAG_CLOSE, start);\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            this._requireCharCode($GT);\n            this._endToken(prefixAndName);\n        };\n        /**\n         * @return {?}\n         */\n        _Tokenizer.prototype._consumeExpansionFormStart = function () {\n            this._beginToken(TokenType$1.EXPANSION_FORM_START, this._getLocation());\n            this._requireCharCode($LBRACE);\n            this._endToken([]);\n            this._expansionCaseStack.push(TokenType$1.EXPANSION_FORM_START);\n            this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n            var /** @type {?} */ condition = this._readUntil($COMMA);\n            this._endToken([condition], this._getLocation());\n            this._requireCharCode($COMMA);\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n            var /** @type {?} */ type = this._readUntil($COMMA);\n            this._endToken([type], this._getLocation());\n            this._requireCharCode($COMMA);\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n        };\n        /**\n         * @return {?}\n         */\n        _Tokenizer.prototype._consumeExpansionCaseStart = function () {\n            this._beginToken(TokenType$1.EXPANSION_CASE_VALUE, this._getLocation());\n            var /** @type {?} */ value = this._readUntil($LBRACE).trim();\n            this._endToken([value], this._getLocation());\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            this._beginToken(TokenType$1.EXPANSION_CASE_EXP_START, this._getLocation());\n            this._requireCharCode($LBRACE);\n            this._endToken([], this._getLocation());\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            this._expansionCaseStack.push(TokenType$1.EXPANSION_CASE_EXP_START);\n        };\n        /**\n         * @return {?}\n         */\n        _Tokenizer.prototype._consumeExpansionCaseEnd = function () {\n            this._beginToken(TokenType$1.EXPANSION_CASE_EXP_END, this._getLocation());\n            this._requireCharCode($RBRACE);\n            this._endToken([], this._getLocation());\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            this._expansionCaseStack.pop();\n        };\n        /**\n         * @return {?}\n         */\n        _Tokenizer.prototype._consumeExpansionFormEnd = function () {\n            this._beginToken(TokenType$1.EXPANSION_FORM_END, this._getLocation());\n            this._requireCharCode($RBRACE);\n            this._endToken([]);\n            this._expansionCaseStack.pop();\n        };\n        /**\n         * @return {?}\n         */\n        _Tokenizer.prototype._consumeText = function () {\n            var /** @type {?} */ start = this._getLocation();\n            this._beginToken(TokenType$1.TEXT, start);\n            var /** @type {?} */ parts = [];\n            do {\n                if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n                    parts.push(this._interpolationConfig.start);\n                    this._inInterpolation = true;\n                }\n                else if (this._interpolationConfig && this._inInterpolation &&\n                    this._attemptStr(this._interpolationConfig.end)) {\n                    parts.push(this._interpolationConfig.end);\n                    this._inInterpolation = false;\n                }\n                else {\n                    parts.push(this._readChar(true));\n                }\n            } while (!this._isTextEnd());\n            this._endToken([this._processCarriageReturns(parts.join(''))]);\n        };\n        /**\n         * @return {?}\n         */\n        _Tokenizer.prototype._isTextEnd = function () {\n            if (this._peek === $LT || this._peek === $EOF) {\n                return true;\n            }\n            if (this._tokenizeIcu && !this._inInterpolation) {\n                if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                    // start of an expansion form\n                    return true;\n                }\n                if (this._peek === $RBRACE && this._isInExpansionCase()) {\n                    // end of and expansion case\n                    return true;\n                }\n            }\n            return false;\n        };\n        /**\n         * @return {?}\n         */\n        _Tokenizer.prototype._savePosition = function () {\n            return [this._peek, this._index, this._column, this._line, this.tokens.length];\n        };\n        /**\n         * @param {?} char\n         * @return {?}\n         */\n        _Tokenizer.prototype._readUntil = function (char) {\n            var /** @type {?} */ start = this._index;\n            this._attemptUntilChar(char);\n            return this._input.substring(start, this._index);\n        };\n        /**\n         * @param {?} position\n         * @return {?}\n         */\n        _Tokenizer.prototype._restorePosition = function (position) {\n            this._peek = position[0];\n            this._index = position[1];\n            this._column = position[2];\n            this._line = position[3];\n            var /** @type {?} */ nbTokens = position[4];\n            if (nbTokens < this.tokens.length) {\n                // remove any extra tokens\n                this.tokens = this.tokens.slice(0, nbTokens);\n            }\n        };\n        /**\n         * @return {?}\n         */\n        _Tokenizer.prototype._isInExpansionCase = function () {\n            return this._expansionCaseStack.length > 0 &&\n                this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                    TokenType$1.EXPANSION_CASE_EXP_START;\n        };\n        /**\n         * @return {?}\n         */\n        _Tokenizer.prototype._isInExpansionForm = function () {\n            return this._expansionCaseStack.length > 0 &&\n                this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                    TokenType$1.EXPANSION_FORM_START;\n        };\n        return _Tokenizer;\n    }());\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    function isNotWhitespace(code) {\n        return !isWhitespace(code) || code === $EOF;\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    function isNameEnd(code) {\n        return isWhitespace(code) || code === $GT || code === $SLASH ||\n            code === $SQ || code === $DQ || code === $EQ;\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    function isPrefixEnd(code) {\n        return (code < $a || $z < code) && (code < $A || $Z < code) &&\n            (code < $0 || code > $9);\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    function isDigitEntityEnd(code) {\n        return code == $SEMICOLON || code == $EOF || !isAsciiHexDigit(code);\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    function isNamedEntityEnd(code) {\n        return code == $SEMICOLON || code == $EOF || !isAsciiLetter(code);\n    }\n    /**\n     * @param {?} input\n     * @param {?} offset\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function isExpansionFormStart(input, offset, interpolationConfig) {\n        var /** @type {?} */ isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n        return input.charCodeAt(offset) == $LBRACE && !isInterpolationStart;\n    }\n    /**\n     * @param {?} peek\n     * @return {?}\n     */\n    function isExpansionCaseStart(peek) {\n        return peek === $EQ || isAsciiLetter(peek);\n    }\n    /**\n     * @param {?} code1\n     * @param {?} code2\n     * @return {?}\n     */\n    function compareCharCodeCaseInsensitive(code1, code2) {\n        return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    function toUpperCaseCharCode(code) {\n        return code >= $a && code <= $z ? code - $a + $A : code;\n    }\n    /**\n     * @param {?} srcTokens\n     * @return {?}\n     */\n    function mergeTextTokens(srcTokens) {\n        var /** @type {?} */ dstTokens = [];\n        var /** @type {?} */ lastDstToken;\n        for (var /** @type {?} */ i = 0; i < srcTokens.length; i++) {\n            var /** @type {?} */ token = srcTokens[i];\n            if (lastDstToken && lastDstToken.type == TokenType$1.TEXT && token.type == TokenType$1.TEXT) {\n                lastDstToken.parts[0] += token.parts[0];\n                lastDstToken.sourceSpan.end = token.sourceSpan.end;\n            }\n            else {\n                lastDstToken = token;\n                dstTokens.push(lastDstToken);\n            }\n        }\n        return dstTokens;\n    }\n    var TreeError = (function (_super) {\n        __extends(TreeError, _super);\n        /**\n         * @param {?} elementName\n         * @param {?} span\n         * @param {?} msg\n         */\n        function TreeError(elementName, span, msg) {\n            var _this = _super.call(this, span, msg) || this;\n            _this.elementName = elementName;\n            return _this;\n        }\n        /**\n         * @param {?} elementName\n         * @param {?} span\n         * @param {?} msg\n         * @return {?}\n         */\n        TreeError.create = function (elementName, span, msg) {\n            return new TreeError(elementName, span, msg);\n        };\n        return TreeError;\n    }(ParseError));\n    var ParseTreeResult = (function () {\n        /**\n         * @param {?} rootNodes\n         * @param {?} errors\n         */\n        function ParseTreeResult(rootNodes, errors) {\n            this.rootNodes = rootNodes;\n            this.errors = errors;\n        }\n        return ParseTreeResult;\n    }());\n    var Parser$1 = (function () {\n        /**\n         * @param {?} getTagDefinition\n         */\n        function Parser$1(getTagDefinition) {\n            this.getTagDefinition = getTagDefinition;\n        }\n        /**\n         * @param {?} source\n         * @param {?} url\n         * @param {?=} parseExpansionForms\n         * @param {?=} interpolationConfig\n         * @return {?}\n         */\n        Parser$1.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n            if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n            if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n            var /** @type {?} */ tokensAndErrors = tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n            var /** @type {?} */ treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n            return new ParseTreeResult(treeAndErrors.rootNodes, ((tokensAndErrors.errors)).concat(treeAndErrors.errors));\n        };\n        return Parser$1;\n    }());\n    var _TreeBuilder = (function () {\n        /**\n         * @param {?} tokens\n         * @param {?} getTagDefinition\n         */\n        function _TreeBuilder(tokens, getTagDefinition) {\n            this.tokens = tokens;\n            this.getTagDefinition = getTagDefinition;\n            this._index = -1;\n            this._rootNodes = [];\n            this._errors = [];\n            this._elementStack = [];\n            this._advance();\n        }\n        /**\n         * @return {?}\n         */\n        _TreeBuilder.prototype.build = function () {\n            while (this._peek.type !== TokenType$1.EOF) {\n                if (this._peek.type === TokenType$1.TAG_OPEN_START) {\n                    this._consumeStartTag(this._advance());\n                }\n                else if (this._peek.type === TokenType$1.TAG_CLOSE) {\n                    this._consumeEndTag(this._advance());\n                }\n                else if (this._peek.type === TokenType$1.CDATA_START) {\n                    this._closeVoidElement();\n                    this._consumeCdata(this._advance());\n                }\n                else if (this._peek.type === TokenType$1.COMMENT_START) {\n                    this._closeVoidElement();\n                    this._consumeComment(this._advance());\n                }\n                else if (this._peek.type === TokenType$1.TEXT || this._peek.type === TokenType$1.RAW_TEXT ||\n                    this._peek.type === TokenType$1.ESCAPABLE_RAW_TEXT) {\n                    this._closeVoidElement();\n                    this._consumeText(this._advance());\n                }\n                else if (this._peek.type === TokenType$1.EXPANSION_FORM_START) {\n                    this._consumeExpansion(this._advance());\n                }\n                else {\n                    // Skip all other tokens...\n                    this._advance();\n                }\n            }\n            return new ParseTreeResult(this._rootNodes, this._errors);\n        };\n        /**\n         * @return {?}\n         */\n        _TreeBuilder.prototype._advance = function () {\n            var /** @type {?} */ prev = this._peek;\n            if (this._index < this.tokens.length - 1) {\n                // Note: there is always an EOF token at the end\n                this._index++;\n            }\n            this._peek = this.tokens[this._index];\n            return prev;\n        };\n        /**\n         * @param {?} type\n         * @return {?}\n         */\n        _TreeBuilder.prototype._advanceIf = function (type) {\n            if (this._peek.type === type) {\n                return this._advance();\n            }\n            return null;\n        };\n        /**\n         * @param {?} startToken\n         * @return {?}\n         */\n        _TreeBuilder.prototype._consumeCdata = function (startToken) {\n            this._consumeText(this._advance());\n            this._advanceIf(TokenType$1.CDATA_END);\n        };\n        /**\n         * @param {?} token\n         * @return {?}\n         */\n        _TreeBuilder.prototype._consumeComment = function (token) {\n            var /** @type {?} */ text = this._advanceIf(TokenType$1.RAW_TEXT);\n            this._advanceIf(TokenType$1.COMMENT_END);\n            var /** @type {?} */ value = text != null ? text.parts[0].trim() : null;\n            this._addToParent(new Comment(value, token.sourceSpan));\n        };\n        /**\n         * @param {?} token\n         * @return {?}\n         */\n        _TreeBuilder.prototype._consumeExpansion = function (token) {\n            var /** @type {?} */ switchValue = this._advance();\n            var /** @type {?} */ type = this._advance();\n            var /** @type {?} */ cases = [];\n            // read =\n            while (this._peek.type === TokenType$1.EXPANSION_CASE_VALUE) {\n                var /** @type {?} */ expCase = this._parseExpansionCase();\n                if (!expCase)\n                    return; // error\n                cases.push(expCase);\n            }\n            // read the final }\n            if (this._peek.type !== TokenType$1.EXPANSION_FORM_END) {\n                this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                return;\n            }\n            var /** @type {?} */ sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n            this._addToParent(new Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n            this._advance();\n        };\n        /**\n         * @return {?}\n         */\n        _TreeBuilder.prototype._parseExpansionCase = function () {\n            var /** @type {?} */ value = this._advance();\n            // read {\n            if (this._peek.type !== TokenType$1.EXPANSION_CASE_EXP_START) {\n                this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '{'.\"));\n                return null;\n            }\n            // read until }\n            var /** @type {?} */ start = this._advance();\n            var /** @type {?} */ exp = this._collectExpansionExpTokens(start);\n            if (!exp)\n                return null;\n            var /** @type {?} */ end = this._advance();\n            exp.push(new Token$1(TokenType$1.EOF, [], end.sourceSpan));\n            // parse everything in between { and }\n            var /** @type {?} */ parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n            if (parsedExp.errors.length > 0) {\n                this._errors = this._errors.concat(/** @type {?} */ (parsedExp.errors));\n                return null;\n            }\n            var /** @type {?} */ sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n            var /** @type {?} */ expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n            return new ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n        };\n        /**\n         * @param {?} start\n         * @return {?}\n         */\n        _TreeBuilder.prototype._collectExpansionExpTokens = function (start) {\n            var /** @type {?} */ exp = [];\n            var /** @type {?} */ expansionFormStack = [TokenType$1.EXPANSION_CASE_EXP_START];\n            while (true) {\n                if (this._peek.type === TokenType$1.EXPANSION_FORM_START ||\n                    this._peek.type === TokenType$1.EXPANSION_CASE_EXP_START) {\n                    expansionFormStack.push(this._peek.type);\n                }\n                if (this._peek.type === TokenType$1.EXPANSION_CASE_EXP_END) {\n                    if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_CASE_EXP_START)) {\n                        expansionFormStack.pop();\n                        if (expansionFormStack.length == 0)\n                            return exp;\n                    }\n                    else {\n                        this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                        return null;\n                    }\n                }\n                if (this._peek.type === TokenType$1.EXPANSION_FORM_END) {\n                    if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_FORM_START)) {\n                        expansionFormStack.pop();\n                    }\n                    else {\n                        this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                        return null;\n                    }\n                }\n                if (this._peek.type === TokenType$1.EOF) {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n                exp.push(this._advance());\n            }\n        };\n        /**\n         * @param {?} token\n         * @return {?}\n         */\n        _TreeBuilder.prototype._consumeText = function (token) {\n            var /** @type {?} */ text = token.parts[0];\n            if (text.length > 0 && text[0] == '\\n') {\n                var /** @type {?} */ parent = this._getParentElement();\n                if (parent != null && parent.children.length == 0 &&\n                    this.getTagDefinition(parent.name).ignoreFirstLf) {\n                    text = text.substring(1);\n                }\n            }\n            if (text.length > 0) {\n                this._addToParent(new Text(text, token.sourceSpan));\n            }\n        };\n        /**\n         * @return {?}\n         */\n        _TreeBuilder.prototype._closeVoidElement = function () {\n            if (this._elementStack.length > 0) {\n                var /** @type {?} */ el = this._elementStack[this._elementStack.length - 1];\n                if (this.getTagDefinition(el.name).isVoid) {\n                    this._elementStack.pop();\n                }\n            }\n        };\n        /**\n         * @param {?} startTagToken\n         * @return {?}\n         */\n        _TreeBuilder.prototype._consumeStartTag = function (startTagToken) {\n            var /** @type {?} */ prefix = startTagToken.parts[0];\n            var /** @type {?} */ name = startTagToken.parts[1];\n            var /** @type {?} */ attrs = [];\n            while (this._peek.type === TokenType$1.ATTR_NAME) {\n                attrs.push(this._consumeAttr(this._advance()));\n            }\n            var /** @type {?} */ fullName = this._getElementFullName(prefix, name, this._getParentElement());\n            var /** @type {?} */ selfClosing = false;\n            // Note: There could have been a tokenizer error\n            // so that we don't get a token for the end tag...\n            if (this._peek.type === TokenType$1.TAG_OPEN_END_VOID) {\n                this._advance();\n                selfClosing = true;\n                var /** @type {?} */ tagDef = this.getTagDefinition(fullName);\n                if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n                    this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\n                }\n            }\n            else if (this._peek.type === TokenType$1.TAG_OPEN_END) {\n                this._advance();\n                selfClosing = false;\n            }\n            var /** @type {?} */ end = this._peek.sourceSpan.start;\n            var /** @type {?} */ span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n            var /** @type {?} */ el = new Element(fullName, attrs, [], span, span, null);\n            this._pushElement(el);\n            if (selfClosing) {\n                this._popElement(fullName);\n                el.endSourceSpan = span;\n            }\n        };\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        _TreeBuilder.prototype._pushElement = function (el) {\n            if (this._elementStack.length > 0) {\n                var /** @type {?} */ parentEl = this._elementStack[this._elementStack.length - 1];\n                if (this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n                    this._elementStack.pop();\n                }\n            }\n            var /** @type {?} */ tagDef = this.getTagDefinition(el.name);\n            var _a = this._getParentElementSkippingContainers(), parent = _a.parent, container = _a.container;\n            if (parent && tagDef.requireExtraParent(parent.name)) {\n                var /** @type {?} */ newParent = new Element(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n                this._insertBeforeContainer(parent, container, newParent);\n            }\n            this._addToParent(el);\n            this._elementStack.push(el);\n        };\n        /**\n         * @param {?} endTagToken\n         * @return {?}\n         */\n        _TreeBuilder.prototype._consumeEndTag = function (endTagToken) {\n            var /** @type {?} */ fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n            if (this._getParentElement()) {\n                this._getParentElement().endSourceSpan = endTagToken.sourceSpan;\n            }\n            if (this.getTagDefinition(fullName).isVoid) {\n                this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n            }\n            else if (!this._popElement(fullName)) {\n                var /** @type {?} */ errMsg = \"Unexpected closing tag \\\"\" + fullName + \"\\\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags\";\n                this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n            }\n        };\n        /**\n         * @param {?} fullName\n         * @return {?}\n         */\n        _TreeBuilder.prototype._popElement = function (fullName) {\n            for (var /** @type {?} */ stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n                var /** @type {?} */ el = this._elementStack[stackIndex];\n                if (el.name == fullName) {\n                    this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n                    return true;\n                }\n                if (!this.getTagDefinition(el.name).closedByParent) {\n                    return false;\n                }\n            }\n            return false;\n        };\n        /**\n         * @param {?} attrName\n         * @return {?}\n         */\n        _TreeBuilder.prototype._consumeAttr = function (attrName) {\n            var /** @type {?} */ fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n            var /** @type {?} */ end = attrName.sourceSpan.end;\n            var /** @type {?} */ value = '';\n            var /** @type {?} */ valueSpan;\n            if (this._peek.type === TokenType$1.ATTR_VALUE) {\n                var /** @type {?} */ valueToken = this._advance();\n                value = valueToken.parts[0];\n                end = valueToken.sourceSpan.end;\n                valueSpan = valueToken.sourceSpan;\n            }\n            return new Attribute$1(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n        };\n        /**\n         * @return {?}\n         */\n        _TreeBuilder.prototype._getParentElement = function () {\n            return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n        };\n        /**\n         * Returns the parent in the DOM and the container.\n         *\n         * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n         * @return {?}\n         */\n        _TreeBuilder.prototype._getParentElementSkippingContainers = function () {\n            var /** @type {?} */ container = null;\n            for (var /** @type {?} */ i = this._elementStack.length - 1; i >= 0; i--) {\n                if (this._elementStack[i].name !== 'ng-container') {\n                    return { parent: this._elementStack[i], container: container };\n                }\n                container = this._elementStack[i];\n            }\n            return { parent: this._elementStack[this._elementStack.length - 1], container: container };\n        };\n        /**\n         * @param {?} node\n         * @return {?}\n         */\n        _TreeBuilder.prototype._addToParent = function (node) {\n            var /** @type {?} */ parent = this._getParentElement();\n            if (parent != null) {\n                parent.children.push(node);\n            }\n            else {\n                this._rootNodes.push(node);\n            }\n        };\n        /**\n         * Insert a node between the parent and the container.\n         * When no container is given, the node is appended as a child of the parent.\n         * Also updates the element stack accordingly.\n         *\n         * \\@internal\n         * @param {?} parent\n         * @param {?} container\n         * @param {?} node\n         * @return {?}\n         */\n        _TreeBuilder.prototype._insertBeforeContainer = function (parent, container, node) {\n            if (!container) {\n                this._addToParent(node);\n                this._elementStack.push(node);\n            }\n            else {\n                if (parent) {\n                    // replace the container with the new node in the children\n                    var /** @type {?} */ index = parent.children.indexOf(container);\n                    parent.children[index] = node;\n                }\n                else {\n                    this._rootNodes.push(node);\n                }\n                node.children.push(container);\n                this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n            }\n        };\n        /**\n         * @param {?} prefix\n         * @param {?} localName\n         * @param {?} parentElement\n         * @return {?}\n         */\n        _TreeBuilder.prototype._getElementFullName = function (prefix, localName, parentElement) {\n            if (prefix == null) {\n                prefix = this.getTagDefinition(localName).implicitNamespacePrefix;\n                if (prefix == null && parentElement != null) {\n                    prefix = getNsPrefix(parentElement.name);\n                }\n            }\n            return mergeNsAndName(prefix, localName);\n        };\n        return _TreeBuilder;\n    }());\n    /**\n     * @param {?} stack\n     * @param {?} element\n     * @return {?}\n     */\n    function lastOnStack(stack, element) {\n        return stack.length > 0 && stack[stack.length - 1] === element;\n    }\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Message = (function () {\n        /**\n         * @param {?} nodes message AST\n         * @param {?} placeholders maps placeholder names to static content\n         * @param {?} placeholderToMessage maps placeholder names to messages (used for nested ICU messages)\n         * @param {?} meaning\n         * @param {?} description\n         * @param {?} id\n         */\n        function Message(nodes, placeholders, placeholderToMessage, meaning, description, id) {\n            this.nodes = nodes;\n            this.placeholders = placeholders;\n            this.placeholderToMessage = placeholderToMessage;\n            this.meaning = meaning;\n            this.description = description;\n            this.id = id;\n        }\n        return Message;\n    }());\n    var Text$1 = (function () {\n        /**\n         * @param {?} value\n         * @param {?} sourceSpan\n         */\n        function Text$1(value, sourceSpan) {\n            this.value = value;\n            this.sourceSpan = sourceSpan;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?=} context\n         * @return {?}\n         */\n        Text$1.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n        return Text$1;\n    }());\n    var Container = (function () {\n        /**\n         * @param {?} children\n         * @param {?} sourceSpan\n         */\n        function Container(children, sourceSpan) {\n            this.children = children;\n            this.sourceSpan = sourceSpan;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?=} context\n         * @return {?}\n         */\n        Container.prototype.visit = function (visitor, context) { return visitor.visitContainer(this, context); };\n        return Container;\n    }());\n    var Icu = (function () {\n        /**\n         * @param {?} expression\n         * @param {?} type\n         * @param {?} cases\n         * @param {?} sourceSpan\n         */\n        function Icu(expression, type, cases, sourceSpan) {\n            this.expression = expression;\n            this.type = type;\n            this.cases = cases;\n            this.sourceSpan = sourceSpan;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?=} context\n         * @return {?}\n         */\n        Icu.prototype.visit = function (visitor, context) { return visitor.visitIcu(this, context); };\n        return Icu;\n    }());\n    var TagPlaceholder = (function () {\n        /**\n         * @param {?} tag\n         * @param {?} attrs\n         * @param {?} startName\n         * @param {?} closeName\n         * @param {?} children\n         * @param {?} isVoid\n         * @param {?} sourceSpan\n         */\n        function TagPlaceholder(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n            this.tag = tag;\n            this.attrs = attrs;\n            this.startName = startName;\n            this.closeName = closeName;\n            this.children = children;\n            this.isVoid = isVoid;\n            this.sourceSpan = sourceSpan;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?=} context\n         * @return {?}\n         */\n        TagPlaceholder.prototype.visit = function (visitor, context) { return visitor.visitTagPlaceholder(this, context); };\n        return TagPlaceholder;\n    }());\n    var Placeholder = (function () {\n        /**\n         * @param {?} value\n         * @param {?} name\n         * @param {?} sourceSpan\n         */\n        function Placeholder(value, name, sourceSpan) {\n            this.value = value;\n            this.name = name;\n            this.sourceSpan = sourceSpan;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?=} context\n         * @return {?}\n         */\n        Placeholder.prototype.visit = function (visitor, context) { return visitor.visitPlaceholder(this, context); };\n        return Placeholder;\n    }());\n    var IcuPlaceholder = (function () {\n        /**\n         * @param {?} value\n         * @param {?} name\n         * @param {?} sourceSpan\n         */\n        function IcuPlaceholder(value, name, sourceSpan) {\n            this.value = value;\n            this.name = name;\n            this.sourceSpan = sourceSpan;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?=} context\n         * @return {?}\n         */\n        IcuPlaceholder.prototype.visit = function (visitor, context) { return visitor.visitIcuPlaceholder(this, context); };\n        return IcuPlaceholder;\n    }());\n    var CloneVisitor = (function () {\n        function CloneVisitor() {\n        }\n        /**\n         * @param {?} text\n         * @param {?=} context\n         * @return {?}\n         */\n        CloneVisitor.prototype.visitText = function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n        /**\n         * @param {?} container\n         * @param {?=} context\n         * @return {?}\n         */\n        CloneVisitor.prototype.visitContainer = function (container, context) {\n            var _this = this;\n            var /** @type {?} */ children = container.children.map(function (n) { return n.visit(_this, context); });\n            return new Container(children, container.sourceSpan);\n        };\n        /**\n         * @param {?} icu\n         * @param {?=} context\n         * @return {?}\n         */\n        CloneVisitor.prototype.visitIcu = function (icu, context) {\n            var _this = this;\n            var /** @type {?} */ cases = {};\n            Object.keys(icu.cases).forEach(function (key) { return cases[key] = icu.cases[key].visit(_this, context); });\n            var /** @type {?} */ msg = new Icu(icu.expression, icu.type, cases, icu.sourceSpan);\n            msg.expressionPlaceholder = icu.expressionPlaceholder;\n            return msg;\n        };\n        /**\n         * @param {?} ph\n         * @param {?=} context\n         * @return {?}\n         */\n        CloneVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n            var _this = this;\n            var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, context); });\n            return new TagPlaceholder(ph.tag, ph.attrs, ph.startName, ph.closeName, children, ph.isVoid, ph.sourceSpan);\n        };\n        /**\n         * @param {?} ph\n         * @param {?=} context\n         * @return {?}\n         */\n        CloneVisitor.prototype.visitPlaceholder = function (ph, context) {\n            return new Placeholder(ph.value, ph.name, ph.sourceSpan);\n        };\n        /**\n         * @param {?} ph\n         * @param {?=} context\n         * @return {?}\n         */\n        CloneVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n            return new IcuPlaceholder(ph.value, ph.name, ph.sourceSpan);\n        };\n        return CloneVisitor;\n    }());\n    var RecurseVisitor = (function () {\n        function RecurseVisitor() {\n        }\n        /**\n         * @param {?} text\n         * @param {?=} context\n         * @return {?}\n         */\n        RecurseVisitor.prototype.visitText = function (text, context) { };\n        ;\n        /**\n         * @param {?} container\n         * @param {?=} context\n         * @return {?}\n         */\n        RecurseVisitor.prototype.visitContainer = function (container, context) {\n            var _this = this;\n            container.children.forEach(function (child) { return child.visit(_this); });\n        };\n        /**\n         * @param {?} icu\n         * @param {?=} context\n         * @return {?}\n         */\n        RecurseVisitor.prototype.visitIcu = function (icu, context) {\n            var _this = this;\n            Object.keys(icu.cases).forEach(function (k) { icu.cases[k].visit(_this); });\n        };\n        /**\n         * @param {?} ph\n         * @param {?=} context\n         * @return {?}\n         */\n        RecurseVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n            var _this = this;\n            ph.children.forEach(function (child) { return child.visit(_this); });\n        };\n        /**\n         * @param {?} ph\n         * @param {?=} context\n         * @return {?}\n         */\n        RecurseVisitor.prototype.visitPlaceholder = function (ph, context) { };\n        ;\n        /**\n         * @param {?} ph\n         * @param {?=} context\n         * @return {?}\n         */\n        RecurseVisitor.prototype.visitIcuPlaceholder = function (ph, context) { };\n        ;\n        return RecurseVisitor;\n    }());\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TAG_TO_PLACEHOLDER_NAMES = {\n        'A': 'LINK',\n        'B': 'BOLD_TEXT',\n        'BR': 'LINE_BREAK',\n        'EM': 'EMPHASISED_TEXT',\n        'H1': 'HEADING_LEVEL1',\n        'H2': 'HEADING_LEVEL2',\n        'H3': 'HEADING_LEVEL3',\n        'H4': 'HEADING_LEVEL4',\n        'H5': 'HEADING_LEVEL5',\n        'H6': 'HEADING_LEVEL6',\n        'HR': 'HORIZONTAL_RULE',\n        'I': 'ITALIC_TEXT',\n        'LI': 'LIST_ITEM',\n        'LINK': 'MEDIA_LINK',\n        'OL': 'ORDERED_LIST',\n        'P': 'PARAGRAPH',\n        'Q': 'QUOTATION',\n        'S': 'STRIKETHROUGH_TEXT',\n        'SMALL': 'SMALL_TEXT',\n        'SUB': 'SUBSTRIPT',\n        'SUP': 'SUPERSCRIPT',\n        'TBODY': 'TABLE_BODY',\n        'TD': 'TABLE_CELL',\n        'TFOOT': 'TABLE_FOOTER',\n        'TH': 'TABLE_HEADER_CELL',\n        'THEAD': 'TABLE_HEADER',\n        'TR': 'TABLE_ROW',\n        'TT': 'MONOSPACED_TEXT',\n        'U': 'UNDERLINED_TEXT',\n        'UL': 'UNORDERED_LIST',\n    };\n    /**\n     * Creates unique names for placeholder with different content.\n     *\n     * Returns the same placeholder name when the content is identical.\n     *\n     * \\@internal\n     */\n    var PlaceholderRegistry = (function () {\n        function PlaceholderRegistry() {\n            this._placeHolderNameCounts = {};\n            this._signatureToName = {};\n        }\n        /**\n         * @param {?} tag\n         * @param {?} attrs\n         * @param {?} isVoid\n         * @return {?}\n         */\n        PlaceholderRegistry.prototype.getStartTagPlaceholderName = function (tag, attrs, isVoid) {\n            var /** @type {?} */ signature = this._hashTag(tag, attrs, isVoid);\n            if (this._signatureToName[signature]) {\n                return this._signatureToName[signature];\n            }\n            var /** @type {?} */ upperTag = tag.toUpperCase();\n            var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n            var /** @type {?} */ name = this._generateUniqueName(isVoid ? baseName : \"START_\" + baseName);\n            this._signatureToName[signature] = name;\n            return name;\n        };\n        /**\n         * @param {?} tag\n         * @return {?}\n         */\n        PlaceholderRegistry.prototype.getCloseTagPlaceholderName = function (tag) {\n            var /** @type {?} */ signature = this._hashClosingTag(tag);\n            if (this._signatureToName[signature]) {\n                return this._signatureToName[signature];\n            }\n            var /** @type {?} */ upperTag = tag.toUpperCase();\n            var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n            var /** @type {?} */ name = this._generateUniqueName(\"CLOSE_\" + baseName);\n            this._signatureToName[signature] = name;\n            return name;\n        };\n        /**\n         * @param {?} name\n         * @param {?} content\n         * @return {?}\n         */\n        PlaceholderRegistry.prototype.getPlaceholderName = function (name, content) {\n            var /** @type {?} */ upperName = name.toUpperCase();\n            var /** @type {?} */ signature = \"PH: \" + upperName + \"=\" + content;\n            if (this._signatureToName[signature]) {\n                return this._signatureToName[signature];\n            }\n            var /** @type {?} */ uniqueName = this._generateUniqueName(upperName);\n            this._signatureToName[signature] = uniqueName;\n            return uniqueName;\n        };\n        /**\n         * @param {?} name\n         * @return {?}\n         */\n        PlaceholderRegistry.prototype.getUniquePlaceholder = function (name) {\n            return this._generateUniqueName(name.toUpperCase());\n        };\n        /**\n         * @param {?} tag\n         * @param {?} attrs\n         * @param {?} isVoid\n         * @return {?}\n         */\n        PlaceholderRegistry.prototype._hashTag = function (tag, attrs, isVoid) {\n            var /** @type {?} */ start = \"<\" + tag;\n            var /** @type {?} */ strAttrs = Object.keys(attrs).sort().map(function (name) { return \" \" + name + \"=\" + attrs[name]; }).join('');\n            var /** @type {?} */ end = isVoid ? '/>' : \"></\" + tag + \">\";\n            return start + strAttrs + end;\n        };\n        /**\n         * @param {?} tag\n         * @return {?}\n         */\n        PlaceholderRegistry.prototype._hashClosingTag = function (tag) { return this._hashTag(\"/\" + tag, {}, false); };\n        /**\n         * @param {?} base\n         * @return {?}\n         */\n        PlaceholderRegistry.prototype._generateUniqueName = function (base) {\n            var /** @type {?} */ seen = this._placeHolderNameCounts.hasOwnProperty(base);\n            if (!seen) {\n                this._placeHolderNameCounts[base] = 1;\n                return base;\n            }\n            var /** @type {?} */ id = this._placeHolderNameCounts[base];\n            this._placeHolderNameCounts[base] = id + 1;\n            return base + \"_\" + id;\n        };\n        return PlaceholderRegistry;\n    }());\n    var /** @type {?} */ _expParser = new Parser(new Lexer());\n    /**\n     * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function createI18nMessageFactory(interpolationConfig) {\n        var /** @type {?} */ visitor = new _I18nVisitor(_expParser, interpolationConfig);\n        return function (nodes, meaning, description, id) { return visitor.toI18nMessage(nodes, meaning, description, id); };\n    }\n    var _I18nVisitor = (function () {\n        /**\n         * @param {?} _expressionParser\n         * @param {?} _interpolationConfig\n         */\n        function _I18nVisitor(_expressionParser, _interpolationConfig) {\n            this._expressionParser = _expressionParser;\n            this._interpolationConfig = _interpolationConfig;\n        }\n        /**\n         * @param {?} nodes\n         * @param {?} meaning\n         * @param {?} description\n         * @param {?} id\n         * @return {?}\n         */\n        _I18nVisitor.prototype.toI18nMessage = function (nodes, meaning, description, id) {\n            this._isIcu = nodes.length == 1 && nodes[0] instanceof Expansion;\n            this._icuDepth = 0;\n            this._placeholderRegistry = new PlaceholderRegistry();\n            this._placeholderToContent = {};\n            this._placeholderToMessage = {};\n            var /** @type {?} */ i18nodes = visitAll(this, nodes, {});\n            return new Message(i18nodes, this._placeholderToContent, this._placeholderToMessage, meaning, description, id);\n        };\n        /**\n         * @param {?} el\n         * @param {?} context\n         * @return {?}\n         */\n        _I18nVisitor.prototype.visitElement = function (el, context) {\n            var /** @type {?} */ children = visitAll(this, el.children);\n            var /** @type {?} */ attrs = {};\n            el.attrs.forEach(function (attr) {\n                // Do not visit the attributes, translatable ones are top-level ASTs\n                attrs[attr.name] = attr.value;\n            });\n            var /** @type {?} */ isVoid = getHtmlTagDefinition(el.name).isVoid;\n            var /** @type {?} */ startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n            this._placeholderToContent[startPhName] = el.sourceSpan.toString();\n            var /** @type {?} */ closePhName = '';\n            if (!isVoid) {\n                closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n                this._placeholderToContent[closePhName] = \"</\" + el.name + \">\";\n            }\n            return new TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, el.sourceSpan);\n        };\n        /**\n         * @param {?} attribute\n         * @param {?} context\n         * @return {?}\n         */\n        _I18nVisitor.prototype.visitAttribute = function (attribute, context) {\n            return this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n        };\n        /**\n         * @param {?} text\n         * @param {?} context\n         * @return {?}\n         */\n        _I18nVisitor.prototype.visitText = function (text, context) {\n            return this._visitTextWithInterpolation(text.value, text.sourceSpan);\n        };\n        /**\n         * @param {?} comment\n         * @param {?} context\n         * @return {?}\n         */\n        _I18nVisitor.prototype.visitComment = function (comment, context) { return null; };\n        /**\n         * @param {?} icu\n         * @param {?} context\n         * @return {?}\n         */\n        _I18nVisitor.prototype.visitExpansion = function (icu, context) {\n            var _this = this;\n            this._icuDepth++;\n            var /** @type {?} */ i18nIcuCases = {};\n            var /** @type {?} */ i18nIcu = new Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n            icu.cases.forEach(function (caze) {\n                i18nIcuCases[caze.value] = new Container(caze.expression.map(function (node) { return node.visit(_this, {}); }), caze.expSourceSpan);\n            });\n            this._icuDepth--;\n            if (this._isIcu || this._icuDepth > 0) {\n                // Returns an ICU node when:\n                // - the message (vs a part of the message) is an ICU message, or\n                // - the ICU message is nested.\n                var /** @type {?} */ expPh = this._placeholderRegistry.getUniquePlaceholder(\"VAR_\" + icu.type);\n                i18nIcu.expressionPlaceholder = expPh;\n                this._placeholderToContent[expPh] = icu.switchValue;\n                return i18nIcu;\n            }\n            // Else returns a placeholder\n            // ICU placeholders should not be replaced with their original content but with the their\n            // translations. We need to create a new visitor (they are not re-entrant) to compute the\n            // message id.\n            // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n            var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n            var /** @type {?} */ visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n            this._placeholderToMessage[phName] = visitor.toI18nMessage([icu], '', '', '');\n            return new IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n        };\n        /**\n         * @param {?} icuCase\n         * @param {?} context\n         * @return {?}\n         */\n        _I18nVisitor.prototype.visitExpansionCase = function (icuCase, context) {\n            throw new Error('Unreachable code');\n        };\n        /**\n         * @param {?} text\n         * @param {?} sourceSpan\n         * @return {?}\n         */\n        _I18nVisitor.prototype._visitTextWithInterpolation = function (text, sourceSpan) {\n            var /** @type {?} */ splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n            if (!splitInterpolation) {\n                // No expression, return a single text\n                return new Text$1(text, sourceSpan);\n            }\n            // Return a group of text + expressions\n            var /** @type {?} */ nodes = [];\n            var /** @type {?} */ container = new Container(nodes, sourceSpan);\n            var _a = this._interpolationConfig, sDelimiter = _a.start, eDelimiter = _a.end;\n            for (var /** @type {?} */ i = 0; i < splitInterpolation.strings.length - 1; i++) {\n                var /** @type {?} */ expression = splitInterpolation.expressions[i];\n                var /** @type {?} */ baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n                var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n                if (splitInterpolation.strings[i].length) {\n                    // No need to add empty strings\n                    nodes.push(new Text$1(splitInterpolation.strings[i], sourceSpan));\n                }\n                nodes.push(new Placeholder(expression, phName, sourceSpan));\n                this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n            }\n            // The last index contains no expression\n            var /** @type {?} */ lastStringIdx = splitInterpolation.strings.length - 1;\n            if (splitInterpolation.strings[lastStringIdx].length) {\n                nodes.push(new Text$1(splitInterpolation.strings[lastStringIdx], sourceSpan));\n            }\n            return container;\n        };\n        return _I18nVisitor;\n    }());\n    var /** @type {?} */ _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*\"([\\s\\S]*?)\"[\\s\\S]*\\)/g;\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    function _extractPlaceholderName(input) {\n        return input.split(_CUSTOM_PH_EXP)[1];\n    }\n    /**\n     * An i18n error.\n     */\n    var I18nError = (function (_super) {\n        __extends(I18nError, _super);\n        /**\n         * @param {?} span\n         * @param {?} msg\n         */\n        function I18nError(span, msg) {\n            return _super.call(this, span, msg) || this;\n        }\n        return I18nError;\n    }(ParseError));\n    var /** @type {?} */ _I18N_ATTR = 'i18n';\n    var /** @type {?} */ _I18N_ATTR_PREFIX = 'i18n-';\n    var /** @type {?} */ _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\n    var /** @type {?} */ MEANING_SEPARATOR = '|';\n    var /** @type {?} */ ID_SEPARATOR = '@@';\n    /**\n     * Extract translatable messages from an html AST\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @param {?} implicitTags\n     * @param {?} implicitAttrs\n     * @return {?}\n     */\n    function extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n        var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n        return visitor.extract(nodes, interpolationConfig);\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @param {?} implicitTags\n     * @param {?} implicitAttrs\n     * @return {?}\n     */\n    function mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n        var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n        return visitor.merge(nodes, translations, interpolationConfig);\n    }\n    var ExtractionResult = (function () {\n        /**\n         * @param {?} messages\n         * @param {?} errors\n         */\n        function ExtractionResult(messages, errors) {\n            this.messages = messages;\n            this.errors = errors;\n        }\n        return ExtractionResult;\n    }());\n    var _VisitorMode = {};\n    _VisitorMode.Extract = 0;\n    _VisitorMode.Merge = 1;\n    _VisitorMode[_VisitorMode.Extract] = \"Extract\";\n    _VisitorMode[_VisitorMode.Merge] = \"Merge\";\n    /**\n     * This Visitor is used:\n     * 1. to extract all the translatable strings from an html AST (see `extract()`),\n     * 2. to replace the translatable strings with the actual translations (see `merge()`)\n     *\n     * \\@internal\n     */\n    var _Visitor = (function () {\n        /**\n         * @param {?} _implicitTags\n         * @param {?} _implicitAttrs\n         */\n        function _Visitor(_implicitTags, _implicitAttrs) {\n            this._implicitTags = _implicitTags;\n            this._implicitAttrs = _implicitAttrs;\n        }\n        /**\n         * Extracts the messages from the tree\n         * @param {?} nodes\n         * @param {?} interpolationConfig\n         * @return {?}\n         */\n        _Visitor.prototype.extract = function (nodes, interpolationConfig) {\n            var _this = this;\n            this._init(_VisitorMode.Extract, interpolationConfig);\n            nodes.forEach(function (node) { return node.visit(_this, null); });\n            if (this._inI18nBlock) {\n                this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n            }\n            return new ExtractionResult(this._messages, this._errors);\n        };\n        /**\n         * Returns a tree where all translatable nodes are translated\n         * @param {?} nodes\n         * @param {?} translations\n         * @param {?} interpolationConfig\n         * @return {?}\n         */\n        _Visitor.prototype.merge = function (nodes, translations, interpolationConfig) {\n            this._init(_VisitorMode.Merge, interpolationConfig);\n            this._translations = translations;\n            // Construct a single fake root element\n            var /** @type {?} */ wrapper = new Element('wrapper', [], nodes, null, null, null);\n            var /** @type {?} */ translatedNode = wrapper.visit(this, null);\n            if (this._inI18nBlock) {\n                this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n            }\n            return new ParseTreeResult(translatedNode.children, this._errors);\n        };\n        /**\n         * @param {?} icuCase\n         * @param {?} context\n         * @return {?}\n         */\n        _Visitor.prototype.visitExpansionCase = function (icuCase, context) {\n            // Parse cases for translatable html attributes\n            var /** @type {?} */ expression = visitAll(this, icuCase.expression, context);\n            if (this._mode === _VisitorMode.Merge) {\n                return new ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n            }\n        };\n        /**\n         * @param {?} icu\n         * @param {?} context\n         * @return {?}\n         */\n        _Visitor.prototype.visitExpansion = function (icu, context) {\n            this._mayBeAddBlockChildren(icu);\n            var /** @type {?} */ wasInIcu = this._inIcu;\n            if (!this._inIcu) {\n                // nested ICU messages should not be extracted but top-level translated as a whole\n                if (this._isInTranslatableSection) {\n                    this._addMessage([icu]);\n                }\n                this._inIcu = true;\n            }\n            var /** @type {?} */ cases = visitAll(this, icu.cases, context);\n            if (this._mode === _VisitorMode.Merge) {\n                icu = new Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n            }\n            this._inIcu = wasInIcu;\n            return icu;\n        };\n        /**\n         * @param {?} comment\n         * @param {?} context\n         * @return {?}\n         */\n        _Visitor.prototype.visitComment = function (comment, context) {\n            var /** @type {?} */ isOpening = _isOpeningComment(comment);\n            if (isOpening && this._isInTranslatableSection) {\n                this._reportError(comment, 'Could not start a block inside a translatable section');\n                return;\n            }\n            var /** @type {?} */ isClosing = _isClosingComment(comment);\n            if (isClosing && !this._inI18nBlock) {\n                this._reportError(comment, 'Trying to close an unopened block');\n                return;\n            }\n            if (!this._inI18nNode && !this._inIcu) {\n                if (!this._inI18nBlock) {\n                    if (isOpening) {\n                        this._inI18nBlock = true;\n                        this._blockStartDepth = this._depth;\n                        this._blockChildren = [];\n                        this._blockMeaningAndDesc = comment.value.replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n                        this._openTranslatableSection(comment);\n                    }\n                }\n                else {\n                    if (isClosing) {\n                        if (this._depth == this._blockStartDepth) {\n                            this._closeTranslatableSection(comment, this._blockChildren);\n                            this._inI18nBlock = false;\n                            var /** @type {?} */ message = this._addMessage(this._blockChildren, this._blockMeaningAndDesc);\n                            // merge attributes in sections\n                            var /** @type {?} */ nodes = this._translateMessage(comment, message);\n                            return visitAll(this, nodes);\n                        }\n                        else {\n                            this._reportError(comment, 'I18N blocks should not cross element boundaries');\n                            return;\n                        }\n                    }\n                }\n            }\n        };\n        /**\n         * @param {?} text\n         * @param {?} context\n         * @return {?}\n         */\n        _Visitor.prototype.visitText = function (text, context) {\n            if (this._isInTranslatableSection) {\n                this._mayBeAddBlockChildren(text);\n            }\n            return text;\n        };\n        /**\n         * @param {?} el\n         * @param {?} context\n         * @return {?}\n         */\n        _Visitor.prototype.visitElement = function (el, context) {\n            var _this = this;\n            this._mayBeAddBlockChildren(el);\n            this._depth++;\n            var /** @type {?} */ wasInI18nNode = this._inI18nNode;\n            var /** @type {?} */ wasInImplicitNode = this._inImplicitNode;\n            var /** @type {?} */ childNodes = [];\n            var /** @type {?} */ translatedChildNodes;\n            // Extract:\n            // - top level nodes with the (implicit) \"i18n\" attribute if not already in a section\n            // - ICU messages\n            var /** @type {?} */ i18nAttr = _getI18nAttr(el);\n            var /** @type {?} */ i18nMeta = i18nAttr ? i18nAttr.value : '';\n            var /** @type {?} */ isImplicit = this._implicitTags.some(function (tag) { return el.name === tag; }) && !this._inIcu &&\n                !this._isInTranslatableSection;\n            var /** @type {?} */ isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n            this._inImplicitNode = wasInImplicitNode || isImplicit;\n            if (!this._isInTranslatableSection && !this._inIcu) {\n                if (i18nAttr || isTopLevelImplicit) {\n                    this._inI18nNode = true;\n                    var /** @type {?} */ message = this._addMessage(el.children, i18nMeta);\n                    translatedChildNodes = this._translateMessage(el, message);\n                }\n                if (this._mode == _VisitorMode.Extract) {\n                    var /** @type {?} */ isTranslatable = i18nAttr || isTopLevelImplicit;\n                    if (isTranslatable)\n                        this._openTranslatableSection(el);\n                    visitAll(this, el.children);\n                    if (isTranslatable)\n                        this._closeTranslatableSection(el, el.children);\n                }\n            }\n            else {\n                if (i18nAttr || isTopLevelImplicit) {\n                    this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n                }\n                if (this._mode == _VisitorMode.Extract) {\n                    // Descend into child nodes for extraction\n                    visitAll(this, el.children);\n                }\n            }\n            if (this._mode === _VisitorMode.Merge) {\n                var /** @type {?} */ visitNodes = translatedChildNodes || el.children;\n                visitNodes.forEach(function (child) {\n                    var /** @type {?} */ visited = child.visit(_this, context);\n                    if (visited && !_this._isInTranslatableSection) {\n                        // Do not add the children from translatable sections (= i18n blocks here)\n                        // They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)\n                        childNodes = childNodes.concat(visited);\n                    }\n                });\n            }\n            this._visitAttributesOf(el);\n            this._depth--;\n            this._inI18nNode = wasInI18nNode;\n            this._inImplicitNode = wasInImplicitNode;\n            if (this._mode === _VisitorMode.Merge) {\n                var /** @type {?} */ translatedAttrs = this._translateAttributes(el);\n                return new Element(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n            }\n        };\n        /**\n         * @param {?} attribute\n         * @param {?} context\n         * @return {?}\n         */\n        _Visitor.prototype.visitAttribute = function (attribute, context) {\n            throw new Error('unreachable code');\n        };\n        /**\n         * @param {?} mode\n         * @param {?} interpolationConfig\n         * @return {?}\n         */\n        _Visitor.prototype._init = function (mode, interpolationConfig) {\n            this._mode = mode;\n            this._inI18nBlock = false;\n            this._inI18nNode = false;\n            this._depth = 0;\n            this._inIcu = false;\n            this._msgCountAtSectionStart = void 0;\n            this._errors = [];\n            this._messages = [];\n            this._inImplicitNode = false;\n            this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n        };\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        _Visitor.prototype._visitAttributesOf = function (el) {\n            var _this = this;\n            var /** @type {?} */ explicitAttrNameToValue = {};\n            var /** @type {?} */ implicitAttrNames = this._implicitAttrs[el.name] || [];\n            el.attrs.filter(function (attr) { return attr.name.startsWith(_I18N_ATTR_PREFIX); })\n                .forEach(function (attr) { return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                attr.value; });\n            el.attrs.forEach(function (attr) {\n                if (attr.name in explicitAttrNameToValue) {\n                    _this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n                }\n                else if (implicitAttrNames.some(function (name) { return attr.name === name; })) {\n                    _this._addMessage([attr]);\n                }\n            });\n        };\n        /**\n         * @param {?} ast\n         * @param {?=} msgMeta\n         * @return {?}\n         */\n        _Visitor.prototype._addMessage = function (ast, msgMeta) {\n            if (ast.length == 0 ||\n                ast.length == 1 && ast[0] instanceof Attribute$1 && !((ast[0])).value) {\n                // Do not create empty messages\n                return;\n            }\n            var _a = _parseMessageMeta(msgMeta), meaning = _a.meaning, description = _a.description, id = _a.id;\n            var /** @type {?} */ message = this._createI18nMessage(ast, meaning, description, id);\n            this._messages.push(message);\n            return message;\n        };\n        /**\n         * @param {?} el\n         * @param {?} message\n         * @return {?}\n         */\n        _Visitor.prototype._translateMessage = function (el, message) {\n            if (message && this._mode === _VisitorMode.Merge) {\n                var /** @type {?} */ nodes = this._translations.get(message);\n                if (nodes) {\n                    return nodes;\n                }\n                this._reportError(el, \"Translation unavailable for message id=\\\"\" + this._translations.digest(message) + \"\\\"\");\n            }\n            return [];\n        };\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        _Visitor.prototype._translateAttributes = function (el) {\n            var _this = this;\n            var /** @type {?} */ attributes = el.attrs;\n            var /** @type {?} */ i18nAttributeMeanings = {};\n            attributes.forEach(function (attr) {\n                if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                    i18nAttributeMeanings[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                        _parseMessageMeta(attr.value).meaning;\n                }\n            });\n            var /** @type {?} */ translatedAttributes = [];\n            attributes.forEach(function (attr) {\n                if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                    // strip i18n specific attributes\n                    return;\n                }\n                if (attr.value && attr.value != '' && i18nAttributeMeanings.hasOwnProperty(attr.name)) {\n                    var /** @type {?} */ meaning = i18nAttributeMeanings[attr.name];\n                    var /** @type {?} */ message = _this._createI18nMessage([attr], meaning, '', '');\n                    var /** @type {?} */ nodes = _this._translations.get(message);\n                    if (nodes) {\n                        if (nodes.length == 0) {\n                            translatedAttributes.push(new Attribute$1(attr.name, '', attr.sourceSpan));\n                        }\n                        else if (nodes[0] instanceof Text) {\n                            var /** @type {?} */ value = ((nodes[0])).value;\n                            translatedAttributes.push(new Attribute$1(attr.name, value, attr.sourceSpan));\n                        }\n                        else {\n                            _this._reportError(el, \"Unexpected translation for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + _this._translations.digest(message) + \"\\\")\");\n                        }\n                    }\n                    else {\n                        _this._reportError(el, \"Translation unavailable for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + _this._translations.digest(message) + \"\\\")\");\n                    }\n                }\n                else {\n                    translatedAttributes.push(attr);\n                }\n            });\n            return translatedAttributes;\n        };\n        /**\n         * Add the node as a child of the block when:\n         * - we are in a block,\n         * - we are not inside a ICU message (those are handled separately),\n         * - the node is a \"direct child\" of the block\n         * @param {?} node\n         * @return {?}\n         */\n        _Visitor.prototype._mayBeAddBlockChildren = function (node) {\n            if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n                this._blockChildren.push(node);\n            }\n        };\n        /**\n         * Marks the start of a section, see `_closeTranslatableSection`\n         * @param {?} node\n         * @return {?}\n         */\n        _Visitor.prototype._openTranslatableSection = function (node) {\n            if (this._isInTranslatableSection) {\n                this._reportError(node, 'Unexpected section start');\n            }\n            else {\n                this._msgCountAtSectionStart = this._messages.length;\n            }\n        };\n        Object.defineProperty(_Visitor.prototype, \"_isInTranslatableSection\", {\n            /**\n             * A translatable section could be:\n             * - the content of translatable element,\n             * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n             * @return {?}\n             */\n            get: function () {\n                return this._msgCountAtSectionStart !== void 0;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Terminates a section.\n         *\n         * If a section has only one significant children (comments not significant) then we should not\n         * keep the message from this children:\n         *\n         * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n         * - one for the <p> content with meaning and description,\n         * - another one for the ICU message.\n         *\n         * In this case the last message is discarded as it contains less information (the AST is\n         * otherwise identical).\n         *\n         * Note that we should still keep messages extracted from attributes inside the section (ie in the\n         * ICU message here)\n         * @param {?} node\n         * @param {?} directChildren\n         * @return {?}\n         */\n        _Visitor.prototype._closeTranslatableSection = function (node, directChildren) {\n            if (!this._isInTranslatableSection) {\n                this._reportError(node, 'Unexpected section end');\n                return;\n            }\n            var /** @type {?} */ startIndex = this._msgCountAtSectionStart;\n            var /** @type {?} */ significantChildren = directChildren.reduce(function (count, node) { return count + (node instanceof Comment ? 0 : 1); }, 0);\n            if (significantChildren == 1) {\n                for (var /** @type {?} */ i = this._messages.length - 1; i >= startIndex; i--) {\n                    var /** @type {?} */ ast = this._messages[i].nodes;\n                    if (!(ast.length == 1 && ast[0] instanceof Text$1)) {\n                        this._messages.splice(i, 1);\n                        break;\n                    }\n                }\n            }\n            this._msgCountAtSectionStart = void 0;\n        };\n        /**\n         * @param {?} node\n         * @param {?} msg\n         * @return {?}\n         */\n        _Visitor.prototype._reportError = function (node, msg) {\n            this._errors.push(new I18nError(node.sourceSpan, msg));\n        };\n        return _Visitor;\n    }());\n    /**\n     * @param {?} n\n     * @return {?}\n     */\n    function _isOpeningComment(n) {\n        return n instanceof Comment && n.value && n.value.startsWith('i18n');\n    }\n    /**\n     * @param {?} n\n     * @return {?}\n     */\n    function _isClosingComment(n) {\n        return n instanceof Comment && n.value && n.value === '/i18n';\n    }\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    function _getI18nAttr(p) {\n        return p.attrs.find(function (attr) { return attr.name === _I18N_ATTR; }) || null;\n    }\n    /**\n     * @param {?} i18n\n     * @return {?}\n     */\n    function _parseMessageMeta(i18n) {\n        if (!i18n)\n            return { meaning: '', description: '', id: '' };\n        var /** @type {?} */ idIndex = i18n.indexOf(ID_SEPARATOR);\n        var /** @type {?} */ descIndex = i18n.indexOf(MEANING_SEPARATOR);\n        var _a = (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''], meaningAndDesc = _a[0], id = _a[1];\n        var _b = (descIndex > -1) ?\n            [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n            ['', meaningAndDesc], meaning = _b[0], description = _b[1];\n        return { meaning: meaning, description: description, id: id };\n    }\n    var XmlTagDefinition = (function () {\n        function XmlTagDefinition() {\n            this.closedByParent = false;\n            this.contentType = TagContentType.PARSABLE_DATA;\n            this.isVoid = false;\n            this.ignoreFirstLf = false;\n            this.canSelfClose = true;\n        }\n        /**\n         * @param {?} currentParent\n         * @return {?}\n         */\n        XmlTagDefinition.prototype.requireExtraParent = function (currentParent) { return false; };\n        /**\n         * @param {?} name\n         * @return {?}\n         */\n        XmlTagDefinition.prototype.isClosedByChild = function (name) { return false; };\n        return XmlTagDefinition;\n    }());\n    var /** @type {?} */ _TAG_DEFINITION = new XmlTagDefinition();\n    /**\n     * @param {?} tagName\n     * @return {?}\n     */\n    function getXmlTagDefinition(tagName) {\n        return _TAG_DEFINITION;\n    }\n    var XmlParser = (function (_super) {\n        __extends(XmlParser, _super);\n        function XmlParser() {\n            return _super.call(this, getXmlTagDefinition) || this;\n        }\n        /**\n         * @param {?} source\n         * @param {?} url\n         * @param {?=} parseExpansionForms\n         * @return {?}\n         */\n        XmlParser.prototype.parse = function (source, url, parseExpansionForms) {\n            if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n            return _super.prototype.parse.call(this, source, url, parseExpansionForms, null);\n        };\n        return XmlParser;\n    }(Parser$1));\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    function digest(message) {\n        return message.id || sha1(serializeNodes(message.nodes).join('') + (\"[\" + message.meaning + \"]\"));\n    }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    function decimalDigest(message) {\n        if (message.id) {\n            return message.id;\n        }\n        var /** @type {?} */ visitor = new _SerializerIgnoreIcuExpVisitor();\n        var /** @type {?} */ parts = message.nodes.map(function (a) { return a.visit(visitor, null); });\n        return computeMsgId(parts.join(''), message.meaning);\n    }\n    /**\n     * Serialize the i18n ast to something xml-like in order to generate an UID.\n     *\n     * The visitor is also used in the i18n parser tests\n     *\n     * \\@internal\n     */\n    var _SerializerVisitor = (function () {\n        function _SerializerVisitor() {\n        }\n        /**\n         * @param {?} text\n         * @param {?} context\n         * @return {?}\n         */\n        _SerializerVisitor.prototype.visitText = function (text, context) { return text.value; };\n        /**\n         * @param {?} container\n         * @param {?} context\n         * @return {?}\n         */\n        _SerializerVisitor.prototype.visitContainer = function (container, context) {\n            var _this = this;\n            return \"[\" + container.children.map(function (child) { return child.visit(_this); }).join(', ') + \"]\";\n        };\n        /**\n         * @param {?} icu\n         * @param {?} context\n         * @return {?}\n         */\n        _SerializerVisitor.prototype.visitIcu = function (icu, context) {\n            var _this = this;\n            var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n            return \"{\" + icu.expression + \", \" + icu.type + \", \" + strCases.join(', ') + \"}\";\n        };\n        /**\n         * @param {?} ph\n         * @param {?} context\n         * @return {?}\n         */\n        _SerializerVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n            var _this = this;\n            return ph.isVoid ?\n                \"<ph tag name=\\\"\" + ph.startName + \"\\\"/>\" :\n                \"<ph tag name=\\\"\" + ph.startName + \"\\\">\" + ph.children.map(function (child) { return child.visit(_this); }).join(', ') + \"</ph name=\\\"\" + ph.closeName + \"\\\">\";\n        };\n        /**\n         * @param {?} ph\n         * @param {?} context\n         * @return {?}\n         */\n        _SerializerVisitor.prototype.visitPlaceholder = function (ph, context) {\n            return ph.value ? \"<ph name=\\\"\" + ph.name + \"\\\">\" + ph.value + \"</ph>\" : \"<ph name=\\\"\" + ph.name + \"\\\"/>\";\n        };\n        /**\n         * @param {?} ph\n         * @param {?=} context\n         * @return {?}\n         */\n        _SerializerVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n            return \"<ph icu name=\\\"\" + ph.name + \"\\\">\" + ph.value.visit(this) + \"</ph>\";\n        };\n        return _SerializerVisitor;\n    }());\n    var /** @type {?} */ serializerVisitor = new _SerializerVisitor();\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function serializeNodes(nodes) {\n        return nodes.map(function (a) { return a.visit(serializerVisitor, null); });\n    }\n    /**\n     * Serialize the i18n ast to something xml-like in order to generate an UID.\n     *\n     * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n     *\n     * \\@internal\n     */\n    var _SerializerIgnoreIcuExpVisitor = (function (_super) {\n        __extends(_SerializerIgnoreIcuExpVisitor, _super);\n        function _SerializerIgnoreIcuExpVisitor() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * @param {?} icu\n         * @param {?} context\n         * @return {?}\n         */\n        _SerializerIgnoreIcuExpVisitor.prototype.visitIcu = function (icu, context) {\n            var _this = this;\n            var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n            // Do not take the expression into account\n            return \"{\" + icu.type + \", \" + strCases.join(', ') + \"}\";\n        };\n        return _SerializerIgnoreIcuExpVisitor;\n    }(_SerializerVisitor));\n    /**\n     * Compute the SHA1 of the given string\n     *\n     * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n     *\n     * WARNING: this function has not been designed not tested with security in mind.\n     *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n     * @param {?} str\n     * @return {?}\n     */\n    function sha1(str) {\n        var /** @type {?} */ utf8 = utf8Encode(str);\n        var /** @type {?} */ words32 = stringToWords32(utf8, Endian.Big);\n        var /** @type {?} */ len = utf8.length * 8;\n        var /** @type {?} */ w = new Array(80);\n        var _a = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], a = _a[0], b = _a[1], c = _a[2], d = _a[3], e = _a[4];\n        words32[len >> 5] |= 0x80 << (24 - len % 32);\n        words32[((len + 64 >> 9) << 4) + 15] = len;\n        for (var /** @type {?} */ i = 0; i < words32.length; i += 16) {\n            var _b = [a, b, c, d, e], h0 = _b[0], h1 = _b[1], h2 = _b[2], h3 = _b[3], h4 = _b[4];\n            for (var /** @type {?} */ j = 0; j < 80; j++) {\n                if (j < 16) {\n                    w[j] = words32[i + j];\n                }\n                else {\n                    w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n                }\n                var _c = fk(j, b, c, d), f = _c[0], k = _c[1];\n                var /** @type {?} */ temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n                _d = [d, c, rol32(b, 30), a, temp], e = _d[0], d = _d[1], c = _d[2], b = _d[3], a = _d[4];\n            }\n            _e = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)], a = _e[0], b = _e[1], c = _e[2], d = _e[3], e = _e[4];\n        }\n        return byteStringToHexString(words32ToByteString([a, b, c, d, e]));\n        var _d, _e;\n    }\n    /**\n     * @param {?} index\n     * @param {?} b\n     * @param {?} c\n     * @param {?} d\n     * @return {?}\n     */\n    function fk(index, b, c, d) {\n        if (index < 20) {\n            return [(b & c) | (~b & d), 0x5a827999];\n        }\n        if (index < 40) {\n            return [b ^ c ^ d, 0x6ed9eba1];\n        }\n        if (index < 60) {\n            return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n        }\n        return [b ^ c ^ d, 0xca62c1d6];\n    }\n    /**\n     * Compute the fingerprint of the given string\n     *\n     * The output is 64 bit number encoded as a decimal string\n     *\n     * based on:\n     * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n     * @param {?} str\n     * @return {?}\n     */\n    function fingerprint(str) {\n        var /** @type {?} */ utf8 = utf8Encode(str);\n        var _a = [hash32(utf8, 0), hash32(utf8, 102072)], hi = _a[0], lo = _a[1];\n        if (hi == 0 && (lo == 0 || lo == 1)) {\n            hi = hi ^ 0x130f9bef;\n            lo = lo ^ -0x6b5f56d8;\n        }\n        return [hi, lo];\n    }\n    /**\n     * @param {?} msg\n     * @param {?} meaning\n     * @return {?}\n     */\n    function computeMsgId(msg, meaning) {\n        var _a = fingerprint(msg), hi = _a[0], lo = _a[1];\n        if (meaning) {\n            var _b = fingerprint(meaning), him = _b[0], lom = _b[1];\n            _c = add64(rol64([hi, lo], 1), [him, lom]), hi = _c[0], lo = _c[1];\n        }\n        return byteStringToDecString(words32ToByteString([hi & 0x7fffffff, lo]));\n        var _c;\n    }\n    /**\n     * @param {?} str\n     * @param {?} c\n     * @return {?}\n     */\n    function hash32(str, c) {\n        var _a = [0x9e3779b9, 0x9e3779b9], a = _a[0], b = _a[1];\n        var /** @type {?} */ i;\n        var /** @type {?} */ len = str.length;\n        for (i = 0; i + 12 <= len; i += 12) {\n            a = add32(a, wordAt(str, i, Endian.Little));\n            b = add32(b, wordAt(str, i + 4, Endian.Little));\n            c = add32(c, wordAt(str, i + 8, Endian.Little));\n            _b = mix([a, b, c]), a = _b[0], b = _b[1], c = _b[2];\n        }\n        a = add32(a, wordAt(str, i, Endian.Little));\n        b = add32(b, wordAt(str, i + 4, Endian.Little));\n        // the first byte of c is reserved for the length\n        c = add32(c, len);\n        c = add32(c, wordAt(str, i + 8, Endian.Little) << 8);\n        return mix([a, b, c])[2];\n        var _b;\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function mix(_a) {\n        var a = _a[0], b = _a[1], c = _a[2];\n        a = sub32(a, b);\n        a = sub32(a, c);\n        a ^= c >>> 13;\n        b = sub32(b, c);\n        b = sub32(b, a);\n        b ^= a << 8;\n        c = sub32(c, a);\n        c = sub32(c, b);\n        c ^= b >>> 13;\n        a = sub32(a, b);\n        a = sub32(a, c);\n        a ^= c >>> 12;\n        b = sub32(b, c);\n        b = sub32(b, a);\n        b ^= a << 16;\n        c = sub32(c, a);\n        c = sub32(c, b);\n        c ^= b >>> 5;\n        a = sub32(a, b);\n        a = sub32(a, c);\n        a ^= c >>> 3;\n        b = sub32(b, c);\n        b = sub32(b, a);\n        b ^= a << 10;\n        c = sub32(c, a);\n        c = sub32(c, b);\n        c ^= b >>> 15;\n        return [a, b, c];\n    }\n    var Endian = {};\n    Endian.Little = 0;\n    Endian.Big = 1;\n    Endian[Endian.Little] = \"Little\";\n    Endian[Endian.Big] = \"Big\";\n    /**\n     * @param {?} a\n     * @param {?} b\n     * @return {?}\n     */\n    function add32(a, b) {\n        return add32to64(a, b)[1];\n    }\n    /**\n     * @param {?} a\n     * @param {?} b\n     * @return {?}\n     */\n    function add32to64(a, b) {\n        var /** @type {?} */ low = (a & 0xffff) + (b & 0xffff);\n        var /** @type {?} */ high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n        return [high >>> 16, (high << 16) | (low & 0xffff)];\n    }\n    /**\n     * @param {?} __0\n     * @param {?} __1\n     * @return {?}\n     */\n    function add64(_a, _b) {\n        var ah = _a[0], al = _a[1];\n        var bh = _b[0], bl = _b[1];\n        var _c = add32to64(al, bl), carry = _c[0], l = _c[1];\n        var /** @type {?} */ h = add32(add32(ah, bh), carry);\n        return [h, l];\n    }\n    /**\n     * @param {?} a\n     * @param {?} b\n     * @return {?}\n     */\n    function sub32(a, b) {\n        var /** @type {?} */ low = (a & 0xffff) - (b & 0xffff);\n        var /** @type {?} */ high = (a >> 16) - (b >> 16) + (low >> 16);\n        return (high << 16) | (low & 0xffff);\n    }\n    /**\n     * @param {?} a\n     * @param {?} count\n     * @return {?}\n     */\n    function rol32(a, count) {\n        return (a << count) | (a >>> (32 - count));\n    }\n    /**\n     * @param {?} __0\n     * @param {?} count\n     * @return {?}\n     */\n    function rol64(_a, count) {\n        var hi = _a[0], lo = _a[1];\n        var /** @type {?} */ h = (hi << count) | (lo >>> (32 - count));\n        var /** @type {?} */ l = (lo << count) | (hi >>> (32 - count));\n        return [h, l];\n    }\n    /**\n     * @param {?} str\n     * @param {?} endian\n     * @return {?}\n     */\n    function stringToWords32(str, endian) {\n        var /** @type {?} */ words32 = Array((str.length + 3) >>> 2);\n        for (var /** @type {?} */ i = 0; i < words32.length; i++) {\n            words32[i] = wordAt(str, i * 4, endian);\n        }\n        return words32;\n    }\n    /**\n     * @param {?} str\n     * @param {?} index\n     * @return {?}\n     */\n    function byteAt(str, index) {\n        return index >= str.length ? 0 : str.charCodeAt(index) & 0xff;\n    }\n    /**\n     * @param {?} str\n     * @param {?} index\n     * @param {?} endian\n     * @return {?}\n     */\n    function wordAt(str, index, endian) {\n        var /** @type {?} */ word = 0;\n        if (endian === Endian.Big) {\n            for (var /** @type {?} */ i = 0; i < 4; i++) {\n                word += byteAt(str, index + i) << (24 - 8 * i);\n            }\n        }\n        else {\n            for (var /** @type {?} */ i = 0; i < 4; i++) {\n                word += byteAt(str, index + i) << 8 * i;\n            }\n        }\n        return word;\n    }\n    /**\n     * @param {?} words32\n     * @return {?}\n     */\n    function words32ToByteString(words32) {\n        return words32.reduce(function (str, word) { return str + word32ToByteString(word); }, '');\n    }\n    /**\n     * @param {?} word\n     * @return {?}\n     */\n    function word32ToByteString(word) {\n        var /** @type {?} */ str = '';\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            str += String.fromCharCode((word >>> 8 * (3 - i)) & 0xff);\n        }\n        return str;\n    }\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    function byteStringToHexString(str) {\n        var /** @type {?} */ hex = '';\n        for (var /** @type {?} */ i = 0; i < str.length; i++) {\n            var /** @type {?} */ b = byteAt(str, i);\n            hex += (b >>> 4).toString(16) + (b & 0x0f).toString(16);\n        }\n        return hex.toLowerCase();\n    }\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    function byteStringToDecString(str) {\n        var /** @type {?} */ decimal = '';\n        var /** @type {?} */ toThePower = '1';\n        for (var /** @type {?} */ i = str.length - 1; i >= 0; i--) {\n            decimal = addBigInt(decimal, numberTimesBigInt(byteAt(str, i), toThePower));\n            toThePower = numberTimesBigInt(256, toThePower);\n        }\n        return decimal.split('').reverse().join('');\n    }\n    /**\n     * @param {?} x\n     * @param {?} y\n     * @return {?}\n     */\n    function addBigInt(x, y) {\n        var /** @type {?} */ sum = '';\n        var /** @type {?} */ len = Math.max(x.length, y.length);\n        for (var /** @type {?} */ i = 0, /** @type {?} */ carry = 0; i < len || carry; i++) {\n            var /** @type {?} */ tmpSum = carry + +(x[i] || 0) + +(y[i] || 0);\n            if (tmpSum >= 10) {\n                carry = 1;\n                sum += tmpSum - 10;\n            }\n            else {\n                carry = 0;\n                sum += tmpSum;\n            }\n        }\n        return sum;\n    }\n    /**\n     * @param {?} num\n     * @param {?} b\n     * @return {?}\n     */\n    function numberTimesBigInt(num, b) {\n        var /** @type {?} */ product = '';\n        var /** @type {?} */ bToThePower = b;\n        for (; num !== 0; num = num >>> 1) {\n            if (num & 1)\n                product = addBigInt(product, bToThePower);\n            bToThePower = addBigInt(bToThePower, bToThePower);\n        }\n        return product;\n    }\n    /**\n     * @abstract\n     */\n    var Serializer = (function () {\n        function Serializer() {\n        }\n        /**\n         * @abstract\n         * @param {?} messages\n         * @param {?} locale\n         * @return {?}\n         */\n        Serializer.prototype.write = function (messages, locale) { };\n        /**\n         * @abstract\n         * @param {?} content\n         * @param {?} url\n         * @return {?}\n         */\n        Serializer.prototype.load = function (content, url) { };\n        /**\n         * @abstract\n         * @param {?} message\n         * @return {?}\n         */\n        Serializer.prototype.digest = function (message) { };\n        /**\n         * @param {?} message\n         * @return {?}\n         */\n        Serializer.prototype.createNameMapper = function (message) { return null; };\n        return Serializer;\n    }());\n    /**\n     * A simple mapper that take a function to transform an internal name to a public name\n     */\n    var SimplePlaceholderMapper = (function (_super) {\n        __extends(SimplePlaceholderMapper, _super);\n        /**\n         * @param {?} message\n         * @param {?} mapName\n         */\n        function SimplePlaceholderMapper(message, mapName) {\n            var _this = _super.call(this) || this;\n            _this.mapName = mapName;\n            _this.internalToPublic = {};\n            _this.publicToNextId = {};\n            _this.publicToInternal = {};\n            message.nodes.forEach(function (node) { return node.visit(_this); });\n            return _this;\n        }\n        /**\n         * @param {?} internalName\n         * @return {?}\n         */\n        SimplePlaceholderMapper.prototype.toPublicName = function (internalName) {\n            return this.internalToPublic.hasOwnProperty(internalName) ?\n                this.internalToPublic[internalName] :\n                null;\n        };\n        /**\n         * @param {?} publicName\n         * @return {?}\n         */\n        SimplePlaceholderMapper.prototype.toInternalName = function (publicName) {\n            return this.publicToInternal.hasOwnProperty(publicName) ? this.publicToInternal[publicName] :\n                null;\n        };\n        /**\n         * @param {?} text\n         * @param {?=} context\n         * @return {?}\n         */\n        SimplePlaceholderMapper.prototype.visitText = function (text, context) { return null; };\n        /**\n         * @param {?} ph\n         * @param {?=} context\n         * @return {?}\n         */\n        SimplePlaceholderMapper.prototype.visitTagPlaceholder = function (ph, context) {\n            this.visitPlaceholderName(ph.startName);\n            _super.prototype.visitTagPlaceholder.call(this, ph, context);\n            this.visitPlaceholderName(ph.closeName);\n        };\n        /**\n         * @param {?} ph\n         * @param {?=} context\n         * @return {?}\n         */\n        SimplePlaceholderMapper.prototype.visitPlaceholder = function (ph, context) { this.visitPlaceholderName(ph.name); };\n        /**\n         * @param {?} ph\n         * @param {?=} context\n         * @return {?}\n         */\n        SimplePlaceholderMapper.prototype.visitIcuPlaceholder = function (ph, context) {\n            this.visitPlaceholderName(ph.name);\n        };\n        /**\n         * @param {?} internalName\n         * @return {?}\n         */\n        SimplePlaceholderMapper.prototype.visitPlaceholderName = function (internalName) {\n            if (!internalName || this.internalToPublic.hasOwnProperty(internalName)) {\n                return;\n            }\n            var /** @type {?} */ publicName = this.mapName(internalName);\n            if (this.publicToInternal.hasOwnProperty(publicName)) {\n                // Create a new XMB when it has already been used\n                var /** @type {?} */ nextId = this.publicToNextId[publicName];\n                this.publicToNextId[publicName] = nextId + 1;\n                publicName = publicName + \"_\" + nextId;\n            }\n            else {\n                this.publicToNextId[publicName] = 1;\n            }\n            this.internalToPublic[internalName] = publicName;\n            this.publicToInternal[publicName] = internalName;\n        };\n        return SimplePlaceholderMapper;\n    }(RecurseVisitor));\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _Visitor$1 = (function () {\n        function _Visitor$1() {\n        }\n        /**\n         * @param {?} tag\n         * @return {?}\n         */\n        _Visitor$1.prototype.visitTag = function (tag) {\n            var _this = this;\n            var /** @type {?} */ strAttrs = this._serializeAttributes(tag.attrs);\n            if (tag.children.length == 0) {\n                return \"<\" + tag.name + strAttrs + \"/>\";\n            }\n            var /** @type {?} */ strChildren = tag.children.map(function (node) { return node.visit(_this); });\n            return \"<\" + tag.name + strAttrs + \">\" + strChildren.join('') + \"</\" + tag.name + \">\";\n        };\n        /**\n         * @param {?} text\n         * @return {?}\n         */\n        _Visitor$1.prototype.visitText = function (text) { return text.value; };\n        /**\n         * @param {?} decl\n         * @return {?}\n         */\n        _Visitor$1.prototype.visitDeclaration = function (decl) {\n            return \"<?xml\" + this._serializeAttributes(decl.attrs) + \" ?>\";\n        };\n        /**\n         * @param {?} attrs\n         * @return {?}\n         */\n        _Visitor$1.prototype._serializeAttributes = function (attrs) {\n            var /** @type {?} */ strAttrs = Object.keys(attrs).map(function (name) { return name + \"=\\\"\" + attrs[name] + \"\\\"\"; }).join(' ');\n            return strAttrs.length > 0 ? ' ' + strAttrs : '';\n        };\n        /**\n         * @param {?} doctype\n         * @return {?}\n         */\n        _Visitor$1.prototype.visitDoctype = function (doctype) {\n            return \"<!DOCTYPE \" + doctype.rootTag + \" [\\n\" + doctype.dtd + \"\\n]>\";\n        };\n        return _Visitor$1;\n    }());\n    var /** @type {?} */ _visitor = new _Visitor$1();\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function serialize(nodes) {\n        return nodes.map(function (node) { return node.visit(_visitor); }).join('');\n    }\n    var Declaration = (function () {\n        /**\n         * @param {?} unescapedAttrs\n         */\n        function Declaration(unescapedAttrs) {\n            var _this = this;\n            this.attrs = {};\n            Object.keys(unescapedAttrs).forEach(function (k) {\n                _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n            });\n        }\n        /**\n         * @param {?} visitor\n         * @return {?}\n         */\n        Declaration.prototype.visit = function (visitor) { return visitor.visitDeclaration(this); };\n        return Declaration;\n    }());\n    var Doctype = (function () {\n        /**\n         * @param {?} rootTag\n         * @param {?} dtd\n         */\n        function Doctype(rootTag, dtd) {\n            this.rootTag = rootTag;\n            this.dtd = dtd;\n        }\n        ;\n        /**\n         * @param {?} visitor\n         * @return {?}\n         */\n        Doctype.prototype.visit = function (visitor) { return visitor.visitDoctype(this); };\n        return Doctype;\n    }());\n    var Tag = (function () {\n        /**\n         * @param {?} name\n         * @param {?=} unescapedAttrs\n         * @param {?=} children\n         */\n        function Tag(name, unescapedAttrs, children) {\n            if (unescapedAttrs === void 0) { unescapedAttrs = {}; }\n            if (children === void 0) { children = []; }\n            var _this = this;\n            this.name = name;\n            this.children = children;\n            this.attrs = {};\n            Object.keys(unescapedAttrs).forEach(function (k) {\n                _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n            });\n        }\n        /**\n         * @param {?} visitor\n         * @return {?}\n         */\n        Tag.prototype.visit = function (visitor) { return visitor.visitTag(this); };\n        return Tag;\n    }());\n    var Text$2 = (function () {\n        /**\n         * @param {?} unescapedValue\n         */\n        function Text$2(unescapedValue) {\n            this.value = _escapeXml(unescapedValue);\n        }\n        ;\n        /**\n         * @param {?} visitor\n         * @return {?}\n         */\n        Text$2.prototype.visit = function (visitor) { return visitor.visitText(this); };\n        return Text$2;\n    }());\n    var CR = (function (_super) {\n        __extends(CR, _super);\n        /**\n         * @param {?=} ws\n         */\n        function CR(ws) {\n            if (ws === void 0) { ws = 0; }\n            return _super.call(this, \"\\n\" + new Array(ws + 1).join(' ')) || this;\n        }\n        return CR;\n    }(Text$2));\n    var /** @type {?} */ _ESCAPED_CHARS = [\n        [/&/g, '&amp;'],\n        [/\"/g, '&quot;'],\n        [/'/g, '&apos;'],\n        [/</g, '&lt;'],\n        [/>/g, '&gt;'],\n    ];\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    function _escapeXml(text) {\n        return _ESCAPED_CHARS.reduce(function (text, entry) { return text.replace(entry[0], entry[1]); }, text);\n    }\n    var /** @type {?} */ _VERSION = '1.2';\n    var /** @type {?} */ _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n    // TODO(vicb): make this a param (s/_/-/)\n    var /** @type {?} */ _DEFAULT_SOURCE_LANG = 'en';\n    var /** @type {?} */ _PLACEHOLDER_TAG = 'x';\n    var /** @type {?} */ _FILE_TAG = 'file';\n    var /** @type {?} */ _SOURCE_TAG = 'source';\n    var /** @type {?} */ _TARGET_TAG = 'target';\n    var /** @type {?} */ _UNIT_TAG = 'trans-unit';\n    var Xliff = (function (_super) {\n        __extends(Xliff, _super);\n        function Xliff() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * @param {?} messages\n         * @param {?} locale\n         * @return {?}\n         */\n        Xliff.prototype.write = function (messages, locale) {\n            var /** @type {?} */ visitor = new _WriteVisitor();\n            var /** @type {?} */ transUnits = [];\n            messages.forEach(function (message) {\n                var /** @type {?} */ transUnit = new Tag(_UNIT_TAG, { id: message.id, datatype: 'html' });\n                transUnit.children.push(new CR(8), new Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes)), new CR(8), new Tag(_TARGET_TAG));\n                if (message.description) {\n                    transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'description' }, [new Text$2(message.description)]));\n                }\n                if (message.meaning) {\n                    transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'meaning' }, [new Text$2(message.meaning)]));\n                }\n                transUnit.children.push(new CR(6));\n                transUnits.push(new CR(6), transUnit);\n            });\n            var /** @type {?} */ body = new Tag('body', {}, transUnits.concat([new CR(4)]));\n            var /** @type {?} */ file = new Tag('file', {\n                'source-language': locale || _DEFAULT_SOURCE_LANG,\n                datatype: 'plaintext',\n                original: 'ng2.template',\n            }, [new CR(4), body, new CR(2)]);\n            var /** @type {?} */ xliff = new Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new CR(2), file, new CR()]);\n            return serialize([\n                new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n            ]);\n        };\n        /**\n         * @param {?} content\n         * @param {?} url\n         * @return {?}\n         */\n        Xliff.prototype.load = function (content, url) {\n            // xliff to xml nodes\n            var /** @type {?} */ xliffParser = new XliffParser();\n            var _a = xliffParser.parse(content, url), locale = _a.locale, mlNodesByMsgId = _a.mlNodesByMsgId, errors = _a.errors;\n            // xml nodes to i18n nodes\n            var /** @type {?} */ i18nNodesByMsgId = {};\n            var /** @type {?} */ converter = new XmlToI18n();\n            Object.keys(mlNodesByMsgId).forEach(function (msgId) {\n                var _a = converter.convert(mlNodesByMsgId[msgId]), i18nNodes = _a.i18nNodes, e = _a.errors;\n                errors.push.apply(errors, e);\n                i18nNodesByMsgId[msgId] = i18nNodes;\n            });\n            if (errors.length) {\n                throw new Error(\"xliff parse errors:\\n\" + errors.join('\\n'));\n            }\n            return { locale: locale, i18nNodesByMsgId: i18nNodesByMsgId };\n        };\n        /**\n         * @param {?} message\n         * @return {?}\n         */\n        Xliff.prototype.digest = function (message) { return digest(message); };\n        return Xliff;\n    }(Serializer));\n    var _WriteVisitor = (function () {\n        function _WriteVisitor() {\n        }\n        /**\n         * @param {?} text\n         * @param {?=} context\n         * @return {?}\n         */\n        _WriteVisitor.prototype.visitText = function (text, context) { return [new Text$2(text.value)]; };\n        /**\n         * @param {?} container\n         * @param {?=} context\n         * @return {?}\n         */\n        _WriteVisitor.prototype.visitContainer = function (container, context) {\n            var _this = this;\n            var /** @type {?} */ nodes = [];\n            container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n            return nodes;\n        };\n        /**\n         * @param {?} icu\n         * @param {?=} context\n         * @return {?}\n         */\n        _WriteVisitor.prototype.visitIcu = function (icu, context) {\n            if (this._isInIcu) {\n                // nested ICU is not supported\n                throw new Error('xliff does not support nested ICU messages');\n            }\n            this._isInIcu = true;\n            // TODO(vicb): support ICU messages\n            // https://lists.oasis-open.org/archives/xliff/201201/msg00028.html\n            // http://docs.oasis-open.org/xliff/v1.2/xliff-profile-po/xliff-profile-po-1.2-cd02.html\n            var /** @type {?} */ nodes = [];\n            this._isInIcu = false;\n            return nodes;\n        };\n        /**\n         * @param {?} ph\n         * @param {?=} context\n         * @return {?}\n         */\n        _WriteVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n            var /** @type {?} */ ctype = getCtypeForTag(ph.tag);\n            var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype });\n            if (ph.isVoid) {\n                // void tags have no children nor closing tags\n                return [startTagPh];\n            }\n            var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.closeName, ctype: ctype });\n            return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n        };\n        /**\n         * @param {?} ph\n         * @param {?=} context\n         * @return {?}\n         */\n        _WriteVisitor.prototype.visitPlaceholder = function (ph, context) {\n            return [new Tag(_PLACEHOLDER_TAG, { id: ph.name })];\n        };\n        /**\n         * @param {?} ph\n         * @param {?=} context\n         * @return {?}\n         */\n        _WriteVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n            return [new Tag(_PLACEHOLDER_TAG, { id: ph.name })];\n        };\n        /**\n         * @param {?} nodes\n         * @return {?}\n         */\n        _WriteVisitor.prototype.serialize = function (nodes) {\n            var _this = this;\n            this._isInIcu = false;\n            return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n        };\n        return _WriteVisitor;\n    }());\n    var XliffParser = (function () {\n        function XliffParser() {\n            this._locale = null;\n        }\n        /**\n         * @param {?} xliff\n         * @param {?} url\n         * @return {?}\n         */\n        XliffParser.prototype.parse = function (xliff, url) {\n            this._unitMlNodes = [];\n            this._mlNodesByMsgId = {};\n            var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n            this._errors = xml.errors;\n            visitAll(this, xml.rootNodes, null);\n            return {\n                mlNodesByMsgId: this._mlNodesByMsgId,\n                errors: this._errors,\n                locale: this._locale,\n            };\n        };\n        /**\n         * @param {?} element\n         * @param {?} context\n         * @return {?}\n         */\n        XliffParser.prototype.visitElement = function (element, context) {\n            switch (element.name) {\n                case _UNIT_TAG:\n                    this._unitMlNodes = null;\n                    var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                    if (!idAttr) {\n                        this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n                    }\n                    else {\n                        var /** @type {?} */ id = idAttr.value;\n                        if (this._mlNodesByMsgId.hasOwnProperty(id)) {\n                            this._addError(element, \"Duplicated translations for msg \" + id);\n                        }\n                        else {\n                            visitAll(this, element.children, null);\n                            if (this._unitMlNodes) {\n                                this._mlNodesByMsgId[id] = this._unitMlNodes;\n                            }\n                            else {\n                                this._addError(element, \"Message \" + id + \" misses a translation\");\n                            }\n                        }\n                    }\n                    break;\n                case _SOURCE_TAG:\n                    // ignore source message\n                    break;\n                case _TARGET_TAG:\n                    this._unitMlNodes = element.children;\n                    break;\n                case _FILE_TAG:\n                    var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'target-language'; });\n                    if (localeAttr) {\n                        this._locale = localeAttr.value;\n                    }\n                    visitAll(this, element.children, null);\n                    break;\n                default:\n                    // TODO(vicb): assert file structure, xliff version\n                    // For now only recurse on unhandled nodes\n                    visitAll(this, element.children, null);\n            }\n        };\n        /**\n         * @param {?} attribute\n         * @param {?} context\n         * @return {?}\n         */\n        XliffParser.prototype.visitAttribute = function (attribute, context) { };\n        /**\n         * @param {?} text\n         * @param {?} context\n         * @return {?}\n         */\n        XliffParser.prototype.visitText = function (text, context) { };\n        /**\n         * @param {?} comment\n         * @param {?} context\n         * @return {?}\n         */\n        XliffParser.prototype.visitComment = function (comment, context) { };\n        /**\n         * @param {?} expansion\n         * @param {?} context\n         * @return {?}\n         */\n        XliffParser.prototype.visitExpansion = function (expansion, context) { };\n        /**\n         * @param {?} expansionCase\n         * @param {?} context\n         * @return {?}\n         */\n        XliffParser.prototype.visitExpansionCase = function (expansionCase, context) { };\n        /**\n         * @param {?} node\n         * @param {?} message\n         * @return {?}\n         */\n        XliffParser.prototype._addError = function (node, message) {\n            this._errors.push(new I18nError(node.sourceSpan, message));\n        };\n        return XliffParser;\n    }());\n    var XmlToI18n = (function () {\n        function XmlToI18n() {\n        }\n        /**\n         * @param {?} nodes\n         * @return {?}\n         */\n        XmlToI18n.prototype.convert = function (nodes) {\n            this._errors = [];\n            return {\n                i18nNodes: visitAll(this, nodes),\n                errors: this._errors,\n            };\n        };\n        /**\n         * @param {?} text\n         * @param {?} context\n         * @return {?}\n         */\n        XmlToI18n.prototype.visitText = function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n        /**\n         * @param {?} el\n         * @param {?} context\n         * @return {?}\n         */\n        XmlToI18n.prototype.visitElement = function (el, context) {\n            if (el.name === _PLACEHOLDER_TAG) {\n                var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (nameAttr) {\n                    return new Placeholder('', nameAttr.value, el.sourceSpan);\n                }\n                this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"id\\\" attribute\");\n            }\n            else {\n                this._addError(el, \"Unexpected tag\");\n            }\n        };\n        /**\n         * @param {?} icu\n         * @param {?} context\n         * @return {?}\n         */\n        XmlToI18n.prototype.visitExpansion = function (icu, context) { };\n        /**\n         * @param {?} icuCase\n         * @param {?} context\n         * @return {?}\n         */\n        XmlToI18n.prototype.visitExpansionCase = function (icuCase, context) { };\n        /**\n         * @param {?} comment\n         * @param {?} context\n         * @return {?}\n         */\n        XmlToI18n.prototype.visitComment = function (comment, context) { };\n        /**\n         * @param {?} attribute\n         * @param {?} context\n         * @return {?}\n         */\n        XmlToI18n.prototype.visitAttribute = function (attribute, context) { };\n        /**\n         * @param {?} node\n         * @param {?} message\n         * @return {?}\n         */\n        XmlToI18n.prototype._addError = function (node, message) {\n            this._errors.push(new I18nError(node.sourceSpan, message));\n        };\n        return XmlToI18n;\n    }());\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function getCtypeForTag(tag) {\n        switch (tag.toLowerCase()) {\n            case 'br':\n                return 'lb';\n            case 'img':\n                return 'image';\n            default:\n                return \"x-\" + tag;\n        }\n    }\n    var /** @type {?} */ _MESSAGES_TAG = 'messagebundle';\n    var /** @type {?} */ _MESSAGE_TAG = 'msg';\n    var /** @type {?} */ _PLACEHOLDER_TAG$1 = 'ph';\n    var /** @type {?} */ _EXEMPLE_TAG = 'ex';\n    var /** @type {?} */ _DOCTYPE = \"<!ELEMENT messagebundle (msg)*>\\n<!ATTLIST messagebundle class CDATA #IMPLIED>\\n\\n<!ELEMENT msg (#PCDATA|ph|source)*>\\n<!ATTLIST msg id CDATA #IMPLIED>\\n<!ATTLIST msg seq CDATA #IMPLIED>\\n<!ATTLIST msg name CDATA #IMPLIED>\\n<!ATTLIST msg desc CDATA #IMPLIED>\\n<!ATTLIST msg meaning CDATA #IMPLIED>\\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\\n<!ATTLIST msg xml:space (default|preserve) \\\"default\\\">\\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\\n\\n<!ELEMENT source (#PCDATA)>\\n\\n<!ELEMENT ph (#PCDATA|ex)*>\\n<!ATTLIST ph name CDATA #REQUIRED>\\n\\n<!ELEMENT ex (#PCDATA)>\";\n    var Xmb = (function (_super) {\n        __extends(Xmb, _super);\n        function Xmb() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * @param {?} messages\n         * @param {?} locale\n         * @return {?}\n         */\n        Xmb.prototype.write = function (messages, locale) {\n            var /** @type {?} */ exampleVisitor = new ExampleVisitor();\n            var /** @type {?} */ visitor = new _Visitor$2();\n            var /** @type {?} */ rootNode = new Tag(_MESSAGES_TAG);\n            messages.forEach(function (message) {\n                var /** @type {?} */ attrs = { id: message.id };\n                if (message.description) {\n                    attrs['desc'] = message.description;\n                }\n                if (message.meaning) {\n                    attrs['meaning'] = message.meaning;\n                }\n                rootNode.children.push(new CR(2), new Tag(_MESSAGE_TAG, attrs, visitor.serialize(message.nodes)));\n            });\n            rootNode.children.push(new CR());\n            return serialize([\n                new Declaration({ version: '1.0', encoding: 'UTF-8' }),\n                new CR(),\n                new Doctype(_MESSAGES_TAG, _DOCTYPE),\n                new CR(),\n                exampleVisitor.addDefaultExamples(rootNode),\n                new CR(),\n            ]);\n        };\n        /**\n         * @param {?} content\n         * @param {?} url\n         * @return {?}\n         */\n        Xmb.prototype.load = function (content, url) {\n            throw new Error('Unsupported');\n        };\n        /**\n         * @param {?} message\n         * @return {?}\n         */\n        Xmb.prototype.digest = function (message) { return digest$1(message); };\n        /**\n         * @param {?} message\n         * @return {?}\n         */\n        Xmb.prototype.createNameMapper = function (message) {\n            return new SimplePlaceholderMapper(message, toPublicName);\n        };\n        return Xmb;\n    }(Serializer));\n    var _Visitor$2 = (function () {\n        function _Visitor$2() {\n        }\n        /**\n         * @param {?} text\n         * @param {?=} context\n         * @return {?}\n         */\n        _Visitor$2.prototype.visitText = function (text, context) { return [new Text$2(text.value)]; };\n        /**\n         * @param {?} container\n         * @param {?} context\n         * @return {?}\n         */\n        _Visitor$2.prototype.visitContainer = function (container, context) {\n            var _this = this;\n            var /** @type {?} */ nodes = [];\n            container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n            return nodes;\n        };\n        /**\n         * @param {?} icu\n         * @param {?=} context\n         * @return {?}\n         */\n        _Visitor$2.prototype.visitIcu = function (icu, context) {\n            var _this = this;\n            var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n            Object.keys(icu.cases).forEach(function (c) {\n                nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n            });\n            nodes.push(new Text$2(\"}\"));\n            return nodes;\n        };\n        /**\n         * @param {?} ph\n         * @param {?=} context\n         * @return {?}\n         */\n        _Visitor$2.prototype.visitTagPlaceholder = function (ph, context) {\n            var /** @type {?} */ startEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"<\" + ph.tag + \">\")]);\n            var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG$1, { name: ph.startName }, [startEx]);\n            if (ph.isVoid) {\n                // void tags have no children nor closing tags\n                return [startTagPh];\n            }\n            var /** @type {?} */ closeEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"</\" + ph.tag + \">\")]);\n            var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG$1, { name: ph.closeName }, [closeEx]);\n            return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n        };\n        /**\n         * @param {?} ph\n         * @param {?=} context\n         * @return {?}\n         */\n        _Visitor$2.prototype.visitPlaceholder = function (ph, context) {\n            return [new Tag(_PLACEHOLDER_TAG$1, { name: ph.name })];\n        };\n        /**\n         * @param {?} ph\n         * @param {?=} context\n         * @return {?}\n         */\n        _Visitor$2.prototype.visitIcuPlaceholder = function (ph, context) {\n            return [new Tag(_PLACEHOLDER_TAG$1, { name: ph.name })];\n        };\n        /**\n         * @param {?} nodes\n         * @return {?}\n         */\n        _Visitor$2.prototype.serialize = function (nodes) {\n            var _this = this;\n            return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n        };\n        return _Visitor$2;\n    }());\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    function digest$1(message) {\n        return decimalDigest(message);\n    }\n    var ExampleVisitor = (function () {\n        function ExampleVisitor() {\n        }\n        /**\n         * @param {?} node\n         * @return {?}\n         */\n        ExampleVisitor.prototype.addDefaultExamples = function (node) {\n            node.visit(this);\n            return node;\n        };\n        /**\n         * @param {?} tag\n         * @return {?}\n         */\n        ExampleVisitor.prototype.visitTag = function (tag) {\n            var _this = this;\n            if (tag.name === _PLACEHOLDER_TAG$1) {\n                if (!tag.children || tag.children.length == 0) {\n                    var /** @type {?} */ exText = new Text$2(tag.attrs['name'] || '...');\n                    tag.children = [new Tag(_EXEMPLE_TAG, {}, [exText])];\n                }\n            }\n            else if (tag.children) {\n                tag.children.forEach(function (node) { return node.visit(_this); });\n            }\n        };\n        /**\n         * @param {?} text\n         * @return {?}\n         */\n        ExampleVisitor.prototype.visitText = function (text) { };\n        /**\n         * @param {?} decl\n         * @return {?}\n         */\n        ExampleVisitor.prototype.visitDeclaration = function (decl) { };\n        /**\n         * @param {?} doctype\n         * @return {?}\n         */\n        ExampleVisitor.prototype.visitDoctype = function (doctype) { };\n        return ExampleVisitor;\n    }());\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    function toPublicName(internalName) {\n        return internalName.toUpperCase().replace(/[^A-Z0-9_]/g, '_');\n    }\n    var /** @type {?} */ _TRANSLATIONS_TAG = 'translationbundle';\n    var /** @type {?} */ _TRANSLATION_TAG = 'translation';\n    var /** @type {?} */ _PLACEHOLDER_TAG$2 = 'ph';\n    var Xtb = (function (_super) {\n        __extends(Xtb, _super);\n        function Xtb() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * @param {?} messages\n         * @param {?} locale\n         * @return {?}\n         */\n        Xtb.prototype.write = function (messages, locale) { throw new Error('Unsupported'); };\n        /**\n         * @param {?} content\n         * @param {?} url\n         * @return {?}\n         */\n        Xtb.prototype.load = function (content, url) {\n            // xtb to xml nodes\n            var /** @type {?} */ xtbParser = new XtbParser();\n            var _a = xtbParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n            // xml nodes to i18n nodes\n            var /** @type {?} */ i18nNodesByMsgId = {};\n            var /** @type {?} */ converter = new XmlToI18n$1();\n            // Because we should be able to load xtb files that rely on features not supported by angular,\n            // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n            // converted\n            Object.keys(msgIdToHtml).forEach(function (msgId) {\n                var /** @type {?} */ valueFn = function () {\n                    var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, errors = _a.errors;\n                    if (errors.length) {\n                        throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n                    }\n                    return i18nNodes;\n                };\n                createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n            });\n            if (errors.length) {\n                throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n            }\n            return { locale: locale, i18nNodesByMsgId: i18nNodesByMsgId };\n        };\n        /**\n         * @param {?} message\n         * @return {?}\n         */\n        Xtb.prototype.digest = function (message) { return digest$1(message); };\n        /**\n         * @param {?} message\n         * @return {?}\n         */\n        Xtb.prototype.createNameMapper = function (message) {\n            return new SimplePlaceholderMapper(message, toPublicName);\n        };\n        return Xtb;\n    }(Serializer));\n    /**\n     * @param {?} messages\n     * @param {?} id\n     * @param {?} valueFn\n     * @return {?}\n     */\n    function createLazyProperty(messages, id, valueFn) {\n        Object.defineProperty(messages, id, {\n            configurable: true,\n            enumerable: true,\n            get: function () {\n                var /** @type {?} */ value = valueFn();\n                Object.defineProperty(messages, id, { enumerable: true, value: value });\n                return value;\n            },\n            set: function (_) { throw new Error('Could not overwrite an XTB translation'); },\n        });\n    }\n    var XtbParser = (function () {\n        function XtbParser() {\n            this._locale = null;\n        }\n        /**\n         * @param {?} xtb\n         * @param {?} url\n         * @return {?}\n         */\n        XtbParser.prototype.parse = function (xtb, url) {\n            this._bundleDepth = 0;\n            this._msgIdToHtml = {};\n            // We can not parse the ICU messages at this point as some messages might not originate\n            // from Angular that could not be lex'd.\n            var /** @type {?} */ xml = new XmlParser().parse(xtb, url, false);\n            this._errors = xml.errors;\n            visitAll(this, xml.rootNodes);\n            return {\n                msgIdToHtml: this._msgIdToHtml,\n                errors: this._errors,\n                locale: this._locale,\n            };\n        };\n        /**\n         * @param {?} element\n         * @param {?} context\n         * @return {?}\n         */\n        XtbParser.prototype.visitElement = function (element, context) {\n            switch (element.name) {\n                case _TRANSLATIONS_TAG:\n                    this._bundleDepth++;\n                    if (this._bundleDepth > 1) {\n                        this._addError(element, \"<\" + _TRANSLATIONS_TAG + \"> elements can not be nested\");\n                    }\n                    var /** @type {?} */ langAttr = element.attrs.find(function (attr) { return attr.name === 'lang'; });\n                    if (langAttr) {\n                        this._locale = langAttr.value;\n                    }\n                    visitAll(this, element.children, null);\n                    this._bundleDepth--;\n                    break;\n                case _TRANSLATION_TAG:\n                    var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                    if (!idAttr) {\n                        this._addError(element, \"<\" + _TRANSLATION_TAG + \"> misses the \\\"id\\\" attribute\");\n                    }\n                    else {\n                        var /** @type {?} */ id = idAttr.value;\n                        if (this._msgIdToHtml.hasOwnProperty(id)) {\n                            this._addError(element, \"Duplicated translations for msg \" + id);\n                        }\n                        else {\n                            var /** @type {?} */ innerTextStart = element.startSourceSpan.end.offset;\n                            var /** @type {?} */ innerTextEnd = element.endSourceSpan.start.offset;\n                            var /** @type {?} */ content = element.startSourceSpan.start.file.content;\n                            var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                            this._msgIdToHtml[id] = innerText;\n                        }\n                    }\n                    break;\n                default:\n                    this._addError(element, 'Unexpected tag');\n            }\n        };\n        /**\n         * @param {?} attribute\n         * @param {?} context\n         * @return {?}\n         */\n        XtbParser.prototype.visitAttribute = function (attribute, context) { };\n        /**\n         * @param {?} text\n         * @param {?} context\n         * @return {?}\n         */\n        XtbParser.prototype.visitText = function (text, context) { };\n        /**\n         * @param {?} comment\n         * @param {?} context\n         * @return {?}\n         */\n        XtbParser.prototype.visitComment = function (comment, context) { };\n        /**\n         * @param {?} expansion\n         * @param {?} context\n         * @return {?}\n         */\n        XtbParser.prototype.visitExpansion = function (expansion, context) { };\n        /**\n         * @param {?} expansionCase\n         * @param {?} context\n         * @return {?}\n         */\n        XtbParser.prototype.visitExpansionCase = function (expansionCase, context) { };\n        /**\n         * @param {?} node\n         * @param {?} message\n         * @return {?}\n         */\n        XtbParser.prototype._addError = function (node, message) {\n            this._errors.push(new I18nError(node.sourceSpan, message));\n        };\n        return XtbParser;\n    }());\n    var XmlToI18n$1 = (function () {\n        function XmlToI18n$1() {\n        }\n        /**\n         * @param {?} message\n         * @param {?} url\n         * @return {?}\n         */\n        XmlToI18n$1.prototype.convert = function (message, url) {\n            var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n            this._errors = xmlIcu.errors;\n            var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n                [] :\n                visitAll(this, xmlIcu.rootNodes);\n            return {\n                i18nNodes: i18nNodes,\n                errors: this._errors,\n            };\n        };\n        /**\n         * @param {?} text\n         * @param {?} context\n         * @return {?}\n         */\n        XmlToI18n$1.prototype.visitText = function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n        /**\n         * @param {?} icu\n         * @param {?} context\n         * @return {?}\n         */\n        XmlToI18n$1.prototype.visitExpansion = function (icu, context) {\n            var /** @type {?} */ caseMap = {};\n            visitAll(this, icu.cases).forEach(function (c) {\n                caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n            });\n            return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n        };\n        /**\n         * @param {?} icuCase\n         * @param {?} context\n         * @return {?}\n         */\n        XmlToI18n$1.prototype.visitExpansionCase = function (icuCase, context) {\n            return {\n                value: icuCase.value,\n                nodes: visitAll(this, icuCase.expression),\n            };\n        };\n        /**\n         * @param {?} el\n         * @param {?} context\n         * @return {?}\n         */\n        XmlToI18n$1.prototype.visitElement = function (el, context) {\n            if (el.name === _PLACEHOLDER_TAG$2) {\n                var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'name'; });\n                if (nameAttr) {\n                    return new Placeholder('', nameAttr.value, el.sourceSpan);\n                }\n                this._addError(el, \"<\" + _PLACEHOLDER_TAG$2 + \"> misses the \\\"name\\\" attribute\");\n            }\n            else {\n                this._addError(el, \"Unexpected tag\");\n            }\n        };\n        /**\n         * @param {?} comment\n         * @param {?} context\n         * @return {?}\n         */\n        XmlToI18n$1.prototype.visitComment = function (comment, context) { };\n        /**\n         * @param {?} attribute\n         * @param {?} context\n         * @return {?}\n         */\n        XmlToI18n$1.prototype.visitAttribute = function (attribute, context) { };\n        /**\n         * @param {?} node\n         * @param {?} message\n         * @return {?}\n         */\n        XmlToI18n$1.prototype._addError = function (node, message) {\n            this._errors.push(new I18nError(node.sourceSpan, message));\n        };\n        return XmlToI18n$1;\n    }());\n    var HtmlParser = (function (_super) {\n        __extends(HtmlParser, _super);\n        function HtmlParser() {\n            return _super.call(this, getHtmlTagDefinition) || this;\n        }\n        /**\n         * @param {?} source\n         * @param {?} url\n         * @param {?=} parseExpansionForms\n         * @param {?=} interpolationConfig\n         * @return {?}\n         */\n        HtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n            if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n            if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n            return _super.prototype.parse.call(this, source, url, parseExpansionForms, interpolationConfig);\n        };\n        return HtmlParser;\n    }(Parser$1));\n    HtmlParser.decorators = [\n        { type: CompilerInjectable },\n    ];\n    /**\n     * @nocollapse\n     */\n    HtmlParser.ctorParameters = function () { return []; };\n    /**\n     * A container for translated messages\n     */\n    var TranslationBundle = (function () {\n        /**\n         * @param {?=} _i18nNodesByMsgId\n         * @param {?=} locale\n         * @param {?=} digest\n         * @param {?=} mapperFactory\n         * @param {?=} missingTranslationStrategy\n         * @param {?=} console\n         */\n        function TranslationBundle(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console) {\n            if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n            if (missingTranslationStrategy === void 0) { missingTranslationStrategy = _angular_core.MissingTranslationStrategy.Warning; }\n            this._i18nNodesByMsgId = _i18nNodesByMsgId;\n            this.digest = digest;\n            this.mapperFactory = mapperFactory;\n            this._i18nToHtml = new I18nToHtmlVisitor(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console);\n        }\n        /**\n         * @param {?} content\n         * @param {?} url\n         * @param {?} serializer\n         * @param {?} missingTranslationStrategy\n         * @param {?=} console\n         * @return {?}\n         */\n        TranslationBundle.load = function (content, url, serializer, missingTranslationStrategy, console) {\n            var _a = serializer.load(content, url), locale = _a.locale, i18nNodesByMsgId = _a.i18nNodesByMsgId;\n            var /** @type {?} */ digestFn = function (m) { return serializer.digest(m); };\n            var /** @type {?} */ mapperFactory = function (m) { return serializer.createNameMapper(m); };\n            return new TranslationBundle(i18nNodesByMsgId, locale, digestFn, mapperFactory, missingTranslationStrategy, console);\n        };\n        /**\n         * @param {?} srcMsg\n         * @return {?}\n         */\n        TranslationBundle.prototype.get = function (srcMsg) {\n            var /** @type {?} */ html = this._i18nToHtml.convert(srcMsg);\n            if (html.errors.length) {\n                throw new Error(html.errors.join('\\n'));\n            }\n            return html.nodes;\n        };\n        /**\n         * @param {?} srcMsg\n         * @return {?}\n         */\n        TranslationBundle.prototype.has = function (srcMsg) { return this.digest(srcMsg) in this._i18nNodesByMsgId; };\n        return TranslationBundle;\n    }());\n    var I18nToHtmlVisitor = (function () {\n        /**\n         * @param {?=} _i18nNodesByMsgId\n         * @param {?=} _locale\n         * @param {?=} _digest\n         * @param {?=} _mapperFactory\n         * @param {?=} _missingTranslationStrategy\n         * @param {?=} _console\n         */\n        function I18nToHtmlVisitor(_i18nNodesByMsgId, _locale, _digest, _mapperFactory, _missingTranslationStrategy, _console) {\n            if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n            this._i18nNodesByMsgId = _i18nNodesByMsgId;\n            this._locale = _locale;\n            this._digest = _digest;\n            this._mapperFactory = _mapperFactory;\n            this._missingTranslationStrategy = _missingTranslationStrategy;\n            this._console = _console;\n            this._contextStack = [];\n            this._errors = [];\n        }\n        /**\n         * @param {?} srcMsg\n         * @return {?}\n         */\n        I18nToHtmlVisitor.prototype.convert = function (srcMsg) {\n            this._contextStack.length = 0;\n            this._errors.length = 0;\n            // i18n to text\n            var /** @type {?} */ text = this._convertToText(srcMsg);\n            // text to html\n            var /** @type {?} */ url = srcMsg.nodes[0].sourceSpan.start.file.url;\n            var /** @type {?} */ html = new HtmlParser().parse(text, url, true);\n            return {\n                nodes: html.rootNodes,\n                errors: this._errors.concat(html.errors),\n            };\n        };\n        /**\n         * @param {?} text\n         * @param {?=} context\n         * @return {?}\n         */\n        I18nToHtmlVisitor.prototype.visitText = function (text, context) { return text.value; };\n        /**\n         * @param {?} container\n         * @param {?=} context\n         * @return {?}\n         */\n        I18nToHtmlVisitor.prototype.visitContainer = function (container, context) {\n            var _this = this;\n            return container.children.map(function (n) { return n.visit(_this); }).join('');\n        };\n        /**\n         * @param {?} icu\n         * @param {?=} context\n         * @return {?}\n         */\n        I18nToHtmlVisitor.prototype.visitIcu = function (icu, context) {\n            var _this = this;\n            var /** @type {?} */ cases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n            // TODO(vicb): Once all format switch to using expression placeholders\n            // we should throw when the placeholder is not in the source message\n            var /** @type {?} */ exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n                this._srcMsg.placeholders[icu.expression] :\n                icu.expression;\n            return \"{\" + exp + \", \" + icu.type + \", \" + cases.join(' ') + \"}\";\n        };\n        /**\n         * @param {?} ph\n         * @param {?=} context\n         * @return {?}\n         */\n        I18nToHtmlVisitor.prototype.visitPlaceholder = function (ph, context) {\n            var /** @type {?} */ phName = this._mapper(ph.name);\n            if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n                return this._srcMsg.placeholders[phName];\n            }\n            if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n                return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n            }\n            this._addError(ph, \"Unknown placeholder \\\"\" + ph.name + \"\\\"\");\n            return '';\n        };\n        /**\n         * @param {?} ph\n         * @param {?=} context\n         * @return {?}\n         */\n        I18nToHtmlVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n            var _this = this;\n            var /** @type {?} */ tag = \"\" + ph.tag;\n            var /** @type {?} */ attrs = Object.keys(ph.attrs).map(function (name) { return name + \"=\\\"\" + ph.attrs[name] + \"\\\"\"; }).join(' ');\n            if (ph.isVoid) {\n                return \"<\" + tag + \" \" + attrs + \"/>\";\n            }\n            var /** @type {?} */ children = ph.children.map(function (c) { return c.visit(_this); }).join('');\n            return \"<\" + tag + \" \" + attrs + \">\" + children + \"</\" + tag + \">\";\n        };\n        /**\n         * @param {?} ph\n         * @param {?=} context\n         * @return {?}\n         */\n        I18nToHtmlVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n            // An ICU placeholder references the source message to be serialized\n            return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n        };\n        /**\n         * Convert a source message to a translated text string:\n         * - text nodes are replaced with their translation,\n         * - placeholders are replaced with their content,\n         * - ICU nodes are converted to ICU expressions.\n         * @param {?} srcMsg\n         * @return {?}\n         */\n        I18nToHtmlVisitor.prototype._convertToText = function (srcMsg) {\n            var _this = this;\n            var /** @type {?} */ id = this._digest(srcMsg);\n            var /** @type {?} */ mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n            var /** @type {?} */ nodes;\n            this._contextStack.push({ msg: this._srcMsg, mapper: this._mapper });\n            this._srcMsg = srcMsg;\n            if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n                // When there is a translation use its nodes as the source\n                // And create a mapper to convert serialized placeholder names to internal names\n                nodes = this._i18nNodesByMsgId[id];\n                this._mapper = function (name) { return mapper ? mapper.toInternalName(name) : name; };\n            }\n            else {\n                // When no translation has been found\n                // - report an error / a warning / nothing,\n                // - use the nodes from the original message\n                // - placeholders are already internal and need no mapper\n                if (this._missingTranslationStrategy === _angular_core.MissingTranslationStrategy.Error) {\n                    var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                    this._addError(srcMsg.nodes[0], \"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n                }\n                else if (this._console &&\n                    this._missingTranslationStrategy === _angular_core.MissingTranslationStrategy.Warning) {\n                    var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                    this._console.warn(\"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n                }\n                nodes = srcMsg.nodes;\n                this._mapper = function (name) { return name; };\n            }\n            var /** @type {?} */ text = nodes.map(function (node) { return node.visit(_this); }).join('');\n            var /** @type {?} */ context = this._contextStack.pop();\n            this._srcMsg = context.msg;\n            this._mapper = context.mapper;\n            return text;\n        };\n        /**\n         * @param {?} el\n         * @param {?} msg\n         * @return {?}\n         */\n        I18nToHtmlVisitor.prototype._addError = function (el, msg) {\n            this._errors.push(new I18nError(el.sourceSpan, msg));\n        };\n        return I18nToHtmlVisitor;\n    }());\n    var I18NHtmlParser = (function () {\n        /**\n         * @param {?} _htmlParser\n         * @param {?=} translations\n         * @param {?=} translationsFormat\n         * @param {?=} missingTranslation\n         * @param {?=} console\n         */\n        function I18NHtmlParser(_htmlParser, translations, translationsFormat, missingTranslation, console) {\n            if (missingTranslation === void 0) { missingTranslation = _angular_core.MissingTranslationStrategy.Warning; }\n            this._htmlParser = _htmlParser;\n            if (translations) {\n                var serializer = createSerializer(translationsFormat);\n                this._translationBundle =\n                    TranslationBundle.load(translations, 'i18n', serializer, missingTranslation, console);\n            }\n        }\n        /**\n         * @param {?} source\n         * @param {?} url\n         * @param {?=} parseExpansionForms\n         * @param {?=} interpolationConfig\n         * @return {?}\n         */\n        I18NHtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n            if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n            if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n            var /** @type {?} */ parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n            if (!this._translationBundle) {\n                // Do not enable i18n when no translation bundle is provided\n                return parseResult;\n            }\n            if (parseResult.errors.length) {\n                return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n            }\n            return mergeTranslations(parseResult.rootNodes, this._translationBundle, interpolationConfig, [], {});\n        };\n        return I18NHtmlParser;\n    }());\n    /**\n     * @param {?=} format\n     * @return {?}\n     */\n    function createSerializer(format) {\n        format = (format || 'xlf').toLowerCase();\n        switch (format) {\n            case 'xmb':\n                return new Xmb();\n            case 'xtb':\n                return new Xtb();\n            case 'xliff':\n            case 'xlf':\n            default:\n                return new Xliff();\n        }\n    }\n    var /** @type {?} */ CORE = assetUrl('core');\n    var /** @type {?} */ VIEW_UTILS_MODULE_URL = assetUrl('core', 'linker/view_utils');\n    var Identifiers = (function () {\n        function Identifiers() {\n        }\n        return Identifiers;\n    }());\n    Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n        name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n        moduleUrl: CORE,\n        runtime: _angular_core.ANALYZE_FOR_ENTRY_COMPONENTS\n    };\n    Identifiers.ElementRef = { name: 'ElementRef', moduleUrl: CORE, runtime: _angular_core.ElementRef };\n    Identifiers.NgModuleRef = { name: 'NgModuleRef', moduleUrl: CORE, runtime: _angular_core.NgModuleRef };\n    Identifiers.ViewContainerRef = { name: 'ViewContainerRef', moduleUrl: CORE, runtime: _angular_core.ViewContainerRef };\n    Identifiers.ChangeDetectorRef = { name: 'ChangeDetectorRef', moduleUrl: CORE, runtime: _angular_core.ChangeDetectorRef };\n    Identifiers.QueryList = { name: 'QueryList', moduleUrl: CORE, runtime: _angular_core.QueryList };\n    Identifiers.TemplateRef = { name: 'TemplateRef', moduleUrl: CORE, runtime: _angular_core.TemplateRef };\n    Identifiers.CodegenComponentFactoryResolver = {\n        name: 'ɵCodegenComponentFactoryResolver',\n        moduleUrl: CORE,\n        runtime: _angular_core.ɵCodegenComponentFactoryResolver\n    };\n    Identifiers.ComponentFactoryResolver = {\n        name: 'ComponentFactoryResolver',\n        moduleUrl: CORE,\n        runtime: _angular_core.ComponentFactoryResolver\n    };\n    Identifiers.ComponentFactory = { name: 'ComponentFactory', moduleUrl: CORE, runtime: _angular_core.ComponentFactory };\n    Identifiers.ComponentRef = { name: 'ComponentRef', moduleUrl: CORE, runtime: _angular_core.ComponentRef };\n    Identifiers.NgModuleFactory = { name: 'NgModuleFactory', moduleUrl: CORE, runtime: _angular_core.NgModuleFactory };\n    Identifiers.NgModuleInjector = {\n        name: 'ɵNgModuleInjector',\n        moduleUrl: CORE,\n        runtime: _angular_core.ɵNgModuleInjector,\n    };\n    Identifiers.RegisterModuleFactoryFn = {\n        name: 'ɵregisterModuleFactory',\n        moduleUrl: CORE,\n        runtime: _angular_core.ɵregisterModuleFactory,\n    };\n    Identifiers.Injector = { name: 'Injector', moduleUrl: CORE, runtime: _angular_core.Injector };\n    Identifiers.ViewEncapsulation = { name: 'ViewEncapsulation', moduleUrl: CORE, runtime: _angular_core.ViewEncapsulation };\n    Identifiers.ChangeDetectionStrategy = {\n        name: 'ChangeDetectionStrategy',\n        moduleUrl: CORE,\n        runtime: _angular_core.ChangeDetectionStrategy\n    };\n    Identifiers.SecurityContext = {\n        name: 'SecurityContext',\n        moduleUrl: CORE,\n        runtime: _angular_core.SecurityContext,\n    };\n    Identifiers.LOCALE_ID = { name: 'LOCALE_ID', moduleUrl: CORE, runtime: _angular_core.LOCALE_ID };\n    Identifiers.TRANSLATIONS_FORMAT = { name: 'TRANSLATIONS_FORMAT', moduleUrl: CORE, runtime: _angular_core.TRANSLATIONS_FORMAT };\n    Identifiers.inlineInterpolate = { name: 'ɵinlineInterpolate', moduleUrl: CORE, runtime: _angular_core.ɵinlineInterpolate };\n    Identifiers.interpolate = { name: 'ɵinterpolate', moduleUrl: CORE, runtime: _angular_core.ɵinterpolate };\n    Identifiers.EMPTY_ARRAY = { name: 'ɵEMPTY_ARRAY', moduleUrl: CORE, runtime: _angular_core.ɵEMPTY_ARRAY };\n    Identifiers.EMPTY_MAP = { name: 'ɵEMPTY_MAP', moduleUrl: CORE, runtime: _angular_core.ɵEMPTY_MAP };\n    Identifiers.Renderer = { name: 'Renderer', moduleUrl: CORE, runtime: _angular_core.Renderer };\n    Identifiers.viewDef = { name: 'ɵvid', moduleUrl: CORE, runtime: _angular_core.ɵvid };\n    Identifiers.elementDef = { name: 'ɵeld', moduleUrl: CORE, runtime: _angular_core.ɵeld };\n    Identifiers.anchorDef = { name: 'ɵand', moduleUrl: CORE, runtime: _angular_core.ɵand };\n    Identifiers.textDef = { name: 'ɵted', moduleUrl: CORE, runtime: _angular_core.ɵted };\n    Identifiers.directiveDef = { name: 'ɵdid', moduleUrl: CORE, runtime: _angular_core.ɵdid };\n    Identifiers.providerDef = { name: 'ɵprd', moduleUrl: CORE, runtime: _angular_core.ɵprd };\n    Identifiers.queryDef = { name: 'ɵqud', moduleUrl: CORE, runtime: _angular_core.ɵqud };\n    Identifiers.pureArrayDef = { name: 'ɵpad', moduleUrl: CORE, runtime: _angular_core.ɵpad };\n    Identifiers.pureObjectDef = { name: 'ɵpod', moduleUrl: CORE, runtime: _angular_core.ɵpod };\n    Identifiers.purePipeDef = { name: 'ɵppd', moduleUrl: CORE, runtime: _angular_core.ɵppd };\n    Identifiers.pipeDef = { name: 'ɵpid', moduleUrl: CORE, runtime: _angular_core.ɵpid };\n    Identifiers.nodeValue = { name: 'ɵnov', moduleUrl: CORE, runtime: _angular_core.ɵnov };\n    Identifiers.ngContentDef = { name: 'ɵncd', moduleUrl: CORE, runtime: _angular_core.ɵncd };\n    Identifiers.unwrapValue = { name: 'ɵunv', moduleUrl: CORE, runtime: _angular_core.ɵunv };\n    Identifiers.createRendererType2 = { name: 'ɵcrt', moduleUrl: CORE, runtime: _angular_core.ɵcrt };\n    Identifiers.RendererType2 = {\n        name: 'RendererType2',\n        moduleUrl: CORE,\n        // type only\n        runtime: null\n    };\n    Identifiers.ViewDefinition = {\n        name: 'ɵViewDefinition',\n        moduleUrl: CORE,\n        // type only\n        runtime: null\n    };\n    Identifiers.createComponentFactory = { name: 'ɵccf', moduleUrl: CORE, runtime: _angular_core.ɵccf };\n    /**\n     * @param {?} pkg\n     * @param {?=} path\n     * @param {?=} type\n     * @return {?}\n     */\n    function assetUrl(pkg, path, type) {\n        if (path === void 0) { path = null; }\n        if (type === void 0) { type = 'src'; }\n        if (path == null) {\n            return \"@angular/\" + pkg;\n        }\n        else {\n            return \"@angular/\" + pkg + \"/\" + type + \"/\" + path;\n        }\n    }\n    /**\n     * @param {?} identifier\n     * @return {?}\n     */\n    function resolveIdentifier(identifier) {\n        var /** @type {?} */ name = identifier.name;\n        return _angular_core.ɵreflector.resolveIdentifier(name, identifier.moduleUrl, null, identifier.runtime);\n    }\n    /**\n     * @param {?} identifier\n     * @return {?}\n     */\n    function createIdentifier(identifier) {\n        return { reference: resolveIdentifier(identifier) };\n    }\n    /**\n     * @param {?} identifier\n     * @return {?}\n     */\n    function identifierToken(identifier) {\n        return { identifier: identifier };\n    }\n    /**\n     * @param {?} identifier\n     * @return {?}\n     */\n    function createIdentifierToken(identifier) {\n        return identifierToken(createIdentifier(identifier));\n    }\n    // http://cldr.unicode.org/index/cldr-spec/plural-rules\n    var /** @type {?} */ PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n    /**\n     * Expands special forms into elements.\n     *\n     * For example,\n     *\n     * ```\n     * { messages.length, plural,\n     *   =0 {zero}\n     *   =1 {one}\n     *   other {more than one}\n     * }\n     * ```\n     *\n     * will be expanded into\n     *\n     * ```\n     * <ng-container [ngPlural]=\"messages.length\">\n     *   <ng-template ngPluralCase=\"=0\">zero</ng-template>\n     *   <ng-template ngPluralCase=\"=1\">one</ng-template>\n     *   <ng-template ngPluralCase=\"other\">more than one</ng-template>\n     * </ng-container>\n     * ```\n     * @param {?} nodes\n     * @return {?}\n     */\n    function expandNodes(nodes) {\n        var /** @type {?} */ expander = new _Expander();\n        return new ExpansionResult(visitAll(expander, nodes), expander.isExpanded, expander.errors);\n    }\n    var ExpansionResult = (function () {\n        /**\n         * @param {?} nodes\n         * @param {?} expanded\n         * @param {?} errors\n         */\n        function ExpansionResult(nodes, expanded, errors) {\n            this.nodes = nodes;\n            this.expanded = expanded;\n            this.errors = errors;\n        }\n        return ExpansionResult;\n    }());\n    var ExpansionError = (function (_super) {\n        __extends(ExpansionError, _super);\n        /**\n         * @param {?} span\n         * @param {?} errorMsg\n         */\n        function ExpansionError(span, errorMsg) {\n            return _super.call(this, span, errorMsg) || this;\n        }\n        return ExpansionError;\n    }(ParseError));\n    /**\n     * Expand expansion forms (plural, select) to directives\n     *\n     * \\@internal\n     */\n    var _Expander = (function () {\n        function _Expander() {\n            this.isExpanded = false;\n            this.errors = [];\n        }\n        /**\n         * @param {?} element\n         * @param {?} context\n         * @return {?}\n         */\n        _Expander.prototype.visitElement = function (element, context) {\n            return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n        };\n        /**\n         * @param {?} attribute\n         * @param {?} context\n         * @return {?}\n         */\n        _Expander.prototype.visitAttribute = function (attribute, context) { return attribute; };\n        /**\n         * @param {?} text\n         * @param {?} context\n         * @return {?}\n         */\n        _Expander.prototype.visitText = function (text, context) { return text; };\n        /**\n         * @param {?} comment\n         * @param {?} context\n         * @return {?}\n         */\n        _Expander.prototype.visitComment = function (comment, context) { return comment; };\n        /**\n         * @param {?} icu\n         * @param {?} context\n         * @return {?}\n         */\n        _Expander.prototype.visitExpansion = function (icu, context) {\n            this.isExpanded = true;\n            return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n                _expandDefaultForm(icu, this.errors);\n        };\n        /**\n         * @param {?} icuCase\n         * @param {?} context\n         * @return {?}\n         */\n        _Expander.prototype.visitExpansionCase = function (icuCase, context) {\n            throw new Error('Should not be reached');\n        };\n        return _Expander;\n    }());\n    /**\n     * @param {?} ast\n     * @param {?} errors\n     * @return {?}\n     */\n    function _expandPluralForm(ast, errors) {\n        var /** @type {?} */ children = ast.cases.map(function (c) {\n            if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n                errors.push(new ExpansionError(c.valueSourceSpan, \"Plural cases should be \\\"=<number>\\\" or one of \" + PLURAL_CASES.join(\", \")));\n            }\n            var /** @type {?} */ expansionResult = expandNodes(c.expression);\n            errors.push.apply(errors, expansionResult.errors);\n            return new Element(\"ng-template\", [new Attribute$1('ngPluralCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n        });\n        var /** @type {?} */ switchAttr = new Attribute$1('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n        return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} errors\n     * @return {?}\n     */\n    function _expandDefaultForm(ast, errors) {\n        var /** @type {?} */ children = ast.cases.map(function (c) {\n            var /** @type {?} */ expansionResult = expandNodes(c.expression);\n            errors.push.apply(errors, expansionResult.errors);\n            if (c.value === 'other') {\n                // other is the default case when no values match\n                return new Element(\"ng-template\", [new Attribute$1('ngSwitchDefault', '', c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n            }\n            return new Element(\"ng-template\", [new Attribute$1('ngSwitchCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n        });\n        var /** @type {?} */ switchAttr = new Attribute$1('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n        return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n    }\n    var ProviderError = (function (_super) {\n        __extends(ProviderError, _super);\n        /**\n         * @param {?} message\n         * @param {?} span\n         */\n        function ProviderError(message, span) {\n            return _super.call(this, span, message) || this;\n        }\n        return ProviderError;\n    }(ParseError));\n    var ProviderViewContext = (function () {\n        /**\n         * @param {?} component\n         */\n        function ProviderViewContext(component) {\n            var _this = this;\n            this.component = component;\n            this.errors = [];\n            this.viewQueries = _getViewQueries(component);\n            this.viewProviders = new Map();\n            component.viewProviders.forEach(function (provider) {\n                if (_this.viewProviders.get(tokenReference(provider.token)) == null) {\n                    _this.viewProviders.set(tokenReference(provider.token), true);\n                }\n            });\n        }\n        return ProviderViewContext;\n    }());\n    var ProviderElementContext = (function () {\n        /**\n         * @param {?} viewContext\n         * @param {?} _parent\n         * @param {?} _isViewRoot\n         * @param {?} _directiveAsts\n         * @param {?} attrs\n         * @param {?} refs\n         * @param {?} isTemplate\n         * @param {?} contentQueryStartId\n         * @param {?} _sourceSpan\n         */\n        function ProviderElementContext(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, isTemplate, contentQueryStartId, _sourceSpan) {\n            var _this = this;\n            this.viewContext = viewContext;\n            this._parent = _parent;\n            this._isViewRoot = _isViewRoot;\n            this._directiveAsts = _directiveAsts;\n            this._sourceSpan = _sourceSpan;\n            this._transformedProviders = new Map();\n            this._seenProviders = new Map();\n            this._hasViewContainer = false;\n            this._queriedTokens = new Map();\n            this._attrs = {};\n            attrs.forEach(function (attrAst) { return _this._attrs[attrAst.name] = attrAst.value; });\n            var directivesMeta = _directiveAsts.map(function (directiveAst) { return directiveAst.directive; });\n            this._allProviders =\n                _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n            this._contentQueries = _getContentQueries(contentQueryStartId, directivesMeta);\n            Array.from(this._allProviders.values()).forEach(function (provider) {\n                _this._addQueryReadsTo(provider.token, provider.token, _this._queriedTokens);\n            });\n            if (isTemplate) {\n                var templateRefId = createIdentifierToken(Identifiers.TemplateRef);\n                this._addQueryReadsTo(templateRefId, templateRefId, this._queriedTokens);\n            }\n            refs.forEach(function (refAst) {\n                var defaultQueryValue = refAst.value || createIdentifierToken(Identifiers.ElementRef);\n                _this._addQueryReadsTo({ value: refAst.name }, defaultQueryValue, _this._queriedTokens);\n            });\n            if (this._queriedTokens.get(resolveIdentifier(Identifiers.ViewContainerRef))) {\n                this._hasViewContainer = true;\n            }\n            // create the providers that we know are eager first\n            Array.from(this._allProviders.values()).forEach(function (provider) {\n                var eager = provider.eager || _this._queriedTokens.get(tokenReference(provider.token));\n                if (eager) {\n                    _this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n                }\n            });\n        }\n        /**\n         * @return {?}\n         */\n        ProviderElementContext.prototype.afterElement = function () {\n            var _this = this;\n            // collect lazy providers\n            Array.from(this._allProviders.values()).forEach(function (provider) {\n                _this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n            });\n        };\n        Object.defineProperty(ProviderElementContext.prototype, \"transformProviders\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                return Array.from(this._transformedProviders.values());\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ProviderElementContext.prototype, \"transformedDirectiveAsts\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                var /** @type {?} */ sortedProviderTypes = this.transformProviders.map(function (provider) { return provider.token.identifier; });\n                var /** @type {?} */ sortedDirectives = this._directiveAsts.slice();\n                sortedDirectives.sort(function (dir1, dir2) { return sortedProviderTypes.indexOf(dir1.directive.type) -\n                    sortedProviderTypes.indexOf(dir2.directive.type); });\n                return sortedDirectives;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ProviderElementContext.prototype, \"transformedHasViewContainer\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._hasViewContainer; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ProviderElementContext.prototype, \"queryMatches\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                var /** @type {?} */ allMatches = [];\n                this._queriedTokens.forEach(function (matches) { allMatches.push.apply(allMatches, matches); });\n                return allMatches;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} token\n         * @param {?} defaultValue\n         * @param {?} queryReadTokens\n         * @return {?}\n         */\n        ProviderElementContext.prototype._addQueryReadsTo = function (token, defaultValue, queryReadTokens) {\n            this._getQueriesFor(token).forEach(function (query) {\n                var /** @type {?} */ queryValue = query.meta.read || defaultValue;\n                var /** @type {?} */ tokenRef = tokenReference(queryValue);\n                var /** @type {?} */ queryMatches = queryReadTokens.get(tokenRef);\n                if (!queryMatches) {\n                    queryMatches = [];\n                    queryReadTokens.set(tokenRef, queryMatches);\n                }\n                queryMatches.push({ queryId: query.queryId, value: queryValue });\n            });\n        };\n        /**\n         * @param {?} token\n         * @return {?}\n         */\n        ProviderElementContext.prototype._getQueriesFor = function (token) {\n            var /** @type {?} */ result = [];\n            var /** @type {?} */ currentEl = this;\n            var /** @type {?} */ distance = 0;\n            var /** @type {?} */ queries;\n            while (currentEl !== null) {\n                queries = currentEl._contentQueries.get(tokenReference(token));\n                if (queries) {\n                    result.push.apply(result, queries.filter(function (query) { return query.meta.descendants || distance <= 1; }));\n                }\n                if (currentEl._directiveAsts.length > 0) {\n                    distance++;\n                }\n                currentEl = currentEl._parent;\n            }\n            queries = this.viewContext.viewQueries.get(tokenReference(token));\n            if (queries) {\n                result.push.apply(result, queries);\n            }\n            return result;\n        };\n        /**\n         * @param {?} requestingProviderType\n         * @param {?} token\n         * @param {?} eager\n         * @return {?}\n         */\n        ProviderElementContext.prototype._getOrCreateLocalProvider = function (requestingProviderType, token, eager) {\n            var _this = this;\n            var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n            if (!resolvedProvider || ((requestingProviderType === ProviderAstType.Directive ||\n                requestingProviderType === ProviderAstType.PublicService) &&\n                resolvedProvider.providerType === ProviderAstType.PrivateService) ||\n                ((requestingProviderType === ProviderAstType.PrivateService ||\n                    requestingProviderType === ProviderAstType.PublicService) &&\n                    resolvedProvider.providerType === ProviderAstType.Builtin)) {\n                return null;\n            }\n            var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n            if (transformedProviderAst) {\n                return transformedProviderAst;\n            }\n            if (this._seenProviders.get(tokenReference(token)) != null) {\n                this.viewContext.errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), this._sourceSpan));\n                return null;\n            }\n            this._seenProviders.set(tokenReference(token), true);\n            var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n                var /** @type {?} */ transformedUseValue = provider.useValue;\n                var /** @type {?} */ transformedUseExisting = provider.useExisting;\n                var /** @type {?} */ transformedDeps;\n                if (provider.useExisting != null) {\n                    var /** @type {?} */ existingDiDep = _this._getDependency(resolvedProvider.providerType, { token: provider.useExisting }, eager);\n                    if (existingDiDep.token != null) {\n                        transformedUseExisting = existingDiDep.token;\n                    }\n                    else {\n                        transformedUseExisting = null;\n                        transformedUseValue = existingDiDep.value;\n                    }\n                }\n                else if (provider.useFactory) {\n                    var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                    transformedDeps =\n                        deps.map(function (dep) { return _this._getDependency(resolvedProvider.providerType, dep, eager); });\n                }\n                else if (provider.useClass) {\n                    var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                    transformedDeps =\n                        deps.map(function (dep) { return _this._getDependency(resolvedProvider.providerType, dep, eager); });\n                }\n                return _transformProvider(provider, {\n                    useExisting: transformedUseExisting,\n                    useValue: transformedUseValue,\n                    deps: transformedDeps\n                });\n            });\n            transformedProviderAst =\n                _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n            this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n            return transformedProviderAst;\n        };\n        /**\n         * @param {?} requestingProviderType\n         * @param {?} dep\n         * @param {?=} eager\n         * @return {?}\n         */\n        ProviderElementContext.prototype._getLocalDependency = function (requestingProviderType, dep, eager) {\n            if (eager === void 0) { eager = null; }\n            if (dep.isAttribute) {\n                var /** @type {?} */ attrValue = this._attrs[dep.token.value];\n                return { isValue: true, value: attrValue == null ? null : attrValue };\n            }\n            if (dep.token != null) {\n                // access builtints\n                if ((requestingProviderType === ProviderAstType.Directive ||\n                    requestingProviderType === ProviderAstType.Component)) {\n                    if (tokenReference(dep.token) === resolveIdentifier(Identifiers.Renderer) ||\n                        tokenReference(dep.token) === resolveIdentifier(Identifiers.ElementRef) ||\n                        tokenReference(dep.token) === resolveIdentifier(Identifiers.ChangeDetectorRef) ||\n                        tokenReference(dep.token) === resolveIdentifier(Identifiers.TemplateRef)) {\n                        return dep;\n                    }\n                    if (tokenReference(dep.token) === resolveIdentifier(Identifiers.ViewContainerRef)) {\n                        this._hasViewContainer = true;\n                    }\n                }\n                // access the injector\n                if (tokenReference(dep.token) === resolveIdentifier(Identifiers.Injector)) {\n                    return dep;\n                }\n                // access providers\n                if (this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager) != null) {\n                    return dep;\n                }\n            }\n            return null;\n        };\n        /**\n         * @param {?} requestingProviderType\n         * @param {?} dep\n         * @param {?=} eager\n         * @return {?}\n         */\n        ProviderElementContext.prototype._getDependency = function (requestingProviderType, dep, eager) {\n            if (eager === void 0) { eager = null; }\n            var /** @type {?} */ currElement = this;\n            var /** @type {?} */ currEager = eager;\n            var /** @type {?} */ result = null;\n            if (!dep.isSkipSelf) {\n                result = this._getLocalDependency(requestingProviderType, dep, eager);\n            }\n            if (dep.isSelf) {\n                if (!result && dep.isOptional) {\n                    result = { isValue: true, value: null };\n                }\n            }\n            else {\n                // check parent elements\n                while (!result && currElement._parent) {\n                    var /** @type {?} */ prevElement = currElement;\n                    currElement = currElement._parent;\n                    if (prevElement._isViewRoot) {\n                        currEager = false;\n                    }\n                    result = currElement._getLocalDependency(ProviderAstType.PublicService, dep, currEager);\n                }\n                // check @Host restriction\n                if (!result) {\n                    if (!dep.isHost || this.viewContext.component.isHost ||\n                        this.viewContext.component.type.reference === tokenReference(dep.token) ||\n                        this.viewContext.viewProviders.get(tokenReference(dep.token)) != null) {\n                        result = dep;\n                    }\n                    else {\n                        result = dep.isOptional ? result = { isValue: true, value: null } : null;\n                    }\n                }\n            }\n            if (!result) {\n                this.viewContext.errors.push(new ProviderError(\"No provider for \" + tokenName(dep.token), this._sourceSpan));\n            }\n            return result;\n        };\n        return ProviderElementContext;\n    }());\n    var NgModuleProviderAnalyzer = (function () {\n        /**\n         * @param {?} ngModule\n         * @param {?} extraProviders\n         * @param {?} sourceSpan\n         */\n        function NgModuleProviderAnalyzer(ngModule, extraProviders, sourceSpan) {\n            var _this = this;\n            this._transformedProviders = new Map();\n            this._seenProviders = new Map();\n            this._errors = [];\n            this._allProviders = new Map();\n            ngModule.transitiveModule.modules.forEach(function (ngModuleType) {\n                var ngModuleProvider = { token: { identifier: ngModuleType }, useClass: ngModuleType };\n                _resolveProviders([ngModuleProvider], ProviderAstType.PublicService, true, sourceSpan, _this._errors, _this._allProviders);\n            });\n            _resolveProviders(ngModule.transitiveModule.providers.map(function (entry) { return entry.provider; }).concat(extraProviders), ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders);\n        }\n        /**\n         * @return {?}\n         */\n        NgModuleProviderAnalyzer.prototype.parse = function () {\n            var _this = this;\n            Array.from(this._allProviders.values()).forEach(function (provider) {\n                _this._getOrCreateLocalProvider(provider.token, provider.eager);\n            });\n            if (this._errors.length > 0) {\n                var /** @type {?} */ errorString = this._errors.join('\\n');\n                throw new Error(\"Provider parse errors:\\n\" + errorString);\n            }\n            return Array.from(this._transformedProviders.values());\n        };\n        /**\n         * @param {?} token\n         * @param {?} eager\n         * @return {?}\n         */\n        NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider = function (token, eager) {\n            var _this = this;\n            var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n            if (!resolvedProvider) {\n                return null;\n            }\n            var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n            if (transformedProviderAst) {\n                return transformedProviderAst;\n            }\n            if (this._seenProviders.get(tokenReference(token)) != null) {\n                this._errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), resolvedProvider.sourceSpan));\n                return null;\n            }\n            this._seenProviders.set(tokenReference(token), true);\n            var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n                var /** @type {?} */ transformedUseValue = provider.useValue;\n                var /** @type {?} */ transformedUseExisting = provider.useExisting;\n                var /** @type {?} */ transformedDeps;\n                if (provider.useExisting != null) {\n                    var /** @type {?} */ existingDiDep = _this._getDependency({ token: provider.useExisting }, eager, resolvedProvider.sourceSpan);\n                    if (existingDiDep.token != null) {\n                        transformedUseExisting = existingDiDep.token;\n                    }\n                    else {\n                        transformedUseExisting = null;\n                        transformedUseValue = existingDiDep.value;\n                    }\n                }\n                else if (provider.useFactory) {\n                    var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                    transformedDeps =\n                        deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n                }\n                else if (provider.useClass) {\n                    var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                    transformedDeps =\n                        deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n                }\n                return _transformProvider(provider, {\n                    useExisting: transformedUseExisting,\n                    useValue: transformedUseValue,\n                    deps: transformedDeps\n                });\n            });\n            transformedProviderAst =\n                _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n            this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n            return transformedProviderAst;\n        };\n        /**\n         * @param {?} dep\n         * @param {?=} eager\n         * @param {?=} requestorSourceSpan\n         * @return {?}\n         */\n        NgModuleProviderAnalyzer.prototype._getDependency = function (dep, eager, requestorSourceSpan) {\n            if (eager === void 0) { eager = null; }\n            var /** @type {?} */ foundLocal = false;\n            if (!dep.isSkipSelf && dep.token != null) {\n                // access the injector\n                if (tokenReference(dep.token) === resolveIdentifier(Identifiers.Injector) ||\n                    tokenReference(dep.token) === resolveIdentifier(Identifiers.ComponentFactoryResolver)) {\n                    foundLocal = true;\n                }\n                else if (this._getOrCreateLocalProvider(dep.token, eager) != null) {\n                    foundLocal = true;\n                }\n            }\n            var /** @type {?} */ result = dep;\n            if (dep.isSelf && !foundLocal) {\n                if (dep.isOptional) {\n                    result = { isValue: true, value: null };\n                }\n                else {\n                    this._errors.push(new ProviderError(\"No provider for \" + tokenName(dep.token), requestorSourceSpan));\n                }\n            }\n            return result;\n        };\n        return NgModuleProviderAnalyzer;\n    }());\n    /**\n     * @param {?} provider\n     * @param {?} __1\n     * @return {?}\n     */\n    function _transformProvider(provider, _a) {\n        var useExisting = _a.useExisting, useValue = _a.useValue, deps = _a.deps;\n        return {\n            token: provider.token,\n            useClass: provider.useClass,\n            useExisting: useExisting,\n            useFactory: provider.useFactory,\n            useValue: useValue,\n            deps: deps,\n            multi: provider.multi\n        };\n    }\n    /**\n     * @param {?} provider\n     * @param {?} __1\n     * @return {?}\n     */\n    function _transformProviderAst(provider, _a) {\n        var eager = _a.eager, providers = _a.providers;\n        return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan);\n    }\n    /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @param {?} targetErrors\n     * @return {?}\n     */\n    function _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n        var /** @type {?} */ providersByToken = new Map();\n        directives.forEach(function (directive) {\n            var /** @type {?} */ dirProvider = { token: { identifier: directive.type }, useClass: directive.type };\n            _resolveProviders([dirProvider], directive.isComponent ? ProviderAstType.Component : ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken);\n        });\n        // Note: directives need to be able to overwrite providers of a component!\n        var /** @type {?} */ directivesWithComponentFirst = directives.filter(function (dir) { return dir.isComponent; }).concat(directives.filter(function (dir) { return !dir.isComponent; }));\n        directivesWithComponentFirst.forEach(function (directive) {\n            _resolveProviders(directive.providers, ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken);\n            _resolveProviders(directive.viewProviders, ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken);\n        });\n        return providersByToken;\n    }\n    /**\n     * @param {?} providers\n     * @param {?} providerType\n     * @param {?} eager\n     * @param {?} sourceSpan\n     * @param {?} targetErrors\n     * @param {?} targetProvidersByToken\n     * @return {?}\n     */\n    function _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken) {\n        providers.forEach(function (provider) {\n            var /** @type {?} */ resolvedProvider = targetProvidersByToken.get(tokenReference(provider.token));\n            if (resolvedProvider != null && !!resolvedProvider.multiProvider !== !!provider.multi) {\n                targetErrors.push(new ProviderError(\"Mixing multi and non multi provider is not possible for token \" + tokenName(resolvedProvider.token), sourceSpan));\n            }\n            if (!resolvedProvider) {\n                var /** @type {?} */ lifecycleHooks = provider.token.identifier &&\n                    ((provider.token.identifier)).lifecycleHooks ?\n                    ((provider.token.identifier)).lifecycleHooks :\n                    [];\n                var /** @type {?} */ isUseValue = !(provider.useClass || provider.useExisting || provider.useFactory);\n                resolvedProvider = new ProviderAst(provider.token, provider.multi, eager || isUseValue, [provider], providerType, lifecycleHooks, sourceSpan);\n                targetProvidersByToken.set(tokenReference(provider.token), resolvedProvider);\n            }\n            else {\n                if (!provider.multi) {\n                    resolvedProvider.providers.length = 0;\n                }\n                resolvedProvider.providers.push(provider);\n            }\n        });\n    }\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    function _getViewQueries(component) {\n        // Note: queries start with id 1 so we can use the number in a Bloom filter!\n        var /** @type {?} */ viewQueryId = 1;\n        var /** @type {?} */ viewQueries = new Map();\n        if (component.viewQueries) {\n            component.viewQueries.forEach(function (query) { return _addQueryToTokenMap(viewQueries, { meta: query, queryId: viewQueryId++ }); });\n        }\n        return viewQueries;\n    }\n    /**\n     * @param {?} contentQueryStartId\n     * @param {?} directives\n     * @return {?}\n     */\n    function _getContentQueries(contentQueryStartId, directives) {\n        var /** @type {?} */ contentQueryId = contentQueryStartId;\n        var /** @type {?} */ contentQueries = new Map();\n        directives.forEach(function (directive, directiveIndex) {\n            if (directive.queries) {\n                directive.queries.forEach(function (query) { return _addQueryToTokenMap(contentQueries, { meta: query, queryId: contentQueryId++ }); });\n            }\n        });\n        return contentQueries;\n    }\n    /**\n     * @param {?} map\n     * @param {?} query\n     * @return {?}\n     */\n    function _addQueryToTokenMap(map, query) {\n        query.meta.selectors.forEach(function (token) {\n            var /** @type {?} */ entry = map.get(tokenReference(token));\n            if (!entry) {\n                entry = [];\n                map.set(tokenReference(token), entry);\n            }\n            entry.push(query);\n        });\n    }\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @abstract\n     */\n    var ElementSchemaRegistry = (function () {\n        function ElementSchemaRegistry() {\n        }\n        /**\n         * @abstract\n         * @param {?} tagName\n         * @param {?} propName\n         * @param {?} schemaMetas\n         * @return {?}\n         */\n        ElementSchemaRegistry.prototype.hasProperty = function (tagName, propName, schemaMetas) { };\n        /**\n         * @abstract\n         * @param {?} tagName\n         * @param {?} schemaMetas\n         * @return {?}\n         */\n        ElementSchemaRegistry.prototype.hasElement = function (tagName, schemaMetas) { };\n        /**\n         * @abstract\n         * @param {?} elementName\n         * @param {?} propName\n         * @param {?} isAttribute\n         * @return {?}\n         */\n        ElementSchemaRegistry.prototype.securityContext = function (elementName, propName, isAttribute) { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        ElementSchemaRegistry.prototype.allKnownElementNames = function () { };\n        /**\n         * @abstract\n         * @param {?} propName\n         * @return {?}\n         */\n        ElementSchemaRegistry.prototype.getMappedPropName = function (propName) { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        ElementSchemaRegistry.prototype.getDefaultComponentElementName = function () { };\n        /**\n         * @abstract\n         * @param {?} name\n         * @return {?}\n         */\n        ElementSchemaRegistry.prototype.validateProperty = function (name) { };\n        /**\n         * @abstract\n         * @param {?} name\n         * @return {?}\n         */\n        ElementSchemaRegistry.prototype.validateAttribute = function (name) { };\n        /**\n         * @abstract\n         * @param {?} propName\n         * @return {?}\n         */\n        ElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = function (propName) { };\n        /**\n         * @abstract\n         * @param {?} camelCaseProp\n         * @param {?} userProvidedProp\n         * @param {?} val\n         * @return {?}\n         */\n        ElementSchemaRegistry.prototype.normalizeAnimationStyleValue = function (camelCaseProp, userProvidedProp, val) { };\n        return ElementSchemaRegistry;\n    }());\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var StyleWithImports = (function () {\n        /**\n         * @param {?} style\n         * @param {?} styleUrls\n         */\n        function StyleWithImports(style, styleUrls) {\n            this.style = style;\n            this.styleUrls = styleUrls;\n        }\n        return StyleWithImports;\n    }());\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    function isStyleUrlResolvable(url) {\n        if (url == null || url.length === 0 || url[0] == '/')\n            return false;\n        var /** @type {?} */ schemeMatch = url.match(URL_WITH_SCHEMA_REGEXP);\n        return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n    }\n    /**\n     * Rewrites stylesheets by resolving and removing the \\@import urls that\n     * are either relative or don't have a `package:` scheme\n     * @param {?} resolver\n     * @param {?} baseUrl\n     * @param {?} cssText\n     * @return {?}\n     */\n    function extractStyleUrls(resolver, baseUrl, cssText) {\n        var /** @type {?} */ foundUrls = [];\n        var /** @type {?} */ modifiedCssText = cssText.replace(CSS_COMMENT_REGEXP, '').replace(CSS_IMPORT_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            var /** @type {?} */ url = m[1] || m[2];\n            if (!isStyleUrlResolvable(url)) {\n                // Do not attempt to resolve non-package absolute URLs with URI scheme\n                return m[0];\n            }\n            foundUrls.push(resolver.resolve(baseUrl, url));\n            return '';\n        });\n        return new StyleWithImports(modifiedCssText, foundUrls);\n    }\n    var /** @type {?} */ CSS_IMPORT_REGEXP = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\n    var /** @type {?} */ CSS_COMMENT_REGEXP = /\\/\\*.+?\\*\\//g;\n    var /** @type {?} */ URL_WITH_SCHEMA_REGEXP = /^([^:/?#]+):/;\n    var /** @type {?} */ PROPERTY_PARTS_SEPARATOR = '.';\n    var /** @type {?} */ ATTRIBUTE_PREFIX = 'attr';\n    var /** @type {?} */ CLASS_PREFIX = 'class';\n    var /** @type {?} */ STYLE_PREFIX = 'style';\n    var /** @type {?} */ ANIMATE_PROP_PREFIX = 'animate-';\n    var BoundPropertyType = {};\n    BoundPropertyType.DEFAULT = 0;\n    BoundPropertyType.LITERAL_ATTR = 1;\n    BoundPropertyType.ANIMATION = 2;\n    BoundPropertyType[BoundPropertyType.DEFAULT] = \"DEFAULT\";\n    BoundPropertyType[BoundPropertyType.LITERAL_ATTR] = \"LITERAL_ATTR\";\n    BoundPropertyType[BoundPropertyType.ANIMATION] = \"ANIMATION\";\n    /**\n     * Represents a parsed property.\n     */\n    var BoundProperty = (function () {\n        /**\n         * @param {?} name\n         * @param {?} expression\n         * @param {?} type\n         * @param {?} sourceSpan\n         */\n        function BoundProperty(name, expression, type, sourceSpan) {\n            this.name = name;\n            this.expression = expression;\n            this.type = type;\n            this.sourceSpan = sourceSpan;\n        }\n        Object.defineProperty(BoundProperty.prototype, \"isLiteral\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.type === BoundPropertyType.LITERAL_ATTR; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BoundProperty.prototype, \"isAnimation\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.type === BoundPropertyType.ANIMATION; },\n            enumerable: true,\n            configurable: true\n        });\n        return BoundProperty;\n    }());\n    /**\n     * Parses bindings in templates and in the directive host area.\n     */\n    var BindingParser = (function () {\n        /**\n         * @param {?} _exprParser\n         * @param {?} _interpolationConfig\n         * @param {?} _schemaRegistry\n         * @param {?} pipes\n         * @param {?} _targetErrors\n         */\n        function BindingParser(_exprParser, _interpolationConfig, _schemaRegistry, pipes, _targetErrors) {\n            var _this = this;\n            this._exprParser = _exprParser;\n            this._interpolationConfig = _interpolationConfig;\n            this._schemaRegistry = _schemaRegistry;\n            this._targetErrors = _targetErrors;\n            this.pipesByName = new Map();\n            this._usedPipes = new Map();\n            pipes.forEach(function (pipe) { return _this.pipesByName.set(pipe.name, pipe); });\n        }\n        /**\n         * @return {?}\n         */\n        BindingParser.prototype.getUsedPipes = function () { return Array.from(this._usedPipes.values()); };\n        /**\n         * @param {?} dirMeta\n         * @param {?} elementSelector\n         * @param {?} sourceSpan\n         * @return {?}\n         */\n        BindingParser.prototype.createDirectiveHostPropertyAsts = function (dirMeta, elementSelector, sourceSpan) {\n            var _this = this;\n            if (dirMeta.hostProperties) {\n                var /** @type {?} */ boundProps_1 = [];\n                Object.keys(dirMeta.hostProperties).forEach(function (propName) {\n                    var /** @type {?} */ expression = dirMeta.hostProperties[propName];\n                    if (typeof expression === 'string') {\n                        _this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps_1);\n                    }\n                    else {\n                        _this._reportError(\"Value of the host property binding \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                    }\n                });\n                return boundProps_1.map(function (prop) { return _this.createElementPropertyAst(elementSelector, prop); });\n            }\n        };\n        /**\n         * @param {?} dirMeta\n         * @param {?} sourceSpan\n         * @return {?}\n         */\n        BindingParser.prototype.createDirectiveHostEventAsts = function (dirMeta, sourceSpan) {\n            var _this = this;\n            if (dirMeta.hostListeners) {\n                var /** @type {?} */ targetEventAsts_1 = [];\n                Object.keys(dirMeta.hostListeners).forEach(function (propName) {\n                    var /** @type {?} */ expression = dirMeta.hostListeners[propName];\n                    if (typeof expression === 'string') {\n                        _this.parseEvent(propName, expression, sourceSpan, [], targetEventAsts_1);\n                    }\n                    else {\n                        _this._reportError(\"Value of the host listener \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                    }\n                });\n                return targetEventAsts_1;\n            }\n        };\n        /**\n         * @param {?} value\n         * @param {?} sourceSpan\n         * @return {?}\n         */\n        BindingParser.prototype.parseInterpolation = function (value, sourceSpan) {\n            var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n            try {\n                var /** @type {?} */ ast = this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig);\n                if (ast)\n                    this._reportExpressionParserErrors(ast.errors, sourceSpan);\n                this._checkPipes(ast, sourceSpan);\n                return ast;\n            }\n            catch (e) {\n                this._reportError(\"\" + e, sourceSpan);\n                return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n            }\n        };\n        /**\n         * @param {?} prefixToken\n         * @param {?} value\n         * @param {?} sourceSpan\n         * @param {?} targetMatchableAttrs\n         * @param {?} targetProps\n         * @param {?} targetVars\n         * @return {?}\n         */\n        BindingParser.prototype.parseInlineTemplateBinding = function (prefixToken, value, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n            var /** @type {?} */ bindings = this._parseTemplateBindings(prefixToken, value, sourceSpan);\n            for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n                var /** @type {?} */ binding = bindings[i];\n                if (binding.keyIsVar) {\n                    targetVars.push(new VariableAst(binding.key, binding.name, sourceSpan));\n                }\n                else if (binding.expression) {\n                    this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n                }\n                else {\n                    targetMatchableAttrs.push([binding.key, '']);\n                    this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n                }\n            }\n        };\n        /**\n         * @param {?} prefixToken\n         * @param {?} value\n         * @param {?} sourceSpan\n         * @return {?}\n         */\n        BindingParser.prototype._parseTemplateBindings = function (prefixToken, value, sourceSpan) {\n            var _this = this;\n            var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n            try {\n                var /** @type {?} */ bindingsResult = this._exprParser.parseTemplateBindings(prefixToken, value, sourceInfo);\n                this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n                bindingsResult.templateBindings.forEach(function (binding) {\n                    if (binding.expression) {\n                        _this._checkPipes(binding.expression, sourceSpan);\n                    }\n                });\n                bindingsResult.warnings.forEach(function (warning) { _this._reportError(warning, sourceSpan, ParseErrorLevel.WARNING); });\n                return bindingsResult.templateBindings;\n            }\n            catch (e) {\n                this._reportError(\"\" + e, sourceSpan);\n                return [];\n            }\n        };\n        /**\n         * @param {?} name\n         * @param {?} value\n         * @param {?} sourceSpan\n         * @param {?} targetMatchableAttrs\n         * @param {?} targetProps\n         * @return {?}\n         */\n        BindingParser.prototype.parseLiteralAttr = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n            if (_isAnimationLabel(name)) {\n                name = name.substring(1);\n                if (value) {\n                    this._reportError(\"Assigning animation triggers via @prop=\\\"exp\\\" attributes with an expression is invalid.\" +\n                        \" Use property bindings (e.g. [@prop]=\\\"exp\\\") or use an attribute without a value (e.g. @prop) instead.\", sourceSpan, ParseErrorLevel.ERROR);\n                }\n                this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n            else {\n                targetProps.push(new BoundProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), BoundPropertyType.LITERAL_ATTR, sourceSpan));\n            }\n        };\n        /**\n         * @param {?} name\n         * @param {?} expression\n         * @param {?} isHost\n         * @param {?} sourceSpan\n         * @param {?} targetMatchableAttrs\n         * @param {?} targetProps\n         * @return {?}\n         */\n        BindingParser.prototype.parsePropertyBinding = function (name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n            var /** @type {?} */ isAnimationProp = false;\n            if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n                isAnimationProp = true;\n                name = name.substring(ANIMATE_PROP_PREFIX.length);\n            }\n            else if (_isAnimationLabel(name)) {\n                isAnimationProp = true;\n                name = name.substring(1);\n            }\n            if (isAnimationProp) {\n                this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n            else {\n                this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n            }\n        };\n        /**\n         * @param {?} name\n         * @param {?} value\n         * @param {?} sourceSpan\n         * @param {?} targetMatchableAttrs\n         * @param {?} targetProps\n         * @return {?}\n         */\n        BindingParser.prototype.parsePropertyInterpolation = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n            var /** @type {?} */ expr = this.parseInterpolation(value, sourceSpan);\n            if (expr) {\n                this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n                return true;\n            }\n            return false;\n        };\n        /**\n         * @param {?} name\n         * @param {?} ast\n         * @param {?} sourceSpan\n         * @param {?} targetMatchableAttrs\n         * @param {?} targetProps\n         * @return {?}\n         */\n        BindingParser.prototype._parsePropertyAst = function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n            targetMatchableAttrs.push([name, ast.source]);\n            targetProps.push(new BoundProperty(name, ast, BoundPropertyType.DEFAULT, sourceSpan));\n        };\n        /**\n         * @param {?} name\n         * @param {?} expression\n         * @param {?} sourceSpan\n         * @param {?} targetMatchableAttrs\n         * @param {?} targetProps\n         * @return {?}\n         */\n        BindingParser.prototype._parseAnimation = function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n            // This will occur when a @trigger is not paired with an expression.\n            // For animations it is valid to not have an expression since */void\n            // states will be applied by angular when the element is attached/detached\n            var /** @type {?} */ ast = this._parseBinding(expression || 'null', false, sourceSpan);\n            targetMatchableAttrs.push([name, ast.source]);\n            targetProps.push(new BoundProperty(name, ast, BoundPropertyType.ANIMATION, sourceSpan));\n        };\n        /**\n         * @param {?} value\n         * @param {?} isHostBinding\n         * @param {?} sourceSpan\n         * @return {?}\n         */\n        BindingParser.prototype._parseBinding = function (value, isHostBinding, sourceSpan) {\n            var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n            try {\n                var /** @type {?} */ ast = isHostBinding ?\n                    this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n                    this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n                if (ast)\n                    this._reportExpressionParserErrors(ast.errors, sourceSpan);\n                this._checkPipes(ast, sourceSpan);\n                return ast;\n            }\n            catch (e) {\n                this._reportError(\"\" + e, sourceSpan);\n                return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n            }\n        };\n        /**\n         * @param {?} elementSelector\n         * @param {?} boundProp\n         * @return {?}\n         */\n        BindingParser.prototype.createElementPropertyAst = function (elementSelector, boundProp) {\n            if (boundProp.isAnimation) {\n                return new BoundElementPropertyAst(boundProp.name, PropertyBindingType.Animation, _angular_core.SecurityContext.NONE, boundProp.expression, null, boundProp.sourceSpan);\n            }\n            var /** @type {?} */ unit = null;\n            var /** @type {?} */ bindingType;\n            var /** @type {?} */ boundPropertyName = null;\n            var /** @type {?} */ parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n            var /** @type {?} */ securityContexts;\n            // Check check for special cases (prefix style, attr, class)\n            if (parts.length > 1) {\n                if (parts[0] == ATTRIBUTE_PREFIX) {\n                    boundPropertyName = parts[1];\n                    this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n                    securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n                    var /** @type {?} */ nsSeparatorIdx = boundPropertyName.indexOf(':');\n                    if (nsSeparatorIdx > -1) {\n                        var /** @type {?} */ ns = boundPropertyName.substring(0, nsSeparatorIdx);\n                        var /** @type {?} */ name = boundPropertyName.substring(nsSeparatorIdx + 1);\n                        boundPropertyName = mergeNsAndName(ns, name);\n                    }\n                    bindingType = PropertyBindingType.Attribute;\n                }\n                else if (parts[0] == CLASS_PREFIX) {\n                    boundPropertyName = parts[1];\n                    bindingType = PropertyBindingType.Class;\n                    securityContexts = [_angular_core.SecurityContext.NONE];\n                }\n                else if (parts[0] == STYLE_PREFIX) {\n                    unit = parts.length > 2 ? parts[2] : null;\n                    boundPropertyName = parts[1];\n                    bindingType = PropertyBindingType.Style;\n                    securityContexts = [_angular_core.SecurityContext.STYLE];\n                }\n            }\n            // If not a special case, use the full property name\n            if (boundPropertyName === null) {\n                boundPropertyName = this._schemaRegistry.getMappedPropName(boundProp.name);\n                securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n                bindingType = PropertyBindingType.Property;\n                this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n            }\n            return new BoundElementPropertyAst(boundPropertyName, bindingType, securityContexts[0], boundProp.expression, unit, boundProp.sourceSpan);\n        };\n        /**\n         * @param {?} name\n         * @param {?} expression\n         * @param {?} sourceSpan\n         * @param {?} targetMatchableAttrs\n         * @param {?} targetEvents\n         * @return {?}\n         */\n        BindingParser.prototype.parseEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n            if (_isAnimationLabel(name)) {\n                name = name.substr(1);\n                this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n            }\n            else {\n                this._parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n            }\n        };\n        /**\n         * @param {?} name\n         * @param {?} expression\n         * @param {?} sourceSpan\n         * @param {?} targetEvents\n         * @return {?}\n         */\n        BindingParser.prototype._parseAnimationEvent = function (name, expression, sourceSpan, targetEvents) {\n            var /** @type {?} */ matches = splitAtPeriod(name, [name, '']);\n            var /** @type {?} */ eventName = matches[0];\n            var /** @type {?} */ phase = matches[1].toLowerCase();\n            if (phase) {\n                switch (phase) {\n                    case 'start':\n                    case 'done':\n                        var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n                        targetEvents.push(new BoundEventAst(eventName, null, phase, ast, sourceSpan));\n                        break;\n                    default:\n                        this._reportError(\"The provided animation output phase value \\\"\" + phase + \"\\\" for \\\"@\" + eventName + \"\\\" is not supported (use start or done)\", sourceSpan);\n                        break;\n                }\n            }\n            else {\n                this._reportError(\"The animation trigger output event (@\" + eventName + \") is missing its phase value name (start or done are currently supported)\", sourceSpan);\n            }\n        };\n        /**\n         * @param {?} name\n         * @param {?} expression\n         * @param {?} sourceSpan\n         * @param {?} targetMatchableAttrs\n         * @param {?} targetEvents\n         * @return {?}\n         */\n        BindingParser.prototype._parseEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n            // long format: 'target: eventName'\n            var _a = splitAtColon(name, [null, name]), target = _a[0], eventName = _a[1];\n            var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n            targetMatchableAttrs.push([name, ast.source]);\n            targetEvents.push(new BoundEventAst(eventName, target, null, ast, sourceSpan));\n            // Don't detect directives for event names for now,\n            // so don't add the event name to the matchableAttrs\n        };\n        /**\n         * @param {?} value\n         * @param {?} sourceSpan\n         * @return {?}\n         */\n        BindingParser.prototype._parseAction = function (value, sourceSpan) {\n            var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n            try {\n                var /** @type {?} */ ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n                if (ast) {\n                    this._reportExpressionParserErrors(ast.errors, sourceSpan);\n                }\n                if (!ast || ast.ast instanceof EmptyExpr) {\n                    this._reportError(\"Empty expressions are not allowed\", sourceSpan);\n                    return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n                }\n                this._checkPipes(ast, sourceSpan);\n                return ast;\n            }\n            catch (e) {\n                this._reportError(\"\" + e, sourceSpan);\n                return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n            }\n        };\n        /**\n         * @param {?} message\n         * @param {?} sourceSpan\n         * @param {?=} level\n         * @return {?}\n         */\n        BindingParser.prototype._reportError = function (message, sourceSpan, level) {\n            if (level === void 0) { level = ParseErrorLevel.ERROR; }\n            this._targetErrors.push(new ParseError(sourceSpan, message, level));\n        };\n        /**\n         * @param {?} errors\n         * @param {?} sourceSpan\n         * @return {?}\n         */\n        BindingParser.prototype._reportExpressionParserErrors = function (errors, sourceSpan) {\n            for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n                var error = errors_1[_i];\n                this._reportError(error.message, sourceSpan);\n            }\n        };\n        /**\n         * @param {?} ast\n         * @param {?} sourceSpan\n         * @return {?}\n         */\n        BindingParser.prototype._checkPipes = function (ast, sourceSpan) {\n            var _this = this;\n            if (ast) {\n                var /** @type {?} */ collector = new PipeCollector();\n                ast.visit(collector);\n                collector.pipes.forEach(function (ast, pipeName) {\n                    var /** @type {?} */ pipeMeta = _this.pipesByName.get(pipeName);\n                    if (!pipeMeta) {\n                        _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", new ParseSourceSpan(sourceSpan.start.moveBy(ast.span.start), sourceSpan.start.moveBy(ast.span.end)));\n                    }\n                    else {\n                        _this._usedPipes.set(pipeName, pipeMeta);\n                    }\n                });\n            }\n        };\n        /**\n         * @param {?} propName the name of the property / attribute\n         * @param {?} sourceSpan\n         * @param {?} isAttr true when binding to an attribute\n         * @return {?}\n         */\n        BindingParser.prototype._validatePropertyOrAttributeName = function (propName, sourceSpan, isAttr) {\n            var /** @type {?} */ report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n                this._schemaRegistry.validateProperty(propName);\n            if (report.error) {\n                this._reportError(report.msg, sourceSpan, ParseErrorLevel.ERROR);\n            }\n        };\n        return BindingParser;\n    }());\n    var PipeCollector = (function (_super) {\n        __extends(PipeCollector, _super);\n        function PipeCollector() {\n            var _this = _super.apply(this, arguments) || this;\n            _this.pipes = new Map();\n            return _this;\n        }\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        PipeCollector.prototype.visitPipe = function (ast, context) {\n            this.pipes.set(ast.name, ast);\n            ast.exp.visit(this);\n            this.visitAll(ast.args, context);\n            return null;\n        };\n        return PipeCollector;\n    }(RecursiveAstVisitor));\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    function _isAnimationLabel(name) {\n        return name[0] == '@';\n    }\n    /**\n     * @param {?} registry\n     * @param {?} selector\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    function calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n        var /** @type {?} */ ctxs = [];\n        CssSelector.parse(selector).forEach(function (selector) {\n            var /** @type {?} */ elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n            var /** @type {?} */ notElementNames = new Set(selector.notSelectors.filter(function (selector) { return selector.isElementSelector(); })\n                .map(function (selector) { return selector.element; }));\n            var /** @type {?} */ possibleElementNames = elementNames.filter(function (elementName) { return !notElementNames.has(elementName); });\n            ctxs.push.apply(ctxs, possibleElementNames.map(function (elementName) { return registry.securityContext(elementName, propName, isAttribute); }));\n        });\n        return ctxs.length === 0 ? [_angular_core.SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n    }\n    var /** @type {?} */ NG_CONTENT_SELECT_ATTR = 'select';\n    var /** @type {?} */ NG_CONTENT_ELEMENT = 'ng-content';\n    var /** @type {?} */ LINK_ELEMENT = 'link';\n    var /** @type {?} */ LINK_STYLE_REL_ATTR = 'rel';\n    var /** @type {?} */ LINK_STYLE_HREF_ATTR = 'href';\n    var /** @type {?} */ LINK_STYLE_REL_VALUE = 'stylesheet';\n    var /** @type {?} */ STYLE_ELEMENT = 'style';\n    var /** @type {?} */ SCRIPT_ELEMENT = 'script';\n    var /** @type {?} */ NG_NON_BINDABLE_ATTR = 'ngNonBindable';\n    var /** @type {?} */ NG_PROJECT_AS = 'ngProjectAs';\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function preparseElement(ast) {\n        var /** @type {?} */ selectAttr = null;\n        var /** @type {?} */ hrefAttr = null;\n        var /** @type {?} */ relAttr = null;\n        var /** @type {?} */ nonBindable = false;\n        var /** @type {?} */ projectAs = null;\n        ast.attrs.forEach(function (attr) {\n            var /** @type {?} */ lcAttrName = attr.name.toLowerCase();\n            if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n                selectAttr = attr.value;\n            }\n            else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n                hrefAttr = attr.value;\n            }\n            else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n                relAttr = attr.value;\n            }\n            else if (attr.name == NG_NON_BINDABLE_ATTR) {\n                nonBindable = true;\n            }\n            else if (attr.name == NG_PROJECT_AS) {\n                if (attr.value.length > 0) {\n                    projectAs = attr.value;\n                }\n            }\n        });\n        selectAttr = normalizeNgContentSelect(selectAttr);\n        var /** @type {?} */ nodeName = ast.name.toLowerCase();\n        var /** @type {?} */ type = PreparsedElementType.OTHER;\n        if (splitNsName(nodeName)[1] == NG_CONTENT_ELEMENT) {\n            type = PreparsedElementType.NG_CONTENT;\n        }\n        else if (nodeName == STYLE_ELEMENT) {\n            type = PreparsedElementType.STYLE;\n        }\n        else if (nodeName == SCRIPT_ELEMENT) {\n            type = PreparsedElementType.SCRIPT;\n        }\n        else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n            type = PreparsedElementType.STYLESHEET;\n        }\n        return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n    }\n    var PreparsedElementType = {};\n    PreparsedElementType.NG_CONTENT = 0;\n    PreparsedElementType.STYLE = 1;\n    PreparsedElementType.STYLESHEET = 2;\n    PreparsedElementType.SCRIPT = 3;\n    PreparsedElementType.OTHER = 4;\n    PreparsedElementType[PreparsedElementType.NG_CONTENT] = \"NG_CONTENT\";\n    PreparsedElementType[PreparsedElementType.STYLE] = \"STYLE\";\n    PreparsedElementType[PreparsedElementType.STYLESHEET] = \"STYLESHEET\";\n    PreparsedElementType[PreparsedElementType.SCRIPT] = \"SCRIPT\";\n    PreparsedElementType[PreparsedElementType.OTHER] = \"OTHER\";\n    var PreparsedElement = (function () {\n        /**\n         * @param {?} type\n         * @param {?} selectAttr\n         * @param {?} hrefAttr\n         * @param {?} nonBindable\n         * @param {?} projectAs\n         */\n        function PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n            this.type = type;\n            this.selectAttr = selectAttr;\n            this.hrefAttr = hrefAttr;\n            this.nonBindable = nonBindable;\n            this.projectAs = projectAs;\n        }\n        return PreparsedElement;\n    }());\n    /**\n     * @param {?} selectAttr\n     * @return {?}\n     */\n    function normalizeNgContentSelect(selectAttr) {\n        if (selectAttr === null || selectAttr.length === 0) {\n            return '*';\n        }\n        return selectAttr;\n    }\n    var /** @type {?} */ BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n    // Group 1 = \"bind-\"\n    var /** @type {?} */ KW_BIND_IDX = 1;\n    // Group 2 = \"let-\"\n    var /** @type {?} */ KW_LET_IDX = 2;\n    // Group 3 = \"ref-/#\"\n    var /** @type {?} */ KW_REF_IDX = 3;\n    // Group 4 = \"on-\"\n    var /** @type {?} */ KW_ON_IDX = 4;\n    // Group 5 = \"bindon-\"\n    var /** @type {?} */ KW_BINDON_IDX = 5;\n    // Group 6 = \"@\"\n    var /** @type {?} */ KW_AT_IDX = 6;\n    // Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\n    var /** @type {?} */ IDENT_KW_IDX = 7;\n    // Group 8 = identifier inside [()]\n    var /** @type {?} */ IDENT_BANANA_BOX_IDX = 8;\n    // Group 9 = identifier inside []\n    var /** @type {?} */ IDENT_PROPERTY_IDX = 9;\n    // Group 10 = identifier inside ()\n    var /** @type {?} */ IDENT_EVENT_IDX = 10;\n    var /** @type {?} */ NG_TEMPLATE_ELEMENT = 'ng-template';\n    // deprecated in 4.x\n    var /** @type {?} */ TEMPLATE_ELEMENT = 'template';\n    // deprecated in 4.x\n    var /** @type {?} */ TEMPLATE_ATTR = 'template';\n    var /** @type {?} */ TEMPLATE_ATTR_PREFIX = '*';\n    var /** @type {?} */ CLASS_ATTR = 'class';\n    var /** @type {?} */ TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\n    /**\n     * Provides an array of {@link TemplateAstVisitor}s which will be used to transform\n     * parsed templates before compilation is invoked, allowing custom expression syntax\n     * and other advanced transformations.\n     *\n     * This is currently an internal-only feature and not meant for general use.\n     */\n    var /** @type {?} */ TEMPLATE_TRANSFORMS = new _angular_core.InjectionToken('TemplateTransforms');\n    var TemplateParseError = (function (_super) {\n        __extends(TemplateParseError, _super);\n        /**\n         * @param {?} message\n         * @param {?} span\n         * @param {?} level\n         */\n        function TemplateParseError(message, span, level) {\n            return _super.call(this, span, message, level) || this;\n        }\n        return TemplateParseError;\n    }(ParseError));\n    var TemplateParseResult = (function () {\n        /**\n         * @param {?=} templateAst\n         * @param {?=} usedPipes\n         * @param {?=} errors\n         */\n        function TemplateParseResult(templateAst, usedPipes, errors) {\n            this.templateAst = templateAst;\n            this.usedPipes = usedPipes;\n            this.errors = errors;\n        }\n        return TemplateParseResult;\n    }());\n    var TemplateParser = (function () {\n        /**\n         * @param {?} _config\n         * @param {?} _exprParser\n         * @param {?} _schemaRegistry\n         * @param {?} _htmlParser\n         * @param {?} _console\n         * @param {?} transforms\n         */\n        function TemplateParser(_config, _exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n            this._config = _config;\n            this._exprParser = _exprParser;\n            this._schemaRegistry = _schemaRegistry;\n            this._htmlParser = _htmlParser;\n            this._console = _console;\n            this.transforms = transforms;\n        }\n        /**\n         * @param {?} component\n         * @param {?} template\n         * @param {?} directives\n         * @param {?} pipes\n         * @param {?} schemas\n         * @param {?} templateUrl\n         * @return {?}\n         */\n        TemplateParser.prototype.parse = function (component, template, directives, pipes, schemas, templateUrl) {\n            var /** @type {?} */ result = this.tryParse(component, template, directives, pipes, schemas, templateUrl);\n            var /** @type {?} */ warnings = result.errors.filter(function (error) { return error.level === ParseErrorLevel.WARNING; });\n            var /** @type {?} */ errors = result.errors.filter(function (error) { return error.level === ParseErrorLevel.ERROR; });\n            if (warnings.length > 0) {\n                this._console.warn(\"Template parse warnings:\\n\" + warnings.join('\\n'));\n            }\n            if (errors.length > 0) {\n                var /** @type {?} */ errorString = errors.join('\\n');\n                throw syntaxError(\"Template parse errors:\\n\" + errorString);\n            }\n            return { template: result.templateAst, pipes: result.usedPipes };\n        };\n        /**\n         * @param {?} component\n         * @param {?} template\n         * @param {?} directives\n         * @param {?} pipes\n         * @param {?} schemas\n         * @param {?} templateUrl\n         * @return {?}\n         */\n        TemplateParser.prototype.tryParse = function (component, template, directives, pipes, schemas, templateUrl) {\n            return this.tryParseHtml(this.expandHtml(this._htmlParser.parse(template, templateUrl, true, this.getInterpolationConfig(component))), component, template, directives, pipes, schemas, templateUrl);\n        };\n        /**\n         * @param {?} htmlAstWithErrors\n         * @param {?} component\n         * @param {?} template\n         * @param {?} directives\n         * @param {?} pipes\n         * @param {?} schemas\n         * @param {?} templateUrl\n         * @return {?}\n         */\n        TemplateParser.prototype.tryParseHtml = function (htmlAstWithErrors, component, template, directives, pipes, schemas, templateUrl) {\n            var /** @type {?} */ result;\n            var /** @type {?} */ errors = htmlAstWithErrors.errors;\n            var /** @type {?} */ usedPipes = [];\n            if (htmlAstWithErrors.rootNodes.length > 0) {\n                var /** @type {?} */ uniqDirectives = removeSummaryDuplicates(directives);\n                var /** @type {?} */ uniqPipes = removeSummaryDuplicates(pipes);\n                var /** @type {?} */ providerViewContext = new ProviderViewContext(component);\n                var /** @type {?} */ interpolationConfig = void 0;\n                if (component.template && component.template.interpolation) {\n                    interpolationConfig = {\n                        start: component.template.interpolation[0],\n                        end: component.template.interpolation[1]\n                    };\n                }\n                var /** @type {?} */ bindingParser = new BindingParser(this._exprParser, interpolationConfig, this._schemaRegistry, uniqPipes, errors);\n                var /** @type {?} */ parseVisitor = new TemplateParseVisitor(this._config, providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n                result = visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n                errors.push.apply(errors, providerViewContext.errors);\n                usedPipes.push.apply(usedPipes, bindingParser.getUsedPipes());\n            }\n            else {\n                result = [];\n            }\n            this._assertNoReferenceDuplicationOnTemplate(result, errors);\n            if (errors.length > 0) {\n                return new TemplateParseResult(result, usedPipes, errors);\n            }\n            if (this.transforms) {\n                this.transforms.forEach(function (transform) { result = templateVisitAll(transform, result); });\n            }\n            return new TemplateParseResult(result, usedPipes, errors);\n        };\n        /**\n         * @param {?} htmlAstWithErrors\n         * @param {?=} forced\n         * @return {?}\n         */\n        TemplateParser.prototype.expandHtml = function (htmlAstWithErrors, forced) {\n            if (forced === void 0) { forced = false; }\n            var /** @type {?} */ errors = htmlAstWithErrors.errors;\n            if (errors.length == 0 || forced) {\n                // Transform ICU messages to angular directives\n                var /** @type {?} */ expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n                errors.push.apply(errors, expandedHtmlAst.errors);\n                htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n            }\n            return htmlAstWithErrors;\n        };\n        /**\n         * @param {?} component\n         * @return {?}\n         */\n        TemplateParser.prototype.getInterpolationConfig = function (component) {\n            if (component.template) {\n                return InterpolationConfig.fromArray(component.template.interpolation);\n            }\n        };\n        /**\n         * \\@internal\n         * @param {?} result\n         * @param {?} errors\n         * @return {?}\n         */\n        TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate = function (result, errors) {\n            var /** @type {?} */ existingReferences = [];\n            result.filter(function (element) { return !!((element)).references; })\n                .forEach(function (element) { return ((element)).references.forEach(function (reference) {\n                var /** @type {?} */ name = reference.name;\n                if (existingReferences.indexOf(name) < 0) {\n                    existingReferences.push(name);\n                }\n                else {\n                    var /** @type {?} */ error = new TemplateParseError(\"Reference \\\"#\" + name + \"\\\" is defined several times\", reference.sourceSpan, ParseErrorLevel.ERROR);\n                    errors.push(error);\n                }\n            }); });\n        };\n        return TemplateParser;\n    }());\n    TemplateParser.decorators = [\n        { type: CompilerInjectable },\n    ];\n    /**\n     * @nocollapse\n     */\n    TemplateParser.ctorParameters = function () { return [\n        { type: CompilerConfig, },\n        { type: Parser, },\n        { type: ElementSchemaRegistry, },\n        { type: I18NHtmlParser, },\n        { type: _angular_core.ɵConsole, },\n        { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [TEMPLATE_TRANSFORMS,] },] },\n    ]; };\n    var TemplateParseVisitor = (function () {\n        /**\n         * @param {?} config\n         * @param {?} providerViewContext\n         * @param {?} directives\n         * @param {?} _bindingParser\n         * @param {?} _schemaRegistry\n         * @param {?} _schemas\n         * @param {?} _targetErrors\n         */\n        function TemplateParseVisitor(config, providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n            var _this = this;\n            this.config = config;\n            this.providerViewContext = providerViewContext;\n            this._bindingParser = _bindingParser;\n            this._schemaRegistry = _schemaRegistry;\n            this._schemas = _schemas;\n            this._targetErrors = _targetErrors;\n            this.selectorMatcher = new SelectorMatcher();\n            this.directivesIndex = new Map();\n            this.ngContentCount = 0;\n            // Note: queries start with id 1 so we can use the number in a Bloom filter!\n            this.contentQueryStartId = providerViewContext.component.viewQueries.length + 1;\n            directives.forEach(function (directive, index) {\n                var selector = CssSelector.parse(directive.selector);\n                _this.selectorMatcher.addSelectables(selector, directive);\n                _this.directivesIndex.set(directive, index);\n            });\n        }\n        /**\n         * @param {?} expansion\n         * @param {?} context\n         * @return {?}\n         */\n        TemplateParseVisitor.prototype.visitExpansion = function (expansion, context) { return null; };\n        /**\n         * @param {?} expansionCase\n         * @param {?} context\n         * @return {?}\n         */\n        TemplateParseVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return null; };\n        /**\n         * @param {?} text\n         * @param {?} parent\n         * @return {?}\n         */\n        TemplateParseVisitor.prototype.visitText = function (text, parent) {\n            var /** @type {?} */ ngContentIndex = parent.findNgContentIndex(TEXT_CSS_SELECTOR);\n            var /** @type {?} */ expr = this._bindingParser.parseInterpolation(text.value, text.sourceSpan);\n            return expr ? new BoundTextAst(expr, ngContentIndex, text.sourceSpan) :\n                new TextAst(text.value, ngContentIndex, text.sourceSpan);\n        };\n        /**\n         * @param {?} attribute\n         * @param {?} context\n         * @return {?}\n         */\n        TemplateParseVisitor.prototype.visitAttribute = function (attribute, context) {\n            return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n        };\n        /**\n         * @param {?} comment\n         * @param {?} context\n         * @return {?}\n         */\n        TemplateParseVisitor.prototype.visitComment = function (comment, context) { return null; };\n        /**\n         * @param {?} element\n         * @param {?} parent\n         * @return {?}\n         */\n        TemplateParseVisitor.prototype.visitElement = function (element, parent) {\n            var _this = this;\n            var /** @type {?} */ queryStartIndex = this.contentQueryStartId;\n            var /** @type {?} */ nodeName = element.name;\n            var /** @type {?} */ preparsedElement = preparseElement(element);\n            if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n                preparsedElement.type === PreparsedElementType.STYLE) {\n                // Skipping <script> for security reasons\n                // Skipping <style> as we already processed them\n                // in the StyleCompiler\n                return null;\n            }\n            if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n                isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n                // Skipping stylesheets with either relative urls or package scheme as we already processed\n                // them in the StyleCompiler\n                return null;\n            }\n            var /** @type {?} */ matchableAttrs = [];\n            var /** @type {?} */ elementOrDirectiveProps = [];\n            var /** @type {?} */ elementOrDirectiveRefs = [];\n            var /** @type {?} */ elementVars = [];\n            var /** @type {?} */ events = [];\n            var /** @type {?} */ templateElementOrDirectiveProps = [];\n            var /** @type {?} */ templateMatchableAttrs = [];\n            var /** @type {?} */ templateElementVars = [];\n            var /** @type {?} */ hasInlineTemplates = false;\n            var /** @type {?} */ attrs = [];\n            var /** @type {?} */ isTemplateElement = isTemplate(element, this.config.enableLegacyTemplate, function (m, span) { return _this._reportError(m, span, ParseErrorLevel.WARNING); });\n            element.attrs.forEach(function (attr) {\n                var /** @type {?} */ hasBinding = _this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n                var /** @type {?} */ templateBindingsSource;\n                var /** @type {?} */ prefixToken;\n                var /** @type {?} */ normalizedName = _this._normalizeAttributeName(attr.name);\n                if (_this.config.enableLegacyTemplate && normalizedName == TEMPLATE_ATTR) {\n                    _this._reportError(\"The template attribute is deprecated. Use an ng-template element instead.\", attr.sourceSpan, ParseErrorLevel.WARNING);\n                    templateBindingsSource = attr.value;\n                }\n                else if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n                    templateBindingsSource = attr.value;\n                    prefixToken = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length) + ':';\n                }\n                var /** @type {?} */ hasTemplateBinding = templateBindingsSource != null;\n                if (hasTemplateBinding) {\n                    if (hasInlineTemplates) {\n                        _this._reportError(\"Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *\", attr.sourceSpan);\n                    }\n                    hasInlineTemplates = true;\n                    _this._bindingParser.parseInlineTemplateBinding(prefixToken, templateBindingsSource, attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, templateElementVars);\n                }\n                if (!hasBinding && !hasTemplateBinding) {\n                    // don't include the bindings as attributes as well in the AST\n                    attrs.push(_this.visitAttribute(attr, null));\n                    matchableAttrs.push([attr.name, attr.value]);\n                }\n            });\n            var /** @type {?} */ elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);\n            var _a = this._parseDirectives(this.selectorMatcher, elementCssSelector), directiveMetas = _a.directives, matchElement = _a.matchElement;\n            var /** @type {?} */ references = [];\n            var /** @type {?} */ boundDirectivePropNames = new Set();\n            var /** @type {?} */ directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, element.sourceSpan, references, boundDirectivePropNames);\n            var /** @type {?} */ elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, boundDirectivePropNames);\n            var /** @type {?} */ isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n            var /** @type {?} */ providerContext = new ProviderElementContext(this.providerViewContext, parent.providerContext, isViewRoot, directiveAsts, attrs, references, isTemplateElement, queryStartIndex, element.sourceSpan);\n            var /** @type {?} */ children = visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? parent.providerContext : providerContext));\n            providerContext.afterElement();\n            // Override the actual selector when the `ngProjectAs` attribute is provided\n            var /** @type {?} */ projectionSelector = preparsedElement.projectAs != null ?\n                CssSelector.parse(preparsedElement.projectAs)[0] :\n                elementCssSelector;\n            var /** @type {?} */ ngContentIndex = parent.findNgContentIndex(projectionSelector);\n            var /** @type {?} */ parsedElement;\n            if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n                if (element.children && !element.children.every(_isEmptyTextNode)) {\n                    this._reportError(\"<ng-content> element cannot have content.\", element.sourceSpan);\n                }\n                parsedElement = new NgContentAst(this.ngContentCount++, hasInlineTemplates ? null : ngContentIndex, element.sourceSpan);\n            }\n            else if (isTemplateElement) {\n                this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n                this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, element.sourceSpan);\n                parsedElement = new EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex, element.sourceSpan);\n            }\n            else {\n                this._assertElementExists(matchElement, element);\n                this._assertOnlyOneComponent(directiveAsts, element.sourceSpan);\n                var /** @type {?} */ ngContentIndex_1 = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n                parsedElement = new ElementAst(nodeName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex_1, element.sourceSpan, element.endSourceSpan);\n            }\n            if (hasInlineTemplates) {\n                var /** @type {?} */ templateQueryStartIndex = this.contentQueryStartId;\n                var /** @type {?} */ templateSelector = createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);\n                var templateDirectiveMetas = this._parseDirectives(this.selectorMatcher, templateSelector).directives;\n                var /** @type {?} */ templateBoundDirectivePropNames = new Set();\n                var /** @type {?} */ templateDirectiveAsts = this._createDirectiveAsts(true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [], element.sourceSpan, [], templateBoundDirectivePropNames);\n                var /** @type {?} */ templateElementProps = this._createElementPropertyAsts(element.name, templateElementOrDirectiveProps, templateBoundDirectivePropNames);\n                this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, element.sourceSpan);\n                var /** @type {?} */ templateProviderContext = new ProviderElementContext(this.providerViewContext, parent.providerContext, parent.isTemplateElement, templateDirectiveAsts, [], [], true, templateQueryStartIndex, element.sourceSpan);\n                templateProviderContext.afterElement();\n                parsedElement = new EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches, [parsedElement], ngContentIndex, element.sourceSpan);\n            }\n            return parsedElement;\n        };\n        /**\n         * @param {?} isTemplateElement\n         * @param {?} attr\n         * @param {?} targetMatchableAttrs\n         * @param {?} targetProps\n         * @param {?} targetEvents\n         * @param {?} targetRefs\n         * @param {?} targetVars\n         * @return {?}\n         */\n        TemplateParseVisitor.prototype._parseAttr = function (isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n            var /** @type {?} */ name = this._normalizeAttributeName(attr.name);\n            var /** @type {?} */ value = attr.value;\n            var /** @type {?} */ srcSpan = attr.sourceSpan;\n            var /** @type {?} */ bindParts = name.match(BIND_NAME_REGEXP);\n            var /** @type {?} */ hasBinding = false;\n            if (bindParts !== null) {\n                hasBinding = true;\n                if (bindParts[KW_BIND_IDX] != null) {\n                    this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                }\n                else if (bindParts[KW_LET_IDX]) {\n                    if (isTemplateElement) {\n                        var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                        this._parseVariable(identifier, value, srcSpan, targetVars);\n                    }\n                    else {\n                        this._reportError(\"\\\"let-\\\" is only supported on template elements.\", srcSpan);\n                    }\n                }\n                else if (bindParts[KW_REF_IDX]) {\n                    var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                    this._parseReference(identifier, value, srcSpan, targetRefs);\n                }\n                else if (bindParts[KW_ON_IDX]) {\n                    this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n                }\n                else if (bindParts[KW_BINDON_IDX]) {\n                    this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                    this._parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n                }\n                else if (bindParts[KW_AT_IDX]) {\n                    this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n                }\n                else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                    this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                    this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n                }\n                else if (bindParts[IDENT_PROPERTY_IDX]) {\n                    this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                }\n                else if (bindParts[IDENT_EVENT_IDX]) {\n                    this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n                }\n            }\n            else {\n                hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            if (!hasBinding) {\n                this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            return hasBinding;\n        };\n        /**\n         * @param {?} attrName\n         * @return {?}\n         */\n        TemplateParseVisitor.prototype._normalizeAttributeName = function (attrName) {\n            return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n        };\n        /**\n         * @param {?} identifier\n         * @param {?} value\n         * @param {?} sourceSpan\n         * @param {?} targetVars\n         * @return {?}\n         */\n        TemplateParseVisitor.prototype._parseVariable = function (identifier, value, sourceSpan, targetVars) {\n            if (identifier.indexOf('-') > -1) {\n                this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n            }\n            targetVars.push(new VariableAst(identifier, value, sourceSpan));\n        };\n        /**\n         * @param {?} identifier\n         * @param {?} value\n         * @param {?} sourceSpan\n         * @param {?} targetRefs\n         * @return {?}\n         */\n        TemplateParseVisitor.prototype._parseReference = function (identifier, value, sourceSpan, targetRefs) {\n            if (identifier.indexOf('-') > -1) {\n                this._reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n            }\n            targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n        };\n        /**\n         * @param {?} name\n         * @param {?} expression\n         * @param {?} sourceSpan\n         * @param {?} targetMatchableAttrs\n         * @param {?} targetEvents\n         * @return {?}\n         */\n        TemplateParseVisitor.prototype._parseAssignmentEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n            this._bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\n        };\n        /**\n         * @param {?} selectorMatcher\n         * @param {?} elementCssSelector\n         * @return {?}\n         */\n        TemplateParseVisitor.prototype._parseDirectives = function (selectorMatcher, elementCssSelector) {\n            var _this = this;\n            // Need to sort the directives so that we get consistent results throughout,\n            // as selectorMatcher uses Maps inside.\n            // Also deduplicate directives as they might match more than one time!\n            var /** @type {?} */ directives = new Array(this.directivesIndex.size);\n            // Whether any directive selector matches on the element name\n            var /** @type {?} */ matchElement = false;\n            selectorMatcher.match(elementCssSelector, function (selector, directive) {\n                directives[_this.directivesIndex.get(directive)] = directive;\n                matchElement = matchElement || selector.hasElementSelector();\n            });\n            return {\n                directives: directives.filter(function (dir) { return !!dir; }),\n                matchElement: matchElement,\n            };\n        };\n        /**\n         * @param {?} isTemplateElement\n         * @param {?} elementName\n         * @param {?} directives\n         * @param {?} props\n         * @param {?} elementOrDirectiveRefs\n         * @param {?} elementSourceSpan\n         * @param {?} targetReferences\n         * @param {?} targetBoundDirectivePropNames\n         * @return {?}\n         */\n        TemplateParseVisitor.prototype._createDirectiveAsts = function (isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences, targetBoundDirectivePropNames) {\n            var _this = this;\n            var /** @type {?} */ matchedReferences = new Set();\n            var /** @type {?} */ component = null;\n            var /** @type {?} */ directiveAsts = directives.map(function (directive) {\n                var /** @type {?} */ sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, \"Directive \" + identifierName(directive.type));\n                if (directive.isComponent) {\n                    component = directive;\n                }\n                var /** @type {?} */ directiveProperties = [];\n                var /** @type {?} */ hostProperties = _this._bindingParser.createDirectiveHostPropertyAsts(directive, elementName, sourceSpan);\n                // Note: We need to check the host properties here as well,\n                // as we don't know the element name in the DirectiveWrapperCompiler yet.\n                hostProperties = _this._checkPropertiesInSchema(elementName, hostProperties);\n                var /** @type {?} */ hostEvents = _this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan);\n                _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties, targetBoundDirectivePropNames);\n                elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n                    if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n                        (directive.exportAs == elOrDirRef.value)) {\n                        targetReferences.push(new ReferenceAst(elOrDirRef.name, identifierToken(directive.type), elOrDirRef.sourceSpan));\n                        matchedReferences.add(elOrDirRef.name);\n                    }\n                });\n                var /** @type {?} */ contentQueryStartId = _this.contentQueryStartId;\n                _this.contentQueryStartId += directive.queries.length;\n                return new DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, contentQueryStartId, sourceSpan);\n            });\n            elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n                if (elOrDirRef.value.length > 0) {\n                    if (!matchedReferences.has(elOrDirRef.name)) {\n                        _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + elOrDirRef.value + \"\\\"\", elOrDirRef.sourceSpan);\n                    }\n                }\n                else if (!component) {\n                    var /** @type {?} */ refToken = null;\n                    if (isTemplateElement) {\n                        refToken = createIdentifierToken(Identifiers.TemplateRef);\n                    }\n                    targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.sourceSpan));\n                }\n            });\n            return directiveAsts;\n        };\n        /**\n         * @param {?} directiveProperties\n         * @param {?} boundProps\n         * @param {?} targetBoundDirectiveProps\n         * @param {?} targetBoundDirectivePropNames\n         * @return {?}\n         */\n        TemplateParseVisitor.prototype._createDirectivePropertyAsts = function (directiveProperties, boundProps, targetBoundDirectiveProps, targetBoundDirectivePropNames) {\n            if (directiveProperties) {\n                var /** @type {?} */ boundPropsByName_1 = new Map();\n                boundProps.forEach(function (boundProp) {\n                    var /** @type {?} */ prevValue = boundPropsByName_1.get(boundProp.name);\n                    if (!prevValue || prevValue.isLiteral) {\n                        // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                        boundPropsByName_1.set(boundProp.name, boundProp);\n                    }\n                });\n                Object.keys(directiveProperties).forEach(function (dirProp) {\n                    var /** @type {?} */ elProp = directiveProperties[dirProp];\n                    var /** @type {?} */ boundProp = boundPropsByName_1.get(elProp);\n                    // Bindings are optional, so this binding only needs to be set up if an expression is given.\n                    if (boundProp) {\n                        targetBoundDirectivePropNames.add(boundProp.name);\n                        if (!isEmptyExpression(boundProp.expression)) {\n                            targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n                        }\n                    }\n                });\n            }\n        };\n        /**\n         * @param {?} elementName\n         * @param {?} props\n         * @param {?} boundDirectivePropNames\n         * @return {?}\n         */\n        TemplateParseVisitor.prototype._createElementPropertyAsts = function (elementName, props, boundDirectivePropNames) {\n            var _this = this;\n            var /** @type {?} */ boundElementProps = [];\n            props.forEach(function (prop) {\n                if (!prop.isLiteral && !boundDirectivePropNames.has(prop.name)) {\n                    boundElementProps.push(_this._bindingParser.createElementPropertyAst(elementName, prop));\n                }\n            });\n            return this._checkPropertiesInSchema(elementName, boundElementProps);\n        };\n        /**\n         * @param {?} directives\n         * @return {?}\n         */\n        TemplateParseVisitor.prototype._findComponentDirectives = function (directives) {\n            return directives.filter(function (directive) { return directive.directive.isComponent; });\n        };\n        /**\n         * @param {?} directives\n         * @return {?}\n         */\n        TemplateParseVisitor.prototype._findComponentDirectiveNames = function (directives) {\n            return this._findComponentDirectives(directives)\n                .map(function (directive) { return identifierName(directive.directive.type); });\n        };\n        /**\n         * @param {?} directives\n         * @param {?} sourceSpan\n         * @return {?}\n         */\n        TemplateParseVisitor.prototype._assertOnlyOneComponent = function (directives, sourceSpan) {\n            var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n            if (componentTypeNames.length > 1) {\n                this._reportError(\"More than one component matched on this element.\\n\" +\n                    \"Make sure that only one component's selector can match a given element.\\n\" +\n                    (\"Conflicting components: \" + componentTypeNames.join(',')), sourceSpan);\n            }\n        };\n        /**\n         * Make sure that non-angular tags conform to the schemas.\n         *\n         * Note: An element is considered an angular tag when at least one directive selector matches the\n         * tag name.\n         *\n         * @param {?} matchElement Whether any directive has matched on the tag name\n         * @param {?} element the html element\n         * @return {?}\n         */\n        TemplateParseVisitor.prototype._assertElementExists = function (matchElement, element) {\n            var /** @type {?} */ elName = element.name.replace(/^:xhtml:/, '');\n            if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n                var /** @type {?} */ errorMsg = \"'\" + elName + \"' is not a known element:\\n\";\n                errorMsg +=\n                    \"1. If '\" + elName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n                if (elName.indexOf('-') > -1) {\n                    errorMsg +=\n                        \"2. If '\" + elName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n                }\n                else {\n                    errorMsg +=\n                        \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                this._reportError(errorMsg, element.sourceSpan);\n            }\n        };\n        /**\n         * @param {?} directives\n         * @param {?} elementProps\n         * @param {?} sourceSpan\n         * @return {?}\n         */\n        TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = function (directives, elementProps, sourceSpan) {\n            var _this = this;\n            var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n            if (componentTypeNames.length > 0) {\n                this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\n            }\n            elementProps.forEach(function (prop) {\n                _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", sourceSpan);\n            });\n        };\n        /**\n         * @param {?} directives\n         * @param {?} events\n         * @return {?}\n         */\n        TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = function (directives, events) {\n            var _this = this;\n            var /** @type {?} */ allDirectiveEvents = new Set();\n            directives.forEach(function (directive) {\n                Object.keys(directive.directive.outputs).forEach(function (k) {\n                    var /** @type {?} */ eventName = directive.directive.outputs[k];\n                    allDirectiveEvents.add(eventName);\n                });\n            });\n            events.forEach(function (event) {\n                if (event.target != null || !allDirectiveEvents.has(event.name)) {\n                    _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", event.sourceSpan);\n                }\n            });\n        };\n        /**\n         * @param {?} elementName\n         * @param {?} boundProps\n         * @return {?}\n         */\n        TemplateParseVisitor.prototype._checkPropertiesInSchema = function (elementName, boundProps) {\n            var _this = this;\n            // Note: We can't filter out empty expressions before this method,\n            // as we still want to validate them!\n            return boundProps.filter(function (boundProp) {\n                if (boundProp.type === PropertyBindingType.Property &&\n                    !_this._schemaRegistry.hasProperty(elementName, boundProp.name, _this._schemas)) {\n                    var /** @type {?} */ errorMsg = \"Can't bind to '\" + boundProp.name + \"' since it isn't a known property of '\" + elementName + \"'.\";\n                    if (elementName.startsWith('ng-')) {\n                        errorMsg +=\n                            \"\\n1. If '\" + boundProp.name + \"' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.\" +\n                                \"\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                    }\n                    else if (elementName.indexOf('-') > -1) {\n                        errorMsg +=\n                            \"\\n1. If '\" + elementName + \"' is an Angular component and it has '\" + boundProp.name + \"' input, then verify that it is part of this module.\" +\n                                (\"\\n2. If '\" + elementName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\") +\n                                \"\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                    }\n                    _this._reportError(errorMsg, boundProp.sourceSpan);\n                }\n                return !isEmptyExpression(boundProp.value);\n            });\n        };\n        /**\n         * @param {?} message\n         * @param {?} sourceSpan\n         * @param {?=} level\n         * @return {?}\n         */\n        TemplateParseVisitor.prototype._reportError = function (message, sourceSpan, level) {\n            if (level === void 0) { level = ParseErrorLevel.ERROR; }\n            this._targetErrors.push(new ParseError(sourceSpan, message, level));\n        };\n        return TemplateParseVisitor;\n    }());\n    var NonBindableVisitor = (function () {\n        function NonBindableVisitor() {\n        }\n        /**\n         * @param {?} ast\n         * @param {?} parent\n         * @return {?}\n         */\n        NonBindableVisitor.prototype.visitElement = function (ast, parent) {\n            var /** @type {?} */ preparsedElement = preparseElement(ast);\n            if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n                preparsedElement.type === PreparsedElementType.STYLE ||\n                preparsedElement.type === PreparsedElementType.STYLESHEET) {\n                // Skipping <script> for security reasons\n                // Skipping <style> and stylesheets as we already processed them\n                // in the StyleCompiler\n                return null;\n            }\n            var /** @type {?} */ attrNameAndValues = ast.attrs.map(function (attr) { return [attr.name, attr.value]; });\n            var /** @type {?} */ selector = createElementCssSelector(ast.name, attrNameAndValues);\n            var /** @type {?} */ ngContentIndex = parent.findNgContentIndex(selector);\n            var /** @type {?} */ children = visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n            return new ElementAst(ast.name, visitAll(this, ast.attrs), [], [], [], [], [], false, [], children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n        };\n        /**\n         * @param {?} comment\n         * @param {?} context\n         * @return {?}\n         */\n        NonBindableVisitor.prototype.visitComment = function (comment, context) { return null; };\n        /**\n         * @param {?} attribute\n         * @param {?} context\n         * @return {?}\n         */\n        NonBindableVisitor.prototype.visitAttribute = function (attribute, context) {\n            return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n        };\n        /**\n         * @param {?} text\n         * @param {?} parent\n         * @return {?}\n         */\n        NonBindableVisitor.prototype.visitText = function (text, parent) {\n            var /** @type {?} */ ngContentIndex = parent.findNgContentIndex(TEXT_CSS_SELECTOR);\n            return new TextAst(text.value, ngContentIndex, text.sourceSpan);\n        };\n        /**\n         * @param {?} expansion\n         * @param {?} context\n         * @return {?}\n         */\n        NonBindableVisitor.prototype.visitExpansion = function (expansion, context) { return expansion; };\n        /**\n         * @param {?} expansionCase\n         * @param {?} context\n         * @return {?}\n         */\n        NonBindableVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return expansionCase; };\n        return NonBindableVisitor;\n    }());\n    var ElementOrDirectiveRef = (function () {\n        /**\n         * @param {?} name\n         * @param {?} value\n         * @param {?} sourceSpan\n         */\n        function ElementOrDirectiveRef(name, value, sourceSpan) {\n            this.name = name;\n            this.value = value;\n            this.sourceSpan = sourceSpan;\n        }\n        return ElementOrDirectiveRef;\n    }());\n    /**\n     * @param {?} classAttrValue\n     * @return {?}\n     */\n    function splitClasses(classAttrValue) {\n        return classAttrValue.trim().split(/\\s+/g);\n    }\n    var ElementContext = (function () {\n        /**\n         * @param {?} isTemplateElement\n         * @param {?} _ngContentIndexMatcher\n         * @param {?} _wildcardNgContentIndex\n         * @param {?} providerContext\n         */\n        function ElementContext(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n            this.isTemplateElement = isTemplateElement;\n            this._ngContentIndexMatcher = _ngContentIndexMatcher;\n            this._wildcardNgContentIndex = _wildcardNgContentIndex;\n            this.providerContext = providerContext;\n        }\n        /**\n         * @param {?} isTemplateElement\n         * @param {?} directives\n         * @param {?} providerContext\n         * @return {?}\n         */\n        ElementContext.create = function (isTemplateElement, directives, providerContext) {\n            var /** @type {?} */ matcher = new SelectorMatcher();\n            var /** @type {?} */ wildcardNgContentIndex = null;\n            var /** @type {?} */ component = directives.find(function (directive) { return directive.directive.isComponent; });\n            if (component) {\n                var /** @type {?} */ ngContentSelectors = component.directive.template.ngContentSelectors;\n                for (var /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n                    var /** @type {?} */ selector = ngContentSelectors[i];\n                    if (selector === '*') {\n                        wildcardNgContentIndex = i;\n                    }\n                    else {\n                        matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n                    }\n                }\n            }\n            return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n        };\n        /**\n         * @param {?} selector\n         * @return {?}\n         */\n        ElementContext.prototype.findNgContentIndex = function (selector) {\n            var /** @type {?} */ ngContentIndices = [];\n            this._ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\n            ngContentIndices.sort();\n            if (this._wildcardNgContentIndex != null) {\n                ngContentIndices.push(this._wildcardNgContentIndex);\n            }\n            return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n        };\n        return ElementContext;\n    }());\n    /**\n     * @param {?} elementName\n     * @param {?} attributes\n     * @return {?}\n     */\n    function createElementCssSelector(elementName, attributes) {\n        var /** @type {?} */ cssSelector = new CssSelector();\n        var /** @type {?} */ elNameNoNs = splitNsName(elementName)[1];\n        cssSelector.setElement(elNameNoNs);\n        for (var /** @type {?} */ i = 0; i < attributes.length; i++) {\n            var /** @type {?} */ attrName = attributes[i][0];\n            var /** @type {?} */ attrNameNoNs = splitNsName(attrName)[1];\n            var /** @type {?} */ attrValue = attributes[i][1];\n            cssSelector.addAttribute(attrNameNoNs, attrValue);\n            if (attrName.toLowerCase() == CLASS_ATTR) {\n                var /** @type {?} */ classes = splitClasses(attrValue);\n                classes.forEach(function (className) { return cssSelector.addClassName(className); });\n            }\n        }\n        return cssSelector;\n    }\n    var /** @type {?} */ EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\n    var /** @type {?} */ NON_BINDABLE_VISITOR = new NonBindableVisitor();\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    function _isEmptyTextNode(node) {\n        return node instanceof Text && node.value.trim().length == 0;\n    }\n    /**\n     * @template T\n     * @param {?} items\n     * @return {?}\n     */\n    function removeSummaryDuplicates(items) {\n        var /** @type {?} */ map = new Map();\n        items.forEach(function (item) {\n            if (!map.get(item.type.reference)) {\n                map.set(item.type.reference, item);\n            }\n        });\n        return Array.from(map.values());\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function isEmptyExpression(ast) {\n        if (ast instanceof ASTWithSource) {\n            ast = ast.ast;\n        }\n        return ast instanceof EmptyExpr;\n    }\n    /**\n     * @param {?} el\n     * @param {?} enableLegacyTemplate\n     * @param {?} reportDeprecation\n     * @return {?}\n     */\n    function isTemplate(el, enableLegacyTemplate, reportDeprecation) {\n        var /** @type {?} */ tagNoNs = splitNsName(el.name)[1];\n        // `<ng-template>` is an angular construct and is lower case\n        if (tagNoNs === NG_TEMPLATE_ELEMENT)\n            return true;\n        // `<template>` is HTML and case insensitive\n        if (tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n            if (enableLegacyTemplate && tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n                reportDeprecation(\"The <template> element is deprecated. Use <ng-template> instead\", el.sourceSpan);\n                return true;\n            }\n            return false;\n        }\n    }\n    /**\n     * An interface for retrieving documents by URL that the compiler uses\n     * to load templates.\n     */\n    var ResourceLoader = (function () {\n        function ResourceLoader() {\n        }\n        /**\n         * @param {?} url\n         * @return {?}\n         */\n        ResourceLoader.prototype.get = function (url) { return null; };\n        return ResourceLoader;\n    }());\n    /**\n     * Create a {\\@link UrlResolver} with no package prefix.\n     * @return {?}\n     */\n    function createUrlResolverWithoutPackagePrefix() {\n        return new UrlResolver();\n    }\n    /**\n     * @return {?}\n     */\n    function createOfflineCompileUrlResolver() {\n        return new UrlResolver('.');\n    }\n    /**\n     * A default provider for {@link PACKAGE_ROOT_URL} that maps to '/'.\n     */\n    var /** @type {?} */ DEFAULT_PACKAGE_URL_PROVIDER = {\n        provide: _angular_core.PACKAGE_ROOT_URL,\n        useValue: '/'\n    };\n    /**\n     * Used by the {\\@link Compiler} when resolving HTML and CSS template URLs.\n     *\n     * This class can be overridden by the application developer to create custom behavior.\n     *\n     * See {\\@link Compiler}\n     *\n     * ## Example\n     *\n     * {\\@example compiler/ts/url_resolver/url_resolver.ts region='url_resolver'}\n     *\n     * \\@security When compiling templates at runtime, you must\n     * ensure that the entire template comes from a trusted source.\n     * Attacker-controlled data introduced by a template could expose your\n     * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n     */\n    var UrlResolver = (function () {\n        /**\n         * @param {?=} _packagePrefix\n         */\n        function UrlResolver(_packagePrefix) {\n            if (_packagePrefix === void 0) { _packagePrefix = null; }\n            this._packagePrefix = _packagePrefix;\n        }\n        /**\n         * Resolves the `url` given the `baseUrl`:\n         * - when the `url` is null, the `baseUrl` is returned,\n         * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n         * `baseUrl` and `url`,\n         * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n         * returned as is (ignoring the `baseUrl`)\n         * @param {?} baseUrl\n         * @param {?} url\n         * @return {?}\n         */\n        UrlResolver.prototype.resolve = function (baseUrl, url) {\n            var /** @type {?} */ resolvedUrl = url;\n            if (baseUrl != null && baseUrl.length > 0) {\n                resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n            }\n            var /** @type {?} */ resolvedParts = _split(resolvedUrl);\n            var /** @type {?} */ prefix = this._packagePrefix;\n            if (prefix != null && resolvedParts != null &&\n                resolvedParts[_ComponentIndex.Scheme] == 'package') {\n                var /** @type {?} */ path = resolvedParts[_ComponentIndex.Path];\n                prefix = prefix.replace(/\\/+$/, '');\n                path = path.replace(/^\\/+/, '');\n                return prefix + \"/\" + path;\n            }\n            return resolvedUrl;\n        };\n        return UrlResolver;\n    }());\n    UrlResolver.decorators = [\n        { type: CompilerInjectable },\n    ];\n    /**\n     * @nocollapse\n     */\n    UrlResolver.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.PACKAGE_ROOT_URL,] },] },\n    ]; };\n    /**\n     * Extract the scheme of a URL.\n     * @param {?} url\n     * @return {?}\n     */\n    function getUrlScheme(url) {\n        var /** @type {?} */ match = _split(url);\n        return (match && match[_ComponentIndex.Scheme]) || '';\n    }\n    /**\n     * Builds a URI string from already-encoded parts.\n     *\n     * No encoding is performed.  Any component may be omitted as either null or\n     * undefined.\n     *\n     * @param {?=} opt_scheme The scheme such as 'http'.\n     * @param {?=} opt_userInfo The user name before the '\\@'.\n     * @param {?=} opt_domain The domain such as 'www.google.com', already\n     *     URI-encoded.\n     * @param {?=} opt_port The port number.\n     * @param {?=} opt_path The path, already URI-encoded.  If it is not\n     *     empty, it must begin with a slash.\n     * @param {?=} opt_queryData The URI-encoded query data.\n     * @param {?=} opt_fragment The URI-encoded fragment identifier.\n     * @return {?} The fully combined URI.\n     */\n    function _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n        var /** @type {?} */ out = [];\n        if (opt_scheme != null) {\n            out.push(opt_scheme + ':');\n        }\n        if (opt_domain != null) {\n            out.push('//');\n            if (opt_userInfo != null) {\n                out.push(opt_userInfo + '@');\n            }\n            out.push(opt_domain);\n            if (opt_port != null) {\n                out.push(':' + opt_port);\n            }\n        }\n        if (opt_path != null) {\n            out.push(opt_path);\n        }\n        if (opt_queryData != null) {\n            out.push('?' + opt_queryData);\n        }\n        if (opt_fragment != null) {\n            out.push('#' + opt_fragment);\n        }\n        return out.join('');\n    }\n    /**\n     * A regular expression for breaking a URI into its component parts.\n     *\n     * {\\@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n     * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n     * disambiguation method used by POSIX regular expressions, it is natural and\n     * commonplace to use a regular expression for parsing the potential five\n     * components of a URI reference.\n     *\n     * The following line is the regular expression for breaking-down a\n     * well-formed URI reference into its components.\n     *\n     * <pre>\n     * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n     *  12            3  4          5       6  7        8 9\n     * </pre>\n     *\n     * The numbers in the second line above are only to assist readability; they\n     * indicate the reference points for each subexpression (i.e., each paired\n     * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n     * For example, matching the above expression to\n     * <pre>\n     *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n     * </pre>\n     * results in the following subexpression matches:\n     * <pre>\n     *    $1 = http:\n     *    $2 = http\n     *    $3 = //www.ics.uci.edu\n     *    $4 = www.ics.uci.edu\n     *    $5 = /pub/ietf/uri/\n     *    $6 = <undefined>\n     *    $7 = <undefined>\n     *    $8 = #Related\n     *    $9 = Related\n     * </pre>\n     * where <undefined> indicates that the component is not present, as is the\n     * case for the query component in the above example. Therefore, we can\n     * determine the value of the five components as\n     * <pre>\n     *    scheme    = $2\n     *    authority = $4\n     *    path      = $5\n     *    query     = $7\n     *    fragment  = $9\n     * </pre>\n     *\n     * The regular expression has been modified slightly to expose the\n     * userInfo, domain, and port separately from the authority.\n     * The modified version yields\n     * <pre>\n     *    $1 = http              scheme\n     *    $2 = <undefined>       userInfo -\\\n     *    $3 = www.ics.uci.edu   domain     | authority\n     *    $4 = <undefined>       port     -/\n     *    $5 = /pub/ietf/uri/    path\n     *    $6 = <undefined>       query without ?\n     *    $7 = Related           fragment without #\n     * </pre>\n     * \\@internal\n     */\n    var _splitRe = new RegExp('^' +\n        '(?:' +\n        '([^:/?#.]+)' +\n        // used by other URL parts such as :,\n        // ?, /, #, and .\n        ':)?' +\n        '(?://' +\n        '(?:([^/?#]*)@)?' +\n        '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' +\n        // digits, dashes, dots, percent\n        // escapes, and unicode characters.\n        '(?::([0-9]+))?' +\n        ')?' +\n        '([^?#]+)?' +\n        '(?:\\\\?([^#]*))?' +\n        '(?:#(.*))?' +\n        '$');\n    var _ComponentIndex = {};\n    _ComponentIndex.Scheme = 1;\n    _ComponentIndex.UserInfo = 2;\n    _ComponentIndex.Domain = 3;\n    _ComponentIndex.Port = 4;\n    _ComponentIndex.Path = 5;\n    _ComponentIndex.QueryData = 6;\n    _ComponentIndex.Fragment = 7;\n    _ComponentIndex[_ComponentIndex.Scheme] = \"Scheme\";\n    _ComponentIndex[_ComponentIndex.UserInfo] = \"UserInfo\";\n    _ComponentIndex[_ComponentIndex.Domain] = \"Domain\";\n    _ComponentIndex[_ComponentIndex.Port] = \"Port\";\n    _ComponentIndex[_ComponentIndex.Path] = \"Path\";\n    _ComponentIndex[_ComponentIndex.QueryData] = \"QueryData\";\n    _ComponentIndex[_ComponentIndex.Fragment] = \"Fragment\";\n    /**\n     * Splits a URI into its component parts.\n     *\n     * Each component can be accessed via the component indices; for example:\n     * <pre>\n     * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n     * </pre>\n     *\n     * @param {?} uri The URI string to examine.\n     * @return {?} Each component still URI-encoded.\n     *     Each component that is present will contain the encoded value, whereas\n     *     components that are not present will be undefined or empty, depending\n     *     on the browser's regular expression implementation.  Never null, since\n     *     arbitrary strings may still look like path names.\n     */\n    function _split(uri) {\n        return uri.match(_splitRe);\n    }\n    /**\n     * Removes dot segments in given path component, as described in\n     * RFC 3986, section 5.2.4.\n     *\n     * @param {?} path A non-empty path component.\n     * @return {?} Path component with removed dot segments.\n     */\n    function _removeDotSegments(path) {\n        if (path == '/')\n            return '/';\n        var /** @type {?} */ leadingSlash = path[0] == '/' ? '/' : '';\n        var /** @type {?} */ trailingSlash = path[path.length - 1] === '/' ? '/' : '';\n        var /** @type {?} */ segments = path.split('/');\n        var /** @type {?} */ out = [];\n        var /** @type {?} */ up = 0;\n        for (var /** @type {?} */ pos = 0; pos < segments.length; pos++) {\n            var /** @type {?} */ segment = segments[pos];\n            switch (segment) {\n                case '':\n                case '.':\n                    break;\n                case '..':\n                    if (out.length > 0) {\n                        out.pop();\n                    }\n                    else {\n                        up++;\n                    }\n                    break;\n                default:\n                    out.push(segment);\n            }\n        }\n        if (leadingSlash == '') {\n            while (up-- > 0) {\n                out.unshift('..');\n            }\n            if (out.length === 0)\n                out.push('.');\n        }\n        return leadingSlash + out.join('/') + trailingSlash;\n    }\n    /**\n     * Takes an array of the parts from split and canonicalizes the path part\n     * and then joins all the parts.\n     * @param {?} parts\n     * @return {?}\n     */\n    function _joinAndCanonicalizePath(parts) {\n        var /** @type {?} */ path = parts[_ComponentIndex.Path];\n        path = path == null ? '' : _removeDotSegments(path);\n        parts[_ComponentIndex.Path] = path;\n        return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n    }\n    /**\n     * Resolves a URL.\n     * @param {?} base The URL acting as the base URL.\n     * @param {?} url\n     * @return {?}\n     */\n    function _resolveUrl(base, url) {\n        var /** @type {?} */ parts = _split(encodeURI(url));\n        var /** @type {?} */ baseParts = _split(base);\n        if (parts[_ComponentIndex.Scheme] != null) {\n            return _joinAndCanonicalizePath(parts);\n        }\n        else {\n            parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n        }\n        for (var /** @type {?} */ i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n            if (parts[i] == null) {\n                parts[i] = baseParts[i];\n            }\n        }\n        if (parts[_ComponentIndex.Path][0] == '/') {\n            return _joinAndCanonicalizePath(parts);\n        }\n        var /** @type {?} */ path = baseParts[_ComponentIndex.Path];\n        if (path == null)\n            path = '/';\n        var /** @type {?} */ index = path.lastIndexOf('/');\n        path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];\n        parts[_ComponentIndex.Path] = path;\n        return _joinAndCanonicalizePath(parts);\n    }\n    var DirectiveNormalizer = (function () {\n        /**\n         * @param {?} _resourceLoader\n         * @param {?} _urlResolver\n         * @param {?} _htmlParser\n         * @param {?} _config\n         */\n        function DirectiveNormalizer(_resourceLoader, _urlResolver, _htmlParser, _config) {\n            this._resourceLoader = _resourceLoader;\n            this._urlResolver = _urlResolver;\n            this._htmlParser = _htmlParser;\n            this._config = _config;\n            this._resourceLoaderCache = new Map();\n        }\n        /**\n         * @return {?}\n         */\n        DirectiveNormalizer.prototype.clearCache = function () { this._resourceLoaderCache.clear(); };\n        /**\n         * @param {?} normalizedDirective\n         * @return {?}\n         */\n        DirectiveNormalizer.prototype.clearCacheFor = function (normalizedDirective) {\n            var _this = this;\n            if (!normalizedDirective.isComponent) {\n                return;\n            }\n            this._resourceLoaderCache.delete(normalizedDirective.template.templateUrl);\n            normalizedDirective.template.externalStylesheets.forEach(function (stylesheet) { _this._resourceLoaderCache.delete(stylesheet.moduleUrl); });\n        };\n        /**\n         * @param {?} url\n         * @return {?}\n         */\n        DirectiveNormalizer.prototype._fetch = function (url) {\n            var /** @type {?} */ result = this._resourceLoaderCache.get(url);\n            if (!result) {\n                result = this._resourceLoader.get(url);\n                this._resourceLoaderCache.set(url, result);\n            }\n            return result;\n        };\n        /**\n         * @param {?} prenormData\n         * @return {?}\n         */\n        DirectiveNormalizer.prototype.normalizeTemplate = function (prenormData) {\n            var _this = this;\n            var /** @type {?} */ normalizedTemplateSync = null;\n            var /** @type {?} */ normalizedTemplateAsync;\n            if (prenormData.template != null) {\n                if (typeof prenormData.template !== 'string') {\n                    throw syntaxError(\"The template specified for component \" + _angular_core.ɵstringify(prenormData.componentType) + \" is not a string\");\n                }\n                normalizedTemplateSync = this.normalizeTemplateSync(prenormData);\n                normalizedTemplateAsync = Promise.resolve(normalizedTemplateSync);\n            }\n            else if (prenormData.templateUrl) {\n                if (typeof prenormData.templateUrl !== 'string') {\n                    throw syntaxError(\"The templateUrl specified for component \" + _angular_core.ɵstringify(prenormData.componentType) + \" is not a string\");\n                }\n                normalizedTemplateAsync = this.normalizeTemplateAsync(prenormData);\n            }\n            else {\n                throw syntaxError(\"No template specified for component \" + _angular_core.ɵstringify(prenormData.componentType));\n            }\n            if (normalizedTemplateSync && normalizedTemplateSync.styleUrls.length === 0) {\n                // sync case\n                return new SyncAsyncResult(normalizedTemplateSync);\n            }\n            else {\n                // async case\n                return new SyncAsyncResult(null, normalizedTemplateAsync.then(function (normalizedTemplate) { return _this.normalizeExternalStylesheets(normalizedTemplate); }));\n            }\n        };\n        /**\n         * @param {?} prenomData\n         * @return {?}\n         */\n        DirectiveNormalizer.prototype.normalizeTemplateSync = function (prenomData) {\n            return this.normalizeLoadedTemplate(prenomData, prenomData.template, prenomData.moduleUrl);\n        };\n        /**\n         * @param {?} prenomData\n         * @return {?}\n         */\n        DirectiveNormalizer.prototype.normalizeTemplateAsync = function (prenomData) {\n            var _this = this;\n            var /** @type {?} */ templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, prenomData.templateUrl);\n            return this._fetch(templateUrl)\n                .then(function (value) { return _this.normalizeLoadedTemplate(prenomData, value, templateUrl); });\n        };\n        /**\n         * @param {?} prenormData\n         * @param {?} template\n         * @param {?} templateAbsUrl\n         * @return {?}\n         */\n        DirectiveNormalizer.prototype.normalizeLoadedTemplate = function (prenormData, template, templateAbsUrl) {\n            var /** @type {?} */ isInline = !!prenormData.template;\n            var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(prenormData.interpolation);\n            var /** @type {?} */ rootNodesAndErrors = this._htmlParser.parse(template, templateSourceUrl({ reference: prenormData.ngModuleType }, { type: { reference: prenormData.componentType } }, { isInline: isInline, templateUrl: templateAbsUrl }), true, interpolationConfig);\n            if (rootNodesAndErrors.errors.length > 0) {\n                var /** @type {?} */ errorString = rootNodesAndErrors.errors.join('\\n');\n                throw syntaxError(\"Template parse errors:\\n\" + errorString);\n            }\n            var /** @type {?} */ templateMetadataStyles = this.normalizeStylesheet(new CompileStylesheetMetadata({\n                styles: prenormData.styles,\n                styleUrls: prenormData.styleUrls,\n                moduleUrl: prenormData.moduleUrl\n            }));\n            var /** @type {?} */ visitor = new TemplatePreparseVisitor();\n            visitAll(visitor, rootNodesAndErrors.rootNodes);\n            var /** @type {?} */ templateStyles = this.normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n            var /** @type {?} */ encapsulation = prenormData.encapsulation;\n            if (encapsulation == null) {\n                encapsulation = this._config.defaultEncapsulation;\n            }\n            var /** @type {?} */ styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n            var /** @type {?} */ styleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n            if (encapsulation === _angular_core.ViewEncapsulation.Emulated && styles.length === 0 &&\n                styleUrls.length === 0) {\n                encapsulation = _angular_core.ViewEncapsulation.None;\n            }\n            return new CompileTemplateMetadata({\n                encapsulation: encapsulation,\n                template: template,\n                templateUrl: templateAbsUrl, styles: styles, styleUrls: styleUrls,\n                ngContentSelectors: visitor.ngContentSelectors,\n                animations: prenormData.animations,\n                interpolation: prenormData.interpolation, isInline: isInline\n            });\n        };\n        /**\n         * @param {?} templateMeta\n         * @return {?}\n         */\n        DirectiveNormalizer.prototype.normalizeExternalStylesheets = function (templateMeta) {\n            return this._loadMissingExternalStylesheets(templateMeta.styleUrls)\n                .then(function (externalStylesheets) { return new CompileTemplateMetadata({\n                encapsulation: templateMeta.encapsulation,\n                template: templateMeta.template,\n                templateUrl: templateMeta.templateUrl,\n                styles: templateMeta.styles,\n                styleUrls: templateMeta.styleUrls,\n                externalStylesheets: externalStylesheets,\n                ngContentSelectors: templateMeta.ngContentSelectors,\n                animations: templateMeta.animations,\n                interpolation: templateMeta.interpolation,\n                isInline: templateMeta.isInline,\n            }); });\n        };\n        /**\n         * @param {?} styleUrls\n         * @param {?=} loadedStylesheets\n         * @return {?}\n         */\n        DirectiveNormalizer.prototype._loadMissingExternalStylesheets = function (styleUrls, loadedStylesheets) {\n            var _this = this;\n            if (loadedStylesheets === void 0) { loadedStylesheets = new Map(); }\n            return Promise\n                .all(styleUrls.filter(function (styleUrl) { return !loadedStylesheets.has(styleUrl); })\n                .map(function (styleUrl) { return _this._fetch(styleUrl).then(function (loadedStyle) {\n                var /** @type {?} */ stylesheet = _this.normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n                loadedStylesheets.set(styleUrl, stylesheet);\n                return _this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n            }); }))\n                .then(function (_) { return Array.from(loadedStylesheets.values()); });\n        };\n        /**\n         * @param {?} stylesheet\n         * @return {?}\n         */\n        DirectiveNormalizer.prototype.normalizeStylesheet = function (stylesheet) {\n            var _this = this;\n            var /** @type {?} */ allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n                .map(function (url) { return _this._urlResolver.resolve(stylesheet.moduleUrl, url); });\n            var /** @type {?} */ allStyles = stylesheet.styles.map(function (style) {\n                var /** @type {?} */ styleWithImports = extractStyleUrls(_this._urlResolver, stylesheet.moduleUrl, style);\n                allStyleUrls.push.apply(allStyleUrls, styleWithImports.styleUrls);\n                return styleWithImports.style;\n            });\n            return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: stylesheet.moduleUrl });\n        };\n        return DirectiveNormalizer;\n    }());\n    DirectiveNormalizer.decorators = [\n        { type: CompilerInjectable },\n    ];\n    /**\n     * @nocollapse\n     */\n    DirectiveNormalizer.ctorParameters = function () { return [\n        { type: ResourceLoader, },\n        { type: UrlResolver, },\n        { type: HtmlParser, },\n        { type: CompilerConfig, },\n    ]; };\n    var TemplatePreparseVisitor = (function () {\n        function TemplatePreparseVisitor() {\n            this.ngContentSelectors = [];\n            this.styles = [];\n            this.styleUrls = [];\n            this.ngNonBindableStackCount = 0;\n        }\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        TemplatePreparseVisitor.prototype.visitElement = function (ast, context) {\n            var /** @type {?} */ preparsedElement = preparseElement(ast);\n            switch (preparsedElement.type) {\n                case PreparsedElementType.NG_CONTENT:\n                    if (this.ngNonBindableStackCount === 0) {\n                        this.ngContentSelectors.push(preparsedElement.selectAttr);\n                    }\n                    break;\n                case PreparsedElementType.STYLE:\n                    var /** @type {?} */ textContent_1 = '';\n                    ast.children.forEach(function (child) {\n                        if (child instanceof Text) {\n                            textContent_1 += child.value;\n                        }\n                    });\n                    this.styles.push(textContent_1);\n                    break;\n                case PreparsedElementType.STYLESHEET:\n                    this.styleUrls.push(preparsedElement.hrefAttr);\n                    break;\n                default:\n                    break;\n            }\n            if (preparsedElement.nonBindable) {\n                this.ngNonBindableStackCount++;\n            }\n            visitAll(this, ast.children);\n            if (preparsedElement.nonBindable) {\n                this.ngNonBindableStackCount--;\n            }\n            return null;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        TemplatePreparseVisitor.prototype.visitExpansion = function (ast, context) { visitAll(this, ast.cases); };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        TemplatePreparseVisitor.prototype.visitExpansionCase = function (ast, context) {\n            visitAll(this, ast.expression);\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        TemplatePreparseVisitor.prototype.visitComment = function (ast, context) { return null; };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        TemplatePreparseVisitor.prototype.visitAttribute = function (ast, context) { return null; };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        TemplatePreparseVisitor.prototype.visitText = function (ast, context) { return null; };\n        return TemplatePreparseVisitor;\n    }());\n    var DirectiveResolver = (function () {\n        /**\n         * @param {?=} _reflector\n         */\n        function DirectiveResolver(_reflector) {\n            if (_reflector === void 0) { _reflector = _angular_core.ɵreflector; }\n            this._reflector = _reflector;\n        }\n        /**\n         * @param {?} type\n         * @return {?}\n         */\n        DirectiveResolver.prototype.isDirective = function (type) {\n            var /** @type {?} */ typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n            return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n        };\n        /**\n         * Return {\\@link Directive} for a given `Type`.\n         * @param {?} type\n         * @param {?=} throwIfNotFound\n         * @return {?}\n         */\n        DirectiveResolver.prototype.resolve = function (type, throwIfNotFound) {\n            if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n            var /** @type {?} */ typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n            if (typeMetadata) {\n                var /** @type {?} */ metadata = findLast(typeMetadata, isDirectiveMetadata);\n                if (metadata) {\n                    var /** @type {?} */ propertyMetadata = this._reflector.propMetadata(type);\n                    return this._mergeWithPropertyMetadata(metadata, propertyMetadata, type);\n                }\n            }\n            if (throwIfNotFound) {\n                throw new Error(\"No Directive annotation found on \" + _angular_core.ɵstringify(type));\n            }\n            return null;\n        };\n        /**\n         * @param {?} dm\n         * @param {?} propertyMetadata\n         * @param {?} directiveType\n         * @return {?}\n         */\n        DirectiveResolver.prototype._mergeWithPropertyMetadata = function (dm, propertyMetadata, directiveType) {\n            var /** @type {?} */ inputs = [];\n            var /** @type {?} */ outputs = [];\n            var /** @type {?} */ host = {};\n            var /** @type {?} */ queries = {};\n            Object.keys(propertyMetadata).forEach(function (propName) {\n                var /** @type {?} */ input = findLast(propertyMetadata[propName], function (a) { return a instanceof _angular_core.Input; });\n                if (input) {\n                    if (input.bindingPropertyName) {\n                        inputs.push(propName + \": \" + input.bindingPropertyName);\n                    }\n                    else {\n                        inputs.push(propName);\n                    }\n                }\n                var /** @type {?} */ output = findLast(propertyMetadata[propName], function (a) { return a instanceof _angular_core.Output; });\n                if (output) {\n                    if (output.bindingPropertyName) {\n                        outputs.push(propName + \": \" + output.bindingPropertyName);\n                    }\n                    else {\n                        outputs.push(propName);\n                    }\n                }\n                var /** @type {?} */ hostBindings = propertyMetadata[propName].filter(function (a) { return a && a instanceof _angular_core.HostBinding; });\n                hostBindings.forEach(function (hostBinding) {\n                    if (hostBinding.hostPropertyName) {\n                        var /** @type {?} */ startWith = hostBinding.hostPropertyName[0];\n                        if (startWith === '(') {\n                            throw new Error(\"@HostBinding can not bind to events. Use @HostListener instead.\");\n                        }\n                        else if (startWith === '[') {\n                            throw new Error(\"@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.\");\n                        }\n                        host[\"[\" + hostBinding.hostPropertyName + \"]\"] = propName;\n                    }\n                    else {\n                        host[\"[\" + propName + \"]\"] = propName;\n                    }\n                });\n                var /** @type {?} */ hostListeners = propertyMetadata[propName].filter(function (a) { return a && a instanceof _angular_core.HostListener; });\n                hostListeners.forEach(function (hostListener) {\n                    var /** @type {?} */ args = hostListener.args || [];\n                    host[\"(\" + hostListener.eventName + \")\"] = propName + \"(\" + args.join(',') + \")\";\n                });\n                var /** @type {?} */ query = findLast(propertyMetadata[propName], function (a) { return a instanceof _angular_core.Query; });\n                if (query) {\n                    queries[propName] = query;\n                }\n            });\n            return this._merge(dm, inputs, outputs, host, queries, directiveType);\n        };\n        /**\n         * @param {?} def\n         * @return {?}\n         */\n        DirectiveResolver.prototype._extractPublicName = function (def) { return splitAtColon(def, [null, def])[1].trim(); };\n        /**\n         * @param {?} bindings\n         * @return {?}\n         */\n        DirectiveResolver.prototype._dedupeBindings = function (bindings) {\n            var /** @type {?} */ names = new Set();\n            var /** @type {?} */ reversedResult = [];\n            // go last to first to allow later entries to overwrite previous entries\n            for (var /** @type {?} */ i = bindings.length - 1; i >= 0; i--) {\n                var /** @type {?} */ binding = bindings[i];\n                var /** @type {?} */ name = this._extractPublicName(binding);\n                if (!names.has(name)) {\n                    names.add(name);\n                    reversedResult.push(binding);\n                }\n            }\n            return reversedResult.reverse();\n        };\n        /**\n         * @param {?} directive\n         * @param {?} inputs\n         * @param {?} outputs\n         * @param {?} host\n         * @param {?} queries\n         * @param {?} directiveType\n         * @return {?}\n         */\n        DirectiveResolver.prototype._merge = function (directive, inputs, outputs, host, queries, directiveType) {\n            var /** @type {?} */ mergedInputs = this._dedupeBindings(directive.inputs ? directive.inputs.concat(inputs) : inputs);\n            var /** @type {?} */ mergedOutputs = this._dedupeBindings(directive.outputs ? directive.outputs.concat(outputs) : outputs);\n            var /** @type {?} */ mergedHost = directive.host ? _angular_core.ɵmerge(directive.host, host) : host;\n            var /** @type {?} */ mergedQueries = directive.queries ? _angular_core.ɵmerge(directive.queries, queries) : queries;\n            if (directive instanceof _angular_core.Component) {\n                return new _angular_core.Component({\n                    selector: directive.selector,\n                    inputs: mergedInputs,\n                    outputs: mergedOutputs,\n                    host: mergedHost,\n                    exportAs: directive.exportAs,\n                    moduleId: directive.moduleId,\n                    queries: mergedQueries,\n                    changeDetection: directive.changeDetection,\n                    providers: directive.providers,\n                    viewProviders: directive.viewProviders,\n                    entryComponents: directive.entryComponents,\n                    template: directive.template,\n                    templateUrl: directive.templateUrl,\n                    styles: directive.styles,\n                    styleUrls: directive.styleUrls,\n                    encapsulation: directive.encapsulation,\n                    animations: directive.animations,\n                    interpolation: directive.interpolation\n                });\n            }\n            else {\n                return new _angular_core.Directive({\n                    selector: directive.selector,\n                    inputs: mergedInputs,\n                    outputs: mergedOutputs,\n                    host: mergedHost,\n                    exportAs: directive.exportAs,\n                    queries: mergedQueries,\n                    providers: directive.providers\n                });\n            }\n        };\n        return DirectiveResolver;\n    }());\n    DirectiveResolver.decorators = [\n        { type: CompilerInjectable },\n    ];\n    /**\n     * @nocollapse\n     */\n    DirectiveResolver.ctorParameters = function () { return [\n        { type: _angular_core.ɵReflectorReader, },\n    ]; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    function isDirectiveMetadata(type) {\n        return type instanceof _angular_core.Directive;\n    }\n    /**\n     * @template T\n     * @param {?} arr\n     * @param {?} condition\n     * @return {?}\n     */\n    function findLast(arr, condition) {\n        for (var /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n            if (condition(arr[i])) {\n                return arr[i];\n            }\n        }\n        return null;\n    }\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\n    var /** @type {?} */ NG_FACTORY = /\\.ngfactory\\./;\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function ngfactoryFilePath(filePath) {\n        var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(filePath);\n        return urlWithSuffix[0] + \".ngfactory\" + urlWithSuffix[1];\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function stripNgFactory(filePath) {\n        return filePath.replace(NG_FACTORY, '.');\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function isNgFactoryFile(filePath) {\n        return NG_FACTORY.test(filePath);\n    }\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    function splitTypescriptSuffix(path) {\n        if (path.endsWith('.d.ts')) {\n            return [path.slice(0, -5), '.ts'];\n        }\n        var /** @type {?} */ lastDot = path.lastIndexOf('.');\n        if (lastDot !== -1) {\n            return [path.substring(0, lastDot), path.substring(lastDot)];\n        }\n        return [path, ''];\n    }\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function summaryFileName(fileName) {\n        var /** @type {?} */ fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n        return fileNameWithoutSuffix + \".ngsummary.json\";\n    }\n    /**\n     * @param {?} hook\n     * @param {?} token\n     * @return {?}\n     */\n    function hasLifecycleHook(hook, token) {\n        return _angular_core.ɵreflector.hasLifecycleHook(token, getHookName(hook));\n    }\n    /**\n     * @param {?} hook\n     * @return {?}\n     */\n    function getHookName(hook) {\n        switch (hook) {\n            case _angular_core.ɵLifecycleHooks.OnInit:\n                return 'ngOnInit';\n            case _angular_core.ɵLifecycleHooks.OnDestroy:\n                return 'ngOnDestroy';\n            case _angular_core.ɵLifecycleHooks.DoCheck:\n                return 'ngDoCheck';\n            case _angular_core.ɵLifecycleHooks.OnChanges:\n                return 'ngOnChanges';\n            case _angular_core.ɵLifecycleHooks.AfterContentInit:\n                return 'ngAfterContentInit';\n            case _angular_core.ɵLifecycleHooks.AfterContentChecked:\n                return 'ngAfterContentChecked';\n            case _angular_core.ɵLifecycleHooks.AfterViewInit:\n                return 'ngAfterViewInit';\n            case _angular_core.ɵLifecycleHooks.AfterViewChecked:\n                return 'ngAfterViewChecked';\n        }\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function _isNgModuleMetadata(obj) {\n        return obj instanceof _angular_core.NgModule;\n    }\n    /**\n     * Resolves types to {\\@link NgModule}.\n     */\n    var NgModuleResolver = (function () {\n        /**\n         * @param {?=} _reflector\n         */\n        function NgModuleResolver(_reflector) {\n            if (_reflector === void 0) { _reflector = _angular_core.ɵreflector; }\n            this._reflector = _reflector;\n        }\n        /**\n         * @param {?} type\n         * @return {?}\n         */\n        NgModuleResolver.prototype.isNgModule = function (type) { return this._reflector.annotations(type).some(_isNgModuleMetadata); };\n        /**\n         * @param {?} type\n         * @param {?=} throwIfNotFound\n         * @return {?}\n         */\n        NgModuleResolver.prototype.resolve = function (type, throwIfNotFound) {\n            if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n            var /** @type {?} */ ngModuleMeta = findLast(this._reflector.annotations(type), _isNgModuleMetadata);\n            if (ngModuleMeta) {\n                return ngModuleMeta;\n            }\n            else {\n                if (throwIfNotFound) {\n                    throw new Error(\"No NgModule metadata found for '\" + _angular_core.ɵstringify(type) + \"'.\");\n                }\n                return null;\n            }\n        };\n        return NgModuleResolver;\n    }());\n    NgModuleResolver.decorators = [\n        { type: CompilerInjectable },\n    ];\n    /**\n     * @nocollapse\n     */\n    NgModuleResolver.ctorParameters = function () { return [\n        { type: _angular_core.ɵReflectorReader, },\n    ]; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    function _isPipeMetadata(type) {\n        return type instanceof _angular_core.Pipe;\n    }\n    /**\n     * Resolve a `Type` for {\\@link Pipe}.\n     *\n     * This interface can be overridden by the application developer to create custom behavior.\n     *\n     * See {\\@link Compiler}\n     */\n    var PipeResolver = (function () {\n        /**\n         * @param {?=} _reflector\n         */\n        function PipeResolver(_reflector) {\n            if (_reflector === void 0) { _reflector = _angular_core.ɵreflector; }\n            this._reflector = _reflector;\n        }\n        /**\n         * @param {?} type\n         * @return {?}\n         */\n        PipeResolver.prototype.isPipe = function (type) {\n            var /** @type {?} */ typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n            return typeMetadata && typeMetadata.some(_isPipeMetadata);\n        };\n        /**\n         * Return {\\@link Pipe} for a given `Type`.\n         * @param {?} type\n         * @param {?=} throwIfNotFound\n         * @return {?}\n         */\n        PipeResolver.prototype.resolve = function (type, throwIfNotFound) {\n            if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n            var /** @type {?} */ metas = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n            if (metas) {\n                var /** @type {?} */ annotation = findLast(metas, _isPipeMetadata);\n                if (annotation) {\n                    return annotation;\n                }\n            }\n            if (throwIfNotFound) {\n                throw new Error(\"No Pipe decorator found on \" + _angular_core.ɵstringify(type));\n            }\n            return null;\n        };\n        return PipeResolver;\n    }());\n    PipeResolver.decorators = [\n        { type: CompilerInjectable },\n    ];\n    /**\n     * @nocollapse\n     */\n    PipeResolver.ctorParameters = function () { return [\n        { type: _angular_core.ɵReflectorReader, },\n    ]; };\n    var SummaryResolver = (function () {\n        function SummaryResolver() {\n        }\n        /**\n         * @param {?} fileName\n         * @return {?}\n         */\n        SummaryResolver.prototype.isLibraryFile = function (fileName) { return false; };\n        ;\n        /**\n         * @param {?} fileName\n         * @return {?}\n         */\n        SummaryResolver.prototype.getLibraryFileName = function (fileName) { return null; };\n        /**\n         * @param {?} reference\n         * @return {?}\n         */\n        SummaryResolver.prototype.resolveSummary = function (reference) { return null; };\n        ;\n        /**\n         * @param {?} filePath\n         * @return {?}\n         */\n        SummaryResolver.prototype.getSymbolsOf = function (filePath) { return []; };\n        /**\n         * @param {?} reference\n         * @return {?}\n         */\n        SummaryResolver.prototype.getImportAs = function (reference) { return reference; };\n        return SummaryResolver;\n    }());\n    SummaryResolver.decorators = [\n        { type: CompilerInjectable },\n    ];\n    /**\n     * @nocollapse\n     */\n    SummaryResolver.ctorParameters = function () { return []; };\n    var /** @type {?} */ ERROR_COLLECTOR_TOKEN = new _angular_core.InjectionToken('ErrorCollector');\n    var CompileMetadataResolver = (function () {\n        /**\n         * @param {?} _config\n         * @param {?} _ngModuleResolver\n         * @param {?} _directiveResolver\n         * @param {?} _pipeResolver\n         * @param {?} _summaryResolver\n         * @param {?} _schemaRegistry\n         * @param {?} _directiveNormalizer\n         * @param {?} _console\n         * @param {?} _staticSymbolCache\n         * @param {?=} _reflector\n         * @param {?=} _errorCollector\n         */\n        function CompileMetadataResolver(_config, _ngModuleResolver, _directiveResolver, _pipeResolver, _summaryResolver, _schemaRegistry, _directiveNormalizer, _console, _staticSymbolCache, _reflector, _errorCollector) {\n            if (_reflector === void 0) { _reflector = _angular_core.ɵreflector; }\n            this._config = _config;\n            this._ngModuleResolver = _ngModuleResolver;\n            this._directiveResolver = _directiveResolver;\n            this._pipeResolver = _pipeResolver;\n            this._summaryResolver = _summaryResolver;\n            this._schemaRegistry = _schemaRegistry;\n            this._directiveNormalizer = _directiveNormalizer;\n            this._console = _console;\n            this._staticSymbolCache = _staticSymbolCache;\n            this._reflector = _reflector;\n            this._errorCollector = _errorCollector;\n            this._nonNormalizedDirectiveCache = new Map();\n            this._directiveCache = new Map();\n            this._summaryCache = new Map();\n            this._pipeCache = new Map();\n            this._ngModuleCache = new Map();\n            this._ngModuleOfTypes = new Map();\n        }\n        /**\n         * @param {?} type\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype.clearCacheFor = function (type) {\n            var /** @type {?} */ dirMeta = this._directiveCache.get(type);\n            this._directiveCache.delete(type);\n            this._nonNormalizedDirectiveCache.delete(type);\n            this._summaryCache.delete(type);\n            this._pipeCache.delete(type);\n            this._ngModuleOfTypes.delete(type);\n            // Clear all of the NgModule as they contain transitive information!\n            this._ngModuleCache.clear();\n            if (dirMeta) {\n                this._directiveNormalizer.clearCacheFor(dirMeta);\n            }\n        };\n        /**\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype.clearCache = function () {\n            this._directiveCache.clear();\n            this._nonNormalizedDirectiveCache.clear();\n            this._summaryCache.clear();\n            this._pipeCache.clear();\n            this._ngModuleCache.clear();\n            this._ngModuleOfTypes.clear();\n            this._directiveNormalizer.clearCache();\n        };\n        /**\n         * @param {?} baseType\n         * @param {?} name\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype._createProxyClass = function (baseType, name) {\n            var /** @type {?} */ delegate = null;\n            var /** @type {?} */ proxyClass = (function () {\n                if (!delegate) {\n                    throw new Error(\"Illegal state: Class \" + name + \" for type \" + _angular_core.ɵstringify(baseType) + \" is not compiled yet!\");\n                }\n                return delegate.apply(this, arguments);\n            });\n            proxyClass.setDelegate = function (d) {\n                delegate = d;\n                ((proxyClass)).prototype = d.prototype;\n            };\n            // Make stringify work correctly\n            ((proxyClass)).overriddenName = name;\n            return proxyClass;\n        };\n        /**\n         * @param {?} dirType\n         * @param {?} name\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype.getGeneratedClass = function (dirType, name) {\n            if (dirType instanceof StaticSymbol) {\n                return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n            }\n            else {\n                return this._createProxyClass(dirType, name);\n            }\n        };\n        /**\n         * @param {?} dirType\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype.getComponentViewClass = function (dirType) {\n            return this.getGeneratedClass(dirType, viewClassName(dirType, 0));\n        };\n        /**\n         * @param {?} dirType\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype.getHostComponentViewClass = function (dirType) {\n            return this.getGeneratedClass(dirType, hostViewClassName(dirType));\n        };\n        /**\n         * @param {?} dirType\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype.getHostComponentType = function (dirType) {\n            var /** @type {?} */ name = identifierName({ reference: dirType }) + \"_Host\";\n            if (dirType instanceof StaticSymbol) {\n                return this._staticSymbolCache.get(dirType.filePath, name);\n            }\n            else {\n                var /** @type {?} */ HostClass = (function HostClass() { });\n                HostClass.overriddenName = name;\n                return HostClass;\n            }\n        };\n        /**\n         * @param {?} dirType\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype.getRendererType = function (dirType) {\n            if (dirType instanceof StaticSymbol) {\n                return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), rendererTypeName(dirType));\n            }\n            else {\n                // returning an object as proxy,\n                // that we fill later during runtime compilation.\n                return ({});\n            }\n        };\n        /**\n         * @param {?} selector\n         * @param {?} dirType\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype.getComponentFactory = function (selector, dirType) {\n            if (dirType instanceof StaticSymbol) {\n                return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), componentFactoryName(dirType));\n            }\n            else {\n                var /** @type {?} */ hostView = this.getHostComponentViewClass(dirType);\n                return _angular_core.ɵccf(selector, dirType, /** @type {?} */ (hostView));\n            }\n        };\n        /**\n         * @param {?} type\n         * @param {?} kind\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype._loadSummary = function (type, kind) {\n            var /** @type {?} */ typeSummary = this._summaryCache.get(type);\n            if (!typeSummary) {\n                var /** @type {?} */ summary = this._summaryResolver.resolveSummary(type);\n                typeSummary = summary ? summary.type : null;\n                this._summaryCache.set(type, typeSummary);\n            }\n            return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n        };\n        /**\n         * @param {?} ngModuleType\n         * @param {?} directiveType\n         * @param {?} isSync\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype._loadDirectiveMetadata = function (ngModuleType, directiveType, isSync) {\n            var _this = this;\n            if (this._directiveCache.has(directiveType)) {\n                return;\n            }\n            directiveType = _angular_core.resolveForwardRef(directiveType);\n            var _a = this.getNonNormalizedDirectiveMetadata(directiveType), annotation = _a.annotation, metadata = _a.metadata;\n            var /** @type {?} */ createDirectiveMetadata = function (templateMetadata) {\n                var /** @type {?} */ normalizedDirMeta = new CompileDirectiveMetadata({\n                    type: metadata.type,\n                    isComponent: metadata.isComponent,\n                    selector: metadata.selector,\n                    exportAs: metadata.exportAs,\n                    changeDetection: metadata.changeDetection,\n                    inputs: metadata.inputs,\n                    outputs: metadata.outputs,\n                    hostListeners: metadata.hostListeners,\n                    hostProperties: metadata.hostProperties,\n                    hostAttributes: metadata.hostAttributes,\n                    providers: metadata.providers,\n                    viewProviders: metadata.viewProviders,\n                    queries: metadata.queries,\n                    viewQueries: metadata.viewQueries,\n                    entryComponents: metadata.entryComponents,\n                    componentViewType: metadata.componentViewType,\n                    rendererType: metadata.rendererType,\n                    componentFactory: metadata.componentFactory,\n                    template: templateMetadata\n                });\n                _this._directiveCache.set(directiveType, normalizedDirMeta);\n                _this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n                return normalizedDirMeta;\n            };\n            if (metadata.isComponent) {\n                var /** @type {?} */ templateMeta = this._directiveNormalizer.normalizeTemplate({\n                    ngModuleType: ngModuleType,\n                    componentType: directiveType,\n                    moduleUrl: componentModuleUrl(this._reflector, directiveType, annotation),\n                    encapsulation: metadata.template.encapsulation,\n                    template: metadata.template.template,\n                    templateUrl: metadata.template.templateUrl,\n                    styles: metadata.template.styles,\n                    styleUrls: metadata.template.styleUrls,\n                    animations: metadata.template.animations,\n                    interpolation: metadata.template.interpolation\n                });\n                if (templateMeta.syncResult) {\n                    createDirectiveMetadata(templateMeta.syncResult);\n                    return null;\n                }\n                else {\n                    if (isSync) {\n                        this._reportError(componentStillLoadingError(directiveType), directiveType);\n                        return null;\n                    }\n                    return templateMeta.asyncResult.then(createDirectiveMetadata);\n                }\n            }\n            else {\n                // directive\n                createDirectiveMetadata(null);\n                return null;\n            }\n        };\n        /**\n         * @param {?} directiveType\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype.getNonNormalizedDirectiveMetadata = function (directiveType) {\n            var _this = this;\n            directiveType = _angular_core.resolveForwardRef(directiveType);\n            if (!directiveType) {\n                return null;\n            }\n            var /** @type {?} */ cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n            if (cacheEntry) {\n                return cacheEntry;\n            }\n            var /** @type {?} */ dirMeta = this._directiveResolver.resolve(directiveType, false);\n            if (!dirMeta) {\n                return null;\n            }\n            var /** @type {?} */ nonNormalizedTemplateMetadata;\n            if (dirMeta instanceof _angular_core.Component) {\n                // component\n                assertArrayOfStrings('styles', dirMeta.styles);\n                assertArrayOfStrings('styleUrls', dirMeta.styleUrls);\n                assertInterpolationSymbols('interpolation', dirMeta.interpolation);\n                var /** @type {?} */ animations = dirMeta.animations;\n                nonNormalizedTemplateMetadata = new CompileTemplateMetadata({\n                    encapsulation: dirMeta.encapsulation,\n                    template: dirMeta.template,\n                    templateUrl: dirMeta.templateUrl,\n                    styles: dirMeta.styles,\n                    styleUrls: dirMeta.styleUrls,\n                    animations: animations,\n                    interpolation: dirMeta.interpolation,\n                    isInline: !!dirMeta.template\n                });\n            }\n            var /** @type {?} */ changeDetectionStrategy = null;\n            var /** @type {?} */ viewProviders = [];\n            var /** @type {?} */ entryComponentMetadata = [];\n            var /** @type {?} */ selector = dirMeta.selector;\n            if (dirMeta instanceof _angular_core.Component) {\n                // Component\n                changeDetectionStrategy = dirMeta.changeDetection;\n                if (dirMeta.viewProviders) {\n                    viewProviders = this._getProvidersMetadata(dirMeta.viewProviders, entryComponentMetadata, \"viewProviders for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n                }\n                if (dirMeta.entryComponents) {\n                    entryComponentMetadata = flattenAndDedupeArray(dirMeta.entryComponents)\n                        .map(function (type) { return _this._getEntryComponentMetadata(type); })\n                        .concat(entryComponentMetadata);\n                }\n                if (!selector) {\n                    selector = this._schemaRegistry.getDefaultComponentElementName();\n                }\n            }\n            else {\n                // Directive\n                if (!selector) {\n                    this._reportError(syntaxError(\"Directive \" + stringifyType(directiveType) + \" has no selector, please add it!\"), directiveType);\n                    selector = 'error';\n                }\n            }\n            var /** @type {?} */ providers = [];\n            if (dirMeta.providers != null) {\n                providers = this._getProvidersMetadata(dirMeta.providers, entryComponentMetadata, \"providers for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n            }\n            var /** @type {?} */ queries = [];\n            var /** @type {?} */ viewQueries = [];\n            if (dirMeta.queries != null) {\n                queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n                viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n            }\n            var /** @type {?} */ metadata = CompileDirectiveMetadata.create({\n                selector: selector,\n                exportAs: dirMeta.exportAs,\n                isComponent: !!nonNormalizedTemplateMetadata,\n                type: this._getTypeMetadata(directiveType),\n                template: nonNormalizedTemplateMetadata,\n                changeDetection: changeDetectionStrategy,\n                inputs: dirMeta.inputs,\n                outputs: dirMeta.outputs,\n                host: dirMeta.host,\n                providers: providers,\n                viewProviders: viewProviders,\n                queries: queries,\n                viewQueries: viewQueries,\n                entryComponents: entryComponentMetadata,\n                componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                    undefined,\n                rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : undefined,\n                componentFactory: nonNormalizedTemplateMetadata ?\n                    this.getComponentFactory(selector, directiveType) :\n                    undefined\n            });\n            cacheEntry = { metadata: metadata, annotation: dirMeta };\n            this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n            return cacheEntry;\n        };\n        /**\n         * Gets the metadata for the given directive.\n         * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n         * @param {?} directiveType\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype.getDirectiveMetadata = function (directiveType) {\n            var /** @type {?} */ dirMeta = this._directiveCache.get(directiveType);\n            if (!dirMeta) {\n                this._reportError(syntaxError(\"Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive \" + stringifyType(directiveType) + \".\"), directiveType);\n            }\n            return dirMeta;\n        };\n        /**\n         * @param {?} dirType\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype.getDirectiveSummary = function (dirType) {\n            var /** @type {?} */ dirSummary = (this._loadSummary(dirType, CompileSummaryKind.Directive));\n            if (!dirSummary) {\n                this._reportError(syntaxError(\"Illegal state: Could not load the summary for directive \" + stringifyType(dirType) + \".\"), dirType);\n            }\n            return dirSummary;\n        };\n        /**\n         * @param {?} type\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype.isDirective = function (type) { return this._directiveResolver.isDirective(type); };\n        /**\n         * @param {?} type\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype.isPipe = function (type) { return this._pipeResolver.isPipe(type); };\n        /**\n         * @param {?} moduleType\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype.getNgModuleSummary = function (moduleType) {\n            var /** @type {?} */ moduleSummary = (this._loadSummary(moduleType, CompileSummaryKind.NgModule));\n            if (!moduleSummary) {\n                var /** @type {?} */ moduleMeta = this.getNgModuleMetadata(moduleType, false);\n                moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n                if (moduleSummary) {\n                    this._summaryCache.set(moduleType, moduleSummary);\n                }\n            }\n            return moduleSummary;\n        };\n        /**\n         * Loads the declared directives and pipes of an NgModule.\n         * @param {?} moduleType\n         * @param {?} isSync\n         * @param {?=} throwIfNotFound\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype.loadNgModuleDirectiveAndPipeMetadata = function (moduleType, isSync, throwIfNotFound) {\n            var _this = this;\n            if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n            var /** @type {?} */ ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n            var /** @type {?} */ loading = [];\n            if (ngModule) {\n                ngModule.declaredDirectives.forEach(function (id) {\n                    var /** @type {?} */ promise = _this._loadDirectiveMetadata(moduleType, id.reference, isSync);\n                    if (promise) {\n                        loading.push(promise);\n                    }\n                });\n                ngModule.declaredPipes.forEach(function (id) { return _this._loadPipeMetadata(id.reference); });\n            }\n            return Promise.all(loading);\n        };\n        /**\n         * @param {?} moduleType\n         * @param {?=} throwIfNotFound\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype.getNgModuleMetadata = function (moduleType, throwIfNotFound) {\n            var _this = this;\n            if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n            moduleType = _angular_core.resolveForwardRef(moduleType);\n            var /** @type {?} */ compileMeta = this._ngModuleCache.get(moduleType);\n            if (compileMeta) {\n                return compileMeta;\n            }\n            var /** @type {?} */ meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n            if (!meta) {\n                return null;\n            }\n            var /** @type {?} */ declaredDirectives = [];\n            var /** @type {?} */ exportedNonModuleIdentifiers = [];\n            var /** @type {?} */ declaredPipes = [];\n            var /** @type {?} */ importedModules = [];\n            var /** @type {?} */ exportedModules = [];\n            var /** @type {?} */ providers = [];\n            var /** @type {?} */ entryComponents = [];\n            var /** @type {?} */ bootstrapComponents = [];\n            var /** @type {?} */ schemas = [];\n            if (meta.imports) {\n                flattenAndDedupeArray(meta.imports).forEach(function (importedType) {\n                    var /** @type {?} */ importedModuleType;\n                    if (isValidType(importedType)) {\n                        importedModuleType = importedType;\n                    }\n                    else if (importedType && importedType.ngModule) {\n                        var /** @type {?} */ moduleWithProviders = importedType;\n                        importedModuleType = moduleWithProviders.ngModule;\n                        if (moduleWithProviders.providers) {\n                            providers.push.apply(providers, _this._getProvidersMetadata(moduleWithProviders.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(importedModuleType) + \"'\", [], importedType));\n                        }\n                    }\n                    if (importedModuleType) {\n                        if (_this._checkSelfImport(moduleType, importedModuleType))\n                            return;\n                        var /** @type {?} */ importedModuleSummary = _this.getNgModuleSummary(importedModuleType);\n                        if (!importedModuleSummary) {\n                            _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(importedType) + \" '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'. Please add a @NgModule annotation.\"), moduleType);\n                            return;\n                        }\n                        importedModules.push(importedModuleSummary);\n                    }\n                    else {\n                        _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                        return;\n                    }\n                });\n            }\n            if (meta.exports) {\n                flattenAndDedupeArray(meta.exports).forEach(function (exportedType) {\n                    if (!isValidType(exportedType)) {\n                        _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(exportedType) + \"' exported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                        return;\n                    }\n                    var /** @type {?} */ exportedModuleSummary = _this.getNgModuleSummary(exportedType);\n                    if (exportedModuleSummary) {\n                        exportedModules.push(exportedModuleSummary);\n                    }\n                    else {\n                        exportedNonModuleIdentifiers.push(_this._getIdentifierMetadata(exportedType));\n                    }\n                });\n            }\n            // Note: This will be modified later, so we rely on\n            // getting a new instance every time!\n            var /** @type {?} */ transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n            if (meta.declarations) {\n                flattenAndDedupeArray(meta.declarations).forEach(function (declaredType) {\n                    if (!isValidType(declaredType)) {\n                        _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                        return;\n                    }\n                    var /** @type {?} */ declaredIdentifier = _this._getIdentifierMetadata(declaredType);\n                    if (_this._directiveResolver.isDirective(declaredType)) {\n                        transitiveModule.addDirective(declaredIdentifier);\n                        declaredDirectives.push(declaredIdentifier);\n                        _this._addTypeToModule(declaredType, moduleType);\n                    }\n                    else if (_this._pipeResolver.isPipe(declaredType)) {\n                        transitiveModule.addPipe(declaredIdentifier);\n                        transitiveModule.pipes.push(declaredIdentifier);\n                        declaredPipes.push(declaredIdentifier);\n                        _this._addTypeToModule(declaredType, moduleType);\n                    }\n                    else {\n                        _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(declaredType) + \" '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\"), moduleType);\n                        return;\n                    }\n                });\n            }\n            var /** @type {?} */ exportedDirectives = [];\n            var /** @type {?} */ exportedPipes = [];\n            exportedNonModuleIdentifiers.forEach(function (exportedId) {\n                if (transitiveModule.directivesSet.has(exportedId.reference)) {\n                    exportedDirectives.push(exportedId);\n                    transitiveModule.addExportedDirective(exportedId);\n                }\n                else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n                    exportedPipes.push(exportedId);\n                    transitiveModule.addExportedPipe(exportedId);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Can't export \" + _this._getTypeDescriptor(exportedId.reference) + \" \" + stringifyType(exportedId.reference) + \" from \" + stringifyType(moduleType) + \" as it was neither declared nor imported!\"), moduleType);\n                }\n            });\n            // The providers of the module have to go last\n            // so that they overwrite any other provider we already added.\n            if (meta.providers) {\n                providers.push.apply(providers, this._getProvidersMetadata(meta.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(moduleType) + \"'\", [], moduleType));\n            }\n            if (meta.entryComponents) {\n                entryComponents.push.apply(entryComponents, flattenAndDedupeArray(meta.entryComponents)\n                    .map(function (type) { return _this._getEntryComponentMetadata(type); }));\n            }\n            if (meta.bootstrap) {\n                flattenAndDedupeArray(meta.bootstrap).forEach(function (type) {\n                    if (!isValidType(type)) {\n                        _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(type) + \"' used in the bootstrap property of module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                        return;\n                    }\n                    bootstrapComponents.push(_this._getIdentifierMetadata(type));\n                });\n            }\n            entryComponents.push.apply(entryComponents, bootstrapComponents.map(function (type) { return _this._getEntryComponentMetadata(type.reference); }));\n            if (meta.schemas) {\n                schemas.push.apply(schemas, flattenAndDedupeArray(meta.schemas));\n            }\n            compileMeta = new CompileNgModuleMetadata({\n                type: this._getTypeMetadata(moduleType),\n                providers: providers,\n                entryComponents: entryComponents,\n                bootstrapComponents: bootstrapComponents,\n                schemas: schemas,\n                declaredDirectives: declaredDirectives,\n                exportedDirectives: exportedDirectives,\n                declaredPipes: declaredPipes,\n                exportedPipes: exportedPipes,\n                importedModules: importedModules,\n                exportedModules: exportedModules,\n                transitiveModule: transitiveModule,\n                id: meta.id,\n            });\n            entryComponents.forEach(function (id) { return transitiveModule.addEntryComponent(id); });\n            providers.forEach(function (provider) { return transitiveModule.addProvider(provider, compileMeta.type); });\n            transitiveModule.addModule(compileMeta.type);\n            this._ngModuleCache.set(moduleType, compileMeta);\n            return compileMeta;\n        };\n        /**\n         * @param {?} moduleType\n         * @param {?} importedModuleType\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype._checkSelfImport = function (moduleType, importedModuleType) {\n            if (moduleType === importedModuleType) {\n                this._reportError(syntaxError(\"'\" + stringifyType(moduleType) + \"' module can't import itself\"), moduleType);\n                return true;\n            }\n            return false;\n        };\n        /**\n         * @param {?} type\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype._getTypeDescriptor = function (type) {\n            if (this._directiveResolver.isDirective(type)) {\n                return 'directive';\n            }\n            if (this._pipeResolver.isPipe(type)) {\n                return 'pipe';\n            }\n            if (this._ngModuleResolver.isNgModule(type)) {\n                return 'module';\n            }\n            if (((type)).provide) {\n                return 'provider';\n            }\n            return 'value';\n        };\n        /**\n         * @param {?} type\n         * @param {?} moduleType\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype._addTypeToModule = function (type, moduleType) {\n            var /** @type {?} */ oldModule = this._ngModuleOfTypes.get(type);\n            if (oldModule && oldModule !== moduleType) {\n                this._reportError(syntaxError(\"Type \" + stringifyType(type) + \" is part of the declarations of 2 modules: \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \"! \" +\n                    (\"Please consider moving \" + stringifyType(type) + \" to a higher module that imports \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \". \") +\n                    (\"You can also create a new NgModule that exports and includes \" + stringifyType(type) + \" then import that NgModule in \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \".\")), moduleType);\n            }\n            this._ngModuleOfTypes.set(type, moduleType);\n        };\n        /**\n         * @param {?} importedModules\n         * @param {?} exportedModules\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata = function (importedModules, exportedModules) {\n            // collect `providers` / `entryComponents` from all imported and all exported modules\n            var /** @type {?} */ result = new TransitiveCompileNgModuleMetadata();\n            var /** @type {?} */ modulesByToken = new Map();\n            importedModules.concat(exportedModules).forEach(function (modSummary) {\n                modSummary.modules.forEach(function (mod) { return result.addModule(mod); });\n                modSummary.entryComponents.forEach(function (comp) { return result.addEntryComponent(comp); });\n                var /** @type {?} */ addedTokens = new Set();\n                modSummary.providers.forEach(function (entry) {\n                    var /** @type {?} */ tokenRef = tokenReference(entry.provider.token);\n                    var /** @type {?} */ prevModules = modulesByToken.get(tokenRef);\n                    if (!prevModules) {\n                        prevModules = new Set();\n                        modulesByToken.set(tokenRef, prevModules);\n                    }\n                    var /** @type {?} */ moduleRef = entry.module.reference;\n                    // Note: the providers of one module may still contain multiple providers\n                    // per token (e.g. for multi providers), and we need to preserve these.\n                    if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n                        prevModules.add(moduleRef);\n                        addedTokens.add(tokenRef);\n                        result.addProvider(entry.provider, entry.module);\n                    }\n                });\n            });\n            exportedModules.forEach(function (modSummary) {\n                modSummary.exportedDirectives.forEach(function (id) { return result.addExportedDirective(id); });\n                modSummary.exportedPipes.forEach(function (id) { return result.addExportedPipe(id); });\n            });\n            importedModules.forEach(function (modSummary) {\n                modSummary.exportedDirectives.forEach(function (id) { return result.addDirective(id); });\n                modSummary.exportedPipes.forEach(function (id) { return result.addPipe(id); });\n            });\n            return result;\n        };\n        /**\n         * @param {?} type\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype._getIdentifierMetadata = function (type) {\n            type = _angular_core.resolveForwardRef(type);\n            return { reference: type };\n        };\n        /**\n         * @param {?} type\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype.isInjectable = function (type) {\n            var /** @type {?} */ annotations = this._reflector.annotations(type);\n            // Note: We need an exact check here as @Component / @Directive / ... inherit\n            // from @CompilerInjectable!\n            return annotations.some(function (ann) { return ann.constructor === _angular_core.Injectable; });\n        };\n        /**\n         * @param {?} type\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype.getInjectableSummary = function (type) {\n            return {\n                summaryKind: CompileSummaryKind.Injectable,\n                type: this._getTypeMetadata(type, null, false)\n            };\n        };\n        /**\n         * @param {?} type\n         * @param {?=} dependencies\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype._getInjectableMetadata = function (type, dependencies) {\n            if (dependencies === void 0) { dependencies = null; }\n            var /** @type {?} */ typeSummary = this._loadSummary(type, CompileSummaryKind.Injectable);\n            if (typeSummary) {\n                return typeSummary.type;\n            }\n            return this._getTypeMetadata(type, dependencies);\n        };\n        /**\n         * @param {?} type\n         * @param {?=} dependencies\n         * @param {?=} throwOnUnknownDeps\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype._getTypeMetadata = function (type, dependencies, throwOnUnknownDeps) {\n            if (dependencies === void 0) { dependencies = null; }\n            if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n            var /** @type {?} */ identifier = this._getIdentifierMetadata(type);\n            return {\n                reference: identifier.reference,\n                diDeps: this._getDependenciesMetadata(identifier.reference, dependencies, throwOnUnknownDeps),\n                lifecycleHooks: _angular_core.ɵLIFECYCLE_HOOKS_VALUES.filter(function (hook) { return hasLifecycleHook(hook, identifier.reference); }),\n            };\n        };\n        /**\n         * @param {?} factory\n         * @param {?=} dependencies\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype._getFactoryMetadata = function (factory, dependencies) {\n            if (dependencies === void 0) { dependencies = null; }\n            factory = _angular_core.resolveForwardRef(factory);\n            return { reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies) };\n        };\n        /**\n         * Gets the metadata for the given pipe.\n         * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n         * @param {?} pipeType\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype.getPipeMetadata = function (pipeType) {\n            var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n            if (!pipeMeta) {\n                this._reportError(syntaxError(\"Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n            }\n            return pipeMeta;\n        };\n        /**\n         * @param {?} pipeType\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype.getPipeSummary = function (pipeType) {\n            var /** @type {?} */ pipeSummary = (this._loadSummary(pipeType, CompileSummaryKind.Pipe));\n            if (!pipeSummary) {\n                this._reportError(syntaxError(\"Illegal state: Could not load the summary for pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n            }\n            return pipeSummary;\n        };\n        /**\n         * @param {?} pipeType\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype.getOrLoadPipeMetadata = function (pipeType) {\n            var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n            if (!pipeMeta) {\n                pipeMeta = this._loadPipeMetadata(pipeType);\n            }\n            return pipeMeta;\n        };\n        /**\n         * @param {?} pipeType\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype._loadPipeMetadata = function (pipeType) {\n            pipeType = _angular_core.resolveForwardRef(pipeType);\n            var /** @type {?} */ pipeAnnotation = this._pipeResolver.resolve(pipeType);\n            var /** @type {?} */ pipeMeta = new CompilePipeMetadata({\n                type: this._getTypeMetadata(pipeType),\n                name: pipeAnnotation.name,\n                pure: pipeAnnotation.pure\n            });\n            this._pipeCache.set(pipeType, pipeMeta);\n            this._summaryCache.set(pipeType, pipeMeta.toSummary());\n            return pipeMeta;\n        };\n        /**\n         * @param {?} typeOrFunc\n         * @param {?} dependencies\n         * @param {?=} throwOnUnknownDeps\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype._getDependenciesMetadata = function (typeOrFunc, dependencies, throwOnUnknownDeps) {\n            var _this = this;\n            if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n            var /** @type {?} */ hasUnknownDeps = false;\n            var /** @type {?} */ params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n            var /** @type {?} */ dependenciesMetadata = params.map(function (param) {\n                var /** @type {?} */ isAttribute = false;\n                var /** @type {?} */ isHost = false;\n                var /** @type {?} */ isSelf = false;\n                var /** @type {?} */ isSkipSelf = false;\n                var /** @type {?} */ isOptional = false;\n                var /** @type {?} */ token = null;\n                if (Array.isArray(param)) {\n                    param.forEach(function (paramEntry) {\n                        if (paramEntry instanceof _angular_core.Host) {\n                            isHost = true;\n                        }\n                        else if (paramEntry instanceof _angular_core.Self) {\n                            isSelf = true;\n                        }\n                        else if (paramEntry instanceof _angular_core.SkipSelf) {\n                            isSkipSelf = true;\n                        }\n                        else if (paramEntry instanceof _angular_core.Optional) {\n                            isOptional = true;\n                        }\n                        else if (paramEntry instanceof _angular_core.Attribute) {\n                            isAttribute = true;\n                            token = paramEntry.attributeName;\n                        }\n                        else if (paramEntry instanceof _angular_core.Inject) {\n                            token = paramEntry.token;\n                        }\n                        else if (paramEntry instanceof _angular_core.InjectionToken) {\n                            token = paramEntry;\n                        }\n                        else if (isValidType(paramEntry) && token == null) {\n                            token = paramEntry;\n                        }\n                    });\n                }\n                else {\n                    token = param;\n                }\n                if (token == null) {\n                    hasUnknownDeps = true;\n                    return null;\n                }\n                return {\n                    isAttribute: isAttribute,\n                    isHost: isHost,\n                    isSelf: isSelf,\n                    isSkipSelf: isSkipSelf,\n                    isOptional: isOptional,\n                    token: _this._getTokenMetadata(token)\n                };\n            });\n            if (hasUnknownDeps) {\n                var /** @type {?} */ depsTokens = dependenciesMetadata.map(function (dep) { return dep ? stringifyType(dep.token) : '?'; }).join(', ');\n                var /** @type {?} */ message = \"Can't resolve all parameters for \" + stringifyType(typeOrFunc) + \": (\" + depsTokens + \").\";\n                if (throwOnUnknownDeps) {\n                    this._reportError(syntaxError(message), typeOrFunc);\n                }\n                else {\n                    this._console.warn(\"Warning: \" + message + \" This will become an error in Angular v5.x\");\n                }\n            }\n            return dependenciesMetadata;\n        };\n        /**\n         * @param {?} token\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype._getTokenMetadata = function (token) {\n            token = _angular_core.resolveForwardRef(token);\n            var /** @type {?} */ compileToken;\n            if (typeof token === 'string') {\n                compileToken = { value: token };\n            }\n            else {\n                compileToken = { identifier: { reference: token } };\n            }\n            return compileToken;\n        };\n        /**\n         * @param {?} providers\n         * @param {?} targetEntryComponents\n         * @param {?=} debugInfo\n         * @param {?=} compileProviders\n         * @param {?=} type\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype._getProvidersMetadata = function (providers, targetEntryComponents, debugInfo, compileProviders, type) {\n            var _this = this;\n            if (compileProviders === void 0) { compileProviders = []; }\n            providers.forEach(function (provider, providerIdx) {\n                if (Array.isArray(provider)) {\n                    _this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n                }\n                else {\n                    provider = _angular_core.resolveForwardRef(provider);\n                    var /** @type {?} */ providerMeta = void 0;\n                    if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n                        _this._validateProvider(provider);\n                        providerMeta = new ProviderMeta(provider.provide, provider);\n                    }\n                    else if (isValidType(provider)) {\n                        providerMeta = new ProviderMeta(provider, { useClass: provider });\n                    }\n                    else if (provider === void 0) {\n                        _this._reportError(syntaxError(\"Encountered undefined provider! Usually this means you have a circular dependencies (might be caused by using 'barrel' index.ts files.\"));\n                    }\n                    else {\n                        var /** @type {?} */ providersInfo = ((providers.reduce(function (soFar, seenProvider, seenProviderIdx) {\n                            if (seenProviderIdx < providerIdx) {\n                                soFar.push(\"\" + stringifyType(seenProvider));\n                            }\n                            else if (seenProviderIdx == providerIdx) {\n                                soFar.push(\"?\" + stringifyType(seenProvider) + \"?\");\n                            }\n                            else if (seenProviderIdx == providerIdx + 1) {\n                                soFar.push('...');\n                            }\n                            return soFar;\n                        }, [])))\n                            .join(', ');\n                        _this._reportError(syntaxError(\"Invalid \" + (debugInfo ? debugInfo : 'provider') + \" - only instances of Provider and Type are allowed, got: [\" + providersInfo + \"]\"), type);\n                    }\n                    if (providerMeta.token === resolveIdentifier(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n                        targetEntryComponents.push.apply(targetEntryComponents, _this._getEntryComponentsFromProvider(providerMeta, type));\n                    }\n                    else {\n                        compileProviders.push(_this.getProviderMetadata(providerMeta));\n                    }\n                }\n            });\n            return compileProviders;\n        };\n        /**\n         * @param {?} provider\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype._validateProvider = function (provider) {\n            if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n                this._reportError(syntaxError(\"Invalid provider for \" + stringifyType(provider.provide) + \". useClass cannot be \" + provider.useClass + \".\\n           Usually it happens when:\\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\\n           2. Class was used before it was declared. Use forwardRef in this case.\"));\n            }\n        };\n        /**\n         * @param {?} provider\n         * @param {?=} type\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype._getEntryComponentsFromProvider = function (provider, type) {\n            var _this = this;\n            var /** @type {?} */ components = [];\n            var /** @type {?} */ collectedIdentifiers = [];\n            if (provider.useFactory || provider.useExisting || provider.useClass) {\n                this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!\"), type);\n                return [];\n            }\n            if (!provider.multi) {\n                this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!\"), type);\n                return [];\n            }\n            extractIdentifiers(provider.useValue, collectedIdentifiers);\n            collectedIdentifiers.forEach(function (identifier) {\n                var /** @type {?} */ entry = _this._getEntryComponentMetadata(identifier.reference, false);\n                if (entry) {\n                    components.push(entry);\n                }\n            });\n            return components;\n        };\n        /**\n         * @param {?} dirType\n         * @param {?=} throwIfNotFound\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype._getEntryComponentMetadata = function (dirType, throwIfNotFound) {\n            if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n            var /** @type {?} */ dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n            if (dirMeta && dirMeta.metadata.isComponent) {\n                return { componentType: dirType, componentFactory: dirMeta.metadata.componentFactory };\n            }\n            else {\n                var /** @type {?} */ dirSummary = (this._loadSummary(dirType, CompileSummaryKind.Directive));\n                if (dirSummary && dirSummary.isComponent) {\n                    return { componentType: dirType, componentFactory: dirSummary.componentFactory };\n                }\n            }\n            if (throwIfNotFound) {\n                throw syntaxError(dirType.name + \" cannot be used as an entry component.\");\n            }\n        };\n        /**\n         * @param {?} provider\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype.getProviderMetadata = function (provider) {\n            var /** @type {?} */ compileDeps;\n            var /** @type {?} */ compileTypeMetadata = null;\n            var /** @type {?} */ compileFactoryMetadata = null;\n            var /** @type {?} */ token = this._getTokenMetadata(provider.token);\n            if (provider.useClass) {\n                compileTypeMetadata = this._getInjectableMetadata(provider.useClass, provider.dependencies);\n                compileDeps = compileTypeMetadata.diDeps;\n                if (provider.token === provider.useClass) {\n                    // use the compileTypeMetadata as it contains information about lifecycleHooks...\n                    token = { identifier: compileTypeMetadata };\n                }\n            }\n            else if (provider.useFactory) {\n                compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n                compileDeps = compileFactoryMetadata.diDeps;\n            }\n            return {\n                token: token,\n                useClass: compileTypeMetadata,\n                useValue: provider.useValue,\n                useFactory: compileFactoryMetadata,\n                useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : null,\n                deps: compileDeps,\n                multi: provider.multi\n            };\n        };\n        /**\n         * @param {?} queries\n         * @param {?} isViewQuery\n         * @param {?} directiveType\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype._getQueriesMetadata = function (queries, isViewQuery, directiveType) {\n            var _this = this;\n            var /** @type {?} */ res = [];\n            Object.keys(queries).forEach(function (propertyName) {\n                var /** @type {?} */ query = queries[propertyName];\n                if (query.isViewQuery === isViewQuery) {\n                    res.push(_this._getQueryMetadata(query, propertyName, directiveType));\n                }\n            });\n            return res;\n        };\n        /**\n         * @param {?} selector\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype._queryVarBindings = function (selector) { return selector.split(/\\s*,\\s*/); };\n        /**\n         * @param {?} q\n         * @param {?} propertyName\n         * @param {?} typeOrFunc\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype._getQueryMetadata = function (q, propertyName, typeOrFunc) {\n            var _this = this;\n            var /** @type {?} */ selectors;\n            if (typeof q.selector === 'string') {\n                selectors =\n                    this._queryVarBindings(q.selector).map(function (varName) { return _this._getTokenMetadata(varName); });\n            }\n            else {\n                if (!q.selector) {\n                    this._reportError(syntaxError(\"Can't construct a query for the property \\\"\" + propertyName + \"\\\" of \\\"\" + stringifyType(typeOrFunc) + \"\\\" since the query selector wasn't defined.\"), typeOrFunc);\n                }\n                selectors = [this._getTokenMetadata(q.selector)];\n            }\n            return {\n                selectors: selectors,\n                first: q.first,\n                descendants: q.descendants, propertyName: propertyName,\n                read: q.read ? this._getTokenMetadata(q.read) : null\n            };\n        };\n        /**\n         * @param {?} error\n         * @param {?=} type\n         * @param {?=} otherType\n         * @return {?}\n         */\n        CompileMetadataResolver.prototype._reportError = function (error, type, otherType) {\n            if (this._errorCollector) {\n                this._errorCollector(error, type);\n                if (otherType) {\n                    this._errorCollector(error, otherType);\n                }\n            }\n            else {\n                throw error;\n            }\n        };\n        return CompileMetadataResolver;\n    }());\n    CompileMetadataResolver.decorators = [\n        { type: CompilerInjectable },\n    ];\n    /**\n     * @nocollapse\n     */\n    CompileMetadataResolver.ctorParameters = function () { return [\n        { type: CompilerConfig, },\n        { type: NgModuleResolver, },\n        { type: DirectiveResolver, },\n        { type: PipeResolver, },\n        { type: SummaryResolver, },\n        { type: ElementSchemaRegistry, },\n        { type: DirectiveNormalizer, },\n        { type: _angular_core.ɵConsole, },\n        { type: StaticSymbolCache, decorators: [{ type: _angular_core.Optional },] },\n        { type: _angular_core.ɵReflectorReader, },\n        { type: undefined, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [ERROR_COLLECTOR_TOKEN,] },] },\n    ]; };\n    /**\n     * @param {?} tree\n     * @param {?=} out\n     * @return {?}\n     */\n    function flattenArray(tree, out) {\n        if (out === void 0) { out = []; }\n        if (tree) {\n            for (var /** @type {?} */ i = 0; i < tree.length; i++) {\n                var /** @type {?} */ item = _angular_core.resolveForwardRef(tree[i]);\n                if (Array.isArray(item)) {\n                    flattenArray(item, out);\n                }\n                else {\n                    out.push(item);\n                }\n            }\n        }\n        return out;\n    }\n    /**\n     * @param {?} array\n     * @return {?}\n     */\n    function dedupeArray(array) {\n        if (array) {\n            return Array.from(new Set(array));\n        }\n        return [];\n    }\n    /**\n     * @param {?} tree\n     * @return {?}\n     */\n    function flattenAndDedupeArray(tree) {\n        return dedupeArray(flattenArray(tree));\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    function isValidType(value) {\n        return (value instanceof StaticSymbol) || (value instanceof _angular_core.Type);\n    }\n    /**\n     * @param {?} reflector\n     * @param {?} type\n     * @param {?} cmpMetadata\n     * @return {?}\n     */\n    function componentModuleUrl(reflector, type, cmpMetadata) {\n        if (type instanceof StaticSymbol) {\n            return type.filePath;\n        }\n        var /** @type {?} */ moduleId = cmpMetadata.moduleId;\n        if (typeof moduleId === 'string') {\n            var /** @type {?} */ scheme = getUrlScheme(moduleId);\n            return scheme ? moduleId : \"package:\" + moduleId + MODULE_SUFFIX;\n        }\n        else if (moduleId !== null && moduleId !== void 0) {\n            throw syntaxError(\"moduleId should be a string in \\\"\" + stringifyType(type) + \"\\\". See https://goo.gl/wIDDiL for more information.\\n\" +\n                \"If you're using Webpack you should inline the template and the styles, see https://goo.gl/X2J8zc.\");\n        }\n        return reflector.importUri(type);\n    }\n    /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    function extractIdentifiers(value, targetIdentifiers) {\n        visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n    }\n    var _CompileValueConverter = (function (_super) {\n        __extends(_CompileValueConverter, _super);\n        function _CompileValueConverter() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * @param {?} value\n         * @param {?} targetIdentifiers\n         * @return {?}\n         */\n        _CompileValueConverter.prototype.visitOther = function (value, targetIdentifiers) {\n            targetIdentifiers.push({ reference: value });\n        };\n        return _CompileValueConverter;\n    }(ValueTransformer));\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    function stringifyType(type) {\n        if (type instanceof StaticSymbol) {\n            return type.name + \" in \" + type.filePath;\n        }\n        else {\n            return _angular_core.ɵstringify(type);\n        }\n    }\n    /**\n     * Indicates that a component is still being loaded in a synchronous compile.\n     * @param {?} compType\n     * @return {?}\n     */\n    function componentStillLoadingError(compType) {\n        debugger;\n        var /** @type {?} */ error = Error(\"Can't compile synchronously as \" + _angular_core.ɵstringify(compType) + \" is still being loaded!\");\n        ((error))[_angular_core.ɵERROR_COMPONENT_TYPE] = compType;\n        return error;\n    }\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TypeModifier = {};\n    TypeModifier.Const = 0;\n    TypeModifier[TypeModifier.Const] = \"Const\";\n    /**\n     * @abstract\n     */\n    var Type$1 = (function () {\n        /**\n         * @param {?=} modifiers\n         */\n        function Type$1(modifiers) {\n            if (modifiers === void 0) { modifiers = null; }\n            this.modifiers = modifiers;\n            if (!modifiers) {\n                this.modifiers = [];\n            }\n        }\n        /**\n         * @abstract\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        Type$1.prototype.visitType = function (visitor, context) { };\n        /**\n         * @param {?} modifier\n         * @return {?}\n         */\n        Type$1.prototype.hasModifier = function (modifier) { return this.modifiers.indexOf(modifier) !== -1; };\n        return Type$1;\n    }());\n    var BuiltinTypeName = {};\n    BuiltinTypeName.Dynamic = 0;\n    BuiltinTypeName.Bool = 1;\n    BuiltinTypeName.String = 2;\n    BuiltinTypeName.Int = 3;\n    BuiltinTypeName.Number = 4;\n    BuiltinTypeName.Function = 5;\n    BuiltinTypeName.Inferred = 6;\n    BuiltinTypeName[BuiltinTypeName.Dynamic] = \"Dynamic\";\n    BuiltinTypeName[BuiltinTypeName.Bool] = \"Bool\";\n    BuiltinTypeName[BuiltinTypeName.String] = \"String\";\n    BuiltinTypeName[BuiltinTypeName.Int] = \"Int\";\n    BuiltinTypeName[BuiltinTypeName.Number] = \"Number\";\n    BuiltinTypeName[BuiltinTypeName.Function] = \"Function\";\n    BuiltinTypeName[BuiltinTypeName.Inferred] = \"Inferred\";\n    var BuiltinType = (function (_super) {\n        __extends(BuiltinType, _super);\n        /**\n         * @param {?} name\n         * @param {?=} modifiers\n         */\n        function BuiltinType(name, modifiers) {\n            if (modifiers === void 0) { modifiers = null; }\n            var _this = _super.call(this, modifiers) || this;\n            _this.name = name;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        BuiltinType.prototype.visitType = function (visitor, context) {\n            return visitor.visitBuiltintType(this, context);\n        };\n        return BuiltinType;\n    }(Type$1));\n    var ExpressionType = (function (_super) {\n        __extends(ExpressionType, _super);\n        /**\n         * @param {?} value\n         * @param {?=} modifiers\n         */\n        function ExpressionType(value, modifiers) {\n            if (modifiers === void 0) { modifiers = null; }\n            var _this = _super.call(this, modifiers) || this;\n            _this.value = value;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        ExpressionType.prototype.visitType = function (visitor, context) {\n            return visitor.visitExpressionType(this, context);\n        };\n        return ExpressionType;\n    }(Type$1));\n    var ArrayType = (function (_super) {\n        __extends(ArrayType, _super);\n        /**\n         * @param {?} of\n         * @param {?=} modifiers\n         */\n        function ArrayType(of, modifiers) {\n            if (modifiers === void 0) { modifiers = null; }\n            var _this = _super.call(this, modifiers) || this;\n            _this.of = of;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        ArrayType.prototype.visitType = function (visitor, context) {\n            return visitor.visitArrayType(this, context);\n        };\n        return ArrayType;\n    }(Type$1));\n    var MapType = (function (_super) {\n        __extends(MapType, _super);\n        /**\n         * @param {?} valueType\n         * @param {?=} modifiers\n         */\n        function MapType(valueType, modifiers) {\n            if (modifiers === void 0) { modifiers = null; }\n            var _this = _super.call(this, modifiers) || this;\n            _this.valueType = valueType;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        MapType.prototype.visitType = function (visitor, context) { return visitor.visitMapType(this, context); };\n        return MapType;\n    }(Type$1));\n    var /** @type {?} */ DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\n    var /** @type {?} */ INFERRED_TYPE = new BuiltinType(BuiltinTypeName.Inferred);\n    var /** @type {?} */ BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\n    var /** @type {?} */ INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\n    var /** @type {?} */ NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\n    var /** @type {?} */ STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\n    var /** @type {?} */ FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\n    var BinaryOperator = {};\n    BinaryOperator.Equals = 0;\n    BinaryOperator.NotEquals = 1;\n    BinaryOperator.Identical = 2;\n    BinaryOperator.NotIdentical = 3;\n    BinaryOperator.Minus = 4;\n    BinaryOperator.Plus = 5;\n    BinaryOperator.Divide = 6;\n    BinaryOperator.Multiply = 7;\n    BinaryOperator.Modulo = 8;\n    BinaryOperator.And = 9;\n    BinaryOperator.Or = 10;\n    BinaryOperator.Lower = 11;\n    BinaryOperator.LowerEquals = 12;\n    BinaryOperator.Bigger = 13;\n    BinaryOperator.BiggerEquals = 14;\n    BinaryOperator[BinaryOperator.Equals] = \"Equals\";\n    BinaryOperator[BinaryOperator.NotEquals] = \"NotEquals\";\n    BinaryOperator[BinaryOperator.Identical] = \"Identical\";\n    BinaryOperator[BinaryOperator.NotIdentical] = \"NotIdentical\";\n    BinaryOperator[BinaryOperator.Minus] = \"Minus\";\n    BinaryOperator[BinaryOperator.Plus] = \"Plus\";\n    BinaryOperator[BinaryOperator.Divide] = \"Divide\";\n    BinaryOperator[BinaryOperator.Multiply] = \"Multiply\";\n    BinaryOperator[BinaryOperator.Modulo] = \"Modulo\";\n    BinaryOperator[BinaryOperator.And] = \"And\";\n    BinaryOperator[BinaryOperator.Or] = \"Or\";\n    BinaryOperator[BinaryOperator.Lower] = \"Lower\";\n    BinaryOperator[BinaryOperator.LowerEquals] = \"LowerEquals\";\n    BinaryOperator[BinaryOperator.Bigger] = \"Bigger\";\n    BinaryOperator[BinaryOperator.BiggerEquals] = \"BiggerEquals\";\n    /**\n     * @abstract\n     */\n    var Expression = (function () {\n        /**\n         * @param {?} type\n         * @param {?=} sourceSpan\n         */\n        function Expression(type, sourceSpan) {\n            this.type = type;\n            this.sourceSpan = sourceSpan;\n        }\n        /**\n         * @abstract\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        Expression.prototype.visitExpression = function (visitor, context) { };\n        /**\n         * @param {?} name\n         * @param {?=} sourceSpan\n         * @return {?}\n         */\n        Expression.prototype.prop = function (name, sourceSpan) {\n            return new ReadPropExpr(this, name, null, sourceSpan);\n        };\n        /**\n         * @param {?} index\n         * @param {?=} type\n         * @param {?=} sourceSpan\n         * @return {?}\n         */\n        Expression.prototype.key = function (index, type, sourceSpan) {\n            if (type === void 0) { type = null; }\n            return new ReadKeyExpr(this, index, type, sourceSpan);\n        };\n        /**\n         * @param {?} name\n         * @param {?} params\n         * @param {?=} sourceSpan\n         * @return {?}\n         */\n        Expression.prototype.callMethod = function (name, params, sourceSpan) {\n            return new InvokeMethodExpr(this, name, params, null, sourceSpan);\n        };\n        /**\n         * @param {?} params\n         * @param {?=} sourceSpan\n         * @return {?}\n         */\n        Expression.prototype.callFn = function (params, sourceSpan) {\n            return new InvokeFunctionExpr(this, params, null, sourceSpan);\n        };\n        /**\n         * @param {?} params\n         * @param {?=} type\n         * @param {?=} sourceSpan\n         * @return {?}\n         */\n        Expression.prototype.instantiate = function (params, type, sourceSpan) {\n            if (type === void 0) { type = null; }\n            return new InstantiateExpr(this, params, type, sourceSpan);\n        };\n        /**\n         * @param {?} trueCase\n         * @param {?=} falseCase\n         * @param {?=} sourceSpan\n         * @return {?}\n         */\n        Expression.prototype.conditional = function (trueCase, falseCase, sourceSpan) {\n            if (falseCase === void 0) { falseCase = null; }\n            return new ConditionalExpr(this, trueCase, falseCase, null, sourceSpan);\n        };\n        /**\n         * @param {?} rhs\n         * @param {?=} sourceSpan\n         * @return {?}\n         */\n        Expression.prototype.equals = function (rhs, sourceSpan) {\n            return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs, null, sourceSpan);\n        };\n        /**\n         * @param {?} rhs\n         * @param {?=} sourceSpan\n         * @return {?}\n         */\n        Expression.prototype.notEquals = function (rhs, sourceSpan) {\n            return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs, null, sourceSpan);\n        };\n        /**\n         * @param {?} rhs\n         * @param {?=} sourceSpan\n         * @return {?}\n         */\n        Expression.prototype.identical = function (rhs, sourceSpan) {\n            return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs, null, sourceSpan);\n        };\n        /**\n         * @param {?} rhs\n         * @param {?=} sourceSpan\n         * @return {?}\n         */\n        Expression.prototype.notIdentical = function (rhs, sourceSpan) {\n            return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs, null, sourceSpan);\n        };\n        /**\n         * @param {?} rhs\n         * @param {?=} sourceSpan\n         * @return {?}\n         */\n        Expression.prototype.minus = function (rhs, sourceSpan) {\n            return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs, null, sourceSpan);\n        };\n        /**\n         * @param {?} rhs\n         * @param {?=} sourceSpan\n         * @return {?}\n         */\n        Expression.prototype.plus = function (rhs, sourceSpan) {\n            return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs, null, sourceSpan);\n        };\n        /**\n         * @param {?} rhs\n         * @param {?=} sourceSpan\n         * @return {?}\n         */\n        Expression.prototype.divide = function (rhs, sourceSpan) {\n            return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs, null, sourceSpan);\n        };\n        /**\n         * @param {?} rhs\n         * @param {?=} sourceSpan\n         * @return {?}\n         */\n        Expression.prototype.multiply = function (rhs, sourceSpan) {\n            return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs, null, sourceSpan);\n        };\n        /**\n         * @param {?} rhs\n         * @param {?=} sourceSpan\n         * @return {?}\n         */\n        Expression.prototype.modulo = function (rhs, sourceSpan) {\n            return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs, null, sourceSpan);\n        };\n        /**\n         * @param {?} rhs\n         * @param {?=} sourceSpan\n         * @return {?}\n         */\n        Expression.prototype.and = function (rhs, sourceSpan) {\n            return new BinaryOperatorExpr(BinaryOperator.And, this, rhs, null, sourceSpan);\n        };\n        /**\n         * @param {?} rhs\n         * @param {?=} sourceSpan\n         * @return {?}\n         */\n        Expression.prototype.or = function (rhs, sourceSpan) {\n            return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs, null, sourceSpan);\n        };\n        /**\n         * @param {?} rhs\n         * @param {?=} sourceSpan\n         * @return {?}\n         */\n        Expression.prototype.lower = function (rhs, sourceSpan) {\n            return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs, null, sourceSpan);\n        };\n        /**\n         * @param {?} rhs\n         * @param {?=} sourceSpan\n         * @return {?}\n         */\n        Expression.prototype.lowerEquals = function (rhs, sourceSpan) {\n            return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs, null, sourceSpan);\n        };\n        /**\n         * @param {?} rhs\n         * @param {?=} sourceSpan\n         * @return {?}\n         */\n        Expression.prototype.bigger = function (rhs, sourceSpan) {\n            return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs, null, sourceSpan);\n        };\n        /**\n         * @param {?} rhs\n         * @param {?=} sourceSpan\n         * @return {?}\n         */\n        Expression.prototype.biggerEquals = function (rhs, sourceSpan) {\n            return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs, null, sourceSpan);\n        };\n        /**\n         * @param {?=} sourceSpan\n         * @return {?}\n         */\n        Expression.prototype.isBlank = function (sourceSpan) {\n            // Note: We use equals by purpose here to compare to null and undefined in JS.\n            // We use the typed null to allow strictNullChecks to narrow types.\n            return this.equals(TYPED_NULL_EXPR, sourceSpan);\n        };\n        /**\n         * @param {?} type\n         * @param {?=} sourceSpan\n         * @return {?}\n         */\n        Expression.prototype.cast = function (type, sourceSpan) {\n            return new CastExpr(this, type, sourceSpan);\n        };\n        /**\n         * @return {?}\n         */\n        Expression.prototype.toStmt = function () { return new ExpressionStatement(this); };\n        return Expression;\n    }());\n    var BuiltinVar = {};\n    BuiltinVar.This = 0;\n    BuiltinVar.Super = 1;\n    BuiltinVar.CatchError = 2;\n    BuiltinVar.CatchStack = 3;\n    BuiltinVar[BuiltinVar.This] = \"This\";\n    BuiltinVar[BuiltinVar.Super] = \"Super\";\n    BuiltinVar[BuiltinVar.CatchError] = \"CatchError\";\n    BuiltinVar[BuiltinVar.CatchStack] = \"CatchStack\";\n    var ReadVarExpr = (function (_super) {\n        __extends(ReadVarExpr, _super);\n        /**\n         * @param {?} name\n         * @param {?=} type\n         * @param {?=} sourceSpan\n         */\n        function ReadVarExpr(name, type, sourceSpan) {\n            if (type === void 0) { type = null; }\n            var _this = _super.call(this, type, sourceSpan) || this;\n            if (typeof name === 'string') {\n                _this.name = name;\n                _this.builtin = null;\n            }\n            else {\n                _this.name = null;\n                _this.builtin = name;\n            }\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        ReadVarExpr.prototype.visitExpression = function (visitor, context) {\n            return visitor.visitReadVarExpr(this, context);\n        };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        ReadVarExpr.prototype.set = function (value) {\n            return new WriteVarExpr(this.name, value, null, this.sourceSpan);\n        };\n        return ReadVarExpr;\n    }(Expression));\n    var WriteVarExpr = (function (_super) {\n        __extends(WriteVarExpr, _super);\n        /**\n         * @param {?} name\n         * @param {?} value\n         * @param {?=} type\n         * @param {?=} sourceSpan\n         */\n        function WriteVarExpr(name, value, type, sourceSpan) {\n            if (type === void 0) { type = null; }\n            var _this = _super.call(this, type || value.type, sourceSpan) || this;\n            _this.name = name;\n            _this.value = value;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        WriteVarExpr.prototype.visitExpression = function (visitor, context) {\n            return visitor.visitWriteVarExpr(this, context);\n        };\n        /**\n         * @param {?=} type\n         * @param {?=} modifiers\n         * @return {?}\n         */\n        WriteVarExpr.prototype.toDeclStmt = function (type, modifiers) {\n            if (type === void 0) { type = null; }\n            if (modifiers === void 0) { modifiers = null; }\n            return new DeclareVarStmt(this.name, this.value, type, modifiers, this.sourceSpan);\n        };\n        return WriteVarExpr;\n    }(Expression));\n    var WriteKeyExpr = (function (_super) {\n        __extends(WriteKeyExpr, _super);\n        /**\n         * @param {?} receiver\n         * @param {?} index\n         * @param {?} value\n         * @param {?=} type\n         * @param {?=} sourceSpan\n         */\n        function WriteKeyExpr(receiver, index, value, type, sourceSpan) {\n            if (type === void 0) { type = null; }\n            var _this = _super.call(this, type || value.type, sourceSpan) || this;\n            _this.receiver = receiver;\n            _this.index = index;\n            _this.value = value;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        WriteKeyExpr.prototype.visitExpression = function (visitor, context) {\n            return visitor.visitWriteKeyExpr(this, context);\n        };\n        return WriteKeyExpr;\n    }(Expression));\n    var WritePropExpr = (function (_super) {\n        __extends(WritePropExpr, _super);\n        /**\n         * @param {?} receiver\n         * @param {?} name\n         * @param {?} value\n         * @param {?=} type\n         * @param {?=} sourceSpan\n         */\n        function WritePropExpr(receiver, name, value, type, sourceSpan) {\n            if (type === void 0) { type = null; }\n            var _this = _super.call(this, type || value.type, sourceSpan) || this;\n            _this.receiver = receiver;\n            _this.name = name;\n            _this.value = value;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        WritePropExpr.prototype.visitExpression = function (visitor, context) {\n            return visitor.visitWritePropExpr(this, context);\n        };\n        return WritePropExpr;\n    }(Expression));\n    var BuiltinMethod = {};\n    BuiltinMethod.ConcatArray = 0;\n    BuiltinMethod.SubscribeObservable = 1;\n    BuiltinMethod.Bind = 2;\n    BuiltinMethod[BuiltinMethod.ConcatArray] = \"ConcatArray\";\n    BuiltinMethod[BuiltinMethod.SubscribeObservable] = \"SubscribeObservable\";\n    BuiltinMethod[BuiltinMethod.Bind] = \"Bind\";\n    var InvokeMethodExpr = (function (_super) {\n        __extends(InvokeMethodExpr, _super);\n        /**\n         * @param {?} receiver\n         * @param {?} method\n         * @param {?} args\n         * @param {?=} type\n         * @param {?=} sourceSpan\n         */\n        function InvokeMethodExpr(receiver, method, args, type, sourceSpan) {\n            if (type === void 0) { type = null; }\n            var _this = _super.call(this, type, sourceSpan) || this;\n            _this.receiver = receiver;\n            _this.args = args;\n            if (typeof method === 'string') {\n                _this.name = method;\n                _this.builtin = null;\n            }\n            else {\n                _this.name = null;\n                _this.builtin = method;\n            }\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        InvokeMethodExpr.prototype.visitExpression = function (visitor, context) {\n            return visitor.visitInvokeMethodExpr(this, context);\n        };\n        return InvokeMethodExpr;\n    }(Expression));\n    var InvokeFunctionExpr = (function (_super) {\n        __extends(InvokeFunctionExpr, _super);\n        /**\n         * @param {?} fn\n         * @param {?} args\n         * @param {?=} type\n         * @param {?=} sourceSpan\n         */\n        function InvokeFunctionExpr(fn, args, type, sourceSpan) {\n            if (type === void 0) { type = null; }\n            var _this = _super.call(this, type, sourceSpan) || this;\n            _this.fn = fn;\n            _this.args = args;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        InvokeFunctionExpr.prototype.visitExpression = function (visitor, context) {\n            return visitor.visitInvokeFunctionExpr(this, context);\n        };\n        return InvokeFunctionExpr;\n    }(Expression));\n    var InstantiateExpr = (function (_super) {\n        __extends(InstantiateExpr, _super);\n        /**\n         * @param {?} classExpr\n         * @param {?} args\n         * @param {?=} type\n         * @param {?=} sourceSpan\n         */\n        function InstantiateExpr(classExpr, args, type, sourceSpan) {\n            var _this = _super.call(this, type, sourceSpan) || this;\n            _this.classExpr = classExpr;\n            _this.args = args;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        InstantiateExpr.prototype.visitExpression = function (visitor, context) {\n            return visitor.visitInstantiateExpr(this, context);\n        };\n        return InstantiateExpr;\n    }(Expression));\n    var LiteralExpr = (function (_super) {\n        __extends(LiteralExpr, _super);\n        /**\n         * @param {?} value\n         * @param {?=} type\n         * @param {?=} sourceSpan\n         */\n        function LiteralExpr(value, type, sourceSpan) {\n            if (type === void 0) { type = null; }\n            var _this = _super.call(this, type, sourceSpan) || this;\n            _this.value = value;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        LiteralExpr.prototype.visitExpression = function (visitor, context) {\n            return visitor.visitLiteralExpr(this, context);\n        };\n        return LiteralExpr;\n    }(Expression));\n    var ExternalExpr = (function (_super) {\n        __extends(ExternalExpr, _super);\n        /**\n         * @param {?} value\n         * @param {?=} type\n         * @param {?=} typeParams\n         * @param {?=} sourceSpan\n         */\n        function ExternalExpr(value, type, typeParams, sourceSpan) {\n            if (type === void 0) { type = null; }\n            if (typeParams === void 0) { typeParams = null; }\n            var _this = _super.call(this, type, sourceSpan) || this;\n            _this.value = value;\n            _this.typeParams = typeParams;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        ExternalExpr.prototype.visitExpression = function (visitor, context) {\n            return visitor.visitExternalExpr(this, context);\n        };\n        return ExternalExpr;\n    }(Expression));\n    var ConditionalExpr = (function (_super) {\n        __extends(ConditionalExpr, _super);\n        /**\n         * @param {?} condition\n         * @param {?} trueCase\n         * @param {?=} falseCase\n         * @param {?=} type\n         * @param {?=} sourceSpan\n         */\n        function ConditionalExpr(condition, trueCase, falseCase, type, sourceSpan) {\n            if (falseCase === void 0) { falseCase = null; }\n            if (type === void 0) { type = null; }\n            var _this = _super.call(this, type || trueCase.type, sourceSpan) || this;\n            _this.condition = condition;\n            _this.falseCase = falseCase;\n            _this.trueCase = trueCase;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        ConditionalExpr.prototype.visitExpression = function (visitor, context) {\n            return visitor.visitConditionalExpr(this, context);\n        };\n        return ConditionalExpr;\n    }(Expression));\n    var NotExpr = (function (_super) {\n        __extends(NotExpr, _super);\n        /**\n         * @param {?} condition\n         * @param {?=} sourceSpan\n         */\n        function NotExpr(condition, sourceSpan) {\n            var _this = _super.call(this, BOOL_TYPE, sourceSpan) || this;\n            _this.condition = condition;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        NotExpr.prototype.visitExpression = function (visitor, context) {\n            return visitor.visitNotExpr(this, context);\n        };\n        return NotExpr;\n    }(Expression));\n    var CastExpr = (function (_super) {\n        __extends(CastExpr, _super);\n        /**\n         * @param {?} value\n         * @param {?} type\n         * @param {?=} sourceSpan\n         */\n        function CastExpr(value, type, sourceSpan) {\n            var _this = _super.call(this, type, sourceSpan) || this;\n            _this.value = value;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        CastExpr.prototype.visitExpression = function (visitor, context) {\n            return visitor.visitCastExpr(this, context);\n        };\n        return CastExpr;\n    }(Expression));\n    var FnParam = (function () {\n        /**\n         * @param {?} name\n         * @param {?=} type\n         */\n        function FnParam(name, type) {\n            if (type === void 0) { type = null; }\n            this.name = name;\n            this.type = type;\n        }\n        return FnParam;\n    }());\n    var FunctionExpr = (function (_super) {\n        __extends(FunctionExpr, _super);\n        /**\n         * @param {?} params\n         * @param {?} statements\n         * @param {?=} type\n         * @param {?=} sourceSpan\n         */\n        function FunctionExpr(params, statements, type, sourceSpan) {\n            if (type === void 0) { type = null; }\n            var _this = _super.call(this, type, sourceSpan) || this;\n            _this.params = params;\n            _this.statements = statements;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        FunctionExpr.prototype.visitExpression = function (visitor, context) {\n            return visitor.visitFunctionExpr(this, context);\n        };\n        /**\n         * @param {?} name\n         * @param {?=} modifiers\n         * @return {?}\n         */\n        FunctionExpr.prototype.toDeclStmt = function (name, modifiers) {\n            if (modifiers === void 0) { modifiers = null; }\n            return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers, this.sourceSpan);\n        };\n        return FunctionExpr;\n    }(Expression));\n    var BinaryOperatorExpr = (function (_super) {\n        __extends(BinaryOperatorExpr, _super);\n        /**\n         * @param {?} operator\n         * @param {?} lhs\n         * @param {?} rhs\n         * @param {?=} type\n         * @param {?=} sourceSpan\n         */\n        function BinaryOperatorExpr(operator, lhs, rhs, type, sourceSpan) {\n            if (type === void 0) { type = null; }\n            var _this = _super.call(this, type || lhs.type, sourceSpan) || this;\n            _this.operator = operator;\n            _this.rhs = rhs;\n            _this.lhs = lhs;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        BinaryOperatorExpr.prototype.visitExpression = function (visitor, context) {\n            return visitor.visitBinaryOperatorExpr(this, context);\n        };\n        return BinaryOperatorExpr;\n    }(Expression));\n    var ReadPropExpr = (function (_super) {\n        __extends(ReadPropExpr, _super);\n        /**\n         * @param {?} receiver\n         * @param {?} name\n         * @param {?=} type\n         * @param {?=} sourceSpan\n         */\n        function ReadPropExpr(receiver, name, type, sourceSpan) {\n            if (type === void 0) { type = null; }\n            var _this = _super.call(this, type, sourceSpan) || this;\n            _this.receiver = receiver;\n            _this.name = name;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        ReadPropExpr.prototype.visitExpression = function (visitor, context) {\n            return visitor.visitReadPropExpr(this, context);\n        };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        ReadPropExpr.prototype.set = function (value) {\n            return new WritePropExpr(this.receiver, this.name, value, null, this.sourceSpan);\n        };\n        return ReadPropExpr;\n    }(Expression));\n    var ReadKeyExpr = (function (_super) {\n        __extends(ReadKeyExpr, _super);\n        /**\n         * @param {?} receiver\n         * @param {?} index\n         * @param {?=} type\n         * @param {?=} sourceSpan\n         */\n        function ReadKeyExpr(receiver, index, type, sourceSpan) {\n            if (type === void 0) { type = null; }\n            var _this = _super.call(this, type, sourceSpan) || this;\n            _this.receiver = receiver;\n            _this.index = index;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        ReadKeyExpr.prototype.visitExpression = function (visitor, context) {\n            return visitor.visitReadKeyExpr(this, context);\n        };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        ReadKeyExpr.prototype.set = function (value) {\n            return new WriteKeyExpr(this.receiver, this.index, value, null, this.sourceSpan);\n        };\n        return ReadKeyExpr;\n    }(Expression));\n    var LiteralArrayExpr = (function (_super) {\n        __extends(LiteralArrayExpr, _super);\n        /**\n         * @param {?} entries\n         * @param {?=} type\n         * @param {?=} sourceSpan\n         */\n        function LiteralArrayExpr(entries, type, sourceSpan) {\n            if (type === void 0) { type = null; }\n            var _this = _super.call(this, type, sourceSpan) || this;\n            _this.entries = entries;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        LiteralArrayExpr.prototype.visitExpression = function (visitor, context) {\n            return visitor.visitLiteralArrayExpr(this, context);\n        };\n        return LiteralArrayExpr;\n    }(Expression));\n    var LiteralMapEntry = (function () {\n        /**\n         * @param {?} key\n         * @param {?} value\n         * @param {?=} quoted\n         */\n        function LiteralMapEntry(key, value, quoted) {\n            if (quoted === void 0) { quoted = false; }\n            this.key = key;\n            this.value = value;\n            this.quoted = quoted;\n        }\n        return LiteralMapEntry;\n    }());\n    var LiteralMapExpr = (function (_super) {\n        __extends(LiteralMapExpr, _super);\n        /**\n         * @param {?} entries\n         * @param {?=} type\n         * @param {?=} sourceSpan\n         */\n        function LiteralMapExpr(entries, type, sourceSpan) {\n            if (type === void 0) { type = null; }\n            var _this = _super.call(this, type, sourceSpan) || this;\n            _this.entries = entries;\n            _this.valueType = null;\n            if (type) {\n                _this.valueType = type.valueType;\n            }\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        LiteralMapExpr.prototype.visitExpression = function (visitor, context) {\n            return visitor.visitLiteralMapExpr(this, context);\n        };\n        return LiteralMapExpr;\n    }(Expression));\n    var CommaExpr = (function (_super) {\n        __extends(CommaExpr, _super);\n        /**\n         * @param {?} parts\n         * @param {?=} sourceSpan\n         */\n        function CommaExpr(parts, sourceSpan) {\n            var _this = _super.call(this, parts[parts.length - 1].type, sourceSpan) || this;\n            _this.parts = parts;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        CommaExpr.prototype.visitExpression = function (visitor, context) {\n            return visitor.visitCommaExpr(this, context);\n        };\n        return CommaExpr;\n    }(Expression));\n    var /** @type {?} */ THIS_EXPR = new ReadVarExpr(BuiltinVar.This);\n    var /** @type {?} */ SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super);\n    var /** @type {?} */ CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError);\n    var /** @type {?} */ CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack);\n    var /** @type {?} */ NULL_EXPR = new LiteralExpr(null, null);\n    var /** @type {?} */ TYPED_NULL_EXPR = new LiteralExpr(null, INFERRED_TYPE);\n    var StmtModifier = {};\n    StmtModifier.Final = 0;\n    StmtModifier.Private = 1;\n    StmtModifier[StmtModifier.Final] = \"Final\";\n    StmtModifier[StmtModifier.Private] = \"Private\";\n    /**\n     * @abstract\n     */\n    var Statement = (function () {\n        /**\n         * @param {?=} modifiers\n         * @param {?=} sourceSpan\n         */\n        function Statement(modifiers, sourceSpan) {\n            if (modifiers === void 0) { modifiers = null; }\n            this.modifiers = modifiers;\n            this.sourceSpan = sourceSpan;\n            if (!modifiers) {\n                this.modifiers = [];\n            }\n        }\n        /**\n         * @abstract\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        Statement.prototype.visitStatement = function (visitor, context) { };\n        /**\n         * @param {?} modifier\n         * @return {?}\n         */\n        Statement.prototype.hasModifier = function (modifier) { return this.modifiers.indexOf(modifier) !== -1; };\n        return Statement;\n    }());\n    var DeclareVarStmt = (function (_super) {\n        __extends(DeclareVarStmt, _super);\n        /**\n         * @param {?} name\n         * @param {?} value\n         * @param {?=} type\n         * @param {?=} modifiers\n         * @param {?=} sourceSpan\n         */\n        function DeclareVarStmt(name, value, type, modifiers, sourceSpan) {\n            if (type === void 0) { type = null; }\n            if (modifiers === void 0) { modifiers = null; }\n            var _this = _super.call(this, modifiers, sourceSpan) || this;\n            _this.name = name;\n            _this.value = value;\n            _this.type = type || value.type;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        DeclareVarStmt.prototype.visitStatement = function (visitor, context) {\n            return visitor.visitDeclareVarStmt(this, context);\n        };\n        return DeclareVarStmt;\n    }(Statement));\n    var DeclareFunctionStmt = (function (_super) {\n        __extends(DeclareFunctionStmt, _super);\n        /**\n         * @param {?} name\n         * @param {?} params\n         * @param {?} statements\n         * @param {?=} type\n         * @param {?=} modifiers\n         * @param {?=} sourceSpan\n         */\n        function DeclareFunctionStmt(name, params, statements, type, modifiers, sourceSpan) {\n            if (type === void 0) { type = null; }\n            if (modifiers === void 0) { modifiers = null; }\n            var _this = _super.call(this, modifiers, sourceSpan) || this;\n            _this.name = name;\n            _this.params = params;\n            _this.statements = statements;\n            _this.type = type;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        DeclareFunctionStmt.prototype.visitStatement = function (visitor, context) {\n            return visitor.visitDeclareFunctionStmt(this, context);\n        };\n        return DeclareFunctionStmt;\n    }(Statement));\n    var ExpressionStatement = (function (_super) {\n        __extends(ExpressionStatement, _super);\n        /**\n         * @param {?} expr\n         * @param {?=} sourceSpan\n         */\n        function ExpressionStatement(expr, sourceSpan) {\n            var _this = _super.call(this, null, sourceSpan) || this;\n            _this.expr = expr;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        ExpressionStatement.prototype.visitStatement = function (visitor, context) {\n            return visitor.visitExpressionStmt(this, context);\n        };\n        return ExpressionStatement;\n    }(Statement));\n    var ReturnStatement = (function (_super) {\n        __extends(ReturnStatement, _super);\n        /**\n         * @param {?} value\n         * @param {?=} sourceSpan\n         */\n        function ReturnStatement(value, sourceSpan) {\n            var _this = _super.call(this, null, sourceSpan) || this;\n            _this.value = value;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        ReturnStatement.prototype.visitStatement = function (visitor, context) {\n            return visitor.visitReturnStmt(this, context);\n        };\n        return ReturnStatement;\n    }(Statement));\n    var AbstractClassPart = (function () {\n        /**\n         * @param {?=} type\n         * @param {?=} modifiers\n         */\n        function AbstractClassPart(type, modifiers) {\n            if (type === void 0) { type = null; }\n            this.type = type;\n            this.modifiers = modifiers;\n            if (!modifiers) {\n                this.modifiers = [];\n            }\n        }\n        /**\n         * @param {?} modifier\n         * @return {?}\n         */\n        AbstractClassPart.prototype.hasModifier = function (modifier) { return this.modifiers.indexOf(modifier) !== -1; };\n        return AbstractClassPart;\n    }());\n    var ClassField = (function (_super) {\n        __extends(ClassField, _super);\n        /**\n         * @param {?} name\n         * @param {?=} type\n         * @param {?=} modifiers\n         */\n        function ClassField(name, type, modifiers) {\n            if (type === void 0) { type = null; }\n            if (modifiers === void 0) { modifiers = null; }\n            var _this = _super.call(this, type, modifiers) || this;\n            _this.name = name;\n            return _this;\n        }\n        return ClassField;\n    }(AbstractClassPart));\n    var ClassMethod = (function (_super) {\n        __extends(ClassMethod, _super);\n        /**\n         * @param {?} name\n         * @param {?} params\n         * @param {?} body\n         * @param {?=} type\n         * @param {?=} modifiers\n         */\n        function ClassMethod(name, params, body, type, modifiers) {\n            if (type === void 0) { type = null; }\n            if (modifiers === void 0) { modifiers = null; }\n            var _this = _super.call(this, type, modifiers) || this;\n            _this.name = name;\n            _this.params = params;\n            _this.body = body;\n            return _this;\n        }\n        return ClassMethod;\n    }(AbstractClassPart));\n    var ClassGetter = (function (_super) {\n        __extends(ClassGetter, _super);\n        /**\n         * @param {?} name\n         * @param {?} body\n         * @param {?=} type\n         * @param {?=} modifiers\n         */\n        function ClassGetter(name, body, type, modifiers) {\n            if (type === void 0) { type = null; }\n            if (modifiers === void 0) { modifiers = null; }\n            var _this = _super.call(this, type, modifiers) || this;\n            _this.name = name;\n            _this.body = body;\n            return _this;\n        }\n        return ClassGetter;\n    }(AbstractClassPart));\n    var ClassStmt = (function (_super) {\n        __extends(ClassStmt, _super);\n        /**\n         * @param {?} name\n         * @param {?} parent\n         * @param {?} fields\n         * @param {?} getters\n         * @param {?} constructorMethod\n         * @param {?} methods\n         * @param {?=} modifiers\n         * @param {?=} sourceSpan\n         */\n        function ClassStmt(name, parent, fields, getters, constructorMethod, methods, modifiers, sourceSpan) {\n            if (modifiers === void 0) { modifiers = null; }\n            var _this = _super.call(this, modifiers, sourceSpan) || this;\n            _this.name = name;\n            _this.parent = parent;\n            _this.fields = fields;\n            _this.getters = getters;\n            _this.constructorMethod = constructorMethod;\n            _this.methods = methods;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        ClassStmt.prototype.visitStatement = function (visitor, context) {\n            return visitor.visitDeclareClassStmt(this, context);\n        };\n        return ClassStmt;\n    }(Statement));\n    var IfStmt = (function (_super) {\n        __extends(IfStmt, _super);\n        /**\n         * @param {?} condition\n         * @param {?} trueCase\n         * @param {?=} falseCase\n         * @param {?=} sourceSpan\n         */\n        function IfStmt(condition, trueCase, falseCase, sourceSpan) {\n            if (falseCase === void 0) { falseCase = []; }\n            var _this = _super.call(this, null, sourceSpan) || this;\n            _this.condition = condition;\n            _this.trueCase = trueCase;\n            _this.falseCase = falseCase;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        IfStmt.prototype.visitStatement = function (visitor, context) {\n            return visitor.visitIfStmt(this, context);\n        };\n        return IfStmt;\n    }(Statement));\n    var TryCatchStmt = (function (_super) {\n        __extends(TryCatchStmt, _super);\n        /**\n         * @param {?} bodyStmts\n         * @param {?} catchStmts\n         * @param {?=} sourceSpan\n         */\n        function TryCatchStmt(bodyStmts, catchStmts, sourceSpan) {\n            var _this = _super.call(this, null, sourceSpan) || this;\n            _this.bodyStmts = bodyStmts;\n            _this.catchStmts = catchStmts;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        TryCatchStmt.prototype.visitStatement = function (visitor, context) {\n            return visitor.visitTryCatchStmt(this, context);\n        };\n        return TryCatchStmt;\n    }(Statement));\n    var ThrowStmt = (function (_super) {\n        __extends(ThrowStmt, _super);\n        /**\n         * @param {?} error\n         * @param {?=} sourceSpan\n         */\n        function ThrowStmt(error, sourceSpan) {\n            var _this = _super.call(this, null, sourceSpan) || this;\n            _this.error = error;\n            return _this;\n        }\n        /**\n         * @param {?} visitor\n         * @param {?} context\n         * @return {?}\n         */\n        ThrowStmt.prototype.visitStatement = function (visitor, context) {\n            return visitor.visitThrowStmt(this, context);\n        };\n        return ThrowStmt;\n    }(Statement));\n    var AstTransformer$1 = (function () {\n        function AstTransformer$1() {\n        }\n        /**\n         * @param {?} expr\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer$1.prototype.transformExpr = function (expr, context) { return expr; };\n        /**\n         * @param {?} stmt\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer$1.prototype.transformStmt = function (stmt, context) { return stmt; };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer$1.prototype.visitReadVarExpr = function (ast, context) { return this.transformExpr(ast, context); };\n        /**\n         * @param {?} expr\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer$1.prototype.visitWriteVarExpr = function (expr, context) {\n            return this.transformExpr(new WriteVarExpr(expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n        };\n        /**\n         * @param {?} expr\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer$1.prototype.visitWriteKeyExpr = function (expr, context) {\n            return this.transformExpr(new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n        };\n        /**\n         * @param {?} expr\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer$1.prototype.visitWritePropExpr = function (expr, context) {\n            return this.transformExpr(new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer$1.prototype.visitInvokeMethodExpr = function (ast, context) {\n            var /** @type {?} */ method = ast.builtin || ast.name;\n            return this.transformExpr(new InvokeMethodExpr(ast.receiver.visitExpression(this, context), method, this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer$1.prototype.visitInvokeFunctionExpr = function (ast, context) {\n            return this.transformExpr(new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer$1.prototype.visitInstantiateExpr = function (ast, context) {\n            return this.transformExpr(new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer$1.prototype.visitLiteralExpr = function (ast, context) { return this.transformExpr(ast, context); };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer$1.prototype.visitExternalExpr = function (ast, context) {\n            return this.transformExpr(ast, context);\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer$1.prototype.visitConditionalExpr = function (ast, context) {\n            return this.transformExpr(new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), ast.falseCase.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer$1.prototype.visitNotExpr = function (ast, context) {\n            return this.transformExpr(new NotExpr(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer$1.prototype.visitCastExpr = function (ast, context) {\n            return this.transformExpr(new CastExpr(ast.value.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer$1.prototype.visitFunctionExpr = function (ast, context) {\n            return this.transformExpr(new FunctionExpr(ast.params, this.visitAllStatements(ast.statements, context), ast.type, ast.sourceSpan), context);\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer$1.prototype.visitBinaryOperatorExpr = function (ast, context) {\n            return this.transformExpr(new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer$1.prototype.visitReadPropExpr = function (ast, context) {\n            return this.transformExpr(new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type, ast.sourceSpan), context);\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer$1.prototype.visitReadKeyExpr = function (ast, context) {\n            return this.transformExpr(new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer$1.prototype.visitLiteralArrayExpr = function (ast, context) {\n            return this.transformExpr(new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context), ast.type, ast.sourceSpan), context);\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer$1.prototype.visitLiteralMapExpr = function (ast, context) {\n            var _this = this;\n            var /** @type {?} */ entries = ast.entries.map(function (entry) { return new LiteralMapEntry(entry.key, entry.value.visitExpression(_this, context), entry.quoted); });\n            var /** @type {?} */ mapType = new MapType(ast.valueType);\n            return this.transformExpr(new LiteralMapExpr(entries, mapType, ast.sourceSpan), context);\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer$1.prototype.visitCommaExpr = function (ast, context) {\n            return this.transformExpr(new CommaExpr(this.visitAllExpressions(ast.parts, context), ast.sourceSpan), context);\n        };\n        /**\n         * @param {?} exprs\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer$1.prototype.visitAllExpressions = function (exprs, context) {\n            var _this = this;\n            return exprs.map(function (expr) { return expr.visitExpression(_this, context); });\n        };\n        /**\n         * @param {?} stmt\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer$1.prototype.visitDeclareVarStmt = function (stmt, context) {\n            return this.transformStmt(new DeclareVarStmt(stmt.name, stmt.value.visitExpression(this, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n        };\n        /**\n         * @param {?} stmt\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer$1.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n            return this.transformStmt(new DeclareFunctionStmt(stmt.name, stmt.params, this.visitAllStatements(stmt.statements, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n        };\n        /**\n         * @param {?} stmt\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer$1.prototype.visitExpressionStmt = function (stmt, context) {\n            return this.transformStmt(new ExpressionStatement(stmt.expr.visitExpression(this, context), stmt.sourceSpan), context);\n        };\n        /**\n         * @param {?} stmt\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer$1.prototype.visitReturnStmt = function (stmt, context) {\n            return this.transformStmt(new ReturnStatement(stmt.value.visitExpression(this, context), stmt.sourceSpan), context);\n        };\n        /**\n         * @param {?} stmt\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer$1.prototype.visitDeclareClassStmt = function (stmt, context) {\n            var _this = this;\n            var /** @type {?} */ parent = stmt.parent.visitExpression(this, context);\n            var /** @type {?} */ getters = stmt.getters.map(function (getter) { return new ClassGetter(getter.name, _this.visitAllStatements(getter.body, context), getter.type, getter.modifiers); });\n            var /** @type {?} */ ctorMethod = stmt.constructorMethod &&\n                new ClassMethod(stmt.constructorMethod.name, stmt.constructorMethod.params, this.visitAllStatements(stmt.constructorMethod.body, context), stmt.constructorMethod.type, stmt.constructorMethod.modifiers);\n            var /** @type {?} */ methods = stmt.methods.map(function (method) { return new ClassMethod(method.name, method.params, _this.visitAllStatements(method.body, context), method.type, method.modifiers); });\n            return this.transformStmt(new ClassStmt(stmt.name, parent, stmt.fields, getters, ctorMethod, methods, stmt.modifiers, stmt.sourceSpan), context);\n        };\n        /**\n         * @param {?} stmt\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer$1.prototype.visitIfStmt = function (stmt, context) {\n            return this.transformStmt(new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context), stmt.sourceSpan), context);\n        };\n        /**\n         * @param {?} stmt\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer$1.prototype.visitTryCatchStmt = function (stmt, context) {\n            return this.transformStmt(new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context), stmt.sourceSpan), context);\n        };\n        /**\n         * @param {?} stmt\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer$1.prototype.visitThrowStmt = function (stmt, context) {\n            return this.transformStmt(new ThrowStmt(stmt.error.visitExpression(this, context), stmt.sourceSpan), context);\n        };\n        /**\n         * @param {?} stmt\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer$1.prototype.visitCommentStmt = function (stmt, context) {\n            return this.transformStmt(stmt, context);\n        };\n        /**\n         * @param {?} stmts\n         * @param {?} context\n         * @return {?}\n         */\n        AstTransformer$1.prototype.visitAllStatements = function (stmts, context) {\n            var _this = this;\n            return stmts.map(function (stmt) { return stmt.visitStatement(_this, context); });\n        };\n        return AstTransformer$1;\n    }());\n    var RecursiveAstVisitor$1 = (function () {\n        function RecursiveAstVisitor$1() {\n        }\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor$1.prototype.visitReadVarExpr = function (ast, context) { return ast; };\n        /**\n         * @param {?} expr\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor$1.prototype.visitWriteVarExpr = function (expr, context) {\n            expr.value.visitExpression(this, context);\n            return expr;\n        };\n        /**\n         * @param {?} expr\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor$1.prototype.visitWriteKeyExpr = function (expr, context) {\n            expr.receiver.visitExpression(this, context);\n            expr.index.visitExpression(this, context);\n            expr.value.visitExpression(this, context);\n            return expr;\n        };\n        /**\n         * @param {?} expr\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor$1.prototype.visitWritePropExpr = function (expr, context) {\n            expr.receiver.visitExpression(this, context);\n            expr.value.visitExpression(this, context);\n            return expr;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor$1.prototype.visitInvokeMethodExpr = function (ast, context) {\n            ast.receiver.visitExpression(this, context);\n            this.visitAllExpressions(ast.args, context);\n            return ast;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor$1.prototype.visitInvokeFunctionExpr = function (ast, context) {\n            ast.fn.visitExpression(this, context);\n            this.visitAllExpressions(ast.args, context);\n            return ast;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor$1.prototype.visitInstantiateExpr = function (ast, context) {\n            ast.classExpr.visitExpression(this, context);\n            this.visitAllExpressions(ast.args, context);\n            return ast;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor$1.prototype.visitLiteralExpr = function (ast, context) { return ast; };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor$1.prototype.visitExternalExpr = function (ast, context) { return ast; };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor$1.prototype.visitConditionalExpr = function (ast, context) {\n            ast.condition.visitExpression(this, context);\n            ast.trueCase.visitExpression(this, context);\n            ast.falseCase.visitExpression(this, context);\n            return ast;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor$1.prototype.visitNotExpr = function (ast, context) {\n            ast.condition.visitExpression(this, context);\n            return ast;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor$1.prototype.visitCastExpr = function (ast, context) {\n            ast.value.visitExpression(this, context);\n            return ast;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor$1.prototype.visitFunctionExpr = function (ast, context) {\n            this.visitAllStatements(ast.statements, context);\n            return ast;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor$1.prototype.visitBinaryOperatorExpr = function (ast, context) {\n            ast.lhs.visitExpression(this, context);\n            ast.rhs.visitExpression(this, context);\n            return ast;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor$1.prototype.visitReadPropExpr = function (ast, context) {\n            ast.receiver.visitExpression(this, context);\n            return ast;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor$1.prototype.visitReadKeyExpr = function (ast, context) {\n            ast.receiver.visitExpression(this, context);\n            ast.index.visitExpression(this, context);\n            return ast;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor$1.prototype.visitLiteralArrayExpr = function (ast, context) {\n            this.visitAllExpressions(ast.entries, context);\n            return ast;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor$1.prototype.visitLiteralMapExpr = function (ast, context) {\n            var _this = this;\n            ast.entries.forEach(function (entry) { return entry.value.visitExpression(_this, context); });\n            return ast;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor$1.prototype.visitCommaExpr = function (ast, context) {\n            this.visitAllExpressions(ast.parts, context);\n        };\n        /**\n         * @param {?} exprs\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor$1.prototype.visitAllExpressions = function (exprs, context) {\n            var _this = this;\n            exprs.forEach(function (expr) { return expr.visitExpression(_this, context); });\n        };\n        /**\n         * @param {?} stmt\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor$1.prototype.visitDeclareVarStmt = function (stmt, context) {\n            stmt.value.visitExpression(this, context);\n            return stmt;\n        };\n        /**\n         * @param {?} stmt\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor$1.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n            this.visitAllStatements(stmt.statements, context);\n            return stmt;\n        };\n        /**\n         * @param {?} stmt\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor$1.prototype.visitExpressionStmt = function (stmt, context) {\n            stmt.expr.visitExpression(this, context);\n            return stmt;\n        };\n        /**\n         * @param {?} stmt\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor$1.prototype.visitReturnStmt = function (stmt, context) {\n            stmt.value.visitExpression(this, context);\n            return stmt;\n        };\n        /**\n         * @param {?} stmt\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor$1.prototype.visitDeclareClassStmt = function (stmt, context) {\n            var _this = this;\n            stmt.parent.visitExpression(this, context);\n            stmt.getters.forEach(function (getter) { return _this.visitAllStatements(getter.body, context); });\n            if (stmt.constructorMethod) {\n                this.visitAllStatements(stmt.constructorMethod.body, context);\n            }\n            stmt.methods.forEach(function (method) { return _this.visitAllStatements(method.body, context); });\n            return stmt;\n        };\n        /**\n         * @param {?} stmt\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor$1.prototype.visitIfStmt = function (stmt, context) {\n            stmt.condition.visitExpression(this, context);\n            this.visitAllStatements(stmt.trueCase, context);\n            this.visitAllStatements(stmt.falseCase, context);\n            return stmt;\n        };\n        /**\n         * @param {?} stmt\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor$1.prototype.visitTryCatchStmt = function (stmt, context) {\n            this.visitAllStatements(stmt.bodyStmts, context);\n            this.visitAllStatements(stmt.catchStmts, context);\n            return stmt;\n        };\n        /**\n         * @param {?} stmt\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor$1.prototype.visitThrowStmt = function (stmt, context) {\n            stmt.error.visitExpression(this, context);\n            return stmt;\n        };\n        /**\n         * @param {?} stmt\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor$1.prototype.visitCommentStmt = function (stmt, context) { return stmt; };\n        /**\n         * @param {?} stmts\n         * @param {?} context\n         * @return {?}\n         */\n        RecursiveAstVisitor$1.prototype.visitAllStatements = function (stmts, context) {\n            var _this = this;\n            stmts.forEach(function (stmt) { return stmt.visitStatement(_this, context); });\n        };\n        return RecursiveAstVisitor$1;\n    }());\n    /**\n     * @param {?} stmts\n     * @return {?}\n     */\n    function findReadVarNames(stmts) {\n        var /** @type {?} */ visitor = new _ReadVarVisitor();\n        visitor.visitAllStatements(stmts, null);\n        return visitor.varNames;\n    }\n    var _ReadVarVisitor = (function (_super) {\n        __extends(_ReadVarVisitor, _super);\n        function _ReadVarVisitor() {\n            var _this = _super.apply(this, arguments) || this;\n            _this.varNames = new Set();\n            return _this;\n        }\n        /**\n         * @param {?} stmt\n         * @param {?} context\n         * @return {?}\n         */\n        _ReadVarVisitor.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n            // Don't descend into nested functions\n            return stmt;\n        };\n        /**\n         * @param {?} stmt\n         * @param {?} context\n         * @return {?}\n         */\n        _ReadVarVisitor.prototype.visitDeclareClassStmt = function (stmt, context) {\n            // Don't descend into nested classes\n            return stmt;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        _ReadVarVisitor.prototype.visitReadVarExpr = function (ast, context) {\n            this.varNames.add(ast.name);\n            return null;\n        };\n        return _ReadVarVisitor;\n    }(RecursiveAstVisitor$1));\n    /**\n     * @param {?} stmt\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function applySourceSpanToStatementIfNeeded(stmt, sourceSpan) {\n        if (!sourceSpan) {\n            return stmt;\n        }\n        var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n        return stmt.visitStatement(transformer, null);\n    }\n    /**\n     * @param {?} expr\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function applySourceSpanToExpressionIfNeeded(expr, sourceSpan) {\n        if (!sourceSpan) {\n            return expr;\n        }\n        var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n        return expr.visitExpression(transformer, null);\n    }\n    var _ApplySourceSpanTransformer = (function (_super) {\n        __extends(_ApplySourceSpanTransformer, _super);\n        /**\n         * @param {?} sourceSpan\n         */\n        function _ApplySourceSpanTransformer(sourceSpan) {\n            var _this = _super.call(this) || this;\n            _this.sourceSpan = sourceSpan;\n            return _this;\n        }\n        /**\n         * @param {?} obj\n         * @return {?}\n         */\n        _ApplySourceSpanTransformer.prototype._clone = function (obj) {\n            var /** @type {?} */ clone = Object.create(obj.constructor.prototype);\n            for (var /** @type {?} */ prop in obj) {\n                clone[prop] = obj[prop];\n            }\n            return clone;\n        };\n        /**\n         * @param {?} expr\n         * @param {?} context\n         * @return {?}\n         */\n        _ApplySourceSpanTransformer.prototype.transformExpr = function (expr, context) {\n            if (!expr.sourceSpan) {\n                expr = this._clone(expr);\n                expr.sourceSpan = this.sourceSpan;\n            }\n            return expr;\n        };\n        /**\n         * @param {?} stmt\n         * @param {?} context\n         * @return {?}\n         */\n        _ApplySourceSpanTransformer.prototype.transformStmt = function (stmt, context) {\n            if (!stmt.sourceSpan) {\n                stmt = this._clone(stmt);\n                stmt.sourceSpan = this.sourceSpan;\n            }\n            return stmt;\n        };\n        return _ApplySourceSpanTransformer;\n    }(AstTransformer$1));\n    /**\n     * @param {?} name\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function variable(name, type, sourceSpan) {\n        if (type === void 0) { type = null; }\n        return new ReadVarExpr(name, type, sourceSpan);\n    }\n    /**\n     * @param {?} id\n     * @param {?=} typeParams\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function importExpr(id, typeParams, sourceSpan) {\n        if (typeParams === void 0) { typeParams = null; }\n        return new ExternalExpr(id, null, typeParams, sourceSpan);\n    }\n    /**\n     * @param {?} id\n     * @param {?=} typeParams\n     * @param {?=} typeModifiers\n     * @return {?}\n     */\n    function importType(id, typeParams, typeModifiers) {\n        if (typeParams === void 0) { typeParams = null; }\n        if (typeModifiers === void 0) { typeModifiers = null; }\n        return id != null ? expressionType(importExpr(id, typeParams), typeModifiers) : null;\n    }\n    /**\n     * @param {?} expr\n     * @param {?=} typeModifiers\n     * @return {?}\n     */\n    function expressionType(expr, typeModifiers) {\n        if (typeModifiers === void 0) { typeModifiers = null; }\n        return expr != null ? new ExpressionType(expr, typeModifiers) : null;\n    }\n    /**\n     * @param {?} values\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function literalArr(values, type, sourceSpan) {\n        if (type === void 0) { type = null; }\n        return new LiteralArrayExpr(values, type, sourceSpan);\n    }\n    /**\n     * @param {?} values\n     * @param {?=} type\n     * @param {?=} quoted\n     * @return {?}\n     */\n    function literalMap(values, type, quoted) {\n        if (type === void 0) { type = null; }\n        if (quoted === void 0) { quoted = false; }\n        return new LiteralMapExpr(values.map(function (entry) { return new LiteralMapEntry(entry[0], entry[1], quoted); }), type);\n    }\n    /**\n     * @param {?} expr\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function not(expr, sourceSpan) {\n        return new NotExpr(expr, sourceSpan);\n    }\n    /**\n     * @param {?} params\n     * @param {?} body\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function fn(params, body, type, sourceSpan) {\n        if (type === void 0) { type = null; }\n        return new FunctionExpr(params, body, type, sourceSpan);\n    }\n    /**\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function literal(value, type, sourceSpan) {\n        if (type === void 0) { type = null; }\n        return new LiteralExpr(value, type, sourceSpan);\n    }\n    /**\n     * Create a new class stmts based on the given data.\n     * @param {?} config\n     * @return {?}\n     */\n    function createClassStmt(config) {\n        var /** @type {?} */ parentArgs = config.parentArgs || [];\n        var /** @type {?} */ superCtorStmts = config.parent ? [SUPER_EXPR.callFn(parentArgs).toStmt()] : [];\n        var /** @type {?} */ builder = concatClassBuilderParts(Array.isArray(config.builders) ? config.builders : [config.builders]);\n        var /** @type {?} */ ctor = new ClassMethod(null, config.ctorParams || [], superCtorStmts.concat(builder.ctorStmts));\n        return new ClassStmt(config.name, config.parent, builder.fields, builder.getters, ctor, builder.methods, config.modifiers || [], config.sourceSpan);\n    }\n    /**\n     * @param {?} builders\n     * @return {?}\n     */\n    function concatClassBuilderParts(builders) {\n        return {\n            fields: [].concat.apply([], builders.map(function (builder) { return builder.fields || []; })),\n            methods: [].concat.apply([], builders.map(function (builder) { return builder.methods || []; })),\n            getters: [].concat.apply([], builders.map(function (builder) { return builder.getters || []; })),\n            ctorStmts: [].concat.apply([], builders.map(function (builder) { return builder.ctorStmts || []; })),\n        };\n    }\n    var /** @type {?} */ QUOTED_KEYS = '$quoted$';\n    /**\n     * @param {?} value\n     * @param {?=} type\n     * @return {?}\n     */\n    function convertValueToOutputAst(value, type) {\n        if (type === void 0) { type = null; }\n        return visitValue(value, new _ValueOutputAstTransformer(), type);\n    }\n    var _ValueOutputAstTransformer = (function () {\n        function _ValueOutputAstTransformer() {\n        }\n        /**\n         * @param {?} arr\n         * @param {?} type\n         * @return {?}\n         */\n        _ValueOutputAstTransformer.prototype.visitArray = function (arr, type) {\n            var _this = this;\n            return literalArr(arr.map(function (value) { return visitValue(value, _this, null); }), type);\n        };\n        /**\n         * @param {?} map\n         * @param {?} type\n         * @return {?}\n         */\n        _ValueOutputAstTransformer.prototype.visitStringMap = function (map, type) {\n            var _this = this;\n            var /** @type {?} */ entries = [];\n            var /** @type {?} */ quotedSet = new Set(map && map[QUOTED_KEYS]);\n            Object.keys(map).forEach(function (key) {\n                entries.push(new LiteralMapEntry(key, visitValue(map[key], _this, null), quotedSet.has(key)));\n            });\n            return new LiteralMapExpr(entries, type);\n        };\n        /**\n         * @param {?} value\n         * @param {?} type\n         * @return {?}\n         */\n        _ValueOutputAstTransformer.prototype.visitPrimitive = function (value, type) { return literal(value, type); };\n        /**\n         * @param {?} value\n         * @param {?} type\n         * @return {?}\n         */\n        _ValueOutputAstTransformer.prototype.visitOther = function (value, type) {\n            if (value instanceof Expression) {\n                return value;\n            }\n            else {\n                return importExpr({ reference: value });\n            }\n        };\n        return _ValueOutputAstTransformer;\n    }());\n    /**\n     * This is currently not read, but will probably be used in the future.\n     * We keep it as we already pass it through all the rigth places...\n     */\n    var ComponentFactoryDependency = (function () {\n        /**\n         * @param {?} compType\n         */\n        function ComponentFactoryDependency(compType) {\n            this.compType = compType;\n        }\n        return ComponentFactoryDependency;\n    }());\n    var NgModuleCompileResult = (function () {\n        /**\n         * @param {?} statements\n         * @param {?} ngModuleFactoryVar\n         * @param {?} dependencies\n         */\n        function NgModuleCompileResult(statements, ngModuleFactoryVar, dependencies) {\n            this.statements = statements;\n            this.ngModuleFactoryVar = ngModuleFactoryVar;\n            this.dependencies = dependencies;\n        }\n        return NgModuleCompileResult;\n    }());\n    var NgModuleCompiler = (function () {\n        function NgModuleCompiler() {\n        }\n        /**\n         * @param {?} ngModuleMeta\n         * @param {?} extraProviders\n         * @return {?}\n         */\n        NgModuleCompiler.prototype.compile = function (ngModuleMeta, extraProviders) {\n            var /** @type {?} */ sourceSpan = typeSourceSpan('NgModule', ngModuleMeta.type);\n            var /** @type {?} */ deps = [];\n            var /** @type {?} */ bootstrapComponentFactories = [];\n            var /** @type {?} */ entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents.map(function (entryComponent) {\n                if (ngModuleMeta.bootstrapComponents.some(function (id) { return id.reference === entryComponent.componentType; })) {\n                    bootstrapComponentFactories.push({ reference: entryComponent.componentFactory });\n                }\n                deps.push(new ComponentFactoryDependency(entryComponent.componentType));\n                return { reference: entryComponent.componentFactory };\n            });\n            var /** @type {?} */ builder = new _InjectorBuilder(ngModuleMeta, entryComponentFactories, bootstrapComponentFactories, sourceSpan);\n            var /** @type {?} */ providerParser = new NgModuleProviderAnalyzer(ngModuleMeta, extraProviders, sourceSpan);\n            providerParser.parse().forEach(function (provider) { return builder.addProvider(provider); });\n            var /** @type {?} */ injectorClass = builder.build();\n            var /** @type {?} */ ngModuleFactoryVar = identifierName(ngModuleMeta.type) + \"NgFactory\";\n            var /** @type {?} */ ngModuleFactoryStmt = variable(ngModuleFactoryVar)\n                .set(importExpr(createIdentifier(Identifiers.NgModuleFactory))\n                .instantiate([variable(injectorClass.name), importExpr(ngModuleMeta.type)], importType(createIdentifier(Identifiers.NgModuleFactory), [importType(ngModuleMeta.type)], [TypeModifier.Const])))\n                .toDeclStmt(null, [StmtModifier.Final]);\n            var /** @type {?} */ stmts = [injectorClass, ngModuleFactoryStmt];\n            if (ngModuleMeta.id) {\n                var /** @type {?} */ registerFactoryStmt = importExpr(createIdentifier(Identifiers.RegisterModuleFactoryFn))\n                    .callFn([literal(ngModuleMeta.id), variable(ngModuleFactoryVar)])\n                    .toStmt();\n                stmts.push(registerFactoryStmt);\n            }\n            return new NgModuleCompileResult(stmts, ngModuleFactoryVar, deps);\n        };\n        return NgModuleCompiler;\n    }());\n    NgModuleCompiler.decorators = [\n        { type: CompilerInjectable },\n    ];\n    /**\n     * @nocollapse\n     */\n    NgModuleCompiler.ctorParameters = function () { return []; };\n    var _InjectorBuilder = (function () {\n        /**\n         * @param {?} _ngModuleMeta\n         * @param {?} _entryComponentFactories\n         * @param {?} _bootstrapComponentFactories\n         * @param {?} _sourceSpan\n         */\n        function _InjectorBuilder(_ngModuleMeta, _entryComponentFactories, _bootstrapComponentFactories, _sourceSpan) {\n            this._ngModuleMeta = _ngModuleMeta;\n            this._entryComponentFactories = _entryComponentFactories;\n            this._bootstrapComponentFactories = _bootstrapComponentFactories;\n            this._sourceSpan = _sourceSpan;\n            this.fields = [];\n            this.getters = [];\n            this.methods = [];\n            this.ctorStmts = [];\n            this._lazyProps = new Map();\n            this._tokens = [];\n            this._instances = new Map();\n            this._createStmts = [];\n            this._destroyStmts = [];\n        }\n        /**\n         * @param {?} resolvedProvider\n         * @return {?}\n         */\n        _InjectorBuilder.prototype.addProvider = function (resolvedProvider) {\n            var _this = this;\n            var /** @type {?} */ providerValueExpressions = resolvedProvider.providers.map(function (provider) { return _this._getProviderValue(provider); });\n            var /** @type {?} */ propName = \"_\" + tokenName(resolvedProvider.token) + \"_\" + this._instances.size;\n            var /** @type {?} */ instance = this._createProviderProperty(propName, resolvedProvider, providerValueExpressions, resolvedProvider.multiProvider, resolvedProvider.eager);\n            if (resolvedProvider.lifecycleHooks.indexOf(_angular_core.ɵLifecycleHooks.OnDestroy) !== -1) {\n                var /** @type {?} */ callNgOnDestroy = instance.callMethod('ngOnDestroy', []);\n                if (!resolvedProvider.eager) {\n                    callNgOnDestroy = this._lazyProps.get(instance.name).and(callNgOnDestroy);\n                }\n                this._destroyStmts.push(callNgOnDestroy.toStmt());\n            }\n            this._tokens.push(resolvedProvider.token);\n            this._instances.set(tokenReference(resolvedProvider.token), instance);\n        };\n        /**\n         * @return {?}\n         */\n        _InjectorBuilder.prototype.build = function () {\n            var _this = this;\n            var /** @type {?} */ getMethodStmts = this._tokens.map(function (token) {\n                var /** @type {?} */ providerExpr = _this._instances.get(tokenReference(token));\n                return new IfStmt(InjectMethodVars.token.identical(createDiTokenExpression(token)), [new ReturnStatement(providerExpr)]);\n            });\n            var /** @type {?} */ methods = [\n                new ClassMethod('createInternal', [], this._createStmts.concat(new ReturnStatement(this._instances.get(this._ngModuleMeta.type.reference))), importType(this._ngModuleMeta.type)),\n                new ClassMethod('getInternal', [\n                    new FnParam(InjectMethodVars.token.name, DYNAMIC_TYPE),\n                    new FnParam(InjectMethodVars.notFoundResult.name, DYNAMIC_TYPE)\n                ], getMethodStmts.concat([new ReturnStatement(InjectMethodVars.notFoundResult)]), DYNAMIC_TYPE),\n                new ClassMethod('destroyInternal', [], this._destroyStmts),\n            ];\n            var /** @type {?} */ parentArgs = [\n                variable(InjectorProps.parent.name),\n                literalArr(this._entryComponentFactories.map(function (componentFactory) { return importExpr(componentFactory); })),\n                literalArr(this._bootstrapComponentFactories.map(function (componentFactory) { return importExpr(componentFactory); }))\n            ];\n            var /** @type {?} */ injClassName = identifierName(this._ngModuleMeta.type) + \"Injector\";\n            return createClassStmt({\n                name: injClassName,\n                ctorParams: [new FnParam(InjectorProps.parent.name, importType(createIdentifier(Identifiers.Injector)))],\n                parent: importExpr(createIdentifier(Identifiers.NgModuleInjector), [importType(this._ngModuleMeta.type)]),\n                parentArgs: parentArgs,\n                builders: [{ methods: methods }, this]\n            });\n        };\n        /**\n         * @param {?} provider\n         * @return {?}\n         */\n        _InjectorBuilder.prototype._getProviderValue = function (provider) {\n            var _this = this;\n            var /** @type {?} */ result;\n            if (provider.useExisting != null) {\n                result = this._getDependency({ token: provider.useExisting });\n            }\n            else if (provider.useFactory != null) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                var /** @type {?} */ depsExpr = deps.map(function (dep) { return _this._getDependency(dep); });\n                result = importExpr(provider.useFactory).callFn(depsExpr);\n            }\n            else if (provider.useClass != null) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                var /** @type {?} */ depsExpr = deps.map(function (dep) { return _this._getDependency(dep); });\n                result =\n                    importExpr(provider.useClass).instantiate(depsExpr, importType(provider.useClass));\n            }\n            else {\n                result = convertValueToOutputAst(provider.useValue);\n            }\n            return result;\n        };\n        /**\n         * @param {?} propName\n         * @param {?} provider\n         * @param {?} providerValueExpressions\n         * @param {?} isMulti\n         * @param {?} isEager\n         * @return {?}\n         */\n        _InjectorBuilder.prototype._createProviderProperty = function (propName, provider, providerValueExpressions, isMulti, isEager) {\n            var /** @type {?} */ resolvedProviderValueExpr;\n            var /** @type {?} */ type;\n            if (isMulti) {\n                resolvedProviderValueExpr = literalArr(providerValueExpressions);\n                type = new ArrayType(DYNAMIC_TYPE);\n            }\n            else {\n                resolvedProviderValueExpr = providerValueExpressions[0];\n                type = providerValueExpressions[0].type;\n            }\n            if (!type) {\n                type = DYNAMIC_TYPE;\n            }\n            if (isEager) {\n                this.fields.push(new ClassField(propName, type));\n                this._createStmts.push(THIS_EXPR.prop(propName).set(resolvedProviderValueExpr).toStmt());\n            }\n            else {\n                var /** @type {?} */ internalFieldProp = THIS_EXPR.prop(\"_\" + propName);\n                this.fields.push(new ClassField(internalFieldProp.name, type));\n                // Note: Equals is important for JS so that it also checks the undefined case!\n                var /** @type {?} */ getterStmts = [\n                    new IfStmt(internalFieldProp.isBlank(), [internalFieldProp.set(resolvedProviderValueExpr).toStmt()]),\n                    new ReturnStatement(internalFieldProp)\n                ];\n                this.getters.push(new ClassGetter(propName, getterStmts, type));\n                this._lazyProps.set(propName, internalFieldProp);\n            }\n            return THIS_EXPR.prop(propName);\n        };\n        /**\n         * @param {?} dep\n         * @return {?}\n         */\n        _InjectorBuilder.prototype._getDependency = function (dep) {\n            var /** @type {?} */ result = null;\n            if (dep.isValue) {\n                result = literal(dep.value);\n            }\n            if (!dep.isSkipSelf) {\n                if (dep.token) {\n                    if (tokenReference(dep.token) === resolveIdentifier(Identifiers.Injector)) {\n                        result = THIS_EXPR;\n                    }\n                    else if (tokenReference(dep.token) === resolveIdentifier(Identifiers.ComponentFactoryResolver)) {\n                        result = THIS_EXPR.prop('componentFactoryResolver');\n                    }\n                }\n                if (!result) {\n                    result = this._instances.get(tokenReference(dep.token));\n                }\n            }\n            if (!result) {\n                var /** @type {?} */ args = [createDiTokenExpression(dep.token)];\n                if (dep.isOptional) {\n                    args.push(NULL_EXPR);\n                }\n                result = InjectorProps.parent.callMethod('get', args);\n            }\n            return result;\n        };\n        return _InjectorBuilder;\n    }());\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    function createDiTokenExpression(token) {\n        if (token.value != null) {\n            return literal(token.value);\n        }\n        else {\n            return importExpr(token.identifier);\n        }\n    }\n    var InjectorProps = (function () {\n        function InjectorProps() {\n        }\n        return InjectorProps;\n    }());\n    InjectorProps.parent = THIS_EXPR.prop('parent');\n    var InjectMethodVars = (function () {\n        function InjectMethodVars() {\n        }\n        return InjectMethodVars;\n    }());\n    InjectMethodVars.token = variable('token');\n    InjectMethodVars.notFoundResult = variable('notFoundResult');\n    // https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n    var /** @type {?} */ VERSION$1 = 3;\n    var /** @type {?} */ JS_B64_PREFIX = '# sourceMappingURL=data:application/json;base64,';\n    var SourceMapGenerator = (function () {\n        /**\n         * @param {?=} file\n         */\n        function SourceMapGenerator(file) {\n            if (file === void 0) { file = null; }\n            this.file = file;\n            this.sourcesContent = new Map();\n            this.lines = [];\n            this.lastCol0 = 0;\n            this.hasMappings = false;\n        }\n        /**\n         * @param {?} url\n         * @param {?=} content\n         * @return {?}\n         */\n        SourceMapGenerator.prototype.addSource = function (url, content) {\n            if (content === void 0) { content = null; }\n            if (!this.sourcesContent.has(url)) {\n                this.sourcesContent.set(url, content);\n            }\n            return this;\n        };\n        /**\n         * @return {?}\n         */\n        SourceMapGenerator.prototype.addLine = function () {\n            this.lines.push([]);\n            this.lastCol0 = 0;\n            return this;\n        };\n        /**\n         * @param {?} col0\n         * @param {?=} sourceUrl\n         * @param {?=} sourceLine0\n         * @param {?=} sourceCol0\n         * @return {?}\n         */\n        SourceMapGenerator.prototype.addMapping = function (col0, sourceUrl, sourceLine0, sourceCol0) {\n            if (!this.currentLine) {\n                throw new Error(\"A line must be added before mappings can be added\");\n            }\n            if (sourceUrl != null && !this.sourcesContent.has(sourceUrl)) {\n                throw new Error(\"Unknown source file \\\"\" + sourceUrl + \"\\\"\");\n            }\n            if (col0 == null) {\n                throw new Error(\"The column in the generated code must be provided\");\n            }\n            if (col0 < this.lastCol0) {\n                throw new Error(\"Mapping should be added in output order\");\n            }\n            if (sourceUrl && (sourceLine0 == null || sourceCol0 == null)) {\n                throw new Error(\"The source location must be provided when a source url is provided\");\n            }\n            this.hasMappings = true;\n            this.lastCol0 = col0;\n            this.currentLine.push({ col0: col0, sourceUrl: sourceUrl, sourceLine0: sourceLine0, sourceCol0: sourceCol0 });\n            return this;\n        };\n        Object.defineProperty(SourceMapGenerator.prototype, \"currentLine\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.lines.slice(-1)[0]; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        SourceMapGenerator.prototype.toJSON = function () {\n            var _this = this;\n            if (!this.hasMappings) {\n                return null;\n            }\n            var /** @type {?} */ sourcesIndex = new Map();\n            var /** @type {?} */ sources = [];\n            var /** @type {?} */ sourcesContent = [];\n            Array.from(this.sourcesContent.keys()).forEach(function (url, i) {\n                sourcesIndex.set(url, i);\n                sources.push(url);\n                sourcesContent.push(_this.sourcesContent.get(url) || null);\n            });\n            var /** @type {?} */ mappings = '';\n            var /** @type {?} */ lastCol0 = 0;\n            var /** @type {?} */ lastSourceIndex = 0;\n            var /** @type {?} */ lastSourceLine0 = 0;\n            var /** @type {?} */ lastSourceCol0 = 0;\n            this.lines.forEach(function (segments) {\n                lastCol0 = 0;\n                mappings += segments\n                    .map(function (segment) {\n                    // zero-based starting column of the line in the generated code\n                    var /** @type {?} */ segAsStr = toBase64VLQ(segment.col0 - lastCol0);\n                    lastCol0 = segment.col0;\n                    if (segment.sourceUrl != null) {\n                        // zero-based index into the “sources” list\n                        segAsStr +=\n                            toBase64VLQ(sourcesIndex.get(segment.sourceUrl) - lastSourceIndex);\n                        lastSourceIndex = sourcesIndex.get(segment.sourceUrl);\n                        // the zero-based starting line in the original source\n                        segAsStr += toBase64VLQ(segment.sourceLine0 - lastSourceLine0);\n                        lastSourceLine0 = segment.sourceLine0;\n                        // the zero-based starting column in the original source\n                        segAsStr += toBase64VLQ(segment.sourceCol0 - lastSourceCol0);\n                        lastSourceCol0 = segment.sourceCol0;\n                    }\n                    return segAsStr;\n                })\n                    .join(',');\n                mappings += ';';\n            });\n            mappings = mappings.slice(0, -1);\n            return {\n                'file': this.file || '',\n                'version': VERSION$1,\n                'sourceRoot': '',\n                'sources': sources,\n                'sourcesContent': sourcesContent,\n                'mappings': mappings,\n            };\n        };\n        /**\n         * @return {?}\n         */\n        SourceMapGenerator.prototype.toJsComment = function () {\n            return this.hasMappings ? '//' + JS_B64_PREFIX + toBase64String(JSON.stringify(this, null, 0)) :\n                '';\n        };\n        return SourceMapGenerator;\n    }());\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    function toBase64String(value) {\n        var /** @type {?} */ b64 = '';\n        value = utf8Encode(value);\n        for (var /** @type {?} */ i = 0; i < value.length;) {\n            var /** @type {?} */ i1 = value.charCodeAt(i++);\n            var /** @type {?} */ i2 = value.charCodeAt(i++);\n            var /** @type {?} */ i3 = value.charCodeAt(i++);\n            b64 += toBase64Digit(i1 >> 2);\n            b64 += toBase64Digit(((i1 & 3) << 4) | (isNaN(i2) ? 0 : i2 >> 4));\n            b64 += isNaN(i2) ? '=' : toBase64Digit(((i2 & 15) << 2) | (i3 >> 6));\n            b64 += isNaN(i2) || isNaN(i3) ? '=' : toBase64Digit(i3 & 63);\n        }\n        return b64;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    function toBase64VLQ(value) {\n        value = value < 0 ? ((-value) << 1) + 1 : value << 1;\n        var /** @type {?} */ out = '';\n        do {\n            var /** @type {?} */ digit = value & 31;\n            value = value >> 5;\n            if (value > 0) {\n                digit = digit | 32;\n            }\n            out += toBase64Digit(digit);\n        } while (value > 0);\n        return out;\n    }\n    var /** @type {?} */ B64_DIGITS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    function toBase64Digit(value) {\n        if (value < 0 || value >= 64) {\n            throw new Error(\"Can only encode value in the range [0, 63]\");\n        }\n        return B64_DIGITS[value];\n    }\n    var /** @type {?} */ _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\n    var /** @type {?} */ _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\n    var /** @type {?} */ _INDENT_WITH = '  ';\n    var /** @type {?} */ CATCH_ERROR_VAR$1 = variable('error');\n    var /** @type {?} */ CATCH_STACK_VAR$1 = variable('stack');\n    var _EmittedLine = (function () {\n        /**\n         * @param {?} indent\n         */\n        function _EmittedLine(indent) {\n            this.indent = indent;\n            this.parts = [];\n            this.srcSpans = [];\n        }\n        return _EmittedLine;\n    }());\n    var EmitterVisitorContext = (function () {\n        /**\n         * @param {?} _exportedVars\n         * @param {?} _indent\n         */\n        function EmitterVisitorContext(_exportedVars, _indent) {\n            this._exportedVars = _exportedVars;\n            this._indent = _indent;\n            this._classes = [];\n            this._lines = [new _EmittedLine(_indent)];\n        }\n        /**\n         * @param {?} exportedVars\n         * @return {?}\n         */\n        EmitterVisitorContext.createRoot = function (exportedVars) {\n            return new EmitterVisitorContext(exportedVars, 0);\n        };\n        Object.defineProperty(EmitterVisitorContext.prototype, \"_currentLine\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._lines[this._lines.length - 1]; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} varName\n         * @return {?}\n         */\n        EmitterVisitorContext.prototype.isExportedVar = function (varName) { return this._exportedVars.indexOf(varName) !== -1; };\n        /**\n         * @param {?=} from\n         * @param {?=} lastPart\n         * @return {?}\n         */\n        EmitterVisitorContext.prototype.println = function (from, lastPart) {\n            if (lastPart === void 0) { lastPart = ''; }\n            this.print(from, lastPart, true);\n        };\n        /**\n         * @return {?}\n         */\n        EmitterVisitorContext.prototype.lineIsEmpty = function () { return this._currentLine.parts.length === 0; };\n        /**\n         * @param {?} from\n         * @param {?} part\n         * @param {?=} newLine\n         * @return {?}\n         */\n        EmitterVisitorContext.prototype.print = function (from, part, newLine) {\n            if (newLine === void 0) { newLine = false; }\n            if (part.length > 0) {\n                this._currentLine.parts.push(part);\n                this._currentLine.srcSpans.push(from && from.sourceSpan || null);\n            }\n            if (newLine) {\n                this._lines.push(new _EmittedLine(this._indent));\n            }\n        };\n        /**\n         * @return {?}\n         */\n        EmitterVisitorContext.prototype.removeEmptyLastLine = function () {\n            if (this.lineIsEmpty()) {\n                this._lines.pop();\n            }\n        };\n        /**\n         * @return {?}\n         */\n        EmitterVisitorContext.prototype.incIndent = function () {\n            this._indent++;\n            this._currentLine.indent = this._indent;\n        };\n        /**\n         * @return {?}\n         */\n        EmitterVisitorContext.prototype.decIndent = function () {\n            this._indent--;\n            this._currentLine.indent = this._indent;\n        };\n        /**\n         * @param {?} clazz\n         * @return {?}\n         */\n        EmitterVisitorContext.prototype.pushClass = function (clazz) { this._classes.push(clazz); };\n        /**\n         * @return {?}\n         */\n        EmitterVisitorContext.prototype.popClass = function () { return this._classes.pop(); };\n        Object.defineProperty(EmitterVisitorContext.prototype, \"currentClass\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        EmitterVisitorContext.prototype.toSource = function () {\n            return this.sourceLines\n                .map(function (l) { return l.parts.length > 0 ? _createIndent(l.indent) + l.parts.join('') : ''; })\n                .join('\\n');\n        };\n        /**\n         * @param {?} sourceFilePath\n         * @param {?} genFilePath\n         * @param {?=} startsAtLine\n         * @return {?}\n         */\n        EmitterVisitorContext.prototype.toSourceMapGenerator = function (sourceFilePath, genFilePath, startsAtLine) {\n            if (startsAtLine === void 0) { startsAtLine = 0; }\n            var /** @type {?} */ map = new SourceMapGenerator(genFilePath);\n            var /** @type {?} */ firstOffsetMapped = false;\n            var /** @type {?} */ mapFirstOffsetIfNeeded = function () {\n                if (!firstOffsetMapped) {\n                    map.addSource(sourceFilePath).addMapping(0, sourceFilePath, 0, 0);\n                    firstOffsetMapped = true;\n                }\n            };\n            for (var /** @type {?} */ i = 0; i < startsAtLine; i++) {\n                map.addLine();\n                mapFirstOffsetIfNeeded();\n            }\n            this.sourceLines.forEach(function (line, lineIdx) {\n                map.addLine();\n                var /** @type {?} */ spans = line.srcSpans;\n                var /** @type {?} */ parts = line.parts;\n                var /** @type {?} */ col0 = line.indent * _INDENT_WITH.length;\n                var /** @type {?} */ spanIdx = 0;\n                // skip leading parts without source spans\n                while (spanIdx < spans.length && !spans[spanIdx]) {\n                    col0 += parts[spanIdx].length;\n                    spanIdx++;\n                }\n                if (spanIdx < spans.length && lineIdx === 0 && col0 === 0) {\n                    firstOffsetMapped = true;\n                }\n                else {\n                    mapFirstOffsetIfNeeded();\n                }\n                while (spanIdx < spans.length) {\n                    var /** @type {?} */ span = spans[spanIdx];\n                    var /** @type {?} */ source = span.start.file;\n                    var /** @type {?} */ sourceLine = span.start.line;\n                    var /** @type {?} */ sourceCol = span.start.col;\n                    map.addSource(source.url, source.content)\n                        .addMapping(col0, source.url, sourceLine, sourceCol);\n                    col0 += parts[spanIdx].length;\n                    spanIdx++;\n                    // assign parts without span or the same span to the previous segment\n                    while (spanIdx < spans.length && (span === spans[spanIdx] || !spans[spanIdx])) {\n                        col0 += parts[spanIdx].length;\n                        spanIdx++;\n                    }\n                }\n            });\n            return map;\n        };\n        Object.defineProperty(EmitterVisitorContext.prototype, \"sourceLines\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                if (this._lines.length && this._lines[this._lines.length - 1].parts.length === 0) {\n                    return this._lines.slice(0, -1);\n                }\n                return this._lines;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return EmitterVisitorContext;\n    }());\n    /**\n     * @abstract\n     */\n    var AbstractEmitterVisitor = (function () {\n        /**\n         * @param {?} _escapeDollarInStrings\n         */\n        function AbstractEmitterVisitor(_escapeDollarInStrings) {\n            this._escapeDollarInStrings = _escapeDollarInStrings;\n        }\n        /**\n         * @param {?} stmt\n         * @param {?} ctx\n         * @return {?}\n         */\n        AbstractEmitterVisitor.prototype.visitExpressionStmt = function (stmt, ctx) {\n            stmt.expr.visitExpression(this, ctx);\n            ctx.println(stmt, ';');\n            return null;\n        };\n        /**\n         * @param {?} stmt\n         * @param {?} ctx\n         * @return {?}\n         */\n        AbstractEmitterVisitor.prototype.visitReturnStmt = function (stmt, ctx) {\n            ctx.print(stmt, \"return \");\n            stmt.value.visitExpression(this, ctx);\n            ctx.println(stmt, ';');\n            return null;\n        };\n        /**\n         * @abstract\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        AbstractEmitterVisitor.prototype.visitCastExpr = function (ast, context) { };\n        /**\n         * @abstract\n         * @param {?} stmt\n         * @param {?} ctx\n         * @return {?}\n         */\n        AbstractEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) { };\n        /**\n         * @param {?} stmt\n         * @param {?} ctx\n         * @return {?}\n         */\n        AbstractEmitterVisitor.prototype.visitIfStmt = function (stmt, ctx) {\n            ctx.print(stmt, \"if (\");\n            stmt.condition.visitExpression(this, ctx);\n            ctx.print(stmt, \") {\");\n            var /** @type {?} */ hasElseCase = stmt.falseCase != null && stmt.falseCase.length > 0;\n            if (stmt.trueCase.length <= 1 && !hasElseCase) {\n                ctx.print(stmt, \" \");\n                this.visitAllStatements(stmt.trueCase, ctx);\n                ctx.removeEmptyLastLine();\n                ctx.print(stmt, \" \");\n            }\n            else {\n                ctx.println();\n                ctx.incIndent();\n                this.visitAllStatements(stmt.trueCase, ctx);\n                ctx.decIndent();\n                if (hasElseCase) {\n                    ctx.println(stmt, \"} else {\");\n                    ctx.incIndent();\n                    this.visitAllStatements(stmt.falseCase, ctx);\n                    ctx.decIndent();\n                }\n            }\n            ctx.println(stmt, \"}\");\n            return null;\n        };\n        /**\n         * @abstract\n         * @param {?} stmt\n         * @param {?} ctx\n         * @return {?}\n         */\n        AbstractEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) { };\n        /**\n         * @param {?} stmt\n         * @param {?} ctx\n         * @return {?}\n         */\n        AbstractEmitterVisitor.prototype.visitThrowStmt = function (stmt, ctx) {\n            ctx.print(stmt, \"throw \");\n            stmt.error.visitExpression(this, ctx);\n            ctx.println(stmt, \";\");\n            return null;\n        };\n        /**\n         * @param {?} stmt\n         * @param {?} ctx\n         * @return {?}\n         */\n        AbstractEmitterVisitor.prototype.visitCommentStmt = function (stmt, ctx) {\n            var /** @type {?} */ lines = stmt.comment.split('\\n');\n            lines.forEach(function (line) { ctx.println(stmt, \"// \" + line); });\n            return null;\n        };\n        /**\n         * @abstract\n         * @param {?} stmt\n         * @param {?} ctx\n         * @return {?}\n         */\n        AbstractEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) { };\n        /**\n         * @param {?} expr\n         * @param {?} ctx\n         * @return {?}\n         */\n        AbstractEmitterVisitor.prototype.visitWriteVarExpr = function (expr, ctx) {\n            var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n            if (!lineWasEmpty) {\n                ctx.print(expr, '(');\n            }\n            ctx.print(expr, expr.name + \" = \");\n            expr.value.visitExpression(this, ctx);\n            if (!lineWasEmpty) {\n                ctx.print(expr, ')');\n            }\n            return null;\n        };\n        /**\n         * @param {?} expr\n         * @param {?} ctx\n         * @return {?}\n         */\n        AbstractEmitterVisitor.prototype.visitWriteKeyExpr = function (expr, ctx) {\n            var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n            if (!lineWasEmpty) {\n                ctx.print(expr, '(');\n            }\n            expr.receiver.visitExpression(this, ctx);\n            ctx.print(expr, \"[\");\n            expr.index.visitExpression(this, ctx);\n            ctx.print(expr, \"] = \");\n            expr.value.visitExpression(this, ctx);\n            if (!lineWasEmpty) {\n                ctx.print(expr, ')');\n            }\n            return null;\n        };\n        /**\n         * @param {?} expr\n         * @param {?} ctx\n         * @return {?}\n         */\n        AbstractEmitterVisitor.prototype.visitWritePropExpr = function (expr, ctx) {\n            var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n            if (!lineWasEmpty) {\n                ctx.print(expr, '(');\n            }\n            expr.receiver.visitExpression(this, ctx);\n            ctx.print(expr, \".\" + expr.name + \" = \");\n            expr.value.visitExpression(this, ctx);\n            if (!lineWasEmpty) {\n                ctx.print(expr, ')');\n            }\n            return null;\n        };\n        /**\n         * @param {?} expr\n         * @param {?} ctx\n         * @return {?}\n         */\n        AbstractEmitterVisitor.prototype.visitInvokeMethodExpr = function (expr, ctx) {\n            expr.receiver.visitExpression(this, ctx);\n            var /** @type {?} */ name = expr.name;\n            if (expr.builtin != null) {\n                name = this.getBuiltinMethodName(expr.builtin);\n                if (name == null) {\n                    // some builtins just mean to skip the call.\n                    return null;\n                }\n            }\n            ctx.print(expr, \".\" + name + \"(\");\n            this.visitAllExpressions(expr.args, ctx, \",\");\n            ctx.print(expr, \")\");\n            return null;\n        };\n        /**\n         * @abstract\n         * @param {?} method\n         * @return {?}\n         */\n        AbstractEmitterVisitor.prototype.getBuiltinMethodName = function (method) { };\n        /**\n         * @param {?} expr\n         * @param {?} ctx\n         * @return {?}\n         */\n        AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {\n            expr.fn.visitExpression(this, ctx);\n            ctx.print(expr, \"(\");\n            this.visitAllExpressions(expr.args, ctx, ',');\n            ctx.print(expr, \")\");\n            return null;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} ctx\n         * @return {?}\n         */\n        AbstractEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {\n            var /** @type {?} */ varName = ast.name;\n            if (ast.builtin != null) {\n                switch (ast.builtin) {\n                    case BuiltinVar.Super:\n                        varName = 'super';\n                        break;\n                    case BuiltinVar.This:\n                        varName = 'this';\n                        break;\n                    case BuiltinVar.CatchError:\n                        varName = CATCH_ERROR_VAR$1.name;\n                        break;\n                    case BuiltinVar.CatchStack:\n                        varName = CATCH_STACK_VAR$1.name;\n                        break;\n                    default:\n                        throw new Error(\"Unknown builtin variable \" + ast.builtin);\n                }\n            }\n            ctx.print(ast, varName);\n            return null;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} ctx\n         * @return {?}\n         */\n        AbstractEmitterVisitor.prototype.visitInstantiateExpr = function (ast, ctx) {\n            ctx.print(ast, \"new \");\n            ast.classExpr.visitExpression(this, ctx);\n            ctx.print(ast, \"(\");\n            this.visitAllExpressions(ast.args, ctx, ',');\n            ctx.print(ast, \")\");\n            return null;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} ctx\n         * @return {?}\n         */\n        AbstractEmitterVisitor.prototype.visitLiteralExpr = function (ast, ctx) {\n            var /** @type {?} */ value = ast.value;\n            if (typeof value === 'string') {\n                ctx.print(ast, escapeIdentifier(value, this._escapeDollarInStrings));\n            }\n            else {\n                ctx.print(ast, \"\" + value);\n            }\n            return null;\n        };\n        /**\n         * @abstract\n         * @param {?} ast\n         * @param {?} ctx\n         * @return {?}\n         */\n        AbstractEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) { };\n        /**\n         * @param {?} ast\n         * @param {?} ctx\n         * @return {?}\n         */\n        AbstractEmitterVisitor.prototype.visitConditionalExpr = function (ast, ctx) {\n            ctx.print(ast, \"(\");\n            ast.condition.visitExpression(this, ctx);\n            ctx.print(ast, '? ');\n            ast.trueCase.visitExpression(this, ctx);\n            ctx.print(ast, ': ');\n            ast.falseCase.visitExpression(this, ctx);\n            ctx.print(ast, \")\");\n            return null;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} ctx\n         * @return {?}\n         */\n        AbstractEmitterVisitor.prototype.visitNotExpr = function (ast, ctx) {\n            ctx.print(ast, '!');\n            ast.condition.visitExpression(this, ctx);\n            return null;\n        };\n        /**\n         * @abstract\n         * @param {?} ast\n         * @param {?} ctx\n         * @return {?}\n         */\n        AbstractEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) { };\n        /**\n         * @abstract\n         * @param {?} stmt\n         * @param {?} context\n         * @return {?}\n         */\n        AbstractEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, context) { };\n        /**\n         * @param {?} ast\n         * @param {?} ctx\n         * @return {?}\n         */\n        AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr = function (ast, ctx) {\n            var /** @type {?} */ opStr;\n            switch (ast.operator) {\n                case BinaryOperator.Equals:\n                    opStr = '==';\n                    break;\n                case BinaryOperator.Identical:\n                    opStr = '===';\n                    break;\n                case BinaryOperator.NotEquals:\n                    opStr = '!=';\n                    break;\n                case BinaryOperator.NotIdentical:\n                    opStr = '!==';\n                    break;\n                case BinaryOperator.And:\n                    opStr = '&&';\n                    break;\n                case BinaryOperator.Or:\n                    opStr = '||';\n                    break;\n                case BinaryOperator.Plus:\n                    opStr = '+';\n                    break;\n                case BinaryOperator.Minus:\n                    opStr = '-';\n                    break;\n                case BinaryOperator.Divide:\n                    opStr = '/';\n                    break;\n                case BinaryOperator.Multiply:\n                    opStr = '*';\n                    break;\n                case BinaryOperator.Modulo:\n                    opStr = '%';\n                    break;\n                case BinaryOperator.Lower:\n                    opStr = '<';\n                    break;\n                case BinaryOperator.LowerEquals:\n                    opStr = '<=';\n                    break;\n                case BinaryOperator.Bigger:\n                    opStr = '>';\n                    break;\n                case BinaryOperator.BiggerEquals:\n                    opStr = '>=';\n                    break;\n                default:\n                    throw new Error(\"Unknown operator \" + ast.operator);\n            }\n            ctx.print(ast, \"(\");\n            ast.lhs.visitExpression(this, ctx);\n            ctx.print(ast, \" \" + opStr + \" \");\n            ast.rhs.visitExpression(this, ctx);\n            ctx.print(ast, \")\");\n            return null;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} ctx\n         * @return {?}\n         */\n        AbstractEmitterVisitor.prototype.visitReadPropExpr = function (ast, ctx) {\n            ast.receiver.visitExpression(this, ctx);\n            ctx.print(ast, \".\");\n            ctx.print(ast, ast.name);\n            return null;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} ctx\n         * @return {?}\n         */\n        AbstractEmitterVisitor.prototype.visitReadKeyExpr = function (ast, ctx) {\n            ast.receiver.visitExpression(this, ctx);\n            ctx.print(ast, \"[\");\n            ast.index.visitExpression(this, ctx);\n            ctx.print(ast, \"]\");\n            return null;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} ctx\n         * @return {?}\n         */\n        AbstractEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n            var /** @type {?} */ useNewLine = ast.entries.length > 1;\n            ctx.print(ast, \"[\", useNewLine);\n            ctx.incIndent();\n            this.visitAllExpressions(ast.entries, ctx, ',', useNewLine);\n            ctx.decIndent();\n            ctx.print(ast, \"]\", useNewLine);\n            return null;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} ctx\n         * @return {?}\n         */\n        AbstractEmitterVisitor.prototype.visitLiteralMapExpr = function (ast, ctx) {\n            var _this = this;\n            var /** @type {?} */ useNewLine = ast.entries.length > 1;\n            ctx.print(ast, \"{\", useNewLine);\n            ctx.incIndent();\n            this.visitAllObjects(function (entry) {\n                ctx.print(ast, escapeIdentifier(entry.key, _this._escapeDollarInStrings, entry.quoted) + \": \");\n                entry.value.visitExpression(_this, ctx);\n            }, ast.entries, ctx, ',', useNewLine);\n            ctx.decIndent();\n            ctx.print(ast, \"}\", useNewLine);\n            return null;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} ctx\n         * @return {?}\n         */\n        AbstractEmitterVisitor.prototype.visitCommaExpr = function (ast, ctx) {\n            ctx.print(ast, '(');\n            this.visitAllExpressions(ast.parts, ctx, ',');\n            ctx.print(ast, ')');\n            return null;\n        };\n        /**\n         * @param {?} expressions\n         * @param {?} ctx\n         * @param {?} separator\n         * @param {?=} newLine\n         * @return {?}\n         */\n        AbstractEmitterVisitor.prototype.visitAllExpressions = function (expressions, ctx, separator, newLine) {\n            var _this = this;\n            if (newLine === void 0) { newLine = false; }\n            this.visitAllObjects(function (expr) { return expr.visitExpression(_this, ctx); }, expressions, ctx, separator, newLine);\n        };\n        /**\n         * @template T\n         * @param {?} handler\n         * @param {?} expressions\n         * @param {?} ctx\n         * @param {?} separator\n         * @param {?=} newLine\n         * @return {?}\n         */\n        AbstractEmitterVisitor.prototype.visitAllObjects = function (handler, expressions, ctx, separator, newLine) {\n            if (newLine === void 0) { newLine = false; }\n            for (var /** @type {?} */ i = 0; i < expressions.length; i++) {\n                if (i > 0) {\n                    ctx.print(null, separator, newLine);\n                }\n                handler(expressions[i]);\n            }\n            if (newLine) {\n                ctx.println();\n            }\n        };\n        /**\n         * @param {?} statements\n         * @param {?} ctx\n         * @return {?}\n         */\n        AbstractEmitterVisitor.prototype.visitAllStatements = function (statements, ctx) {\n            var _this = this;\n            statements.forEach(function (stmt) { return stmt.visitStatement(_this, ctx); });\n        };\n        return AbstractEmitterVisitor;\n    }());\n    /**\n     * @param {?} input\n     * @param {?} escapeDollar\n     * @param {?=} alwaysQuote\n     * @return {?}\n     */\n    function escapeIdentifier(input, escapeDollar, alwaysQuote) {\n        if (alwaysQuote === void 0) { alwaysQuote = true; }\n        if (input == null) {\n            return null;\n        }\n        var /** @type {?} */ body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, function () {\n            var match = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                match[_i] = arguments[_i];\n            }\n            if (match[0] == '$') {\n                return escapeDollar ? '\\\\$' : '$';\n            }\n            else if (match[0] == '\\n') {\n                return '\\\\n';\n            }\n            else if (match[0] == '\\r') {\n                return '\\\\r';\n            }\n            else {\n                return \"\\\\\" + match[0];\n            }\n        });\n        var /** @type {?} */ requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n        return requiresQuotes ? \"'\" + body + \"'\" : body;\n    }\n    /**\n     * @param {?} count\n     * @return {?}\n     */\n    function _createIndent(count) {\n        var /** @type {?} */ res = '';\n        for (var /** @type {?} */ i = 0; i < count; i++) {\n            res += _INDENT_WITH;\n        }\n        return res;\n    }\n    var /** @type {?} */ _debugFilePath = '/debug/lib';\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function debugOutputAstAsTypeScript(ast) {\n        var /** @type {?} */ converter = new _TsEmitterVisitor(_debugFilePath, {\n            /**\n             * @param {?} filePath\n             * @param {?} containingFilePath\n             * @return {?}\n             */\n            fileNameToModuleName: function (filePath, containingFilePath) { return filePath; },\n            /**\n             * @param {?} symbol\n             * @return {?}\n             */\n            getImportAs: function (symbol) { return null; },\n            getTypeArity: function (symbol) { return null; }\n        });\n        var /** @type {?} */ ctx = EmitterVisitorContext.createRoot([]);\n        var /** @type {?} */ asts = Array.isArray(ast) ? ast : [ast];\n        asts.forEach(function (ast) {\n            if (ast instanceof Statement) {\n                ast.visitStatement(converter, ctx);\n            }\n            else if (ast instanceof Expression) {\n                ast.visitExpression(converter, ctx);\n            }\n            else if (ast instanceof Type$1) {\n                ast.visitType(converter, ctx);\n            }\n            else {\n                throw new Error(\"Don't know how to print debug info for \" + ast);\n            }\n        });\n        return ctx.toSource();\n    }\n    var TypeScriptEmitter = (function () {\n        /**\n         * @param {?} _importResolver\n         */\n        function TypeScriptEmitter(_importResolver) {\n            this._importResolver = _importResolver;\n        }\n        /**\n         * @param {?} srcFilePath\n         * @param {?} genFilePath\n         * @param {?} stmts\n         * @param {?} exportedVars\n         * @param {?=} preamble\n         * @return {?}\n         */\n        TypeScriptEmitter.prototype.emitStatements = function (srcFilePath, genFilePath, stmts, exportedVars, preamble) {\n            var _this = this;\n            if (preamble === void 0) { preamble = ''; }\n            var /** @type {?} */ converter = new _TsEmitterVisitor(genFilePath, this._importResolver);\n            var /** @type {?} */ ctx = EmitterVisitorContext.createRoot(exportedVars);\n            converter.visitAllStatements(stmts, ctx);\n            var /** @type {?} */ preambleLines = preamble ? preamble.split('\\n') : [];\n            converter.reexports.forEach(function (reexports, exportedFilePath) {\n                var /** @type {?} */ reexportsCode = reexports.map(function (reexport) { return reexport.name + \" as \" + reexport.as; }).join(',');\n                preambleLines.push(\"export {\" + reexportsCode + \"} from '\" + _this._importResolver.fileNameToModuleName(exportedFilePath, genFilePath) + \"';\");\n            });\n            converter.importsWithPrefixes.forEach(function (prefix, importedFilePath) {\n                // Note: can't write the real word for import as it screws up system.js auto detection...\n                preambleLines.push(\"imp\" +\n                    (\"ort * as \" + prefix + \" from '\" + _this._importResolver.fileNameToModuleName(importedFilePath, genFilePath) + \"';\"));\n            });\n            var /** @type {?} */ sm = ctx.toSourceMapGenerator(srcFilePath, genFilePath, preambleLines.length).toJsComment();\n            var /** @type {?} */ lines = preambleLines.concat([ctx.toSource(), sm]);\n            if (sm) {\n                // always add a newline at the end, as some tools have bugs without it.\n                lines.push('');\n            }\n            return lines.join('\\n');\n        };\n        return TypeScriptEmitter;\n    }());\n    var _TsEmitterVisitor = (function (_super) {\n        __extends(_TsEmitterVisitor, _super);\n        /**\n         * @param {?} _genFilePath\n         * @param {?} _importResolver\n         */\n        function _TsEmitterVisitor(_genFilePath, _importResolver) {\n            var _this = _super.call(this, false) || this;\n            _this._genFilePath = _genFilePath;\n            _this._importResolver = _importResolver;\n            _this.typeExpression = 0;\n            _this.importsWithPrefixes = new Map();\n            _this.reexports = new Map();\n            return _this;\n        }\n        /**\n         * @param {?} t\n         * @param {?} ctx\n         * @param {?=} defaultType\n         * @return {?}\n         */\n        _TsEmitterVisitor.prototype.visitType = function (t, ctx, defaultType) {\n            if (defaultType === void 0) { defaultType = 'any'; }\n            if (t != null) {\n                this.typeExpression++;\n                t.visitType(this, ctx);\n                this.typeExpression--;\n            }\n            else {\n                ctx.print(null, defaultType);\n            }\n        };\n        /**\n         * @param {?} ast\n         * @param {?} ctx\n         * @return {?}\n         */\n        _TsEmitterVisitor.prototype.visitLiteralExpr = function (ast, ctx) {\n            var /** @type {?} */ value = ast.value;\n            if (value == null && ast.type != INFERRED_TYPE) {\n                ctx.print(ast, \"(\" + value + \" as any)\");\n                return null;\n            }\n            return _super.prototype.visitLiteralExpr.call(this, ast, ctx);\n        };\n        /**\n         * @param {?} ast\n         * @param {?} ctx\n         * @return {?}\n         */\n        _TsEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n            if (ast.entries.length === 0) {\n                ctx.print(ast, '(');\n            }\n            var /** @type {?} */ result = _super.prototype.visitLiteralArrayExpr.call(this, ast, ctx);\n            if (ast.entries.length === 0) {\n                ctx.print(ast, ' as any[])');\n            }\n            return result;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} ctx\n         * @return {?}\n         */\n        _TsEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {\n            this._visitIdentifier(ast.value, ast.typeParams, ctx);\n            return null;\n        };\n        /**\n         * @param {?} stmt\n         * @param {?} ctx\n         * @return {?}\n         */\n        _TsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n            if (ctx.isExportedVar(stmt.name) && stmt.value instanceof ExternalExpr && !stmt.type) {\n                // check for a reexport\n                var _a = this._resolveStaticSymbol(stmt.value.value), name = _a.name, filePath = _a.filePath, members = _a.members;\n                if (members.length === 0 && filePath !== this._genFilePath) {\n                    var /** @type {?} */ reexports = this.reexports.get(filePath);\n                    if (!reexports) {\n                        reexports = [];\n                        this.reexports.set(filePath, reexports);\n                    }\n                    reexports.push({ name: name, as: stmt.name });\n                    return null;\n                }\n            }\n            if (ctx.isExportedVar(stmt.name)) {\n                ctx.print(stmt, \"export \");\n            }\n            if (stmt.hasModifier(StmtModifier.Final)) {\n                ctx.print(stmt, \"const\");\n            }\n            else {\n                ctx.print(stmt, \"var\");\n            }\n            ctx.print(stmt, \" \" + stmt.name);\n            this._printColonType(stmt.type, ctx);\n            ctx.print(stmt, \" = \");\n            stmt.value.visitExpression(this, ctx);\n            ctx.println(stmt, \";\");\n            return null;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} ctx\n         * @return {?}\n         */\n        _TsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {\n            ctx.print(ast, \"(<\");\n            ast.type.visitType(this, ctx);\n            ctx.print(ast, \">\");\n            ast.value.visitExpression(this, ctx);\n            ctx.print(ast, \")\");\n            return null;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} ctx\n         * @return {?}\n         */\n        _TsEmitterVisitor.prototype.visitInstantiateExpr = function (ast, ctx) {\n            ctx.print(ast, \"new \");\n            this.typeExpression++;\n            ast.classExpr.visitExpression(this, ctx);\n            this.typeExpression--;\n            ctx.print(ast, \"(\");\n            this.visitAllExpressions(ast.args, ctx, ',');\n            ctx.print(ast, \")\");\n            return null;\n        };\n        /**\n         * @param {?} stmt\n         * @param {?} ctx\n         * @return {?}\n         */\n        _TsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n            var _this = this;\n            ctx.pushClass(stmt);\n            if (ctx.isExportedVar(stmt.name)) {\n                ctx.print(stmt, \"export \");\n            }\n            ctx.print(stmt, \"class \" + stmt.name);\n            if (stmt.parent != null) {\n                ctx.print(stmt, \" extends \");\n                this.typeExpression++;\n                stmt.parent.visitExpression(this, ctx);\n                this.typeExpression--;\n            }\n            ctx.println(stmt, \" {\");\n            ctx.incIndent();\n            stmt.fields.forEach(function (field) { return _this._visitClassField(field, ctx); });\n            if (stmt.constructorMethod != null) {\n                this._visitClassConstructor(stmt, ctx);\n            }\n            stmt.getters.forEach(function (getter) { return _this._visitClassGetter(getter, ctx); });\n            stmt.methods.forEach(function (method) { return _this._visitClassMethod(method, ctx); });\n            ctx.decIndent();\n            ctx.println(stmt, \"}\");\n            ctx.popClass();\n            return null;\n        };\n        /**\n         * @param {?} field\n         * @param {?} ctx\n         * @return {?}\n         */\n        _TsEmitterVisitor.prototype._visitClassField = function (field, ctx) {\n            if (field.hasModifier(StmtModifier.Private)) {\n                // comment out as a workaround for #10967\n                ctx.print(null, \"/*private*/ \");\n            }\n            ctx.print(null, field.name);\n            this._printColonType(field.type, ctx);\n            ctx.println(null, \";\");\n        };\n        /**\n         * @param {?} getter\n         * @param {?} ctx\n         * @return {?}\n         */\n        _TsEmitterVisitor.prototype._visitClassGetter = function (getter, ctx) {\n            if (getter.hasModifier(StmtModifier.Private)) {\n                ctx.print(null, \"private \");\n            }\n            ctx.print(null, \"get \" + getter.name + \"()\");\n            this._printColonType(getter.type, ctx);\n            ctx.println(null, \" {\");\n            ctx.incIndent();\n            this.visitAllStatements(getter.body, ctx);\n            ctx.decIndent();\n            ctx.println(null, \"}\");\n        };\n        /**\n         * @param {?} stmt\n         * @param {?} ctx\n         * @return {?}\n         */\n        _TsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {\n            ctx.print(stmt, \"constructor(\");\n            this._visitParams(stmt.constructorMethod.params, ctx);\n            ctx.println(stmt, \") {\");\n            ctx.incIndent();\n            this.visitAllStatements(stmt.constructorMethod.body, ctx);\n            ctx.decIndent();\n            ctx.println(stmt, \"}\");\n        };\n        /**\n         * @param {?} method\n         * @param {?} ctx\n         * @return {?}\n         */\n        _TsEmitterVisitor.prototype._visitClassMethod = function (method, ctx) {\n            if (method.hasModifier(StmtModifier.Private)) {\n                ctx.print(null, \"private \");\n            }\n            ctx.print(null, method.name + \"(\");\n            this._visitParams(method.params, ctx);\n            ctx.print(null, \")\");\n            this._printColonType(method.type, ctx, 'void');\n            ctx.println(null, \" {\");\n            ctx.incIndent();\n            this.visitAllStatements(method.body, ctx);\n            ctx.decIndent();\n            ctx.println(null, \"}\");\n        };\n        /**\n         * @param {?} ast\n         * @param {?} ctx\n         * @return {?}\n         */\n        _TsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {\n            ctx.print(ast, \"(\");\n            this._visitParams(ast.params, ctx);\n            ctx.print(ast, \")\");\n            this._printColonType(ast.type, ctx, 'void');\n            ctx.println(ast, \" => {\");\n            ctx.incIndent();\n            this.visitAllStatements(ast.statements, ctx);\n            ctx.decIndent();\n            ctx.print(ast, \"}\");\n            return null;\n        };\n        /**\n         * @param {?} stmt\n         * @param {?} ctx\n         * @return {?}\n         */\n        _TsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n            if (ctx.isExportedVar(stmt.name)) {\n                ctx.print(stmt, \"export \");\n            }\n            ctx.print(stmt, \"function \" + stmt.name + \"(\");\n            this._visitParams(stmt.params, ctx);\n            ctx.print(stmt, \")\");\n            this._printColonType(stmt.type, ctx, 'void');\n            ctx.println(stmt, \" {\");\n            ctx.incIndent();\n            this.visitAllStatements(stmt.statements, ctx);\n            ctx.decIndent();\n            ctx.println(stmt, \"}\");\n            return null;\n        };\n        /**\n         * @param {?} stmt\n         * @param {?} ctx\n         * @return {?}\n         */\n        _TsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {\n            ctx.println(stmt, \"try {\");\n            ctx.incIndent();\n            this.visitAllStatements(stmt.bodyStmts, ctx);\n            ctx.decIndent();\n            ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n            ctx.incIndent();\n            var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack')).toDeclStmt(null, [\n                    StmtModifier.Final\n                ]))].concat(stmt.catchStmts);\n            this.visitAllStatements(catchStmts, ctx);\n            ctx.decIndent();\n            ctx.println(stmt, \"}\");\n            return null;\n        };\n        /**\n         * @param {?} type\n         * @param {?} ctx\n         * @return {?}\n         */\n        _TsEmitterVisitor.prototype.visitBuiltintType = function (type, ctx) {\n            var /** @type {?} */ typeStr;\n            switch (type.name) {\n                case BuiltinTypeName.Bool:\n                    typeStr = 'boolean';\n                    break;\n                case BuiltinTypeName.Dynamic:\n                    typeStr = 'any';\n                    break;\n                case BuiltinTypeName.Function:\n                    typeStr = 'Function';\n                    break;\n                case BuiltinTypeName.Number:\n                    typeStr = 'number';\n                    break;\n                case BuiltinTypeName.Int:\n                    typeStr = 'number';\n                    break;\n                case BuiltinTypeName.String:\n                    typeStr = 'string';\n                    break;\n                default:\n                    throw new Error(\"Unsupported builtin type \" + type.name);\n            }\n            ctx.print(null, typeStr);\n            return null;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} ctx\n         * @return {?}\n         */\n        _TsEmitterVisitor.prototype.visitExpressionType = function (ast, ctx) {\n            ast.value.visitExpression(this, ctx);\n            return null;\n        };\n        /**\n         * @param {?} type\n         * @param {?} ctx\n         * @return {?}\n         */\n        _TsEmitterVisitor.prototype.visitArrayType = function (type, ctx) {\n            this.visitType(type.of, ctx);\n            ctx.print(null, \"[]\");\n            return null;\n        };\n        /**\n         * @param {?} type\n         * @param {?} ctx\n         * @return {?}\n         */\n        _TsEmitterVisitor.prototype.visitMapType = function (type, ctx) {\n            ctx.print(null, \"{[key: string]:\");\n            this.visitType(type.valueType, ctx);\n            ctx.print(null, \"}\");\n            return null;\n        };\n        /**\n         * @param {?} method\n         * @return {?}\n         */\n        _TsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {\n            var /** @type {?} */ name;\n            switch (method) {\n                case BuiltinMethod.ConcatArray:\n                    name = 'concat';\n                    break;\n                case BuiltinMethod.SubscribeObservable:\n                    name = 'subscribe';\n                    break;\n                case BuiltinMethod.Bind:\n                    name = 'bind';\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin method: \" + method);\n            }\n            return name;\n        };\n        /**\n         * @param {?} params\n         * @param {?} ctx\n         * @return {?}\n         */\n        _TsEmitterVisitor.prototype._visitParams = function (params, ctx) {\n            var _this = this;\n            this.visitAllObjects(function (param) {\n                ctx.print(null, param.name);\n                _this._printColonType(param.type, ctx);\n            }, params, ctx, ',');\n        };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        _TsEmitterVisitor.prototype._resolveStaticSymbol = function (value) {\n            var /** @type {?} */ reference = value.reference;\n            if (!(reference instanceof StaticSymbol)) {\n                throw new Error(\"Internal error: unknown identifier \" + JSON.stringify(value));\n            }\n            var /** @type {?} */ arity = this._importResolver.getTypeArity(reference) || undefined;\n            var /** @type {?} */ importReference = this._importResolver.getImportAs(reference) || reference;\n            return {\n                name: importReference.name,\n                filePath: importReference.filePath,\n                members: importReference.members, arity: arity\n            };\n        };\n        /**\n         * @param {?} value\n         * @param {?} typeParams\n         * @param {?} ctx\n         * @return {?}\n         */\n        _TsEmitterVisitor.prototype._visitIdentifier = function (value, typeParams, ctx) {\n            var _this = this;\n            var _a = this._resolveStaticSymbol(value), name = _a.name, filePath = _a.filePath, members = _a.members, arity = _a.arity;\n            if (filePath != this._genFilePath) {\n                var /** @type {?} */ prefix = this.importsWithPrefixes.get(filePath);\n                if (prefix == null) {\n                    prefix = \"import\" + this.importsWithPrefixes.size;\n                    this.importsWithPrefixes.set(filePath, prefix);\n                }\n                ctx.print(null, prefix + \".\");\n            }\n            if (members.length) {\n                ctx.print(null, name);\n                ctx.print(null, '.');\n                ctx.print(null, members.join('.'));\n            }\n            else {\n                ctx.print(null, name);\n            }\n            if (this.typeExpression > 0) {\n                // If we are in a type expression that refers to a generic type then supply\n                // the required type parameters. If there were not enough type parameters\n                // supplied, supply any as the type. Outside a type expression the reference\n                // should not supply type parameters and be treated as a simple value reference\n                // to the constructor function itself.\n                var /** @type {?} */ suppliedParameters = (typeParams && typeParams.length) || 0;\n                var /** @type {?} */ additionalParameters = (arity || 0) - suppliedParameters;\n                if (suppliedParameters > 0 || additionalParameters > 0) {\n                    ctx.print(null, \"<\");\n                    if (suppliedParameters > 0) {\n                        this.visitAllObjects(function (type) { return type.visitType(_this, ctx); }, typeParams, ctx, ',');\n                    }\n                    if (additionalParameters > 0) {\n                        for (var /** @type {?} */ i = 0; i < additionalParameters; i++) {\n                            if (i > 0 || suppliedParameters > 0)\n                                ctx.print(null, ',');\n                            ctx.print(null, 'any');\n                        }\n                    }\n                    ctx.print(null, \">\");\n                }\n            }\n        };\n        /**\n         * @param {?} type\n         * @param {?} ctx\n         * @param {?=} defaultType\n         * @return {?}\n         */\n        _TsEmitterVisitor.prototype._printColonType = function (type, ctx, defaultType) {\n            if (type !== INFERRED_TYPE) {\n                ctx.print(null, ':');\n                this.visitType(type, ctx, defaultType);\n            }\n        };\n        return _TsEmitterVisitor;\n    }(AbstractEmitterVisitor));\n    // =================================================================================================\n    // =================================================================================================\n    // =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========\n    // =================================================================================================\n    // =================================================================================================\n    //\n    //        DO NOT EDIT THIS LIST OF SECURITY SENSITIVE PROPERTIES WITHOUT A SECURITY REVIEW!\n    //                               Reach out to mprobst for details.\n    //\n    // =================================================================================================\n    /** Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'. */\n    var /** @type {?} */ SECURITY_SCHEMA = {};\n    /**\n     * @param {?} ctx\n     * @param {?} specs\n     * @return {?}\n     */\n    function registerContext(ctx, specs) {\n        for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n            var spec = specs_1[_i];\n            SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n        }\n    }\n    // Case is insignificant below, all element and attribute names are lower-cased for lookup.\n    registerContext(_angular_core.SecurityContext.HTML, [\n        'iframe|srcdoc',\n        '*|innerHTML',\n        '*|outerHTML',\n    ]);\n    registerContext(_angular_core.SecurityContext.STYLE, ['*|style']);\n    // NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\n    registerContext(_angular_core.SecurityContext.URL, [\n        '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n        'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n        'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n        'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n    ]);\n    registerContext(_angular_core.SecurityContext.RESOURCE_URL, [\n        'applet|code',\n        'applet|codebase',\n        'base|href',\n        'embed|src',\n        'frame|src',\n        'head|profile',\n        'html|manifest',\n        'iframe|src',\n        'link|href',\n        'media|src',\n        'object|codebase',\n        'object|data',\n        'script|src',\n    ]);\n    var /** @type {?} */ BOOLEAN = 'boolean';\n    var /** @type {?} */ NUMBER = 'number';\n    var /** @type {?} */ STRING = 'string';\n    var /** @type {?} */ OBJECT = 'object';\n    /**\n     * This array represents the DOM schema. It encodes inheritance, properties, and events.\n     *\n     * ## Overview\n     *\n     * Each line represents one kind of element. The `element_inheritance` and properties are joined\n     * using `element_inheritance|properties` syntax.\n     *\n     * ## Element Inheritance\n     *\n     * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n     * Here the individual elements are separated by `,` (commas). Every element in the list\n     * has identical properties.\n     *\n     * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n     * specified then `\"\"` (blank) element is assumed.\n     *\n     * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n     * elements.\n     *\n     * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n     *\n     * ## Properties\n     *\n     * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n     * by a special character designating its type:\n     *\n     * - (no prefix): property is a string.\n     * - `*`: property represents an event.\n     * - `!`: property is a boolean.\n     * - `#`: property is a number.\n     * - `%`: property is an object.\n     *\n     * ## Query\n     *\n     * The class creates an internal squas representation which allows to easily answer the query of\n     * if a given property exist on a given element.\n     *\n     * NOTE: We don't yet support querying for types or events.\n     * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n     *       see dom_element_schema_registry_spec.ts\n     */\n    // =================================================================================================\n    // =================================================================================================\n    // =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========\n    // =================================================================================================\n    // =================================================================================================\n    //\n    //                       DO NOT EDIT THIS DOM SCHEMA WITHOUT A SECURITY REVIEW!\n    //\n    // Newly added properties must be security reviewed and assigned an appropriate SecurityContext in\n    // dom_security_schema.ts. Reach out to mprobst & rjamet for details.\n    //\n    // =================================================================================================\n    var /** @type {?} */ SCHEMA = [\n        '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop',\n        '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*beforecopy,*beforecut,*beforepaste,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*copy,*cuechange,*cut,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*message,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*paste,*pause,*play,*playing,*progress,*ratechange,*reset,*resize,*scroll,*search,*seeked,*seeking,*select,*selectstart,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n        'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*beforecopy,*beforecut,*beforepaste,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*copy,*cuechange,*cut,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*message,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*paste,*pause,*play,*playing,*progress,*ratechange,*reset,*resize,*scroll,*search,*seeked,*seeking,*select,*selectstart,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n        'media^[HTMLElement]|!autoplay,!controls,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,#playbackRate,preload,src,%srcObject,#volume',\n        ':svg:^[HTMLElement]|*abort,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n        ':svg:graphics^:svg:|',\n        ':svg:animation^:svg:|*begin,*end,*repeat',\n        ':svg:geometry^:svg:|',\n        ':svg:componentTransferFunction^:svg:|',\n        ':svg:gradient^:svg:|',\n        ':svg:textContent^:svg:graphics|',\n        ':svg:textPositioning^:svg:textContent|',\n        'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n        'area^[HTMLElement]|alt,coords,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,search,shape,target,username',\n        'audio^media|',\n        'br^[HTMLElement]|clear',\n        'base^[HTMLElement]|href,target',\n        'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n        'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n        'canvas^[HTMLElement]|#height,#width',\n        'content^[HTMLElement]|select',\n        'dl^[HTMLElement]|!compact',\n        'datalist^[HTMLElement]|',\n        'details^[HTMLElement]|!open',\n        'dialog^[HTMLElement]|!open,returnValue',\n        'dir^[HTMLElement]|!compact',\n        'div^[HTMLElement]|align',\n        'embed^[HTMLElement]|align,height,name,src,type,width',\n        'fieldset^[HTMLElement]|!disabled,name',\n        'font^[HTMLElement]|color,face,size',\n        'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n        'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n        'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n        'hr^[HTMLElement]|align,color,!noShade,size,width',\n        'head^[HTMLElement]|',\n        'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n        'html^[HTMLElement]|version',\n        'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n        'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n        'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n        'keygen^[HTMLElement]|!autofocus,challenge,!disabled,keytype,name',\n        'li^[HTMLElement]|type,#value',\n        'label^[HTMLElement]|htmlFor',\n        'legend^[HTMLElement]|align',\n        'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,rel,%relList,rev,%sizes,target,type',\n        'map^[HTMLElement]|name',\n        'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n        'menu^[HTMLElement]|!compact',\n        'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n        'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n        'ins,del^[HTMLElement]|cite,dateTime',\n        'ol^[HTMLElement]|!compact,!reversed,#start,type',\n        'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n        'optgroup^[HTMLElement]|!disabled,label',\n        'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n        'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n        'p^[HTMLElement]|align',\n        'param^[HTMLElement]|name,type,value,valueType',\n        'picture^[HTMLElement]|',\n        'pre^[HTMLElement]|#width',\n        'progress^[HTMLElement]|#max,#value',\n        'q,blockquote,cite^[HTMLElement]|',\n        'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n        'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n        'shadow^[HTMLElement]|',\n        'source^[HTMLElement]|media,sizes,src,srcset,type',\n        'span^[HTMLElement]|',\n        'style^[HTMLElement]|!disabled,media,type',\n        'caption^[HTMLElement]|align',\n        'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n        'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n        'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n        'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n        'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n        'template^[HTMLElement]|',\n        'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n        'title^[HTMLElement]|text',\n        'track^[HTMLElement]|!default,kind,label,src,srclang',\n        'ul^[HTMLElement]|!compact,type',\n        'unknown^[HTMLElement]|',\n        'video^media|#height,poster,#width',\n        ':svg:a^:svg:graphics|',\n        ':svg:animate^:svg:animation|',\n        ':svg:animateMotion^:svg:animation|',\n        ':svg:animateTransform^:svg:animation|',\n        ':svg:circle^:svg:geometry|',\n        ':svg:clipPath^:svg:graphics|',\n        ':svg:cursor^:svg:|',\n        ':svg:defs^:svg:graphics|',\n        ':svg:desc^:svg:|',\n        ':svg:discard^:svg:|',\n        ':svg:ellipse^:svg:geometry|',\n        ':svg:feBlend^:svg:|',\n        ':svg:feColorMatrix^:svg:|',\n        ':svg:feComponentTransfer^:svg:|',\n        ':svg:feComposite^:svg:|',\n        ':svg:feConvolveMatrix^:svg:|',\n        ':svg:feDiffuseLighting^:svg:|',\n        ':svg:feDisplacementMap^:svg:|',\n        ':svg:feDistantLight^:svg:|',\n        ':svg:feDropShadow^:svg:|',\n        ':svg:feFlood^:svg:|',\n        ':svg:feFuncA^:svg:componentTransferFunction|',\n        ':svg:feFuncB^:svg:componentTransferFunction|',\n        ':svg:feFuncG^:svg:componentTransferFunction|',\n        ':svg:feFuncR^:svg:componentTransferFunction|',\n        ':svg:feGaussianBlur^:svg:|',\n        ':svg:feImage^:svg:|',\n        ':svg:feMerge^:svg:|',\n        ':svg:feMergeNode^:svg:|',\n        ':svg:feMorphology^:svg:|',\n        ':svg:feOffset^:svg:|',\n        ':svg:fePointLight^:svg:|',\n        ':svg:feSpecularLighting^:svg:|',\n        ':svg:feSpotLight^:svg:|',\n        ':svg:feTile^:svg:|',\n        ':svg:feTurbulence^:svg:|',\n        ':svg:filter^:svg:|',\n        ':svg:foreignObject^:svg:graphics|',\n        ':svg:g^:svg:graphics|',\n        ':svg:image^:svg:graphics|',\n        ':svg:line^:svg:geometry|',\n        ':svg:linearGradient^:svg:gradient|',\n        ':svg:mpath^:svg:|',\n        ':svg:marker^:svg:|',\n        ':svg:mask^:svg:|',\n        ':svg:metadata^:svg:|',\n        ':svg:path^:svg:geometry|',\n        ':svg:pattern^:svg:|',\n        ':svg:polygon^:svg:geometry|',\n        ':svg:polyline^:svg:geometry|',\n        ':svg:radialGradient^:svg:gradient|',\n        ':svg:rect^:svg:geometry|',\n        ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n        ':svg:script^:svg:|type',\n        ':svg:set^:svg:animation|',\n        ':svg:stop^:svg:|',\n        ':svg:style^:svg:|!disabled,media,title,type',\n        ':svg:switch^:svg:graphics|',\n        ':svg:symbol^:svg:|',\n        ':svg:tspan^:svg:textPositioning|',\n        ':svg:text^:svg:textPositioning|',\n        ':svg:textPath^:svg:textContent|',\n        ':svg:title^:svg:|',\n        ':svg:use^:svg:graphics|',\n        ':svg:view^:svg:|#zoomAndPan',\n        'data^[HTMLElement]|value',\n        'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n        'summary^[HTMLElement]|',\n        'time^[HTMLElement]|dateTime',\n    ];\n    var /** @type {?} */ _ATTR_TO_PROP = {\n        'class': 'className',\n        'for': 'htmlFor',\n        'formaction': 'formAction',\n        'innerHtml': 'innerHTML',\n        'readonly': 'readOnly',\n        'tabindex': 'tabIndex',\n    };\n    var DomElementSchemaRegistry = (function (_super) {\n        __extends(DomElementSchemaRegistry, _super);\n        function DomElementSchemaRegistry() {\n            var _this = _super.call(this) || this;\n            _this._schema = {};\n            SCHEMA.forEach(function (encodedType) {\n                var type = {};\n                var _a = encodedType.split('|'), strType = _a[0], strProperties = _a[1];\n                var properties = strProperties.split(',');\n                var _b = strType.split('^'), typeNames = _b[0], superName = _b[1];\n                typeNames.split(',').forEach(function (tag) { return _this._schema[tag.toLowerCase()] = type; });\n                var superType = superName && _this._schema[superName.toLowerCase()];\n                if (superType) {\n                    Object.keys(superType).forEach(function (prop) { type[prop] = superType[prop]; });\n                }\n                properties.forEach(function (property) {\n                    if (property.length > 0) {\n                        switch (property[0]) {\n                            case '*':\n                                // We don't yet support events.\n                                // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                                // will\n                                // almost certainly introduce bad XSS vulnerabilities.\n                                // type[property.substring(1)] = EVENT;\n                                break;\n                            case '!':\n                                type[property.substring(1)] = BOOLEAN;\n                                break;\n                            case '#':\n                                type[property.substring(1)] = NUMBER;\n                                break;\n                            case '%':\n                                type[property.substring(1)] = OBJECT;\n                                break;\n                            default:\n                                type[property] = STRING;\n                        }\n                    }\n                });\n            });\n            return _this;\n        }\n        /**\n         * @param {?} tagName\n         * @param {?} propName\n         * @param {?} schemaMetas\n         * @return {?}\n         */\n        DomElementSchemaRegistry.prototype.hasProperty = function (tagName, propName, schemaMetas) {\n            if (schemaMetas.some(function (schema) { return schema.name === _angular_core.NO_ERRORS_SCHEMA.name; })) {\n                return true;\n            }\n            if (tagName.indexOf('-') > -1) {\n                if (tagName === 'ng-container' || tagName === 'ng-content') {\n                    return false;\n                }\n                if (schemaMetas.some(function (schema) { return schema.name === _angular_core.CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                    // Can't tell now as we don't know which properties a custom element will get\n                    // once it is instantiated\n                    return true;\n                }\n            }\n            var /** @type {?} */ elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n            return !!elementProperties[propName];\n        };\n        /**\n         * @param {?} tagName\n         * @param {?} schemaMetas\n         * @return {?}\n         */\n        DomElementSchemaRegistry.prototype.hasElement = function (tagName, schemaMetas) {\n            if (schemaMetas.some(function (schema) { return schema.name === _angular_core.NO_ERRORS_SCHEMA.name; })) {\n                return true;\n            }\n            if (tagName.indexOf('-') > -1) {\n                if (tagName === 'ng-container' || tagName === 'ng-content') {\n                    return true;\n                }\n                if (schemaMetas.some(function (schema) { return schema.name === _angular_core.CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                    // Allow any custom elements\n                    return true;\n                }\n            }\n            return !!this._schema[tagName.toLowerCase()];\n        };\n        /**\n         * securityContext returns the security context for the given property on the given DOM tag.\n         *\n         * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n         * possible to bind a value into a changing attribute or tag name.\n         *\n         * The filtering is white list based. All attributes in the schema above are assumed to have the\n         * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n         * attack vectors are assigned their appropriate context.\n         * @param {?} tagName\n         * @param {?} propName\n         * @param {?} isAttribute\n         * @return {?}\n         */\n        DomElementSchemaRegistry.prototype.securityContext = function (tagName, propName, isAttribute) {\n            if (isAttribute) {\n                // NB: For security purposes, use the mapped property name, not the attribute name.\n                propName = this.getMappedPropName(propName);\n            }\n            // Make sure comparisons are case insensitive, so that case differences between attribute and\n            // property names do not have a security impact.\n            tagName = tagName.toLowerCase();\n            propName = propName.toLowerCase();\n            var /** @type {?} */ ctx = SECURITY_SCHEMA[tagName + '|' + propName];\n            if (ctx) {\n                return ctx;\n            }\n            ctx = SECURITY_SCHEMA['*|' + propName];\n            return ctx ? ctx : _angular_core.SecurityContext.NONE;\n        };\n        /**\n         * @param {?} propName\n         * @return {?}\n         */\n        DomElementSchemaRegistry.prototype.getMappedPropName = function (propName) { return _ATTR_TO_PROP[propName] || propName; };\n        /**\n         * @return {?}\n         */\n        DomElementSchemaRegistry.prototype.getDefaultComponentElementName = function () { return 'ng-component'; };\n        /**\n         * @param {?} name\n         * @return {?}\n         */\n        DomElementSchemaRegistry.prototype.validateProperty = function (name) {\n            if (name.toLowerCase().startsWith('on')) {\n                var /** @type {?} */ msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                    (\"please use (\" + name.slice(2) + \")=...\") +\n                    (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                    \" current module.\";\n                return { error: true, msg: msg };\n            }\n            else {\n                return { error: false };\n            }\n        };\n        /**\n         * @param {?} name\n         * @return {?}\n         */\n        DomElementSchemaRegistry.prototype.validateAttribute = function (name) {\n            if (name.toLowerCase().startsWith('on')) {\n                var /** @type {?} */ msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                    (\"please use (\" + name.slice(2) + \")=...\");\n                return { error: true, msg: msg };\n            }\n            else {\n                return { error: false };\n            }\n        };\n        /**\n         * @return {?}\n         */\n        DomElementSchemaRegistry.prototype.allKnownElementNames = function () { return Object.keys(this._schema); };\n        /**\n         * @param {?} propName\n         * @return {?}\n         */\n        DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = function (propName) {\n            return dashCaseToCamelCase(propName);\n        };\n        /**\n         * @param {?} camelCaseProp\n         * @param {?} userProvidedProp\n         * @param {?} val\n         * @return {?}\n         */\n        DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue = function (camelCaseProp, userProvidedProp, val) {\n            var /** @type {?} */ unit = '';\n            var /** @type {?} */ strVal = val.toString().trim();\n            var /** @type {?} */ errorMsg = null;\n            if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n                if (typeof val === 'number') {\n                    unit = 'px';\n                }\n                else {\n                    var /** @type {?} */ valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                    if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                        errorMsg = \"Please provide a CSS unit value for \" + userProvidedProp + \":\" + val;\n                    }\n                }\n            }\n            return { error: errorMsg, value: strVal + unit };\n        };\n        return DomElementSchemaRegistry;\n    }(ElementSchemaRegistry));\n    DomElementSchemaRegistry.decorators = [\n        { type: CompilerInjectable },\n    ];\n    /**\n     * @nocollapse\n     */\n    DomElementSchemaRegistry.ctorParameters = function () { return []; };\n    /**\n     * @param {?} prop\n     * @return {?}\n     */\n    function _isPixelDimensionStyle(prop) {\n        switch (prop) {\n            case 'width':\n            case 'height':\n            case 'minWidth':\n            case 'minHeight':\n            case 'maxWidth':\n            case 'maxHeight':\n            case 'left':\n            case 'top':\n            case 'bottom':\n            case 'right':\n            case 'fontSize':\n            case 'outlineWidth':\n            case 'outlineOffset':\n            case 'paddingTop':\n            case 'paddingLeft':\n            case 'paddingBottom':\n            case 'paddingRight':\n            case 'marginTop':\n            case 'marginLeft':\n            case 'marginBottom':\n            case 'marginRight':\n            case 'borderRadius':\n            case 'borderWidth':\n            case 'borderTopWidth':\n            case 'borderLeftWidth':\n            case 'borderRightWidth':\n            case 'borderBottomWidth':\n            case 'textIndent':\n                return true;\n            default:\n                return false;\n        }\n    }\n    var ShadowCss = (function () {\n        function ShadowCss() {\n            this.strictStyling = true;\n        }\n        /**\n         * @param {?} cssText\n         * @param {?} selector\n         * @param {?=} hostSelector\n         * @return {?}\n         */\n        ShadowCss.prototype.shimCssText = function (cssText, selector, hostSelector) {\n            if (hostSelector === void 0) { hostSelector = ''; }\n            var /** @type {?} */ sourceMappingUrl = extractSourceMappingUrl(cssText);\n            cssText = stripComments(cssText);\n            cssText = this._insertDirectives(cssText);\n            return this._scopeCssText(cssText, selector, hostSelector) + sourceMappingUrl;\n        };\n        /**\n         * @param {?} cssText\n         * @return {?}\n         */\n        ShadowCss.prototype._insertDirectives = function (cssText) {\n            cssText = this._insertPolyfillDirectivesInCssText(cssText);\n            return this._insertPolyfillRulesInCssText(cssText);\n        };\n        /**\n         * @param {?} cssText\n         * @return {?}\n         */\n        ShadowCss.prototype._insertPolyfillDirectivesInCssText = function (cssText) {\n            // Difference with webcomponents.js: does not handle comments\n            return cssText.replace(_cssContentNextSelectorRe, function () {\n                var m = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    m[_i] = arguments[_i];\n                }\n                return m[2] + '{';\n            });\n        };\n        /**\n         * @param {?} cssText\n         * @return {?}\n         */\n        ShadowCss.prototype._insertPolyfillRulesInCssText = function (cssText) {\n            // Difference with webcomponents.js: does not handle comments\n            return cssText.replace(_cssContentRuleRe, function () {\n                var m = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    m[_i] = arguments[_i];\n                }\n                var /** @type {?} */ rule = m[0].replace(m[1], '').replace(m[2], '');\n                return m[4] + rule;\n            });\n        };\n        /**\n         * @param {?} cssText\n         * @param {?} scopeSelector\n         * @param {?} hostSelector\n         * @return {?}\n         */\n        ShadowCss.prototype._scopeCssText = function (cssText, scopeSelector, hostSelector) {\n            var /** @type {?} */ unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n            // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n            cssText = this._insertPolyfillHostInCssText(cssText);\n            cssText = this._convertColonHost(cssText);\n            cssText = this._convertColonHostContext(cssText);\n            cssText = this._convertShadowDOMSelectors(cssText);\n            if (scopeSelector) {\n                cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n            }\n            cssText = cssText + '\\n' + unscopedRules;\n            return cssText.trim();\n        };\n        /**\n         * @param {?} cssText\n         * @return {?}\n         */\n        ShadowCss.prototype._extractUnscopedRulesFromCssText = function (cssText) {\n            // Difference with webcomponents.js: does not handle comments\n            var /** @type {?} */ r = '';\n            var /** @type {?} */ m;\n            _cssContentUnscopedRuleRe.lastIndex = 0;\n            while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n                var /** @type {?} */ rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n                r += rule + '\\n\\n';\n            }\n            return r;\n        };\n        /**\n         * @param {?} cssText\n         * @return {?}\n         */\n        ShadowCss.prototype._convertColonHost = function (cssText) {\n            return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n        };\n        /**\n         * @param {?} cssText\n         * @return {?}\n         */\n        ShadowCss.prototype._convertColonHostContext = function (cssText) {\n            return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n        };\n        /**\n         * @param {?} cssText\n         * @param {?} regExp\n         * @param {?} partReplacer\n         * @return {?}\n         */\n        ShadowCss.prototype._convertColonRule = function (cssText, regExp, partReplacer) {\n            // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n            return cssText.replace(regExp, function () {\n                var m = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    m[_i] = arguments[_i];\n                }\n                if (m[2]) {\n                    var /** @type {?} */ parts = m[2].split(',');\n                    var /** @type {?} */ r = [];\n                    for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n                        var /** @type {?} */ p = parts[i].trim();\n                        if (!p)\n                            break;\n                        r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                    }\n                    return r.join(',');\n                }\n                else {\n                    return _polyfillHostNoCombinator + m[3];\n                }\n            });\n        };\n        /**\n         * @param {?} host\n         * @param {?} part\n         * @param {?} suffix\n         * @return {?}\n         */\n        ShadowCss.prototype._colonHostContextPartReplacer = function (host, part, suffix) {\n            if (part.indexOf(_polyfillHost) > -1) {\n                return this._colonHostPartReplacer(host, part, suffix);\n            }\n            else {\n                return host + part + suffix + ', ' + part + ' ' + host + suffix;\n            }\n        };\n        /**\n         * @param {?} host\n         * @param {?} part\n         * @param {?} suffix\n         * @return {?}\n         */\n        ShadowCss.prototype._colonHostPartReplacer = function (host, part, suffix) {\n            return host + part.replace(_polyfillHost, '') + suffix;\n        };\n        /**\n         * @param {?} cssText\n         * @return {?}\n         */\n        ShadowCss.prototype._convertShadowDOMSelectors = function (cssText) {\n            return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n        };\n        /**\n         * @param {?} cssText\n         * @param {?} scopeSelector\n         * @param {?} hostSelector\n         * @return {?}\n         */\n        ShadowCss.prototype._scopeSelectors = function (cssText, scopeSelector, hostSelector) {\n            var _this = this;\n            return processRules(cssText, function (rule) {\n                var /** @type {?} */ selector = rule.selector;\n                var /** @type {?} */ content = rule.content;\n                if (rule.selector[0] != '@') {\n                    selector =\n                        _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\n                }\n                else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                    rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                    content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n                }\n                return new CssRule(selector, content);\n            });\n        };\n        /**\n         * @param {?} selector\n         * @param {?} scopeSelector\n         * @param {?} hostSelector\n         * @param {?} strict\n         * @return {?}\n         */\n        ShadowCss.prototype._scopeSelector = function (selector, scopeSelector, hostSelector, strict) {\n            var _this = this;\n            return selector.split(',')\n                .map(function (part) { return part.trim().split(_shadowDeepSelectors); })\n                .map(function (deepParts) {\n                var shallowPart = deepParts[0], otherParts = deepParts.slice(1);\n                var /** @type {?} */ applyScope = function (shallowPart) {\n                    if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                        return strict ?\n                            _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                            _this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n                    }\n                    else {\n                        return shallowPart;\n                    }\n                };\n                return [applyScope(shallowPart)].concat(otherParts).join(' ');\n            })\n                .join(', ');\n        };\n        /**\n         * @param {?} selector\n         * @param {?} scopeSelector\n         * @return {?}\n         */\n        ShadowCss.prototype._selectorNeedsScoping = function (selector, scopeSelector) {\n            var /** @type {?} */ re = this._makeScopeMatcher(scopeSelector);\n            return !re.test(selector);\n        };\n        /**\n         * @param {?} scopeSelector\n         * @return {?}\n         */\n        ShadowCss.prototype._makeScopeMatcher = function (scopeSelector) {\n            var /** @type {?} */ lre = /\\[/g;\n            var /** @type {?} */ rre = /\\]/g;\n            scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n            return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n        };\n        /**\n         * @param {?} selector\n         * @param {?} scopeSelector\n         * @param {?} hostSelector\n         * @return {?}\n         */\n        ShadowCss.prototype._applySelectorScope = function (selector, scopeSelector, hostSelector) {\n            // Difference from webcomponents.js: scopeSelector could not be an array\n            return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n        };\n        /**\n         * @param {?} selector\n         * @param {?} scopeSelector\n         * @param {?} hostSelector\n         * @return {?}\n         */\n        ShadowCss.prototype._applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {\n            // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n            _polyfillHostRe.lastIndex = 0;\n            if (_polyfillHostRe.test(selector)) {\n                var /** @type {?} */ replaceBy_1 = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\n                return selector\n                    .replace(_polyfillHostNoCombinatorRe, function (hnc, selector) {\n                    return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                        return before + replaceBy_1 + colon + after;\n                    });\n                })\n                    .replace(_polyfillHostRe, replaceBy_1 + ' ');\n            }\n            return scopeSelector + ' ' + selector;\n        };\n        /**\n         * @param {?} selector\n         * @param {?} scopeSelector\n         * @param {?} hostSelector\n         * @return {?}\n         */\n        ShadowCss.prototype._applyStrictSelectorScope = function (selector, scopeSelector, hostSelector) {\n            var _this = this;\n            var /** @type {?} */ isRe = /\\[is=([^\\]]*)\\]/g;\n            scopeSelector = scopeSelector.replace(isRe, function (_) {\n                var parts = [];\n                for (var _i = 1; _i < arguments.length; _i++) {\n                    parts[_i - 1] = arguments[_i];\n                }\n                return parts[0];\n            });\n            var /** @type {?} */ attrName = '[' + scopeSelector + ']';\n            var /** @type {?} */ _scopeSelectorPart = function (p) {\n                var /** @type {?} */ scopedP = p.trim();\n                if (!scopedP) {\n                    return '';\n                }\n                if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                    scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n                }\n                else {\n                    // remove :host since it should be unnecessary\n                    var /** @type {?} */ t = p.replace(_polyfillHostRe, '');\n                    if (t.length > 0) {\n                        var /** @type {?} */ matches = t.match(/([^:]*)(:*)(.*)/);\n                        if (matches) {\n                            scopedP = matches[1] + attrName + matches[2] + matches[3];\n                        }\n                    }\n                }\n                return scopedP;\n            };\n            var /** @type {?} */ safeContent = new SafeSelector(selector);\n            selector = safeContent.content();\n            var /** @type {?} */ scopedSelector = '';\n            var /** @type {?} */ startIndex = 0;\n            var /** @type {?} */ res;\n            var /** @type {?} */ sep = /( |>|\\+|~(?!=))\\s*/g;\n            var /** @type {?} */ scopeAfter = selector.indexOf(_polyfillHostNoCombinator);\n            while ((res = sep.exec(selector)) !== null) {\n                var /** @type {?} */ separator = res[1];\n                var /** @type {?} */ part = selector.slice(startIndex, res.index).trim();\n                // if a selector appears before :host-context it should not be shimmed as it\n                // matches on ancestor elements and not on elements in the host's shadow\n                var /** @type {?} */ scopedPart = startIndex >= scopeAfter ? _scopeSelectorPart(part) : part;\n                scopedSelector += scopedPart + \" \" + separator + \" \";\n                startIndex = sep.lastIndex;\n            }\n            scopedSelector += _scopeSelectorPart(selector.substring(startIndex));\n            // replace the placeholders with their original values\n            return safeContent.restore(scopedSelector);\n        };\n        /**\n         * @param {?} selector\n         * @return {?}\n         */\n        ShadowCss.prototype._insertPolyfillHostInCssText = function (selector) {\n            return selector.replace(_colonHostContextRe, _polyfillHostContext)\n                .replace(_colonHostRe, _polyfillHost);\n        };\n        return ShadowCss;\n    }());\n    var SafeSelector = (function () {\n        /**\n         * @param {?} selector\n         */\n        function SafeSelector(selector) {\n            var _this = this;\n            this.placeholders = [];\n            this.index = 0;\n            // Replaces attribute selectors with placeholders.\n            // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n            selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n                var replaceBy = \"__ph-\" + _this.index + \"__\";\n                _this.placeholders.push(keep);\n                _this.index++;\n                return replaceBy;\n            });\n            // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n            // WS and \"+\" would otherwise be interpreted as selector separators.\n            this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n                var replaceBy = \"__ph-\" + _this.index + \"__\";\n                _this.placeholders.push(exp);\n                _this.index++;\n                return pseudo + replaceBy;\n            });\n        }\n        ;\n        /**\n         * @param {?} content\n         * @return {?}\n         */\n        SafeSelector.prototype.restore = function (content) {\n            var _this = this;\n            return content.replace(/__ph-(\\d+)__/g, function (ph, index) { return _this.placeholders[+index]; });\n        };\n        /**\n         * @return {?}\n         */\n        SafeSelector.prototype.content = function () { return this._content; };\n        return SafeSelector;\n    }());\n    var /** @type {?} */ _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\n    var /** @type {?} */ _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\n    var /** @type {?} */ _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\n    var /** @type {?} */ _polyfillHost = '-shadowcsshost';\n    // note: :host-context pre-processed to -shadowcsshostcontext.\n    var /** @type {?} */ _polyfillHostContext = '-shadowcsscontext';\n    var /** @type {?} */ _parenSuffix = ')(?:\\\\((' +\n        '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n        ')\\\\))?([^,{]*)';\n    var /** @type {?} */ _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\n    var /** @type {?} */ _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\n    var /** @type {?} */ _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\n    var /** @type {?} */ _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\n    var /** @type {?} */ _shadowDOMSelectorsRe = [\n        /::shadow/g,\n        /::content/g,\n        // Deprecated selectors\n        /\\/shadow-deep\\//g,\n        /\\/shadow\\//g,\n    ];\n    var /** @type {?} */ _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)/g;\n    var /** @type {?} */ _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\n    var /** @type {?} */ _polyfillHostRe = /-shadowcsshost/gim;\n    var /** @type {?} */ _colonHostRe = /:host/gim;\n    var /** @type {?} */ _colonHostContextRe = /:host-context/gim;\n    var /** @type {?} */ _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    function stripComments(input) {\n        return input.replace(_commentRe, '');\n    }\n    // all comments except inline source mapping\n    var /** @type {?} */ _sourceMappingUrlRe = /\\/\\*\\s*#\\s*sourceMappingURL=[\\s\\S]+?\\*\\//;\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    function extractSourceMappingUrl(input) {\n        var /** @type {?} */ matcher = input.match(_sourceMappingUrlRe);\n        return matcher ? matcher[0] : '';\n    }\n    var /** @type {?} */ _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\n    var /** @type {?} */ _curlyRe = /([{}])/g;\n    var /** @type {?} */ OPEN_CURLY = '{';\n    var /** @type {?} */ CLOSE_CURLY = '}';\n    var /** @type {?} */ BLOCK_PLACEHOLDER = '%BLOCK%';\n    var CssRule = (function () {\n        /**\n         * @param {?} selector\n         * @param {?} content\n         */\n        function CssRule(selector, content) {\n            this.selector = selector;\n            this.content = content;\n        }\n        return CssRule;\n    }());\n    /**\n     * @param {?} input\n     * @param {?} ruleCallback\n     * @return {?}\n     */\n    function processRules(input, ruleCallback) {\n        var /** @type {?} */ inputWithEscapedBlocks = escapeBlocks(input);\n        var /** @type {?} */ nextBlockIndex = 0;\n        return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            var /** @type {?} */ selector = m[2];\n            var /** @type {?} */ content = '';\n            var /** @type {?} */ suffix = m[4];\n            var /** @type {?} */ contentPrefix = '';\n            if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n                content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n                suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n                contentPrefix = '{';\n            }\n            var /** @type {?} */ rule = ruleCallback(new CssRule(selector, content));\n            return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n        });\n    }\n    var StringWithEscapedBlocks = (function () {\n        /**\n         * @param {?} escapedString\n         * @param {?} blocks\n         */\n        function StringWithEscapedBlocks(escapedString, blocks) {\n            this.escapedString = escapedString;\n            this.blocks = blocks;\n        }\n        return StringWithEscapedBlocks;\n    }());\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    function escapeBlocks(input) {\n        var /** @type {?} */ inputParts = input.split(_curlyRe);\n        var /** @type {?} */ resultParts = [];\n        var /** @type {?} */ escapedBlocks = [];\n        var /** @type {?} */ bracketCount = 0;\n        var /** @type {?} */ currentBlockParts = [];\n        for (var /** @type {?} */ partIndex = 0; partIndex < inputParts.length; partIndex++) {\n            var /** @type {?} */ part = inputParts[partIndex];\n            if (part == CLOSE_CURLY) {\n                bracketCount--;\n            }\n            if (bracketCount > 0) {\n                currentBlockParts.push(part);\n            }\n            else {\n                if (currentBlockParts.length > 0) {\n                    escapedBlocks.push(currentBlockParts.join(''));\n                    resultParts.push(BLOCK_PLACEHOLDER);\n                    currentBlockParts = [];\n                }\n                resultParts.push(part);\n            }\n            if (part == OPEN_CURLY) {\n                bracketCount++;\n            }\n        }\n        if (currentBlockParts.length > 0) {\n            escapedBlocks.push(currentBlockParts.join(''));\n            resultParts.push(BLOCK_PLACEHOLDER);\n        }\n        return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n    }\n    var /** @type {?} */ COMPONENT_VARIABLE = '%COMP%';\n    var /** @type {?} */ HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\n    var /** @type {?} */ CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\n    var StylesCompileDependency = (function () {\n        /**\n         * @param {?} name\n         * @param {?} moduleUrl\n         * @param {?} isShimmed\n         * @param {?} valuePlaceholder\n         */\n        function StylesCompileDependency(name, moduleUrl, isShimmed, valuePlaceholder) {\n            this.name = name;\n            this.moduleUrl = moduleUrl;\n            this.isShimmed = isShimmed;\n            this.valuePlaceholder = valuePlaceholder;\n        }\n        return StylesCompileDependency;\n    }());\n    var StylesCompileResult = (function () {\n        /**\n         * @param {?} componentStylesheet\n         * @param {?} externalStylesheets\n         */\n        function StylesCompileResult(componentStylesheet, externalStylesheets) {\n            this.componentStylesheet = componentStylesheet;\n            this.externalStylesheets = externalStylesheets;\n        }\n        return StylesCompileResult;\n    }());\n    var CompiledStylesheet = (function () {\n        /**\n         * @param {?} statements\n         * @param {?} stylesVar\n         * @param {?} dependencies\n         * @param {?} isShimmed\n         * @param {?} meta\n         */\n        function CompiledStylesheet(statements, stylesVar, dependencies, isShimmed, meta) {\n            this.statements = statements;\n            this.stylesVar = stylesVar;\n            this.dependencies = dependencies;\n            this.isShimmed = isShimmed;\n            this.meta = meta;\n        }\n        return CompiledStylesheet;\n    }());\n    var StyleCompiler = (function () {\n        /**\n         * @param {?} _urlResolver\n         */\n        function StyleCompiler(_urlResolver) {\n            this._urlResolver = _urlResolver;\n            this._shadowCss = new ShadowCss();\n        }\n        /**\n         * @param {?} comp\n         * @return {?}\n         */\n        StyleCompiler.prototype.compileComponent = function (comp) {\n            var _this = this;\n            var /** @type {?} */ externalStylesheets = [];\n            var /** @type {?} */ componentStylesheet = this._compileStyles(comp, new CompileStylesheetMetadata({\n                styles: comp.template.styles,\n                styleUrls: comp.template.styleUrls,\n                moduleUrl: identifierModuleUrl(comp.type)\n            }), true);\n            comp.template.externalStylesheets.forEach(function (stylesheetMeta) {\n                var /** @type {?} */ compiledStylesheet = _this._compileStyles(comp, stylesheetMeta, false);\n                externalStylesheets.push(compiledStylesheet);\n            });\n            return new StylesCompileResult(componentStylesheet, externalStylesheets);\n        };\n        /**\n         * @param {?} comp\n         * @param {?} stylesheet\n         * @param {?} isComponentStylesheet\n         * @return {?}\n         */\n        StyleCompiler.prototype._compileStyles = function (comp, stylesheet, isComponentStylesheet) {\n            var _this = this;\n            var /** @type {?} */ shim = comp.template.encapsulation === _angular_core.ViewEncapsulation.Emulated;\n            var /** @type {?} */ styleExpressions = stylesheet.styles.map(function (plainStyle) { return literal(_this._shimIfNeeded(plainStyle, shim)); });\n            var /** @type {?} */ dependencies = [];\n            for (var /** @type {?} */ i = 0; i < stylesheet.styleUrls.length; i++) {\n                var /** @type {?} */ identifier = { reference: null };\n                dependencies.push(new StylesCompileDependency(getStylesVarName(null), stylesheet.styleUrls[i], shim, identifier));\n                styleExpressions.push(new ExternalExpr(identifier));\n            }\n            // styles variable contains plain strings and arrays of other styles arrays (recursive),\n            // so we set its type to dynamic.\n            var /** @type {?} */ stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n            var /** @type {?} */ stmt = variable(stylesVar)\n                .set(literalArr(styleExpressions, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])))\n                .toDeclStmt(null, [StmtModifier.Final]);\n            return new CompiledStylesheet([stmt], stylesVar, dependencies, shim, stylesheet);\n        };\n        /**\n         * @param {?} style\n         * @param {?} shim\n         * @return {?}\n         */\n        StyleCompiler.prototype._shimIfNeeded = function (style, shim) {\n            return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;\n        };\n        return StyleCompiler;\n    }());\n    StyleCompiler.decorators = [\n        { type: CompilerInjectable },\n    ];\n    /**\n     * @nocollapse\n     */\n    StyleCompiler.ctorParameters = function () { return [\n        { type: UrlResolver, },\n    ]; };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    function getStylesVarName(component) {\n        var /** @type {?} */ result = \"styles\";\n        if (component) {\n            result += \"_\" + identifierName(component.type);\n        }\n        return result;\n    }\n    var EventHandlerVars = (function () {\n        function EventHandlerVars() {\n        }\n        return EventHandlerVars;\n    }());\n    EventHandlerVars.event = variable('$event');\n    var ConvertActionBindingResult = (function () {\n        /**\n         * @param {?} stmts\n         * @param {?} allowDefault\n         */\n        function ConvertActionBindingResult(stmts, allowDefault) {\n            this.stmts = stmts;\n            this.allowDefault = allowDefault;\n        }\n        return ConvertActionBindingResult;\n    }());\n    /**\n     * Converts the given expression AST into an executable output AST, assuming the expression is\n     * used in an action binding (e.g. an event handler).\n     * @param {?} localResolver\n     * @param {?} implicitReceiver\n     * @param {?} action\n     * @param {?} bindingId\n     * @return {?}\n     */\n    function convertActionBinding(localResolver, implicitReceiver, action, bindingId) {\n        if (!localResolver) {\n            localResolver = new DefaultLocalResolver();\n        }\n        var /** @type {?} */ actionWithoutBuiltins = convertPropertyBindingBuiltins({\n            createLiteralArrayConverter: function (argCount) {\n                // Note: no caching for literal arrays in actions.\n                return function (args) { return literalArr(args); };\n            },\n            createLiteralMapConverter: function (keys) {\n                // Note: no caching for literal maps in actions.\n                return function (args) { return literalMap(/** @type {?} */ (keys.map(function (key, i) { return [key, args[i]]; }))); };\n            },\n            createPipeConverter: function (name) {\n                throw new Error(\"Illegal State: Actions are not allowed to contain pipes. Pipe: \" + name);\n            }\n        }, action);\n        var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n        var /** @type {?} */ actionStmts = [];\n        flattenStatements(actionWithoutBuiltins.visit(visitor, _Mode.Statement), actionStmts);\n        prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n        var /** @type {?} */ lastIndex = actionStmts.length - 1;\n        var /** @type {?} */ preventDefaultVar = null;\n        if (lastIndex >= 0) {\n            var /** @type {?} */ lastStatement = actionStmts[lastIndex];\n            var /** @type {?} */ returnExpr = convertStmtIntoExpression(lastStatement);\n            if (returnExpr) {\n                // Note: We need to cast the result of the method call to dynamic,\n                // as it might be a void method!\n                preventDefaultVar = createPreventDefaultVar(bindingId);\n                actionStmts[lastIndex] =\n                    preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false)))\n                        .toDeclStmt(null, [StmtModifier.Final]);\n            }\n        }\n        return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n    }\n    /**\n     * @param {?} converterFactory\n     * @param {?} ast\n     * @return {?}\n     */\n    function convertPropertyBindingBuiltins(converterFactory, ast) {\n        return convertBuiltins(converterFactory, ast);\n    }\n    var ConvertPropertyBindingResult = (function () {\n        /**\n         * @param {?} stmts\n         * @param {?} currValExpr\n         */\n        function ConvertPropertyBindingResult(stmts, currValExpr) {\n            this.stmts = stmts;\n            this.currValExpr = currValExpr;\n        }\n        return ConvertPropertyBindingResult;\n    }());\n    /**\n     * Converts the given expression AST into an executable output AST, assuming the expression\n     * is used in property binding. The expression has to be preprocessed via\n     * `convertPropertyBindingBuiltins`.\n     * @param {?} localResolver\n     * @param {?} implicitReceiver\n     * @param {?} expressionWithoutBuiltins\n     * @param {?} bindingId\n     * @return {?}\n     */\n    function convertPropertyBinding(localResolver, implicitReceiver, expressionWithoutBuiltins, bindingId) {\n        if (!localResolver) {\n            localResolver = new DefaultLocalResolver();\n        }\n        var /** @type {?} */ currValExpr = createCurrValueExpr(bindingId);\n        var /** @type {?} */ stmts = [];\n        var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n        var /** @type {?} */ outputExpr = expressionWithoutBuiltins.visit(visitor, _Mode.Expression);\n        if (visitor.temporaryCount) {\n            for (var /** @type {?} */ i = 0; i < visitor.temporaryCount; i++) {\n                stmts.push(temporaryDeclaration(bindingId, i));\n            }\n        }\n        stmts.push(currValExpr.set(outputExpr).toDeclStmt(null, [StmtModifier.Final]));\n        return new ConvertPropertyBindingResult(stmts, currValExpr);\n    }\n    /**\n     * @param {?} converterFactory\n     * @param {?} ast\n     * @return {?}\n     */\n    function convertBuiltins(converterFactory, ast) {\n        var /** @type {?} */ visitor = new _BuiltinAstConverter(converterFactory);\n        return ast.visit(visitor);\n    }\n    /**\n     * @param {?} bindingId\n     * @param {?} temporaryNumber\n     * @return {?}\n     */\n    function temporaryName(bindingId, temporaryNumber) {\n        return \"tmp_\" + bindingId + \"_\" + temporaryNumber;\n    }\n    /**\n     * @param {?} bindingId\n     * @param {?} temporaryNumber\n     * @return {?}\n     */\n    function temporaryDeclaration(bindingId, temporaryNumber) {\n        return new DeclareVarStmt(temporaryName(bindingId, temporaryNumber), NULL_EXPR);\n    }\n    /**\n     * @param {?} temporaryCount\n     * @param {?} bindingId\n     * @param {?} statements\n     * @return {?}\n     */\n    function prependTemporaryDecls(temporaryCount, bindingId, statements) {\n        for (var /** @type {?} */ i = temporaryCount - 1; i >= 0; i--) {\n            statements.unshift(temporaryDeclaration(bindingId, i));\n        }\n    }\n    var _Mode = {};\n    _Mode.Statement = 0;\n    _Mode.Expression = 1;\n    _Mode[_Mode.Statement] = \"Statement\";\n    _Mode[_Mode.Expression] = \"Expression\";\n    /**\n     * @param {?} mode\n     * @param {?} ast\n     * @return {?}\n     */\n    function ensureStatementMode(mode, ast) {\n        if (mode !== _Mode.Statement) {\n            throw new Error(\"Expected a statement, but saw \" + ast);\n        }\n    }\n    /**\n     * @param {?} mode\n     * @param {?} ast\n     * @return {?}\n     */\n    function ensureExpressionMode(mode, ast) {\n        if (mode !== _Mode.Expression) {\n            throw new Error(\"Expected an expression, but saw \" + ast);\n        }\n    }\n    /**\n     * @param {?} mode\n     * @param {?} expr\n     * @return {?}\n     */\n    function convertToStatementIfNeeded(mode, expr) {\n        if (mode === _Mode.Statement) {\n            return expr.toStmt();\n        }\n        else {\n            return expr;\n        }\n    }\n    var _BuiltinAstConverter = (function (_super) {\n        __extends(_BuiltinAstConverter, _super);\n        /**\n         * @param {?} _converterFactory\n         */\n        function _BuiltinAstConverter(_converterFactory) {\n            var _this = _super.call(this) || this;\n            _this._converterFactory = _converterFactory;\n            return _this;\n        }\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        _BuiltinAstConverter.prototype.visitPipe = function (ast, context) {\n            var _this = this;\n            var /** @type {?} */ args = [ast.exp].concat(ast.args).map(function (ast) { return ast.visit(_this, context); });\n            return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createPipeConverter(ast.name, args.length));\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        _BuiltinAstConverter.prototype.visitLiteralArray = function (ast, context) {\n            var _this = this;\n            var /** @type {?} */ args = ast.expressions.map(function (ast) { return ast.visit(_this, context); });\n            return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralArrayConverter(ast.expressions.length));\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        _BuiltinAstConverter.prototype.visitLiteralMap = function (ast, context) {\n            var _this = this;\n            var /** @type {?} */ args = ast.values.map(function (ast) { return ast.visit(_this, context); });\n            return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralMapConverter(ast.keys));\n        };\n        return _BuiltinAstConverter;\n    }(AstTransformer));\n    var _AstToIrVisitor = (function () {\n        /**\n         * @param {?} _localResolver\n         * @param {?} _implicitReceiver\n         * @param {?} bindingId\n         */\n        function _AstToIrVisitor(_localResolver, _implicitReceiver, bindingId) {\n            this._localResolver = _localResolver;\n            this._implicitReceiver = _implicitReceiver;\n            this.bindingId = bindingId;\n            this._nodeMap = new Map();\n            this._resultMap = new Map();\n            this._currentTemporary = 0;\n            this.temporaryCount = 0;\n        }\n        /**\n         * @param {?} ast\n         * @param {?} mode\n         * @return {?}\n         */\n        _AstToIrVisitor.prototype.visitBinary = function (ast, mode) {\n            var /** @type {?} */ op;\n            switch (ast.operation) {\n                case '+':\n                    op = BinaryOperator.Plus;\n                    break;\n                case '-':\n                    op = BinaryOperator.Minus;\n                    break;\n                case '*':\n                    op = BinaryOperator.Multiply;\n                    break;\n                case '/':\n                    op = BinaryOperator.Divide;\n                    break;\n                case '%':\n                    op = BinaryOperator.Modulo;\n                    break;\n                case '&&':\n                    op = BinaryOperator.And;\n                    break;\n                case '||':\n                    op = BinaryOperator.Or;\n                    break;\n                case '==':\n                    op = BinaryOperator.Equals;\n                    break;\n                case '!=':\n                    op = BinaryOperator.NotEquals;\n                    break;\n                case '===':\n                    op = BinaryOperator.Identical;\n                    break;\n                case '!==':\n                    op = BinaryOperator.NotIdentical;\n                    break;\n                case '<':\n                    op = BinaryOperator.Lower;\n                    break;\n                case '>':\n                    op = BinaryOperator.Bigger;\n                    break;\n                case '<=':\n                    op = BinaryOperator.LowerEquals;\n                    break;\n                case '>=':\n                    op = BinaryOperator.BiggerEquals;\n                    break;\n                default:\n                    throw new Error(\"Unsupported operation \" + ast.operation);\n            }\n            return convertToStatementIfNeeded(mode, new BinaryOperatorExpr(op, this.visit(ast.left, _Mode.Expression), this.visit(ast.right, _Mode.Expression)));\n        };\n        /**\n         * @param {?} ast\n         * @param {?} mode\n         * @return {?}\n         */\n        _AstToIrVisitor.prototype.visitChain = function (ast, mode) {\n            ensureStatementMode(mode, ast);\n            return this.visitAll(ast.expressions, mode);\n        };\n        /**\n         * @param {?} ast\n         * @param {?} mode\n         * @return {?}\n         */\n        _AstToIrVisitor.prototype.visitConditional = function (ast, mode) {\n            var /** @type {?} */ value = this.visit(ast.condition, _Mode.Expression);\n            return convertToStatementIfNeeded(mode, value.conditional(this.visit(ast.trueExp, _Mode.Expression), this.visit(ast.falseExp, _Mode.Expression)));\n        };\n        /**\n         * @param {?} ast\n         * @param {?} mode\n         * @return {?}\n         */\n        _AstToIrVisitor.prototype.visitPipe = function (ast, mode) {\n            throw new Error(\"Illegal state: Pipes should have been converted into functions. Pipe: \" + ast.name);\n        };\n        /**\n         * @param {?} ast\n         * @param {?} mode\n         * @return {?}\n         */\n        _AstToIrVisitor.prototype.visitFunctionCall = function (ast, mode) {\n            var /** @type {?} */ convertedArgs = this.visitAll(ast.args, _Mode.Expression);\n            var /** @type {?} */ fnResult;\n            if (ast instanceof BuiltinFunctionCall) {\n                fnResult = ast.converter(convertedArgs);\n            }\n            else {\n                fnResult = this.visit(ast.target, _Mode.Expression).callFn(convertedArgs);\n            }\n            return convertToStatementIfNeeded(mode, fnResult);\n        };\n        /**\n         * @param {?} ast\n         * @param {?} mode\n         * @return {?}\n         */\n        _AstToIrVisitor.prototype.visitImplicitReceiver = function (ast, mode) {\n            ensureExpressionMode(mode, ast);\n            return this._implicitReceiver;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} mode\n         * @return {?}\n         */\n        _AstToIrVisitor.prototype.visitInterpolation = function (ast, mode) {\n            ensureExpressionMode(mode, ast);\n            var /** @type {?} */ args = [literal(ast.expressions.length)];\n            for (var /** @type {?} */ i = 0; i < ast.strings.length - 1; i++) {\n                args.push(literal(ast.strings[i]));\n                args.push(this.visit(ast.expressions[i], _Mode.Expression));\n            }\n            args.push(literal(ast.strings[ast.strings.length - 1]));\n            return ast.expressions.length <= 9 ?\n                importExpr(createIdentifier(Identifiers.inlineInterpolate)).callFn(args) :\n                importExpr(createIdentifier(Identifiers.interpolate)).callFn([\n                    args[0], literalArr(args.slice(1))\n                ]);\n        };\n        /**\n         * @param {?} ast\n         * @param {?} mode\n         * @return {?}\n         */\n        _AstToIrVisitor.prototype.visitKeyedRead = function (ast, mode) {\n            var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n            if (leftMostSafe) {\n                return this.convertSafeAccess(ast, leftMostSafe, mode);\n            }\n            else {\n                return convertToStatementIfNeeded(mode, this.visit(ast.obj, _Mode.Expression).key(this.visit(ast.key, _Mode.Expression)));\n            }\n        };\n        /**\n         * @param {?} ast\n         * @param {?} mode\n         * @return {?}\n         */\n        _AstToIrVisitor.prototype.visitKeyedWrite = function (ast, mode) {\n            var /** @type {?} */ obj = this.visit(ast.obj, _Mode.Expression);\n            var /** @type {?} */ key = this.visit(ast.key, _Mode.Expression);\n            var /** @type {?} */ value = this.visit(ast.value, _Mode.Expression);\n            return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n        };\n        /**\n         * @param {?} ast\n         * @param {?} mode\n         * @return {?}\n         */\n        _AstToIrVisitor.prototype.visitLiteralArray = function (ast, mode) {\n            throw new Error(\"Illegal State: literal arrays should have been converted into functions\");\n        };\n        /**\n         * @param {?} ast\n         * @param {?} mode\n         * @return {?}\n         */\n        _AstToIrVisitor.prototype.visitLiteralMap = function (ast, mode) {\n            throw new Error(\"Illegal State: literal maps should have been converted into functions\");\n        };\n        /**\n         * @param {?} ast\n         * @param {?} mode\n         * @return {?}\n         */\n        _AstToIrVisitor.prototype.visitLiteralPrimitive = function (ast, mode) {\n            return convertToStatementIfNeeded(mode, literal(ast.value));\n        };\n        /**\n         * @param {?} name\n         * @return {?}\n         */\n        _AstToIrVisitor.prototype._getLocal = function (name) { return this._localResolver.getLocal(name); };\n        /**\n         * @param {?} ast\n         * @param {?} mode\n         * @return {?}\n         */\n        _AstToIrVisitor.prototype.visitMethodCall = function (ast, mode) {\n            var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n            if (leftMostSafe) {\n                return this.convertSafeAccess(ast, leftMostSafe, mode);\n            }\n            else {\n                var /** @type {?} */ args = this.visitAll(ast.args, _Mode.Expression);\n                var /** @type {?} */ result = null;\n                var /** @type {?} */ receiver = this.visit(ast.receiver, _Mode.Expression);\n                if (receiver === this._implicitReceiver) {\n                    var /** @type {?} */ varExpr = this._getLocal(ast.name);\n                    if (varExpr) {\n                        result = varExpr.callFn(args);\n                    }\n                }\n                if (result == null) {\n                    result = receiver.callMethod(ast.name, args);\n                }\n                return convertToStatementIfNeeded(mode, result);\n            }\n        };\n        /**\n         * @param {?} ast\n         * @param {?} mode\n         * @return {?}\n         */\n        _AstToIrVisitor.prototype.visitPrefixNot = function (ast, mode) {\n            return convertToStatementIfNeeded(mode, not(this.visit(ast.expression, _Mode.Expression)));\n        };\n        /**\n         * @param {?} ast\n         * @param {?} mode\n         * @return {?}\n         */\n        _AstToIrVisitor.prototype.visitPropertyRead = function (ast, mode) {\n            var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n            if (leftMostSafe) {\n                return this.convertSafeAccess(ast, leftMostSafe, mode);\n            }\n            else {\n                var /** @type {?} */ result = null;\n                var /** @type {?} */ receiver = this.visit(ast.receiver, _Mode.Expression);\n                if (receiver === this._implicitReceiver) {\n                    result = this._getLocal(ast.name);\n                }\n                if (result == null) {\n                    result = receiver.prop(ast.name);\n                }\n                return convertToStatementIfNeeded(mode, result);\n            }\n        };\n        /**\n         * @param {?} ast\n         * @param {?} mode\n         * @return {?}\n         */\n        _AstToIrVisitor.prototype.visitPropertyWrite = function (ast, mode) {\n            var /** @type {?} */ receiver = this.visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                var /** @type {?} */ varExpr = this._getLocal(ast.name);\n                if (varExpr) {\n                    throw new Error('Cannot assign to a reference or variable!');\n                }\n            }\n            return convertToStatementIfNeeded(mode, receiver.prop(ast.name).set(this.visit(ast.value, _Mode.Expression)));\n        };\n        /**\n         * @param {?} ast\n         * @param {?} mode\n         * @return {?}\n         */\n        _AstToIrVisitor.prototype.visitSafePropertyRead = function (ast, mode) {\n            return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n        };\n        /**\n         * @param {?} ast\n         * @param {?} mode\n         * @return {?}\n         */\n        _AstToIrVisitor.prototype.visitSafeMethodCall = function (ast, mode) {\n            return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n        };\n        /**\n         * @param {?} asts\n         * @param {?} mode\n         * @return {?}\n         */\n        _AstToIrVisitor.prototype.visitAll = function (asts, mode) {\n            var _this = this;\n            return asts.map(function (ast) { return _this.visit(ast, mode); });\n        };\n        /**\n         * @param {?} ast\n         * @param {?} mode\n         * @return {?}\n         */\n        _AstToIrVisitor.prototype.visitQuote = function (ast, mode) {\n            throw new Error('Quotes are not supported for evaluation!');\n        };\n        /**\n         * @param {?} ast\n         * @param {?} mode\n         * @return {?}\n         */\n        _AstToIrVisitor.prototype.visit = function (ast, mode) {\n            var /** @type {?} */ result = this._resultMap.get(ast);\n            if (result)\n                return result;\n            return (this._nodeMap.get(ast) || ast).visit(this, mode);\n        };\n        /**\n         * @param {?} ast\n         * @param {?} leftMostSafe\n         * @param {?} mode\n         * @return {?}\n         */\n        _AstToIrVisitor.prototype.convertSafeAccess = function (ast, leftMostSafe, mode) {\n            // If the expression contains a safe access node on the left it needs to be converted to\n            // an expression that guards the access to the member by checking the receiver for blank. As\n            // execution proceeds from left to right, the left most part of the expression must be guarded\n            // first but, because member access is left associative, the right side of the expression is at\n            // the top of the AST. The desired result requires lifting a copy of the the left part of the\n            // expression up to test it for blank before generating the unguarded version.\n            // Consider, for example the following expression: a?.b.c?.d.e\n            // This results in the ast:\n            //         .\n            //        / \\\n            //       ?.   e\n            //      /  \\\n            //     .    d\n            //    / \\\n            //   ?.  c\n            //  /  \\\n            // a    b\n            // The following tree should be generated:\n            //\n            //        /---- ? ----\\\n            //       /      |      \\\n            //     a   /--- ? ---\\  null\n            //        /     |     \\\n            //       .      .     null\n            //      / \\    / \\\n            //     .  c   .   e\n            //    / \\    / \\\n            //   a   b  ,   d\n            //         / \\\n            //        .   c\n            //       / \\\n            //      a   b\n            //\n            // Notice that the first guard condition is the left hand of the left most safe access node\n            // which comes in as leftMostSafe to this routine.\n            var /** @type {?} */ guardedExpression = this.visit(leftMostSafe.receiver, _Mode.Expression);\n            var /** @type {?} */ temporary;\n            if (this.needsTemporary(leftMostSafe.receiver)) {\n                // If the expression has method calls or pipes then we need to save the result into a\n                // temporary variable to avoid calling stateful or impure code more than once.\n                temporary = this.allocateTemporary();\n                // Preserve the result in the temporary variable\n                guardedExpression = temporary.set(guardedExpression);\n                // Ensure all further references to the guarded expression refer to the temporary instead.\n                this._resultMap.set(leftMostSafe.receiver, temporary);\n            }\n            var /** @type {?} */ condition = guardedExpression.isBlank();\n            // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n            // leftMostNode with its unguarded version in the call to `this.visit()`.\n            if (leftMostSafe instanceof SafeMethodCall) {\n                this._nodeMap.set(leftMostSafe, new MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n            }\n            else {\n                this._nodeMap.set(leftMostSafe, new PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n            }\n            // Recursively convert the node now without the guarded member access.\n            var /** @type {?} */ access = this.visit(ast, _Mode.Expression);\n            // Remove the mapping. This is not strictly required as the converter only traverses each node\n            // once but is safer if the conversion is changed to traverse the nodes more than once.\n            this._nodeMap.delete(leftMostSafe);\n            // If we allcoated a temporary, release it.\n            if (temporary) {\n                this.releaseTemporary(temporary);\n            }\n            // Produce the conditional\n            return convertToStatementIfNeeded(mode, condition.conditional(literal(null), access));\n        };\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        _AstToIrVisitor.prototype.leftMostSafeNode = function (ast) {\n            var _this = this;\n            var /** @type {?} */ visit = function (visitor, ast) {\n                return (_this._nodeMap.get(ast) || ast).visit(visitor);\n            };\n            return ast.visit({\n                /**\n                 * @param {?} ast\n                 * @return {?}\n                 */\n                visitBinary: function (ast) { return null; },\n                /**\n                 * @param {?} ast\n                 * @return {?}\n                 */\n                visitChain: function (ast) { return null; },\n                /**\n                 * @param {?} ast\n                 * @return {?}\n                 */\n                visitConditional: function (ast) { return null; },\n                /**\n                 * @param {?} ast\n                 * @return {?}\n                 */\n                visitFunctionCall: function (ast) { return null; },\n                /**\n                 * @param {?} ast\n                 * @return {?}\n                 */\n                visitImplicitReceiver: function (ast) { return null; },\n                /**\n                 * @param {?} ast\n                 * @return {?}\n                 */\n                visitInterpolation: function (ast) { return null; },\n                /**\n                 * @param {?} ast\n                 * @return {?}\n                 */\n                visitKeyedRead: function (ast) { return visit(this, ast.obj); },\n                /**\n                 * @param {?} ast\n                 * @return {?}\n                 */\n                visitKeyedWrite: function (ast) { return null; },\n                /**\n                 * @param {?} ast\n                 * @return {?}\n                 */\n                visitLiteralArray: function (ast) { return null; },\n                /**\n                 * @param {?} ast\n                 * @return {?}\n                 */\n                visitLiteralMap: function (ast) { return null; },\n                /**\n                 * @param {?} ast\n                 * @return {?}\n                 */\n                visitLiteralPrimitive: function (ast) { return null; },\n                /**\n                 * @param {?} ast\n                 * @return {?}\n                 */\n                visitMethodCall: function (ast) { return visit(this, ast.receiver); },\n                /**\n                 * @param {?} ast\n                 * @return {?}\n                 */\n                visitPipe: function (ast) { return null; },\n                /**\n                 * @param {?} ast\n                 * @return {?}\n                 */\n                visitPrefixNot: function (ast) { return null; },\n                /**\n                 * @param {?} ast\n                 * @return {?}\n                 */\n                visitPropertyRead: function (ast) { return visit(this, ast.receiver); },\n                /**\n                 * @param {?} ast\n                 * @return {?}\n                 */\n                visitPropertyWrite: function (ast) { return null; },\n                /**\n                 * @param {?} ast\n                 * @return {?}\n                 */\n                visitQuote: function (ast) { return null; },\n                /**\n                 * @param {?} ast\n                 * @return {?}\n                 */\n                visitSafeMethodCall: function (ast) { return visit(this, ast.receiver) || ast; },\n                /**\n                 * @param {?} ast\n                 * @return {?}\n                 */\n                visitSafePropertyRead: function (ast) {\n                    return visit(this, ast.receiver) || ast;\n                }\n            });\n        };\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        _AstToIrVisitor.prototype.needsTemporary = function (ast) {\n            var _this = this;\n            var /** @type {?} */ visit = function (visitor, ast) {\n                return ast && (_this._nodeMap.get(ast) || ast).visit(visitor);\n            };\n            var /** @type {?} */ visitSome = function (visitor, ast) {\n                return ast.some(function (ast) { return visit(visitor, ast); });\n            };\n            return ast.visit({\n                /**\n                 * @param {?} ast\n                 * @return {?}\n                 */\n                visitBinary: function (ast) { return visit(this, ast.left) || visit(this, ast.right); },\n                /**\n                 * @param {?} ast\n                 * @return {?}\n                 */\n                visitChain: function (ast) { return false; },\n                /**\n                 * @param {?} ast\n                 * @return {?}\n                 */\n                visitConditional: function (ast) {\n                    return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                        visit(this, ast.falseExp);\n                },\n                /**\n                 * @param {?} ast\n                 * @return {?}\n                 */\n                visitFunctionCall: function (ast) { return true; },\n                /**\n                 * @param {?} ast\n                 * @return {?}\n                 */\n                visitImplicitReceiver: function (ast) { return false; },\n                /**\n                 * @param {?} ast\n                 * @return {?}\n                 */\n                visitInterpolation: function (ast) { return visitSome(this, ast.expressions); },\n                /**\n                 * @param {?} ast\n                 * @return {?}\n                 */\n                visitKeyedRead: function (ast) { return false; },\n                /**\n                 * @param {?} ast\n                 * @return {?}\n                 */\n                visitKeyedWrite: function (ast) { return false; },\n                /**\n                 * @param {?} ast\n                 * @return {?}\n                 */\n                visitLiteralArray: function (ast) { return true; },\n                /**\n                 * @param {?} ast\n                 * @return {?}\n                 */\n                visitLiteralMap: function (ast) { return true; },\n                /**\n                 * @param {?} ast\n                 * @return {?}\n                 */\n                visitLiteralPrimitive: function (ast) { return false; },\n                /**\n                 * @param {?} ast\n                 * @return {?}\n                 */\n                visitMethodCall: function (ast) { return true; },\n                /**\n                 * @param {?} ast\n                 * @return {?}\n                 */\n                visitPipe: function (ast) { return true; },\n                /**\n                 * @param {?} ast\n                 * @return {?}\n                 */\n                visitPrefixNot: function (ast) { return visit(this, ast.expression); },\n                /**\n                 * @param {?} ast\n                 * @return {?}\n                 */\n                visitPropertyRead: function (ast) { return false; },\n                /**\n                 * @param {?} ast\n                 * @return {?}\n                 */\n                visitPropertyWrite: function (ast) { return false; },\n                /**\n                 * @param {?} ast\n                 * @return {?}\n                 */\n                visitQuote: function (ast) { return false; },\n                /**\n                 * @param {?} ast\n                 * @return {?}\n                 */\n                visitSafeMethodCall: function (ast) { return true; },\n                /**\n                 * @param {?} ast\n                 * @return {?}\n                 */\n                visitSafePropertyRead: function (ast) { return false; }\n            });\n        };\n        /**\n         * @return {?}\n         */\n        _AstToIrVisitor.prototype.allocateTemporary = function () {\n            var /** @type {?} */ tempNumber = this._currentTemporary++;\n            this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n            return new ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n        };\n        /**\n         * @param {?} temporary\n         * @return {?}\n         */\n        _AstToIrVisitor.prototype.releaseTemporary = function (temporary) {\n            this._currentTemporary--;\n            if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n                throw new Error(\"Temporary \" + temporary.name + \" released out of order\");\n            }\n        };\n        return _AstToIrVisitor;\n    }());\n    /**\n     * @param {?} arg\n     * @param {?} output\n     * @return {?}\n     */\n    function flattenStatements(arg, output) {\n        if (Array.isArray(arg)) {\n            ((arg)).forEach(function (entry) { return flattenStatements(entry, output); });\n        }\n        else {\n            output.push(arg);\n        }\n    }\n    var DefaultLocalResolver = (function () {\n        function DefaultLocalResolver() {\n        }\n        /**\n         * @param {?} name\n         * @return {?}\n         */\n        DefaultLocalResolver.prototype.getLocal = function (name) {\n            if (name === EventHandlerVars.event.name) {\n                return EventHandlerVars.event;\n            }\n            return null;\n        };\n        return DefaultLocalResolver;\n    }());\n    /**\n     * @param {?} bindingId\n     * @return {?}\n     */\n    function createCurrValueExpr(bindingId) {\n        return variable(\"currVal_\" + bindingId); // fix syntax highlighting: `\n    }\n    /**\n     * @param {?} bindingId\n     * @return {?}\n     */\n    function createPreventDefaultVar(bindingId) {\n        return variable(\"pd_\" + bindingId);\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function convertStmtIntoExpression(stmt) {\n        if (stmt instanceof ExpressionStatement) {\n            return stmt.expr;\n        }\n        else if (stmt instanceof ReturnStatement) {\n            return stmt.value;\n        }\n        return null;\n    }\n    var BuiltinFunctionCall = (function (_super) {\n        __extends(BuiltinFunctionCall, _super);\n        /**\n         * @param {?} span\n         * @param {?} args\n         * @param {?} converter\n         */\n        function BuiltinFunctionCall(span, args, converter) {\n            var _this = _super.call(this, span, null, args) || this;\n            _this.args = args;\n            _this.converter = converter;\n            return _this;\n        }\n        return BuiltinFunctionCall;\n    }(FunctionCall));\n    var /** @type {?} */ CLASS_ATTR$1 = 'class';\n    var /** @type {?} */ STYLE_ATTR = 'style';\n    var /** @type {?} */ IMPLICIT_TEMPLATE_VAR = '\\$implicit';\n    var /** @type {?} */ NG_CONTAINER_TAG = 'ng-container';\n    var ViewCompileResult = (function () {\n        /**\n         * @param {?} statements\n         * @param {?} viewClassVar\n         * @param {?} rendererTypeVar\n         */\n        function ViewCompileResult(statements, viewClassVar, rendererTypeVar) {\n            this.statements = statements;\n            this.viewClassVar = viewClassVar;\n            this.rendererTypeVar = rendererTypeVar;\n        }\n        return ViewCompileResult;\n    }());\n    var ViewCompiler = (function () {\n        /**\n         * @param {?} _genConfigNext\n         * @param {?} _schemaRegistry\n         */\n        function ViewCompiler(_genConfigNext, _schemaRegistry) {\n            this._genConfigNext = _genConfigNext;\n            this._schemaRegistry = _schemaRegistry;\n        }\n        /**\n         * @param {?} component\n         * @param {?} template\n         * @param {?} styles\n         * @param {?} usedPipes\n         * @return {?}\n         */\n        ViewCompiler.prototype.compileComponent = function (component, template, styles, usedPipes) {\n            var /** @type {?} */ embeddedViewCount = 0;\n            var /** @type {?} */ staticQueryIds = findStaticQueryIds(template);\n            var /** @type {?} */ statements = [];\n            var /** @type {?} */ renderComponentVarName;\n            if (!component.isHost) {\n                var /** @type {?} */ customRenderData = [];\n                if (component.template.animations && component.template.animations.length) {\n                    customRenderData.push(new LiteralMapEntry('animation', convertValueToOutputAst(component.template.animations), true));\n                }\n                var /** @type {?} */ renderComponentVar = variable(rendererTypeName(component.type.reference));\n                renderComponentVarName = renderComponentVar.name;\n                statements.push(renderComponentVar\n                    .set(importExpr(createIdentifier(Identifiers.createRendererType2))\n                    .callFn([new LiteralMapExpr([\n                        new LiteralMapEntry('encapsulation', literal(component.template.encapsulation)),\n                        new LiteralMapEntry('styles', styles),\n                        new LiteralMapEntry('data', new LiteralMapExpr(customRenderData))\n                    ])]))\n                    .toDeclStmt(importType(createIdentifier(Identifiers.RendererType2)), [StmtModifier.Final]));\n            }\n            var /** @type {?} */ viewBuilderFactory = function (parent) {\n                var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n                return new ViewBuilder(parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory);\n            };\n            var /** @type {?} */ visitor = viewBuilderFactory(null);\n            visitor.visitAll([], template);\n            statements.push.apply(statements, visitor.build());\n            return new ViewCompileResult(statements, visitor.viewName, renderComponentVarName);\n        };\n        return ViewCompiler;\n    }());\n    ViewCompiler.decorators = [\n        { type: CompilerInjectable },\n    ];\n    /**\n     * @nocollapse\n     */\n    ViewCompiler.ctorParameters = function () { return [\n        { type: CompilerConfig, },\n        { type: ElementSchemaRegistry, },\n    ]; };\n    var /** @type {?} */ LOG_VAR = variable('log');\n    var /** @type {?} */ VIEW_VAR = variable('view');\n    var /** @type {?} */ CHECK_VAR = variable('check');\n    var /** @type {?} */ COMP_VAR = variable('comp');\n    var /** @type {?} */ NODE_INDEX_VAR = variable('nodeIndex');\n    var /** @type {?} */ EVENT_NAME_VAR = variable('eventName');\n    var /** @type {?} */ ALLOW_DEFAULT_VAR = variable(\"allowDefault\");\n    var ViewBuilder = (function () {\n        /**\n         * @param {?} parent\n         * @param {?} component\n         * @param {?} embeddedViewIndex\n         * @param {?} usedPipes\n         * @param {?} staticQueryIds\n         * @param {?} viewBuilderFactory\n         */\n        function ViewBuilder(parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory) {\n            this.parent = parent;\n            this.component = component;\n            this.embeddedViewIndex = embeddedViewIndex;\n            this.usedPipes = usedPipes;\n            this.staticQueryIds = staticQueryIds;\n            this.viewBuilderFactory = viewBuilderFactory;\n            this.nodes = [];\n            this.purePipeNodeIndices = Object.create(null);\n            this.refNodeIndices = Object.create(null);\n            this.variables = [];\n            this.children = [];\n            // TODO(tbosch): The old view compiler used to use an `any` type\n            // for the context in any embedded view. We keep this behaivor for now\n            // to be able to introduce the new view compiler without too many errors.\n            this.compType = this.embeddedViewIndex > 0 ? DYNAMIC_TYPE : importType(this.component.type);\n        }\n        Object.defineProperty(ViewBuilder.prototype, \"viewName\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                return viewClassName(this.component.type.reference, this.embeddedViewIndex);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} variables\n         * @param {?} astNodes\n         * @return {?}\n         */\n        ViewBuilder.prototype.visitAll = function (variables, astNodes) {\n            var _this = this;\n            this.variables = variables;\n            // create the pipes for the pure pipes immediately, so that we know their indices.\n            if (!this.parent) {\n                this.usedPipes.forEach(function (pipe) {\n                    if (pipe.pure) {\n                        _this.purePipeNodeIndices[pipe.name] = _this._createPipe(null, pipe);\n                    }\n                });\n            }\n            if (!this.parent) {\n                var /** @type {?} */ queryIds_1 = staticViewQueryIds(this.staticQueryIds);\n                this.component.viewQueries.forEach(function (query, queryIndex) {\n                    // Note: queries start with id 1 so we can use the number in a Bloom filter!\n                    var /** @type {?} */ queryId = queryIndex + 1;\n                    var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1 /* All */;\n                    var /** @type {?} */ flags = 67108864 /* TypeViewQuery */;\n                    if (queryIds_1.staticQueryIds.has(queryId)) {\n                        flags |= 134217728 /* StaticQuery */;\n                    }\n                    else {\n                        flags |= 268435456 /* DynamicQuery */;\n                    }\n                    _this.nodes.push(function () { return ({\n                        sourceSpan: null,\n                        nodeDef: importExpr(createIdentifier(Identifiers.queryDef)).callFn([\n                            literal(flags), literal(queryId),\n                            new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType))])\n                        ])\n                    }); });\n                });\n            }\n            templateVisitAll(this, astNodes);\n            if (astNodes.length === 0 ||\n                (this.parent && needsAdditionalRootNode(astNodes[astNodes.length - 1]))) {\n                // if the view is empty, or an embedded view has a view container as last root nde,\n                // create an additional root node.\n                this.nodes.push(function () { return ({\n                    sourceSpan: null,\n                    nodeDef: importExpr(createIdentifier(Identifiers.anchorDef)).callFn([\n                        literal(0 /* None */), NULL_EXPR, NULL_EXPR, literal(0)\n                    ])\n                }); });\n            }\n        };\n        /**\n         * @param {?=} targetStatements\n         * @return {?}\n         */\n        ViewBuilder.prototype.build = function (targetStatements) {\n            if (targetStatements === void 0) { targetStatements = []; }\n            this.children.forEach(function (child) { return child.build(targetStatements); });\n            var _a = this._createNodeExpressions(), updateRendererStmts = _a.updateRendererStmts, updateDirectivesStmts = _a.updateDirectivesStmts, nodeDefExprs = _a.nodeDefExprs;\n            var /** @type {?} */ updateRendererFn = this._createUpdateFn(updateRendererStmts);\n            var /** @type {?} */ updateDirectivesFn = this._createUpdateFn(updateDirectivesStmts);\n            var /** @type {?} */ viewFlags = 0 /* None */;\n            if (!this.parent && this.component.changeDetection === _angular_core.ChangeDetectionStrategy.OnPush) {\n                viewFlags |= 2 /* OnPush */;\n            }\n            var /** @type {?} */ viewFactory = new DeclareFunctionStmt(this.viewName, [new FnParam(LOG_VAR.name)], [new ReturnStatement(importExpr(createIdentifier(Identifiers.viewDef)).callFn([\n                    literal(viewFlags),\n                    literalArr(nodeDefExprs),\n                    updateDirectivesFn,\n                    updateRendererFn,\n                ]))], importType(createIdentifier(Identifiers.ViewDefinition)));\n            targetStatements.push(viewFactory);\n            return targetStatements;\n        };\n        /**\n         * @param {?} updateStmts\n         * @return {?}\n         */\n        ViewBuilder.prototype._createUpdateFn = function (updateStmts) {\n            var /** @type {?} */ updateFn;\n            if (updateStmts.length > 0) {\n                var /** @type {?} */ preStmts = [];\n                if (!this.component.isHost && findReadVarNames(updateStmts).has(COMP_VAR.name)) {\n                    preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n                }\n                updateFn = fn([\n                    new FnParam(CHECK_VAR.name, INFERRED_TYPE),\n                    new FnParam(VIEW_VAR.name, INFERRED_TYPE)\n                ], preStmts.concat(updateStmts), INFERRED_TYPE);\n            }\n            else {\n                updateFn = NULL_EXPR;\n            }\n            return updateFn;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        ViewBuilder.prototype.visitNgContent = function (ast, context) {\n            // ngContentDef(ngContentIndex: number, index: number): NodeDef;\n            this.nodes.push(function () { return ({\n                sourceSpan: ast.sourceSpan,\n                nodeDef: importExpr(createIdentifier(Identifiers.ngContentDef)).callFn([\n                    literal(ast.ngContentIndex), literal(ast.index)\n                ])\n            }); });\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        ViewBuilder.prototype.visitText = function (ast, context) {\n            // textDef(ngContentIndex: number, constants: string[]): NodeDef;\n            this.nodes.push(function () { return ({\n                sourceSpan: ast.sourceSpan,\n                nodeDef: importExpr(createIdentifier(Identifiers.textDef)).callFn([\n                    literal(ast.ngContentIndex), literalArr([literal(ast.value)])\n                ])\n            }); });\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        ViewBuilder.prototype.visitBoundText = function (ast, context) {\n            var _this = this;\n            var /** @type {?} */ nodeIndex = this.nodes.length;\n            // reserve the space in the nodeDefs array\n            this.nodes.push(null);\n            var /** @type {?} */ astWithSource = (ast.value);\n            var /** @type {?} */ inter = (astWithSource.ast);\n            var /** @type {?} */ updateRendererExpressions = inter.expressions.map(function (expr) { return _this._preprocessUpdateExpression({ sourceSpan: ast.sourceSpan, context: COMP_VAR, value: expr }); });\n            // textDef(ngContentIndex: number, constants: string[]): NodeDef;\n            this.nodes[nodeIndex] = function () { return ({\n                sourceSpan: ast.sourceSpan,\n                nodeDef: importExpr(createIdentifier(Identifiers.textDef)).callFn([\n                    literal(ast.ngContentIndex), literalArr(inter.strings.map(function (s) { return literal(s); }))\n                ]),\n                updateRenderer: updateRendererExpressions\n            }); };\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        ViewBuilder.prototype.visitEmbeddedTemplate = function (ast, context) {\n            var _this = this;\n            var /** @type {?} */ nodeIndex = this.nodes.length;\n            // reserve the space in the nodeDefs array\n            this.nodes.push(null);\n            var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, queryMatchesExpr = _a.queryMatchesExpr, hostEvents = _a.hostEvents;\n            var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n            this.children.push(childVisitor);\n            childVisitor.visitAll(ast.variables, ast.children);\n            var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n            // anchorDef(\n            //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n            //   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:\n            //   ViewDefinitionFactory): NodeDef;\n            this.nodes[nodeIndex] = function () { return ({\n                sourceSpan: ast.sourceSpan,\n                nodeDef: importExpr(createIdentifier(Identifiers.anchorDef)).callFn([\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    variable(childVisitor.viewName),\n                ])\n            }); };\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        ViewBuilder.prototype.visitElement = function (ast, context) {\n            var _this = this;\n            var /** @type {?} */ nodeIndex = this.nodes.length;\n            // reserve the space in the nodeDefs array so we can add children\n            this.nodes.push(null);\n            var /** @type {?} */ elName = ast.name;\n            if (ast.name === NG_CONTAINER_TAG) {\n                // Using a null element name creates an anchor.\n                elName = null;\n            }\n            var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, usedEvents = _a.usedEvents, queryMatchesExpr = _a.queryMatchesExpr, dirHostBindings = _a.hostBindings, hostEvents = _a.hostEvents;\n            var /** @type {?} */ inputDefs = [];\n            var /** @type {?} */ updateRendererExpressions = [];\n            var /** @type {?} */ outputDefs = [];\n            if (elName) {\n                var /** @type {?} */ hostBindings = ast.inputs\n                    .map(function (inputAst) { return ({\n                    context: /** @type {?} */ (COMP_VAR),\n                    inputAst: inputAst,\n                    dirAst: null,\n                }); })\n                    .concat(dirHostBindings);\n                if (hostBindings.length) {\n                    updateRendererExpressions =\n                        hostBindings.map(function (hostBinding) { return _this._preprocessUpdateExpression({\n                            context: hostBinding.context,\n                            sourceSpan: hostBinding.inputAst.sourceSpan,\n                            value: hostBinding.inputAst.value\n                        }); });\n                    inputDefs = hostBindings.map(function (hostBinding) { return elementBindingDef(hostBinding.inputAst, hostBinding.dirAst); });\n                }\n                outputDefs = usedEvents.map(function (_a) {\n                    var target = _a[0], eventName = _a[1];\n                    return literalArr([literal(target), literal(eventName)]);\n                });\n            }\n            templateVisitAll(this, ast.children);\n            var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n            var /** @type {?} */ compAst = ast.directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n            var /** @type {?} */ compRendererType = NULL_EXPR;\n            var /** @type {?} */ compView = NULL_EXPR;\n            if (compAst) {\n                compView = importExpr({ reference: compAst.directive.componentViewType });\n                compRendererType = importExpr({ reference: compAst.directive.rendererType });\n            }\n            // elementDef(\n            //   flags: NodeFlags, matchedQueriesDsl: [string | number, QueryValueType][],\n            //   ngContentIndex: number, childCount: number, namespaceAndName: string,\n            //   fixedAttrs: [string, string][] = [],\n            //   bindings?:\n            //       ([BindingType.ElementClass, string] | [BindingType.ElementStyle, string, string] |\n            //        [BindingType.ElementAttribute | BindingType.ElementProperty |\n            //        BindingType.DirectiveHostProperty, string, SecurityContext])[],\n            //   outputs?: ([OutputType.ElementOutput | OutputType.DirectiveHostOutput, string, string])[],\n            //   handleEvent?: ElementHandleEventFn,\n            //   componentView?: () => ViewDefinition, componentRendererType?: RendererType2): NodeDef;\n            this.nodes[nodeIndex] = function () { return ({\n                sourceSpan: ast.sourceSpan,\n                nodeDef: importExpr(createIdentifier(Identifiers.elementDef)).callFn([\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    literal(elName),\n                    elName ? fixedAttrsDef(ast) : NULL_EXPR,\n                    inputDefs.length ? literalArr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? literalArr(outputDefs) : NULL_EXPR,\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    compView,\n                    compRendererType,\n                ]),\n                updateRenderer: updateRendererExpressions\n            }); };\n        };\n        /**\n         * @param {?} nodeIndex\n         * @param {?} ast\n         * @return {?}\n         */\n        ViewBuilder.prototype._visitElementOrTemplate = function (nodeIndex, ast) {\n            var _this = this;\n            var /** @type {?} */ flags = 0 /* None */;\n            if (ast.hasViewContainer) {\n                flags |= 8388608 /* EmbeddedViews */;\n            }\n            var /** @type {?} */ usedEvents = new Map();\n            ast.outputs.forEach(function (event) {\n                var _a = elementEventNameAndTarget(event, null), name = _a.name, target = _a.target;\n                usedEvents.set(_angular_core.ɵelementEventFullName(target, name), [target, name]);\n            });\n            ast.directives.forEach(function (dirAst) {\n                dirAst.hostEvents.forEach(function (event) {\n                    var _a = elementEventNameAndTarget(event, dirAst), name = _a.name, target = _a.target;\n                    usedEvents.set(_angular_core.ɵelementEventFullName(target, name), [target, name]);\n                });\n            });\n            var /** @type {?} */ hostBindings = [];\n            var /** @type {?} */ hostEvents = [];\n            var /** @type {?} */ componentFactoryResolverProvider = createComponentFactoryResolver(ast.directives);\n            if (componentFactoryResolverProvider) {\n                this._visitProvider(componentFactoryResolverProvider, ast.queryMatches);\n            }\n            ast.providers.forEach(function (providerAst, providerIndex) {\n                var /** @type {?} */ dirAst;\n                var /** @type {?} */ dirIndex;\n                ast.directives.forEach(function (localDirAst, i) {\n                    if (localDirAst.directive.type.reference === tokenReference(providerAst.token)) {\n                        dirAst = localDirAst;\n                        dirIndex = i;\n                    }\n                });\n                if (dirAst) {\n                    var _a = _this._visitDirective(providerAst, dirAst, dirIndex, nodeIndex, ast.references, ast.queryMatches, usedEvents, _this.staticQueryIds.get(/** @type {?} */ (ast))), dirHostBindings = _a.hostBindings, dirHostEvents = _a.hostEvents;\n                    hostBindings.push.apply(hostBindings, dirHostBindings);\n                    hostEvents.push.apply(hostEvents, dirHostEvents);\n                }\n                else {\n                    _this._visitProvider(providerAst, ast.queryMatches);\n                }\n            });\n            var /** @type {?} */ queryMatchExprs = [];\n            ast.queryMatches.forEach(function (match) {\n                var /** @type {?} */ valueType;\n                if (tokenReference(match.value) === resolveIdentifier(Identifiers.ElementRef)) {\n                    valueType = 0 /* ElementRef */;\n                }\n                else if (tokenReference(match.value) === resolveIdentifier(Identifiers.ViewContainerRef)) {\n                    valueType = 3 /* ViewContainerRef */;\n                }\n                else if (tokenReference(match.value) === resolveIdentifier(Identifiers.TemplateRef)) {\n                    valueType = 2 /* TemplateRef */;\n                }\n                if (valueType != null) {\n                    queryMatchExprs.push(literalArr([literal(match.queryId), literal(valueType)]));\n                }\n            });\n            ast.references.forEach(function (ref) {\n                var /** @type {?} */ valueType;\n                if (!ref.value) {\n                    valueType = 1 /* RenderElement */;\n                }\n                else if (tokenReference(ref.value) === resolveIdentifier(Identifiers.TemplateRef)) {\n                    valueType = 2 /* TemplateRef */;\n                }\n                if (valueType != null) {\n                    _this.refNodeIndices[ref.name] = nodeIndex;\n                    queryMatchExprs.push(literalArr([literal(ref.name), literal(valueType)]));\n                }\n            });\n            ast.outputs.forEach(function (outputAst) {\n                hostEvents.push({ context: COMP_VAR, eventAst: outputAst, dirAst: null });\n            });\n            return {\n                flags: flags,\n                usedEvents: Array.from(usedEvents.values()),\n                queryMatchesExpr: queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n                hostBindings: hostBindings,\n                hostEvents: hostEvents\n            };\n        };\n        /**\n         * @param {?} providerAst\n         * @param {?} dirAst\n         * @param {?} directiveIndex\n         * @param {?} elementNodeIndex\n         * @param {?} refs\n         * @param {?} queryMatches\n         * @param {?} usedEvents\n         * @param {?} queryIds\n         * @return {?}\n         */\n        ViewBuilder.prototype._visitDirective = function (providerAst, dirAst, directiveIndex, elementNodeIndex, refs, queryMatches, usedEvents, queryIds) {\n            var _this = this;\n            var /** @type {?} */ nodeIndex = this.nodes.length;\n            // reserve the space in the nodeDefs array so we can add children\n            this.nodes.push(null);\n            dirAst.directive.queries.forEach(function (query, queryIndex) {\n                var /** @type {?} */ flags = 33554432 /* TypeContentQuery */;\n                var /** @type {?} */ queryId = dirAst.contentQueryStartId + queryIndex;\n                // Note: We only make queries static that query for a single item.\n                // This is because of backwards compatibility with the old view compiler...\n                if (queryIds.staticQueryIds.has(queryId) && query.first) {\n                    flags |= 134217728 /* StaticQuery */;\n                }\n                else {\n                    flags |= 268435456 /* DynamicQuery */;\n                }\n                var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1 /* All */;\n                _this.nodes.push(function () { return ({\n                    sourceSpan: dirAst.sourceSpan,\n                    nodeDef: importExpr(createIdentifier(Identifiers.queryDef)).callFn([\n                        literal(flags), literal(queryId),\n                        new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType))])\n                    ]),\n                }); });\n            });\n            // Note: the operation below might also create new nodeDefs,\n            // but we don't want them to be a child of a directive,\n            // as they might be a provider/pipe on their own.\n            // I.e. we only allow queries as children of directives nodes.\n            var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n            var _a = this._visitProviderOrDirective(providerAst, queryMatches), flags = _a.flags, queryMatchExprs = _a.queryMatchExprs, providerExpr = _a.providerExpr, depsExpr = _a.depsExpr;\n            refs.forEach(function (ref) {\n                if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n                    _this.refNodeIndices[ref.name] = nodeIndex;\n                    queryMatchExprs.push(literalArr([literal(ref.name), literal(4 /* Provider */)]));\n                }\n            });\n            if (dirAst.directive.isComponent) {\n                flags |= 16384 /* Component */;\n            }\n            var /** @type {?} */ inputDefs = dirAst.inputs.map(function (inputAst, inputIndex) {\n                var /** @type {?} */ mapValue = literalArr([literal(inputIndex), literal(inputAst.directiveName)]);\n                // Note: it's important to not quote the key so that we can capture renames by minifiers!\n                return new LiteralMapEntry(inputAst.directiveName, mapValue, false);\n            });\n            var /** @type {?} */ outputDefs = [];\n            var /** @type {?} */ dirMeta = dirAst.directive;\n            Object.keys(dirMeta.outputs).forEach(function (propName) {\n                var /** @type {?} */ eventName = dirMeta.outputs[propName];\n                if (usedEvents.has(eventName)) {\n                    // Note: it's important to not quote the key so that we can capture renames by minifiers!\n                    outputDefs.push(new LiteralMapEntry(propName, literal(eventName), false));\n                }\n            });\n            var /** @type {?} */ updateDirectiveExpressions = [];\n            if (dirAst.inputs.length || (flags & (131072 /* DoCheck */ | 32768 /* OnInit */)) > 0) {\n                updateDirectiveExpressions = dirAst.inputs.map(function (input) { return _this._preprocessUpdateExpression({ sourceSpan: input.sourceSpan, context: COMP_VAR, value: input.value }); });\n            }\n            var /** @type {?} */ dirContextExpr = importExpr(createIdentifier(Identifiers.nodeValue)).callFn([\n                VIEW_VAR, literal(nodeIndex)\n            ]);\n            var /** @type {?} */ hostBindings = dirAst.hostProperties.map(function (inputAst) { return ({\n                context: dirContextExpr,\n                dirAst: dirAst,\n                inputAst: inputAst,\n            }); });\n            var /** @type {?} */ hostEvents = dirAst.hostEvents.map(function (hostEventAst) { return ({\n                context: dirContextExpr,\n                eventAst: hostEventAst, dirAst: dirAst,\n            }); });\n            // directiveDef(\n            //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], childCount: number, ctor:\n            //   any,\n            //   deps: ([DepFlags, any] | any)[], props?: {[name: string]: [number, string]},\n            //   outputs?: {[name: string]: string}, component?: () => ViewDefinition): NodeDef;\n            this.nodes[nodeIndex] = function () { return ({\n                sourceSpan: dirAst.sourceSpan,\n                nodeDef: importExpr(createIdentifier(Identifiers.directiveDef)).callFn([\n                    literal(flags), queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n                    literal(childCount), providerExpr, depsExpr,\n                    inputDefs.length ? new LiteralMapExpr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? new LiteralMapExpr(outputDefs) : NULL_EXPR\n                ]),\n                updateDirectives: updateDirectiveExpressions,\n            }); };\n            return { hostBindings: hostBindings, hostEvents: hostEvents };\n        };\n        /**\n         * @param {?} providerAst\n         * @param {?} queryMatches\n         * @return {?}\n         */\n        ViewBuilder.prototype._visitProvider = function (providerAst, queryMatches) {\n            var /** @type {?} */ nodeIndex = this.nodes.length;\n            // reserve the space in the nodeDefs array so we can add children\n            this.nodes.push(null);\n            var _a = this._visitProviderOrDirective(providerAst, queryMatches), flags = _a.flags, queryMatchExprs = _a.queryMatchExprs, providerExpr = _a.providerExpr, depsExpr = _a.depsExpr;\n            // providerDef(\n            //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,\n            //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n            this.nodes[nodeIndex] = function () { return ({\n                sourceSpan: providerAst.sourceSpan,\n                nodeDef: importExpr(createIdentifier(Identifiers.providerDef)).callFn([\n                    literal(flags), queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n                    tokenExpr(providerAst.token), providerExpr, depsExpr\n                ])\n            }); };\n        };\n        /**\n         * @param {?} providerAst\n         * @param {?} queryMatches\n         * @return {?}\n         */\n        ViewBuilder.prototype._visitProviderOrDirective = function (providerAst, queryMatches) {\n            var /** @type {?} */ flags = 0 /* None */;\n            if (!providerAst.eager) {\n                flags |= 2048 /* LazyProvider */;\n            }\n            if (providerAst.providerType === ProviderAstType.PrivateService) {\n                flags |= 4096 /* PrivateProvider */;\n            }\n            providerAst.lifecycleHooks.forEach(function (lifecycleHook) {\n                // for regular providers, we only support ngOnDestroy\n                if (lifecycleHook === _angular_core.ɵLifecycleHooks.OnDestroy ||\n                    providerAst.providerType === ProviderAstType.Directive ||\n                    providerAst.providerType === ProviderAstType.Component) {\n                    flags |= lifecycleHookToNodeFlag(lifecycleHook);\n                }\n            });\n            var /** @type {?} */ queryMatchExprs = [];\n            queryMatches.forEach(function (match) {\n                if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n                    queryMatchExprs.push(literalArr([literal(match.queryId), literal(4 /* Provider */)]));\n                }\n            });\n            var _a = providerDef(providerAst), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, providerType = _a.flags;\n            return { flags: flags | providerType, queryMatchExprs: queryMatchExprs, providerExpr: providerExpr, depsExpr: depsExpr };\n        };\n        /**\n         * @param {?} name\n         * @return {?}\n         */\n        ViewBuilder.prototype.getLocal = function (name) {\n            if (name == EventHandlerVars.event.name) {\n                return EventHandlerVars.event;\n            }\n            var /** @type {?} */ currViewExpr = VIEW_VAR;\n            for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent, currViewExpr = currViewExpr.prop('parent')) {\n                // check references\n                var /** @type {?} */ refNodeIndex = currBuilder.refNodeIndices[name];\n                if (refNodeIndex != null) {\n                    return importExpr(createIdentifier(Identifiers.nodeValue)).callFn([\n                        currViewExpr, literal(refNodeIndex)\n                    ]);\n                }\n                // check variables\n                var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n                if (varAst) {\n                    var /** @type {?} */ varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n                    return currViewExpr.prop('context').prop(varValue);\n                }\n            }\n            return null;\n        };\n        /**\n         * @param {?} sourceSpan\n         * @param {?} argCount\n         * @return {?}\n         */\n        ViewBuilder.prototype.createLiteralArrayConverter = function (sourceSpan, argCount) {\n            if (argCount === 0) {\n                var /** @type {?} */ valueExpr_1 = importExpr(createIdentifier(Identifiers.EMPTY_ARRAY));\n                return function () { return valueExpr_1; };\n            }\n            var /** @type {?} */ nodeIndex = this.nodes.length;\n            // pureArrayDef(argCount: number): NodeDef;\n            this.nodes.push(function () { return ({\n                sourceSpan: sourceSpan,\n                nodeDef: importExpr(createIdentifier(Identifiers.pureArrayDef)).callFn([literal(argCount)])\n            }); });\n            return function (args) { return callCheckStmt(nodeIndex, args); };\n        };\n        /**\n         * @param {?} sourceSpan\n         * @param {?} keys\n         * @return {?}\n         */\n        ViewBuilder.prototype.createLiteralMapConverter = function (sourceSpan, keys) {\n            if (keys.length === 0) {\n                var /** @type {?} */ valueExpr_2 = importExpr(createIdentifier(Identifiers.EMPTY_MAP));\n                return function () { return valueExpr_2; };\n            }\n            var /** @type {?} */ nodeIndex = this.nodes.length;\n            // function pureObjectDef(propertyNames: string[]): NodeDef\n            this.nodes.push(function () { return ({\n                sourceSpan: sourceSpan,\n                nodeDef: importExpr(createIdentifier(Identifiers.pureObjectDef))\n                    .callFn([literalArr(keys.map(function (key) { return literal(key); }))])\n            }); });\n            return function (args) { return callCheckStmt(nodeIndex, args); };\n        };\n        /**\n         * @param {?} sourceSpan\n         * @param {?} name\n         * @param {?} argCount\n         * @return {?}\n         */\n        ViewBuilder.prototype.createPipeConverter = function (sourceSpan, name, argCount) {\n            var /** @type {?} */ pipe = this.usedPipes.find(function (pipeSummary) { return pipeSummary.name === name; });\n            if (pipe.pure) {\n                var /** @type {?} */ nodeIndex_1 = this.nodes.length;\n                // function purePipeDef(argCount: number): NodeDef;\n                this.nodes.push(function () { return ({\n                    sourceSpan: sourceSpan,\n                    nodeDef: importExpr(createIdentifier(Identifiers.purePipeDef))\n                        .callFn([literal(argCount)])\n                }); });\n                // find underlying pipe in the component view\n                var /** @type {?} */ compViewExpr = VIEW_VAR;\n                var /** @type {?} */ compBuilder = this;\n                while (compBuilder.parent) {\n                    compBuilder = compBuilder.parent;\n                    compViewExpr = compViewExpr.prop('parent');\n                }\n                var /** @type {?} */ pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n                var /** @type {?} */ pipeValueExpr_1 = importExpr(createIdentifier(Identifiers.nodeValue)).callFn([\n                    compViewExpr, literal(pipeNodeIndex)\n                ]);\n                return function (args) { return callUnwrapValue(callCheckStmt(nodeIndex_1, [pipeValueExpr_1].concat(args))); };\n            }\n            else {\n                var /** @type {?} */ nodeIndex = this._createPipe(sourceSpan, pipe);\n                var /** @type {?} */ nodeValueExpr_1 = importExpr(createIdentifier(Identifiers.nodeValue)).callFn([\n                    VIEW_VAR, literal(nodeIndex)\n                ]);\n                return function (args) { return callUnwrapValue(nodeValueExpr_1.callMethod('transform', args)); };\n            }\n        };\n        /**\n         * @param {?} sourceSpan\n         * @param {?} pipe\n         * @return {?}\n         */\n        ViewBuilder.prototype._createPipe = function (sourceSpan, pipe) {\n            var /** @type {?} */ nodeIndex = this.nodes.length;\n            var /** @type {?} */ flags = 0 /* None */;\n            pipe.type.lifecycleHooks.forEach(function (lifecycleHook) {\n                // for pipes, we only support ngOnDestroy\n                if (lifecycleHook === _angular_core.ɵLifecycleHooks.OnDestroy) {\n                    flags |= lifecycleHookToNodeFlag(lifecycleHook);\n                }\n            });\n            var /** @type {?} */ depExprs = pipe.type.diDeps.map(depDef);\n            // function pipeDef(\n            //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n            this.nodes.push(function () { return ({\n                sourceSpan: sourceSpan,\n                nodeDef: importExpr(createIdentifier(Identifiers.pipeDef)).callFn([\n                    literal(flags), importExpr(pipe.type), literalArr(depExprs)\n                ])\n            }); });\n            return nodeIndex;\n        };\n        /**\n         * @param {?} expression\n         * @return {?}\n         */\n        ViewBuilder.prototype._preprocessUpdateExpression = function (expression) {\n            var _this = this;\n            return {\n                sourceSpan: expression.sourceSpan,\n                context: expression.context,\n                value: convertPropertyBindingBuiltins({\n                    createLiteralArrayConverter: function (argCount) { return _this.createLiteralArrayConverter(expression.sourceSpan, argCount); },\n                    createLiteralMapConverter: function (keys) { return _this.createLiteralMapConverter(expression.sourceSpan, keys); },\n                    createPipeConverter: function (name, argCount) { return _this.createPipeConverter(expression.sourceSpan, name, argCount); }\n                }, expression.value)\n            };\n        };\n        /**\n         * @return {?}\n         */\n        ViewBuilder.prototype._createNodeExpressions = function () {\n            var /** @type {?} */ self = this;\n            var /** @type {?} */ updateBindingCount = 0;\n            var /** @type {?} */ updateRendererStmts = [];\n            var /** @type {?} */ updateDirectivesStmts = [];\n            var /** @type {?} */ nodeDefExprs = this.nodes.map(function (factory, nodeIndex) {\n                var _a = factory(), nodeDef = _a.nodeDef, updateDirectives = _a.updateDirectives, updateRenderer = _a.updateRenderer, sourceSpan = _a.sourceSpan;\n                if (updateRenderer) {\n                    updateRendererStmts.push.apply(updateRendererStmts, createUpdateStatements(nodeIndex, sourceSpan, updateRenderer));\n                }\n                if (updateDirectives) {\n                    updateDirectivesStmts.push.apply(updateDirectivesStmts, createUpdateStatements(nodeIndex, sourceSpan, updateDirectives));\n                }\n                // We use a comma expression to call the log function before\n                // the nodeDef function, but still use the result of the nodeDef function\n                // as the value.\n                var /** @type {?} */ logWithNodeDef = new CommaExpr([LOG_VAR.callFn([]).callFn([]), nodeDef]);\n                return applySourceSpanToExpressionIfNeeded(logWithNodeDef, sourceSpan);\n            });\n            return { updateRendererStmts: updateRendererStmts, updateDirectivesStmts: updateDirectivesStmts, nodeDefExprs: nodeDefExprs };\n            /**\n             * @param {?} nodeIndex\n             * @param {?} sourceSpan\n             * @param {?} expressions\n             * @return {?}\n             */\n            function createUpdateStatements(nodeIndex, sourceSpan, expressions) {\n                var /** @type {?} */ updateStmts = [];\n                var /** @type {?} */ exprs = expressions.map(function (_a) {\n                    var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n                    var /** @type {?} */ bindingId = \"\" + updateBindingCount++;\n                    var /** @type {?} */ nameResolver = context === COMP_VAR ? self : null;\n                    var _b = convertPropertyBinding(nameResolver, context, value, bindingId), stmts = _b.stmts, currValExpr = _b.currValExpr;\n                    updateStmts.push.apply(updateStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n                    return applySourceSpanToExpressionIfNeeded(currValExpr, sourceSpan);\n                });\n                updateStmts.push(applySourceSpanToStatementIfNeeded(callCheckStmt(nodeIndex, exprs).toStmt(), sourceSpan));\n                return updateStmts;\n            }\n        };\n        /**\n         * @param {?} nodeIndex\n         * @param {?} handlers\n         * @return {?}\n         */\n        ViewBuilder.prototype._createElementHandleEventFn = function (nodeIndex, handlers) {\n            var _this = this;\n            var /** @type {?} */ handleEventStmts = [];\n            var /** @type {?} */ handleEventBindingCount = 0;\n            handlers.forEach(function (_a) {\n                var context = _a.context, eventAst = _a.eventAst, dirAst = _a.dirAst;\n                var /** @type {?} */ bindingId = \"\" + handleEventBindingCount++;\n                var /** @type {?} */ nameResolver = context === COMP_VAR ? _this : null;\n                var _b = convertActionBinding(nameResolver, context, eventAst.handler, bindingId), stmts = _b.stmts, allowDefault = _b.allowDefault;\n                var /** @type {?} */ trueStmts = stmts;\n                if (allowDefault) {\n                    trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n                }\n                var _c = elementEventNameAndTarget(eventAst, dirAst), eventTarget = _c.target, eventName = _c.name;\n                var /** @type {?} */ fullEventName = _angular_core.ɵelementEventFullName(eventTarget, eventName);\n                handleEventStmts.push(applySourceSpanToStatementIfNeeded(new IfStmt(literal(fullEventName).identical(EVENT_NAME_VAR), trueStmts), eventAst.sourceSpan));\n            });\n            var /** @type {?} */ handleEventFn;\n            if (handleEventStmts.length > 0) {\n                var /** @type {?} */ preStmts = [ALLOW_DEFAULT_VAR.set(literal(true)).toDeclStmt(BOOL_TYPE)];\n                if (!this.component.isHost && findReadVarNames(handleEventStmts).has(COMP_VAR.name)) {\n                    preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n                }\n                handleEventFn = fn([\n                    new FnParam(VIEW_VAR.name, INFERRED_TYPE),\n                    new FnParam(EVENT_NAME_VAR.name, INFERRED_TYPE),\n                    new FnParam(EventHandlerVars.event.name, INFERRED_TYPE)\n                ], preStmts.concat(handleEventStmts, [new ReturnStatement(ALLOW_DEFAULT_VAR)]), INFERRED_TYPE);\n            }\n            else {\n                handleEventFn = NULL_EXPR;\n            }\n            return handleEventFn;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        ViewBuilder.prototype.visitDirective = function (ast, context) { };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        ViewBuilder.prototype.visitDirectiveProperty = function (ast, context) { };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        ViewBuilder.prototype.visitReference = function (ast, context) { };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        ViewBuilder.prototype.visitVariable = function (ast, context) { };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        ViewBuilder.prototype.visitEvent = function (ast, context) { };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        ViewBuilder.prototype.visitElementProperty = function (ast, context) { };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        ViewBuilder.prototype.visitAttr = function (ast, context) { };\n        return ViewBuilder;\n    }());\n    /**\n     * @param {?} providerAst\n     * @return {?}\n     */\n    function providerDef(providerAst) {\n        return providerAst.multiProvider ?\n            multiProviderDef(providerAst.providers) :\n            singleProviderDef(providerAst.providerType, providerAst.providers[0]);\n    }\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    function multiProviderDef(providers) {\n        var /** @type {?} */ allDepDefs = [];\n        var /** @type {?} */ allParams = [];\n        var /** @type {?} */ exprs = providers.map(function (provider, providerIndex) {\n            var /** @type {?} */ expr;\n            if (provider.useClass) {\n                var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useClass.diDeps);\n                expr = importExpr(provider.useClass).instantiate(depExprs);\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useFactory.diDeps);\n                expr = importExpr(provider.useFactory).callFn(depExprs);\n            }\n            else if (provider.useExisting) {\n                var /** @type {?} */ depExprs = convertDeps(providerIndex, [{ token: provider.useExisting }]);\n                expr = depExprs[0];\n            }\n            else {\n                expr = convertValueToOutputAst(provider.useValue);\n            }\n            return expr;\n        });\n        var /** @type {?} */ providerExpr = fn(allParams, [new ReturnStatement(literalArr(exprs))], INFERRED_TYPE);\n        return { providerExpr: providerExpr, flags: 512 /* TypeFactoryProvider */, depsExpr: literalArr(allDepDefs) };\n        /**\n         * @param {?} providerIndex\n         * @param {?} deps\n         * @return {?}\n         */\n        function convertDeps(providerIndex, deps) {\n            return deps.map(function (dep, depIndex) {\n                var /** @type {?} */ paramName = \"p\" + providerIndex + \"_\" + depIndex;\n                allParams.push(new FnParam(paramName, DYNAMIC_TYPE));\n                allDepDefs.push(depDef(dep));\n                return variable(paramName);\n            });\n        }\n    }\n    /**\n     * @param {?} providerType\n     * @param {?} providerMeta\n     * @return {?}\n     */\n    function singleProviderDef(providerType, providerMeta) {\n        var /** @type {?} */ providerExpr;\n        var /** @type {?} */ flags;\n        var /** @type {?} */ deps;\n        if (providerType === ProviderAstType.Directive || providerType === ProviderAstType.Component) {\n            providerExpr = importExpr(providerMeta.useClass);\n            flags = 8192 /* TypeDirective */;\n            deps = providerMeta.deps || providerMeta.useClass.diDeps;\n        }\n        else {\n            if (providerMeta.useClass) {\n                providerExpr = importExpr(providerMeta.useClass);\n                flags = 256 /* TypeClassProvider */;\n                deps = providerMeta.deps || providerMeta.useClass.diDeps;\n            }\n            else if (providerMeta.useFactory) {\n                providerExpr = importExpr(providerMeta.useFactory);\n                flags = 512 /* TypeFactoryProvider */;\n                deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n            }\n            else if (providerMeta.useExisting) {\n                providerExpr = NULL_EXPR;\n                flags = 1024 /* TypeUseExistingProvider */;\n                deps = [{ token: providerMeta.useExisting }];\n            }\n            else {\n                providerExpr = convertValueToOutputAst(providerMeta.useValue);\n                flags = 128 /* TypeValueProvider */;\n                deps = [];\n            }\n        }\n        var /** @type {?} */ depsExpr = literalArr(deps.map(function (dep) { return depDef(dep); }));\n        return { providerExpr: providerExpr, flags: flags, depsExpr: depsExpr };\n    }\n    /**\n     * @param {?} tokenMeta\n     * @return {?}\n     */\n    function tokenExpr(tokenMeta) {\n        return tokenMeta.identifier ? importExpr(tokenMeta.identifier) : literal(tokenMeta.value);\n    }\n    /**\n     * @param {?} dep\n     * @return {?}\n     */\n    function depDef(dep) {\n        // Note: the following fields have already been normalized out by provider_analyzer:\n        // - isAttribute, isSelf, isHost\n        var /** @type {?} */ expr = dep.isValue ? convertValueToOutputAst(dep.value) : tokenExpr(dep.token);\n        var /** @type {?} */ flags = 0 /* None */;\n        if (dep.isSkipSelf) {\n            flags |= 1 /* SkipSelf */;\n        }\n        if (dep.isOptional) {\n            flags |= 2 /* Optional */;\n        }\n        if (dep.isValue) {\n            flags |= 8 /* Value */;\n        }\n        return flags === 0 /* None */ ? expr : literalArr([literal(flags), expr]);\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function needsAdditionalRootNode(ast) {\n        if (ast instanceof EmbeddedTemplateAst) {\n            return ast.hasViewContainer;\n        }\n        if (ast instanceof ElementAst) {\n            if (ast.name === NG_CONTAINER_TAG && ast.children.length) {\n                return needsAdditionalRootNode(ast.children[ast.children.length - 1]);\n            }\n            return ast.hasViewContainer;\n        }\n        return ast instanceof NgContentAst;\n    }\n    /**\n     * @param {?} lifecycleHook\n     * @return {?}\n     */\n    function lifecycleHookToNodeFlag(lifecycleHook) {\n        var /** @type {?} */ nodeFlag = 0 /* None */;\n        switch (lifecycleHook) {\n            case _angular_core.ɵLifecycleHooks.AfterContentChecked:\n                nodeFlag = 1048576 /* AfterContentChecked */;\n                break;\n            case _angular_core.ɵLifecycleHooks.AfterContentInit:\n                nodeFlag = 524288 /* AfterContentInit */;\n                break;\n            case _angular_core.ɵLifecycleHooks.AfterViewChecked:\n                nodeFlag = 4194304 /* AfterViewChecked */;\n                break;\n            case _angular_core.ɵLifecycleHooks.AfterViewInit:\n                nodeFlag = 2097152 /* AfterViewInit */;\n                break;\n            case _angular_core.ɵLifecycleHooks.DoCheck:\n                nodeFlag = 131072 /* DoCheck */;\n                break;\n            case _angular_core.ɵLifecycleHooks.OnChanges:\n                nodeFlag = 262144 /* OnChanges */;\n                break;\n            case _angular_core.ɵLifecycleHooks.OnDestroy:\n                nodeFlag = 65536 /* OnDestroy */;\n                break;\n            case _angular_core.ɵLifecycleHooks.OnInit:\n                nodeFlag = 32768 /* OnInit */;\n                break;\n        }\n        return nodeFlag;\n    }\n    /**\n     * @param {?} inputAst\n     * @param {?} dirAst\n     * @return {?}\n     */\n    function elementBindingDef(inputAst, dirAst) {\n        switch (inputAst.type) {\n            case PropertyBindingType.Attribute:\n                return literalArr([\n                    literal(0 /* ElementAttribute */), literal(inputAst.name),\n                    literal(inputAst.securityContext)\n                ]);\n            case PropertyBindingType.Property:\n                return literalArr([\n                    literal(3 /* ElementProperty */), literal(inputAst.name),\n                    literal(inputAst.securityContext)\n                ]);\n            case PropertyBindingType.Animation:\n                var /** @type {?} */ bindingType = dirAst && dirAst.directive.isComponent ?\n                    4 /* ComponentHostProperty */ :\n                    3 /* ElementProperty */;\n                return literalArr([\n                    literal(bindingType), literal('@' + inputAst.name), literal(inputAst.securityContext)\n                ]);\n            case PropertyBindingType.Class:\n                return literalArr([literal(1 /* ElementClass */), literal(inputAst.name)]);\n            case PropertyBindingType.Style:\n                return literalArr([\n                    literal(2 /* ElementStyle */), literal(inputAst.name), literal(inputAst.unit)\n                ]);\n        }\n    }\n    /**\n     * @param {?} elementAst\n     * @return {?}\n     */\n    function fixedAttrsDef(elementAst) {\n        var /** @type {?} */ mapResult = Object.create(null);\n        elementAst.attrs.forEach(function (attrAst) { mapResult[attrAst.name] = attrAst.value; });\n        elementAst.directives.forEach(function (dirAst) {\n            Object.keys(dirAst.directive.hostAttributes).forEach(function (name) {\n                var /** @type {?} */ value = dirAst.directive.hostAttributes[name];\n                var /** @type {?} */ prevValue = mapResult[name];\n                mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n            });\n        });\n        var /** @type {?} */ mapEntries = [];\n        // Note: We need to sort to get a defined output order\n        // for tests and for caching generated artifacts...\n        return literalArr(Object.keys(mapResult).sort().map(function (attrName) { return literalArr([literal(attrName), literal(mapResult[attrName])]); }));\n    }\n    /**\n     * @param {?} attrName\n     * @param {?} attrValue1\n     * @param {?} attrValue2\n     * @return {?}\n     */\n    function mergeAttributeValue(attrName, attrValue1, attrValue2) {\n        if (attrName == CLASS_ATTR$1 || attrName == STYLE_ATTR) {\n            return attrValue1 + \" \" + attrValue2;\n        }\n        else {\n            return attrValue2;\n        }\n    }\n    /**\n     * @param {?} nodeIndex\n     * @param {?} exprs\n     * @return {?}\n     */\n    function callCheckStmt(nodeIndex, exprs) {\n        if (exprs.length > 10) {\n            return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(1 /* Dynamic */), literalArr(exprs)]);\n        }\n        else {\n            return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(0 /* Inline */)].concat(exprs));\n        }\n    }\n    /**\n     * @param {?} expr\n     * @return {?}\n     */\n    function callUnwrapValue(expr) {\n        return importExpr(createIdentifier(Identifiers.unwrapValue)).callFn([expr]);\n    }\n    /**\n     * @param {?} nodes\n     * @param {?=} result\n     * @return {?}\n     */\n    function findStaticQueryIds(nodes, result) {\n        if (result === void 0) { result = new Map(); }\n        nodes.forEach(function (node) {\n            var /** @type {?} */ staticQueryIds = new Set();\n            var /** @type {?} */ dynamicQueryIds = new Set();\n            var /** @type {?} */ queryMatches;\n            if (node instanceof ElementAst) {\n                findStaticQueryIds(node.children, result);\n                node.children.forEach(function (child) {\n                    var /** @type {?} */ childData = result.get(child);\n                    childData.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n                    childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n                });\n                queryMatches = node.queryMatches;\n            }\n            else if (node instanceof EmbeddedTemplateAst) {\n                findStaticQueryIds(node.children, result);\n                node.children.forEach(function (child) {\n                    var /** @type {?} */ childData = result.get(child);\n                    childData.staticQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n                    childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n                });\n                queryMatches = node.queryMatches;\n            }\n            if (queryMatches) {\n                queryMatches.forEach(function (match) { return staticQueryIds.add(match.queryId); });\n            }\n            dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n            result.set(node, { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds });\n        });\n        return result;\n    }\n    /**\n     * @param {?} nodeStaticQueryIds\n     * @return {?}\n     */\n    function staticViewQueryIds(nodeStaticQueryIds) {\n        var /** @type {?} */ staticQueryIds = new Set();\n        var /** @type {?} */ dynamicQueryIds = new Set();\n        Array.from(nodeStaticQueryIds.values()).forEach(function (entry) {\n            entry.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n            entry.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n        });\n        dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n        return { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds };\n    }\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function createComponentFactoryResolver(directives) {\n        var /** @type {?} */ componentDirMeta = directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        if (componentDirMeta && componentDirMeta.directive.entryComponents.length) {\n            var /** @type {?} */ entryComponentFactories = componentDirMeta.directive.entryComponents.map(function (entryComponent) { return importExpr({ reference: entryComponent.componentFactory }); });\n            var /** @type {?} */ token = createIdentifierToken(Identifiers.ComponentFactoryResolver);\n            var /** @type {?} */ classMeta = {\n                diDeps: [\n                    { isValue: true, value: literalArr(entryComponentFactories) },\n                    { token: token, isSkipSelf: true, isOptional: true },\n                    { token: createIdentifierToken(Identifiers.NgModuleRef) },\n                ],\n                lifecycleHooks: [],\n                reference: resolveIdentifier(Identifiers.CodegenComponentFactoryResolver)\n            };\n            return new ProviderAst(token, false, true, [{ token: token, multi: false, useClass: classMeta }], ProviderAstType.PrivateService, [], componentDirMeta.sourceSpan);\n        }\n        return null;\n    }\n    /**\n     * @param {?} eventAst\n     * @param {?} dirAst\n     * @return {?}\n     */\n    function elementEventNameAndTarget(eventAst, dirAst) {\n        if (eventAst.isAnimation) {\n            return {\n                name: \"@\" + eventAst.name + \".\" + eventAst.phase,\n                target: dirAst && dirAst.directive.isComponent ? 'component' : null\n            };\n        }\n        else {\n            return eventAst;\n        }\n    }\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var GeneratedFile = (function () {\n        /**\n         * @param {?} srcFileUrl\n         * @param {?} genFileUrl\n         * @param {?} source\n         */\n        function GeneratedFile(srcFileUrl, genFileUrl, source) {\n            this.srcFileUrl = srcFileUrl;\n            this.genFileUrl = genFileUrl;\n            this.source = source;\n        }\n        return GeneratedFile;\n    }());\n    /**\n     * @param {?} summaryResolver\n     * @param {?} symbolResolver\n     * @param {?} symbols\n     * @param {?} types\n     * @return {?}\n     */\n    function serializeSummaries(summaryResolver, symbolResolver, symbols, types) {\n        var /** @type {?} */ serializer = new Serializer$1(symbolResolver, summaryResolver);\n        // for symbols, we use everything except for the class metadata itself\n        // (we keep the statics though), as the class metadata is contained in the\n        // CompileTypeSummary.\n        symbols.forEach(function (resolvedSymbol) { return serializer.addOrMergeSummary({ symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata }); });\n        // Add summaries that are referenced by the given symbols (transitively)\n        // Note: the serializer.symbols array might be growing while\n        // we execute the loop!\n        for (var /** @type {?} */ processedIndex = 0; processedIndex < serializer.symbols.length; processedIndex++) {\n            var /** @type {?} */ symbol = serializer.symbols[processedIndex];\n            if (summaryResolver.isLibraryFile(symbol.filePath)) {\n                var /** @type {?} */ summary = summaryResolver.resolveSummary(symbol);\n                if (!summary) {\n                    // some symbols might originate from a plain typescript library\n                    // that just exported .d.ts and .metadata.json files, i.e. where no summary\n                    // files were created.\n                    var /** @type {?} */ resolvedSymbol = symbolResolver.resolveSymbol(symbol);\n                    if (resolvedSymbol) {\n                        summary = { symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata };\n                    }\n                }\n                if (summary) {\n                    serializer.addOrMergeSummary(summary);\n                }\n            }\n        }\n        // Add type summaries.\n        // Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,\n        // as the type summaries already contain the transitive data that they require\n        // (in a minimal way).\n        types.forEach(function (typeSummary) {\n            serializer.addOrMergeSummary({ symbol: typeSummary.type.reference, metadata: { __symbolic: 'class' }, type: typeSummary });\n            if (typeSummary.summaryKind === CompileSummaryKind.NgModule) {\n                var /** @type {?} */ ngModuleSummary = (typeSummary);\n                ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach(function (id) {\n                    var /** @type {?} */ symbol = id.reference;\n                    if (summaryResolver.isLibraryFile(symbol.filePath)) {\n                        var /** @type {?} */ summary = summaryResolver.resolveSummary(symbol);\n                        if (summary) {\n                            serializer.addOrMergeSummary(summary);\n                        }\n                    }\n                });\n            }\n        });\n        return serializer.serialize();\n    }\n    /**\n     * @param {?} symbolCache\n     * @param {?} json\n     * @return {?}\n     */\n    function deserializeSummaries(symbolCache, json) {\n        var /** @type {?} */ deserializer = new Deserializer(symbolCache);\n        return deserializer.deserialize(json);\n    }\n    var Serializer$1 = (function (_super) {\n        __extends(Serializer$1, _super);\n        /**\n         * @param {?} symbolResolver\n         * @param {?} summaryResolver\n         */\n        function Serializer$1(symbolResolver, summaryResolver) {\n            var _this = _super.call(this) || this;\n            _this.symbolResolver = symbolResolver;\n            _this.summaryResolver = summaryResolver;\n            // Note: This only contains symbols without members.\n            _this.symbols = [];\n            _this.indexBySymbol = new Map();\n            _this.processedSummaryBySymbol = new Map();\n            _this.processedSummaries = [];\n            return _this;\n        }\n        /**\n         * @param {?} summary\n         * @return {?}\n         */\n        Serializer$1.prototype.addOrMergeSummary = function (summary) {\n            var /** @type {?} */ symbolMeta = summary.metadata;\n            if (symbolMeta && symbolMeta.__symbolic === 'class') {\n                // For classes, we only keep their statics and arity, but not the metadata\n                // of the class itself as that has been captured already via other summaries\n                // (e.g. DirectiveSummary, ...).\n                symbolMeta = { __symbolic: 'class', statics: symbolMeta.statics, arity: symbolMeta.arity };\n            }\n            var /** @type {?} */ processedSummary = this.processedSummaryBySymbol.get(summary.symbol);\n            if (!processedSummary) {\n                processedSummary = this.processValue({ symbol: summary.symbol });\n                this.processedSummaries.push(processedSummary);\n                this.processedSummaryBySymbol.set(summary.symbol, processedSummary);\n            }\n            // Note: == on purpose to compare with undefined!\n            if (processedSummary.metadata == null && symbolMeta != null) {\n                processedSummary.metadata = this.processValue(symbolMeta);\n            }\n            // Note: == on purpose to compare with undefined!\n            if (processedSummary.type == null && summary.type != null) {\n                processedSummary.type = this.processValue(summary.type);\n            }\n        };\n        /**\n         * @return {?}\n         */\n        Serializer$1.prototype.serialize = function () {\n            var _this = this;\n            var /** @type {?} */ exportAs = [];\n            var /** @type {?} */ json = JSON.stringify({\n                summaries: this.processedSummaries,\n                symbols: this.symbols.map(function (symbol, index) {\n                    symbol.assertNoMembers();\n                    var /** @type {?} */ importAs;\n                    if (_this.summaryResolver.isLibraryFile(symbol.filePath)) {\n                        importAs = symbol.name + \"_\" + index;\n                        exportAs.push({ symbol: symbol, exportAs: importAs });\n                    }\n                    return {\n                        __symbol: index,\n                        name: symbol.name,\n                        // We convert the source filenames tinto output filenames,\n                        // as the generated summary file will be used when teh current\n                        // compilation unit is used as a library\n                        filePath: _this.summaryResolver.getLibraryFileName(symbol.filePath),\n                        importAs: importAs\n                    };\n                })\n            });\n            return { json: json, exportAs: exportAs };\n        };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        Serializer$1.prototype.processValue = function (value) { return visitValue(value, this, null); };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        Serializer$1.prototype.visitOther = function (value, context) {\n            if (value instanceof StaticSymbol) {\n                var /** @type {?} */ baseSymbol = this.symbolResolver.getStaticSymbol(value.filePath, value.name);\n                var /** @type {?} */ index = this.indexBySymbol.get(baseSymbol);\n                // Note: == on purpose to compare with undefined!\n                if (index == null) {\n                    index = this.indexBySymbol.size;\n                    this.indexBySymbol.set(baseSymbol, index);\n                    this.symbols.push(baseSymbol);\n                }\n                return { __symbol: index, members: value.members };\n            }\n        };\n        return Serializer$1;\n    }(ValueTransformer));\n    var Deserializer = (function (_super) {\n        __extends(Deserializer, _super);\n        /**\n         * @param {?} symbolCache\n         */\n        function Deserializer(symbolCache) {\n            var _this = _super.call(this) || this;\n            _this.symbolCache = symbolCache;\n            return _this;\n        }\n        /**\n         * @param {?} json\n         * @return {?}\n         */\n        Deserializer.prototype.deserialize = function (json) {\n            var _this = this;\n            var /** @type {?} */ data = JSON.parse(json);\n            var /** @type {?} */ importAs = [];\n            this.symbols = [];\n            data.symbols.forEach(function (serializedSymbol) {\n                var /** @type {?} */ symbol = _this.symbolCache.get(serializedSymbol.filePath, serializedSymbol.name);\n                _this.symbols.push(symbol);\n                if (serializedSymbol.importAs) {\n                    importAs.push({ symbol: symbol, importAs: serializedSymbol.importAs });\n                }\n            });\n            var /** @type {?} */ summaries = visitValue(data.summaries, this, null);\n            return { summaries: summaries, importAs: importAs };\n        };\n        /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        Deserializer.prototype.visitStringMap = function (map, context) {\n            if ('__symbol' in map) {\n                var /** @type {?} */ baseSymbol = this.symbols[map['__symbol']];\n                var /** @type {?} */ members = map['members'];\n                return members.length ? this.symbolCache.get(baseSymbol.filePath, baseSymbol.name, members) :\n                    baseSymbol;\n            }\n            else {\n                return _super.prototype.visitStringMap.call(this, map, context);\n            }\n        };\n        return Deserializer;\n    }(ValueTransformer));\n    var AotCompiler = (function () {\n        /**\n         * @param {?} _config\n         * @param {?} _host\n         * @param {?} _metadataResolver\n         * @param {?} _templateParser\n         * @param {?} _styleCompiler\n         * @param {?} _viewCompiler\n         * @param {?} _ngModuleCompiler\n         * @param {?} _outputEmitter\n         * @param {?} _summaryResolver\n         * @param {?} _localeId\n         * @param {?} _translationFormat\n         * @param {?} _genFilePreamble\n         * @param {?} _symbolResolver\n         */\n        function AotCompiler(_config, _host, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _outputEmitter, _summaryResolver, _localeId, _translationFormat, _genFilePreamble, _symbolResolver) {\n            this._config = _config;\n            this._host = _host;\n            this._metadataResolver = _metadataResolver;\n            this._templateParser = _templateParser;\n            this._styleCompiler = _styleCompiler;\n            this._viewCompiler = _viewCompiler;\n            this._ngModuleCompiler = _ngModuleCompiler;\n            this._outputEmitter = _outputEmitter;\n            this._summaryResolver = _summaryResolver;\n            this._localeId = _localeId;\n            this._translationFormat = _translationFormat;\n            this._genFilePreamble = _genFilePreamble;\n            this._symbolResolver = _symbolResolver;\n        }\n        /**\n         * @return {?}\n         */\n        AotCompiler.prototype.clearCache = function () { this._metadataResolver.clearCache(); };\n        /**\n         * @param {?} rootFiles\n         * @return {?}\n         */\n        AotCompiler.prototype.compileAll = function (rootFiles) {\n            var _this = this;\n            var /** @type {?} */ programSymbols = extractProgramSymbols(this._symbolResolver, rootFiles, this._host);\n            var _a = analyzeAndValidateNgModules(programSymbols, this._host, this._metadataResolver), ngModuleByPipeOrDirective = _a.ngModuleByPipeOrDirective, files = _a.files, ngModules = _a.ngModules;\n            return Promise\n                .all(ngModules.map(function (ngModule) { return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false); }))\n                .then(function () {\n                var /** @type {?} */ sourceModules = files.map(function (file) { return _this._compileSrcFile(file.srcUrl, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables); });\n                return flatten(sourceModules);\n            });\n        };\n        /**\n         * @param {?} srcFileUrl\n         * @param {?} ngModuleByPipeOrDirective\n         * @param {?} directives\n         * @param {?} pipes\n         * @param {?} ngModules\n         * @param {?} injectables\n         * @return {?}\n         */\n        AotCompiler.prototype._compileSrcFile = function (srcFileUrl, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n            var _this = this;\n            var /** @type {?} */ fileSuffix = splitTypescriptSuffix(srcFileUrl)[1];\n            var /** @type {?} */ statements = [];\n            var /** @type {?} */ exportedVars = [];\n            var /** @type {?} */ generatedFiles = [];\n            generatedFiles.push(this._createSummary(srcFileUrl, directives, pipes, ngModules, injectables, statements, exportedVars));\n            // compile all ng modules\n            exportedVars.push.apply(exportedVars, ngModules.map(function (ngModuleType) { return _this._compileModule(ngModuleType, statements); }));\n            // compile components\n            directives.forEach(function (dirType) {\n                var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(/** @type {?} */ (dirType));\n                if (!compMeta.isComponent) {\n                    return Promise.resolve(null);\n                }\n                var /** @type {?} */ ngModule = ngModuleByPipeOrDirective.get(dirType);\n                if (!ngModule) {\n                    throw new Error(\"Internal Error: cannot determine the module for component \" + identifierName(compMeta.type) + \"!\");\n                }\n                _assertComponent(compMeta);\n                // compile styles\n                var /** @type {?} */ stylesCompileResults = _this._styleCompiler.compileComponent(compMeta);\n                stylesCompileResults.externalStylesheets.forEach(function (compiledStyleSheet) {\n                    generatedFiles.push(_this._codgenStyles(srcFileUrl, compiledStyleSheet, fileSuffix));\n                });\n                // compile components\n                var /** @type {?} */ compViewVars = _this._compileComponent(compMeta, ngModule, ngModule.transitiveModule.directives, stylesCompileResults.componentStylesheet, fileSuffix, statements);\n                exportedVars.push(_this._compileComponentFactory(compMeta, ngModule, fileSuffix, statements), compViewVars.viewClassVar, compViewVars.compRenderTypeVar);\n            });\n            if (statements.length > 0) {\n                var /** @type {?} */ srcModule = this._codegenSourceModule(srcFileUrl, ngfactoryFilePath(srcFileUrl), statements, exportedVars);\n                generatedFiles.unshift(srcModule);\n            }\n            return generatedFiles;\n        };\n        /**\n         * @param {?} srcFileUrl\n         * @param {?} directives\n         * @param {?} pipes\n         * @param {?} ngModules\n         * @param {?} injectables\n         * @param {?} targetStatements\n         * @param {?} targetExportedVars\n         * @return {?}\n         */\n        AotCompiler.prototype._createSummary = function (srcFileUrl, directives, pipes, ngModules, injectables, targetStatements, targetExportedVars) {\n            var _this = this;\n            var /** @type {?} */ symbolSummaries = this._symbolResolver.getSymbolsOf(srcFileUrl)\n                .map(function (symbol) { return _this._symbolResolver.resolveSymbol(symbol); });\n            var /** @type {?} */ typeSummaries = ngModules.map(function (ref) { return _this._metadataResolver.getNgModuleSummary(ref); }).concat(directives.map(function (ref) { return _this._metadataResolver.getDirectiveSummary(ref); }), pipes.map(function (ref) { return _this._metadataResolver.getPipeSummary(ref); }), injectables.map(function (ref) { return _this._metadataResolver.getInjectableSummary(ref); }));\n            var _a = serializeSummaries(this._summaryResolver, this._symbolResolver, symbolSummaries, typeSummaries), json = _a.json, exportAs = _a.exportAs;\n            exportAs.forEach(function (entry) {\n                targetStatements.push(variable(entry.exportAs).set(importExpr({ reference: entry.symbol })).toDeclStmt());\n                targetExportedVars.push(entry.exportAs);\n            });\n            return new GeneratedFile(srcFileUrl, summaryFileName(srcFileUrl), json);\n        };\n        /**\n         * @param {?} ngModuleType\n         * @param {?} targetStatements\n         * @return {?}\n         */\n        AotCompiler.prototype._compileModule = function (ngModuleType, targetStatements) {\n            var /** @type {?} */ ngModule = this._metadataResolver.getNgModuleMetadata(ngModuleType);\n            var /** @type {?} */ providers = [];\n            if (this._localeId) {\n                providers.push({\n                    token: createIdentifierToken(Identifiers.LOCALE_ID),\n                    useValue: this._localeId,\n                });\n            }\n            if (this._translationFormat) {\n                providers.push({\n                    token: createIdentifierToken(Identifiers.TRANSLATIONS_FORMAT),\n                    useValue: this._translationFormat\n                });\n            }\n            var /** @type {?} */ appCompileResult = this._ngModuleCompiler.compile(ngModule, providers);\n            targetStatements.push.apply(targetStatements, appCompileResult.statements);\n            return appCompileResult.ngModuleFactoryVar;\n        };\n        /**\n         * @param {?} compMeta\n         * @param {?} ngModule\n         * @param {?} fileSuffix\n         * @param {?} targetStatements\n         * @return {?}\n         */\n        AotCompiler.prototype._compileComponentFactory = function (compMeta, ngModule, fileSuffix, targetStatements) {\n            var /** @type {?} */ hostType = this._metadataResolver.getHostComponentType(compMeta.type.reference);\n            var /** @type {?} */ hostMeta = createHostComponentMeta(hostType, compMeta, this._metadataResolver.getHostComponentViewClass(hostType));\n            var /** @type {?} */ hostViewFactoryVar = this._compileComponent(hostMeta, ngModule, [compMeta.type], null, fileSuffix, targetStatements)\n                .viewClassVar;\n            var /** @type {?} */ compFactoryVar = componentFactoryName(compMeta.type.reference);\n            targetStatements.push(variable(compFactoryVar)\n                .set(importExpr(createIdentifier(Identifiers.createComponentFactory)).callFn([\n                literal(compMeta.selector),\n                importExpr(compMeta.type),\n                variable(hostViewFactoryVar),\n            ]))\n                .toDeclStmt(importType(createIdentifier(Identifiers.ComponentFactory), [importType(compMeta.type)], [TypeModifier.Const]), [StmtModifier.Final]));\n            return compFactoryVar;\n        };\n        /**\n         * @param {?} compMeta\n         * @param {?} ngModule\n         * @param {?} directiveIdentifiers\n         * @param {?} componentStyles\n         * @param {?} fileSuffix\n         * @param {?} targetStatements\n         * @return {?}\n         */\n        AotCompiler.prototype._compileComponent = function (compMeta, ngModule, directiveIdentifiers, componentStyles, fileSuffix, targetStatements) {\n            var _this = this;\n            var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n            var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n            var _a = this._templateParser.parse(compMeta, compMeta.template.template, directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, compMeta.template)), parsedTemplate = _a.template, usedPipes = _a.pipes;\n            var /** @type {?} */ stylesExpr = componentStyles ? variable(componentStyles.stylesVar) : literalArr([]);\n            var /** @type {?} */ viewResult = this._viewCompiler.compileComponent(compMeta, parsedTemplate, stylesExpr, usedPipes);\n            if (componentStyles) {\n                targetStatements.push.apply(targetStatements, _resolveStyleStatements(this._symbolResolver, componentStyles, fileSuffix));\n            }\n            targetStatements.push.apply(targetStatements, viewResult.statements);\n            return { viewClassVar: viewResult.viewClassVar, compRenderTypeVar: viewResult.rendererTypeVar };\n        };\n        /**\n         * @param {?} fileUrl\n         * @param {?} stylesCompileResult\n         * @param {?} fileSuffix\n         * @return {?}\n         */\n        AotCompiler.prototype._codgenStyles = function (fileUrl, stylesCompileResult, fileSuffix) {\n            _resolveStyleStatements(this._symbolResolver, stylesCompileResult, fileSuffix);\n            return this._codegenSourceModule(fileUrl, _stylesModuleUrl(stylesCompileResult.meta.moduleUrl, stylesCompileResult.isShimmed, fileSuffix), stylesCompileResult.statements, [stylesCompileResult.stylesVar]);\n        };\n        /**\n         * @param {?} srcFileUrl\n         * @param {?} genFileUrl\n         * @param {?} statements\n         * @param {?} exportedVars\n         * @return {?}\n         */\n        AotCompiler.prototype._codegenSourceModule = function (srcFileUrl, genFileUrl, statements, exportedVars) {\n            return new GeneratedFile(srcFileUrl, genFileUrl, this._outputEmitter.emitStatements(srcFileUrl, genFileUrl, statements, exportedVars, this._genFilePreamble));\n        };\n        return AotCompiler;\n    }());\n    /**\n     * @param {?} reflector\n     * @param {?} compileResult\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function _resolveStyleStatements(reflector, compileResult, fileSuffix) {\n        compileResult.dependencies.forEach(function (dep) {\n            dep.valuePlaceholder.reference = reflector.getStaticSymbol(_stylesModuleUrl(dep.moduleUrl, dep.isShimmed, fileSuffix), dep.name);\n        });\n        return compileResult.statements;\n    }\n    /**\n     * @param {?} stylesheetUrl\n     * @param {?} shim\n     * @param {?} suffix\n     * @return {?}\n     */\n    function _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n        return \"\" + stylesheetUrl + (shim ? '.shim' : '') + \".ngstyle\" + suffix;\n    }\n    /**\n     * @param {?} meta\n     * @return {?}\n     */\n    function _assertComponent(meta) {\n        if (!meta.isComponent) {\n            throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n        }\n    }\n    /**\n     * @param {?} programStaticSymbols\n     * @param {?} host\n     * @param {?} metadataResolver\n     * @return {?}\n     */\n    function analyzeNgModules(programStaticSymbols, host, metadataResolver) {\n        var _a = _createNgModules(programStaticSymbols, host, metadataResolver), ngModules = _a.ngModules, symbolsMissingModule = _a.symbolsMissingModule;\n        return _analyzeNgModules(programStaticSymbols, ngModules, symbolsMissingModule, metadataResolver);\n    }\n    /**\n     * @param {?} programStaticSymbols\n     * @param {?} host\n     * @param {?} metadataResolver\n     * @return {?}\n     */\n    function analyzeAndValidateNgModules(programStaticSymbols, host, metadataResolver) {\n        var /** @type {?} */ result = analyzeNgModules(programStaticSymbols, host, metadataResolver);\n        if (result.symbolsMissingModule && result.symbolsMissingModule.length) {\n            var /** @type {?} */ messages = result.symbolsMissingModule.map(function (s) { return \"Cannot determine the module for class \" + s.name + \" in \" + s.filePath + \"! Add \" + s.name + \" to the NgModule to fix it.\"; });\n            throw syntaxError(messages.join('\\n'));\n        }\n        return result;\n    }\n    /**\n     * @param {?} programSymbols\n     * @param {?} ngModuleMetas\n     * @param {?} symbolsMissingModule\n     * @param {?} metadataResolver\n     * @return {?}\n     */\n    function _analyzeNgModules(programSymbols, ngModuleMetas, symbolsMissingModule, metadataResolver) {\n        var /** @type {?} */ moduleMetasByRef = new Map();\n        ngModuleMetas.forEach(function (ngModule) { return moduleMetasByRef.set(ngModule.type.reference, ngModule); });\n        var /** @type {?} */ ngModuleByPipeOrDirective = new Map();\n        var /** @type {?} */ ngModulesByFile = new Map();\n        var /** @type {?} */ ngDirectivesByFile = new Map();\n        var /** @type {?} */ ngPipesByFile = new Map();\n        var /** @type {?} */ ngInjectablesByFile = new Map();\n        var /** @type {?} */ filePaths = new Set();\n        // Make sure we produce an analyzed file for each input file\n        programSymbols.forEach(function (symbol) {\n            var /** @type {?} */ filePath = symbol.filePath;\n            filePaths.add(filePath);\n            if (metadataResolver.isInjectable(symbol)) {\n                ngInjectablesByFile.set(filePath, (ngInjectablesByFile.get(filePath) || []).concat(symbol));\n            }\n        });\n        // Looping over all modules to construct:\n        // - a map from file to modules `ngModulesByFile`,\n        // - a map from file to directives `ngDirectivesByFile`,\n        // - a map from file to pipes `ngPipesByFile`,\n        // - a map from directive/pipe to module `ngModuleByPipeOrDirective`.\n        ngModuleMetas.forEach(function (ngModuleMeta) {\n            var /** @type {?} */ srcFileUrl = ngModuleMeta.type.reference.filePath;\n            filePaths.add(srcFileUrl);\n            ngModulesByFile.set(srcFileUrl, (ngModulesByFile.get(srcFileUrl) || []).concat(ngModuleMeta.type.reference));\n            ngModuleMeta.declaredDirectives.forEach(function (dirIdentifier) {\n                var /** @type {?} */ fileUrl = dirIdentifier.reference.filePath;\n                filePaths.add(fileUrl);\n                ngDirectivesByFile.set(fileUrl, (ngDirectivesByFile.get(fileUrl) || []).concat(dirIdentifier.reference));\n                ngModuleByPipeOrDirective.set(dirIdentifier.reference, ngModuleMeta);\n            });\n            ngModuleMeta.declaredPipes.forEach(function (pipeIdentifier) {\n                var /** @type {?} */ fileUrl = pipeIdentifier.reference.filePath;\n                filePaths.add(fileUrl);\n                ngPipesByFile.set(fileUrl, (ngPipesByFile.get(fileUrl) || []).concat(pipeIdentifier.reference));\n                ngModuleByPipeOrDirective.set(pipeIdentifier.reference, ngModuleMeta);\n            });\n        });\n        var /** @type {?} */ files = [];\n        filePaths.forEach(function (srcUrl) {\n            var /** @type {?} */ directives = ngDirectivesByFile.get(srcUrl) || [];\n            var /** @type {?} */ pipes = ngPipesByFile.get(srcUrl) || [];\n            var /** @type {?} */ ngModules = ngModulesByFile.get(srcUrl) || [];\n            var /** @type {?} */ injectables = ngInjectablesByFile.get(srcUrl) || [];\n            files.push({ srcUrl: srcUrl, directives: directives, pipes: pipes, ngModules: ngModules, injectables: injectables });\n        });\n        return {\n            // map directive/pipe to module\n            ngModuleByPipeOrDirective: ngModuleByPipeOrDirective,\n            // list modules and directives for every source file\n            files: files,\n            ngModules: ngModuleMetas, symbolsMissingModule: symbolsMissingModule\n        };\n    }\n    /**\n     * @param {?} staticSymbolResolver\n     * @param {?} files\n     * @param {?} host\n     * @return {?}\n     */\n    function extractProgramSymbols(staticSymbolResolver, files, host) {\n        var /** @type {?} */ staticSymbols = [];\n        files.filter(function (fileName) { return host.isSourceFile(fileName); }).forEach(function (sourceFile) {\n            staticSymbolResolver.getSymbolsOf(sourceFile).forEach(function (symbol) {\n                var /** @type {?} */ resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n                var /** @type {?} */ symbolMeta = resolvedSymbol.metadata;\n                if (symbolMeta) {\n                    if (symbolMeta.__symbolic != 'error') {\n                        // Ignore symbols that are only included to record error information.\n                        staticSymbols.push(resolvedSymbol.symbol);\n                    }\n                }\n            });\n        });\n        return staticSymbols;\n    }\n    /**\n     * @param {?} programStaticSymbols\n     * @param {?} host\n     * @param {?} metadataResolver\n     * @return {?}\n     */\n    function _createNgModules(programStaticSymbols, host, metadataResolver) {\n        var /** @type {?} */ ngModules = new Map();\n        var /** @type {?} */ programPipesAndDirectives = [];\n        var /** @type {?} */ ngModulePipesAndDirective = new Set();\n        var /** @type {?} */ addNgModule = function (staticSymbol) {\n            if (ngModules.has(staticSymbol) || !host.isSourceFile(staticSymbol.filePath)) {\n                return false;\n            }\n            var /** @type {?} */ ngModule = metadataResolver.getNgModuleMetadata(staticSymbol, false);\n            if (ngModule) {\n                ngModules.set(ngModule.type.reference, ngModule);\n                ngModule.declaredDirectives.forEach(function (dir) { return ngModulePipesAndDirective.add(dir.reference); });\n                ngModule.declaredPipes.forEach(function (pipe) { return ngModulePipesAndDirective.add(pipe.reference); });\n                // For every input module add the list of transitively included modules\n                ngModule.transitiveModule.modules.forEach(function (modMeta) { return addNgModule(modMeta.reference); });\n            }\n            return !!ngModule;\n        };\n        programStaticSymbols.forEach(function (staticSymbol) {\n            if (!addNgModule(staticSymbol) &&\n                (metadataResolver.isDirective(staticSymbol) || metadataResolver.isPipe(staticSymbol))) {\n                programPipesAndDirectives.push(staticSymbol);\n            }\n        });\n        // Throw an error if any of the program pipe or directives is not declared by a module\n        var /** @type {?} */ symbolsMissingModule = programPipesAndDirectives.filter(function (s) { return !ngModulePipesAndDirective.has(s); });\n        return { ngModules: Array.from(ngModules.values()), symbolsMissingModule: symbolsMissingModule };\n    }\n    var StaticAndDynamicReflectionCapabilities = (function () {\n        /**\n         * @param {?} staticDelegate\n         */\n        function StaticAndDynamicReflectionCapabilities(staticDelegate) {\n            this.staticDelegate = staticDelegate;\n            this.dynamicDelegate = new _angular_core.ɵReflectionCapabilities();\n        }\n        /**\n         * @param {?} staticDelegate\n         * @return {?}\n         */\n        StaticAndDynamicReflectionCapabilities.install = function (staticDelegate) {\n            _angular_core.ɵreflector.updateCapabilities(new StaticAndDynamicReflectionCapabilities(staticDelegate));\n        };\n        /**\n         * @return {?}\n         */\n        StaticAndDynamicReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        /**\n         * @param {?} type\n         * @return {?}\n         */\n        StaticAndDynamicReflectionCapabilities.prototype.factory = function (type) { return this.dynamicDelegate.factory(type); };\n        /**\n         * @param {?} type\n         * @param {?} lcProperty\n         * @return {?}\n         */\n        StaticAndDynamicReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return isStaticType(type) ? this.staticDelegate.hasLifecycleHook(type, lcProperty) :\n                this.dynamicDelegate.hasLifecycleHook(type, lcProperty);\n        };\n        /**\n         * @param {?} type\n         * @return {?}\n         */\n        StaticAndDynamicReflectionCapabilities.prototype.parameters = function (type) {\n            return isStaticType(type) ? this.staticDelegate.parameters(type) :\n                this.dynamicDelegate.parameters(type);\n        };\n        /**\n         * @param {?} type\n         * @return {?}\n         */\n        StaticAndDynamicReflectionCapabilities.prototype.annotations = function (type) {\n            return isStaticType(type) ? this.staticDelegate.annotations(type) :\n                this.dynamicDelegate.annotations(type);\n        };\n        /**\n         * @param {?} typeOrFunc\n         * @return {?}\n         */\n        StaticAndDynamicReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            return isStaticType(typeOrFunc) ? this.staticDelegate.propMetadata(typeOrFunc) :\n                this.dynamicDelegate.propMetadata(typeOrFunc);\n        };\n        /**\n         * @param {?} name\n         * @return {?}\n         */\n        StaticAndDynamicReflectionCapabilities.prototype.getter = function (name) { return this.dynamicDelegate.getter(name); };\n        /**\n         * @param {?} name\n         * @return {?}\n         */\n        StaticAndDynamicReflectionCapabilities.prototype.setter = function (name) { return this.dynamicDelegate.setter(name); };\n        /**\n         * @param {?} name\n         * @return {?}\n         */\n        StaticAndDynamicReflectionCapabilities.prototype.method = function (name) { return this.dynamicDelegate.method(name); };\n        /**\n         * @param {?} type\n         * @return {?}\n         */\n        StaticAndDynamicReflectionCapabilities.prototype.importUri = function (type) { return this.staticDelegate.importUri(type); };\n        /**\n         * @param {?} name\n         * @param {?} moduleUrl\n         * @param {?} members\n         * @param {?} runtime\n         * @return {?}\n         */\n        StaticAndDynamicReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.staticDelegate.resolveIdentifier(name, moduleUrl, members);\n        };\n        /**\n         * @param {?} enumIdentifier\n         * @param {?} name\n         * @return {?}\n         */\n        StaticAndDynamicReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) {\n            if (isStaticType(enumIdentifier)) {\n                return this.staticDelegate.resolveEnum(enumIdentifier, name);\n            }\n            else {\n                return null;\n            }\n        };\n        return StaticAndDynamicReflectionCapabilities;\n    }());\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    function isStaticType(type) {\n        return typeof type === 'object' && type.name && type.filePath;\n    }\n    var /** @type {?} */ ANGULAR_CORE = '@angular/core';\n    var /** @type {?} */ HIDDEN_KEY = /^\\$.*\\$$/;\n    var /** @type {?} */ IGNORE = {\n        __symbolic: 'ignore'\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    function shouldIgnore(value) {\n        return value && value.__symbolic == 'ignore';\n    }\n    /**\n     * A static reflector implements enough of the Reflector API that is necessary to compile\n     * templates statically.\n     */\n    var StaticReflector = (function () {\n        /**\n         * @param {?} symbolResolver\n         * @param {?=} knownMetadataClasses\n         * @param {?=} knownMetadataFunctions\n         * @param {?=} errorRecorder\n         */\n        function StaticReflector(symbolResolver, knownMetadataClasses, knownMetadataFunctions, errorRecorder) {\n            if (knownMetadataClasses === void 0) { knownMetadataClasses = []; }\n            if (knownMetadataFunctions === void 0) { knownMetadataFunctions = []; }\n            var _this = this;\n            this.symbolResolver = symbolResolver;\n            this.errorRecorder = errorRecorder;\n            this.annotationCache = new Map();\n            this.propertyCache = new Map();\n            this.parameterCache = new Map();\n            this.methodCache = new Map();\n            this.conversionMap = new Map();\n            this.initializeConversionMap();\n            knownMetadataClasses.forEach(function (kc) { return _this._registerDecoratorOrConstructor(_this.getStaticSymbol(kc.filePath, kc.name), kc.ctor); });\n            knownMetadataFunctions.forEach(function (kf) { return _this._registerFunction(_this.getStaticSymbol(kf.filePath, kf.name), kf.fn); });\n        }\n        /**\n         * @param {?} typeOrFunc\n         * @return {?}\n         */\n        StaticReflector.prototype.importUri = function (typeOrFunc) {\n            var /** @type {?} */ staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n            return staticSymbol ? staticSymbol.filePath : null;\n        };\n        /**\n         * @param {?} name\n         * @param {?} moduleUrl\n         * @param {?} members\n         * @return {?}\n         */\n        StaticReflector.prototype.resolveIdentifier = function (name, moduleUrl, members) {\n            var /** @type {?} */ importSymbol = this.getStaticSymbol(moduleUrl, name);\n            var /** @type {?} */ rootSymbol = this.findDeclaration(moduleUrl, name);\n            if (importSymbol != rootSymbol) {\n                this.symbolResolver.recordImportAs(rootSymbol, importSymbol);\n            }\n            if (members && members.length) {\n                return this.getStaticSymbol(rootSymbol.filePath, rootSymbol.name, members);\n            }\n            return rootSymbol;\n        };\n        /**\n         * @param {?} moduleUrl\n         * @param {?} name\n         * @param {?=} containingFile\n         * @return {?}\n         */\n        StaticReflector.prototype.findDeclaration = function (moduleUrl, name, containingFile) {\n            return this.findSymbolDeclaration(this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n        };\n        /**\n         * @param {?} symbol\n         * @return {?}\n         */\n        StaticReflector.prototype.findSymbolDeclaration = function (symbol) {\n            var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n            if (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n                return this.findSymbolDeclaration(resolvedSymbol.metadata);\n            }\n            else {\n                return symbol;\n            }\n        };\n        /**\n         * @param {?} enumIdentifier\n         * @param {?} name\n         * @return {?}\n         */\n        StaticReflector.prototype.resolveEnum = function (enumIdentifier, name) {\n            var /** @type {?} */ staticSymbol = enumIdentifier;\n            var /** @type {?} */ members = (staticSymbol.members || []).concat(name);\n            return this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name, members);\n        };\n        /**\n         * @param {?} type\n         * @return {?}\n         */\n        StaticReflector.prototype.annotations = function (type) {\n            var /** @type {?} */ annotations = this.annotationCache.get(type);\n            if (!annotations) {\n                annotations = [];\n                var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n                if (classMetadata['extends']) {\n                    var /** @type {?} */ parentType = this.trySimplify(type, classMetadata['extends']);\n                    if (parentType && (parentType instanceof StaticSymbol)) {\n                        var /** @type {?} */ parentAnnotations = this.annotations(parentType);\n                        annotations.push.apply(annotations, parentAnnotations);\n                    }\n                }\n                if (classMetadata['decorators']) {\n                    var /** @type {?} */ ownAnnotations = this.simplify(type, classMetadata['decorators']);\n                    annotations.push.apply(annotations, ownAnnotations);\n                }\n                this.annotationCache.set(type, annotations.filter(function (ann) { return !!ann; }));\n            }\n            return annotations;\n        };\n        /**\n         * @param {?} type\n         * @return {?}\n         */\n        StaticReflector.prototype.propMetadata = function (type) {\n            var _this = this;\n            var /** @type {?} */ propMetadata = this.propertyCache.get(type);\n            if (!propMetadata) {\n                var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n                propMetadata = {};\n                if (classMetadata['extends']) {\n                    var /** @type {?} */ parentType = this.simplify(type, classMetadata['extends']);\n                    if (parentType instanceof StaticSymbol) {\n                        var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentType);\n                        Object.keys(parentPropMetadata_1).forEach(function (parentProp) {\n                            propMetadata[parentProp] = parentPropMetadata_1[parentProp];\n                        });\n                    }\n                }\n                var /** @type {?} */ members_1 = classMetadata['members'] || {};\n                Object.keys(members_1).forEach(function (propName) {\n                    var /** @type {?} */ propData = members_1[propName];\n                    var /** @type {?} */ prop = ((propData))\n                        .find(function (a) { return a['__symbolic'] == 'property' || a['__symbolic'] == 'method'; });\n                    var /** @type {?} */ decorators = [];\n                    if (propMetadata[propName]) {\n                        decorators.push.apply(decorators, propMetadata[propName]);\n                    }\n                    propMetadata[propName] = decorators;\n                    if (prop && prop['decorators']) {\n                        decorators.push.apply(decorators, _this.simplify(type, prop['decorators']));\n                    }\n                });\n                this.propertyCache.set(type, propMetadata);\n            }\n            return propMetadata;\n        };\n        /**\n         * @param {?} type\n         * @return {?}\n         */\n        StaticReflector.prototype.parameters = function (type) {\n            if (!(type instanceof StaticSymbol)) {\n                this.reportError(new Error(\"parameters received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n                return [];\n            }\n            try {\n                var /** @type {?} */ parameters_1 = this.parameterCache.get(type);\n                if (!parameters_1) {\n                    var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n                    var /** @type {?} */ members = classMetadata ? classMetadata['members'] : null;\n                    var /** @type {?} */ ctorData = members ? members['__ctor__'] : null;\n                    if (ctorData) {\n                        var /** @type {?} */ ctor = ((ctorData)).find(function (a) { return a['__symbolic'] == 'constructor'; });\n                        var /** @type {?} */ parameterTypes = (this.simplify(type, ctor['parameters'] || []));\n                        var /** @type {?} */ parameterDecorators_1 = (this.simplify(type, ctor['parameterDecorators'] || []));\n                        parameters_1 = [];\n                        parameterTypes.forEach(function (paramType, index) {\n                            var /** @type {?} */ nestedResult = [];\n                            if (paramType) {\n                                nestedResult.push(paramType);\n                            }\n                            var /** @type {?} */ decorators = parameterDecorators_1 ? parameterDecorators_1[index] : null;\n                            if (decorators) {\n                                nestedResult.push.apply(nestedResult, decorators);\n                            }\n                            parameters_1.push(nestedResult);\n                        });\n                    }\n                    else if (classMetadata['extends']) {\n                        var /** @type {?} */ parentType = this.simplify(type, classMetadata['extends']);\n                        if (parentType instanceof StaticSymbol) {\n                            parameters_1 = this.parameters(parentType);\n                        }\n                    }\n                    if (!parameters_1) {\n                        parameters_1 = [];\n                    }\n                    this.parameterCache.set(type, parameters_1);\n                }\n                return parameters_1;\n            }\n            catch (e) {\n                console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n                throw e;\n            }\n        };\n        /**\n         * @param {?} type\n         * @return {?}\n         */\n        StaticReflector.prototype._methodNames = function (type) {\n            var /** @type {?} */ methodNames = this.methodCache.get(type);\n            if (!methodNames) {\n                var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n                methodNames = {};\n                if (classMetadata['extends']) {\n                    var /** @type {?} */ parentType = this.simplify(type, classMetadata['extends']);\n                    if (parentType instanceof StaticSymbol) {\n                        var /** @type {?} */ parentMethodNames_1 = this._methodNames(parentType);\n                        Object.keys(parentMethodNames_1).forEach(function (parentProp) {\n                            methodNames[parentProp] = parentMethodNames_1[parentProp];\n                        });\n                    }\n                }\n                var /** @type {?} */ members_2 = classMetadata['members'] || {};\n                Object.keys(members_2).forEach(function (propName) {\n                    var /** @type {?} */ propData = members_2[propName];\n                    var /** @type {?} */ isMethod = ((propData)).some(function (a) { return a['__symbolic'] == 'method'; });\n                    methodNames[propName] = methodNames[propName] || isMethod;\n                });\n                this.methodCache.set(type, methodNames);\n            }\n            return methodNames;\n        };\n        /**\n         * @param {?} type\n         * @param {?} lcProperty\n         * @return {?}\n         */\n        StaticReflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            if (!(type instanceof StaticSymbol)) {\n                this.reportError(new Error(\"hasLifecycleHook received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            }\n            try {\n                return !!this._methodNames(type)[lcProperty];\n            }\n            catch (e) {\n                console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n                throw e;\n            }\n        };\n        /**\n         * @param {?} type\n         * @param {?} ctor\n         * @return {?}\n         */\n        StaticReflector.prototype._registerDecoratorOrConstructor = function (type, ctor) {\n            this.conversionMap.set(type, function (context, args) { return new (ctor.bind.apply(ctor, [void 0].concat(args)))(); });\n        };\n        /**\n         * @param {?} type\n         * @param {?} fn\n         * @return {?}\n         */\n        StaticReflector.prototype._registerFunction = function (type, fn) {\n            this.conversionMap.set(type, function (context, args) { return fn.apply(undefined, args); });\n        };\n        /**\n         * @return {?}\n         */\n        StaticReflector.prototype.initializeConversionMap = function () {\n            this.injectionToken = this.findDeclaration(ANGULAR_CORE, 'InjectionToken');\n            this.opaqueToken = this.findDeclaration(ANGULAR_CORE, 'OpaqueToken');\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), _angular_core.Host);\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Injectable'), _angular_core.Injectable);\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), _angular_core.Self);\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), _angular_core.SkipSelf);\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Inject'), _angular_core.Inject);\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), _angular_core.Optional);\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Attribute'), _angular_core.Attribute);\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChild'), _angular_core.ContentChild);\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChildren'), _angular_core.ContentChildren);\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChild'), _angular_core.ViewChild);\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChildren'), _angular_core.ViewChildren);\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Input'), _angular_core.Input);\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Output'), _angular_core.Output);\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Pipe'), _angular_core.Pipe);\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostBinding'), _angular_core.HostBinding);\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostListener'), _angular_core.HostListener);\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Directive'), _angular_core.Directive);\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Component'), _angular_core.Component);\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'NgModule'), _angular_core.NgModule);\n            // Note: Some metadata classes can be used directly with Provider.deps.\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), _angular_core.Host);\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), _angular_core.Self);\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), _angular_core.SkipSelf);\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), _angular_core.Optional);\n            this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'trigger'), _angular_core.trigger);\n            this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'state'), _angular_core.state);\n            this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'transition'), _angular_core.transition);\n            this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'style'), _angular_core.style);\n            this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'animate'), _angular_core.animate);\n            this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'keyframes'), _angular_core.keyframes);\n            this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'sequence'), _angular_core.sequence);\n            this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'group'), _angular_core.group);\n        };\n        /**\n         * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n         * All types passed to the StaticResolver should be pseudo-types returned by this method.\n         *\n         * @param {?} declarationFile the absolute path of the file where the symbol is declared\n         * @param {?} name the name of the type.\n         * @param {?=} members\n         * @return {?}\n         */\n        StaticReflector.prototype.getStaticSymbol = function (declarationFile, name, members) {\n            return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n        };\n        /**\n         * @param {?} error\n         * @param {?} context\n         * @param {?=} path\n         * @return {?}\n         */\n        StaticReflector.prototype.reportError = function (error, context, path) {\n            if (this.errorRecorder) {\n                this.errorRecorder(error, (context && context.filePath) || path);\n            }\n            else {\n                throw error;\n            }\n        };\n        /**\n         * Simplify but discard any errors\n         * @param {?} context\n         * @param {?} value\n         * @return {?}\n         */\n        StaticReflector.prototype.trySimplify = function (context, value) {\n            var /** @type {?} */ originalRecorder = this.errorRecorder;\n            this.errorRecorder = function (error, fileName) { };\n            var /** @type {?} */ result = this.simplify(context, value);\n            this.errorRecorder = originalRecorder;\n            return result;\n        };\n        /**\n         * \\@internal\n         * @param {?} context\n         * @param {?} value\n         * @return {?}\n         */\n        StaticReflector.prototype.simplify = function (context, value) {\n            var _this = this;\n            var /** @type {?} */ self = this;\n            var /** @type {?} */ scope = BindingScope.empty;\n            var /** @type {?} */ calling = new Map();\n            /**\n             * @param {?} context\n             * @param {?} value\n             * @param {?} depth\n             * @return {?}\n             */\n            function simplifyInContext(context, value, depth) {\n                /**\n                 * @param {?} staticSymbol\n                 * @return {?}\n                 */\n                function resolveReferenceValue(staticSymbol) {\n                    var /** @type {?} */ resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n                    return resolvedSymbol ? resolvedSymbol.metadata : null;\n                }\n                /**\n                 * @param {?} functionSymbol\n                 * @param {?} targetFunction\n                 * @param {?} args\n                 * @return {?}\n                 */\n                function simplifyCall(functionSymbol, targetFunction, args) {\n                    if (targetFunction && targetFunction['__symbolic'] == 'function') {\n                        if (calling.get(functionSymbol)) {\n                            throw new Error('Recursion not supported');\n                        }\n                        calling.set(functionSymbol, true);\n                        try {\n                            var /** @type {?} */ value_1 = targetFunction['value'];\n                            if (value_1 && (depth != 0 || value_1.__symbolic != 'error')) {\n                                var /** @type {?} */ parameters = targetFunction['parameters'];\n                                var /** @type {?} */ defaults = targetFunction.defaults;\n                                args = args.map(function (arg) { return simplifyInContext(context, arg, depth + 1); })\n                                    .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                                if (defaults && defaults.length > args.length) {\n                                    args.push.apply(args, defaults.slice(args.length).map(function (value) { return simplify(value); }));\n                                }\n                                var /** @type {?} */ functionScope = BindingScope.build();\n                                for (var /** @type {?} */ i = 0; i < parameters.length; i++) {\n                                    functionScope.define(parameters[i], args[i]);\n                                }\n                                var /** @type {?} */ oldScope = scope;\n                                var /** @type {?} */ result_1;\n                                try {\n                                    scope = functionScope.done();\n                                    result_1 = simplifyInContext(functionSymbol, value_1, depth + 1);\n                                }\n                                finally {\n                                    scope = oldScope;\n                                }\n                                return result_1;\n                            }\n                        }\n                        finally {\n                            calling.delete(functionSymbol);\n                        }\n                    }\n                    if (depth === 0) {\n                        // If depth is 0 we are evaluating the top level expression that is describing element\n                        // decorator. In this case, it is a decorator we don't understand, such as a custom\n                        // non-angular decorator, and we should just ignore it.\n                        return IGNORE;\n                    }\n                    return simplify({ __symbolic: 'error', message: 'Function call not supported', context: functionSymbol });\n                }\n                /**\n                 * @param {?} expression\n                 * @return {?}\n                 */\n                function simplify(expression) {\n                    if (isPrimitive(expression)) {\n                        return expression;\n                    }\n                    if (expression instanceof Array) {\n                        var /** @type {?} */ result_2 = [];\n                        for (var _i = 0, _a = ((expression)); _i < _a.length; _i++) {\n                            var item = _a[_i];\n                            // Check for a spread expression\n                            if (item && item.__symbolic === 'spread') {\n                                var /** @type {?} */ spreadArray = simplify(item.expression);\n                                if (Array.isArray(spreadArray)) {\n                                    for (var _b = 0, spreadArray_1 = spreadArray; _b < spreadArray_1.length; _b++) {\n                                        var spreadItem = spreadArray_1[_b];\n                                        result_2.push(spreadItem);\n                                    }\n                                    continue;\n                                }\n                            }\n                            var /** @type {?} */ value_2 = simplify(item);\n                            if (shouldIgnore(value_2)) {\n                                continue;\n                            }\n                            result_2.push(value_2);\n                        }\n                        return result_2;\n                    }\n                    if (expression instanceof StaticSymbol) {\n                        // Stop simplification at builtin symbols\n                        if (expression === self.injectionToken || expression === self.opaqueToken ||\n                            self.conversionMap.has(expression)) {\n                            return expression;\n                        }\n                        else {\n                            var /** @type {?} */ staticSymbol = expression;\n                            var /** @type {?} */ declarationValue = resolveReferenceValue(staticSymbol);\n                            if (declarationValue) {\n                                return simplifyInContext(staticSymbol, declarationValue, depth + 1);\n                            }\n                            else {\n                                return staticSymbol;\n                            }\n                        }\n                    }\n                    if (expression) {\n                        if (expression['__symbolic']) {\n                            var /** @type {?} */ staticSymbol = void 0;\n                            switch (expression['__symbolic']) {\n                                case 'binop':\n                                    var /** @type {?} */ left = simplify(expression['left']);\n                                    if (shouldIgnore(left))\n                                        return left;\n                                    var /** @type {?} */ right = simplify(expression['right']);\n                                    if (shouldIgnore(right))\n                                        return right;\n                                    switch (expression['operator']) {\n                                        case '&&':\n                                            return left && right;\n                                        case '||':\n                                            return left || right;\n                                        case '|':\n                                            return left | right;\n                                        case '^':\n                                            return left ^ right;\n                                        case '&':\n                                            return left & right;\n                                        case '==':\n                                            return left == right;\n                                        case '!=':\n                                            return left != right;\n                                        case '===':\n                                            return left === right;\n                                        case '!==':\n                                            return left !== right;\n                                        case '<':\n                                            return left < right;\n                                        case '>':\n                                            return left > right;\n                                        case '<=':\n                                            return left <= right;\n                                        case '>=':\n                                            return left >= right;\n                                        case '<<':\n                                            return left << right;\n                                        case '>>':\n                                            return left >> right;\n                                        case '+':\n                                            return left + right;\n                                        case '-':\n                                            return left - right;\n                                        case '*':\n                                            return left * right;\n                                        case '/':\n                                            return left / right;\n                                        case '%':\n                                            return left % right;\n                                    }\n                                    return null;\n                                case 'if':\n                                    var /** @type {?} */ condition = simplify(expression['condition']);\n                                    return condition ? simplify(expression['thenExpression']) :\n                                        simplify(expression['elseExpression']);\n                                case 'pre':\n                                    var /** @type {?} */ operand = simplify(expression['operand']);\n                                    if (shouldIgnore(operand))\n                                        return operand;\n                                    switch (expression['operator']) {\n                                        case '+':\n                                            return operand;\n                                        case '-':\n                                            return -operand;\n                                        case '!':\n                                            return !operand;\n                                        case '~':\n                                            return ~operand;\n                                    }\n                                    return null;\n                                case 'index':\n                                    var /** @type {?} */ indexTarget = simplify(expression['expression']);\n                                    var /** @type {?} */ index = simplify(expression['index']);\n                                    if (indexTarget && isPrimitive(index))\n                                        return indexTarget[index];\n                                    return null;\n                                case 'select':\n                                    var /** @type {?} */ member = expression['member'];\n                                    var /** @type {?} */ selectContext = context;\n                                    var /** @type {?} */ selectTarget = simplify(expression['expression']);\n                                    if (selectTarget instanceof StaticSymbol) {\n                                        var /** @type {?} */ members = selectTarget.members.concat(member);\n                                        selectContext =\n                                            self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                                        var /** @type {?} */ declarationValue = resolveReferenceValue(selectContext);\n                                        if (declarationValue) {\n                                            return simplifyInContext(selectContext, declarationValue, depth + 1);\n                                        }\n                                        else {\n                                            return selectContext;\n                                        }\n                                    }\n                                    if (selectTarget && isPrimitive(member))\n                                        return simplifyInContext(selectContext, selectTarget[member], depth + 1);\n                                    return null;\n                                case 'reference':\n                                    // Note: This only has to deal with variable references,\n                                    // as symbol references have been converted into StaticSymbols already\n                                    // in the StaticSymbolResolver!\n                                    var /** @type {?} */ name = expression['name'];\n                                    var /** @type {?} */ localValue = scope.resolve(name);\n                                    if (localValue != BindingScope.missing) {\n                                        return localValue;\n                                    }\n                                    break;\n                                case 'class':\n                                    return context;\n                                case 'function':\n                                    return context;\n                                case 'new':\n                                case 'call':\n                                    // Determine if the function is a built-in conversion\n                                    staticSymbol = simplifyInContext(context, expression['expression'], depth + 1);\n                                    if (staticSymbol instanceof StaticSymbol) {\n                                        if (staticSymbol === self.injectionToken || staticSymbol === self.opaqueToken) {\n                                            // if somebody calls new InjectionToken, don't create an InjectionToken,\n                                            // but rather return the symbol to which the InjectionToken is assigned to.\n                                            return context;\n                                        }\n                                        var /** @type {?} */ argExpressions = expression['arguments'] || [];\n                                        var /** @type {?} */ converter = self.conversionMap.get(staticSymbol);\n                                        if (converter) {\n                                            var /** @type {?} */ args = argExpressions.map(function (arg) { return simplifyInContext(context, arg, depth + 1); })\n                                                .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                                            return converter(context, args);\n                                        }\n                                        else {\n                                            // Determine if the function is one we can simplify.\n                                            var /** @type {?} */ targetFunction = resolveReferenceValue(staticSymbol);\n                                            return simplifyCall(staticSymbol, targetFunction, argExpressions);\n                                        }\n                                    }\n                                    break;\n                                case 'error':\n                                    var /** @type {?} */ message = produceErrorMessage(expression);\n                                    if (expression['line']) {\n                                        message =\n                                            message + \" (position \" + (expression['line'] + 1) + \":\" + (expression['character'] + 1) + \" in the original .ts file)\";\n                                        self.reportError(positionalError(message, context.filePath, expression['line'], expression['character']), context);\n                                    }\n                                    else {\n                                        self.reportError(new Error(message), context);\n                                    }\n                                    return IGNORE;\n                                case 'ignore':\n                                    return expression;\n                            }\n                            return null;\n                        }\n                        return mapStringMap(expression, function (value, name) { return simplify(value); });\n                    }\n                    return IGNORE;\n                }\n                try {\n                    return simplify(value);\n                }\n                catch (e) {\n                    var /** @type {?} */ members = context.members.length ? \".\" + context.members.join('.') : '';\n                    var /** @type {?} */ message = e.message + \", resolving symbol \" + context.name + members + \" in \" + context.filePath;\n                    if (e.fileName) {\n                        throw positionalError(message, e.fileName, e.line, e.column);\n                    }\n                    throw syntaxError(message);\n                }\n            }\n            var /** @type {?} */ recordedSimplifyInContext = function (context, value, depth) {\n                try {\n                    return simplifyInContext(context, value, depth);\n                }\n                catch (e) {\n                    _this.reportError(e, context);\n                }\n            };\n            var /** @type {?} */ result = this.errorRecorder ? recordedSimplifyInContext(context, value, 0) :\n                simplifyInContext(context, value, 0);\n            if (shouldIgnore(result)) {\n                return undefined;\n            }\n            return result;\n        };\n        /**\n         * @param {?} type\n         * @return {?}\n         */\n        StaticReflector.prototype.getTypeMetadata = function (type) {\n            var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n            return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n                { __symbolic: 'class' };\n        };\n        return StaticReflector;\n    }());\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    function expandedMessage(error) {\n        switch (error.message) {\n            case 'Reference to non-exported class':\n                if (error.context && error.context.className) {\n                    return \"Reference to a non-exported class \" + error.context.className + \". Consider exporting the class\";\n                }\n                break;\n            case 'Variable not initialized':\n                return 'Only initialized variables and constants can be referenced because the value of this variable is needed by the template compiler';\n            case 'Destructuring not supported':\n                return 'Referencing an exported destructured variable or constant is not supported by the template compiler. Consider simplifying this to avoid destructuring';\n            case 'Could not resolve type':\n                if (error.context && error.context.typeName) {\n                    return \"Could not resolve type \" + error.context.typeName;\n                }\n                break;\n            case 'Function call not supported':\n                var /** @type {?} */ prefix = error.context && error.context.name ? \"Calling function '\" + error.context.name + \"', f\" : 'F';\n                return prefix +\n                    'unction calls are not supported. Consider replacing the function or lambda with a reference to an exported function';\n            case 'Reference to a local symbol':\n                if (error.context && error.context.name) {\n                    return \"Reference to a local (non-exported) symbol '\" + error.context.name + \"'. Consider exporting the symbol\";\n                }\n                break;\n        }\n        return error.message;\n    }\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    function produceErrorMessage(error) {\n        return \"Error encountered resolving symbol values statically. \" + expandedMessage(error);\n    }\n    /**\n     * @param {?} input\n     * @param {?} transform\n     * @return {?}\n     */\n    function mapStringMap(input, transform) {\n        if (!input)\n            return {};\n        var /** @type {?} */ result = {};\n        Object.keys(input).forEach(function (key) {\n            var /** @type {?} */ value = transform(input[key], key);\n            if (!shouldIgnore(value)) {\n                if (HIDDEN_KEY.test(key)) {\n                    Object.defineProperty(result, key, { enumerable: false, configurable: true, value: value });\n                }\n                else {\n                    result[key] = value;\n                }\n            }\n        });\n        return result;\n    }\n    /**\n     * @param {?} o\n     * @return {?}\n     */\n    function isPrimitive(o) {\n        return o === null || (typeof o !== 'function' && typeof o !== 'object');\n    }\n    /**\n     * @abstract\n     */\n    var BindingScope = (function () {\n        function BindingScope() {\n        }\n        /**\n         * @abstract\n         * @param {?} name\n         * @return {?}\n         */\n        BindingScope.prototype.resolve = function (name) { };\n        /**\n         * @return {?}\n         */\n        BindingScope.build = function () {\n            var /** @type {?} */ current = new Map();\n            return {\n                define: function (name, value) {\n                    current.set(name, value);\n                    return this;\n                },\n                done: function () {\n                    return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n                }\n            };\n        };\n        return BindingScope;\n    }());\n    BindingScope.missing = {};\n    BindingScope.empty = { resolve: function (name) { return BindingScope.missing; } };\n    var PopulatedScope = (function (_super) {\n        __extends(PopulatedScope, _super);\n        /**\n         * @param {?} bindings\n         */\n        function PopulatedScope(bindings) {\n            var _this = _super.call(this) || this;\n            _this.bindings = bindings;\n            return _this;\n        }\n        /**\n         * @param {?} name\n         * @return {?}\n         */\n        PopulatedScope.prototype.resolve = function (name) {\n            return this.bindings.has(name) ? this.bindings.get(name) : BindingScope.missing;\n        };\n        return PopulatedScope;\n    }(BindingScope));\n    /**\n     * @param {?} message\n     * @param {?} fileName\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    function positionalError(message, fileName, line, column) {\n        var /** @type {?} */ result = new Error(message);\n        ((result)).fileName = fileName;\n        ((result)).line = line;\n        ((result)).column = column;\n        return result;\n    }\n    var ResolvedStaticSymbol = (function () {\n        /**\n         * @param {?} symbol\n         * @param {?} metadata\n         */\n        function ResolvedStaticSymbol(symbol, metadata) {\n            this.symbol = symbol;\n            this.metadata = metadata;\n        }\n        return ResolvedStaticSymbol;\n    }());\n    var /** @type {?} */ SUPPORTED_SCHEMA_VERSION = 3;\n    /**\n     * This class is responsible for loading metadata per symbol,\n     * and normalizing references between symbols.\n     *\n     * Internally, it only uses symbols without members,\n     * and deduces the values for symbols with members based\n     * on these symbols.\n     */\n    var StaticSymbolResolver = (function () {\n        /**\n         * @param {?} host\n         * @param {?} staticSymbolCache\n         * @param {?} summaryResolver\n         * @param {?=} errorRecorder\n         */\n        function StaticSymbolResolver(host, staticSymbolCache, summaryResolver, errorRecorder) {\n            this.host = host;\n            this.staticSymbolCache = staticSymbolCache;\n            this.summaryResolver = summaryResolver;\n            this.errorRecorder = errorRecorder;\n            this.metadataCache = new Map();\n            this.resolvedSymbols = new Map();\n            this.resolvedFilePaths = new Set();\n            this.importAs = new Map();\n        }\n        /**\n         * @param {?} staticSymbol\n         * @return {?}\n         */\n        StaticSymbolResolver.prototype.resolveSymbol = function (staticSymbol) {\n            if (staticSymbol.members.length > 0) {\n                return this._resolveSymbolMembers(staticSymbol);\n            }\n            var /** @type {?} */ result = this.resolvedSymbols.get(staticSymbol);\n            if (result) {\n                return result;\n            }\n            result = this._resolveSymbolFromSummary(staticSymbol);\n            if (result) {\n                return result;\n            }\n            // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n            // have summaries, only .d.ts files. So we always need to check both, the summary\n            // and metadata.\n            this._createSymbolsOf(staticSymbol.filePath);\n            result = this.resolvedSymbols.get(staticSymbol);\n            return result;\n        };\n        /**\n         * getImportAs produces a symbol that can be used to import the given symbol.\n         * The import might be different than the symbol if the symbol is exported from\n         * a library with a summary; in which case we want to import the symbol from the\n         * ngfactory re-export instead of directly to avoid introducing a direct dependency\n         * on an otherwise indirect dependency.\n         *\n         * @param {?} staticSymbol the symbol for which to generate a import symbol\n         * @return {?}\n         */\n        StaticSymbolResolver.prototype.getImportAs = function (staticSymbol) {\n            if (staticSymbol.members.length) {\n                var /** @type {?} */ baseSymbol = this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name);\n                var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n                return baseImportAs ?\n                    this.getStaticSymbol(baseImportAs.filePath, baseImportAs.name, staticSymbol.members) :\n                    null;\n            }\n            var /** @type {?} */ result = this.summaryResolver.getImportAs(staticSymbol);\n            if (!result) {\n                result = this.importAs.get(staticSymbol);\n            }\n            return result;\n        };\n        /**\n         * getTypeArity returns the number of generic type parameters the given symbol\n         * has. If the symbol is not a type the result is null.\n         * @param {?} staticSymbol\n         * @return {?}\n         */\n        StaticSymbolResolver.prototype.getTypeArity = function (staticSymbol) {\n            // If the file is a factory file, don't resolve the symbol as doing so would\n            // cause the metadata for an factory file to be loaded which doesn't exist.\n            // All references to generated classes must include the correct arity whenever\n            // generating code.\n            if (isNgFactoryFile(staticSymbol.filePath)) {\n                return null;\n            }\n            var /** @type {?} */ resolvedSymbol = this.resolveSymbol(staticSymbol);\n            while (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n                resolvedSymbol = this.resolveSymbol(resolvedSymbol.metadata);\n            }\n            return (resolvedSymbol && resolvedSymbol.metadata && resolvedSymbol.metadata.arity) || null;\n        };\n        /**\n         * @param {?} sourceSymbol\n         * @param {?} targetSymbol\n         * @return {?}\n         */\n        StaticSymbolResolver.prototype.recordImportAs = function (sourceSymbol, targetSymbol) {\n            sourceSymbol.assertNoMembers();\n            targetSymbol.assertNoMembers();\n            this.importAs.set(sourceSymbol, targetSymbol);\n        };\n        /**\n         * @param {?} staticSymbol\n         * @return {?}\n         */\n        StaticSymbolResolver.prototype._resolveSymbolMembers = function (staticSymbol) {\n            var /** @type {?} */ members = staticSymbol.members;\n            var /** @type {?} */ baseResolvedSymbol = this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name));\n            if (!baseResolvedSymbol) {\n                return null;\n            }\n            var /** @type {?} */ baseMetadata = baseResolvedSymbol.metadata;\n            if (baseMetadata instanceof StaticSymbol) {\n                return new ResolvedStaticSymbol(staticSymbol, this.getStaticSymbol(baseMetadata.filePath, baseMetadata.name, members));\n            }\n            else if (baseMetadata && baseMetadata.__symbolic === 'class') {\n                if (baseMetadata.statics && members.length === 1) {\n                    return new ResolvedStaticSymbol(staticSymbol, baseMetadata.statics[members[0]]);\n                }\n            }\n            else {\n                var /** @type {?} */ value = baseMetadata;\n                for (var /** @type {?} */ i = 0; i < members.length && value; i++) {\n                    value = value[members[i]];\n                }\n                return new ResolvedStaticSymbol(staticSymbol, value);\n            }\n            return null;\n        };\n        /**\n         * @param {?} staticSymbol\n         * @return {?}\n         */\n        StaticSymbolResolver.prototype._resolveSymbolFromSummary = function (staticSymbol) {\n            var /** @type {?} */ summary = this.summaryResolver.resolveSummary(staticSymbol);\n            return summary ? new ResolvedStaticSymbol(staticSymbol, summary.metadata) : null;\n        };\n        /**\n         * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n         * All types passed to the StaticResolver should be pseudo-types returned by this method.\n         *\n         * @param {?} declarationFile the absolute path of the file where the symbol is declared\n         * @param {?} name the name of the type.\n         * @param {?=} members a symbol for a static member of the named type\n         * @return {?}\n         */\n        StaticSymbolResolver.prototype.getStaticSymbol = function (declarationFile, name, members) {\n            return this.staticSymbolCache.get(declarationFile, name, members);\n        };\n        /**\n         * @param {?} filePath\n         * @return {?}\n         */\n        StaticSymbolResolver.prototype.getSymbolsOf = function (filePath) {\n            // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n            // have summaries, only .d.ts files. So we always need to check both, the summary\n            // and metadata.\n            var /** @type {?} */ symbols = new Set(this.summaryResolver.getSymbolsOf(filePath));\n            this._createSymbolsOf(filePath);\n            this.resolvedSymbols.forEach(function (resolvedSymbol) {\n                if (resolvedSymbol.symbol.filePath === filePath) {\n                    symbols.add(resolvedSymbol.symbol);\n                }\n            });\n            return Array.from(symbols);\n        };\n        /**\n         * @param {?} filePath\n         * @return {?}\n         */\n        StaticSymbolResolver.prototype._createSymbolsOf = function (filePath) {\n            var _this = this;\n            if (this.resolvedFilePaths.has(filePath)) {\n                return;\n            }\n            this.resolvedFilePaths.add(filePath);\n            var /** @type {?} */ resolvedSymbols = [];\n            var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n            if (metadata['metadata']) {\n                // handle direct declarations of the symbol\n                var /** @type {?} */ topLevelSymbolNames_1 = new Set(Object.keys(metadata['metadata']).map(unescapeIdentifier));\n                Object.keys(metadata['metadata']).forEach(function (metadataKey) {\n                    var /** @type {?} */ symbolMeta = metadata['metadata'][metadataKey];\n                    var /** @type {?} */ name = unescapeIdentifier(metadataKey);\n                    var /** @type {?} */ canonicalSymbol = _this.getStaticSymbol(filePath, name);\n                    if (metadata['importAs']) {\n                        // Index bundle indexes should use the importAs module name instead of a reference\n                        // to the .d.ts file directly.\n                        var /** @type {?} */ importSymbol = _this.getStaticSymbol(metadata['importAs'], name);\n                        _this.recordImportAs(canonicalSymbol, importSymbol);\n                    }\n                    resolvedSymbols.push(_this.createResolvedSymbol(canonicalSymbol, topLevelSymbolNames_1, symbolMeta));\n                });\n            }\n            // handle the symbols in one of the re-export location\n            if (metadata['exports']) {\n                var _loop_1 = function (moduleExport) {\n                    // handle the symbols in the list of explicitly re-exported symbols.\n                    if (moduleExport.export) {\n                        moduleExport.export.forEach(function (exportSymbol) {\n                            var /** @type {?} */ symbolName;\n                            if (typeof exportSymbol === 'string') {\n                                symbolName = exportSymbol;\n                            }\n                            else {\n                                symbolName = exportSymbol.as;\n                            }\n                            symbolName = unescapeIdentifier(symbolName);\n                            var /** @type {?} */ symName = symbolName;\n                            if (typeof exportSymbol !== 'string') {\n                                symName = unescapeIdentifier(exportSymbol.name);\n                            }\n                            var /** @type {?} */ resolvedModule = _this.resolveModule(moduleExport.from, filePath);\n                            if (resolvedModule) {\n                                var /** @type {?} */ targetSymbol = _this.getStaticSymbol(resolvedModule, symName);\n                                var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, symbolName);\n                                resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                            }\n                        });\n                    }\n                    else {\n                        // handle the symbols via export * directives.\n                        var /** @type {?} */ resolvedModule = this_1.resolveModule(moduleExport.from, filePath);\n                        if (resolvedModule) {\n                            var /** @type {?} */ nestedExports = this_1.getSymbolsOf(resolvedModule);\n                            nestedExports.forEach(function (targetSymbol) {\n                                var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, targetSymbol.name);\n                                resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                            });\n                        }\n                    }\n                };\n                var this_1 = this;\n                for (var _i = 0, _a = metadata['exports']; _i < _a.length; _i++) {\n                    var moduleExport = _a[_i];\n                    _loop_1(/** @type {?} */ moduleExport);\n                }\n            }\n            resolvedSymbols.forEach(function (resolvedSymbol) { return _this.resolvedSymbols.set(resolvedSymbol.symbol, resolvedSymbol); });\n        };\n        /**\n         * @param {?} sourceSymbol\n         * @param {?} topLevelSymbolNames\n         * @param {?} metadata\n         * @return {?}\n         */\n        StaticSymbolResolver.prototype.createResolvedSymbol = function (sourceSymbol, topLevelSymbolNames, metadata) {\n            var /** @type {?} */ self = this;\n            var ReferenceTransformer = (function (_super) {\n                __extends(ReferenceTransformer, _super);\n                function ReferenceTransformer() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                /**\n                 * @param {?} map\n                 * @param {?} functionParams\n                 * @return {?}\n                 */\n                ReferenceTransformer.prototype.visitStringMap = function (map, functionParams) {\n                    var /** @type {?} */ symbolic = map['__symbolic'];\n                    if (symbolic === 'function') {\n                        var /** @type {?} */ oldLen = functionParams.length;\n                        functionParams.push.apply(functionParams, (map['parameters'] || []));\n                        var /** @type {?} */ result = _super.prototype.visitStringMap.call(this, map, functionParams);\n                        functionParams.length = oldLen;\n                        return result;\n                    }\n                    else if (symbolic === 'reference') {\n                        var /** @type {?} */ module_1 = map['module'];\n                        var /** @type {?} */ name = map['name'] ? unescapeIdentifier(map['name']) : map['name'];\n                        if (!name) {\n                            return null;\n                        }\n                        var /** @type {?} */ filePath = void 0;\n                        if (module_1) {\n                            filePath = self.resolveModule(module_1, sourceSymbol.filePath);\n                            if (!filePath) {\n                                return {\n                                    __symbolic: 'error',\n                                    message: \"Could not resolve \" + module_1 + \" relative to \" + sourceSymbol.filePath + \".\"\n                                };\n                            }\n                            return self.getStaticSymbol(filePath, name);\n                        }\n                        else if (functionParams.indexOf(name) >= 0) {\n                            // reference to a function parameter\n                            return { __symbolic: 'reference', name: name };\n                        }\n                        else {\n                            if (topLevelSymbolNames.has(name)) {\n                                return self.getStaticSymbol(sourceSymbol.filePath, name);\n                            }\n                            // ambient value\n                            null;\n                        }\n                    }\n                    else {\n                        return _super.prototype.visitStringMap.call(this, map, functionParams);\n                    }\n                };\n                return ReferenceTransformer;\n            }(ValueTransformer));\n            var /** @type {?} */ transformedMeta = visitValue(metadata, new ReferenceTransformer(), []);\n            if (transformedMeta instanceof StaticSymbol) {\n                return this.createExport(sourceSymbol, transformedMeta);\n            }\n            return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n        };\n        /**\n         * @param {?} sourceSymbol\n         * @param {?} targetSymbol\n         * @return {?}\n         */\n        StaticSymbolResolver.prototype.createExport = function (sourceSymbol, targetSymbol) {\n            sourceSymbol.assertNoMembers();\n            targetSymbol.assertNoMembers();\n            if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath)) {\n                // This case is for an ng library importing symbols from a plain ts library\n                // transitively.\n                // Note: We rely on the fact that we discover symbols in the direction\n                // from source files to library files\n                this.importAs.set(targetSymbol, this.getImportAs(sourceSymbol) || sourceSymbol);\n            }\n            return new ResolvedStaticSymbol(sourceSymbol, targetSymbol);\n        };\n        /**\n         * @param {?} error\n         * @param {?} context\n         * @param {?=} path\n         * @return {?}\n         */\n        StaticSymbolResolver.prototype.reportError = function (error, context, path) {\n            if (this.errorRecorder) {\n                this.errorRecorder(error, (context && context.filePath) || path);\n            }\n            else {\n                throw error;\n            }\n        };\n        /**\n         * @param {?} module an absolute path to a module file.\n         * @return {?}\n         */\n        StaticSymbolResolver.prototype.getModuleMetadata = function (module) {\n            var /** @type {?} */ moduleMetadata = this.metadataCache.get(module);\n            if (!moduleMetadata) {\n                var /** @type {?} */ moduleMetadatas = this.host.getMetadataFor(module);\n                if (moduleMetadatas) {\n                    var /** @type {?} */ maxVersion_1 = -1;\n                    moduleMetadatas.forEach(function (md) {\n                        if (md['version'] > maxVersion_1) {\n                            maxVersion_1 = md['version'];\n                            moduleMetadata = md;\n                        }\n                    });\n                }\n                if (!moduleMetadata) {\n                    moduleMetadata =\n                        { __symbolic: 'module', version: SUPPORTED_SCHEMA_VERSION, module: module, metadata: {} };\n                }\n                if (moduleMetadata['version'] != SUPPORTED_SCHEMA_VERSION) {\n                    var /** @type {?} */ errorMessage = moduleMetadata['version'] == 2 ?\n                        \"Unsupported metadata version \" + moduleMetadata['version'] + \" for module \" + module + \". This module should be compiled with a newer version of ngc\" :\n                        \"Metadata version mismatch for module \" + module + \", found version \" + moduleMetadata['version'] + \", expected \" + SUPPORTED_SCHEMA_VERSION;\n                    this.reportError(new Error(errorMessage), null);\n                }\n                this.metadataCache.set(module, moduleMetadata);\n            }\n            return moduleMetadata;\n        };\n        /**\n         * @param {?} module\n         * @param {?} symbolName\n         * @param {?=} containingFile\n         * @return {?}\n         */\n        StaticSymbolResolver.prototype.getSymbolByModule = function (module, symbolName, containingFile) {\n            var /** @type {?} */ filePath = this.resolveModule(module, containingFile);\n            if (!filePath) {\n                this.reportError(new Error(\"Could not resolve module \" + module + (containingFile ? \" relative to $ {\\n            containingFile\\n          } \" : '')), null);\n                return this.getStaticSymbol(\"ERROR:\" + module, symbolName);\n            }\n            return this.getStaticSymbol(filePath, symbolName);\n        };\n        /**\n         * @param {?} module\n         * @param {?} containingFile\n         * @return {?}\n         */\n        StaticSymbolResolver.prototype.resolveModule = function (module, containingFile) {\n            try {\n                return this.host.moduleNameToFileName(module, containingFile);\n            }\n            catch (e) {\n                console.error(\"Could not resolve module '\" + module + \"' relative to file \" + containingFile);\n                this.reportError(e, null, containingFile);\n            }\n        };\n        return StaticSymbolResolver;\n    }());\n    /**\n     * @param {?} identifier\n     * @return {?}\n     */\n    function unescapeIdentifier(identifier) {\n        return identifier.startsWith('___') ? identifier.substr(1) : identifier;\n    }\n    var AotSummaryResolver = (function () {\n        /**\n         * @param {?} host\n         * @param {?} staticSymbolCache\n         */\n        function AotSummaryResolver(host, staticSymbolCache) {\n            this.host = host;\n            this.staticSymbolCache = staticSymbolCache;\n            this.summaryCache = new Map();\n            this.loadedFilePaths = new Set();\n            this.importAs = new Map();\n        }\n        /**\n         * @param {?} filePath\n         * @return {?}\n         */\n        AotSummaryResolver.prototype.isLibraryFile = function (filePath) {\n            // Note: We need to strip the .ngfactory. file path,\n            // so this method also works for generated files\n            // (for which host.isSourceFile will always return false).\n            return !this.host.isSourceFile(stripNgFactory(filePath));\n        };\n        /**\n         * @param {?} filePath\n         * @return {?}\n         */\n        AotSummaryResolver.prototype.getLibraryFileName = function (filePath) { return this.host.getOutputFileName(filePath); };\n        /**\n         * @param {?} staticSymbol\n         * @return {?}\n         */\n        AotSummaryResolver.prototype.resolveSummary = function (staticSymbol) {\n            staticSymbol.assertNoMembers();\n            var /** @type {?} */ summary = this.summaryCache.get(staticSymbol);\n            if (!summary) {\n                this._loadSummaryFile(staticSymbol.filePath);\n                summary = this.summaryCache.get(staticSymbol);\n            }\n            return summary;\n        };\n        /**\n         * @param {?} filePath\n         * @return {?}\n         */\n        AotSummaryResolver.prototype.getSymbolsOf = function (filePath) {\n            this._loadSummaryFile(filePath);\n            return Array.from(this.summaryCache.keys()).filter(function (symbol) { return symbol.filePath === filePath; });\n        };\n        /**\n         * @param {?} staticSymbol\n         * @return {?}\n         */\n        AotSummaryResolver.prototype.getImportAs = function (staticSymbol) {\n            staticSymbol.assertNoMembers();\n            return this.importAs.get(staticSymbol);\n        };\n        /**\n         * @param {?} filePath\n         * @return {?}\n         */\n        AotSummaryResolver.prototype._loadSummaryFile = function (filePath) {\n            var _this = this;\n            if (this.loadedFilePaths.has(filePath)) {\n                return;\n            }\n            this.loadedFilePaths.add(filePath);\n            if (this.isLibraryFile(filePath)) {\n                var /** @type {?} */ summaryFilePath = summaryFileName(filePath);\n                var /** @type {?} */ json = void 0;\n                try {\n                    json = this.host.loadSummary(summaryFilePath);\n                }\n                catch (e) {\n                    console.error(\"Error loading summary file \" + summaryFilePath);\n                    throw e;\n                }\n                if (json) {\n                    var _a = deserializeSummaries(this.staticSymbolCache, json), summaries = _a.summaries, importAs = _a.importAs;\n                    summaries.forEach(function (summary) { return _this.summaryCache.set(summary.symbol, summary); });\n                    importAs.forEach(function (importAs) {\n                        _this.importAs.set(importAs.symbol, _this.staticSymbolCache.get(ngfactoryFilePath(filePath), importAs.importAs));\n                    });\n                }\n            }\n        };\n        return AotSummaryResolver;\n    }());\n    /**\n     * Creates a new AotCompiler based on options and a host.\n     * @param {?} compilerHost\n     * @param {?} options\n     * @return {?}\n     */\n    function createAotCompiler(compilerHost, options) {\n        var /** @type {?} */ translations = options.translations || '';\n        var /** @type {?} */ urlResolver = createOfflineCompileUrlResolver();\n        var /** @type {?} */ symbolCache = new StaticSymbolCache();\n        var /** @type {?} */ summaryResolver = new AotSummaryResolver(compilerHost, symbolCache);\n        var /** @type {?} */ symbolResolver = new StaticSymbolResolver(compilerHost, symbolCache, summaryResolver);\n        var /** @type {?} */ staticReflector = new StaticReflector(symbolResolver);\n        StaticAndDynamicReflectionCapabilities.install(staticReflector);\n        var /** @type {?} */ console = new _angular_core.ɵConsole();\n        var /** @type {?} */ htmlParser = new I18NHtmlParser(new HtmlParser(), translations, options.i18nFormat, _angular_core.MissingTranslationStrategy.Warning, console);\n        var /** @type {?} */ config = new CompilerConfig({\n            defaultEncapsulation: _angular_core.ViewEncapsulation.Emulated,\n            useJit: false,\n            enableLegacyTemplate: options.enableLegacyTemplate !== false,\n        });\n        var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return compilerHost.loadResource(url); } }, urlResolver, htmlParser, config);\n        var /** @type {?} */ expressionParser = new Parser(new Lexer());\n        var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n        var /** @type {?} */ tmplParser = new TemplateParser(config, expressionParser, elementSchemaRegistry, htmlParser, console, []);\n        var /** @type {?} */ resolver = new CompileMetadataResolver(config, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n        // TODO(vicb): do not pass options.i18nFormat here\n        var /** @type {?} */ importResolver = {\n            getImportAs: function (symbol) { return symbolResolver.getImportAs(symbol); },\n            fileNameToModuleName: function (fileName, containingFilePath) { return compilerHost.fileNameToModuleName(fileName, containingFilePath); },\n            getTypeArity: function (symbol) { return symbolResolver.getTypeArity(symbol); }\n        };\n        var /** @type {?} */ viewCompiler = new ViewCompiler(config, elementSchemaRegistry);\n        var /** @type {?} */ compiler = new AotCompiler(config, compilerHost, resolver, tmplParser, new StyleCompiler(urlResolver), viewCompiler, new NgModuleCompiler(), new TypeScriptEmitter(importResolver), summaryResolver, options.locale, options.i18nFormat, options.genFilePreamble, symbolResolver);\n        return { compiler: compiler, reflector: staticReflector };\n    }\n    /**\n     * @param {?} statements\n     * @param {?} resultVars\n     * @return {?}\n     */\n    function interpretStatements(statements, resultVars) {\n        var /** @type {?} */ stmtsWithReturn = statements.concat([new ReturnStatement(literalArr(resultVars.map(function (resultVar) { return variable(resultVar); })))]);\n        var /** @type {?} */ ctx = new _ExecutionContext(null, null, null, new Map());\n        var /** @type {?} */ visitor = new StatementInterpreter();\n        var /** @type {?} */ result = visitor.visitAllStatements(stmtsWithReturn, ctx);\n        return result != null ? result.value : null;\n    }\n    /**\n     * @param {?} varNames\n     * @param {?} varValues\n     * @param {?} statements\n     * @param {?} ctx\n     * @param {?} visitor\n     * @return {?}\n     */\n    function _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n        var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n        for (var /** @type {?} */ i = 0; i < varNames.length; i++) {\n            childCtx.vars.set(varNames[i], varValues[i]);\n        }\n        var /** @type {?} */ result = visitor.visitAllStatements(statements, childCtx);\n        return result ? result.value : null;\n    }\n    var _ExecutionContext = (function () {\n        /**\n         * @param {?} parent\n         * @param {?} instance\n         * @param {?} className\n         * @param {?} vars\n         */\n        function _ExecutionContext(parent, instance, className, vars) {\n            this.parent = parent;\n            this.instance = instance;\n            this.className = className;\n            this.vars = vars;\n        }\n        /**\n         * @return {?}\n         */\n        _ExecutionContext.prototype.createChildWihtLocalVars = function () {\n            return new _ExecutionContext(this, this.instance, this.className, new Map());\n        };\n        return _ExecutionContext;\n    }());\n    var ReturnValue = (function () {\n        /**\n         * @param {?} value\n         */\n        function ReturnValue(value) {\n            this.value = value;\n        }\n        return ReturnValue;\n    }());\n    /**\n     * @param {?} _classStmt\n     * @param {?} _ctx\n     * @param {?} _visitor\n     * @return {?}\n     */\n    function createDynamicClass(_classStmt, _ctx, _visitor) {\n        var /** @type {?} */ propertyDescriptors = {};\n        _classStmt.getters.forEach(function (getter) {\n            // Note: use `function` instead of arrow function to capture `this`\n            propertyDescriptors[getter.name] = {\n                configurable: false,\n                get: function () {\n                    var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                    return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n                }\n            };\n        });\n        _classStmt.methods.forEach(function (method) {\n            var /** @type {?} */ paramNames = method.params.map(function (param) { return param.name; });\n            // Note: use `function` instead of arrow function to capture `this`\n            propertyDescriptors[method.name] = {\n                writable: false,\n                configurable: false,\n                value: function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                    return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n                }\n            };\n        });\n        var /** @type {?} */ ctorParamNames = _classStmt.constructorMethod.params.map(function (param) { return param.name; });\n        // Note: use `function` instead of arrow function to capture `this`\n        var /** @type {?} */ ctor = function () {\n            var _this = this;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n            _classStmt.fields.forEach(function (field) { _this[field.name] = undefined; });\n            _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n        };\n        var /** @type {?} */ superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n        ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n        return ctor;\n    }\n    var StatementInterpreter = (function () {\n        function StatementInterpreter() {\n        }\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        StatementInterpreter.prototype.debugAst = function (ast) { return debugOutputAstAsTypeScript(ast); };\n        /**\n         * @param {?} stmt\n         * @param {?} ctx\n         * @return {?}\n         */\n        StatementInterpreter.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n            ctx.vars.set(stmt.name, stmt.value.visitExpression(this, ctx));\n            return null;\n        };\n        /**\n         * @param {?} expr\n         * @param {?} ctx\n         * @return {?}\n         */\n        StatementInterpreter.prototype.visitWriteVarExpr = function (expr, ctx) {\n            var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n            var /** @type {?} */ currCtx = ctx;\n            while (currCtx != null) {\n                if (currCtx.vars.has(expr.name)) {\n                    currCtx.vars.set(expr.name, value);\n                    return value;\n                }\n                currCtx = currCtx.parent;\n            }\n            throw new Error(\"Not declared variable \" + expr.name);\n        };\n        /**\n         * @param {?} ast\n         * @param {?} ctx\n         * @return {?}\n         */\n        StatementInterpreter.prototype.visitReadVarExpr = function (ast, ctx) {\n            var /** @type {?} */ varName = ast.name;\n            if (ast.builtin != null) {\n                switch (ast.builtin) {\n                    case BuiltinVar.Super:\n                        return ctx.instance.__proto__;\n                    case BuiltinVar.This:\n                        return ctx.instance;\n                    case BuiltinVar.CatchError:\n                        varName = CATCH_ERROR_VAR$2;\n                        break;\n                    case BuiltinVar.CatchStack:\n                        varName = CATCH_STACK_VAR$2;\n                        break;\n                    default:\n                        throw new Error(\"Unknown builtin variable \" + ast.builtin);\n                }\n            }\n            var /** @type {?} */ currCtx = ctx;\n            while (currCtx != null) {\n                if (currCtx.vars.has(varName)) {\n                    return currCtx.vars.get(varName);\n                }\n                currCtx = currCtx.parent;\n            }\n            throw new Error(\"Not declared variable \" + varName);\n        };\n        /**\n         * @param {?} expr\n         * @param {?} ctx\n         * @return {?}\n         */\n        StatementInterpreter.prototype.visitWriteKeyExpr = function (expr, ctx) {\n            var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n            var /** @type {?} */ index = expr.index.visitExpression(this, ctx);\n            var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n            receiver[index] = value;\n            return value;\n        };\n        /**\n         * @param {?} expr\n         * @param {?} ctx\n         * @return {?}\n         */\n        StatementInterpreter.prototype.visitWritePropExpr = function (expr, ctx) {\n            var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n            var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n            receiver[expr.name] = value;\n            return value;\n        };\n        /**\n         * @param {?} expr\n         * @param {?} ctx\n         * @return {?}\n         */\n        StatementInterpreter.prototype.visitInvokeMethodExpr = function (expr, ctx) {\n            var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n            var /** @type {?} */ args = this.visitAllExpressions(expr.args, ctx);\n            var /** @type {?} */ result;\n            if (expr.builtin != null) {\n                switch (expr.builtin) {\n                    case BuiltinMethod.ConcatArray:\n                        result = receiver.concat.apply(receiver, args);\n                        break;\n                    case BuiltinMethod.SubscribeObservable:\n                        result = receiver.subscribe({ next: args[0] });\n                        break;\n                    case BuiltinMethod.Bind:\n                        result = receiver.bind.apply(receiver, args);\n                        break;\n                    default:\n                        throw new Error(\"Unknown builtin method \" + expr.builtin);\n                }\n            }\n            else {\n                result = receiver[expr.name].apply(receiver, args);\n            }\n            return result;\n        };\n        /**\n         * @param {?} stmt\n         * @param {?} ctx\n         * @return {?}\n         */\n        StatementInterpreter.prototype.visitInvokeFunctionExpr = function (stmt, ctx) {\n            var /** @type {?} */ args = this.visitAllExpressions(stmt.args, ctx);\n            var /** @type {?} */ fnExpr = stmt.fn;\n            if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n                ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n                return null;\n            }\n            else {\n                var /** @type {?} */ fn_1 = stmt.fn.visitExpression(this, ctx);\n                return fn_1.apply(null, args);\n            }\n        };\n        /**\n         * @param {?} stmt\n         * @param {?} ctx\n         * @return {?}\n         */\n        StatementInterpreter.prototype.visitReturnStmt = function (stmt, ctx) {\n            return new ReturnValue(stmt.value.visitExpression(this, ctx));\n        };\n        /**\n         * @param {?} stmt\n         * @param {?} ctx\n         * @return {?}\n         */\n        StatementInterpreter.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n            var /** @type {?} */ clazz = createDynamicClass(stmt, ctx, this);\n            ctx.vars.set(stmt.name, clazz);\n            return null;\n        };\n        /**\n         * @param {?} stmt\n         * @param {?} ctx\n         * @return {?}\n         */\n        StatementInterpreter.prototype.visitExpressionStmt = function (stmt, ctx) {\n            return stmt.expr.visitExpression(this, ctx);\n        };\n        /**\n         * @param {?} stmt\n         * @param {?} ctx\n         * @return {?}\n         */\n        StatementInterpreter.prototype.visitIfStmt = function (stmt, ctx) {\n            var /** @type {?} */ condition = stmt.condition.visitExpression(this, ctx);\n            if (condition) {\n                return this.visitAllStatements(stmt.trueCase, ctx);\n            }\n            else if (stmt.falseCase != null) {\n                return this.visitAllStatements(stmt.falseCase, ctx);\n            }\n            return null;\n        };\n        /**\n         * @param {?} stmt\n         * @param {?} ctx\n         * @return {?}\n         */\n        StatementInterpreter.prototype.visitTryCatchStmt = function (stmt, ctx) {\n            try {\n                return this.visitAllStatements(stmt.bodyStmts, ctx);\n            }\n            catch (e) {\n                var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n                childCtx.vars.set(CATCH_ERROR_VAR$2, e);\n                childCtx.vars.set(CATCH_STACK_VAR$2, e.stack);\n                return this.visitAllStatements(stmt.catchStmts, childCtx);\n            }\n        };\n        /**\n         * @param {?} stmt\n         * @param {?} ctx\n         * @return {?}\n         */\n        StatementInterpreter.prototype.visitThrowStmt = function (stmt, ctx) {\n            throw stmt.error.visitExpression(this, ctx);\n        };\n        /**\n         * @param {?} stmt\n         * @param {?=} context\n         * @return {?}\n         */\n        StatementInterpreter.prototype.visitCommentStmt = function (stmt, context) { return null; };\n        /**\n         * @param {?} ast\n         * @param {?} ctx\n         * @return {?}\n         */\n        StatementInterpreter.prototype.visitInstantiateExpr = function (ast, ctx) {\n            var /** @type {?} */ args = this.visitAllExpressions(ast.args, ctx);\n            var /** @type {?} */ clazz = ast.classExpr.visitExpression(this, ctx);\n            return new (clazz.bind.apply(clazz, [void 0].concat(args)))();\n        };\n        /**\n         * @param {?} ast\n         * @param {?} ctx\n         * @return {?}\n         */\n        StatementInterpreter.prototype.visitLiteralExpr = function (ast, ctx) { return ast.value; };\n        /**\n         * @param {?} ast\n         * @param {?} ctx\n         * @return {?}\n         */\n        StatementInterpreter.prototype.visitExternalExpr = function (ast, ctx) {\n            return ast.value.reference;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} ctx\n         * @return {?}\n         */\n        StatementInterpreter.prototype.visitConditionalExpr = function (ast, ctx) {\n            if (ast.condition.visitExpression(this, ctx)) {\n                return ast.trueCase.visitExpression(this, ctx);\n            }\n            else if (ast.falseCase != null) {\n                return ast.falseCase.visitExpression(this, ctx);\n            }\n            return null;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} ctx\n         * @return {?}\n         */\n        StatementInterpreter.prototype.visitNotExpr = function (ast, ctx) {\n            return !ast.condition.visitExpression(this, ctx);\n        };\n        /**\n         * @param {?} ast\n         * @param {?} ctx\n         * @return {?}\n         */\n        StatementInterpreter.prototype.visitCastExpr = function (ast, ctx) {\n            return ast.value.visitExpression(this, ctx);\n        };\n        /**\n         * @param {?} ast\n         * @param {?} ctx\n         * @return {?}\n         */\n        StatementInterpreter.prototype.visitFunctionExpr = function (ast, ctx) {\n            var /** @type {?} */ paramNames = ast.params.map(function (param) { return param.name; });\n            return _declareFn(paramNames, ast.statements, ctx, this);\n        };\n        /**\n         * @param {?} stmt\n         * @param {?} ctx\n         * @return {?}\n         */\n        StatementInterpreter.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n            var /** @type {?} */ paramNames = stmt.params.map(function (param) { return param.name; });\n            ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n            return null;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} ctx\n         * @return {?}\n         */\n        StatementInterpreter.prototype.visitBinaryOperatorExpr = function (ast, ctx) {\n            var _this = this;\n            var /** @type {?} */ lhs = function () { return ast.lhs.visitExpression(_this, ctx); };\n            var /** @type {?} */ rhs = function () { return ast.rhs.visitExpression(_this, ctx); };\n            switch (ast.operator) {\n                case BinaryOperator.Equals:\n                    return lhs() == rhs();\n                case BinaryOperator.Identical:\n                    return lhs() === rhs();\n                case BinaryOperator.NotEquals:\n                    return lhs() != rhs();\n                case BinaryOperator.NotIdentical:\n                    return lhs() !== rhs();\n                case BinaryOperator.And:\n                    return lhs() && rhs();\n                case BinaryOperator.Or:\n                    return lhs() || rhs();\n                case BinaryOperator.Plus:\n                    return lhs() + rhs();\n                case BinaryOperator.Minus:\n                    return lhs() - rhs();\n                case BinaryOperator.Divide:\n                    return lhs() / rhs();\n                case BinaryOperator.Multiply:\n                    return lhs() * rhs();\n                case BinaryOperator.Modulo:\n                    return lhs() % rhs();\n                case BinaryOperator.Lower:\n                    return lhs() < rhs();\n                case BinaryOperator.LowerEquals:\n                    return lhs() <= rhs();\n                case BinaryOperator.Bigger:\n                    return lhs() > rhs();\n                case BinaryOperator.BiggerEquals:\n                    return lhs() >= rhs();\n                default:\n                    throw new Error(\"Unknown operator \" + ast.operator);\n            }\n        };\n        /**\n         * @param {?} ast\n         * @param {?} ctx\n         * @return {?}\n         */\n        StatementInterpreter.prototype.visitReadPropExpr = function (ast, ctx) {\n            var /** @type {?} */ result;\n            var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n            result = receiver[ast.name];\n            return result;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} ctx\n         * @return {?}\n         */\n        StatementInterpreter.prototype.visitReadKeyExpr = function (ast, ctx) {\n            var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n            var /** @type {?} */ prop = ast.index.visitExpression(this, ctx);\n            return receiver[prop];\n        };\n        /**\n         * @param {?} ast\n         * @param {?} ctx\n         * @return {?}\n         */\n        StatementInterpreter.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n            return this.visitAllExpressions(ast.entries, ctx);\n        };\n        /**\n         * @param {?} ast\n         * @param {?} ctx\n         * @return {?}\n         */\n        StatementInterpreter.prototype.visitLiteralMapExpr = function (ast, ctx) {\n            var _this = this;\n            var /** @type {?} */ result = {};\n            ast.entries.forEach(function (entry) { return ((result))[entry.key] = entry.value.visitExpression(_this, ctx); });\n            return result;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        StatementInterpreter.prototype.visitCommaExpr = function (ast, context) {\n            var /** @type {?} */ values = this.visitAllExpressions(ast.parts, context);\n            return values[values.length - 1];\n        };\n        /**\n         * @param {?} expressions\n         * @param {?} ctx\n         * @return {?}\n         */\n        StatementInterpreter.prototype.visitAllExpressions = function (expressions, ctx) {\n            var _this = this;\n            return expressions.map(function (expr) { return expr.visitExpression(_this, ctx); });\n        };\n        /**\n         * @param {?} statements\n         * @param {?} ctx\n         * @return {?}\n         */\n        StatementInterpreter.prototype.visitAllStatements = function (statements, ctx) {\n            for (var /** @type {?} */ i = 0; i < statements.length; i++) {\n                var /** @type {?} */ stmt = statements[i];\n                var /** @type {?} */ val = stmt.visitStatement(this, ctx);\n                if (val instanceof ReturnValue) {\n                    return val;\n                }\n            }\n            return null;\n        };\n        return StatementInterpreter;\n    }());\n    /**\n     * @param {?} varNames\n     * @param {?} statements\n     * @param {?} ctx\n     * @param {?} visitor\n     * @return {?}\n     */\n    function _declareFn(varNames, statements, ctx, visitor) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n        };\n    }\n    var /** @type {?} */ CATCH_ERROR_VAR$2 = 'error';\n    var /** @type {?} */ CATCH_STACK_VAR$2 = 'stack';\n    /**\n     * @abstract\n     */\n    var AbstractJsEmitterVisitor = (function (_super) {\n        __extends(AbstractJsEmitterVisitor, _super);\n        function AbstractJsEmitterVisitor() {\n            return _super.call(this, false) || this;\n        }\n        /**\n         * @param {?} stmt\n         * @param {?} ctx\n         * @return {?}\n         */\n        AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n            var _this = this;\n            ctx.pushClass(stmt);\n            this._visitClassConstructor(stmt, ctx);\n            if (stmt.parent != null) {\n                ctx.print(stmt, stmt.name + \".prototype = Object.create(\");\n                stmt.parent.visitExpression(this, ctx);\n                ctx.println(stmt, \".prototype);\");\n            }\n            stmt.getters.forEach(function (getter) { return _this._visitClassGetter(stmt, getter, ctx); });\n            stmt.methods.forEach(function (method) { return _this._visitClassMethod(stmt, method, ctx); });\n            ctx.popClass();\n            return null;\n        };\n        /**\n         * @param {?} stmt\n         * @param {?} ctx\n         * @return {?}\n         */\n        AbstractJsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {\n            ctx.print(stmt, \"function \" + stmt.name + \"(\");\n            if (stmt.constructorMethod != null) {\n                this._visitParams(stmt.constructorMethod.params, ctx);\n            }\n            ctx.println(stmt, \") {\");\n            ctx.incIndent();\n            if (stmt.constructorMethod != null) {\n                if (stmt.constructorMethod.body.length > 0) {\n                    ctx.println(stmt, \"var self = this;\");\n                    this.visitAllStatements(stmt.constructorMethod.body, ctx);\n                }\n            }\n            ctx.decIndent();\n            ctx.println(stmt, \"}\");\n        };\n        /**\n         * @param {?} stmt\n         * @param {?} getter\n         * @param {?} ctx\n         * @return {?}\n         */\n        AbstractJsEmitterVisitor.prototype._visitClassGetter = function (stmt, getter, ctx) {\n            ctx.println(stmt, \"Object.defineProperty(\" + stmt.name + \".prototype, '\" + getter.name + \"', { get: function() {\");\n            ctx.incIndent();\n            if (getter.body.length > 0) {\n                ctx.println(stmt, \"var self = this;\");\n                this.visitAllStatements(getter.body, ctx);\n            }\n            ctx.decIndent();\n            ctx.println(stmt, \"}});\");\n        };\n        /**\n         * @param {?} stmt\n         * @param {?} method\n         * @param {?} ctx\n         * @return {?}\n         */\n        AbstractJsEmitterVisitor.prototype._visitClassMethod = function (stmt, method, ctx) {\n            ctx.print(stmt, stmt.name + \".prototype.\" + method.name + \" = function(\");\n            this._visitParams(method.params, ctx);\n            ctx.println(stmt, \") {\");\n            ctx.incIndent();\n            if (method.body.length > 0) {\n                ctx.println(stmt, \"var self = this;\");\n                this.visitAllStatements(method.body, ctx);\n            }\n            ctx.decIndent();\n            ctx.println(stmt, \"};\");\n        };\n        /**\n         * @param {?} ast\n         * @param {?} ctx\n         * @return {?}\n         */\n        AbstractJsEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {\n            if (ast.builtin === BuiltinVar.This) {\n                ctx.print(ast, 'self');\n            }\n            else if (ast.builtin === BuiltinVar.Super) {\n                throw new Error(\"'super' needs to be handled at a parent ast node, not at the variable level!\");\n            }\n            else {\n                _super.prototype.visitReadVarExpr.call(this, ast, ctx);\n            }\n            return null;\n        };\n        /**\n         * @param {?} stmt\n         * @param {?} ctx\n         * @return {?}\n         */\n        AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n            ctx.print(stmt, \"var \" + stmt.name + \" = \");\n            stmt.value.visitExpression(this, ctx);\n            ctx.println(stmt, \";\");\n            return null;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} ctx\n         * @return {?}\n         */\n        AbstractJsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {\n            ast.value.visitExpression(this, ctx);\n            return null;\n        };\n        /**\n         * @param {?} expr\n         * @param {?} ctx\n         * @return {?}\n         */\n        AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {\n            var /** @type {?} */ fnExpr = expr.fn;\n            if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n                ctx.currentClass.parent.visitExpression(this, ctx);\n                ctx.print(expr, \".call(this\");\n                if (expr.args.length > 0) {\n                    ctx.print(expr, \", \");\n                    this.visitAllExpressions(expr.args, ctx, ',');\n                }\n                ctx.print(expr, \")\");\n            }\n            else {\n                _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);\n            }\n            return null;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} ctx\n         * @return {?}\n         */\n        AbstractJsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {\n            ctx.print(ast, \"function(\");\n            this._visitParams(ast.params, ctx);\n            ctx.println(ast, \") {\");\n            ctx.incIndent();\n            this.visitAllStatements(ast.statements, ctx);\n            ctx.decIndent();\n            ctx.print(ast, \"}\");\n            return null;\n        };\n        /**\n         * @param {?} stmt\n         * @param {?} ctx\n         * @return {?}\n         */\n        AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n            ctx.print(stmt, \"function \" + stmt.name + \"(\");\n            this._visitParams(stmt.params, ctx);\n            ctx.println(stmt, \") {\");\n            ctx.incIndent();\n            this.visitAllStatements(stmt.statements, ctx);\n            ctx.decIndent();\n            ctx.println(stmt, \"}\");\n            return null;\n        };\n        /**\n         * @param {?} stmt\n         * @param {?} ctx\n         * @return {?}\n         */\n        AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {\n            ctx.println(stmt, \"try {\");\n            ctx.incIndent();\n            this.visitAllStatements(stmt.bodyStmts, ctx);\n            ctx.decIndent();\n            ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n            ctx.incIndent();\n            var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack')).toDeclStmt(null, [\n                    StmtModifier.Final\n                ]))].concat(stmt.catchStmts);\n            this.visitAllStatements(catchStmts, ctx);\n            ctx.decIndent();\n            ctx.println(stmt, \"}\");\n            return null;\n        };\n        /**\n         * @param {?} params\n         * @param {?} ctx\n         * @return {?}\n         */\n        AbstractJsEmitterVisitor.prototype._visitParams = function (params, ctx) {\n            this.visitAllObjects(function (param) { return ctx.print(null, param.name); }, params, ctx, ',');\n        };\n        /**\n         * @param {?} method\n         * @return {?}\n         */\n        AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {\n            var /** @type {?} */ name;\n            switch (method) {\n                case BuiltinMethod.ConcatArray:\n                    name = 'concat';\n                    break;\n                case BuiltinMethod.SubscribeObservable:\n                    name = 'subscribe';\n                    break;\n                case BuiltinMethod.Bind:\n                    name = 'bind';\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin method: \" + method);\n            }\n            return name;\n        };\n        return AbstractJsEmitterVisitor;\n    }(AbstractEmitterVisitor));\n    /**\n     * @param {?} sourceUrl\n     * @param {?} ctx\n     * @param {?} vars\n     * @return {?}\n     */\n    function evalExpression(sourceUrl, ctx, vars) {\n        var /** @type {?} */ fnBody = ctx.toSource() + \"\\n//# sourceURL=\" + sourceUrl;\n        var /** @type {?} */ fnArgNames = [];\n        var /** @type {?} */ fnArgValues = [];\n        for (var /** @type {?} */ argName in vars) {\n            fnArgNames.push(argName);\n            fnArgValues.push(vars[argName]);\n        }\n        if (_angular_core.isDevMode()) {\n            // using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise\n            // E.g. ```\n            // function anonymous(a,b,c\n            // /**/) { ... }```\n            // We don't want to hard code this fact, so we auto detect it via an empty function first.\n            var /** @type {?} */ emptyFn = new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat('return null;'))))().toString();\n            var /** @type {?} */ headerLines = emptyFn.slice(0, emptyFn.indexOf('return null;')).split('\\n').length - 1;\n            fnBody += \"\\n\" + ctx.toSourceMapGenerator(sourceUrl, sourceUrl, headerLines).toJsComment();\n        }\n        return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);\n    }\n    /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @param {?} resultVars\n     * @return {?}\n     */\n    function jitStatements(sourceUrl, statements, resultVars) {\n        var /** @type {?} */ converter = new JitEmitterVisitor();\n        var /** @type {?} */ ctx = EmitterVisitorContext.createRoot(resultVars);\n        var /** @type {?} */ returnStmt = new ReturnStatement(literalArr(resultVars.map(function (resultVar) { return variable(resultVar); })));\n        converter.visitAllStatements(statements.concat([returnStmt]), ctx);\n        return evalExpression(sourceUrl, ctx, converter.getArgs());\n    }\n    var JitEmitterVisitor = (function (_super) {\n        __extends(JitEmitterVisitor, _super);\n        function JitEmitterVisitor() {\n            var _this = _super.apply(this, arguments) || this;\n            _this._evalArgNames = [];\n            _this._evalArgValues = [];\n            return _this;\n        }\n        /**\n         * @return {?}\n         */\n        JitEmitterVisitor.prototype.getArgs = function () {\n            var /** @type {?} */ result = {};\n            for (var /** @type {?} */ i = 0; i < this._evalArgNames.length; i++) {\n                result[this._evalArgNames[i]] = this._evalArgValues[i];\n            }\n            return result;\n        };\n        /**\n         * @param {?} ast\n         * @param {?} ctx\n         * @return {?}\n         */\n        JitEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {\n            var /** @type {?} */ value = ast.value.reference;\n            var /** @type {?} */ id = this._evalArgValues.indexOf(value);\n            if (id === -1) {\n                id = this._evalArgValues.length;\n                this._evalArgValues.push(value);\n                var /** @type {?} */ name = identifierName(ast.value) || 'val';\n                this._evalArgNames.push(\"jit_\" + name + id);\n            }\n            ctx.print(ast, this._evalArgNames[id]);\n            return null;\n        };\n        return JitEmitterVisitor;\n    }(AbstractJsEmitterVisitor));\n    /**\n     * An internal module of the Angular compiler that begins with component types,\n     * extracts templates, and eventually produces a compiled version of the component\n     * ready for linking into an application.\n     *\n     * \\@security When compiling templates at runtime, you must ensure that the entire template comes\n     * from a trusted source. Attacker-controlled data introduced by a template could expose your\n     * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n     */\n    var JitCompiler = (function () {\n        /**\n         * @param {?} _injector\n         * @param {?} _metadataResolver\n         * @param {?} _templateParser\n         * @param {?} _styleCompiler\n         * @param {?} _viewCompiler\n         * @param {?} _ngModuleCompiler\n         * @param {?} _compilerConfig\n         */\n        function JitCompiler(_injector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _compilerConfig) {\n            this._injector = _injector;\n            this._metadataResolver = _metadataResolver;\n            this._templateParser = _templateParser;\n            this._styleCompiler = _styleCompiler;\n            this._viewCompiler = _viewCompiler;\n            this._ngModuleCompiler = _ngModuleCompiler;\n            this._compilerConfig = _compilerConfig;\n            this._compiledTemplateCache = new Map();\n            this._compiledHostTemplateCache = new Map();\n            this._compiledDirectiveWrapperCache = new Map();\n            this._compiledNgModuleCache = new Map();\n            this._sharedStylesheetCount = 0;\n        }\n        Object.defineProperty(JitCompiler.prototype, \"injector\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @template T\n         * @param {?} moduleType\n         * @return {?}\n         */\n        JitCompiler.prototype.compileModuleSync = function (moduleType) {\n            return this._compileModuleAndComponents(moduleType, true).syncResult;\n        };\n        /**\n         * @template T\n         * @param {?} moduleType\n         * @return {?}\n         */\n        JitCompiler.prototype.compileModuleAsync = function (moduleType) {\n            return this._compileModuleAndComponents(moduleType, false).asyncResult;\n        };\n        /**\n         * @template T\n         * @param {?} moduleType\n         * @return {?}\n         */\n        JitCompiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            return this._compileModuleAndAllComponents(moduleType, true).syncResult;\n        };\n        /**\n         * @template T\n         * @param {?} moduleType\n         * @return {?}\n         */\n        JitCompiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            return this._compileModuleAndAllComponents(moduleType, false).asyncResult;\n        };\n        /**\n         * @param {?} component\n         * @return {?}\n         */\n        JitCompiler.prototype.getNgContentSelectors = function (component) {\n            var /** @type {?} */ template = this._compiledTemplateCache.get(component);\n            if (!template) {\n                throw new Error(\"The component \" + _angular_core.ɵstringify(component) + \" is not yet compiled!\");\n            }\n            return template.compMeta.template.ngContentSelectors;\n        };\n        /**\n         * @template T\n         * @param {?} moduleType\n         * @param {?} isSync\n         * @return {?}\n         */\n        JitCompiler.prototype._compileModuleAndComponents = function (moduleType, isSync) {\n            var _this = this;\n            var /** @type {?} */ loadingPromise = this._loadModules(moduleType, isSync);\n            var /** @type {?} */ createResult = function () {\n                _this._compileComponents(moduleType, null);\n                return _this._compileModule(moduleType);\n            };\n            if (isSync) {\n                return new SyncAsyncResult(createResult());\n            }\n            else {\n                return new SyncAsyncResult(null, loadingPromise.then(createResult));\n            }\n        };\n        /**\n         * @template T\n         * @param {?} moduleType\n         * @param {?} isSync\n         * @return {?}\n         */\n        JitCompiler.prototype._compileModuleAndAllComponents = function (moduleType, isSync) {\n            var _this = this;\n            var /** @type {?} */ loadingPromise = this._loadModules(moduleType, isSync);\n            var /** @type {?} */ createResult = function () {\n                var /** @type {?} */ componentFactories = [];\n                _this._compileComponents(moduleType, componentFactories);\n                return new _angular_core.ModuleWithComponentFactories(_this._compileModule(moduleType), componentFactories);\n            };\n            if (isSync) {\n                return new SyncAsyncResult(createResult());\n            }\n            else {\n                return new SyncAsyncResult(null, loadingPromise.then(createResult));\n            }\n        };\n        /**\n         * @param {?} mainModule\n         * @param {?} isSync\n         * @return {?}\n         */\n        JitCompiler.prototype._loadModules = function (mainModule, isSync) {\n            var _this = this;\n            var /** @type {?} */ loadingPromises = [];\n            var /** @type {?} */ ngModule = this._metadataResolver.getNgModuleMetadata(mainModule);\n            // Note: the loadingPromise for a module only includes the loading of the exported directives\n            // of imported modules.\n            // However, for runtime compilation, we want to transitively compile all modules,\n            // so we also need to call loadNgModuleDirectiveAndPipeMetadata for all nested modules.\n            ngModule.transitiveModule.modules.forEach(function (localModuleMeta) {\n                loadingPromises.push(_this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(localModuleMeta.reference, isSync));\n            });\n            return Promise.all(loadingPromises);\n        };\n        /**\n         * @template T\n         * @param {?} moduleType\n         * @return {?}\n         */\n        JitCompiler.prototype._compileModule = function (moduleType) {\n            var _this = this;\n            var /** @type {?} */ ngModuleFactory = this._compiledNgModuleCache.get(moduleType);\n            if (!ngModuleFactory) {\n                var /** @type {?} */ moduleMeta_1 = this._metadataResolver.getNgModuleMetadata(moduleType);\n                // Always provide a bound Compiler\n                var /** @type {?} */ extraProviders = [this._metadataResolver.getProviderMetadata(new ProviderMeta(_angular_core.Compiler, { useFactory: function () { return new ModuleBoundCompiler(_this, moduleMeta_1.type.reference); } }))];\n                var /** @type {?} */ compileResult = this._ngModuleCompiler.compile(moduleMeta_1, extraProviders);\n                if (!this._compilerConfig.useJit) {\n                    ngModuleFactory =\n                        interpretStatements(compileResult.statements, [compileResult.ngModuleFactoryVar])[0];\n                }\n                else {\n                    ngModuleFactory = jitStatements(ngModuleJitUrl(moduleMeta_1), compileResult.statements, [compileResult.ngModuleFactoryVar])[0];\n                }\n                this._compiledNgModuleCache.set(moduleMeta_1.type.reference, ngModuleFactory);\n            }\n            return ngModuleFactory;\n        };\n        /**\n         * \\@internal\n         * @param {?} mainModule\n         * @param {?} allComponentFactories\n         * @return {?}\n         */\n        JitCompiler.prototype._compileComponents = function (mainModule, allComponentFactories) {\n            var _this = this;\n            var /** @type {?} */ ngModule = this._metadataResolver.getNgModuleMetadata(mainModule);\n            var /** @type {?} */ moduleByDirective = new Map();\n            var /** @type {?} */ templates = new Set();\n            ngModule.transitiveModule.modules.forEach(function (localModuleSummary) {\n                var /** @type {?} */ localModuleMeta = _this._metadataResolver.getNgModuleMetadata(localModuleSummary.reference);\n                localModuleMeta.declaredDirectives.forEach(function (dirIdentifier) {\n                    moduleByDirective.set(dirIdentifier.reference, localModuleMeta);\n                    var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirIdentifier.reference);\n                    if (dirMeta.isComponent) {\n                        templates.add(_this._createCompiledTemplate(dirMeta, localModuleMeta));\n                        if (allComponentFactories) {\n                            var /** @type {?} */ template = _this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n                            templates.add(template);\n                            allComponentFactories.push(/** @type {?} */ (dirMeta.componentFactory));\n                        }\n                    }\n                });\n            });\n            ngModule.transitiveModule.modules.forEach(function (localModuleSummary) {\n                var /** @type {?} */ localModuleMeta = _this._metadataResolver.getNgModuleMetadata(localModuleSummary.reference);\n                localModuleMeta.declaredDirectives.forEach(function (dirIdentifier) {\n                    var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirIdentifier.reference);\n                    if (dirMeta.isComponent) {\n                        dirMeta.entryComponents.forEach(function (entryComponentType) {\n                            var /** @type {?} */ moduleMeta = moduleByDirective.get(entryComponentType.componentType);\n                            templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                        });\n                    }\n                });\n                localModuleMeta.entryComponents.forEach(function (entryComponentType) {\n                    var /** @type {?} */ moduleMeta = moduleByDirective.get(entryComponentType.componentType);\n                    templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                });\n            });\n            templates.forEach(function (template) { return _this._compileTemplate(template); });\n        };\n        /**\n         * @param {?} type\n         * @return {?}\n         */\n        JitCompiler.prototype.clearCacheFor = function (type) {\n            this._compiledNgModuleCache.delete(type);\n            this._metadataResolver.clearCacheFor(type);\n            this._compiledHostTemplateCache.delete(type);\n            var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(type);\n            if (compiledTemplate) {\n                this._compiledTemplateCache.delete(type);\n            }\n        };\n        /**\n         * @return {?}\n         */\n        JitCompiler.prototype.clearCache = function () {\n            this._metadataResolver.clearCache();\n            this._compiledTemplateCache.clear();\n            this._compiledHostTemplateCache.clear();\n            this._compiledNgModuleCache.clear();\n        };\n        /**\n         * @param {?} compType\n         * @param {?} ngModule\n         * @return {?}\n         */\n        JitCompiler.prototype._createCompiledHostTemplate = function (compType, ngModule) {\n            if (!ngModule) {\n                throw new Error(\"Component \" + _angular_core.ɵstringify(compType) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n            var /** @type {?} */ compiledTemplate = this._compiledHostTemplateCache.get(compType);\n            if (!compiledTemplate) {\n                var /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n                assertComponent(compMeta);\n                var /** @type {?} */ componentFactory = (compMeta.componentFactory);\n                var /** @type {?} */ hostClass = this._metadataResolver.getHostComponentType(compType);\n                var /** @type {?} */ hostMeta = createHostComponentMeta(hostClass, compMeta, /** @type {?} */ (_angular_core.ɵgetComponentViewDefinitionFactory(componentFactory)));\n                compiledTemplate =\n                    new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n                this._compiledHostTemplateCache.set(compType, compiledTemplate);\n            }\n            return compiledTemplate;\n        };\n        /**\n         * @param {?} compMeta\n         * @param {?} ngModule\n         * @return {?}\n         */\n        JitCompiler.prototype._createCompiledTemplate = function (compMeta, ngModule) {\n            var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n            if (!compiledTemplate) {\n                assertComponent(compMeta);\n                compiledTemplate = new CompiledTemplate(false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n                this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n            }\n            return compiledTemplate;\n        };\n        /**\n         * @param {?} template\n         * @return {?}\n         */\n        JitCompiler.prototype._compileTemplate = function (template) {\n            var _this = this;\n            if (template.isCompiled) {\n                return;\n            }\n            var /** @type {?} */ compMeta = template.compMeta;\n            var /** @type {?} */ externalStylesheetsByModuleUrl = new Map();\n            var /** @type {?} */ stylesCompileResult = this._styleCompiler.compileComponent(compMeta);\n            stylesCompileResult.externalStylesheets.forEach(function (r) { externalStylesheetsByModuleUrl.set(r.meta.moduleUrl, r); });\n            this._resolveStylesCompileResult(stylesCompileResult.componentStylesheet, externalStylesheetsByModuleUrl);\n            var /** @type {?} */ directives = template.directives.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n            var /** @type {?} */ pipes = template.ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n            var _a = this._templateParser.parse(compMeta, compMeta.template.template, directives, pipes, template.ngModule.schemas, templateSourceUrl(template.ngModule.type, template.compMeta, template.compMeta.template)), parsedTemplate = _a.template, usedPipes = _a.pipes;\n            var /** @type {?} */ compileResult = this._viewCompiler.compileComponent(compMeta, parsedTemplate, variable(stylesCompileResult.componentStylesheet.stylesVar), usedPipes);\n            var /** @type {?} */ statements = stylesCompileResult.componentStylesheet.statements.concat(compileResult.statements);\n            var /** @type {?} */ viewClassAndRendererTypeVars = compMeta.isHost ?\n                [compileResult.viewClassVar] :\n                [compileResult.viewClassVar, compileResult.rendererTypeVar];\n            var /** @type {?} */ viewClass;\n            var /** @type {?} */ rendererType;\n            if (!this._compilerConfig.useJit) {\n                _b = interpretStatements(statements, viewClassAndRendererTypeVars), viewClass = _b[0], rendererType = _b[1];\n            }\n            else {\n                _c = jitStatements(templateJitUrl(template.ngModule.type, template.compMeta), statements, viewClassAndRendererTypeVars), viewClass = _c[0], rendererType = _c[1];\n            }\n            template.compiled(viewClass, rendererType);\n            var _b, _c;\n        };\n        /**\n         * @param {?} result\n         * @param {?} externalStylesheetsByModuleUrl\n         * @return {?}\n         */\n        JitCompiler.prototype._resolveStylesCompileResult = function (result, externalStylesheetsByModuleUrl) {\n            var _this = this;\n            result.dependencies.forEach(function (dep, i) {\n                var /** @type {?} */ nestedCompileResult = externalStylesheetsByModuleUrl.get(dep.moduleUrl);\n                var /** @type {?} */ nestedStylesArr = _this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n                dep.valuePlaceholder.reference = nestedStylesArr;\n            });\n        };\n        /**\n         * @param {?} result\n         * @param {?} externalStylesheetsByModuleUrl\n         * @return {?}\n         */\n        JitCompiler.prototype._resolveAndEvalStylesCompileResult = function (result, externalStylesheetsByModuleUrl) {\n            this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n            if (!this._compilerConfig.useJit) {\n                return interpretStatements(result.statements, [result.stylesVar])[0];\n            }\n            else {\n                return jitStatements(sharedStylesheetJitUrl(result.meta, this._sharedStylesheetCount++), result.statements, [result.stylesVar])[0];\n            }\n        };\n        return JitCompiler;\n    }());\n    JitCompiler.decorators = [\n        { type: CompilerInjectable },\n    ];\n    /**\n     * @nocollapse\n     */\n    JitCompiler.ctorParameters = function () { return [\n        { type: _angular_core.Injector, },\n        { type: CompileMetadataResolver, },\n        { type: TemplateParser, },\n        { type: StyleCompiler, },\n        { type: ViewCompiler, },\n        { type: NgModuleCompiler, },\n        { type: CompilerConfig, },\n    ]; };\n    var CompiledTemplate = (function () {\n        /**\n         * @param {?} isHost\n         * @param {?} compType\n         * @param {?} compMeta\n         * @param {?} ngModule\n         * @param {?} directives\n         */\n        function CompiledTemplate(isHost, compType, compMeta, ngModule, directives) {\n            this.isHost = isHost;\n            this.compType = compType;\n            this.compMeta = compMeta;\n            this.ngModule = ngModule;\n            this.directives = directives;\n            this._viewClass = null;\n            this.isCompiled = false;\n        }\n        /**\n         * @param {?} viewClass\n         * @param {?} rendererType\n         * @return {?}\n         */\n        CompiledTemplate.prototype.compiled = function (viewClass, rendererType) {\n            this._viewClass = viewClass;\n            ((this.compMeta.componentViewType)).setDelegate(viewClass);\n            for (var /** @type {?} */ prop in rendererType) {\n                ((this.compMeta.rendererType))[prop] = rendererType[prop];\n            }\n            this.isCompiled = true;\n        };\n        return CompiledTemplate;\n    }());\n    /**\n     * @param {?} meta\n     * @return {?}\n     */\n    function assertComponent(meta) {\n        if (!meta.isComponent) {\n            throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n        }\n    }\n    /**\n     * Implements `Compiler` by delegating to the JitCompiler using a known module.\n     */\n    var ModuleBoundCompiler = (function () {\n        /**\n         * @param {?} _delegate\n         * @param {?} _ngModule\n         */\n        function ModuleBoundCompiler(_delegate, _ngModule) {\n            this._delegate = _delegate;\n            this._ngModule = _ngModule;\n        }\n        Object.defineProperty(ModuleBoundCompiler.prototype, \"_injector\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._delegate.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @template T\n         * @param {?} moduleType\n         * @return {?}\n         */\n        ModuleBoundCompiler.prototype.compileModuleSync = function (moduleType) {\n            return this._delegate.compileModuleSync(moduleType);\n        };\n        /**\n         * @template T\n         * @param {?} moduleType\n         * @return {?}\n         */\n        ModuleBoundCompiler.prototype.compileModuleAsync = function (moduleType) {\n            return this._delegate.compileModuleAsync(moduleType);\n        };\n        /**\n         * @template T\n         * @param {?} moduleType\n         * @return {?}\n         */\n        ModuleBoundCompiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            return this._delegate.compileModuleAndAllComponentsSync(moduleType);\n        };\n        /**\n         * @template T\n         * @param {?} moduleType\n         * @return {?}\n         */\n        ModuleBoundCompiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            return this._delegate.compileModuleAndAllComponentsAsync(moduleType);\n        };\n        /**\n         * @param {?} component\n         * @return {?}\n         */\n        ModuleBoundCompiler.prototype.getNgContentSelectors = function (component) {\n            return this._delegate.getNgContentSelectors(component);\n        };\n        /**\n         * Clears all caches\n         * @return {?}\n         */\n        ModuleBoundCompiler.prototype.clearCache = function () { this._delegate.clearCache(); };\n        /**\n         * Clears the cache for the given component/ngModule.\n         * @param {?} type\n         * @return {?}\n         */\n        ModuleBoundCompiler.prototype.clearCacheFor = function (type) { this._delegate.clearCacheFor(type); };\n        return ModuleBoundCompiler;\n    }());\n    /**\n     * A container for message extracted from the templates.\n     */\n    var MessageBundle = (function () {\n        /**\n         * @param {?} _htmlParser\n         * @param {?} _implicitTags\n         * @param {?} _implicitAttrs\n         * @param {?=} _locale\n         */\n        function MessageBundle(_htmlParser, _implicitTags, _implicitAttrs, _locale) {\n            if (_locale === void 0) { _locale = null; }\n            this._htmlParser = _htmlParser;\n            this._implicitTags = _implicitTags;\n            this._implicitAttrs = _implicitAttrs;\n            this._locale = _locale;\n            this._messages = [];\n        }\n        /**\n         * @param {?} html\n         * @param {?} url\n         * @param {?} interpolationConfig\n         * @return {?}\n         */\n        MessageBundle.prototype.updateFromTemplate = function (html, url, interpolationConfig) {\n            var /** @type {?} */ htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n            if (htmlParserResult.errors.length) {\n                return htmlParserResult.errors;\n            }\n            var /** @type {?} */ i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n            if (i18nParserResult.errors.length) {\n                return i18nParserResult.errors;\n            }\n            (_a = this._messages).push.apply(_a, i18nParserResult.messages);\n            var _a;\n        };\n        /**\n         * @return {?}\n         */\n        MessageBundle.prototype.getMessages = function () { return this._messages; };\n        /**\n         * @param {?} serializer\n         * @return {?}\n         */\n        MessageBundle.prototype.write = function (serializer) {\n            var /** @type {?} */ messages = {};\n            var /** @type {?} */ mapperVisitor = new MapPlaceholderNames();\n            // Deduplicate messages based on their ID\n            this._messages.forEach(function (message) {\n                var /** @type {?} */ id = serializer.digest(message);\n                if (!messages.hasOwnProperty(id)) {\n                    messages[id] = message;\n                }\n            });\n            // Transform placeholder names using the serializer mapping\n            var /** @type {?} */ msgList = Object.keys(messages).map(function (id) {\n                var /** @type {?} */ mapper = serializer.createNameMapper(messages[id]);\n                var /** @type {?} */ src = messages[id];\n                var /** @type {?} */ nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n                return new Message(nodes, {}, {}, src.meaning, src.description, id);\n            });\n            return serializer.write(msgList, this._locale);\n        };\n        return MessageBundle;\n    }());\n    var MapPlaceholderNames = (function (_super) {\n        __extends(MapPlaceholderNames, _super);\n        function MapPlaceholderNames() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * @param {?} nodes\n         * @param {?} mapper\n         * @return {?}\n         */\n        MapPlaceholderNames.prototype.convert = function (nodes, mapper) {\n            var _this = this;\n            return mapper ? nodes.map(function (n) { return n.visit(_this, mapper); }) : nodes;\n        };\n        /**\n         * @param {?} ph\n         * @param {?} mapper\n         * @return {?}\n         */\n        MapPlaceholderNames.prototype.visitTagPlaceholder = function (ph, mapper) {\n            var _this = this;\n            var /** @type {?} */ startName = mapper.toPublicName(ph.startName);\n            var /** @type {?} */ closeName = ph.closeName ? mapper.toPublicName(ph.closeName) : ph.closeName;\n            var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, mapper); });\n            return new TagPlaceholder(ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n        };\n        /**\n         * @param {?} ph\n         * @param {?} mapper\n         * @return {?}\n         */\n        MapPlaceholderNames.prototype.visitPlaceholder = function (ph, mapper) {\n            return new Placeholder(ph.value, mapper.toPublicName(ph.name), ph.sourceSpan);\n        };\n        /**\n         * @param {?} ph\n         * @param {?} mapper\n         * @return {?}\n         */\n        MapPlaceholderNames.prototype.visitIcuPlaceholder = function (ph, mapper) {\n            return new IcuPlaceholder(ph.value, mapper.toPublicName(ph.name), ph.sourceSpan);\n        };\n        return MapPlaceholderNames;\n    }(CloneVisitor));\n    var Extractor = (function () {\n        /**\n         * @param {?} host\n         * @param {?} staticSymbolResolver\n         * @param {?} messageBundle\n         * @param {?} metadataResolver\n         */\n        function Extractor(host, staticSymbolResolver, messageBundle, metadataResolver) {\n            this.host = host;\n            this.staticSymbolResolver = staticSymbolResolver;\n            this.messageBundle = messageBundle;\n            this.metadataResolver = metadataResolver;\n        }\n        /**\n         * @param {?} rootFiles\n         * @return {?}\n         */\n        Extractor.prototype.extract = function (rootFiles) {\n            var _this = this;\n            var /** @type {?} */ programSymbols = extractProgramSymbols(this.staticSymbolResolver, rootFiles, this.host);\n            var _a = analyzeAndValidateNgModules(programSymbols, this.host, this.metadataResolver), files = _a.files, ngModules = _a.ngModules;\n            return Promise\n                .all(ngModules.map(function (ngModule) { return _this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false); }))\n                .then(function () {\n                var /** @type {?} */ errors = [];\n                files.forEach(function (file) {\n                    var /** @type {?} */ compMetas = [];\n                    file.directives.forEach(function (directiveType) {\n                        var /** @type {?} */ dirMeta = _this.metadataResolver.getDirectiveMetadata(directiveType);\n                        if (dirMeta && dirMeta.isComponent) {\n                            compMetas.push(dirMeta);\n                        }\n                    });\n                    compMetas.forEach(function (compMeta) {\n                        var /** @type {?} */ html = compMeta.template.template;\n                        var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(compMeta.template.interpolation);\n                        errors.push.apply(errors, _this.messageBundle.updateFromTemplate(html, file.srcUrl, interpolationConfig));\n                    });\n                });\n                if (errors.length) {\n                    throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n                }\n                return _this.messageBundle;\n            });\n        };\n        /**\n         * @param {?} host\n         * @param {?} locale\n         * @return {?}\n         */\n        Extractor.create = function (host, locale) {\n            var /** @type {?} */ htmlParser = new I18NHtmlParser(new HtmlParser());\n            var /** @type {?} */ urlResolver = createOfflineCompileUrlResolver();\n            var /** @type {?} */ symbolCache = new StaticSymbolCache();\n            var /** @type {?} */ summaryResolver = new AotSummaryResolver(host, symbolCache);\n            var /** @type {?} */ staticSymbolResolver = new StaticSymbolResolver(host, symbolCache, summaryResolver);\n            var /** @type {?} */ staticReflector = new StaticReflector(staticSymbolResolver);\n            StaticAndDynamicReflectionCapabilities.install(staticReflector);\n            var /** @type {?} */ config = new CompilerConfig({ defaultEncapsulation: _angular_core.ViewEncapsulation.Emulated, useJit: false });\n            var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return host.loadResource(url); } }, urlResolver, htmlParser, config);\n            var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n            var /** @type {?} */ resolver = new CompileMetadataResolver(config, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, new _angular_core.ɵConsole(), symbolCache, staticReflector);\n            // TODO(vicb): implicit tags & attributes\n            var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n            var /** @type {?} */ extractor = new Extractor(host, staticSymbolResolver, messageBundle, resolver);\n            return { extractor: extractor, staticReflector: staticReflector };\n        };\n        return Extractor;\n    }());\n    var /** @type {?} */ _NO_RESOURCE_LOADER = {\n        /**\n         * @param {?} url\n         * @return {?}\n         */\n        get: function (url) {\n            throw new Error(\"No ResourceLoader implementation has been provided. Can't read the url \\\"\" + url + \"\\\"\");\n        }\n    };\n    var /** @type {?} */ baseHtmlParser = new _angular_core.InjectionToken('HtmlParser');\n    /**\n     * A set of providers that provide `JitCompiler` and its dependencies to use for\n     * template compilation.\n     */\n    var /** @type {?} */ COMPILER_PROVIDERS = [\n        { provide: _angular_core.ɵReflector, useValue: _angular_core.ɵreflector },\n        { provide: _angular_core.ɵReflectorReader, useExisting: _angular_core.ɵReflector },\n        { provide: ResourceLoader, useValue: _NO_RESOURCE_LOADER },\n        SummaryResolver,\n        _angular_core.ɵConsole,\n        Lexer,\n        Parser,\n        {\n            provide: baseHtmlParser,\n            useClass: HtmlParser,\n        },\n        {\n            provide: I18NHtmlParser,\n            useFactory: function (parser, translations, format, config, console) { return new I18NHtmlParser(parser, translations, format, config.missingTranslation, console); },\n            deps: [\n                baseHtmlParser,\n                [new _angular_core.Optional(), new _angular_core.Inject(_angular_core.TRANSLATIONS)],\n                [new _angular_core.Optional(), new _angular_core.Inject(_angular_core.TRANSLATIONS_FORMAT)],\n                [CompilerConfig],\n                [_angular_core.ɵConsole],\n            ]\n        },\n        {\n            provide: HtmlParser,\n            useExisting: I18NHtmlParser,\n        },\n        TemplateParser,\n        DirectiveNormalizer,\n        CompileMetadataResolver,\n        DEFAULT_PACKAGE_URL_PROVIDER,\n        StyleCompiler,\n        ViewCompiler,\n        NgModuleCompiler,\n        { provide: CompilerConfig, useValue: new CompilerConfig() },\n        JitCompiler,\n        { provide: _angular_core.Compiler, useExisting: JitCompiler },\n        DomElementSchemaRegistry,\n        { provide: ElementSchemaRegistry, useExisting: DomElementSchemaRegistry },\n        UrlResolver,\n        DirectiveResolver,\n        PipeResolver,\n        NgModuleResolver,\n    ];\n    var JitCompilerFactory = (function () {\n        /**\n         * @param {?} defaultOptions\n         */\n        function JitCompilerFactory(defaultOptions) {\n            var compilerOptions = {\n                useDebug: _angular_core.isDevMode(),\n                useJit: true,\n                defaultEncapsulation: _angular_core.ViewEncapsulation.Emulated,\n                missingTranslation: _angular_core.MissingTranslationStrategy.Warning,\n                enableLegacyTemplate: true,\n            };\n            this._defaultOptions = [compilerOptions].concat(defaultOptions);\n        }\n        /**\n         * @param {?=} options\n         * @return {?}\n         */\n        JitCompilerFactory.prototype.createCompiler = function (options) {\n            if (options === void 0) { options = []; }\n            var /** @type {?} */ opts = _mergeOptions(this._defaultOptions.concat(options));\n            var /** @type {?} */ injector = _angular_core.ReflectiveInjector.resolveAndCreate([\n                COMPILER_PROVIDERS, {\n                    provide: CompilerConfig,\n                    useFactory: function () {\n                        return new CompilerConfig({\n                            // let explicit values from the compiler options overwrite options\n                            // from the app providers\n                            useJit: opts.useJit,\n                            // let explicit values from the compiler options overwrite options\n                            // from the app providers\n                            defaultEncapsulation: opts.defaultEncapsulation,\n                            missingTranslation: opts.missingTranslation,\n                            enableLegacyTemplate: opts.enableLegacyTemplate,\n                        });\n                    },\n                    deps: []\n                },\n                opts.providers\n            ]);\n            return injector.get(_angular_core.Compiler);\n        };\n        return JitCompilerFactory;\n    }());\n    JitCompilerFactory.decorators = [\n        { type: CompilerInjectable },\n    ];\n    /**\n     * @nocollapse\n     */\n    JitCompilerFactory.ctorParameters = function () { return [\n        { type: Array, decorators: [{ type: _angular_core.Inject, args: [_angular_core.COMPILER_OPTIONS,] },] },\n    ]; };\n    /**\n     * @return {?}\n     */\n    function _initReflector() {\n        _angular_core.ɵreflector.reflectionCapabilities = new _angular_core.ɵReflectionCapabilities();\n    }\n    /**\n     * A platform that included corePlatform and the compiler.\n     *\n     * \\@experimental\n     */\n    var platformCoreDynamic = _angular_core.createPlatformFactory(_angular_core.platformCore, 'coreDynamic', [\n        { provide: _angular_core.COMPILER_OPTIONS, useValue: {}, multi: true },\n        { provide: _angular_core.CompilerFactory, useClass: JitCompilerFactory },\n        { provide: _angular_core.PLATFORM_INITIALIZER, useValue: _initReflector, multi: true },\n    ]);\n    /**\n     * @param {?} optionsArr\n     * @return {?}\n     */\n    function _mergeOptions(optionsArr) {\n        return {\n            useJit: _lastDefined(optionsArr.map(function (options) { return options.useJit; })),\n            defaultEncapsulation: _lastDefined(optionsArr.map(function (options) { return options.defaultEncapsulation; })),\n            providers: _mergeArrays(optionsArr.map(function (options) { return options.providers; })),\n            missingTranslation: _lastDefined(optionsArr.map(function (options) { return options.missingTranslation; })),\n        };\n    }\n    /**\n     * @template T\n     * @param {?} args\n     * @return {?}\n     */\n    function _lastDefined(args) {\n        for (var /** @type {?} */ i = args.length - 1; i >= 0; i--) {\n            if (args[i] !== undefined) {\n                return args[i];\n            }\n        }\n        return undefined;\n    }\n    /**\n     * @param {?} parts\n     * @return {?}\n     */\n    function _mergeArrays(parts) {\n        var /** @type {?} */ result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, part); });\n        return result;\n    }\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Interface that defines how import statements should be generated.\n     * @abstract\n     */\n    var ImportResolver = (function () {\n        function ImportResolver() {\n        }\n        /**\n         * Converts a file path to a module name that can be used as an `import.\n         * I.e. `path/to/importedFile.ts` should be imported by `path/to/containingFile.ts`.\n         * @abstract\n         * @param {?} importedFilePath\n         * @param {?} containingFilePath\n         * @return {?}\n         */\n        ImportResolver.prototype.fileNameToModuleName = function (importedFilePath, containingFilePath) { };\n        /**\n         * Converts the given StaticSymbol into another StaticSymbol that should be used\n         * to generate the import from.\n         * @abstract\n         * @param {?} symbol\n         * @return {?}\n         */\n        ImportResolver.prototype.getImportAs = function (symbol) { };\n        /**\n         * Determine the airty of a type.\n         * @abstract\n         * @param {?} symbol\n         * @return {?}\n         */\n        ImportResolver.prototype.getTypeArity = function (symbol) { };\n        return ImportResolver;\n    }());\n\n    exports.VERSION = VERSION;\n    exports.TEMPLATE_TRANSFORMS = TEMPLATE_TRANSFORMS;\n    exports.CompilerConfig = CompilerConfig;\n    exports.JitCompiler = JitCompiler;\n    exports.DirectiveResolver = DirectiveResolver;\n    exports.PipeResolver = PipeResolver;\n    exports.NgModuleResolver = NgModuleResolver;\n    exports.DEFAULT_INTERPOLATION_CONFIG = DEFAULT_INTERPOLATION_CONFIG;\n    exports.InterpolationConfig = InterpolationConfig;\n    exports.NgModuleCompiler = NgModuleCompiler;\n    exports.ViewCompiler = ViewCompiler;\n    exports.isSyntaxError = isSyntaxError;\n    exports.syntaxError = syntaxError;\n    exports.TextAst = TextAst;\n    exports.BoundTextAst = BoundTextAst;\n    exports.AttrAst = AttrAst;\n    exports.BoundElementPropertyAst = BoundElementPropertyAst;\n    exports.BoundEventAst = BoundEventAst;\n    exports.ReferenceAst = ReferenceAst;\n    exports.VariableAst = VariableAst;\n    exports.ElementAst = ElementAst;\n    exports.EmbeddedTemplateAst = EmbeddedTemplateAst;\n    exports.BoundDirectivePropertyAst = BoundDirectivePropertyAst;\n    exports.DirectiveAst = DirectiveAst;\n    exports.ProviderAst = ProviderAst;\n    exports.ProviderAstType = ProviderAstType;\n    exports.NgContentAst = NgContentAst;\n    exports.PropertyBindingType = PropertyBindingType;\n    exports.templateVisitAll = templateVisitAll;\n    exports.CompileAnimationEntryMetadata = CompileAnimationEntryMetadata;\n    exports.CompileAnimationStateMetadata = CompileAnimationStateMetadata;\n    exports.CompileAnimationStateDeclarationMetadata = CompileAnimationStateDeclarationMetadata;\n    exports.CompileAnimationStateTransitionMetadata = CompileAnimationStateTransitionMetadata;\n    exports.CompileAnimationMetadata = CompileAnimationMetadata;\n    exports.CompileAnimationKeyframesSequenceMetadata = CompileAnimationKeyframesSequenceMetadata;\n    exports.CompileAnimationStyleMetadata = CompileAnimationStyleMetadata;\n    exports.CompileAnimationAnimateMetadata = CompileAnimationAnimateMetadata;\n    exports.CompileAnimationWithStepsMetadata = CompileAnimationWithStepsMetadata;\n    exports.CompileAnimationSequenceMetadata = CompileAnimationSequenceMetadata;\n    exports.CompileAnimationGroupMetadata = CompileAnimationGroupMetadata;\n    exports.identifierName = identifierName;\n    exports.identifierModuleUrl = identifierModuleUrl;\n    exports.viewClassName = viewClassName;\n    exports.rendererTypeName = rendererTypeName;\n    exports.hostViewClassName = hostViewClassName;\n    exports.dirWrapperClassName = dirWrapperClassName;\n    exports.componentFactoryName = componentFactoryName;\n    exports.CompileSummaryKind = CompileSummaryKind;\n    exports.tokenName = tokenName;\n    exports.tokenReference = tokenReference;\n    exports.CompileStylesheetMetadata = CompileStylesheetMetadata;\n    exports.CompileTemplateMetadata = CompileTemplateMetadata;\n    exports.CompileDirectiveMetadata = CompileDirectiveMetadata;\n    exports.createHostComponentMeta = createHostComponentMeta;\n    exports.CompilePipeMetadata = CompilePipeMetadata;\n    exports.CompileNgModuleMetadata = CompileNgModuleMetadata;\n    exports.TransitiveCompileNgModuleMetadata = TransitiveCompileNgModuleMetadata;\n    exports.ProviderMeta = ProviderMeta;\n    exports.flatten = flatten;\n    exports.templateSourceUrl = templateSourceUrl;\n    exports.sharedStylesheetJitUrl = sharedStylesheetJitUrl;\n    exports.ngModuleJitUrl = ngModuleJitUrl;\n    exports.templateJitUrl = templateJitUrl;\n    exports.createAotCompiler = createAotCompiler;\n    exports.AotCompiler = AotCompiler;\n    exports.analyzeNgModules = analyzeNgModules;\n    exports.analyzeAndValidateNgModules = analyzeAndValidateNgModules;\n    exports.extractProgramSymbols = extractProgramSymbols;\n    exports.GeneratedFile = GeneratedFile;\n    exports.StaticReflector = StaticReflector;\n    exports.StaticAndDynamicReflectionCapabilities = StaticAndDynamicReflectionCapabilities;\n    exports.StaticSymbol = StaticSymbol;\n    exports.StaticSymbolCache = StaticSymbolCache;\n    exports.ResolvedStaticSymbol = ResolvedStaticSymbol;\n    exports.StaticSymbolResolver = StaticSymbolResolver;\n    exports.unescapeIdentifier = unescapeIdentifier;\n    exports.AotSummaryResolver = AotSummaryResolver;\n    exports.SummaryResolver = SummaryResolver;\n    exports.COMPILER_PROVIDERS = COMPILER_PROVIDERS;\n    exports.JitCompilerFactory = JitCompilerFactory;\n    exports.platformCoreDynamic = platformCoreDynamic;\n    exports.createUrlResolverWithoutPackagePrefix = createUrlResolverWithoutPackagePrefix;\n    exports.createOfflineCompileUrlResolver = createOfflineCompileUrlResolver;\n    exports.DEFAULT_PACKAGE_URL_PROVIDER = DEFAULT_PACKAGE_URL_PROVIDER;\n    exports.UrlResolver = UrlResolver;\n    exports.getUrlScheme = getUrlScheme;\n    exports.ResourceLoader = ResourceLoader;\n    exports.ElementSchemaRegistry = ElementSchemaRegistry;\n    exports.Extractor = Extractor;\n    exports.I18NHtmlParser = I18NHtmlParser;\n    exports.MessageBundle = MessageBundle;\n    exports.Serializer = Serializer;\n    exports.Xliff = Xliff;\n    exports.Xmb = Xmb;\n    exports.Xtb = Xtb;\n    exports.DirectiveNormalizer = DirectiveNormalizer;\n    exports.ParserError = ParserError;\n    exports.ParseSpan = ParseSpan;\n    exports.AST = AST;\n    exports.Quote = Quote;\n    exports.EmptyExpr = EmptyExpr;\n    exports.ImplicitReceiver = ImplicitReceiver;\n    exports.Chain = Chain;\n    exports.Conditional = Conditional;\n    exports.PropertyRead = PropertyRead;\n    exports.PropertyWrite = PropertyWrite;\n    exports.SafePropertyRead = SafePropertyRead;\n    exports.KeyedRead = KeyedRead;\n    exports.KeyedWrite = KeyedWrite;\n    exports.BindingPipe = BindingPipe;\n    exports.LiteralPrimitive = LiteralPrimitive;\n    exports.LiteralArray = LiteralArray;\n    exports.LiteralMap = LiteralMap;\n    exports.Interpolation = Interpolation;\n    exports.Binary = Binary;\n    exports.PrefixNot = PrefixNot;\n    exports.MethodCall = MethodCall;\n    exports.SafeMethodCall = SafeMethodCall;\n    exports.FunctionCall = FunctionCall;\n    exports.ASTWithSource = ASTWithSource;\n    exports.TemplateBinding = TemplateBinding;\n    exports.RecursiveAstVisitor = RecursiveAstVisitor;\n    exports.AstTransformer = AstTransformer;\n    exports.TokenType = TokenType;\n    exports.Lexer = Lexer;\n    exports.Token = Token;\n    exports.EOF = EOF;\n    exports.isIdentifier = isIdentifier;\n    exports.isQuote = isQuote;\n    exports.SplitInterpolation = SplitInterpolation;\n    exports.TemplateBindingParseResult = TemplateBindingParseResult;\n    exports.Parser = Parser;\n    exports._ParseAST = _ParseAST;\n    exports.ERROR_COLLECTOR_TOKEN = ERROR_COLLECTOR_TOKEN;\n    exports.CompileMetadataResolver = CompileMetadataResolver;\n    exports.componentModuleUrl = componentModuleUrl;\n    exports.Text = Text;\n    exports.Expansion = Expansion;\n    exports.ExpansionCase = ExpansionCase;\n    exports.Attribute = Attribute$1;\n    exports.Element = Element;\n    exports.Comment = Comment;\n    exports.visitAll = visitAll;\n    exports.ParseTreeResult = ParseTreeResult;\n    exports.TreeError = TreeError;\n    exports.HtmlParser = HtmlParser;\n    exports.HtmlTagDefinition = HtmlTagDefinition;\n    exports.getHtmlTagDefinition = getHtmlTagDefinition;\n    exports.TagContentType = TagContentType;\n    exports.splitNsName = splitNsName;\n    exports.getNsPrefix = getNsPrefix;\n    exports.mergeNsAndName = mergeNsAndName;\n    exports.NAMED_ENTITIES = NAMED_ENTITIES;\n    exports.ImportResolver = ImportResolver;\n    exports.debugOutputAstAsTypeScript = debugOutputAstAsTypeScript;\n    exports.TypeScriptEmitter = TypeScriptEmitter;\n    exports.ParseLocation = ParseLocation;\n    exports.ParseSourceFile = ParseSourceFile;\n    exports.ParseSourceSpan = ParseSourceSpan;\n    exports.ParseErrorLevel = ParseErrorLevel;\n    exports.ParseError = ParseError;\n    exports.typeSourceSpan = typeSourceSpan;\n    exports.DomElementSchemaRegistry = DomElementSchemaRegistry;\n    exports.CssSelector = CssSelector;\n    exports.SelectorMatcher = SelectorMatcher;\n    exports.SelectorListContext = SelectorListContext;\n    exports.SelectorContext = SelectorContext;\n    exports.StylesCompileDependency = StylesCompileDependency;\n    exports.StylesCompileResult = StylesCompileResult;\n    exports.CompiledStylesheet = CompiledStylesheet;\n    exports.StyleCompiler = StyleCompiler;\n    exports.TemplateParseError = TemplateParseError;\n    exports.TemplateParseResult = TemplateParseResult;\n    exports.TemplateParser = TemplateParser;\n    exports.splitClasses = splitClasses;\n    exports.createElementCssSelector = createElementCssSelector;\n    exports.removeSummaryDuplicates = removeSummaryDuplicates;\n\n}));\n//# sourceMappingURL=compiler.umd.js.map"]}