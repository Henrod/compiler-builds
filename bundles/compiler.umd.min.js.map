{"version":3,"sources":["/home/travis/build/angular/angular/dist/packages-dist/compiler/bundles/compiler.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","compiler","core","this","_angular_core","templateVisitAll","visitor","asts","context","result","visit","ast","forEach","astResult","push","splitNsName","elementName","colonIndex","indexOf","Error","slice","isNgContainer","tagName","isNgContent","isNgTemplate","getNsPrefix","fullName","mergeNsAndName","prefix","localName","getHtmlTagDefinition","TAG_DEFINITIONS","toLowerCase","_DEFAULT_TAG_DEFINITION","dashCaseToCamelCase","input","replace","DASH_CASE_REGEXP","m","_i","arguments","length","toUpperCase","splitAtColon","defaultValues","_splitAt","splitAtPeriod","character","characterIndex","trim","visitValue","value","Array","isArray","visitArray","isStrictStringMap","visitStringMap","visitPrimitive","visitOther","isDefined","val","undefined","noUndefined","syntaxError","msg","error","ERROR_SYNTAX_ERROR","isSyntaxError","escapeRegExp","s","obj","Object","getPrototypeOf","STRING_MAP_PROTO","utf8Encode","str","encoded","index","codePoint","charCodeAt","low","String","fromCharCode","_sanitizeIdentifier","name","identifierName","compileIdentifier","reference","ref","StaticSymbol","identifier","ɵstringify","_anonymousTypeIndex","identifierModuleUrl","filePath","ɵreflector","importUri","viewClassName","compType","embeddedTemplateIndex","rendererTypeName","hostViewClassName","dirWrapperClassName","dirType","componentFactoryName","tokenName","token","tokenReference","createHostComponentMeta","hostTypeReference","compMeta","hostViewType","template","CssSelector","parse","getMatchingElementTemplate","CompileDirectiveMetadata","create","isHost","type","diDeps","lifecycleHooks","CompileTemplateMetadata","encapsulation","ViewEncapsulation","None","templateUrl","styles","styleUrls","ngContentSelectors","animations","isInline","externalStylesheets","interpolation","exportAs","changeDetection","ChangeDetectionStrategy","Default","inputs","outputs","host","isComponent","selector","providers","viewProviders","queries","viewQueries","componentViewType","rendererType","id","data","entryComponents","componentFactory","_normalizeArray","flatten","list","reduce","flat","item","flatItem","concat","sourceUrl","url","templateSourceUrl","ngModuleType","templateMeta","sharedStylesheetJitUrl","meta","pathParts","split","baseName","ngModuleJitUrl","moduleMeta","templateJitUrl","visitAstChildren","visitAll","visitBinary","left","right","visitChain","expressions","visitConditional","condition","trueExp","falseExp","visitFunctionCall","target","args","visitImplicitReceiver","visitInterpolation","visitKeyedRead","key","visitKeyedWrite","visitLiteralArray","visitLiteralMap","visitLiteralPrimitive","visitMethodCall","receiver","visitPipe","exp","visitPrefixNot","expression","visitNonNullAssert","visitPropertyRead","visitPropertyWrite","visitQuote","visitSafeMethodCall","visitSafePropertyRead","isWhitespace","code","$TAB","$SPACE","$NBSP","isDigit","$0","$9","isAsciiLetter","$a","$z","$A","$Z","isAsciiHexDigit","$f","$F","CompilerInjectable","x","assertArrayOfStrings","isDevMode","i","assertInterpolationSymbols","start_1","end_1","INTERPOLATION_BLACKLIST_REGEXPS","regexp","test","newCharacterToken","Token","TokenType","Character","newIdentifierToken","text","Identifier","newKeywordToken","Keyword","newOperatorToken","Operator","newStringToken","newNumberToken","n","Number","newErrorToken","message","isIdentifierStart","$_","$$","isIdentifier","scanner","_Scanner","peek","advance","$EOF","isIdentifierPart","isExponentStart","$e","$E","isExponentSign","$MINUS","$PLUS","isQuote","$SQ","$DQ","$BT","unescape","$n","$LF","$FF","$r","$CR","$t","$v","$VTAB","parseIntAutoRadix","parseInt","isNaN","_createInterpolateRegExp","config","pattern","start","end","RegExp","typeSourceSpan","kind","moduleUrl","sourceFileName","sourceFile","ParseSourceFile","ParseSourceSpan","ParseLocation","nodes","spanOf","sourceSpan","offset","Element","endSourceSpan","children","findNode","position","path","_super","class_1","apply","__extends","prototype","span","RecursiveVisitor","AstPath","tokenize","source","getTagDefinition","tokenizeExpansionForms","interpolationConfig","DEFAULT_INTERPOLATION_CONFIG","_Tokenizer","_unexpectedCharacterErrorMsg","charCode","char","_unknownEntityErrorMsg","entitySrc","isNotWhitespace","isNameEnd","$GT","$SLASH","$EQ","isPrefixEnd","isDigitEntityEnd","$SEMICOLON","isNamedEntityEnd","isExpansionFormStart","isInterpolationStart","$LBRACE","isExpansionCaseStart","compareCharCodeCaseInsensitive","code1","code2","toUpperCaseCharCode","mergeTextTokens","srcTokens","dstTokens","lastDstToken","TokenType$1","TEXT","parts","lastOnStack","stack","element","createI18nMessageFactory","_I18nVisitor","_expParser","meaning","description","toI18nMessage","_extractPlaceholderName","_CUSTOM_PH_EXP","extractMessages","implicitTags","implicitAttrs","_Visitor","extract","mergeTranslations","translations","merge","_isOpeningComment","Comment","startsWith","_isClosingComment","_getI18nAttr","p","attrs","find","attr","_I18N_ATTR","_parseMessageMeta","i18n","idIndex","ID_SEPARATOR","descIndex","MEANING_SEPARATOR","_a","meaningAndDesc","_b","getXmlTagDefinition","_TAG_DEFINITION","digest","sha1","serializeNodes","join","decimalDigest","_SerializerIgnoreIcuExpVisitor","map","a","computeMsgId","serializerVisitor","utf8","words32","stringToWords32","Endian","Big","len","w","b","c","d","e","h0","h1","h2","h3","h4","j","rol32","_c","fk","f","k","temp","add32","_d","_e","byteStringToHexString","words32ToByteString","fingerprint","hash32","hi","lo","him","lom","add64","rol64","byteStringToDecString","wordAt","Little","mix","sub32","add32to64","high","ah","al","bh","bl","carry","l","h","count","endian","byteAt","word","word32ToByteString","hex","toString","decimal","toThePower","addBigInt","numberTimesBigInt","reverse","y","sum","Math","max","tmpSum","num","product","bToThePower","serialize","node","_visitor","_escapeXml","_ESCAPED_CHARS","entry","getCtypeForTag","tag","getTypeForTag","digest$1","toPublicName","internalName","createLazyProperty","messages","valueFn","defineProperty","configurable","enumerable","get","set","_","createSerializer","format","Xmb","Xtb","Xliff2","Xliff","assetUrl","pkg","resolveIdentifier","runtime","createIdentifier","identifierToken","createIdentifierToken","expandNodes","expander","_Expander","ExpansionResult","isExpanded","errors","_expandPluralForm","cases","PLURAL_CASES","match","ExpansionError","valueSourceSpan","expansionResult","Attribute$1","switchAttr","switchValue","switchValueSourceSpan","_expandDefaultForm","_transformProvider","provider","useExisting","useValue","deps","useClass","useFactory","multi","_transformProviderAst","eager","ProviderAst","multiProvider","providerType","_resolveProvidersFromDirectives","directives","targetErrors","providersByToken","Map","directive","dirProvider","_resolveProviders","ProviderAstType","Component","Directive","directivesWithComponentFirst","filter","dir","PublicService","PrivateService","targetProvidersByToken","resolvedProvider","ProviderError","isUseValue","_getViewQueries","component","viewQueryId","query","_addQueryToTokenMap","queryId","_getContentQueries","contentQueryStartId","contentQueryId","contentQueries","directiveIndex","selectors","isStyleUrlResolvable","schemeMatch","URL_WITH_SCHEMA_REGEXP","extractStyleUrls","resolver","baseUrl","cssText","foundUrls","modifiedCssText","CSS_COMMENT_REGEXP","CSS_IMPORT_REGEXP","resolve","StyleWithImports","_isAnimationLabel","calcPossibleSecurityContexts","registry","propName","isAttribute","ctxs","elementNames","allKnownElementNames","notElementNames","Set","notSelectors","isElementSelector","possibleElementNames","has","securityContext","SecurityContext","NONE","from","sort","preparseElement","selectAttr","hrefAttr","relAttr","nonBindable","projectAs","lcAttrName","NG_CONTENT_SELECT_ATTR","LINK_STYLE_HREF_ATTR","LINK_STYLE_REL_ATTR","NG_NON_BINDABLE_ATTR","NG_PROJECT_AS","normalizeNgContentSelect","nodeName","PreparsedElementType","OTHER","NG_CONTENT","STYLE_ELEMENT","STYLE","SCRIPT_ELEMENT","SCRIPT","LINK_ELEMENT","LINK_STYLE_REL_VALUE","STYLESHEET","PreparsedElement","warnOnlyOnce","warnings","warningCounts","splitClasses","classAttrValue","createElementCssSelector","attributes","cssSelector","elNameNoNs","setElement","attrName","attrNameNoNs","attrValue","addAttribute","CLASS_ATTR","classes","className","addClassName","_isEmptyTextNode","Text","removeSummaryDuplicates","items","values","isEmptyExpression","ASTWithSource","EmptyExpr","isTemplate","el","enableLegacyTemplate","reportDeprecation","tagNoNs","TEMPLATE_ELEMENT","TEMPLATE_ELEMENT_DEPRECATION_WARNING","createUrlResolverWithoutPackagePrefix","UrlResolver","createOfflineCompileUrlResolver","getUrlScheme","_split","_ComponentIndex","Scheme","_buildFromEncodedParts","opt_scheme","opt_userInfo","opt_domain","opt_port","opt_path","opt_queryData","opt_fragment","out","uri","_splitRe","_removeDotSegments","leadingSlash","trailingSlash","segments","up","pos","segment","pop","unshift","_joinAndCanonicalizePath","Path","UserInfo","Domain","Port","QueryData","Fragment","_resolveUrl","base","encodeURI","baseParts","lastIndexOf","substring","isDirectiveMetadata","findLast","arr","ngfactoryFilePath","forceSourceFile","urlWithSuffix","splitTypescriptSuffix","stripGeneratedFileSuffix","GENERATED_FILE","isGeneratedFile","endsWith","lastDot","summaryFileName","fileName","fileNameWithoutSuffix","STRIP_SRC_FILE_SUFFIXES","summaryForJitFileName","stripSummaryForJitFileSuffix","JIT_SUMMARY_FILE","summaryForJitName","symbolName","stripSummaryForJitNameSuffix","JIT_SUMMARY_NAME","hasLifecycleHook","hook","getHookName","ɵLifecycleHooks","OnInit","OnDestroy","DoCheck","OnChanges","AfterContentInit","AfterContentChecked","AfterViewInit","AfterViewChecked","_isNgModuleMetadata","NgModule","_isPipeMetadata","Pipe","flattenArray","tree","resolveForwardRef","dedupeArray","array","flattenAndDedupeArray","isValidType","Type","componentModuleUrl","reflector","cmpMetadata","resourceUri","moduleId","scheme","MODULE_SUFFIX","stringifyType","extractIdentifiers","targetIdentifiers","_CompileValueConverter","componentStillLoadingError","ɵERROR_COMPONENT_TYPE","findReadVarNames","stmts","_ReadVarVisitor","visitAllStatements","varNames","applySourceSpanToStatementIfNeeded","stmt","transformer","_ApplySourceSpanTransformer","visitStatement","applySourceSpanToExpressionIfNeeded","expr","visitExpression","variable","ReadVarExpr","importExpr","typeParams","ExternalExpr","importType","typeModifiers","expressionType","ExpressionType","literalArr","LiteralArrayExpr","literalMap","quoted","LiteralMapExpr","LiteralMapEntry","not","NotExpr","assertNotNull","AssertNotNull","fn","params","body","FunctionExpr","literal","LiteralExpr","convertValueToOutputAst","_ValueOutputAstTransformer","providerDef","providerAst","flags","lifecycleHook","lifecycleHookToNodeFlag","multiProviderDef","singleProviderDef","providerExpr","providerFlags","depsExpr","tokenExpr","convertDeps","providerIndex","dep","depIndex","paramName","allParams","FnParam","DYNAMIC_TYPE","allDepDefs","depDef","exprs","depExprs","instantiate","callFn","ReturnStatement","INFERRED_TYPE","providerMeta","NULL_EXPR","tokenMeta","isValue","isSkipSelf","isOptional","nodeFlag","componentFactoryResolverProviderDef","entryComponentFactories","entryComponent","Identifiers","ComponentFactoryResolver","classMeta","NgModuleRef","CodegenComponentFactoryResolver","toBase64String","b64","i1","i2","i3","toBase64Digit","toBase64VLQ","digit","B64_DIGITS","escapeIdentifier","escapeDollar","alwaysQuote","_SINGLE_QUOTE_ESCAPE_STRING_RE","requiresQuotes","_LEGAL_IDENTIFIER_RE","_createIndent","res","_INDENT_WITH","debugOutputAstAsTypeScript","converter","_TsEmitterVisitor","_debugFilePath","fileNameToModuleName","containingFilePath","getImportAs","symbol","getTypeArity","ctx","EmitterVisitorContext","createRoot","Statement","Expression","Type$1","visitType","toSource","registerContext","specs","specs_1","spec","SECURITY_SCHEMA","_isPixelDimensionStyle","prop","stripComments","_commentRe","extractSourceMappingUrl","matcher","_sourceMappingUrlRe","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","_ruleRe","content","suffix","contentPrefix","BLOCK_PLACEHOLDER","blocks","rule","CssRule","inputParts","_curlyRe","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","CLOSE_CURLY","OPEN_CURLY","StringWithEscapedBlocks","getStylesVarName","convertActionBinding","localResolver","implicitReceiver","action","bindingId","DefaultLocalResolver","actionWithoutBuiltins","convertPropertyBindingBuiltins","createLiteralArrayConverter","argCount","createLiteralMapConverter","keys","createPipeConverter","_AstToIrVisitor","actionStmts","flattenStatements","_Mode","prependTemporaryDecls","temporaryCount","lastIndex","preventDefaultVar","lastStatement","returnExpr","convertStmtIntoExpression","createPreventDefaultVar","cast","notIdentical","toDeclStmt","StmtModifier","Final","ConvertActionBindingResult","converterFactory","convertBuiltins","convertPropertyBinding","expressionWithoutBuiltins","currValExpr","createCurrValueExpr","outputExpr","temporaryDeclaration","ConvertPropertyBindingResult","_BuiltinAstConverter","temporaryName","temporaryNumber","DeclareVarStmt","statements","ensureStatementMode","mode","ensureExpressionMode","convertToStatementIfNeeded","toStmt","arg","output","ExpressionStatement","needsAdditionalRootNode","astNodes","lastAstNode","EmbeddedTemplateAst","hasViewContainer","ElementAst","NgContentAst","elementBindingDef","inputAst","dirAst","PropertyBindingType","Attribute","Property","Animation","bindingType","Class","Style","unit","fixedAttrsDef","elementAst","mapResult","attrAst","hostAttributes","prevValue","mergeAttributeValue","attrValue1","attrValue2","CLASS_ATTR$1","STYLE_ATTR","callCheckStmt","nodeIndex","CHECK_VAR","VIEW_VAR","callUnwrapValue","bindingIdx","unwrapValue","findStaticQueryIds","staticQueryIds","dynamicQueryIds","queryMatches","child","childData","add","delete","staticViewQueryIds","nodeStaticQueryIds","elementEventNameAndTarget","eventAst","isAnimation","phase","calcStaticDynamicQueryFlags","queryIds","isFirst","serializeSummaries","summaryResolver","symbolResolver","symbols","types","toJsonSerializer","ToJsonSerializer","forJitSerializer","ForJitSerializer","resolvedSymbol","addOrMergeSummary","metadata","processedIndex","isLibraryFile","summary","resolveSummary","resolveSymbol","addLibType","addSourceType","summaryKind","CompileSummaryKind","ngModuleSummary","exportedDirectives","exportedPipes","summary_1","json","exportedVars","forJit","deserializeSummaries","symbolCache","deserializer","FromJsonDeserializer","deserialize","_resolveStyleStatements","compileResult","fileSuffix","dependencies","valuePlaceholder","getStaticSymbol","_stylesModuleUrl","isShimmed","stylesheetUrl","shim","_assertComponent","analyzeNgModules","programStaticSymbols","metadataResolver","_createNgModules","ngModules","symbolsMissingModule","_analyzeNgModules","analyzeAndValidateNgModules","programSymbols","ngModuleMetas","moduleMetasByRef","ngModule","ngModuleByPipeOrDirective","ngModulesByFile","ngDirectivesByFile","ngPipesByFile","ngInjectablesByFile","filePaths","isInjectable","ngModuleMeta","srcFileUrl","declaredDirectives","dirIdentifier","fileUrl","declaredPipes","pipeIdentifier","files","srcUrl","pipes","injectables","extractProgramSymbols","staticSymbolResolver","staticSymbols","isSourceFile","getSymbolsOf","symbolMeta","__symbolic","programPipesAndDirectives","ngModulePipesAndDirective","addNgModule","staticSymbol","getNgModuleMetadata","pipe","transitiveModule","modules","modMeta","isDirective","isPipe","isStaticType","shouldIgnore","expandedMessage","typeName","produceErrorMessage","mapStringMap","transform","HIDDEN_KEY","isPrimitive","o","positionalError","line","column","unescapeIdentifier","substr","createAotCompiler","compilerHost","options","urlResolver","StaticSymbolCache","AotSummaryResolver","StaticSymbolResolver","staticReflector","StaticReflector","StaticAndDynamicReflectionCapabilities","install","console","ɵConsole","htmlParser","I18NHtmlParser","HtmlParser","i18nFormat","missingTranslation","CompilerConfig","defaultEncapsulation","Emulated","useJit","normalizer","DirectiveNormalizer","loadResource","expressionParser","Parser","Lexer","elementSchemaRegistry","DomElementSchemaRegistry","tmplParser","TemplateParser","CompileMetadataResolver","NgModuleResolver","DirectiveResolver","PipeResolver","viewCompiler","ViewCompiler","AotCompiler","StyleCompiler","NgModuleCompiler","TypeScriptEmitter","locale","genFilePreamble","interpretStatements","resultVars","stmtsWithReturn","resultVar","_ExecutionContext","StatementInterpreter","_executeFunctionStatements","varValues","childCtx","createChildWihtLocalVars","vars","createDynamicClass","_classStmt","_ctx","propertyDescriptors","getters","getter","instanceCtx","methods","method","paramNames","param","writable","ctorParamNames","constructorMethod","ctor","_this","fields","field","superClass","parent","_declareFn","evalExpression","sourceUrl$$1","fnBody","fnArgNames","fnArgValues","argName","emptyFn","Function","bind","headerLines","toSourceMapGenerator","toJsComment","jitStatements","JitEmitterVisitor","returnStmt","getArgs","assertComponent","flattenSummaries","fn$$1","_initReflector","reflectionCapabilities","ɵReflectionCapabilities","_mergeOptions","optionsArr","_lastDefined","_mergeArrays","extendStatics","setPrototypeOf","__proto__","hasOwnProperty","__","constructor","VERSION","Version","TextAst","ngContentIndex","visitText","BoundTextAst","visitBoundText","AttrAst","visitAttr","BoundElementPropertyAst","visitElementProperty","BoundEventAst","handler","calcFullName","visitEvent","ReferenceAst","visitReference","VariableAst","visitVariable","references","visitElement","variables","visitEmbeddedTemplate","BoundDirectivePropertyAst","directiveName","templateName","visitDirectiveProperty","DirectiveAst","hostProperties","hostEvents","visitDirective","Builtin","visitNgContent","NullTemplateVisitor","RecursiveTemplateAstVisitor","call","visitChildren","cb","results","t","members","assertNoMembers","JSON","stringify","cache","declarationFile","memberSuffix","TagContentType","RAW_TEXT","ESCAPABLE_RAW_TEXT","PARSABLE_DATA","NAMED_ENTITIES","Aacute","aacute","Acirc","acirc","acute","AElig","aelig","Agrave","agrave","alefsym","Alpha","alpha","amp","and","ang","apos","Aring","aring","asymp","Atilde","atilde","Auml","auml","bdquo","Beta","beta","brvbar","bull","cap","Ccedil","ccedil","cedil","cent","Chi","chi","circ","clubs","cong","copy","crarr","cup","curren","dagger","Dagger","darr","dArr","deg","Delta","delta","diams","divide","Eacute","eacute","Ecirc","ecirc","Egrave","egrave","empty","emsp","ensp","Epsilon","epsilon","equiv","Eta","eta","ETH","eth","Euml","euml","euro","exist","fnof","forall","frac12","frac14","frac34","frasl","Gamma","gamma","ge","gt","harr","hArr","hearts","hellip","Iacute","iacute","Icirc","icirc","iexcl","Igrave","igrave","image","infin","int","Iota","iota","iquest","isin","Iuml","iuml","Kappa","kappa","Lambda","lambda","lang","laquo","larr","lArr","lceil","ldquo","le","lfloor","lowast","loz","lrm","lsaquo","lsquo","lt","macr","mdash","micro","middot","minus","Mu","mu","nabla","nbsp","ndash","ne","ni","notin","nsub","Ntilde","ntilde","Nu","nu","Oacute","oacute","Ocirc","ocirc","OElig","oelig","Ograve","ograve","oline","Omega","omega","Omicron","omicron","oplus","or","ordf","ordm","Oslash","oslash","Otilde","otilde","otimes","Ouml","ouml","para","permil","perp","Phi","phi","Pi","pi","piv","plusmn","pound","prime","Prime","prod","Psi","psi","quot","radic","rang","raquo","rarr","rArr","rceil","rdquo","real","reg","rfloor","Rho","rho","rlm","rsaquo","rsquo","sbquo","Scaron","scaron","sdot","sect","shy","Sigma","sigma","sigmaf","sim","spades","sub","sube","sup","sup1","sup2","sup3","supe","szlig","Tau","tau","there4","Theta","theta","thetasym","thinsp","THORN","thorn","tilde","times","trade","Uacute","uacute","uarr","uArr","Ucirc","ucirc","Ugrave","ugrave","uml","upsih","Upsilon","upsilon","Uuml","uuml","weierp","Xi","xi","Yacute","yacute","yen","yuml","Yuml","Zeta","zeta","zwj","zwnj","HtmlTagDefinition","closedByChildren","requiredParents","implicitNamespacePrefix","contentType","closedByParent","isVoid","_f","ignoreFirstLf","canSelfClose","parentToAdd","requireExtraParent","currentParent","lcParent","isParentTemplate","isClosedByChild","area","embed","link","img","hr","br","track","wbr","thead","tbody","tfoot","tr","td","th","col","svg","math","li","dt","dd","rb","rt","rtc","rp","optgroup","option","pre","listing","style","script","title","textarea","_SELECTOR_REGEXP","classNames","_addResult","cssSel","current","inNot","exec","hasElementSelector","classAttr","klass","notSelector","SelectorMatcher","_elementMap","_elementPartialMap","_classMap","_classPartialMap","_attrValueMap","_attrValuePartialMap","_listContexts","createNotMatcher","notMatcher","addSelectables","cssSelectors","callbackCtxt","listContext","SelectorListContext","_addSelectable","selectable","SelectorContext","isTerminal","_addTerminal","_addPartial","terminalMap","terminalValuesMap","partialMap","partialValuesMap","terminalList","matchedCallback","alreadyMatched","_matchTerminal","_matchPartial","selectables","starSelectables","finalize","nestedSelector","cbContext","callback","ValueTransformer","SyncAsyncResult","syncResult","asyncResult","Promise","HOST_REG_EXP","CompileAnimationEntryMetadata","definitions","CompileAnimationStateMetadata","CompileAnimationStateDeclarationMetadata","stateNameExpr","CompileAnimationStateTransitionMetadata","stateChangeExpr","steps","CompileAnimationMetadata","CompileAnimationKeyframesSequenceMetadata","CompileAnimationStyleMetadata","CompileAnimationAnimateMetadata","timings","CompileAnimationWithStepsMetadata","CompileAnimationSequenceMetadata","CompileAnimationGroupMetadata","Injectable","CompileStylesheetMetadata","toSummary","anim","hostListeners","matches","inputsMap","bindConfig","outputsMap","CompilePipeMetadata","pure","CompileNgModuleMetadata","bootstrapComponents","importedModules","exportedModules","schemas","TransitiveCompileNgModuleMetadata","directivesSet","exportedDirectivesSet","pipesSet","exportedPipesSet","modulesSet","entryComponentsSet","addProvider","addDirective","addExportedDirective","addPipe","addExportedPipe","addModule","addEntryComponent","ec","componentType","ProviderMeta","ParserError","errLocation","ctxLocation","ParseSpan","AST","Quote","uninterpretedExpression","location","ImplicitReceiver","Chain","Conditional","PropertyRead","PropertyWrite","SafePropertyRead","KeyedRead","KeyedWrite","BindingPipe","LiteralPrimitive","LiteralArray","LiteralMap","Interpolation","strings","Binary","operation","PrefixNot","NonNullAssert","MethodCall","SafeMethodCall","FunctionCall","TemplateBinding","keyIsVar","NullAstVisitor","RecursiveAstVisitor","AstTransformer","$BANG","$HASH","$PERCENT","$AMPERSAND","$LPAREN","$RPAREN","$STAR","$COMMA","$PERIOD","$COLON","$LT","$QUESTION","$X","$LBRACKET","$BACKSLASH","$RBRACKET","$CARET","$u","$x","$BAR","$RBRACE","InterpolationConfig","fromArray","markers","KEYWORDS","tokens","scanToken","decorators","ctorParameters","numValue","strValue","isCharacter","isNumber","isString","isOperator","operater","isKeyword","isKeywordLet","isKeywordAs","isKeywordNull","isKeywordUndefined","isKeywordTrue","isKeywordFalse","isKeywordThis","isError","toNumber","EOF","scanIdentifier","scanNumber","scanCharacter","scanString","scanOperator","scanComplexOperator","one","twoCode","two","threeCode","three","simple","parseFloat","quote","buffer","marker","unescapedCode","last","SplitInterpolation","offsets","TemplateBindingParseResult","templateBindings","_lexer","parseAction","_checkNoInterpolation","sourceToLex","_stripComments","_ParseAST","parseChain","parseBinding","_parseBindingAst","parseSimpleBinding","SimpleExpressionChecker","check","_reportError","_parseQuote","prefixSeparatorIndex","parseTemplateBindings","prefixToken","prefixTokens","parseInterpolation","splitInterpolation","expressionText","_findInterpolationErrorColumn","wrapLiteralPrimitive","_commentStart","outerQuote","nextChar","partInErrIdx","inputLength","rparensExpected","rbracketsExpected","rbracesExpected","next","inputIndex","optionalCharacter","peekKeywordLet","peekKeywordAs","expectCharacter","optionalOperator","op","expectOperator","operator","expectIdentifierOrKeyword","expectIdentifierOrKeywordOrString","parsePipe","parseExpression","parseConditional","parseLogicalOr","yes","no","parseLogicalAnd","parseEquality","parseRelational","parseAdditive","parseMultiplicative","parsePrefix","parseCallChain","parsePrimary","parseAccessMemberOrMethodCall","parseCallArguments","elements","parseExpressionList","parseLiteralMap","literalValue","terminator","isSafe","positionals","expectTemplateBindingKey","operatorFound","bindings","rawKey","letStart","start_2","letName","locationText","skip","file","moveBy","ch","priorLine","getContext","maxChars","maxLines","startOffset","endOffset","ctxChars","ctxLines","before","after","details","ParseErrorLevel","WARNING","ERROR","ParseError","level","contextStr","parentOf","childOf","first","Expansion","visitExpansion","ExpansionCase","expSourceSpan","visitExpansionCase","valueSpan","visitAttribute","startSourceSpan","visitComment","TAG_OPEN_START","TAG_OPEN_END","TAG_OPEN_END_VOID","TAG_CLOSE","COMMENT_START","COMMENT_END","CDATA_START","CDATA_END","ATTR_NAME","ATTR_VALUE","DOC_TYPE","EXPANSION_FORM_START","EXPANSION_CASE_VALUE","EXPANSION_CASE_EXP_START","EXPANSION_CASE_EXP_END","EXPANSION_FORM_END","Token$1","TokenError","errorMsg","tokenType","TokenizeResult","_CR_OR_CRLF_REGEXP","_ControlFlowError","_file","_getTagDefinition","_tokenizeIcu","_interpolationConfig","_peek","_nextPeek","_index","_line","_column","_expansionCaseStack","_inInterpolation","_input","_length","_advance","_processCarriageReturns","_getLocation","_attemptCharCode","_consumeCdata","_consumeComment","_consumeDocType","_consumeTagClose","_consumeTagOpen","_tokenizeExpansionForm","_consumeText","_beginToken","_endToken","_consumeExpansionFormStart","_isInExpansionForm","_consumeExpansionCaseStart","_isInExpansionCase","_consumeExpansionCaseEnd","_consumeExpansionFormEnd","_getSpan","_currentTokenStart","_currentTokenType","_createError","_attemptCharCodeCaseInsensitive","_requireCharCode","_attemptStr","chars","initialPosition","_savePosition","_restorePosition","_attemptStrCaseInsensitive","_requireStr","_attemptCharCodeUntilFn","predicate","_requireCharCodeUntilFn","_attemptUntilChar","_readChar","decodeEntities","_decodeEntity","startPosition","isHex","numberStart","strNum","entity","_consumeRawText","firstCharOfEnd","attemptEndRest","tagCloseStart","textStart","textToken","_consumePrefixAndName","nameOrPrefixStart","nameStart","lowercaseTagName","savedPos","_consumeTagOpenStart","_consumeAttributeName","_consumeAttributeValue","_consumeTagOpenEnd","contentTokenType","_consumeRawTextWithTagClose","prefixAndName","quoteChar","valueStart","_readUntil","_isTextEnd","nbTokens","TreeError","ParseTreeResult","rootNodes","Parser$1","parseExpansionForms","tokensAndErrors","treeAndErrors","_TreeBuilder","build","_rootNodes","_errors","_elementStack","_consumeStartTag","_consumeEndTag","_closeVoidElement","_consumeExpansion","prev","_advanceIf","startToken","_addToParent","expCase","_parseExpansionCase","_collectExpansionExpTokens","parsedExp","expansionFormStack","_getParentElement","startTagToken","_consumeAttr","_getElementFullName","selfClosing","tagDef","_pushElement","_popElement","parentEl","_getParentElementSkippingContainers","container","newParent","_insertBeforeContainer","endTagToken","errMsg","stackIndex","splice","valueToken","parentElement","Message","placeholders","placeholderToMessage","sources","startLine","startCol","endLine","endCol","Text$1","Container","visitContainer","Icu","visitIcu","TagPlaceholder","startName","closeName","visitTagPlaceholder","Placeholder","visitPlaceholder","IcuPlaceholder","visitIcuPlaceholder","CloneVisitor","icu","expressionPlaceholder","ph","RecurseVisitor","TAG_TO_PLACEHOLDER_NAMES","A","B","BR","EM","H1","H2","H3","H4","H5","H6","HR","I","LI","LINK","OL","P","Q","S","SMALL","SUB","SUP","TBODY","TD","TFOOT","TH","THEAD","TR","TT","U","UL","PlaceholderRegistry","_placeHolderNameCounts","_signatureToName","getStartTagPlaceholderName","signature","_hashTag","upperTag","_generateUniqueName","getCloseTagPlaceholderName","_hashClosingTag","getPlaceholderName","upperName","uniqueName","getUniquePlaceholder","strAttrs","seen","_expressionParser","_isIcu","_icuDepth","_placeholderRegistry","_placeholderToContent","_placeholderToMessage","i18nodes","startPhName","closePhName","attribute","_visitTextWithInterpolation","comment","i18nIcuCases","i18nIcu","caze","expPh","phName","icuCase","sDelimiter","eDelimiter","lastStringIdx","I18nError","_I18N_ATTR_PREFIX","_I18N_COMMENT_PREFIX_REGEXP","ExtractionResult","_VisitorMode","Extract","Merge","_implicitTags","_implicitAttrs","_init","_inI18nBlock","_messages","_translations","wrapper","translatedNode","_mode","_mayBeAddBlockChildren","wasInIcu","_inIcu","_isInTranslatableSection","_addMessage","isOpening","isClosing","_inI18nNode","_depth","_blockStartDepth","_closeTranslatableSection","_blockChildren","_blockMeaningAndDesc","_translateMessage","_openTranslatableSection","wasInI18nNode","wasInImplicitNode","_inImplicitNode","childNodes","translatedChildNodes","i18nAttr","i18nMeta","isImplicit","some","isTopLevelImplicit","isTranslatable","visitNodes","visited","_visitAttributesOf","translatedAttrs","_translateAttributes","_msgCountAtSectionStart","_createI18nMessage","explicitAttrNameToValue","implicitAttrNames","msgMeta","i18nParsedMessageMeta","translatedAttributes","directChildren","startIndex","significantChildren","XmlTagDefinition","XmlParser","_SerializerVisitor","strCases","Serializer","write","load","createNameMapper","SimplePlaceholderMapper","mapName","internalToPublic","publicToNextId","publicToInternal","toInternalName","publicName","visitPlaceholderName","nextId","_Visitor$1","visitTag","_serializeAttributes","strChildren","visitDeclaration","decl","visitDoctype","doctype","rootTag","dtd","Declaration","unescapedAttrs","Doctype","Tag","Text$2","unescapedValue","CR","ws","_VERSION","_XMLNS","_DEFAULT_SOURCE_LANG","_PLACEHOLDER_TAG","_FILE_TAG","_SOURCE_TAG","_TARGET_TAG","_UNIT_TAG","_CONTEXT_GROUP_TAG","_CONTEXT_TAG","_WriteVisitor","transUnits","contextTags","contextGroupTag","purpose","context-type","transUnit","datatype","priority","source-language","original","xliff","version","xmlns","encoding","xliffParser","XliffParser","msgIdToHtml","i18nNodesByMsgId","XmlToI18n","msgId","convert","i18nNodes","ctype","startTagPh","closeTagPh","_locale","_unitMlString","_msgIdToHtml","xml","idAttr","_addError","innerTextStart","innerTextEnd","innerText","localeAttr","expansion","expansionCase","xmlIcu","nameAttr","caseMap","_VERSION$1","_XMLNS$1","_DEFAULT_SOURCE_LANG$1","_PLACEHOLDER_TAG$1","_PLACEHOLDER_SPANNING_TAG","_XLIFF_TAG","_SOURCE_TAG$1","_TARGET_TAG$1","_UNIT_TAG$1","_WriteVisitor$1","units","notes","category","srcLang","xliff2Parser","Xliff2Parser","XmlToI18n$1","tagPh","_nextPlaceholderId","disp","tagPc","equivStart","equivEnd","dispStart","dispEnd","versionAttr","startAttr","endAttr","startId","endId","_MESSAGES_TAG","_MESSAGE_TAG","_PLACEHOLDER_TAG$2","_EXEMPLE_TAG","_SOURCE_TAG$2","_DOCTYPE","exampleVisitor","ExampleVisitor","_Visitor$2","rootNode","sourceTags","addDefaultExamples","startEx","closeEx","exText","_TRANSLATIONS_TAG","_TRANSLATION_TAG","_PLACEHOLDER_TAG$3","xtbParser","XtbParser","XmlToI18n$2","xtb","_bundleDepth","langAttr","TranslationBundle","_i18nNodesByMsgId","mapperFactory","missingTranslationStrategy","MissingTranslationStrategy","Warning","_i18nToHtml","I18nToHtmlVisitor","serializer","digestFn","srcMsg","html","_digest","_mapperFactory","_missingTranslationStrategy","_console","_contextStack","_convertToText","_srcMsg","_mapper","mapper","warn","_htmlParser","translationsFormat","_translationBundle","parseResult","CORE","ANALYZE_FOR_ENTRY_COMPONENTS","ElementRef","ViewContainerRef","ChangeDetectorRef","QueryList","TemplateRef","ɵCodegenComponentFactoryResolver","ComponentFactory","ComponentRef","NgModuleFactory","createModuleFactory","ɵcmf","moduleDef","ɵmod","moduleProviderDef","ɵmpd","RegisterModuleFactoryFn","ɵregisterModuleFactory","Injector","LOCALE_ID","TRANSLATIONS_FORMAT","inlineInterpolate","ɵinlineInterpolate","interpolate","ɵinterpolate","EMPTY_ARRAY","ɵEMPTY_ARRAY","EMPTY_MAP","ɵEMPTY_MAP","Renderer","viewDef","ɵvid","elementDef","ɵeld","anchorDef","ɵand","textDef","ɵted","directiveDef","ɵdid","ɵprd","queryDef","ɵqud","pureArrayDef","ɵpad","pureObjectDef","ɵpod","purePipeDef","ɵppd","pipeDef","ɵpid","nodeValue","ɵnov","ngContentDef","ɵncd","ɵunv","createRendererType2","ɵcrt","RendererType2","ViewDefinition","createComponentFactory","ɵccf","expanded","ProviderViewContext","ProviderElementContext","viewContext","_parent","_isViewRoot","_directiveAsts","refs","_sourceSpan","_transformedProviders","_seenProviders","_hasViewContainer","_queriedTokens","_attrs","directivesMeta","directiveAst","_allProviders","_contentQueries","_addQueryReadsTo","templateRefId","refAst","defaultQueryValue","_getOrCreateLocalProvider","afterElement","lazyProviders","eagerProviders","sortedProviderTypes","transformProviders","sortedDirectives","dir1","dir2","allMatches","defaultValue","queryReadTokens","_getQueriesFor","queryValue","read","tokenRef","currentEl","distance","descendants","requestingProviderType","transformedProviderAst","transformedProviders","transformedUseValue","transformedUseExisting","transformedDeps","existingDiDep","_getDependency","_getLocalDependency","currElement","currEager","isSelf","prevElement","NgModuleProviderAnalyzer","extraProviders","ngModuleProvider","errorString","requestorSourceSpan","foundLocal","ElementSchemaRegistry","hasProperty","schemaMetas","hasElement","getMappedPropName","getDefaultComponentElementName","validateProperty","validateAttribute","normalizeAnimationStyleProperty","normalizeAnimationStyleValue","camelCaseProp","userProvidedProp","style$$1","PROPERTY_PARTS_SEPARATOR","ATTRIBUTE_PREFIX","CLASS_PREFIX","STYLE_PREFIX","ANIMATE_PROP_PREFIX","BoundPropertyType","DEFAULT","LITERAL_ATTR","ANIMATION","BoundProperty","BindingParser","_exprParser","_schemaRegistry","_targetErrors","pipesByName","_usedPipes","getUsedPipes","createDirectiveHostPropertyAsts","dirMeta","elementSelector","boundProps_1","parsePropertyBinding","createElementPropertyAst","createDirectiveHostEventAsts","targetEventAsts_1","parseEvent","sourceInfo","_reportExpressionParserErrors","_checkPipes","parseInlineTemplateBinding","targetMatchableAttrs","targetProps","targetVars","_parseTemplateBindings","binding","_parsePropertyAst","parseLiteralAttr","bindingsResult","warning","_parseAnimation","isAnimationProp","_parseBinding","parsePropertyInterpolation","isHostBinding","boundProp","boundPropertyName","securityContexts","_validatePropertyOrAttributeName","nsSeparatorIdx","ns","targetEvents","_parseAnimationEvent","_parseEvent","eventName","_parseAction","errors_1","collector","PipeCollector","pipeName","pipeMeta","isAttr","report","BIND_NAME_REGEXP","KW_BIND_IDX","KW_LET_IDX","KW_REF_IDX","KW_ON_IDX","KW_BINDON_IDX","KW_AT_IDX","IDENT_KW_IDX","IDENT_BANANA_BOX_IDX","IDENT_PROPERTY_IDX","IDENT_EVENT_IDX","TEMPLATE_ATTR","TEMPLATE_ATTR_PREFIX","TEXT_CSS_SELECTOR","TEMPLATE_ATTR_DEPRECATION_WARNING","TEMPLATE_TRANSFORMS","InjectionToken","TemplateParseError","TemplateParseResult","templateAst","usedPipes","_config","transforms","tryParse","tryParseHtml","expandHtml","getInterpolationConfig","htmlAstWithErrors","uniqDirectives","uniqPipes","providerViewContext","bindingParser","parseVisitor","TemplateParseVisitor","EMPTY_ELEMENT_CONTEXT","_assertNoReferenceDuplicationOnTemplate","forced","expandedHtmlAst","existingReferences","Optional","Inject","_bindingParser","_schemas","selectorMatcher","directivesIndex","ngContentCount","findNgContentIndex","queryStartIndex","preparsedElement","matchableAttrs","elementOrDirectiveProps","elementOrDirectiveRefs","elementVars","events","templateElementOrDirectiveProps","templateMatchableAttrs","templateElementVars","hasInlineTemplates","isTemplateElement","templateBindingsSource","hasBinding","_parseAttr","normalizedName","_normalizeAttributeName","hasTemplateBinding","elementCssSelector","_parseDirectives","directiveMetas","matchElement","boundDirectivePropNames","directiveAsts","_createDirectiveAsts","elementProps","_createElementPropertyAsts","isViewRoot","providerContext","NON_BINDABLE_VISITOR","ElementContext","parsedElement","projectionSelector","every","_assertAllEventsPublishedByDirectives","_assertNoComponentsNorElementBindingsOnTemplate","transformedDirectiveAsts","transformedHasViewContainer","_assertElementExists","_assertOnlyOneComponent","ngContentIndex_1","templateQueryStartIndex","templateSelector","templateDirectiveMetas","templateBoundDirectivePropNames","templateDirectiveAsts","templateElementProps","templateProviderContext","targetRefs","srcSpan","bindParts","_parseVariable","_parseReference","_parseAssignmentEvent","ElementOrDirectiveRef","size","props","elementSourceSpan","targetReferences","targetBoundDirectivePropNames","matchedReferences","directiveProperties","_checkPropertiesInSchema","_createDirectivePropertyAsts","elOrDirRef","refToken","boundProps","targetBoundDirectiveProps","boundPropsByName_1","isLiteral","dirProp","elProp","boundElementProps","_findComponentDirectives","_findComponentDirectiveNames","componentTypeNames","elName","allDirectiveEvents","event","NonBindableVisitor","attrNameAndValues","_ngContentIndexMatcher","_wildcardNgContentIndex","wildcardNgContentIndex","ngContentIndices","ResourceLoader","DEFAULT_PACKAGE_URL_PROVIDER","provide","PACKAGE_ROOT_URL","_packagePrefix","resolvedUrl","resolvedParts","_resourceLoader","_urlResolver","_resourceLoaderCache","clearCache","clear","clearCacheFor","normalizedDirective","stylesheet","_fetch","normalizeTemplate","prenormData","normalizedTemplateSync","normalizedTemplateAsync","normalizeTemplateSync","normalizeTemplateAsync","then","normalizedTemplate","normalizeExternalStylesheets","prenomData","normalizeLoadedTemplate","templateAbsUrl","rootNodesAndErrors","templateMetadataStyles","normalizeStylesheet","TemplatePreparseVisitor","templateStyles","_loadMissingExternalStylesheets","loadedStylesheets","all","styleUrl","loadedStyle","allStyleUrls","allStyles","styleWithImports","ngNonBindableStackCount","textContent_1","_reflector","typeMetadata","annotations","throwIfNotFound","propertyMetadata","propMetadata","_mergeWithPropertyMetadata","dm","directiveType","Input","bindingPropertyName","Output","hostBindings","HostBinding","hostBinding","hostPropertyName","startWith","HostListener","hostListener","Query","_merge","_extractPublicName","def","_dedupeBindings","names","reversedResult","mergedInputs","mergedOutputs","mergedHost","assign","mergedQueries","ɵReflectorReader","isNgModule","metas","annotation","SummaryResolver","getLibraryFileName","addSummary","JitSummaryResolver","_summaries","ERROR_COLLECTOR_TOKEN","_ngModuleResolver","_directiveResolver","_pipeResolver","_summaryResolver","_directiveNormalizer","_staticSymbolCache","_errorCollector","_nonNormalizedDirectiveCache","_directiveCache","_summaryCache","_pipeCache","_ngModuleCache","_ngModuleOfTypes","_createProxyClass","baseType","delegate","proxyClass","setDelegate","overriddenName","getGeneratedClass","getComponentViewClass","getHostComponentViewClass","getHostComponentType","HostClass","getRendererType","getComponentFactory","hostView","initComponentFactory","_loadSummary","typeSummary","loadDirectiveMetadata","isSync","getNonNormalizedDirectiveMetadata","createDirectiveMetadata","templateMetadata","normalizedDirMeta","cacheEntry","nonNormalizedTemplateMetadata","changeDetectionStrategy","entryComponentMetadata","_getProvidersMetadata","_getEntryComponentMetadata","_getQueriesMetadata","_getTypeMetadata","getDirectiveMetadata","getDirectiveSummary","dirSummary","getNgModuleSummary","moduleType","moduleSummary","loadNgModuleDirectiveAndPipeMetadata","loading","promise","_loadPipeMetadata","compileMeta","exportedNonModuleIdentifiers","imports","importedType","importedModuleType","moduleWithProviders","_checkSelfImport","importedModuleSummary","_getTypeDescriptor","exportedType","exportedModuleSummary","_getIdentifierMetadata","_getTransitiveNgModuleMetadata","declarations","declaredType","declaredIdentifier","_addTypeToModule","exportedId","bootstrap","oldModule","modulesByToken","modSummary","mod","comp","addedTokens","prevModules","moduleRef","ann","getInjectableSummary","_getInjectableMetadata","throwOnUnknownDeps","_getDependenciesMetadata","ɵLIFECYCLE_HOOKS_VALUES","_getFactoryMetadata","getPipeMetadata","pipeType","getPipeSummary","pipeSummary","getOrLoadPipeMetadata","pipeAnnotation","typeOrFunc","hasUnknownDeps","parameters","dependenciesMetadata","paramEntry","Host","Self","SkipSelf","attributeName","_getTokenMetadata","depsTokens","compileToken","targetEntryComponents","debugInfo","compileProviders","providerIdx","_validateProvider","providersInfo","soFar","seenProvider","seenProviderIdx","_getEntryComponentsFromProvider","getProviderMetadata","components","collectedIdentifiers","compileDeps","compileTypeMetadata","compileFactoryMetadata","isViewQuery","propertyName","_getQueryMetadata","_queryVarBindings","q","varName","otherType","TypeModifier","Const","modifiers","hasModifier","modifier","BuiltinTypeName","Dynamic","Bool","Int","Inferred","BuiltinType","visitBuiltintType","visitExpressionType","ArrayType","of","visitArrayType","MapType","valueType","visitMapType","BOOL_TYPE","BinaryOperator","Equals","NotEquals","Identical","NotIdentical","Minus","Plus","Divide","Multiply","Modulo","And","Or","Lower","LowerEquals","Bigger","BiggerEquals","ReadPropExpr","ReadKeyExpr","callMethod","InvokeMethodExpr","InvokeFunctionExpr","InstantiateExpr","conditional","trueCase","falseCase","ConditionalExpr","equals","rhs","BinaryOperatorExpr","notEquals","identical","plus","multiply","modulo","lower","lowerEquals","bigger","biggerEquals","isBlank","TYPED_NULL_EXPR","CastExpr","BuiltinVar","This","Super","CatchError","CatchStack","builtin","visitReadVarExpr","WriteVarExpr","visitWriteVarExpr","WriteKeyExpr","visitWriteKeyExpr","WritePropExpr","visitWritePropExpr","BuiltinMethod","ConcatArray","SubscribeObservable","Bind","visitInvokeMethodExpr","visitInvokeFunctionExpr","classExpr","visitInstantiateExpr","visitLiteralExpr","visitExternalExpr","visitConditionalExpr","visitNotExpr","visitAssertNotNullExpr","visitCastExpr","visitFunctionExpr","DeclareFunctionStmt","lhs","visitBinaryOperatorExpr","visitReadPropExpr","visitReadKeyExpr","entries","visitLiteralArrayExpr","visitLiteralMapExpr","CommaExpr","visitCommaExpr","Private","visitDeclareVarStmt","visitDeclareFunctionStmt","visitExpressionStmt","visitReturnStmt","AbstractClassPart","ClassMethod","ClassGetter","ClassStmt","visitDeclareClassStmt","IfStmt","visitIfStmt","TryCatchStmt","bodyStmts","catchStmts","visitTryCatchStmt","ThrowStmt","visitThrowStmt","AstTransformer$1","transformExpr","transformStmt","visitAllExpressions","mapType","ctorMethod","visitCommentStmt","RecursiveAstVisitor$1","_clone","clone","QUOTED_KEYS","quotedSet","NgModuleCompileResult","ngModuleFactoryVar","LOG_VAR","compile","providerParser","providerDefs","ngModuleDef","ngModuleDefFactory","ngModuleFactoryStmt","registerFactoryStmt","VERSION$1","JS_B64_PREFIX","SourceMapGenerator","sourcesContent","lines","lastCol0","hasMappings","addSource","addLine","addMapping","col0","sourceLine0","sourceCol0","currentLine","toJSON","sourcesIndex","mappings","lastSourceIndex","lastSourceLine0","lastSourceCol0","segAsStr","sourceRoot","CATCH_ERROR_VAR$1","CATCH_STACK_VAR$1","_EmittedLine","indent","partsLength","srcSpans","_exportedVars","_indent","_classes","_lines","isExportedVar","println","lastPart","print","lineIsEmpty","_currentLine","lineLength","newLine","removeEmptyLastLine","incIndent","decIndent","pushClass","clazz","popClass","sourceLines","sourceFilePath","genFilePath","startsAtLine","firstOffsetMapped","mapFirstOffsetIfNeeded","lineIdx","spans","spanIdx","sourceLine","sourceCol","AbstractEmitterVisitor","_escapeDollarInStrings","hasElseCase","lineWasEmpty","getBuiltinMethodName","opStr","visitAllObjects","separator","incrementedIndent","_importResolver","emitStatements","srcFilePath","preamble","preambleLines","reexports","exportedFilePath","reexportsCode","reexport","as","importsWithPrefixes","importedFilePath","sm","_genFilePath","typeExpression","defaultType","_visitIdentifier","_resolveStaticSymbol","_printColonType","_visitClassField","_visitClassConstructor","_visitClassGetter","_visitClassMethod","_visitParams","typeStr","arity","importReference","suppliedParameters","additionalParameters","HTML","URL","RESOURCE_URL","BOOLEAN","NUMBER","STRING","OBJECT","SCHEMA","_ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","_schema","encodedType","strType","strProperties","properties","typeNames","superName","superType","property","schema","NO_ERRORS_SCHEMA","CUSTOM_ELEMENTS_SCHEMA","elementProperties","strVal","valAndSuffixMatch","ShadowCss","strictStyling","shimCssText","hostSelector","sourceMappingUrl","_insertDirectives","_scopeCssText","_insertPolyfillDirectivesInCssText","_insertPolyfillRulesInCssText","_cssContentNextSelectorRe","_cssContentRuleRe","scopeSelector","unscopedRules","_extractUnscopedRulesFromCssText","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertShadowDOMSelectors","_scopeSelectors","r","_cssContentUnscopedRuleRe","_convertColonRule","_cssColonHostRe","_colonHostPartReplacer","_cssColonHostContextRe","_colonHostContextPartReplacer","regExp","partReplacer","_polyfillHostNoCombinator","_polyfillHost","_shadowDOMSelectorsRe","_scopeSelector","strict","_shadowDeepSelectors","deepParts","shallowPart","otherParts","applyScope","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","re","_makeScopeMatcher","lre","rre","_selectorReSuffix","_applySimpleSelectorScope","_polyfillHostRe","replaceBy_1","_polyfillHostNoCombinatorRe","hnc","colon","isRe","_scopeSelectorPart","scopedP","safeContent","SafeSelector","scopedSelector","sep","scopeAfter","scopedPart","restore","_colonHostContextRe","_polyfillHostContext","_colonHostRe","keep","replaceBy","_content","pseudo","_parenSuffix","COMPONENT_VARIABLE","HOST_ATTR","CONTENT_ATTR","StylesCompileDependency","StylesCompileResult","componentStylesheet","CompiledStylesheet","stylesVar","_shadowCss","compileComponent","_compileStyles","stylesheetMeta","compiledStylesheet","isComponentStylesheet","styleExpressions","plainStyle","_shimIfNeeded","EventHandlerVars","allowDefault","_converterFactory","BuiltinFunctionCall","_localResolver","_implicitReceiver","_nodeMap","_resultMap","_currentTemporary","_visit","fnResult","convertedArgs","leftMostSafe","leftMostSafeNode","convertSafeAccess","_getLocal","getLocal","varExpr","guardedExpression","temporary","needsTemporary","allocateTemporary","access","releaseTemporary","visitSome","tempNumber","IMPLICIT_TEMPLATE_VAR","ViewCompileResult","viewClassVar","rendererTypeVar","_genConfigNext","embeddedViewCount","renderComponentVarName","template_1","customRenderData","renderComponentVar","viewBuilderFactory","embeddedViewIndex","ViewBuilder","viewName","LOG_VAR$1","COMP_VAR","EVENT_NAME_VAR","ALLOW_DEFAULT_VAR","purePipeNodeIndices","refNodeIndices","_createPipe","queryIds_1","queryIndex","nodeFlags","nodeDef","targetStatements","_createNodeExpressions","updateRendererStmts","updateDirectivesStmts","nodeDefExprs","updateRendererFn","_createUpdateFn","updateDirectivesFn","viewFlags","OnPush","viewFactory","updateStmts","updateFn","preStmts","astWithSource","inter","updateRendererExpressions","bindingIndex","_preprocessUpdateExpression","updateRenderer","_visitElementOrTemplate","queryMatchesExpr","childVisitor","childCount","_createElementHandleEventFn","usedEvents","dirHostBindings","inputDefs","outputDefs","compAst","compRendererType","compView","ɵelementEventFullName","_visitComponentFactoryResolverProvider","dirIndex","localDirAst","_visitDirective","dirHostEvents","_visitProvider","queryMatchExprs","outputAst","elementNodeIndex","_visitProviderOrDirective","mapValue","updateDirectiveExpressions","dirContextExpr","hostEventAst","updateDirectives","_addProviderNode","componentDirMeta","tokenExpr_1","currViewExpr","currBuilder","refNodeIndex","varAst","varValue","valueExpr_1","valueExpr_2","nodeIndex_1","compViewExpr","compBuilder","pipeNodeIndex","pipeValueExpr_1","nodeValueExpr_1","createUpdateStatements","allowEmptyExprs","updateBindingCount","nameResolver","self","logWithNodeDef","handlers","handleEventStmts","handleEventBindingCount","trueStmts","eventTarget","fullEventName","handleEventFn","GeneratedFile","genFileUrl","indexBySymbol","processedSummaryBySymbol","processedSummaries","clone_1","processedSummary","processValue","summaries","importAs","__symbol","baseSymbol","isLibrary","ngModuleSymbols","fnName","serializeSummaryWithDeps","jitExportAsName","serializeSummaryRef","serializeSummary","typeSymbol","jitImportedSymbol","Transformer","serializedSymbol","_host","_metadataResolver","_templateParser","_styleCompiler","_viewCompiler","_ngModuleCompiler","_outputEmitter","_localeId","_translationFormat","_genFilePreamble","_symbolResolver","compileAll","rootFiles","sourceModules","_compileSrcFile","generatedFiles","_createSummary","_compileModule","stylesCompileResults","compiledStyleSheet","_codgenStyles","compViewVars","_compileComponent","_compileComponentFactory","compRenderTypeVar","srcModule","_codegenSourceModule","targetExportedVars","symbolSummaries","typeData","appCompileResult","hostType","hostMeta","hostViewFactoryVar","compFactoryVar","inputsExprs","outputsExprs","directiveIdentifiers","componentStyles","parsedTemplate","stylesExpr","viewResult","stylesCompileResult","staticDelegate","dynamicDelegate","updateCapabilities","isReflectionEnabled","lcProperty","setter","resolveEnum","enumIdentifier","ANGULAR_CORE","IGNORE","knownMetadataClasses","knownMetadataFunctions","errorRecorder","annotationCache","propertyCache","parameterCache","methodCache","conversionMap","annotationForParentClassWithSummaryKind","annotationNames","initializeConversionMap","kc","_registerDecoratorOrConstructor","kf","_registerFunction","findSymbolDeclaration","getResourcePath","importSymbol","rootSymbol","findDeclaration","recordImportAs","containingFile","getSymbolByModule","classMetadata","getTypeMetadata","parentType","findParentType","parentAnnotations","ownAnnotations_1","simplify","requiredAnnotationTypes","typeHasRequiredAnnotation","requiredType","reportError","parentPropMetadata_1","parentProp","members_1","propData","parameters_1","ctorData","parameterTypes","parameterDecorators_1","paramType","nestedResult","_methodNames","methodNames","parentMethodNames_1","members_2","isMethod","trySimplify","injectionToken","opaqueToken","ContentChild","ContentChildren","ViewChild","ViewChildren","trigger","state","transition","animate","keyframes","sequence","group","originalRecorder","simplifyInContext","depth","resolveReferenceValue","simplifyCall","functionSymbol","targetFunction","calling","value_1","defaults","functionScope","BindingScope","result_1","oldScope","scope","done","result_2","spreadArray","spreadArray_1","spreadItem","value_2","declarationValue","operand","indexTarget","member","selectContext","selectTarget","localValue","missing","argExpressions","recordedSimplifyInContext","PopulatedScope","ResolvedStaticSymbol","SUPPORTED_SCHEMA_VERSION","staticSymbolCache","metadataCache","resolvedSymbols","resolvedFilePaths","symbolResourcePaths","symbolFromFile","knownFileNameToModuleNames","_resolveSymbolMembers","_resolveSymbolFromSummary","_createSymbolsOf","baseImportAs","summarizedFileName","summarizedName","sourceSymbol","targetSymbol","invalidateFile","symbols_1","baseResolvedSymbol","baseMetadata","statics","getModuleMetadata","topLevelSymbolNames_1","origins_1","metadataKey","origin","originFilePath","resolveModule","createResolvedSymbol","_loop_1","moduleExport","export","exportSymbol","symName","resolvedModule","createExport","this_1","nestedExports","topLevelPath","topLevelSymbolNames","transformedMeta_1","ReferenceTransformer","functionParams","symbolic","oldLen","module_1","transformedMeta","moduleMetadata","moduleMetadatas","getMetadataFor","maxVersion_1","md","errorMessage","moduleNameToFileName","summaryCache","loadedFilePaths","getOutputFileName","_loadSummaryFile","summaryFilePath","loadSummary","instance","ReturnValue","debugAst","currCtx","CATCH_ERROR_VAR$2","CATCH_STACK_VAR$2","subscribe","fnExpr","AbstractJsEmitterVisitor","_evalArgNames","_evalArgValues","JitCompiler","_injector","_compilerConfig","_compiledTemplateCache","_compiledHostTemplateCache","_compiledDirectiveWrapperCache","_compiledNgModuleCache","_sharedStylesheetCount","compileModuleSync","_compileModuleAndComponents","compileModuleAsync","compileModuleAndAllComponentsSync","_compileModuleAndAllComponents","compileModuleAndAllComponentsAsync","getNgContentSelectors","loadAotSummaries","hasAotSummary","_filterJitIdentifiers","ids","loadingPromise","_loadModules","createResult","_compileComponents","componentFactories","ModuleWithComponentFactories","mainModule","loadingPromises","mainNgModule","nestedNgModule","ngModuleFactory","moduleMeta_1","Compiler","ModuleBoundCompiler","allComponentFactories","moduleByJitDirective","templates","transJitModules","localMod","localModuleMeta","dirRef","_createCompiledTemplate","_createCompiledHostTemplate","entryComponentType","_compileTemplate","compiledTemplate","hostClass","ɵgetComponentViewDefinitionFactory","CompiledTemplate","isCompiled","externalStylesheetsByModuleUrl","_resolveStylesCompileResult","viewClass","viewClassAndRendererTypeVars","compiled","nestedCompileResult","nestedStylesArr","_resolveAndEvalStylesCompileResult","_viewClass","_delegate","_ngModule","injector","MessageBundle","updateFromTemplate","htmlParserResult","i18nParserResult","getMessages","filterSources","mapperVisitor","MapPlaceholderNames","msgList","src","transformedMessage","Extractor","messageBundle","compMetas","extractor","_NO_RESOURCE_LOADER","baseHtmlParser","COMPILER_PROVIDERS","ɵReflector","parser","TRANSLATIONS","JitCompilerFactory","defaultOptions","compilerOptions","useDebug","_defaultOptions","createCompiler","opts","ReflectiveInjector","resolveAndCreate","COMPILER_OPTIONS","platformCoreDynamic","createPlatformFactory","platformCore","CompilerFactory","PLATFORM_INITIALIZER","ImportResolver"],"mappings":"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A,wCACA,uBACA,kCACA,yCACA,mLACA,iJACA,eACA,yBACA,iCACA,iQACA,yHACA,sCACA,+BACA,4BACA,0BACA,8BACA,yCACA,6BACA,0BACA,uDACA,wCACA,qCACA,uGACA,iGACA,sOACA,mDACA,sBACA,wCACA,6BACA,2JACA,oJACA,wbACA,mEACA,+BACA,8BACA,6BACA,yHACA,yBACA,4HACA,8BACA,mDACA,2DACA,sCACA,kDACA,uIACA,yCACA,6EACA,wDACA,wBACA,gDACA,yBACA,2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,qBACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,2BACA,sBACA,+CACA,+CACA,+CACA,+CACA,6BACA,sBACA,sBACA,0BACA,2BACA,uBACA,2BACA,iCACA,0BACA,qBACA,2BACA,qBACA,oCACA,wBACA,4BACA,2BACA,qCACA,oBACA,qBACA,mBACA,uBACA,2BACA,sBACA,8BACA,+BACA,qCACA,2BACA,mDACA,yBACA,2BACA,mBACA,8CACA,6BACA,qBACA,mCACA,kCACA,kCACA,oBACA,0BACA,8BACA,2BACA,gFACA,yBACA,+BAEAC,eACAC,MAAS,YACTC,IAAO,UACPC,WAAc,aACdC,UAAa,YACbC,SAAY,WACZC,SAAY,YAEZ38D,yBAA4B,SAAUh1B,QAEtC,QAASg1B,4BACL,GAAIyC,OAAQz3B,OAAOk8B,KAAKnvC,OAASA,IAqCjC,OApCA0qC,OAAMm6D,WACNR,OAAO5jG,QAAQ,SAAUqkG,aACrB,GAAI19F,SACA4Q,GAAK8sF,YAAYx6F,MAAM,KAAMy6F,QAAU/sF,GAAG,GAAIgtF,cAAgBhtF,GAAG,GACjEitF,WAAaD,cAAc16F,MAAM,KACjC4N,GAAK6sF,QAAQz6F,MAAM,KAAM46F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","file":"/home/travis/build/angular/angular/dist/packages-dist/compiler/bundles/compiler.umd.min.js","sourcesContent":["/**\n * @license Angular v4.2.0-rc.0-3b28c75\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', '@angular/core'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.compiler = global.ng.compiler || {}),global.ng.core));\n}(this, (function (exports,_angular_core) { 'use strict';\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @license Angular v4.2.0-rc.0-3b28c75\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new _angular_core.Version('4.2.0-rc.0-3b28c75');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A segment of text within the template.\n */\nvar TextAst = (function () {\n    /**\n     * @param {?} value\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    function TextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TextAst.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n    return TextAst;\n}());\n/**\n * A bound expression within the text of a template.\n */\nvar BoundTextAst = (function () {\n    /**\n     * @param {?} value\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    function BoundTextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundTextAst.prototype.visit = function (visitor, context) {\n        return visitor.visitBoundText(this, context);\n    };\n    return BoundTextAst;\n}());\n/**\n * A plain attribute on an element.\n */\nvar AttrAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function AttrAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AttrAst.prototype.visit = function (visitor, context) { return visitor.visitAttr(this, context); };\n    return AttrAst;\n}());\n/**\n * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n * `[\\@trigger]=\"stateExp\"`)\n */\nvar BoundElementPropertyAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} type\n     * @param {?} securityContext\n     * @param {?} value\n     * @param {?} unit\n     * @param {?} sourceSpan\n     */\n    function BoundElementPropertyAst(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundElementPropertyAst.prototype.visit = function (visitor, context) {\n        return visitor.visitElementProperty(this, context);\n    };\n    Object.defineProperty(BoundElementPropertyAst.prototype, \"isAnimation\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.type === PropertyBindingType.Animation; },\n        enumerable: true,\n        configurable: true\n    });\n    return BoundElementPropertyAst;\n}());\n/**\n * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n * `(\\@trigger.phase)=\"callback($event)\"`).\n */\nvar BoundEventAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @param {?} handler\n     * @param {?} sourceSpan\n     */\n    function BoundEventAst(name, target, phase, handler, sourceSpan) {\n        this.name = name;\n        this.target = target;\n        this.phase = phase;\n        this.handler = handler;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    BoundEventAst.calcFullName = function (name, target, phase) {\n        if (target) {\n            return target + \":\" + name;\n        }\n        else if (phase) {\n            return \"@\" + name + \".\" + phase;\n        }\n        else {\n            return name;\n        }\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundEventAst.prototype.visit = function (visitor, context) {\n        return visitor.visitEvent(this, context);\n    };\n    Object.defineProperty(BoundEventAst.prototype, \"fullName\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return BoundEventAst.calcFullName(this.name, this.target, this.phase); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BoundEventAst.prototype, \"isAnimation\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return !!this.phase; },\n        enumerable: true,\n        configurable: true\n    });\n    return BoundEventAst;\n}());\n/**\n * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n */\nvar ReferenceAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function ReferenceAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReferenceAst.prototype.visit = function (visitor, context) {\n        return visitor.visitReference(this, context);\n    };\n    return ReferenceAst;\n}());\n/**\n * A variable declaration on a <ng-template> (e.g. `var-someName=\"someLocalName\"`).\n */\nvar VariableAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function VariableAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    VariableAst.prototype.visit = function (visitor, context) {\n        return visitor.visitVariable(this, context);\n    };\n    return VariableAst;\n}());\n/**\n * An element declaration in a template.\n */\nvar ElementAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} attrs\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} references\n     * @param {?} directives\n     * @param {?} providers\n     * @param {?} hasViewContainer\n     * @param {?} queryMatches\n     * @param {?} children\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     * @param {?} endSourceSpan\n     */\n    function ElementAst(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan, endSourceSpan) {\n        this.name = name;\n        this.attrs = attrs;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.references = references;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ElementAst.prototype.visit = function (visitor, context) {\n        return visitor.visitElement(this, context);\n    };\n    return ElementAst;\n}());\n/**\n * A `<ng-template>` element included in an Angular template.\n */\nvar EmbeddedTemplateAst = (function () {\n    /**\n     * @param {?} attrs\n     * @param {?} outputs\n     * @param {?} references\n     * @param {?} variables\n     * @param {?} directives\n     * @param {?} providers\n     * @param {?} hasViewContainer\n     * @param {?} queryMatches\n     * @param {?} children\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    function EmbeddedTemplateAst(attrs, outputs, references, variables, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan) {\n        this.attrs = attrs;\n        this.outputs = outputs;\n        this.references = references;\n        this.variables = variables;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    EmbeddedTemplateAst.prototype.visit = function (visitor, context) {\n        return visitor.visitEmbeddedTemplate(this, context);\n    };\n    return EmbeddedTemplateAst;\n}());\n/**\n * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n */\nvar BoundDirectivePropertyAst = (function () {\n    /**\n     * @param {?} directiveName\n     * @param {?} templateName\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\n        this.directiveName = directiveName;\n        this.templateName = templateName;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundDirectivePropertyAst.prototype.visit = function (visitor, context) {\n        return visitor.visitDirectiveProperty(this, context);\n    };\n    return BoundDirectivePropertyAst;\n}());\n/**\n * A directive declared on an element.\n */\nvar DirectiveAst = (function () {\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} hostProperties\n     * @param {?} hostEvents\n     * @param {?} contentQueryStartId\n     * @param {?} sourceSpan\n     */\n    function DirectiveAst(directive, inputs, hostProperties, hostEvents, contentQueryStartId, sourceSpan) {\n        this.directive = directive;\n        this.inputs = inputs;\n        this.hostProperties = hostProperties;\n        this.hostEvents = hostEvents;\n        this.contentQueryStartId = contentQueryStartId;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DirectiveAst.prototype.visit = function (visitor, context) {\n        return visitor.visitDirective(this, context);\n    };\n    return DirectiveAst;\n}());\n/**\n * A provider declared on an element\n */\nvar ProviderAst = (function () {\n    /**\n     * @param {?} token\n     * @param {?} multiProvider\n     * @param {?} eager\n     * @param {?} providers\n     * @param {?} providerType\n     * @param {?} lifecycleHooks\n     * @param {?} sourceSpan\n     */\n    function ProviderAst(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan) {\n        this.token = token;\n        this.multiProvider = multiProvider;\n        this.eager = eager;\n        this.providers = providers;\n        this.providerType = providerType;\n        this.lifecycleHooks = lifecycleHooks;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ProviderAst.prototype.visit = function (visitor, context) {\n        // No visit method in the visitor for now...\n        return null;\n    };\n    return ProviderAst;\n}());\nvar ProviderAstType = {};\nProviderAstType.PublicService = 0;\nProviderAstType.PrivateService = 1;\nProviderAstType.Component = 2;\nProviderAstType.Directive = 3;\nProviderAstType.Builtin = 4;\nProviderAstType[ProviderAstType.PublicService] = \"PublicService\";\nProviderAstType[ProviderAstType.PrivateService] = \"PrivateService\";\nProviderAstType[ProviderAstType.Component] = \"Component\";\nProviderAstType[ProviderAstType.Directive] = \"Directive\";\nProviderAstType[ProviderAstType.Builtin] = \"Builtin\";\n/**\n * Position where content is to be projected (instance of `<ng-content>` in a template).\n */\nvar NgContentAst = (function () {\n    /**\n     * @param {?} index\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    function NgContentAst(index, ngContentIndex, sourceSpan) {\n        this.index = index;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NgContentAst.prototype.visit = function (visitor, context) {\n        return visitor.visitNgContent(this, context);\n    };\n    return NgContentAst;\n}());\nvar PropertyBindingType = {};\nPropertyBindingType.Property = 0;\nPropertyBindingType.Attribute = 1;\nPropertyBindingType.Class = 2;\nPropertyBindingType.Style = 3;\nPropertyBindingType.Animation = 4;\nPropertyBindingType[PropertyBindingType.Property] = \"Property\";\nPropertyBindingType[PropertyBindingType.Attribute] = \"Attribute\";\nPropertyBindingType[PropertyBindingType.Class] = \"Class\";\nPropertyBindingType[PropertyBindingType.Style] = \"Style\";\nPropertyBindingType[PropertyBindingType.Animation] = \"Animation\";\n/**\n * A visitor that accepts each node but doesn't do anything. It is intended to be used\n * as the base class for a visitor that is only interested in a subset of the node types.\n */\nvar NullTemplateVisitor = (function () {\n    function NullTemplateVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitNgContent = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEmbeddedTemplate = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElement = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitReference = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitVariable = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEvent = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElementProperty = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitAttr = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitBoundText = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitText = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirective = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirectiveProperty = function (ast, context) { };\n    return NullTemplateVisitor;\n}());\n/**\n * Base class that can be used to build a visitor that visits each node\n * in an template ast recursively.\n */\nvar RecursiveTemplateAstVisitor = (function (_super) {\n    __extends(RecursiveTemplateAstVisitor, _super);\n    function RecursiveTemplateAstVisitor() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitEmbeddedTemplate = function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.references);\n            visit(ast.variables);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitElement = function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.inputs);\n            visit(ast.outputs);\n            visit(ast.references);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitDirective = function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.inputs);\n            visit(ast.hostProperties);\n            visit(ast.hostEvents);\n        });\n    };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitChildren = function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children && children.length)\n                results.push(templateVisitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveTemplateAstVisitor;\n}(NullTemplateVisitor));\n/**\n * Visit every node in a list of {\\@link TemplateAst}s with the given {\\@link TemplateAstVisitor}.\n * @param {?} visitor\n * @param {?} asts\n * @param {?=} context\n * @return {?}\n */\nfunction templateVisitAll(visitor, asts, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    asts.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\n/**\n * A token representing the a reference to a static type.\n *\n * This token is unique for a filePath and name and can be used as a hash table key.\n */\nvar StaticSymbol = (function () {\n    /**\n     * @param {?} filePath\n     * @param {?} name\n     * @param {?} members\n     */\n    function StaticSymbol(filePath, name, members) {\n        this.filePath = filePath;\n        this.name = name;\n        this.members = members;\n    }\n    /**\n     * @return {?}\n     */\n    StaticSymbol.prototype.assertNoMembers = function () {\n        if (this.members.length) {\n            throw new Error(\"Illegal state: symbol without members expected, but got \" + JSON.stringify(this) + \".\");\n        }\n    };\n    return StaticSymbol;\n}());\n/**\n * A cache of static symbol used by the StaticReflector to return the same symbol for the\n * same symbol values.\n */\nvar StaticSymbolCache = (function () {\n    function StaticSymbolCache() {\n        this.cache = new Map();\n    }\n    /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticSymbolCache.prototype.get = function (declarationFile, name, members) {\n        members = members || [];\n        var /** @type {?} */ memberSuffix = members.length ? \".\" + members.join('.') : '';\n        var /** @type {?} */ key = \"\\\"\" + declarationFile + \"\\\".\" + name + memberSuffix;\n        var /** @type {?} */ result = this.cache.get(key);\n        if (!result) {\n            result = new StaticSymbol(declarationFile, name, members);\n            this.cache.set(key, result);\n        }\n        return result;\n    };\n    return StaticSymbolCache;\n}());\nvar TagContentType = {};\nTagContentType.RAW_TEXT = 0;\nTagContentType.ESCAPABLE_RAW_TEXT = 1;\nTagContentType.PARSABLE_DATA = 2;\nTagContentType[TagContentType.RAW_TEXT] = \"RAW_TEXT\";\nTagContentType[TagContentType.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTagContentType[TagContentType.PARSABLE_DATA] = \"PARSABLE_DATA\";\n/**\n * @param {?} elementName\n * @return {?}\n */\nfunction splitNsName(elementName) {\n    if (elementName[0] != ':') {\n        return [null, elementName];\n    }\n    var /** @type {?} */ colonIndex = elementName.indexOf(':', 1);\n    if (colonIndex == -1) {\n        throw new Error(\"Unsupported format \\\"\" + elementName + \"\\\" expecting \\\":namespace:name\\\"\");\n    }\n    return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContainer(tagName) {\n    return splitNsName(tagName)[1] === 'ng-container';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContent(tagName) {\n    return splitNsName(tagName)[1] === 'ng-content';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgTemplate(tagName) {\n    return splitNsName(tagName)[1] === 'ng-template';\n}\n/**\n * @param {?} fullName\n * @return {?}\n */\nfunction getNsPrefix(fullName) {\n    return fullName === null ? null : splitNsName(fullName)[0];\n}\n/**\n * @param {?} prefix\n * @param {?} localName\n * @return {?}\n */\nfunction mergeNsAndName(prefix, localName) {\n    return prefix ? \":\" + prefix + \":\" + localName : localName;\n}\n// see http://www.w3.org/TR/html51/syntax.html#named-character-references\n// see https://html.spec.whatwg.org/multipage/entities.json\n// This list is not exhaustive to keep the compiler footprint low.\n// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not\n// exist.\nvar NAMED_ENTITIES = {\n    'Aacute': '\\u00C1',\n    'aacute': '\\u00E1',\n    'Acirc': '\\u00C2',\n    'acirc': '\\u00E2',\n    'acute': '\\u00B4',\n    'AElig': '\\u00C6',\n    'aelig': '\\u00E6',\n    'Agrave': '\\u00C0',\n    'agrave': '\\u00E0',\n    'alefsym': '\\u2135',\n    'Alpha': '\\u0391',\n    'alpha': '\\u03B1',\n    'amp': '&',\n    'and': '\\u2227',\n    'ang': '\\u2220',\n    'apos': '\\u0027',\n    'Aring': '\\u00C5',\n    'aring': '\\u00E5',\n    'asymp': '\\u2248',\n    'Atilde': '\\u00C3',\n    'atilde': '\\u00E3',\n    'Auml': '\\u00C4',\n    'auml': '\\u00E4',\n    'bdquo': '\\u201E',\n    'Beta': '\\u0392',\n    'beta': '\\u03B2',\n    'brvbar': '\\u00A6',\n    'bull': '\\u2022',\n    'cap': '\\u2229',\n    'Ccedil': '\\u00C7',\n    'ccedil': '\\u00E7',\n    'cedil': '\\u00B8',\n    'cent': '\\u00A2',\n    'Chi': '\\u03A7',\n    'chi': '\\u03C7',\n    'circ': '\\u02C6',\n    'clubs': '\\u2663',\n    'cong': '\\u2245',\n    'copy': '\\u00A9',\n    'crarr': '\\u21B5',\n    'cup': '\\u222A',\n    'curren': '\\u00A4',\n    'dagger': '\\u2020',\n    'Dagger': '\\u2021',\n    'darr': '\\u2193',\n    'dArr': '\\u21D3',\n    'deg': '\\u00B0',\n    'Delta': '\\u0394',\n    'delta': '\\u03B4',\n    'diams': '\\u2666',\n    'divide': '\\u00F7',\n    'Eacute': '\\u00C9',\n    'eacute': '\\u00E9',\n    'Ecirc': '\\u00CA',\n    'ecirc': '\\u00EA',\n    'Egrave': '\\u00C8',\n    'egrave': '\\u00E8',\n    'empty': '\\u2205',\n    'emsp': '\\u2003',\n    'ensp': '\\u2002',\n    'Epsilon': '\\u0395',\n    'epsilon': '\\u03B5',\n    'equiv': '\\u2261',\n    'Eta': '\\u0397',\n    'eta': '\\u03B7',\n    'ETH': '\\u00D0',\n    'eth': '\\u00F0',\n    'Euml': '\\u00CB',\n    'euml': '\\u00EB',\n    'euro': '\\u20AC',\n    'exist': '\\u2203',\n    'fnof': '\\u0192',\n    'forall': '\\u2200',\n    'frac12': '\\u00BD',\n    'frac14': '\\u00BC',\n    'frac34': '\\u00BE',\n    'frasl': '\\u2044',\n    'Gamma': '\\u0393',\n    'gamma': '\\u03B3',\n    'ge': '\\u2265',\n    'gt': '>',\n    'harr': '\\u2194',\n    'hArr': '\\u21D4',\n    'hearts': '\\u2665',\n    'hellip': '\\u2026',\n    'Iacute': '\\u00CD',\n    'iacute': '\\u00ED',\n    'Icirc': '\\u00CE',\n    'icirc': '\\u00EE',\n    'iexcl': '\\u00A1',\n    'Igrave': '\\u00CC',\n    'igrave': '\\u00EC',\n    'image': '\\u2111',\n    'infin': '\\u221E',\n    'int': '\\u222B',\n    'Iota': '\\u0399',\n    'iota': '\\u03B9',\n    'iquest': '\\u00BF',\n    'isin': '\\u2208',\n    'Iuml': '\\u00CF',\n    'iuml': '\\u00EF',\n    'Kappa': '\\u039A',\n    'kappa': '\\u03BA',\n    'Lambda': '\\u039B',\n    'lambda': '\\u03BB',\n    'lang': '\\u27E8',\n    'laquo': '\\u00AB',\n    'larr': '\\u2190',\n    'lArr': '\\u21D0',\n    'lceil': '\\u2308',\n    'ldquo': '\\u201C',\n    'le': '\\u2264',\n    'lfloor': '\\u230A',\n    'lowast': '\\u2217',\n    'loz': '\\u25CA',\n    'lrm': '\\u200E',\n    'lsaquo': '\\u2039',\n    'lsquo': '\\u2018',\n    'lt': '<',\n    'macr': '\\u00AF',\n    'mdash': '\\u2014',\n    'micro': '\\u00B5',\n    'middot': '\\u00B7',\n    'minus': '\\u2212',\n    'Mu': '\\u039C',\n    'mu': '\\u03BC',\n    'nabla': '\\u2207',\n    'nbsp': '\\u00A0',\n    'ndash': '\\u2013',\n    'ne': '\\u2260',\n    'ni': '\\u220B',\n    'not': '\\u00AC',\n    'notin': '\\u2209',\n    'nsub': '\\u2284',\n    'Ntilde': '\\u00D1',\n    'ntilde': '\\u00F1',\n    'Nu': '\\u039D',\n    'nu': '\\u03BD',\n    'Oacute': '\\u00D3',\n    'oacute': '\\u00F3',\n    'Ocirc': '\\u00D4',\n    'ocirc': '\\u00F4',\n    'OElig': '\\u0152',\n    'oelig': '\\u0153',\n    'Ograve': '\\u00D2',\n    'ograve': '\\u00F2',\n    'oline': '\\u203E',\n    'Omega': '\\u03A9',\n    'omega': '\\u03C9',\n    'Omicron': '\\u039F',\n    'omicron': '\\u03BF',\n    'oplus': '\\u2295',\n    'or': '\\u2228',\n    'ordf': '\\u00AA',\n    'ordm': '\\u00BA',\n    'Oslash': '\\u00D8',\n    'oslash': '\\u00F8',\n    'Otilde': '\\u00D5',\n    'otilde': '\\u00F5',\n    'otimes': '\\u2297',\n    'Ouml': '\\u00D6',\n    'ouml': '\\u00F6',\n    'para': '\\u00B6',\n    'permil': '\\u2030',\n    'perp': '\\u22A5',\n    'Phi': '\\u03A6',\n    'phi': '\\u03C6',\n    'Pi': '\\u03A0',\n    'pi': '\\u03C0',\n    'piv': '\\u03D6',\n    'plusmn': '\\u00B1',\n    'pound': '\\u00A3',\n    'prime': '\\u2032',\n    'Prime': '\\u2033',\n    'prod': '\\u220F',\n    'prop': '\\u221D',\n    'Psi': '\\u03A8',\n    'psi': '\\u03C8',\n    'quot': '\\u0022',\n    'radic': '\\u221A',\n    'rang': '\\u27E9',\n    'raquo': '\\u00BB',\n    'rarr': '\\u2192',\n    'rArr': '\\u21D2',\n    'rceil': '\\u2309',\n    'rdquo': '\\u201D',\n    'real': '\\u211C',\n    'reg': '\\u00AE',\n    'rfloor': '\\u230B',\n    'Rho': '\\u03A1',\n    'rho': '\\u03C1',\n    'rlm': '\\u200F',\n    'rsaquo': '\\u203A',\n    'rsquo': '\\u2019',\n    'sbquo': '\\u201A',\n    'Scaron': '\\u0160',\n    'scaron': '\\u0161',\n    'sdot': '\\u22C5',\n    'sect': '\\u00A7',\n    'shy': '\\u00AD',\n    'Sigma': '\\u03A3',\n    'sigma': '\\u03C3',\n    'sigmaf': '\\u03C2',\n    'sim': '\\u223C',\n    'spades': '\\u2660',\n    'sub': '\\u2282',\n    'sube': '\\u2286',\n    'sum': '\\u2211',\n    'sup': '\\u2283',\n    'sup1': '\\u00B9',\n    'sup2': '\\u00B2',\n    'sup3': '\\u00B3',\n    'supe': '\\u2287',\n    'szlig': '\\u00DF',\n    'Tau': '\\u03A4',\n    'tau': '\\u03C4',\n    'there4': '\\u2234',\n    'Theta': '\\u0398',\n    'theta': '\\u03B8',\n    'thetasym': '\\u03D1',\n    'thinsp': '\\u2009',\n    'THORN': '\\u00DE',\n    'thorn': '\\u00FE',\n    'tilde': '\\u02DC',\n    'times': '\\u00D7',\n    'trade': '\\u2122',\n    'Uacute': '\\u00DA',\n    'uacute': '\\u00FA',\n    'uarr': '\\u2191',\n    'uArr': '\\u21D1',\n    'Ucirc': '\\u00DB',\n    'ucirc': '\\u00FB',\n    'Ugrave': '\\u00D9',\n    'ugrave': '\\u00F9',\n    'uml': '\\u00A8',\n    'upsih': '\\u03D2',\n    'Upsilon': '\\u03A5',\n    'upsilon': '\\u03C5',\n    'Uuml': '\\u00DC',\n    'uuml': '\\u00FC',\n    'weierp': '\\u2118',\n    'Xi': '\\u039E',\n    'xi': '\\u03BE',\n    'Yacute': '\\u00DD',\n    'yacute': '\\u00FD',\n    'yen': '\\u00A5',\n    'yuml': '\\u00FF',\n    'Yuml': '\\u0178',\n    'Zeta': '\\u0396',\n    'zeta': '\\u03B6',\n    'zwj': '\\u200D',\n    'zwnj': '\\u200C',\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlTagDefinition = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function HtmlTagDefinition(_a) {\n        var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, _c = _b.contentType, contentType = _c === void 0 ? TagContentType.PARSABLE_DATA : _c, _d = _b.closedByParent, closedByParent = _d === void 0 ? false : _d, _e = _b.isVoid, isVoid = _e === void 0 ? false : _e, _f = _b.ignoreFirstLf, ignoreFirstLf = _f === void 0 ? false : _f;\n        var _this = this;\n        this.closedByChildren = {};\n        this.closedByParent = false;\n        this.canSelfClose = false;\n        if (closedByChildren && closedByChildren.length > 0) {\n            closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\n        }\n        this.isVoid = isVoid;\n        this.closedByParent = closedByParent || isVoid;\n        if (requiredParents && requiredParents.length > 0) {\n            this.requiredParents = {};\n            // The first parent is the list is automatically when none of the listed parents are present\n            this.parentToAdd = requiredParents[0];\n            requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\n        }\n        this.implicitNamespacePrefix = implicitNamespacePrefix || null;\n        this.contentType = contentType;\n        this.ignoreFirstLf = ignoreFirstLf;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.requireExtraParent = function (currentParent) {\n        if (!this.requiredParents) {\n            return false;\n        }\n        if (!currentParent) {\n            return true;\n        }\n        var /** @type {?} */ lcParent = currentParent.toLowerCase();\n        var /** @type {?} */ isParentTemplate = lcParent === 'template' || currentParent === 'ng-template';\n        return !isParentTemplate && this.requiredParents[lcParent] != true;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.isClosedByChild = function (name) {\n        return this.isVoid || name.toLowerCase() in this.closedByChildren;\n    };\n    return HtmlTagDefinition;\n}());\n// see http://www.w3.org/TR/html51/syntax.html#optional-tags\n// This implementation does not fully conform to the HTML5 spec.\nvar TAG_DEFINITIONS = {\n    'base': new HtmlTagDefinition({ isVoid: true }),\n    'meta': new HtmlTagDefinition({ isVoid: true }),\n    'area': new HtmlTagDefinition({ isVoid: true }),\n    'embed': new HtmlTagDefinition({ isVoid: true }),\n    'link': new HtmlTagDefinition({ isVoid: true }),\n    'img': new HtmlTagDefinition({ isVoid: true }),\n    'input': new HtmlTagDefinition({ isVoid: true }),\n    'param': new HtmlTagDefinition({ isVoid: true }),\n    'hr': new HtmlTagDefinition({ isVoid: true }),\n    'br': new HtmlTagDefinition({ isVoid: true }),\n    'source': new HtmlTagDefinition({ isVoid: true }),\n    'track': new HtmlTagDefinition({ isVoid: true }),\n    'wbr': new HtmlTagDefinition({ isVoid: true }),\n    'p': new HtmlTagDefinition({\n        closedByChildren: [\n            'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset', 'footer', 'form',\n            'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr',\n            'main', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'\n        ],\n        closedByParent: true\n    }),\n    'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n    'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n    'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n    'tr': new HtmlTagDefinition({\n        closedByChildren: ['tr'],\n        requiredParents: ['tbody', 'tfoot', 'thead'],\n        closedByParent: true\n    }),\n    'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n    'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n    'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n    'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n    'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n    'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n    'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n    'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n    'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n    'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'style': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'script': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'title': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT }),\n    'textarea': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n};\nvar _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getHtmlTagDefinition(tagName) {\n    return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' +\n    '([-\\\\w]+)|' +\n    '(?:\\\\.([-\\\\w]+))|' +\n    // \"-\" should appear first in the regexp below as FF31 parses \"[.-\\w]\" as a range\n    '(?:\\\\[([-.\\\\w*]+)(?:=([\\\"\\']?)([^\\\\]\\\"\\']*)\\\\5)?\\\\])|' +\n    // \"[name=\"value\"]\",\n    // \"[name='value']\"\n    '(\\\\))|' +\n    '(\\\\s*,\\\\s*)', // \",\"\n'g');\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nvar CssSelector = (function () {\n    function CssSelector() {\n        this.element = null;\n        this.classNames = [];\n        this.attrs = [];\n        this.notSelectors = [];\n    }\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CssSelector.parse = function (selector) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ _addResult = function (res, cssSel) {\n            if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n                cssSel.attrs.length == 0) {\n                cssSel.element = '*';\n            }\n            res.push(cssSel);\n        };\n        var /** @type {?} */ cssSelector = new CssSelector();\n        var /** @type {?} */ match;\n        var /** @type {?} */ current = cssSelector;\n        var /** @type {?} */ inNot = false;\n        _SELECTOR_REGEXP.lastIndex = 0;\n        while (match = _SELECTOR_REGEXP.exec(selector)) {\n            if (match[1]) {\n                if (inNot) {\n                    throw new Error('Nesting :not is not allowed in a selector');\n                }\n                inNot = true;\n                current = new CssSelector();\n                cssSelector.notSelectors.push(current);\n            }\n            if (match[2]) {\n                current.setElement(match[2]);\n            }\n            if (match[3]) {\n                current.addClassName(match[3]);\n            }\n            if (match[4]) {\n                current.addAttribute(match[4], match[6]);\n            }\n            if (match[7]) {\n                inNot = false;\n                current = cssSelector;\n            }\n            if (match[8]) {\n                if (inNot) {\n                    throw new Error('Multiple selectors in :not are not supported');\n                }\n                _addResult(results, cssSelector);\n                cssSelector = current = new CssSelector();\n            }\n        }\n        _addResult(results, cssSelector);\n        return results;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.isElementSelector = function () {\n        return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n            this.notSelectors.length === 0;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.hasElementSelector = function () { return !!this.element; };\n    /**\n     * @param {?=} element\n     * @return {?}\n     */\n    CssSelector.prototype.setElement = function (element) {\n        if (element === void 0) { element = null; }\n        this.element = element;\n    };\n    /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    CssSelector.prototype.getMatchingElementTemplate = function () {\n        var /** @type {?} */ tagName = this.element || 'div';\n        var /** @type {?} */ classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\n        var /** @type {?} */ attrs = '';\n        for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n            var /** @type {?} */ attrName = this.attrs[i];\n            var /** @type {?} */ attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\n            attrs += \" \" + attrName + attrValue;\n        }\n        return getHtmlTagDefinition(tagName).isVoid ? \"<\" + tagName + classAttr + attrs + \"/>\" :\n            \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\n    };\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    CssSelector.prototype.addAttribute = function (name, value) {\n        if (value === void 0) { value = ''; }\n        this.attrs.push(name, value && value.toLowerCase() || '');\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    CssSelector.prototype.addClassName = function (name) { this.classNames.push(name.toLowerCase()); };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.toString = function () {\n        var /** @type {?} */ res = this.element || '';\n        if (this.classNames) {\n            this.classNames.forEach(function (klass) { return res += \".\" + klass; });\n        }\n        if (this.attrs) {\n            for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n                var /** @type {?} */ name = this.attrs[i];\n                var /** @type {?} */ value = this.attrs[i + 1];\n                res += \"[\" + name + (value ? '=' + value : '') + \"]\";\n            }\n        }\n        this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\n        return res;\n    };\n    return CssSelector;\n}());\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nvar SelectorMatcher = (function () {\n    function SelectorMatcher() {\n        this._elementMap = new Map();\n        this._elementPartialMap = new Map();\n        this._classMap = new Map();\n        this._classPartialMap = new Map();\n        this._attrValueMap = new Map();\n        this._attrValuePartialMap = new Map();\n        this._listContexts = [];\n    }\n    /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    SelectorMatcher.createNotMatcher = function (notSelectors) {\n        var /** @type {?} */ notMatcher = new SelectorMatcher();\n        notMatcher.addSelectables(notSelectors, null);\n        return notMatcher;\n    };\n    /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    SelectorMatcher.prototype.addSelectables = function (cssSelectors, callbackCtxt) {\n        var /** @type {?} */ listContext = ((null));\n        if (cssSelectors.length > 1) {\n            listContext = new SelectorListContext(cssSelectors);\n            this._listContexts.push(listContext);\n        }\n        for (var /** @type {?} */ i = 0; i < cssSelectors.length; i++) {\n            this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n        }\n    };\n    /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addSelectable = function (cssSelector, callbackCtxt, listContext) {\n        var /** @type {?} */ matcher = this;\n        var /** @type {?} */ element = cssSelector.element;\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        var /** @type {?} */ selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n        if (element) {\n            var /** @type {?} */ isTerminal = attrs.length === 0 && classNames.length === 0;\n            if (isTerminal) {\n                this._addTerminal(matcher._elementMap, element, selectable);\n            }\n            else {\n                matcher = this._addPartial(matcher._elementPartialMap, element);\n            }\n        }\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ isTerminal = attrs.length === 0 && i === classNames.length - 1;\n                var /** @type {?} */ className = classNames[i];\n                if (isTerminal) {\n                    this._addTerminal(matcher._classMap, className, selectable);\n                }\n                else {\n                    matcher = this._addPartial(matcher._classPartialMap, className);\n                }\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ isTerminal = i === attrs.length - 2;\n                var /** @type {?} */ name = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                if (isTerminal) {\n                    var /** @type {?} */ terminalMap = matcher._attrValueMap;\n                    var /** @type {?} */ terminalValuesMap = terminalMap.get(name);\n                    if (!terminalValuesMap) {\n                        terminalValuesMap = new Map();\n                        terminalMap.set(name, terminalValuesMap);\n                    }\n                    this._addTerminal(terminalValuesMap, value, selectable);\n                }\n                else {\n                    var /** @type {?} */ partialMap = matcher._attrValuePartialMap;\n                    var /** @type {?} */ partialValuesMap = partialMap.get(name);\n                    if (!partialValuesMap) {\n                        partialValuesMap = new Map();\n                        partialMap.set(name, partialValuesMap);\n                    }\n                    matcher = this._addPartial(partialValuesMap, value);\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addTerminal = function (map, name, selectable) {\n        var /** @type {?} */ terminalList = map.get(name);\n        if (!terminalList) {\n            terminalList = [];\n            map.set(name, terminalList);\n        }\n        terminalList.push(selectable);\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addPartial = function (map, name) {\n        var /** @type {?} */ matcher = map.get(name);\n        if (!matcher) {\n            matcher = new SelectorMatcher();\n            map.set(name, matcher);\n        }\n        return matcher;\n    };\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    SelectorMatcher.prototype.match = function (cssSelector, matchedCallback) {\n        var /** @type {?} */ result = false;\n        var /** @type {?} */ element = ((cssSelector.element));\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        for (var /** @type {?} */ i = 0; i < this._listContexts.length; i++) {\n            this._listContexts[i].alreadyMatched = false;\n        }\n        result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n        result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n            result;\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ className = classNames[i];\n                result =\n                    this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n                result =\n                    this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n                        result;\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ name = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                var /** @type {?} */ terminalValuesMap = ((this._attrValueMap.get(name)));\n                if (value) {\n                    result =\n                        this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n                var /** @type {?} */ partialValuesMap = ((this._attrValuePartialMap.get(name)));\n                if (value) {\n                    result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n            }\n        }\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchTerminal = function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ selectables = map.get(name) || [];\n        var /** @type {?} */ starSelectables = ((map.get('*')));\n        if (starSelectables) {\n            selectables = selectables.concat(starSelectables);\n        }\n        if (selectables.length === 0) {\n            return false;\n        }\n        var /** @type {?} */ selectable;\n        var /** @type {?} */ result = false;\n        for (var /** @type {?} */ i = 0; i < selectables.length; i++) {\n            selectable = selectables[i];\n            result = selectable.finalize(cssSelector, matchedCallback) || result;\n        }\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchPartial = function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ nestedSelector = map.get(name);\n        if (!nestedSelector) {\n            return false;\n        }\n        // TODO(perf): get rid of recursion and measure again\n        // TODO(perf): don't pass the whole selector into the recursion,\n        // but only the not processed parts\n        return nestedSelector.match(cssSelector, matchedCallback);\n    };\n    return SelectorMatcher;\n}());\nvar SelectorListContext = (function () {\n    /**\n     * @param {?} selectors\n     */\n    function SelectorListContext(selectors) {\n        this.selectors = selectors;\n        this.alreadyMatched = false;\n    }\n    return SelectorListContext;\n}());\nvar SelectorContext = (function () {\n    /**\n     * @param {?} selector\n     * @param {?} cbContext\n     * @param {?} listContext\n     */\n    function SelectorContext(selector, cbContext, listContext) {\n        this.selector = selector;\n        this.cbContext = cbContext;\n        this.listContext = listContext;\n        this.notSelectors = selector.notSelectors;\n    }\n    /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    SelectorContext.prototype.finalize = function (cssSelector, callback) {\n        var /** @type {?} */ result = true;\n        if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n            var /** @type {?} */ notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n            result = !notMatcher.match(cssSelector, null);\n        }\n        if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n            if (this.listContext) {\n                this.listContext.alreadyMatched = true;\n            }\n            callback(this.selector, this.cbContext);\n        }\n        return result;\n    };\n    return SelectorContext;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar MODULE_SUFFIX = '';\nvar DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n/**\n * @param {?} input\n * @return {?}\n */\n/**\n * @param {?} input\n * @return {?}\n */\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return m[1].toUpperCase();\n    });\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtColon(input, defaultValues) {\n    return _splitAt(input, ':', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtPeriod(input, defaultValues) {\n    return _splitAt(input, '.', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} character\n * @param {?} defaultValues\n * @return {?}\n */\nfunction _splitAt(input, character, defaultValues) {\n    var /** @type {?} */ characterIndex = input.indexOf(character);\n    if (characterIndex == -1)\n        return defaultValues;\n    return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n}\n/**\n * @param {?} value\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nfunction visitValue(value, visitor, context) {\n    if (Array.isArray(value)) {\n        return visitor.visitArray(/** @type {?} */ (value), context);\n    }\n    if (isStrictStringMap(value)) {\n        return visitor.visitStringMap(/** @type {?} */ (value), context);\n    }\n    if (value == null || typeof value == 'string' || typeof value == 'number' ||\n        typeof value == 'boolean') {\n        return visitor.visitPrimitive(value, context);\n    }\n    return visitor.visitOther(value, context);\n}\n/**\n * @param {?} val\n * @return {?}\n */\nfunction isDefined(val) {\n    return val !== null && val !== undefined;\n}\n/**\n * @template T\n * @param {?} val\n * @return {?}\n */\nfunction noUndefined(val) {\n    return val === undefined ? ((null)) : val;\n}\nvar ValueTransformer = (function () {\n    function ValueTransformer() {\n    }\n    /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitArray = function (arr, context) {\n        var _this = this;\n        return arr.map(function (value) { return visitValue(value, _this, context); });\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitStringMap = function (map, context) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        Object.keys(map).forEach(function (key) { result[key] = visitValue(map[key], _this, context); });\n        return result;\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitPrimitive = function (value, context) { return value; };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitOther = function (value, context) { return value; };\n    return ValueTransformer;\n}());\nvar SyncAsyncResult = (function () {\n    /**\n     * @param {?} syncResult\n     * @param {?=} asyncResult\n     */\n    function SyncAsyncResult(syncResult, asyncResult) {\n        if (asyncResult === void 0) { asyncResult = null; }\n        this.syncResult = syncResult;\n        this.asyncResult = asyncResult;\n        if (!asyncResult) {\n            this.asyncResult = Promise.resolve(syncResult);\n        }\n    }\n    return SyncAsyncResult;\n}());\n/**\n * @param {?} msg\n * @return {?}\n */\nfunction syntaxError(msg) {\n    var /** @type {?} */ error = Error(msg);\n    ((error))[ERROR_SYNTAX_ERROR] = true;\n    return error;\n}\nvar ERROR_SYNTAX_ERROR = 'ngSyntaxError';\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isSyntaxError(error) {\n    return ((error))[ERROR_SYNTAX_ERROR];\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction escapeRegExp(s) {\n    return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\nvar STRING_MAP_PROTO = Object.getPrototypeOf({});\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isStrictStringMap(obj) {\n    return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction utf8Encode(str) {\n    var /** @type {?} */ encoded = '';\n    for (var /** @type {?} */ index = 0; index < str.length; index++) {\n        var /** @type {?} */ codePoint = str.charCodeAt(index);\n        // decode surrogate\n        // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        if (codePoint >= 0xd800 && codePoint <= 0xdbff && str.length > (index + 1)) {\n            var /** @type {?} */ low = str.charCodeAt(index + 1);\n            if (low >= 0xdc00 && low <= 0xdfff) {\n                index++;\n                codePoint = ((codePoint - 0xd800) << 10) + low - 0xdc00 + 0x10000;\n            }\n        }\n        if (codePoint <= 0x7f) {\n            encoded += String.fromCharCode(codePoint);\n        }\n        else if (codePoint <= 0x7ff) {\n            encoded += String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xc0, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0xffff) {\n            encoded += String.fromCharCode((codePoint >> 12) | 0xe0, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0x1fffff) {\n            encoded += String.fromCharCode(((codePoint >> 18) & 0x07) | 0xf0, ((codePoint >> 12) & 0x3f) | 0x80, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n    }\n    return encoded;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// group 0: \"[prop] or (event) or @trigger\"\n// group 1: \"prop\" from \"[prop]\"\n// group 2: \"event\" from \"(event)\"\n// group 3: \"@trigger\" from \"@trigger\"\nvar HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\nvar CompileAnimationEntryMetadata = (function () {\n    /**\n     * @param {?=} name\n     * @param {?=} definitions\n     */\n    function CompileAnimationEntryMetadata(name, definitions) {\n        if (name === void 0) { name = null; }\n        if (definitions === void 0) { definitions = null; }\n        this.name = name;\n        this.definitions = definitions;\n    }\n    return CompileAnimationEntryMetadata;\n}());\n/**\n * @abstract\n */\nvar CompileAnimationStateMetadata = (function () {\n    function CompileAnimationStateMetadata() {\n    }\n    return CompileAnimationStateMetadata;\n}());\nvar CompileAnimationStateDeclarationMetadata = (function (_super) {\n    __extends(CompileAnimationStateDeclarationMetadata, _super);\n    /**\n     * @param {?} stateNameExpr\n     * @param {?} styles\n     */\n    function CompileAnimationStateDeclarationMetadata(stateNameExpr, styles) {\n        var _this = _super.call(this) || this;\n        _this.stateNameExpr = stateNameExpr;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationStateDeclarationMetadata;\n}(CompileAnimationStateMetadata));\nvar CompileAnimationStateTransitionMetadata = (function (_super) {\n    __extends(CompileAnimationStateTransitionMetadata, _super);\n    /**\n     * @param {?} stateChangeExpr\n     * @param {?} steps\n     */\n    function CompileAnimationStateTransitionMetadata(stateChangeExpr, steps) {\n        var _this = _super.call(this) || this;\n        _this.stateChangeExpr = stateChangeExpr;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationStateTransitionMetadata;\n}(CompileAnimationStateMetadata));\n/**\n * @abstract\n */\nvar CompileAnimationMetadata = (function () {\n    function CompileAnimationMetadata() {\n    }\n    return CompileAnimationMetadata;\n}());\nvar CompileAnimationKeyframesSequenceMetadata = (function (_super) {\n    __extends(CompileAnimationKeyframesSequenceMetadata, _super);\n    /**\n     * @param {?=} steps\n     */\n    function CompileAnimationKeyframesSequenceMetadata(steps) {\n        if (steps === void 0) { steps = []; }\n        var _this = _super.call(this) || this;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationKeyframesSequenceMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationStyleMetadata = (function (_super) {\n    __extends(CompileAnimationStyleMetadata, _super);\n    /**\n     * @param {?} offset\n     * @param {?=} styles\n     */\n    function CompileAnimationStyleMetadata(offset, styles) {\n        if (styles === void 0) { styles = null; }\n        var _this = _super.call(this) || this;\n        _this.offset = offset;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationStyleMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationAnimateMetadata = (function (_super) {\n    __extends(CompileAnimationAnimateMetadata, _super);\n    /**\n     * @param {?=} timings\n     * @param {?=} styles\n     */\n    function CompileAnimationAnimateMetadata(timings, styles) {\n        if (timings === void 0) { timings = 0; }\n        if (styles === void 0) { styles = null; }\n        var _this = _super.call(this) || this;\n        _this.timings = timings;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationAnimateMetadata;\n}(CompileAnimationMetadata));\n/**\n * @abstract\n */\nvar CompileAnimationWithStepsMetadata = (function (_super) {\n    __extends(CompileAnimationWithStepsMetadata, _super);\n    /**\n     * @param {?=} steps\n     */\n    function CompileAnimationWithStepsMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        var _this = _super.call(this) || this;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationWithStepsMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationSequenceMetadata = (function (_super) {\n    __extends(CompileAnimationSequenceMetadata, _super);\n    /**\n     * @param {?=} steps\n     */\n    function CompileAnimationSequenceMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        return _super.call(this, steps) || this;\n    }\n    return CompileAnimationSequenceMetadata;\n}(CompileAnimationWithStepsMetadata));\nvar CompileAnimationGroupMetadata = (function (_super) {\n    __extends(CompileAnimationGroupMetadata, _super);\n    /**\n     * @param {?=} steps\n     */\n    function CompileAnimationGroupMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        return _super.call(this, steps) || this;\n    }\n    return CompileAnimationGroupMetadata;\n}(CompileAnimationWithStepsMetadata));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _sanitizeIdentifier(name) {\n    return name.replace(/\\W/g, '_');\n}\nvar _anonymousTypeIndex = 0;\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierName(compileIdentifier) {\n    if (!compileIdentifier || !compileIdentifier.reference) {\n        return null;\n    }\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.name;\n    }\n    if (ref['__anonymousType']) {\n        return ref['__anonymousType'];\n    }\n    var /** @type {?} */ identifier = _angular_core.ɵstringify(ref);\n    if (identifier.indexOf('(') >= 0) {\n        // case: anonymous functions!\n        identifier = \"anonymous_\" + _anonymousTypeIndex++;\n        ref['__anonymousType'] = identifier;\n    }\n    else {\n        identifier = _sanitizeIdentifier(identifier);\n    }\n    return identifier;\n}\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierModuleUrl(compileIdentifier) {\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.filePath;\n    }\n    return _angular_core.ɵreflector.importUri(ref);\n}\n/**\n * @param {?} compType\n * @param {?} embeddedTemplateIndex\n * @return {?}\n */\nfunction viewClassName(compType, embeddedTemplateIndex) {\n    return \"View_\" + identifierName({ reference: compType }) + \"_\" + embeddedTemplateIndex;\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction rendererTypeName(compType) {\n    return \"RenderType_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction hostViewClassName(compType) {\n    return \"HostView_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} dirType\n * @return {?}\n */\nfunction dirWrapperClassName(dirType) {\n    return \"Wrapper_\" + identifierName({ reference: dirType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction componentFactoryName(compType) {\n    return identifierName({ reference: compType }) + \"NgFactory\";\n}\nvar CompileSummaryKind = {};\nCompileSummaryKind.Pipe = 0;\nCompileSummaryKind.Directive = 1;\nCompileSummaryKind.NgModule = 2;\nCompileSummaryKind.Injectable = 3;\nCompileSummaryKind[CompileSummaryKind.Pipe] = \"Pipe\";\nCompileSummaryKind[CompileSummaryKind.Directive] = \"Directive\";\nCompileSummaryKind[CompileSummaryKind.NgModule] = \"NgModule\";\nCompileSummaryKind[CompileSummaryKind.Injectable] = \"Injectable\";\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenName(token) {\n    return token.value != null ? _sanitizeIdentifier(token.value) : identifierName(token.identifier);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenReference(token) {\n    if (token.identifier != null) {\n        return token.identifier.reference;\n    }\n    else {\n        return token.value;\n    }\n}\n/**\n * Metadata about a stylesheet\n */\nvar CompileStylesheetMetadata = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function CompileStylesheetMetadata(_a) {\n        var _b = _a === void 0 ? {} : _a, moduleUrl = _b.moduleUrl, styles = _b.styles, styleUrls = _b.styleUrls;\n        this.moduleUrl = moduleUrl || null;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n    }\n    return CompileStylesheetMetadata;\n}());\n/**\n * Metadata regarding compilation of a template.\n */\nvar CompileTemplateMetadata = (function () {\n    /**\n     * @param {?} __0\n     */\n    function CompileTemplateMetadata(_a) {\n        var encapsulation = _a.encapsulation, template = _a.template, templateUrl = _a.templateUrl, styles = _a.styles, styleUrls = _a.styleUrls, externalStylesheets = _a.externalStylesheets, animations = _a.animations, ngContentSelectors = _a.ngContentSelectors, interpolation = _a.interpolation, isInline = _a.isInline;\n        this.encapsulation = encapsulation;\n        this.template = template;\n        this.templateUrl = templateUrl;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n        this.externalStylesheets = _normalizeArray(externalStylesheets);\n        this.animations = animations ? flatten(animations) : [];\n        this.ngContentSelectors = ngContentSelectors || [];\n        if (interpolation && interpolation.length != 2) {\n            throw new Error(\"'interpolation' should have a start and an end symbol.\");\n        }\n        this.interpolation = interpolation;\n        this.isInline = isInline;\n    }\n    /**\n     * @return {?}\n     */\n    CompileTemplateMetadata.prototype.toSummary = function () {\n        return {\n            animations: this.animations.map(function (anim) { return anim.name; }),\n            ngContentSelectors: this.ngContentSelectors,\n            encapsulation: this.encapsulation,\n        };\n    };\n    return CompileTemplateMetadata;\n}());\n/**\n * Metadata regarding compilation of a directive.\n */\nvar CompileDirectiveMetadata = (function () {\n    /**\n     * @param {?} __0\n     */\n    function CompileDirectiveMetadata(_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, hostListeners = _a.hostListeners, hostProperties = _a.hostProperties, hostAttributes = _a.hostAttributes, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        this.isHost = !!isHost;\n        this.type = type;\n        this.isComponent = isComponent;\n        this.selector = selector;\n        this.exportAs = exportAs;\n        this.changeDetection = changeDetection;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.hostListeners = hostListeners;\n        this.hostProperties = hostProperties;\n        this.hostAttributes = hostAttributes;\n        this.providers = _normalizeArray(providers);\n        this.viewProviders = _normalizeArray(viewProviders);\n        this.queries = _normalizeArray(queries);\n        this.viewQueries = _normalizeArray(viewQueries);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.template = template;\n        this.componentViewType = componentViewType;\n        this.rendererType = rendererType;\n        this.componentFactory = componentFactory;\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    CompileDirectiveMetadata.create = function (_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, host = _a.host, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        var /** @type {?} */ hostListeners = {};\n        var /** @type {?} */ hostProperties = {};\n        var /** @type {?} */ hostAttributes = {};\n        if (host != null) {\n            Object.keys(host).forEach(function (key) {\n                var /** @type {?} */ value = host[key];\n                var /** @type {?} */ matches = key.match(HOST_REG_EXP);\n                if (matches === null) {\n                    hostAttributes[key] = value;\n                }\n                else if (matches[1] != null) {\n                    hostProperties[matches[1]] = value;\n                }\n                else if (matches[2] != null) {\n                    hostListeners[matches[2]] = value;\n                }\n            });\n        }\n        var /** @type {?} */ inputsMap = {};\n        if (inputs != null) {\n            inputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                inputsMap[parts[0]] = parts[1];\n            });\n        }\n        var /** @type {?} */ outputsMap = {};\n        if (outputs != null) {\n            outputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                outputsMap[parts[0]] = parts[1];\n            });\n        }\n        return new CompileDirectiveMetadata({\n            isHost: isHost,\n            type: type,\n            isComponent: !!isComponent, selector: selector, exportAs: exportAs, changeDetection: changeDetection,\n            inputs: inputsMap,\n            outputs: outputsMap,\n            hostListeners: hostListeners,\n            hostProperties: hostProperties,\n            hostAttributes: hostAttributes,\n            providers: providers,\n            viewProviders: viewProviders,\n            queries: queries,\n            viewQueries: viewQueries,\n            entryComponents: entryComponents,\n            template: template,\n            componentViewType: componentViewType,\n            rendererType: rendererType,\n            componentFactory: componentFactory,\n        });\n    };\n    /**\n     * @return {?}\n     */\n    CompileDirectiveMetadata.prototype.toSummary = function () {\n        return {\n            summaryKind: CompileSummaryKind.Directive,\n            type: this.type,\n            isComponent: this.isComponent,\n            selector: this.selector,\n            exportAs: this.exportAs,\n            inputs: this.inputs,\n            outputs: this.outputs,\n            hostListeners: this.hostListeners,\n            hostProperties: this.hostProperties,\n            hostAttributes: this.hostAttributes,\n            providers: this.providers,\n            viewProviders: this.viewProviders,\n            queries: this.queries,\n            viewQueries: this.viewQueries,\n            entryComponents: this.entryComponents,\n            changeDetection: this.changeDetection,\n            template: this.template && this.template.toSummary(),\n            componentViewType: this.componentViewType,\n            rendererType: this.rendererType,\n            componentFactory: this.componentFactory\n        };\n    };\n    return CompileDirectiveMetadata;\n}());\n/**\n * Construct {\\@link CompileDirectiveMetadata} from {\\@link ComponentTypeMetadata} and a selector.\n * @param {?} hostTypeReference\n * @param {?} compMeta\n * @param {?} hostViewType\n * @return {?}\n */\nfunction createHostComponentMeta(hostTypeReference, compMeta, hostViewType) {\n    var /** @type {?} */ template = CssSelector.parse(/** @type {?} */ ((compMeta.selector)))[0].getMatchingElementTemplate();\n    return CompileDirectiveMetadata.create({\n        isHost: true,\n        type: { reference: hostTypeReference, diDeps: [], lifecycleHooks: [] },\n        template: new CompileTemplateMetadata({\n            encapsulation: _angular_core.ViewEncapsulation.None,\n            template: template,\n            templateUrl: '',\n            styles: [],\n            styleUrls: [],\n            ngContentSelectors: [],\n            animations: [],\n            isInline: true,\n            externalStylesheets: [],\n            interpolation: null\n        }),\n        exportAs: null,\n        changeDetection: _angular_core.ChangeDetectionStrategy.Default,\n        inputs: [],\n        outputs: [],\n        host: {},\n        isComponent: true,\n        selector: '*',\n        providers: [],\n        viewProviders: [],\n        queries: [],\n        viewQueries: [],\n        componentViewType: hostViewType,\n        rendererType: { id: '__Host__', encapsulation: _angular_core.ViewEncapsulation.None, styles: [], data: {} },\n        entryComponents: [],\n        componentFactory: null\n    });\n}\nvar CompilePipeMetadata = (function () {\n    /**\n     * @param {?} __0\n     */\n    function CompilePipeMetadata(_a) {\n        var type = _a.type, name = _a.name, pure = _a.pure;\n        this.type = type;\n        this.name = name;\n        this.pure = !!pure;\n    }\n    /**\n     * @return {?}\n     */\n    CompilePipeMetadata.prototype.toSummary = function () {\n        return {\n            summaryKind: CompileSummaryKind.Pipe,\n            type: this.type,\n            name: this.name,\n            pure: this.pure\n        };\n    };\n    return CompilePipeMetadata;\n}());\n/**\n * Metadata regarding compilation of a module.\n */\nvar CompileNgModuleMetadata = (function () {\n    /**\n     * @param {?} __0\n     */\n    function CompileNgModuleMetadata(_a) {\n        var type = _a.type, providers = _a.providers, declaredDirectives = _a.declaredDirectives, exportedDirectives = _a.exportedDirectives, declaredPipes = _a.declaredPipes, exportedPipes = _a.exportedPipes, entryComponents = _a.entryComponents, bootstrapComponents = _a.bootstrapComponents, importedModules = _a.importedModules, exportedModules = _a.exportedModules, schemas = _a.schemas, transitiveModule = _a.transitiveModule, id = _a.id;\n        this.type = type || null;\n        this.declaredDirectives = _normalizeArray(declaredDirectives);\n        this.exportedDirectives = _normalizeArray(exportedDirectives);\n        this.declaredPipes = _normalizeArray(declaredPipes);\n        this.exportedPipes = _normalizeArray(exportedPipes);\n        this.providers = _normalizeArray(providers);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n        this.importedModules = _normalizeArray(importedModules);\n        this.exportedModules = _normalizeArray(exportedModules);\n        this.schemas = _normalizeArray(schemas);\n        this.id = id || null;\n        this.transitiveModule = transitiveModule || null;\n    }\n    /**\n     * @return {?}\n     */\n    CompileNgModuleMetadata.prototype.toSummary = function () {\n        var /** @type {?} */ module = ((this.transitiveModule));\n        return {\n            summaryKind: CompileSummaryKind.NgModule,\n            type: this.type,\n            entryComponents: module.entryComponents,\n            providers: module.providers,\n            modules: module.modules,\n            exportedDirectives: module.exportedDirectives,\n            exportedPipes: module.exportedPipes\n        };\n    };\n    return CompileNgModuleMetadata;\n}());\nvar TransitiveCompileNgModuleMetadata = (function () {\n    function TransitiveCompileNgModuleMetadata() {\n        this.directivesSet = new Set();\n        this.directives = [];\n        this.exportedDirectivesSet = new Set();\n        this.exportedDirectives = [];\n        this.pipesSet = new Set();\n        this.pipes = [];\n        this.exportedPipesSet = new Set();\n        this.exportedPipes = [];\n        this.modulesSet = new Set();\n        this.modules = [];\n        this.entryComponentsSet = new Set();\n        this.entryComponents = [];\n        this.providers = [];\n    }\n    /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addProvider = function (provider, module) {\n        this.providers.push({ provider: provider, module: module });\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addDirective = function (id) {\n        if (!this.directivesSet.has(id.reference)) {\n            this.directivesSet.add(id.reference);\n            this.directives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedDirective = function (id) {\n        if (!this.exportedDirectivesSet.has(id.reference)) {\n            this.exportedDirectivesSet.add(id.reference);\n            this.exportedDirectives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addPipe = function (id) {\n        if (!this.pipesSet.has(id.reference)) {\n            this.pipesSet.add(id.reference);\n            this.pipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedPipe = function (id) {\n        if (!this.exportedPipesSet.has(id.reference)) {\n            this.exportedPipesSet.add(id.reference);\n            this.exportedPipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addModule = function (id) {\n        if (!this.modulesSet.has(id.reference)) {\n            this.modulesSet.add(id.reference);\n            this.modules.push(id);\n        }\n    };\n    /**\n     * @param {?} ec\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addEntryComponent = function (ec) {\n        if (!this.entryComponentsSet.has(ec.componentType)) {\n            this.entryComponentsSet.add(ec.componentType);\n            this.entryComponents.push(ec);\n        }\n    };\n    return TransitiveCompileNgModuleMetadata;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _normalizeArray(obj) {\n    return obj || [];\n}\nvar ProviderMeta = (function () {\n    /**\n     * @param {?} token\n     * @param {?} __1\n     */\n    function ProviderMeta(token, _a) {\n        var useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n        this.token = token;\n        this.useClass = useClass || null;\n        this.useValue = useValue;\n        this.useExisting = useExisting;\n        this.useFactory = useFactory || null;\n        this.dependencies = deps || null;\n        this.multi = !!multi;\n    }\n    return ProviderMeta;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n        return ((flat)).concat(flatItem);\n    }, []);\n}\n/**\n * @param {?} url\n * @return {?}\n */\nfunction sourceUrl(url) {\n    // Note: We need 3 \"/\" so that ng shows up as a separate domain\n    // in the chrome dev tools.\n    return url.replace(/(\\w+:\\/\\/[\\w:-]+)?(\\/+)?/, 'ng:///');\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @param {?} templateMeta\n * @return {?}\n */\nfunction templateSourceUrl(ngModuleType, compMeta, templateMeta) {\n    var /** @type {?} */ url;\n    if (templateMeta.isInline) {\n        if (compMeta.type.reference instanceof StaticSymbol) {\n            // Note: a .ts file might contain multiple components with inline templates,\n            // so we need to give them unique urls, as these will be used for sourcemaps.\n            url = compMeta.type.reference.filePath + \".\" + compMeta.type.reference.name + \".html\";\n        }\n        else {\n            url = identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".html\";\n        }\n    }\n    else {\n        url = ((templateMeta.templateUrl));\n    }\n    // always prepend ng:// to make angular resources easy to find and not clobber\n    // user resources.\n    return sourceUrl(url);\n}\n/**\n * @param {?} meta\n * @param {?} id\n * @return {?}\n */\nfunction sharedStylesheetJitUrl(meta, id) {\n    var /** @type {?} */ pathParts = ((meta.moduleUrl)).split(/\\/\\\\/g);\n    var /** @type {?} */ baseName = pathParts[pathParts.length - 1];\n    return sourceUrl(\"css/\" + id + baseName + \".ngstyle.js\");\n}\n/**\n * @param {?} moduleMeta\n * @return {?}\n */\nfunction ngModuleJitUrl(moduleMeta) {\n    return sourceUrl(identifierName(moduleMeta.type) + \"/module.ngfactory.js\");\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @return {?}\n */\nfunction templateJitUrl(ngModuleType, compMeta) {\n    return sourceUrl(identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".ngfactory.js\");\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CompilerConfig = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function CompilerConfig(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.defaultEncapsulation, defaultEncapsulation = _c === void 0 ? _angular_core.ViewEncapsulation.Emulated : _c, _d = _b.useJit, useJit = _d === void 0 ? true : _d, missingTranslation = _b.missingTranslation, enableLegacyTemplate = _b.enableLegacyTemplate;\n        this.defaultEncapsulation = defaultEncapsulation;\n        this.useJit = !!useJit;\n        this.missingTranslation = missingTranslation || null;\n        this.enableLegacyTemplate = enableLegacyTemplate !== false;\n    }\n    return CompilerConfig;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParserError = (function () {\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     */\n    function ParserError(message, input, errLocation, ctxLocation) {\n        this.input = input;\n        this.errLocation = errLocation;\n        this.ctxLocation = ctxLocation;\n        this.message = \"Parser Error: \" + message + \" \" + errLocation + \" [\" + input + \"] in \" + ctxLocation;\n    }\n    return ParserError;\n}());\nvar ParseSpan = (function () {\n    /**\n     * @param {?} start\n     * @param {?} end\n     */\n    function ParseSpan(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    return ParseSpan;\n}());\nvar AST = (function () {\n    /**\n     * @param {?} span\n     */\n    function AST(span) {\n        this.span = span;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    AST.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return null;\n    };\n    /**\n     * @return {?}\n     */\n    AST.prototype.toString = function () { return 'AST'; };\n    return AST;\n}());\n/**\n * Represents a quoted expression of the form:\n *\n * quote = prefix `:` uninterpretedExpression\n * prefix = identifier\n * uninterpretedExpression = arbitrary string\n *\n * A quoted expression is meant to be pre-processed by an AST transformer that\n * converts it into another AST that no longer contains quoted expressions.\n * It is meant to allow third-party developers to extend Angular template\n * expression language. The `uninterpretedExpression` part of the quote is\n * therefore not interpreted by the Angular's own expression parser.\n */\nvar Quote = (function (_super) {\n    __extends(Quote, _super);\n    /**\n     * @param {?} span\n     * @param {?} prefix\n     * @param {?} uninterpretedExpression\n     * @param {?} location\n     */\n    function Quote(span, prefix, uninterpretedExpression, location) {\n        var _this = _super.call(this, span) || this;\n        _this.prefix = prefix;\n        _this.uninterpretedExpression = uninterpretedExpression;\n        _this.location = location;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Quote.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitQuote(this, context);\n    };\n    /**\n     * @return {?}\n     */\n    Quote.prototype.toString = function () { return 'Quote'; };\n    return Quote;\n}(AST));\nvar EmptyExpr = (function (_super) {\n    __extends(EmptyExpr, _super);\n    function EmptyExpr() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    EmptyExpr.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        // do nothing\n    };\n    return EmptyExpr;\n}(AST));\nvar ImplicitReceiver = (function (_super) {\n    __extends(ImplicitReceiver, _super);\n    function ImplicitReceiver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ImplicitReceiver.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitImplicitReceiver(this, context);\n    };\n    return ImplicitReceiver;\n}(AST));\n/**\n * Multiple expressions separated by a semicolon.\n */\nvar Chain = (function (_super) {\n    __extends(Chain, _super);\n    /**\n     * @param {?} span\n     * @param {?} expressions\n     */\n    function Chain(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Chain.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitChain(this, context);\n    };\n    return Chain;\n}(AST));\nvar Conditional = (function (_super) {\n    __extends(Conditional, _super);\n    /**\n     * @param {?} span\n     * @param {?} condition\n     * @param {?} trueExp\n     * @param {?} falseExp\n     */\n    function Conditional(span, condition, trueExp, falseExp) {\n        var _this = _super.call(this, span) || this;\n        _this.condition = condition;\n        _this.trueExp = trueExp;\n        _this.falseExp = falseExp;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Conditional.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitConditional(this, context);\n    };\n    return Conditional;\n}(AST));\nvar PropertyRead = (function (_super) {\n    __extends(PropertyRead, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     */\n    function PropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyRead.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyRead(this, context);\n    };\n    return PropertyRead;\n}(AST));\nvar PropertyWrite = (function (_super) {\n    __extends(PropertyWrite, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} value\n     */\n    function PropertyWrite(span, receiver, name, value) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyWrite.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyWrite(this, context);\n    };\n    return PropertyWrite;\n}(AST));\nvar SafePropertyRead = (function (_super) {\n    __extends(SafePropertyRead, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     */\n    function SafePropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafePropertyRead.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafePropertyRead(this, context);\n    };\n    return SafePropertyRead;\n}(AST));\nvar KeyedRead = (function (_super) {\n    __extends(KeyedRead, _super);\n    /**\n     * @param {?} span\n     * @param {?} obj\n     * @param {?} key\n     */\n    function KeyedRead(span, obj, key) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedRead.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedRead(this, context);\n    };\n    return KeyedRead;\n}(AST));\nvar KeyedWrite = (function (_super) {\n    __extends(KeyedWrite, _super);\n    /**\n     * @param {?} span\n     * @param {?} obj\n     * @param {?} key\n     * @param {?} value\n     */\n    function KeyedWrite(span, obj, key, value) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedWrite.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedWrite(this, context);\n    };\n    return KeyedWrite;\n}(AST));\nvar BindingPipe = (function (_super) {\n    __extends(BindingPipe, _super);\n    /**\n     * @param {?} span\n     * @param {?} exp\n     * @param {?} name\n     * @param {?} args\n     */\n    function BindingPipe(span, exp, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.exp = exp;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    BindingPipe.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPipe(this, context);\n    };\n    return BindingPipe;\n}(AST));\nvar LiteralPrimitive = (function (_super) {\n    __extends(LiteralPrimitive, _super);\n    /**\n     * @param {?} span\n     * @param {?} value\n     */\n    function LiteralPrimitive(span, value) {\n        var _this = _super.call(this, span) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralPrimitive.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralPrimitive(this, context);\n    };\n    return LiteralPrimitive;\n}(AST));\nvar LiteralArray = (function (_super) {\n    __extends(LiteralArray, _super);\n    /**\n     * @param {?} span\n     * @param {?} expressions\n     */\n    function LiteralArray(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralArray.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralArray(this, context);\n    };\n    return LiteralArray;\n}(AST));\nvar LiteralMap = (function (_super) {\n    __extends(LiteralMap, _super);\n    /**\n     * @param {?} span\n     * @param {?} keys\n     * @param {?} values\n     */\n    function LiteralMap(span, keys, values) {\n        var _this = _super.call(this, span) || this;\n        _this.keys = keys;\n        _this.values = values;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralMap.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralMap(this, context);\n    };\n    return LiteralMap;\n}(AST));\nvar Interpolation = (function (_super) {\n    __extends(Interpolation, _super);\n    /**\n     * @param {?} span\n     * @param {?} strings\n     * @param {?} expressions\n     */\n    function Interpolation(span, strings, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.strings = strings;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Interpolation.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitInterpolation(this, context);\n    };\n    return Interpolation;\n}(AST));\nvar Binary = (function (_super) {\n    __extends(Binary, _super);\n    /**\n     * @param {?} span\n     * @param {?} operation\n     * @param {?} left\n     * @param {?} right\n     */\n    function Binary(span, operation, left, right) {\n        var _this = _super.call(this, span) || this;\n        _this.operation = operation;\n        _this.left = left;\n        _this.right = right;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Binary.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitBinary(this, context);\n    };\n    return Binary;\n}(AST));\nvar PrefixNot = (function (_super) {\n    __extends(PrefixNot, _super);\n    /**\n     * @param {?} span\n     * @param {?} expression\n     */\n    function PrefixNot(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PrefixNot.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPrefixNot(this, context);\n    };\n    return PrefixNot;\n}(AST));\nvar NonNullAssert = (function (_super) {\n    __extends(NonNullAssert, _super);\n    /**\n     * @param {?} span\n     * @param {?} expression\n     */\n    function NonNullAssert(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    NonNullAssert.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitNonNullAssert(this, context);\n    };\n    return NonNullAssert;\n}(AST));\nvar MethodCall = (function (_super) {\n    __extends(MethodCall, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} args\n     */\n    function MethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    MethodCall.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitMethodCall(this, context);\n    };\n    return MethodCall;\n}(AST));\nvar SafeMethodCall = (function (_super) {\n    __extends(SafeMethodCall, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} args\n     */\n    function SafeMethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafeMethodCall.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafeMethodCall(this, context);\n    };\n    return SafeMethodCall;\n}(AST));\nvar FunctionCall = (function (_super) {\n    __extends(FunctionCall, _super);\n    /**\n     * @param {?} span\n     * @param {?} target\n     * @param {?} args\n     */\n    function FunctionCall(span, target, args) {\n        var _this = _super.call(this, span) || this;\n        _this.target = target;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    FunctionCall.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitFunctionCall(this, context);\n    };\n    return FunctionCall;\n}(AST));\nvar ASTWithSource = (function (_super) {\n    __extends(ASTWithSource, _super);\n    /**\n     * @param {?} ast\n     * @param {?} source\n     * @param {?} location\n     * @param {?} errors\n     */\n    function ASTWithSource(ast, source, location, errors) {\n        var _this = _super.call(this, new ParseSpan(0, source == null ? 0 : source.length)) || this;\n        _this.ast = ast;\n        _this.source = source;\n        _this.location = location;\n        _this.errors = errors;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ASTWithSource.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return this.ast.visit(visitor, context);\n    };\n    /**\n     * @return {?}\n     */\n    ASTWithSource.prototype.toString = function () { return this.source + \" in \" + this.location; };\n    return ASTWithSource;\n}(AST));\nvar TemplateBinding = (function () {\n    /**\n     * @param {?} span\n     * @param {?} key\n     * @param {?} keyIsVar\n     * @param {?} name\n     * @param {?} expression\n     */\n    function TemplateBinding(span, key, keyIsVar, name, expression) {\n        this.span = span;\n        this.key = key;\n        this.keyIsVar = keyIsVar;\n        this.name = name;\n        this.expression = expression;\n    }\n    return TemplateBinding;\n}());\nvar NullAstVisitor = (function () {\n    function NullAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitBinary = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitChain = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitConditional = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitFunctionCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitImplicitReceiver = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitInterpolation = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedWrite = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralArray = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralMap = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralPrimitive = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitMethodCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPipe = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPrefixNot = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitNonNullAssert = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyWrite = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitQuote = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafeMethodCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafePropertyRead = function (ast, context) { };\n    return NullAstVisitor;\n}());\nvar RecursiveAstVisitor = (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinary = function (ast, context) {\n        ast.left.visit(this);\n        ast.right.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitChain = function (ast, context) { return this.visitAll(ast.expressions, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditional = function (ast, context) {\n        ast.condition.visit(this);\n        ast.trueExp.visit(this);\n        ast.falseExp.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPipe = function (ast, context) {\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionCall = function (ast, context) {\n        ((ast.target)).visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitImplicitReceiver = function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInterpolation = function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedRead = function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedWrite = function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArray = function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMap = function (ast, context) { return this.visitAll(ast.values, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralPrimitive = function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMethodCall = function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPrefixNot = function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNonNullAssert = function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyRead = function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyWrite = function (ast, context) {\n        ast.receiver.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafePropertyRead = function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafeMethodCall = function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAll = function (asts, context) {\n        var _this = this;\n        asts.forEach(function (ast) { return ast.visit(_this, context); });\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitQuote = function (ast, context) { return null; };\n    return RecursiveAstVisitor;\n}());\nvar AstTransformer = (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitImplicitReceiver = function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInterpolation = function (ast, context) {\n        return new Interpolation(ast.span, ast.strings, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralPrimitive = function (ast, context) {\n        return new LiteralPrimitive(ast.span, ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyRead = function (ast, context) {\n        return new PropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyWrite = function (ast, context) {\n        return new PropertyWrite(ast.span, ast.receiver.visit(this), ast.name, ast.value.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafePropertyRead = function (ast, context) {\n        return new SafePropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitMethodCall = function (ast, context) {\n        return new MethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafeMethodCall = function (ast, context) {\n        return new SafeMethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionCall = function (ast, context) {\n        return new FunctionCall(ast.span, /** @type {?} */ ((ast.target)).visit(this), this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArray = function (ast, context) {\n        return new LiteralArray(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMap = function (ast, context) {\n        return new LiteralMap(ast.span, ast.keys, this.visitAll(ast.values));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinary = function (ast, context) {\n        return new Binary(ast.span, ast.operation, ast.left.visit(this), ast.right.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPrefixNot = function (ast, context) {\n        return new PrefixNot(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNonNullAssert = function (ast, context) {\n        return new NonNullAssert(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditional = function (ast, context) {\n        return new Conditional(ast.span, ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPipe = function (ast, context) {\n        return new BindingPipe(ast.span, ast.exp.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedRead = function (ast, context) {\n        return new KeyedRead(ast.span, ast.obj.visit(this), ast.key.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedWrite = function (ast, context) {\n        return new KeyedWrite(ast.span, ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));\n    };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAll = function (asts) {\n        var /** @type {?} */ res = new Array(asts.length);\n        for (var /** @type {?} */ i = 0; i < asts.length; ++i) {\n            res[i] = asts[i].visit(this);\n        }\n        return res;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitChain = function (ast, context) {\n        return new Chain(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitQuote = function (ast, context) {\n        return new Quote(ast.span, ast.prefix, ast.uninterpretedExpression, ast.location);\n    };\n    return AstTransformer;\n}());\n/**\n * @param {?} ast\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nfunction visitAstChildren(ast, visitor, context) {\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function visit(ast) {\n        visitor.visit && visitor.visit(ast, context) || ast.visit(visitor, context);\n    }\n    /**\n     * @template T\n     * @param {?} asts\n     * @return {?}\n     */\n    function visitAll(asts) { asts.forEach(visit); }\n    ast.visit({\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitBinary: function (ast) {\n            visit(ast.left);\n            visit(ast.right);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitChain: function (ast) { visitAll(ast.expressions); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitConditional: function (ast) {\n            visit(ast.condition);\n            visit(ast.trueExp);\n            visit(ast.falseExp);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitFunctionCall: function (ast) {\n            if (ast.target) {\n                visit(ast.target);\n            }\n            visitAll(ast.args);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitImplicitReceiver: function (ast) { },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitInterpolation: function (ast) { visitAll(ast.expressions); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitKeyedRead: function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitKeyedWrite: function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n            visit(ast.obj);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitLiteralArray: function (ast) { visitAll(ast.expressions); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitLiteralMap: function (ast) { },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitLiteralPrimitive: function (ast) { },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitMethodCall: function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitPipe: function (ast) {\n            visit(ast.exp);\n            visitAll(ast.args);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitPrefixNot: function (ast) { visit(ast.expression); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitNonNullAssert: function (ast) { visit(ast.expression); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitPropertyRead: function (ast) { visit(ast.receiver); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitPropertyWrite: function (ast) {\n            visit(ast.receiver);\n            visit(ast.value);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitQuote: function (ast) { },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitSafeMethodCall: function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitSafePropertyRead: function (ast) { visit(ast.receiver); },\n    });\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar $EOF = 0;\nvar $TAB = 9;\nvar $LF = 10;\nvar $VTAB = 11;\nvar $FF = 12;\nvar $CR = 13;\nvar $SPACE = 32;\nvar $BANG = 33;\nvar $DQ = 34;\nvar $HASH = 35;\nvar $$ = 36;\nvar $PERCENT = 37;\nvar $AMPERSAND = 38;\nvar $SQ = 39;\nvar $LPAREN = 40;\nvar $RPAREN = 41;\nvar $STAR = 42;\nvar $PLUS = 43;\nvar $COMMA = 44;\nvar $MINUS = 45;\nvar $PERIOD = 46;\nvar $SLASH = 47;\nvar $COLON = 58;\nvar $SEMICOLON = 59;\nvar $LT = 60;\nvar $EQ = 61;\nvar $GT = 62;\nvar $QUESTION = 63;\nvar $0 = 48;\nvar $9 = 57;\nvar $A = 65;\nvar $E = 69;\nvar $F = 70;\nvar $X = 88;\nvar $Z = 90;\nvar $LBRACKET = 91;\nvar $BACKSLASH = 92;\nvar $RBRACKET = 93;\nvar $CARET = 94;\nvar $_ = 95;\nvar $a = 97;\nvar $e = 101;\nvar $f = 102;\nvar $n = 110;\nvar $r = 114;\nvar $t = 116;\nvar $u = 117;\nvar $v = 118;\nvar $x = 120;\nvar $z = 122;\nvar $LBRACE = 123;\nvar $BAR = 124;\nvar $RBRACE = 125;\nvar $NBSP = 160;\nvar $BT = 96;\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isWhitespace(code) {\n    return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigit(code) {\n    return $0 <= code && code <= $9;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiLetter(code) {\n    return code >= $a && code <= $z || code >= $A && code <= $Z;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiHexDigit(code) {\n    return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n}\n/**\n * A replacement for \\@Injectable to be used in the compiler, so that\n * we don't try to evaluate the metadata in the compiler during AoT.\n * This decorator is enough to make the compiler work with the ReflectiveInjector though.\n * \\@Annotation\n * @return {?}\n */\nfunction CompilerInjectable() {\n    return function (x) { return x; };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertArrayOfStrings(identifier, value) {\n    if (!_angular_core.isDevMode() || value == null) {\n        return;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n    }\n    for (var /** @type {?} */ i = 0; i < value.length; i += 1) {\n        if (typeof value[i] !== 'string') {\n            throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n        }\n    }\n}\nvar INTERPOLATION_BLACKLIST_REGEXPS = [\n    /^\\s*$/,\n    /[<>]/,\n    /^[{}]$/,\n    /&(#|[a-z])/i,\n    /^\\/\\//,\n];\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertInterpolationSymbols(identifier, value) {\n    if (value != null && !(Array.isArray(value) && value.length == 2)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array, [start, end].\");\n    }\n    else if (_angular_core.isDevMode() && value != null) {\n        var /** @type {?} */ start_1 = (value[0]);\n        var /** @type {?} */ end_1 = (value[1]);\n        // black list checking\n        INTERPOLATION_BLACKLIST_REGEXPS.forEach(function (regexp) {\n            if (regexp.test(start_1) || regexp.test(end_1)) {\n                throw new Error(\"['\" + start_1 + \"', '\" + end_1 + \"'] contains unusable interpolation symbol.\");\n            }\n        });\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar InterpolationConfig = (function () {\n    /**\n     * @param {?} start\n     * @param {?} end\n     */\n    function InterpolationConfig(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    /**\n     * @param {?} markers\n     * @return {?}\n     */\n    InterpolationConfig.fromArray = function (markers) {\n        if (!markers) {\n            return DEFAULT_INTERPOLATION_CONFIG;\n        }\n        assertInterpolationSymbols('interpolation', markers);\n        return new InterpolationConfig(markers[0], markers[1]);\n    };\n    \n    return InterpolationConfig;\n}());\nvar DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TokenType = {};\nTokenType.Character = 0;\nTokenType.Identifier = 1;\nTokenType.Keyword = 2;\nTokenType.String = 3;\nTokenType.Operator = 4;\nTokenType.Number = 5;\nTokenType.Error = 6;\nTokenType[TokenType.Character] = \"Character\";\nTokenType[TokenType.Identifier] = \"Identifier\";\nTokenType[TokenType.Keyword] = \"Keyword\";\nTokenType[TokenType.String] = \"String\";\nTokenType[TokenType.Operator] = \"Operator\";\nTokenType[TokenType.Number] = \"Number\";\nTokenType[TokenType.Error] = \"Error\";\nvar KEYWORDS = ['var', 'let', 'as', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\nvar Lexer = (function () {\n    function Lexer() {\n    }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    Lexer.prototype.tokenize = function (text) {\n        var /** @type {?} */ scanner = new _Scanner(text);\n        var /** @type {?} */ tokens = [];\n        var /** @type {?} */ token = scanner.scanToken();\n        while (token != null) {\n            tokens.push(token);\n            token = scanner.scanToken();\n        }\n        return tokens;\n    };\n    return Lexer;\n}());\nLexer.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nLexer.ctorParameters = function () { return []; };\nvar Token = (function () {\n    /**\n     * @param {?} index\n     * @param {?} type\n     * @param {?} numValue\n     * @param {?} strValue\n     */\n    function Token(index, type, numValue, strValue) {\n        this.index = index;\n        this.type = type;\n        this.numValue = numValue;\n        this.strValue = strValue;\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    Token.prototype.isCharacter = function (code) {\n        return this.type == TokenType.Character && this.numValue == code;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isNumber = function () { return this.type == TokenType.Number; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isString = function () { return this.type == TokenType.String; };\n    /**\n     * @param {?} operater\n     * @return {?}\n     */\n    Token.prototype.isOperator = function (operater) {\n        return this.type == TokenType.Operator && this.strValue == operater;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isIdentifier = function () { return this.type == TokenType.Identifier; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeyword = function () { return this.type == TokenType.Keyword; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordLet = function () { return this.type == TokenType.Keyword && this.strValue == 'let'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordAs = function () { return this.type == TokenType.Keyword && this.strValue == 'as'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordNull = function () { return this.type == TokenType.Keyword && this.strValue == 'null'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordUndefined = function () {\n        return this.type == TokenType.Keyword && this.strValue == 'undefined';\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordTrue = function () { return this.type == TokenType.Keyword && this.strValue == 'true'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordFalse = function () { return this.type == TokenType.Keyword && this.strValue == 'false'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordThis = function () { return this.type == TokenType.Keyword && this.strValue == 'this'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isError = function () { return this.type == TokenType.Error; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toNumber = function () { return this.type == TokenType.Number ? this.numValue : -1; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toString = function () {\n        switch (this.type) {\n            case TokenType.Character:\n            case TokenType.Identifier:\n            case TokenType.Keyword:\n            case TokenType.Operator:\n            case TokenType.String:\n            case TokenType.Error:\n                return this.strValue;\n            case TokenType.Number:\n                return this.numValue.toString();\n            default:\n                return null;\n        }\n    };\n    return Token;\n}());\n/**\n * @param {?} index\n * @param {?} code\n * @return {?}\n */\nfunction newCharacterToken(index, code) {\n    return new Token(index, TokenType.Character, code, String.fromCharCode(code));\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newIdentifierToken(index, text) {\n    return new Token(index, TokenType.Identifier, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newKeywordToken(index, text) {\n    return new Token(index, TokenType.Keyword, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newOperatorToken(index, text) {\n    return new Token(index, TokenType.Operator, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newStringToken(index, text) {\n    return new Token(index, TokenType.String, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} n\n * @return {?}\n */\nfunction newNumberToken(index, n) {\n    return new Token(index, TokenType.Number, n, '');\n}\n/**\n * @param {?} index\n * @param {?} message\n * @return {?}\n */\nfunction newErrorToken(index, message) {\n    return new Token(index, TokenType.Error, 0, message);\n}\nvar EOF = new Token(-1, TokenType.Character, 0, '');\nvar _Scanner = (function () {\n    /**\n     * @param {?} input\n     */\n    function _Scanner(input) {\n        this.input = input;\n        this.peek = 0;\n        this.index = -1;\n        this.length = input.length;\n        this.advance();\n    }\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.advance = function () {\n        this.peek = ++this.index >= this.length ? $EOF : this.input.charCodeAt(this.index);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanToken = function () {\n        var /** @type {?} */ input = this.input, /** @type {?} */ length = this.length;\n        var /** @type {?} */ peek = this.peek, /** @type {?} */ index = this.index;\n        // Skip whitespace.\n        while (peek <= $SPACE) {\n            if (++index >= length) {\n                peek = $EOF;\n                break;\n            }\n            else {\n                peek = input.charCodeAt(index);\n            }\n        }\n        this.peek = peek;\n        this.index = index;\n        if (index >= length) {\n            return null;\n        }\n        // Handle identifiers and numbers.\n        if (isIdentifierStart(peek))\n            return this.scanIdentifier();\n        if (isDigit(peek))\n            return this.scanNumber(index);\n        var /** @type {?} */ start = index;\n        switch (peek) {\n            case $PERIOD:\n                this.advance();\n                return isDigit(this.peek) ? this.scanNumber(start) :\n                    newCharacterToken(start, $PERIOD);\n            case $LPAREN:\n            case $RPAREN:\n            case $LBRACE:\n            case $RBRACE:\n            case $LBRACKET:\n            case $RBRACKET:\n            case $COMMA:\n            case $COLON:\n            case $SEMICOLON:\n                return this.scanCharacter(start, peek);\n            case $SQ:\n            case $DQ:\n                return this.scanString();\n            case $HASH:\n            case $PLUS:\n            case $MINUS:\n            case $STAR:\n            case $SLASH:\n            case $PERCENT:\n            case $CARET:\n                return this.scanOperator(start, String.fromCharCode(peek));\n            case $QUESTION:\n                return this.scanComplexOperator(start, '?', $PERIOD, '.');\n            case $LT:\n            case $GT:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=');\n            case $BANG:\n            case $EQ:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=', $EQ, '=');\n            case $AMPERSAND:\n                return this.scanComplexOperator(start, '&', $AMPERSAND, '&');\n            case $BAR:\n                return this.scanComplexOperator(start, '|', $BAR, '|');\n            case $NBSP:\n                while (isWhitespace(this.peek))\n                    this.advance();\n                return this.scanToken();\n        }\n        this.advance();\n        return this.error(\"Unexpected character [\" + String.fromCharCode(peek) + \"]\", 0);\n    };\n    /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    _Scanner.prototype.scanCharacter = function (start, code) {\n        this.advance();\n        return newCharacterToken(start, code);\n    };\n    /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    _Scanner.prototype.scanOperator = function (start, str) {\n        this.advance();\n        return newOperatorToken(start, str);\n    };\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    _Scanner.prototype.scanComplexOperator = function (start, one, twoCode, two, threeCode, three) {\n        this.advance();\n        var /** @type {?} */ str = one;\n        if (this.peek == twoCode) {\n            this.advance();\n            str += two;\n        }\n        if (threeCode != null && this.peek == threeCode) {\n            this.advance();\n            str += three;\n        }\n        return newOperatorToken(start, str);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanIdentifier = function () {\n        var /** @type {?} */ start = this.index;\n        this.advance();\n        while (isIdentifierPart(this.peek))\n            this.advance();\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n            newIdentifierToken(start, str);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Scanner.prototype.scanNumber = function (start) {\n        var /** @type {?} */ simple = (this.index === start);\n        this.advance(); // Skip initial digit.\n        while (true) {\n            if (isDigit(this.peek)) {\n                // Do nothing.\n            }\n            else if (this.peek == $PERIOD) {\n                simple = false;\n            }\n            else if (isExponentStart(this.peek)) {\n                this.advance();\n                if (isExponentSign(this.peek))\n                    this.advance();\n                if (!isDigit(this.peek))\n                    return this.error('Invalid exponent', -1);\n                simple = false;\n            }\n            else {\n                break;\n            }\n            this.advance();\n        }\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        var /** @type {?} */ value = simple ? parseIntAutoRadix(str) : parseFloat(str);\n        return newNumberToken(start, value);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanString = function () {\n        var /** @type {?} */ start = this.index;\n        var /** @type {?} */ quote = this.peek;\n        this.advance(); // Skip initial quote.\n        var /** @type {?} */ buffer = '';\n        var /** @type {?} */ marker = this.index;\n        var /** @type {?} */ input = this.input;\n        while (this.peek != quote) {\n            if (this.peek == $BACKSLASH) {\n                buffer += input.substring(marker, this.index);\n                this.advance();\n                var /** @type {?} */ unescapedCode = void 0;\n                // Workaround for TS2.1-introduced type strictness\n                this.peek = this.peek;\n                if (this.peek == $u) {\n                    // 4 character hex code for unicode character.\n                    var /** @type {?} */ hex = input.substring(this.index + 1, this.index + 5);\n                    if (/^[0-9a-f]+$/i.test(hex)) {\n                        unescapedCode = parseInt(hex, 16);\n                    }\n                    else {\n                        return this.error(\"Invalid unicode escape [\\\\u\" + hex + \"]\", 0);\n                    }\n                    for (var /** @type {?} */ i = 0; i < 5; i++) {\n                        this.advance();\n                    }\n                }\n                else {\n                    unescapedCode = unescape(this.peek);\n                    this.advance();\n                }\n                buffer += String.fromCharCode(unescapedCode);\n                marker = this.index;\n            }\n            else if (this.peek == $EOF) {\n                return this.error('Unterminated quote', 0);\n            }\n            else {\n                this.advance();\n            }\n        }\n        var /** @type {?} */ last = input.substring(marker, this.index);\n        this.advance(); // Skip terminating quote.\n        return newStringToken(start, buffer + last);\n    };\n    /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    _Scanner.prototype.error = function (message, offset) {\n        var /** @type {?} */ position = this.index + offset;\n        return newErrorToken(position, \"Lexer Error: \" + message + \" at column \" + position + \" in expression [\" + this.input + \"]\");\n    };\n    return _Scanner;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierStart(code) {\n    return ($a <= code && code <= $z) || ($A <= code && code <= $Z) ||\n        (code == $_) || (code == $$);\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction isIdentifier(input) {\n    if (input.length == 0)\n        return false;\n    var /** @type {?} */ scanner = new _Scanner(input);\n    if (!isIdentifierStart(scanner.peek))\n        return false;\n    scanner.advance();\n    while (scanner.peek !== $EOF) {\n        if (!isIdentifierPart(scanner.peek))\n            return false;\n        scanner.advance();\n    }\n    return true;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierPart(code) {\n    return isAsciiLetter(code) || isDigit(code) || (code == $_) ||\n        (code == $$);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentStart(code) {\n    return code == $e || code == $E;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentSign(code) {\n    return code == $MINUS || code == $PLUS;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isQuote(code) {\n    return code === $SQ || code === $DQ || code === $BT;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction unescape(code) {\n    switch (code) {\n        case $n:\n            return $LF;\n        case $f:\n            return $FF;\n        case $r:\n            return $CR;\n        case $t:\n            return $TAB;\n        case $v:\n            return $VTAB;\n        default:\n            return code;\n    }\n}\n/**\n * @param {?} text\n * @return {?}\n */\nfunction parseIntAutoRadix(text) {\n    var /** @type {?} */ result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SplitInterpolation = (function () {\n    /**\n     * @param {?} strings\n     * @param {?} expressions\n     * @param {?} offsets\n     */\n    function SplitInterpolation(strings, expressions, offsets) {\n        this.strings = strings;\n        this.expressions = expressions;\n        this.offsets = offsets;\n    }\n    return SplitInterpolation;\n}());\nvar TemplateBindingParseResult = (function () {\n    /**\n     * @param {?} templateBindings\n     * @param {?} warnings\n     * @param {?} errors\n     */\n    function TemplateBindingParseResult(templateBindings, warnings, errors) {\n        this.templateBindings = templateBindings;\n        this.warnings = warnings;\n        this.errors = errors;\n    }\n    return TemplateBindingParseResult;\n}());\n/**\n * @param {?} config\n * @return {?}\n */\nfunction _createInterpolateRegExp(config) {\n    var /** @type {?} */ pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n    return new RegExp(pattern, 'g');\n}\nvar Parser = (function () {\n    /**\n     * @param {?} _lexer\n     */\n    function Parser(_lexer) {\n        this._lexer = _lexer;\n        this.errors = [];\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseAction = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(this._stripComments(input));\n        var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseBinding = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseSimpleBinding = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        var /** @type {?} */ errors = SimpleExpressionChecker.check(ast);\n        if (errors.length > 0) {\n            this._reportError(\"Host binding expression cannot contain \" + errors.join(' '), input, location);\n        }\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    Parser.prototype._reportError = function (message, input, errLocation, ctxLocation) {\n        this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._parseBindingAst = function (input, location, interpolationConfig) {\n        // Quotes expressions use 3rd-party expression language. We don't want to use\n        // our lexer or parser for that, so we check for that ahead of time.\n        var /** @type {?} */ quote = this._parseQuote(input, location);\n        if (quote != null) {\n            return quote;\n        }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n        return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype._parseQuote = function (input, location) {\n        if (input == null)\n            return null;\n        var /** @type {?} */ prefixSeparatorIndex = input.indexOf(':');\n        if (prefixSeparatorIndex == -1)\n            return null;\n        var /** @type {?} */ prefix = input.substring(0, prefixSeparatorIndex).trim();\n        if (!isIdentifier(prefix))\n            return null;\n        var /** @type {?} */ uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n        return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.parseTemplateBindings = function (prefixToken, input, location) {\n        var /** @type {?} */ tokens = this._lexer.tokenize(input);\n        if (prefixToken) {\n            // Prefix the tokens with the tokens from prefixToken but have them take no space (0 index).\n            var /** @type {?} */ prefixTokens = this._lexer.tokenize(prefixToken).map(function (t) {\n                t.index = 0;\n                return t;\n            });\n            tokens.unshift.apply(tokens, prefixTokens);\n        }\n        return new _ParseAST(input, location, tokens, input.length, false, this.errors, 0)\n            .parseTemplateBindings();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseInterpolation = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ split = this.splitInterpolation(input, location, interpolationConfig);\n        if (split == null)\n            return null;\n        var /** @type {?} */ expressions = [];\n        for (var /** @type {?} */ i = 0; i < split.expressions.length; ++i) {\n            var /** @type {?} */ expressionText = split.expressions[i];\n            var /** @type {?} */ sourceToLex = this._stripComments(expressionText);\n            var /** @type {?} */ tokens = this._lexer.tokenize(this._stripComments(split.expressions[i]));\n            var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n                .parseChain();\n            expressions.push(ast);\n        }\n        return new ASTWithSource(new Interpolation(new ParseSpan(0, input == null ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.splitInterpolation = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length <= 1) {\n            return null;\n        }\n        var /** @type {?} */ strings = [];\n        var /** @type {?} */ expressions = [];\n        var /** @type {?} */ offsets = [];\n        var /** @type {?} */ offset = 0;\n        for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n            var /** @type {?} */ part = parts[i];\n            if (i % 2 === 0) {\n                // fixed string\n                strings.push(part);\n                offset += part.length;\n            }\n            else if (part.trim().length > 0) {\n                offset += interpolationConfig.start.length;\n                expressions.push(part);\n                offsets.push(offset);\n                offset += part.length + interpolationConfig.end.length;\n            }\n            else {\n                this._reportError('Blank expressions are not allowed in interpolated strings', input, \"at column \" + this._findInterpolationErrorColumn(parts, i, interpolationConfig) + \" in\", location);\n                expressions.push('$implict');\n                offsets.push(offset);\n            }\n        }\n        return new SplitInterpolation(strings, expressions, offsets);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.wrapLiteralPrimitive = function (input, location) {\n        return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, input == null ? 0 : input.length), input), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._stripComments = function (input) {\n        var /** @type {?} */ i = this._commentStart(input);\n        return i != null ? input.substring(0, i).trim() : input;\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._commentStart = function (input) {\n        var /** @type {?} */ outerQuote = null;\n        for (var /** @type {?} */ i = 0; i < input.length - 1; i++) {\n            var /** @type {?} */ char = input.charCodeAt(i);\n            var /** @type {?} */ nextChar = input.charCodeAt(i + 1);\n            if (char === $SLASH && nextChar == $SLASH && outerQuote == null)\n                return i;\n            if (outerQuote === char) {\n                outerQuote = null;\n            }\n            else if (outerQuote == null && isQuote(char)) {\n                outerQuote = char;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._checkNoInterpolation = function (input, location, interpolationConfig) {\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length > 1) {\n            this._reportError(\"Got interpolation (\" + interpolationConfig.start + interpolationConfig.end + \") where expression was expected\", input, \"at column \" + this._findInterpolationErrorColumn(parts, 1, interpolationConfig) + \" in\", location);\n        }\n    };\n    /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._findInterpolationErrorColumn = function (parts, partInErrIdx, interpolationConfig) {\n        var /** @type {?} */ errLocation = '';\n        for (var /** @type {?} */ j = 0; j < partInErrIdx; j++) {\n            errLocation += j % 2 === 0 ?\n                parts[j] :\n                \"\" + interpolationConfig.start + parts[j] + interpolationConfig.end;\n        }\n        return errLocation.length;\n    };\n    return Parser;\n}());\nParser.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nParser.ctorParameters = function () { return [\n    { type: Lexer, },\n]; };\nvar _ParseAST = (function () {\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} tokens\n     * @param {?} inputLength\n     * @param {?} parseAction\n     * @param {?} errors\n     * @param {?} offset\n     */\n    function _ParseAST(input, location, tokens, inputLength, parseAction, errors, offset) {\n        this.input = input;\n        this.location = location;\n        this.tokens = tokens;\n        this.inputLength = inputLength;\n        this.parseAction = parseAction;\n        this.errors = errors;\n        this.offset = offset;\n        this.rparensExpected = 0;\n        this.rbracketsExpected = 0;\n        this.rbracesExpected = 0;\n        this.index = 0;\n    }\n    /**\n     * @param {?} offset\n     * @return {?}\n     */\n    _ParseAST.prototype.peek = function (offset) {\n        var /** @type {?} */ i = this.index + offset;\n        return i < this.tokens.length ? this.tokens[i] : EOF;\n    };\n    Object.defineProperty(_ParseAST.prototype, \"next\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.peek(0); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_ParseAST.prototype, \"inputIndex\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return (this.index < this.tokens.length) ? this.next.index + this.offset :\n                this.inputLength + this.offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _ParseAST.prototype.span = function (start) { return new ParseSpan(start, this.inputIndex); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.advance = function () { this.index++; };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalCharacter = function (code) {\n        if (this.next.isCharacter(code)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordLet = function () { return this.next.isKeywordLet(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordAs = function () { return this.next.isKeywordAs(); };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.expectCharacter = function (code) {\n        if (this.optionalCharacter(code))\n            return;\n        this.error(\"Missing expected \" + String.fromCharCode(code));\n    };\n    /**\n     * @param {?} op\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalOperator = function (op) {\n        if (this.next.isOperator(op)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @param {?} operator\n     * @return {?}\n     */\n    _ParseAST.prototype.expectOperator = function (operator) {\n        if (this.optionalOperator(operator))\n            return;\n        this.error(\"Missing expected operator \" + operator);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeyword = function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier or keyword\");\n            return '';\n        }\n        this.advance();\n        return n.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeywordOrString = function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier, keyword, or string\");\n            return '';\n        }\n        this.advance();\n        return n.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseChain = function () {\n        var /** @type {?} */ exprs = [];\n        var /** @type {?} */ start = this.inputIndex;\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ expr = this.parsePipe();\n            exprs.push(expr);\n            if (this.optionalCharacter($SEMICOLON)) {\n                if (!this.parseAction) {\n                    this.error('Binding expression cannot contain chained expression');\n                }\n                while (this.optionalCharacter($SEMICOLON)) {\n                } // read all semicolons\n            }\n            else if (this.index < this.tokens.length) {\n                this.error(\"Unexpected token '\" + this.next + \"'\");\n            }\n        }\n        if (exprs.length == 0)\n            return new EmptyExpr(this.span(start));\n        if (exprs.length == 1)\n            return exprs[0];\n        return new Chain(this.span(start), exprs);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePipe = function () {\n        var /** @type {?} */ result = this.parseExpression();\n        if (this.optionalOperator('|')) {\n            if (this.parseAction) {\n                this.error('Cannot have a pipe in an action expression');\n            }\n            do {\n                var /** @type {?} */ name = ((this.expectIdentifierOrKeyword()));\n                var /** @type {?} */ args = [];\n                while (this.optionalCharacter($COLON)) {\n                    args.push(this.parseExpression());\n                }\n                result = new BindingPipe(this.span(result.span.start), result, name, args);\n            } while (this.optionalOperator('|'));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpression = function () { return this.parseConditional(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseConditional = function () {\n        var /** @type {?} */ start = this.inputIndex;\n        var /** @type {?} */ result = this.parseLogicalOr();\n        if (this.optionalOperator('?')) {\n            var /** @type {?} */ yes = this.parsePipe();\n            var /** @type {?} */ no = void 0;\n            if (!this.optionalCharacter($COLON)) {\n                var /** @type {?} */ end = this.inputIndex;\n                var /** @type {?} */ expression = this.input.substring(start, end);\n                this.error(\"Conditional expression \" + expression + \" requires all 3 expressions\");\n                no = new EmptyExpr(this.span(start));\n            }\n            else {\n                no = this.parsePipe();\n            }\n            return new Conditional(this.span(start), result, yes, no);\n        }\n        else {\n            return result;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalOr = function () {\n        // '||'\n        var /** @type {?} */ result = this.parseLogicalAnd();\n        while (this.optionalOperator('||')) {\n            var /** @type {?} */ right = this.parseLogicalAnd();\n            result = new Binary(this.span(result.span.start), '||', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalAnd = function () {\n        // '&&'\n        var /** @type {?} */ result = this.parseEquality();\n        while (this.optionalOperator('&&')) {\n            var /** @type {?} */ right = this.parseEquality();\n            result = new Binary(this.span(result.span.start), '&&', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseEquality = function () {\n        // '==','!=','===','!=='\n        var /** @type {?} */ result = this.parseRelational();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '==':\n                case '===':\n                case '!=':\n                case '!==':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseRelational();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseRelational = function () {\n        // '<', '>', '<=', '>='\n        var /** @type {?} */ result = this.parseAdditive();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '<':\n                case '>':\n                case '<=':\n                case '>=':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseAdditive();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAdditive = function () {\n        // '+', '-'\n        var /** @type {?} */ result = this.parseMultiplicative();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '+':\n                case '-':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseMultiplicative();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseMultiplicative = function () {\n        // '*', '%', '/'\n        var /** @type {?} */ result = this.parsePrefix();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '*':\n                case '%':\n                case '/':\n                    this.advance();\n                    var /** @type {?} */ right = this.parsePrefix();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrefix = function () {\n        if (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ operator = this.next.strValue;\n            var /** @type {?} */ result = void 0;\n            switch (operator) {\n                case '+':\n                    this.advance();\n                    return this.parsePrefix();\n                case '-':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n                case '!':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new PrefixNot(this.span(start), result);\n            }\n        }\n        return this.parseCallChain();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallChain = function () {\n        var /** @type {?} */ result = this.parsePrimary();\n        while (true) {\n            if (this.optionalCharacter($PERIOD)) {\n                result = this.parseAccessMemberOrMethodCall(result, false);\n            }\n            else if (this.optionalOperator('?.')) {\n                result = this.parseAccessMemberOrMethodCall(result, true);\n            }\n            else if (this.optionalCharacter($LBRACKET)) {\n                this.rbracketsExpected++;\n                var /** @type {?} */ key = this.parsePipe();\n                this.rbracketsExpected--;\n                this.expectCharacter($RBRACKET);\n                if (this.optionalOperator('=')) {\n                    var /** @type {?} */ value = this.parseConditional();\n                    result = new KeyedWrite(this.span(result.span.start), result, key, value);\n                }\n                else {\n                    result = new KeyedRead(this.span(result.span.start), result, key);\n                }\n            }\n            else if (this.optionalCharacter($LPAREN)) {\n                this.rparensExpected++;\n                var /** @type {?} */ args = this.parseCallArguments();\n                this.rparensExpected--;\n                this.expectCharacter($RPAREN);\n                result = new FunctionCall(this.span(result.span.start), result, args);\n            }\n            else if (this.optionalOperator('!')) {\n                result = new NonNullAssert(this.span(result.span.start), result);\n            }\n            else {\n                return result;\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrimary = function () {\n        var /** @type {?} */ start = this.inputIndex;\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ result = this.parsePipe();\n            this.rparensExpected--;\n            this.expectCharacter($RPAREN);\n            return result;\n        }\n        else if (this.next.isKeywordNull()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), null);\n        }\n        else if (this.next.isKeywordUndefined()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), void 0);\n        }\n        else if (this.next.isKeywordTrue()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), true);\n        }\n        else if (this.next.isKeywordFalse()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), false);\n        }\n        else if (this.next.isKeywordThis()) {\n            this.advance();\n            return new ImplicitReceiver(this.span(start));\n        }\n        else if (this.optionalCharacter($LBRACKET)) {\n            this.rbracketsExpected++;\n            var /** @type {?} */ elements = this.parseExpressionList($RBRACKET);\n            this.rbracketsExpected--;\n            this.expectCharacter($RBRACKET);\n            return new LiteralArray(this.span(start), elements);\n        }\n        else if (this.next.isCharacter($LBRACE)) {\n            return this.parseLiteralMap();\n        }\n        else if (this.next.isIdentifier()) {\n            return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n        }\n        else if (this.next.isNumber()) {\n            var /** @type {?} */ value = this.next.toNumber();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), value);\n        }\n        else if (this.next.isString()) {\n            var /** @type {?} */ literalValue = this.next.toString();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), literalValue);\n        }\n        else if (this.index >= this.tokens.length) {\n            this.error(\"Unexpected end of expression: \" + this.input);\n            return new EmptyExpr(this.span(start));\n        }\n        else {\n            this.error(\"Unexpected token \" + this.next);\n            return new EmptyExpr(this.span(start));\n        }\n    };\n    /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpressionList = function (terminator) {\n        var /** @type {?} */ result = [];\n        if (!this.next.isCharacter(terminator)) {\n            do {\n                result.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLiteralMap = function () {\n        var /** @type {?} */ keys = [];\n        var /** @type {?} */ values = [];\n        var /** @type {?} */ start = this.inputIndex;\n        this.expectCharacter($LBRACE);\n        if (!this.optionalCharacter($RBRACE)) {\n            this.rbracesExpected++;\n            do {\n                var /** @type {?} */ key = ((this.expectIdentifierOrKeywordOrString()));\n                keys.push(key);\n                this.expectCharacter($COLON);\n                values.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n            this.rbracesExpected--;\n            this.expectCharacter($RBRACE);\n        }\n        return new LiteralMap(this.span(start), keys, values);\n    };\n    /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAccessMemberOrMethodCall = function (receiver, isSafe) {\n        if (isSafe === void 0) { isSafe = false; }\n        var /** @type {?} */ start = receiver.span.start;\n        var /** @type {?} */ id = ((this.expectIdentifierOrKeyword()));\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ args = this.parseCallArguments();\n            this.expectCharacter($RPAREN);\n            this.rparensExpected--;\n            var /** @type {?} */ span = this.span(start);\n            return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                new MethodCall(span, receiver, id, args);\n        }\n        else {\n            if (isSafe) {\n                if (this.optionalOperator('=')) {\n                    this.error('The \\'?.\\' operator cannot be used in the assignment');\n                    return new EmptyExpr(this.span(start));\n                }\n                else {\n                    return new SafePropertyRead(this.span(start), receiver, id);\n                }\n            }\n            else {\n                if (this.optionalOperator('=')) {\n                    if (!this.parseAction) {\n                        this.error('Bindings cannot contain assignments');\n                        return new EmptyExpr(this.span(start));\n                    }\n                    var /** @type {?} */ value = this.parseConditional();\n                    return new PropertyWrite(this.span(start), receiver, id, value);\n                }\n                else {\n                    return new PropertyRead(this.span(start), receiver, id);\n                }\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallArguments = function () {\n        if (this.next.isCharacter($RPAREN))\n            return [];\n        var /** @type {?} */ positionals = [];\n        do {\n            positionals.push(this.parsePipe());\n        } while (this.optionalCharacter($COMMA));\n        return (positionals);\n    };\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    _ParseAST.prototype.expectTemplateBindingKey = function () {\n        var /** @type {?} */ result = '';\n        var /** @type {?} */ operatorFound = false;\n        do {\n            result += this.expectIdentifierOrKeywordOrString();\n            operatorFound = this.optionalOperator('-');\n            if (operatorFound) {\n                result += '-';\n            }\n        } while (operatorFound);\n        return result.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseTemplateBindings = function () {\n        var /** @type {?} */ bindings = [];\n        var /** @type {?} */ prefix = ((null));\n        var /** @type {?} */ warnings = [];\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ keyIsVar = this.peekKeywordLet();\n            if (keyIsVar) {\n                this.advance();\n            }\n            var /** @type {?} */ rawKey = this.expectTemplateBindingKey();\n            var /** @type {?} */ key = rawKey;\n            if (!keyIsVar) {\n                if (prefix == null) {\n                    prefix = key;\n                }\n                else {\n                    key = prefix + key[0].toUpperCase() + key.substring(1);\n                }\n            }\n            this.optionalCharacter($COLON);\n            var /** @type {?} */ name = ((null));\n            var /** @type {?} */ expression = ((null));\n            if (keyIsVar) {\n                if (this.optionalOperator('=')) {\n                    name = this.expectTemplateBindingKey();\n                }\n                else {\n                    name = '\\$implicit';\n                }\n            }\n            else if (this.peekKeywordAs()) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                name = rawKey;\n                key = this.expectTemplateBindingKey(); // read local var name\n                keyIsVar = true;\n            }\n            else if (this.next !== EOF && !this.peekKeywordLet()) {\n                var /** @type {?} */ start_2 = this.inputIndex;\n                var /** @type {?} */ ast = this.parsePipe();\n                var /** @type {?} */ source = this.input.substring(start_2 - this.offset, this.inputIndex - this.offset);\n                expression = new ASTWithSource(ast, source, this.location, this.errors);\n            }\n            bindings.push(new TemplateBinding(this.span(start), key, keyIsVar, name, expression));\n            if (this.peekKeywordAs() && !keyIsVar) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                var /** @type {?} */ letName = this.expectTemplateBindingKey(); // read local var name\n                bindings.push(new TemplateBinding(this.span(letStart), letName, true, key, /** @type {?} */ ((null))));\n            }\n            if (!this.optionalCharacter($SEMICOLON)) {\n                this.optionalCharacter($COMMA);\n            }\n        }\n        return new TemplateBindingParseResult(bindings, warnings, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.error = function (message, index) {\n        if (index === void 0) { index = null; }\n        this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n        this.skip();\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.locationText = function (index) {\n        if (index === void 0) { index = null; }\n        if (index == null)\n            index = this.index;\n        return (index < this.tokens.length) ? \"at column \" + (this.tokens[index].index + 1) + \" in\" :\n            \"at the end of the expression\";\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.skip = function () {\n        var /** @type {?} */ n = this.next;\n        while (this.index < this.tokens.length && !n.isCharacter($SEMICOLON) &&\n            (this.rparensExpected <= 0 || !n.isCharacter($RPAREN)) &&\n            (this.rbracesExpected <= 0 || !n.isCharacter($RBRACE)) &&\n            (this.rbracketsExpected <= 0 || !n.isCharacter($RBRACKET))) {\n            if (this.next.isError()) {\n                this.errors.push(new ParserError(/** @type {?} */ ((this.next.toString())), this.input, this.locationText(), this.location));\n            }\n            this.advance();\n            n = this.next;\n        }\n    };\n    return _ParseAST;\n}());\nvar SimpleExpressionChecker = (function () {\n    function SimpleExpressionChecker() {\n        this.errors = [];\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    SimpleExpressionChecker.check = function (ast) {\n        var /** @type {?} */ s = new SimpleExpressionChecker();\n        ast.visit(s);\n        return s.errors;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitImplicitReceiver = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitInterpolation = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralPrimitive = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyWrite = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafePropertyRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitMethodCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafeMethodCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitFunctionCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralArray = function (ast, context) { this.visitAll(ast.expressions); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralMap = function (ast, context) { this.visitAll(ast.values); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitBinary = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPrefixNot = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitNonNullAssert = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitConditional = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPipe = function (ast, context) { this.errors.push('pipes'); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedWrite = function (ast, context) { };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitAll = function (asts) {\n        var _this = this;\n        return asts.map(function (node) { return node.visit(_this); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitChain = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitQuote = function (ast, context) { };\n    return SimpleExpressionChecker;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParseLocation = (function () {\n    /**\n     * @param {?} file\n     * @param {?} offset\n     * @param {?} line\n     * @param {?} col\n     */\n    function ParseLocation(file, offset, line, col) {\n        this.file = file;\n        this.offset = offset;\n        this.line = line;\n        this.col = col;\n    }\n    /**\n     * @return {?}\n     */\n    ParseLocation.prototype.toString = function () {\n        return this.offset != null ? this.file.url + \"@\" + this.line + \":\" + this.col : this.file.url;\n    };\n    /**\n     * @param {?} delta\n     * @return {?}\n     */\n    ParseLocation.prototype.moveBy = function (delta) {\n        var /** @type {?} */ source = this.file.content;\n        var /** @type {?} */ len = source.length;\n        var /** @type {?} */ offset = this.offset;\n        var /** @type {?} */ line = this.line;\n        var /** @type {?} */ col = this.col;\n        while (offset > 0 && delta < 0) {\n            offset--;\n            delta++;\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            if (ch == $LF) {\n                line--;\n                var /** @type {?} */ priorLine = source.substr(0, offset - 1).lastIndexOf(String.fromCharCode($LF));\n                col = priorLine > 0 ? offset - priorLine : offset;\n            }\n            else {\n                col--;\n            }\n        }\n        while (offset < len && delta > 0) {\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            offset++;\n            delta--;\n            if (ch == $LF) {\n                line++;\n                col = 0;\n            }\n            else {\n                col++;\n            }\n        }\n        return new ParseLocation(this.file, offset, line, col);\n    };\n    /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    ParseLocation.prototype.getContext = function (maxChars, maxLines) {\n        var /** @type {?} */ content = this.file.content;\n        var /** @type {?} */ startOffset = this.offset;\n        if (startOffset != null) {\n            if (startOffset > content.length - 1) {\n                startOffset = content.length - 1;\n            }\n            var /** @type {?} */ endOffset = startOffset;\n            var /** @type {?} */ ctxChars = 0;\n            var /** @type {?} */ ctxLines = 0;\n            while (ctxChars < maxChars && startOffset > 0) {\n                startOffset--;\n                ctxChars++;\n                if (content[startOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            ctxChars = 0;\n            ctxLines = 0;\n            while (ctxChars < maxChars && endOffset < content.length - 1) {\n                endOffset++;\n                ctxChars++;\n                if (content[endOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            return {\n                before: content.substring(startOffset, this.offset),\n                after: content.substring(this.offset, endOffset + 1),\n            };\n        }\n        return null;\n    };\n    return ParseLocation;\n}());\nvar ParseSourceFile = (function () {\n    /**\n     * @param {?} content\n     * @param {?} url\n     */\n    function ParseSourceFile(content, url) {\n        this.content = content;\n        this.url = url;\n    }\n    return ParseSourceFile;\n}());\nvar ParseSourceSpan = (function () {\n    /**\n     * @param {?} start\n     * @param {?} end\n     * @param {?=} details\n     */\n    function ParseSourceSpan(start, end, details) {\n        if (details === void 0) { details = null; }\n        this.start = start;\n        this.end = end;\n        this.details = details;\n    }\n    /**\n     * @return {?}\n     */\n    ParseSourceSpan.prototype.toString = function () {\n        return this.start.file.content.substring(this.start.offset, this.end.offset);\n    };\n    return ParseSourceSpan;\n}());\nvar ParseErrorLevel = {};\nParseErrorLevel.WARNING = 0;\nParseErrorLevel.ERROR = 1;\nParseErrorLevel[ParseErrorLevel.WARNING] = \"WARNING\";\nParseErrorLevel[ParseErrorLevel.ERROR] = \"ERROR\";\nvar ParseError = (function () {\n    /**\n     * @param {?} span\n     * @param {?} msg\n     * @param {?=} level\n     */\n    function ParseError(span, msg, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this.span = span;\n        this.msg = msg;\n        this.level = level;\n    }\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.toString = function () {\n        var /** @type {?} */ ctx = this.span.start.getContext(100, 3);\n        var /** @type {?} */ contextStr = ctx ? \" (\\\"\" + ctx.before + \"[\" + ParseErrorLevel[this.level] + \" ->]\" + ctx.after + \"\\\")\" : '';\n        var /** @type {?} */ details = this.span.details ? \", \" + this.span.details : '';\n        return \"\" + this.msg + contextStr + \": \" + this.span.start + details;\n    };\n    return ParseError;\n}());\n/**\n * @param {?} kind\n * @param {?} type\n * @return {?}\n */\nfunction typeSourceSpan(kind, type) {\n    var /** @type {?} */ moduleUrl = identifierModuleUrl(type);\n    var /** @type {?} */ sourceFileName = moduleUrl != null ? \"in \" + kind + \" \" + identifierName(type) + \" in \" + moduleUrl :\n        \"in \" + kind + \" \" + identifierName(type);\n    var /** @type {?} */ sourceFile = new ParseSourceFile('', sourceFileName);\n    return new ParseSourceSpan(new ParseLocation(sourceFile, -1, -1, -1), new ParseLocation(sourceFile, -1, -1, -1));\n}\n/**\n * A path is an ordered set of elements. Typically a path is to  a\n * particular offset in a source file. The head of the list is the top\n * most node. The tail is the node that contains the offset directly.\n *\n * For example, the expresion `a + b + c` might have an ast that looks\n * like:\n *     +\n *    / \\\n *   a   +\n *      / \\\n *     b   c\n *\n * The path to the node at offset 9 would be `['+' at 1-10, '+' at 7-10,\n * 'c' at 9-10]` and the path the node at offset 1 would be\n * `['+' at 1-10, 'a' at 1-2]`.\n */\nvar AstPath = (function () {\n    /**\n     * @param {?} path\n     * @param {?=} position\n     */\n    function AstPath(path, position) {\n        if (position === void 0) { position = -1; }\n        this.path = path;\n        this.position = position;\n    }\n    Object.defineProperty(AstPath.prototype, \"empty\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return !this.path || !this.path.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"head\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.path[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"tail\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.parentOf = function (node) {\n        return node && this.path[this.path.indexOf(node) - 1];\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.childOf = function (node) { return this.path[this.path.indexOf(node) + 1]; };\n    /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    AstPath.prototype.first = function (ctor) {\n        for (var /** @type {?} */ i = this.path.length - 1; i >= 0; i--) {\n            var /** @type {?} */ item = this.path[i];\n            if (item instanceof ctor)\n                return (item);\n        }\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.push = function (node) { this.path.push(node); };\n    /**\n     * @return {?}\n     */\n    AstPath.prototype.pop = function () { return ((this.path.pop())); };\n    return AstPath;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Text = (function () {\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Text.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Expansion = (function () {\n    /**\n     * @param {?} switchValue\n     * @param {?} type\n     * @param {?} cases\n     * @param {?} sourceSpan\n     * @param {?} switchValueSourceSpan\n     */\n    function Expansion(switchValue, type, cases, sourceSpan, switchValueSourceSpan) {\n        this.switchValue = switchValue;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n        this.switchValueSourceSpan = switchValueSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Expansion.prototype.visit = function (visitor, context) { return visitor.visitExpansion(this, context); };\n    return Expansion;\n}());\nvar ExpansionCase = (function () {\n    /**\n     * @param {?} value\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} valueSourceSpan\n     * @param {?} expSourceSpan\n     */\n    function ExpansionCase(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n        this.value = value;\n        this.expression = expression;\n        this.sourceSpan = sourceSpan;\n        this.valueSourceSpan = valueSourceSpan;\n        this.expSourceSpan = expSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpansionCase.prototype.visit = function (visitor, context) { return visitor.visitExpansionCase(this, context); };\n    return ExpansionCase;\n}());\nvar Attribute$1 = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?=} valueSpan\n     */\n    function Attribute$1(name, value, sourceSpan, valueSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n        this.valueSpan = valueSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Attribute$1.prototype.visit = function (visitor, context) { return visitor.visitAttribute(this, context); };\n    return Attribute$1;\n}());\nvar Element = (function () {\n    /**\n     * @param {?} name\n     * @param {?} attrs\n     * @param {?} children\n     * @param {?} sourceSpan\n     * @param {?=} startSourceSpan\n     * @param {?=} endSourceSpan\n     */\n    function Element(name, attrs, children, sourceSpan, startSourceSpan, endSourceSpan) {\n        if (startSourceSpan === void 0) { startSourceSpan = null; }\n        if (endSourceSpan === void 0) { endSourceSpan = null; }\n        this.name = name;\n        this.attrs = attrs;\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Element.prototype.visit = function (visitor, context) { return visitor.visitElement(this, context); };\n    return Element;\n}());\nvar Comment = (function () {\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function Comment(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Comment.prototype.visit = function (visitor, context) { return visitor.visitComment(this, context); };\n    return Comment;\n}());\n/**\n * @param {?} visitor\n * @param {?} nodes\n * @param {?=} context\n * @return {?}\n */\nfunction visitAll(visitor, nodes, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    nodes.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\nvar RecursiveVisitor = (function () {\n    function RecursiveVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitElement = function (ast, context) {\n        this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitAttribute = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitText = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitComment = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansion = function (ast, context) {\n        return this.visitChildren(context, function (visit) { visit(ast.cases); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansionCase = function (ast, context) { };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitChildren = function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children)\n                results.push(visitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveVisitor;\n}());\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction spanOf(ast) {\n    var /** @type {?} */ start = ast.sourceSpan.start.offset;\n    var /** @type {?} */ end = ast.sourceSpan.end.offset;\n    if (ast instanceof Element) {\n        if (ast.endSourceSpan) {\n            end = ast.endSourceSpan.end.offset;\n        }\n        else if (ast.children && ast.children.length) {\n            end = spanOf(ast.children[ast.children.length - 1]).end;\n        }\n    }\n    return { start: start, end: end };\n}\n/**\n * @param {?} nodes\n * @param {?} position\n * @return {?}\n */\nfunction findNode(nodes, position) {\n    var /** @type {?} */ path = [];\n    var /** @type {?} */ visitor = new (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        class_1.prototype.visit = function (ast, context) {\n            var /** @type {?} */ span = spanOf(ast);\n            if (span.start <= position && position < span.end) {\n                path.push(ast);\n            }\n            else {\n                // Returning a value here will result in the children being skipped.\n                return true;\n            }\n        };\n        return class_1;\n    }(RecursiveVisitor));\n    visitAll(visitor, nodes);\n    return new AstPath(path, position);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TokenType$1 = {};\nTokenType$1.TAG_OPEN_START = 0;\nTokenType$1.TAG_OPEN_END = 1;\nTokenType$1.TAG_OPEN_END_VOID = 2;\nTokenType$1.TAG_CLOSE = 3;\nTokenType$1.TEXT = 4;\nTokenType$1.ESCAPABLE_RAW_TEXT = 5;\nTokenType$1.RAW_TEXT = 6;\nTokenType$1.COMMENT_START = 7;\nTokenType$1.COMMENT_END = 8;\nTokenType$1.CDATA_START = 9;\nTokenType$1.CDATA_END = 10;\nTokenType$1.ATTR_NAME = 11;\nTokenType$1.ATTR_VALUE = 12;\nTokenType$1.DOC_TYPE = 13;\nTokenType$1.EXPANSION_FORM_START = 14;\nTokenType$1.EXPANSION_CASE_VALUE = 15;\nTokenType$1.EXPANSION_CASE_EXP_START = 16;\nTokenType$1.EXPANSION_CASE_EXP_END = 17;\nTokenType$1.EXPANSION_FORM_END = 18;\nTokenType$1.EOF = 19;\nTokenType$1[TokenType$1.TAG_OPEN_START] = \"TAG_OPEN_START\";\nTokenType$1[TokenType$1.TAG_OPEN_END] = \"TAG_OPEN_END\";\nTokenType$1[TokenType$1.TAG_OPEN_END_VOID] = \"TAG_OPEN_END_VOID\";\nTokenType$1[TokenType$1.TAG_CLOSE] = \"TAG_CLOSE\";\nTokenType$1[TokenType$1.TEXT] = \"TEXT\";\nTokenType$1[TokenType$1.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTokenType$1[TokenType$1.RAW_TEXT] = \"RAW_TEXT\";\nTokenType$1[TokenType$1.COMMENT_START] = \"COMMENT_START\";\nTokenType$1[TokenType$1.COMMENT_END] = \"COMMENT_END\";\nTokenType$1[TokenType$1.CDATA_START] = \"CDATA_START\";\nTokenType$1[TokenType$1.CDATA_END] = \"CDATA_END\";\nTokenType$1[TokenType$1.ATTR_NAME] = \"ATTR_NAME\";\nTokenType$1[TokenType$1.ATTR_VALUE] = \"ATTR_VALUE\";\nTokenType$1[TokenType$1.DOC_TYPE] = \"DOC_TYPE\";\nTokenType$1[TokenType$1.EXPANSION_FORM_START] = \"EXPANSION_FORM_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_VALUE] = \"EXPANSION_CASE_VALUE\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_START] = \"EXPANSION_CASE_EXP_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_END] = \"EXPANSION_CASE_EXP_END\";\nTokenType$1[TokenType$1.EXPANSION_FORM_END] = \"EXPANSION_FORM_END\";\nTokenType$1[TokenType$1.EOF] = \"EOF\";\nvar Token$1 = (function () {\n    /**\n     * @param {?} type\n     * @param {?} parts\n     * @param {?} sourceSpan\n     */\n    function Token$1(type, parts, sourceSpan) {\n        this.type = type;\n        this.parts = parts;\n        this.sourceSpan = sourceSpan;\n    }\n    return Token$1;\n}());\nvar TokenError = (function (_super) {\n    __extends(TokenError, _super);\n    /**\n     * @param {?} errorMsg\n     * @param {?} tokenType\n     * @param {?} span\n     */\n    function TokenError(errorMsg, tokenType, span) {\n        var _this = _super.call(this, span, errorMsg) || this;\n        _this.tokenType = tokenType;\n        return _this;\n    }\n    return TokenError;\n}(ParseError));\nvar TokenizeResult = (function () {\n    /**\n     * @param {?} tokens\n     * @param {?} errors\n     */\n    function TokenizeResult(tokens, errors) {\n        this.tokens = tokens;\n        this.errors = errors;\n    }\n    return TokenizeResult;\n}());\n/**\n * @param {?} source\n * @param {?} url\n * @param {?} getTagDefinition\n * @param {?=} tokenizeExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nfunction tokenize(source, url, getTagDefinition, tokenizeExpansionForms, interpolationConfig) {\n    if (tokenizeExpansionForms === void 0) { tokenizeExpansionForms = false; }\n    if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n    return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n        .tokenize();\n}\nvar _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n/**\n * @param {?} charCode\n * @return {?}\n */\nfunction _unexpectedCharacterErrorMsg(charCode) {\n    var /** @type {?} */ char = charCode === $EOF ? 'EOF' : String.fromCharCode(charCode);\n    return \"Unexpected character \\\"\" + char + \"\\\"\";\n}\n/**\n * @param {?} entitySrc\n * @return {?}\n */\nfunction _unknownEntityErrorMsg(entitySrc) {\n    return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\n}\nvar _ControlFlowError = (function () {\n    /**\n     * @param {?} error\n     */\n    function _ControlFlowError(error) {\n        this.error = error;\n    }\n    return _ControlFlowError;\n}());\nvar _Tokenizer = (function () {\n    /**\n     * @param {?} _file The html source\n     * @param {?} _getTagDefinition\n     * @param {?} _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n     * @param {?=} _interpolationConfig\n     */\n    function _Tokenizer(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig) {\n        if (_interpolationConfig === void 0) { _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._file = _file;\n        this._getTagDefinition = _getTagDefinition;\n        this._tokenizeIcu = _tokenizeIcu;\n        this._interpolationConfig = _interpolationConfig;\n        this._peek = -1;\n        this._nextPeek = -1;\n        this._index = -1;\n        this._line = 0;\n        this._column = -1;\n        this._expansionCaseStack = [];\n        this._inInterpolation = false;\n        this.tokens = [];\n        this.errors = [];\n        this._input = _file.content;\n        this._length = _file.content.length;\n        this._advance();\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    _Tokenizer.prototype._processCarriageReturns = function (content) {\n        // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n        // In order to keep the original position in the source, we can not\n        // pre-process it.\n        // Instead CRs are processed right before instantiating the tokens.\n        return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype.tokenize = function () {\n        while (this._peek !== $EOF) {\n            var /** @type {?} */ start = this._getLocation();\n            try {\n                if (this._attemptCharCode($LT)) {\n                    if (this._attemptCharCode($BANG)) {\n                        if (this._attemptCharCode($LBRACKET)) {\n                            this._consumeCdata(start);\n                        }\n                        else if (this._attemptCharCode($MINUS)) {\n                            this._consumeComment(start);\n                        }\n                        else {\n                            this._consumeDocType(start);\n                        }\n                    }\n                    else if (this._attemptCharCode($SLASH)) {\n                        this._consumeTagClose(start);\n                    }\n                    else {\n                        this._consumeTagOpen(start);\n                    }\n                }\n                else if (!(this._tokenizeIcu && this._tokenizeExpansionForm())) {\n                    this._consumeText();\n                }\n            }\n            catch (e) {\n                if (e instanceof _ControlFlowError) {\n                    this.errors.push(e.error);\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        this._beginToken(TokenType$1.EOF);\n        this._endToken([]);\n        return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _Tokenizer.prototype._tokenizeExpansionForm = function () {\n        if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n            this._consumeExpansionFormStart();\n            return true;\n        }\n        if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n            this._consumeExpansionCaseStart();\n            return true;\n        }\n        if (this._peek === $RBRACE) {\n            if (this._isInExpansionCase()) {\n                this._consumeExpansionCaseEnd();\n                return true;\n            }\n            if (this._isInExpansionForm()) {\n                this._consumeExpansionFormEnd();\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._getLocation = function () {\n        return new ParseLocation(this._file, this._index, this._line, this._column);\n    };\n    /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._getSpan = function (start, end) {\n        if (start === void 0) { start = this._getLocation(); }\n        if (end === void 0) { end = this._getLocation(); }\n        return new ParseSourceSpan(start, end);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._beginToken = function (type, start) {\n        if (start === void 0) { start = this._getLocation(); }\n        this._currentTokenStart = start;\n        this._currentTokenType = type;\n    };\n    /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._endToken = function (parts, end) {\n        if (end === void 0) { end = this._getLocation(); }\n        var /** @type {?} */ token = new Token$1(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n        this.tokens.push(token);\n        this._currentTokenStart = ((null));\n        this._currentTokenType = ((null));\n        return token;\n    };\n    /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    _Tokenizer.prototype._createError = function (msg, span) {\n        if (this._isInExpansionForm()) {\n            msg += \" (Do you have an unescaped \\\"{\\\" in your template? Use \\\"{{ '{' }}\\\") to escape it.)\";\n        }\n        var /** @type {?} */ error = new TokenError(msg, this._currentTokenType, span);\n        this._currentTokenStart = ((null));\n        this._currentTokenType = ((null));\n        return new _ControlFlowError(error);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._advance = function () {\n        if (this._index >= this._length) {\n            throw this._createError(_unexpectedCharacterErrorMsg($EOF), this._getSpan());\n        }\n        if (this._peek === $LF) {\n            this._line++;\n            this._column = 0;\n        }\n        else if (this._peek !== $LF && this._peek !== $CR) {\n            this._column++;\n        }\n        this._index++;\n        this._peek = this._index >= this._length ? $EOF : this._input.charCodeAt(this._index);\n        this._nextPeek =\n            this._index + 1 >= this._length ? $EOF : this._input.charCodeAt(this._index + 1);\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCode = function (charCode) {\n        if (this._peek === charCode) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeCaseInsensitive = function (charCode) {\n        if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCode = function (charCode) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptCharCode(charCode)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n        }\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStr = function (chars) {\n        var /** @type {?} */ len = chars.length;\n        if (this._index + len > this._length) {\n            return false;\n        }\n        var /** @type {?} */ initialPosition = this._savePosition();\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            if (!this._attemptCharCode(chars.charCodeAt(i))) {\n                // If attempting to parse the string fails, we want to reset the parser\n                // to where it was before the attempt\n                this._restorePosition(initialPosition);\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStrCaseInsensitive = function (chars) {\n        for (var /** @type {?} */ i = 0; i < chars.length; i++) {\n            if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireStr = function (chars) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptStr(chars)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeUntilFn = function (predicate) {\n        while (!predicate(this._peek)) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCodeUntilFn = function (predicate, len) {\n        var /** @type {?} */ start = this._getLocation();\n        this._attemptCharCodeUntilFn(predicate);\n        if (this._index - start.offset < len) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n        }\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptUntilChar = function (char) {\n        while (this._peek !== char) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._readChar = function (decodeEntities) {\n        if (decodeEntities && this._peek === $AMPERSAND) {\n            return this._decodeEntity();\n        }\n        else {\n            var /** @type {?} */ index = this._index;\n            this._advance();\n            return this._input[index];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._decodeEntity = function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._advance();\n        if (this._attemptCharCode($HASH)) {\n            var /** @type {?} */ isHex = this._attemptCharCode($x) || this._attemptCharCode($X);\n            var /** @type {?} */ numberStart = this._getLocation().offset;\n            this._attemptCharCodeUntilFn(isDigitEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            this._advance();\n            var /** @type {?} */ strNum = this._input.substring(numberStart, this._index - 1);\n            try {\n                var /** @type {?} */ charCode = parseInt(strNum, isHex ? 16 : 10);\n                return String.fromCharCode(charCode);\n            }\n            catch (e) {\n                var /** @type {?} */ entity = this._input.substring(start.offset + 1, this._index - 1);\n                throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n            }\n        }\n        else {\n            var /** @type {?} */ startPosition = this._savePosition();\n            this._attemptCharCodeUntilFn(isNamedEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                this._restorePosition(startPosition);\n                return '&';\n            }\n            this._advance();\n            var /** @type {?} */ name = this._input.substring(start.offset + 1, this._index - 1);\n            var /** @type {?} */ char = NAMED_ENTITIES[name];\n            if (!char) {\n                throw this._createError(_unknownEntityErrorMsg(name), this._getSpan(start));\n            }\n            return char;\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawText = function (decodeEntities, firstCharOfEnd, attemptEndRest) {\n        var /** @type {?} */ tagCloseStart;\n        var /** @type {?} */ textStart = this._getLocation();\n        this._beginToken(decodeEntities ? TokenType$1.ESCAPABLE_RAW_TEXT : TokenType$1.RAW_TEXT, textStart);\n        var /** @type {?} */ parts = [];\n        while (true) {\n            tagCloseStart = this._getLocation();\n            if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n                break;\n            }\n            if (this._index > tagCloseStart.offset) {\n                // add the characters consumed by the previous if statement to the output\n                parts.push(this._input.substring(tagCloseStart.offset, this._index));\n            }\n            while (this._peek !== firstCharOfEnd) {\n                parts.push(this._readChar(decodeEntities));\n            }\n        }\n        return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeComment = function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.COMMENT_START, start);\n        this._requireCharCode($MINUS);\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $MINUS, function () { return _this._attemptStr('->'); });\n        this._beginToken(TokenType$1.COMMENT_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeCdata = function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.CDATA_START, start);\n        this._requireStr('CDATA[');\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $RBRACKET, function () { return _this._attemptStr(']>'); });\n        this._beginToken(TokenType$1.CDATA_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeDocType = function (start) {\n        this._beginToken(TokenType$1.DOC_TYPE, start);\n        this._attemptUntilChar($GT);\n        this._advance();\n        this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumePrefixAndName = function () {\n        var /** @type {?} */ nameOrPrefixStart = this._index;\n        var /** @type {?} */ prefix = ((null));\n        while (this._peek !== $COLON && !isPrefixEnd(this._peek)) {\n            this._advance();\n        }\n        var /** @type {?} */ nameStart;\n        if (this._peek === $COLON) {\n            this._advance();\n            prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n            nameStart = this._index;\n        }\n        else {\n            nameStart = nameOrPrefixStart;\n        }\n        this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n        var /** @type {?} */ name = this._input.substring(nameStart, this._index);\n        return [prefix, name];\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpen = function (start) {\n        var /** @type {?} */ savedPos = this._savePosition();\n        var /** @type {?} */ tagName;\n        var /** @type {?} */ lowercaseTagName;\n        try {\n            if (!isAsciiLetter(this._peek)) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            var /** @type {?} */ nameStart = this._index;\n            this._consumeTagOpenStart(start);\n            tagName = this._input.substring(nameStart, this._index);\n            lowercaseTagName = tagName.toLowerCase();\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            while (this._peek !== $SLASH && this._peek !== $GT) {\n                this._consumeAttributeName();\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n                if (this._attemptCharCode($EQ)) {\n                    this._attemptCharCodeUntilFn(isNotWhitespace);\n                    this._consumeAttributeValue();\n                }\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n            }\n            this._consumeTagOpenEnd();\n        }\n        catch (e) {\n            if (e instanceof _ControlFlowError) {\n                // When the start tag is invalid, assume we want a \"<\"\n                this._restorePosition(savedPos);\n                // Back to back text tokens are merged at the end\n                this._beginToken(TokenType$1.TEXT, start);\n                this._endToken(['<']);\n                return;\n            }\n            throw e;\n        }\n        var /** @type {?} */ contentTokenType = this._getTagDefinition(tagName).contentType;\n        if (contentTokenType === TagContentType.RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, false);\n        }\n        else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, true);\n        }\n    };\n    /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawTextWithTagClose = function (lowercaseTagName, decodeEntities) {\n        var _this = this;\n        var /** @type {?} */ textToken = this._consumeRawText(decodeEntities, $LT, function () {\n            if (!_this._attemptCharCode($SLASH))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            return _this._attemptCharCode($GT);\n        });\n        this._beginToken(TokenType$1.TAG_CLOSE, textToken.sourceSpan.end);\n        this._endToken([/** @type {?} */ ((null)), lowercaseTagName]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenStart = function (start) {\n        this._beginToken(TokenType$1.TAG_OPEN_START, start);\n        var /** @type {?} */ parts = this._consumePrefixAndName();\n        this._endToken(parts);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeName = function () {\n        this._beginToken(TokenType$1.ATTR_NAME);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeValue = function () {\n        this._beginToken(TokenType$1.ATTR_VALUE);\n        var /** @type {?} */ value;\n        if (this._peek === $SQ || this._peek === $DQ) {\n            var /** @type {?} */ quoteChar = this._peek;\n            this._advance();\n            var /** @type {?} */ parts = [];\n            while (this._peek !== quoteChar) {\n                parts.push(this._readChar(true));\n            }\n            value = parts.join('');\n            this._advance();\n        }\n        else {\n            var /** @type {?} */ valueStart = this._index;\n            this._requireCharCodeUntilFn(isNameEnd, 1);\n            value = this._input.substring(valueStart, this._index);\n        }\n        this._endToken([this._processCarriageReturns(value)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenEnd = function () {\n        var /** @type {?} */ tokenType = this._attemptCharCode($SLASH) ? TokenType$1.TAG_OPEN_END_VOID : TokenType$1.TAG_OPEN_END;\n        this._beginToken(tokenType);\n        this._requireCharCode($GT);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagClose = function (start) {\n        this._beginToken(TokenType$1.TAG_CLOSE, start);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._requireCharCode($GT);\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormStart = function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_FORM_START);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ condition = this._readUntil($COMMA);\n        this._endToken([condition], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ type = this._readUntil($COMMA);\n        this._endToken([type], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseStart = function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_VALUE, this._getLocation());\n        var /** @type {?} */ value = this._readUntil($LBRACE).trim();\n        this._endToken([value], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_CASE_EXP_START);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseEnd = function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormEnd = function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeText = function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._beginToken(TokenType$1.TEXT, start);\n        var /** @type {?} */ parts = [];\n        do {\n            if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n                parts.push(this._interpolationConfig.start);\n                this._inInterpolation = true;\n            }\n            else if (this._interpolationConfig && this._inInterpolation &&\n                this._attemptStr(this._interpolationConfig.end)) {\n                parts.push(this._interpolationConfig.end);\n                this._inInterpolation = false;\n            }\n            else {\n                parts.push(this._readChar(true));\n            }\n        } while (!this._isTextEnd());\n        this._endToken([this._processCarriageReturns(parts.join(''))]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isTextEnd = function () {\n        if (this._peek === $LT || this._peek === $EOF) {\n            return true;\n        }\n        if (this._tokenizeIcu && !this._inInterpolation) {\n            if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                // start of an expansion form\n                return true;\n            }\n            if (this._peek === $RBRACE && this._isInExpansionCase()) {\n                // end of and expansion case\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._savePosition = function () {\n        return [this._peek, this._index, this._column, this._line, this.tokens.length];\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._readUntil = function (char) {\n        var /** @type {?} */ start = this._index;\n        this._attemptUntilChar(char);\n        return this._input.substring(start, this._index);\n    };\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    _Tokenizer.prototype._restorePosition = function (position) {\n        this._peek = position[0];\n        this._index = position[1];\n        this._column = position[2];\n        this._line = position[3];\n        var /** @type {?} */ nbTokens = position[4];\n        if (nbTokens < this.tokens.length) {\n            // remove any extra tokens\n            this.tokens = this.tokens.slice(0, nbTokens);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionCase = function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_CASE_EXP_START;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionForm = function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_FORM_START;\n    };\n    return _Tokenizer;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNotWhitespace(code) {\n    return !isWhitespace(code) || code === $EOF;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNameEnd(code) {\n    return isWhitespace(code) || code === $GT || code === $SLASH ||\n        code === $SQ || code === $DQ || code === $EQ;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isPrefixEnd(code) {\n    return (code < $a || $z < code) && (code < $A || $Z < code) &&\n        (code < $0 || code > $9);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigitEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiHexDigit(code);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNamedEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiLetter(code);\n}\n/**\n * @param {?} input\n * @param {?} offset\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction isExpansionFormStart(input, offset, interpolationConfig) {\n    var /** @type {?} */ isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n    return input.charCodeAt(offset) == $LBRACE && !isInterpolationStart;\n}\n/**\n * @param {?} peek\n * @return {?}\n */\nfunction isExpansionCaseStart(peek) {\n    return peek === $EQ || isAsciiLetter(peek);\n}\n/**\n * @param {?} code1\n * @param {?} code2\n * @return {?}\n */\nfunction compareCharCodeCaseInsensitive(code1, code2) {\n    return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction toUpperCaseCharCode(code) {\n    return code >= $a && code <= $z ? code - $a + $A : code;\n}\n/**\n * @param {?} srcTokens\n * @return {?}\n */\nfunction mergeTextTokens(srcTokens) {\n    var /** @type {?} */ dstTokens = [];\n    var /** @type {?} */ lastDstToken = undefined;\n    for (var /** @type {?} */ i = 0; i < srcTokens.length; i++) {\n        var /** @type {?} */ token = srcTokens[i];\n        if (lastDstToken && lastDstToken.type == TokenType$1.TEXT && token.type == TokenType$1.TEXT) {\n            lastDstToken.parts[0] += token.parts[0];\n            lastDstToken.sourceSpan.end = token.sourceSpan.end;\n        }\n        else {\n            lastDstToken = token;\n            dstTokens.push(lastDstToken);\n        }\n    }\n    return dstTokens;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TreeError = (function (_super) {\n    __extends(TreeError, _super);\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     */\n    function TreeError(elementName, span, msg) {\n        var _this = _super.call(this, span, msg) || this;\n        _this.elementName = elementName;\n        return _this;\n    }\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    TreeError.create = function (elementName, span, msg) {\n        return new TreeError(elementName, span, msg);\n    };\n    return TreeError;\n}(ParseError));\nvar ParseTreeResult = (function () {\n    /**\n     * @param {?} rootNodes\n     * @param {?} errors\n     */\n    function ParseTreeResult(rootNodes, errors) {\n        this.rootNodes = rootNodes;\n        this.errors = errors;\n    }\n    return ParseTreeResult;\n}());\nvar Parser$1 = (function () {\n    /**\n     * @param {?} getTagDefinition\n     */\n    function Parser$1(getTagDefinition) {\n        this.getTagDefinition = getTagDefinition;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser$1.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ tokensAndErrors = tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n        var /** @type {?} */ treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n        return new ParseTreeResult(treeAndErrors.rootNodes, ((tokensAndErrors.errors)).concat(treeAndErrors.errors));\n    };\n    return Parser$1;\n}());\nvar _TreeBuilder = (function () {\n    /**\n     * @param {?} tokens\n     * @param {?} getTagDefinition\n     */\n    function _TreeBuilder(tokens, getTagDefinition) {\n        this.tokens = tokens;\n        this.getTagDefinition = getTagDefinition;\n        this._index = -1;\n        this._rootNodes = [];\n        this._errors = [];\n        this._elementStack = [];\n        this._advance();\n    }\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype.build = function () {\n        while (this._peek.type !== TokenType$1.EOF) {\n            if (this._peek.type === TokenType$1.TAG_OPEN_START) {\n                this._consumeStartTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TAG_CLOSE) {\n                this._consumeEndTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.CDATA_START) {\n                this._closeVoidElement();\n                this._consumeCdata(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.COMMENT_START) {\n                this._closeVoidElement();\n                this._consumeComment(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TEXT || this._peek.type === TokenType$1.RAW_TEXT ||\n                this._peek.type === TokenType$1.ESCAPABLE_RAW_TEXT) {\n                this._closeVoidElement();\n                this._consumeText(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.EXPANSION_FORM_START) {\n                this._consumeExpansion(this._advance());\n            }\n            else {\n                // Skip all other tokens...\n                this._advance();\n            }\n        }\n        return new ParseTreeResult(this._rootNodes, this._errors);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advance = function () {\n        var /** @type {?} */ prev = this._peek;\n        if (this._index < this.tokens.length - 1) {\n            // Note: there is always an EOF token at the end\n            this._index++;\n        }\n        this._peek = this.tokens[this._index];\n        return prev;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advanceIf = function (type) {\n        if (this._peek.type === type) {\n            return this._advance();\n        }\n        return null;\n    };\n    /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeCdata = function (startToken) {\n        this._consumeText(this._advance());\n        this._advanceIf(TokenType$1.CDATA_END);\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeComment = function (token) {\n        var /** @type {?} */ text = this._advanceIf(TokenType$1.RAW_TEXT);\n        this._advanceIf(TokenType$1.COMMENT_END);\n        var /** @type {?} */ value = text != null ? text.parts[0].trim() : null;\n        this._addToParent(new Comment(value, token.sourceSpan));\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeExpansion = function (token) {\n        var /** @type {?} */ switchValue = this._advance();\n        var /** @type {?} */ type = this._advance();\n        var /** @type {?} */ cases = [];\n        // read =\n        while (this._peek.type === TokenType$1.EXPANSION_CASE_VALUE) {\n            var /** @type {?} */ expCase = this._parseExpansionCase();\n            if (!expCase)\n                return; // error\n            cases.push(expCase);\n        }\n        // read the final }\n        if (this._peek.type !== TokenType$1.EXPANSION_FORM_END) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n            return;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n        this._addToParent(new Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n        this._advance();\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._parseExpansionCase = function () {\n        var /** @type {?} */ value = this._advance();\n        // read {\n        if (this._peek.type !== TokenType$1.EXPANSION_CASE_EXP_START) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '{'.\"));\n            return null;\n        }\n        // read until }\n        var /** @type {?} */ start = this._advance();\n        var /** @type {?} */ exp = this._collectExpansionExpTokens(start);\n        if (!exp)\n            return null;\n        var /** @type {?} */ end = this._advance();\n        exp.push(new Token$1(TokenType$1.EOF, [], end.sourceSpan));\n        // parse everything in between { and }\n        var /** @type {?} */ parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n        if (parsedExp.errors.length > 0) {\n            this._errors = this._errors.concat(/** @type {?} */ (parsedExp.errors));\n            return null;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n        var /** @type {?} */ expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n        return new ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _TreeBuilder.prototype._collectExpansionExpTokens = function (start) {\n        var /** @type {?} */ exp = [];\n        var /** @type {?} */ expansionFormStack = [TokenType$1.EXPANSION_CASE_EXP_START];\n        while (true) {\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_START ||\n                this._peek.type === TokenType$1.EXPANSION_CASE_EXP_START) {\n                expansionFormStack.push(this._peek.type);\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_CASE_EXP_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_CASE_EXP_START)) {\n                    expansionFormStack.pop();\n                    if (expansionFormStack.length == 0)\n                        return exp;\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_FORM_START)) {\n                    expansionFormStack.pop();\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EOF) {\n                this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                return null;\n            }\n            exp.push(this._advance());\n        }\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeText = function (token) {\n        var /** @type {?} */ text = token.parts[0];\n        if (text.length > 0 && text[0] == '\\n') {\n            var /** @type {?} */ parent = this._getParentElement();\n            if (parent != null && parent.children.length == 0 &&\n                this.getTagDefinition(parent.name).ignoreFirstLf) {\n                text = text.substring(1);\n            }\n        }\n        if (text.length > 0) {\n            this._addToParent(new Text(text, token.sourceSpan));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._closeVoidElement = function () {\n        if (this._elementStack.length > 0) {\n            var /** @type {?} */ el = this._elementStack[this._elementStack.length - 1];\n            if (this.getTagDefinition(el.name).isVoid) {\n                this._elementStack.pop();\n            }\n        }\n    };\n    /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeStartTag = function (startTagToken) {\n        var /** @type {?} */ prefix = startTagToken.parts[0];\n        var /** @type {?} */ name = startTagToken.parts[1];\n        var /** @type {?} */ attrs = [];\n        while (this._peek.type === TokenType$1.ATTR_NAME) {\n            attrs.push(this._consumeAttr(this._advance()));\n        }\n        var /** @type {?} */ fullName = this._getElementFullName(prefix, name, this._getParentElement());\n        var /** @type {?} */ selfClosing = false;\n        // Note: There could have been a tokenizer error\n        // so that we don't get a token for the end tag...\n        if (this._peek.type === TokenType$1.TAG_OPEN_END_VOID) {\n            this._advance();\n            selfClosing = true;\n            var /** @type {?} */ tagDef = this.getTagDefinition(fullName);\n            if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n                this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\n            }\n        }\n        else if (this._peek.type === TokenType$1.TAG_OPEN_END) {\n            this._advance();\n            selfClosing = false;\n        }\n        var /** @type {?} */ end = this._peek.sourceSpan.start;\n        var /** @type {?} */ span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n        var /** @type {?} */ el = new Element(fullName, attrs, [], span, span, undefined);\n        this._pushElement(el);\n        if (selfClosing) {\n            this._popElement(fullName);\n            el.endSourceSpan = span;\n        }\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _TreeBuilder.prototype._pushElement = function (el) {\n        if (this._elementStack.length > 0) {\n            var /** @type {?} */ parentEl = this._elementStack[this._elementStack.length - 1];\n            if (this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n                this._elementStack.pop();\n            }\n        }\n        var /** @type {?} */ tagDef = this.getTagDefinition(el.name);\n        var _a = this._getParentElementSkippingContainers(), parent = _a.parent, container = _a.container;\n        if (parent && tagDef.requireExtraParent(parent.name)) {\n            var /** @type {?} */ newParent = new Element(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n            this._insertBeforeContainer(parent, container, newParent);\n        }\n        this._addToParent(el);\n        this._elementStack.push(el);\n    };\n    /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeEndTag = function (endTagToken) {\n        var /** @type {?} */ fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n        if (this._getParentElement()) {\n            ((this._getParentElement())).endSourceSpan = endTagToken.sourceSpan;\n        }\n        if (this.getTagDefinition(fullName).isVoid) {\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n        }\n        else if (!this._popElement(fullName)) {\n            var /** @type {?} */ errMsg = \"Unexpected closing tag \\\"\" + fullName + \"\\\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags\";\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n        }\n    };\n    /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._popElement = function (fullName) {\n        for (var /** @type {?} */ stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n            var /** @type {?} */ el = this._elementStack[stackIndex];\n            if (el.name == fullName) {\n                this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n                return true;\n            }\n            if (!this.getTagDefinition(el.name).closedByParent) {\n                return false;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeAttr = function (attrName) {\n        var /** @type {?} */ fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n        var /** @type {?} */ end = attrName.sourceSpan.end;\n        var /** @type {?} */ value = '';\n        var /** @type {?} */ valueSpan = ((undefined));\n        if (this._peek.type === TokenType$1.ATTR_VALUE) {\n            var /** @type {?} */ valueToken = this._advance();\n            value = valueToken.parts[0];\n            end = valueToken.sourceSpan.end;\n            valueSpan = valueToken.sourceSpan;\n        }\n        return new Attribute$1(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElement = function () {\n        return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n    };\n    /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElementSkippingContainers = function () {\n        var /** @type {?} */ container = null;\n        for (var /** @type {?} */ i = this._elementStack.length - 1; i >= 0; i--) {\n            if (!isNgContainer(this._elementStack[i].name)) {\n                return { parent: this._elementStack[i], container: container };\n            }\n            container = this._elementStack[i];\n        }\n        return { parent: this._elementStack[this._elementStack.length - 1], container: container };\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._addToParent = function (node) {\n        var /** @type {?} */ parent = this._getParentElement();\n        if (parent != null) {\n            parent.children.push(node);\n        }\n        else {\n            this._rootNodes.push(node);\n        }\n    };\n    /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._insertBeforeContainer = function (parent, container, node) {\n        if (!container) {\n            this._addToParent(node);\n            this._elementStack.push(node);\n        }\n        else {\n            if (parent) {\n                // replace the container with the new node in the children\n                var /** @type {?} */ index = parent.children.indexOf(container);\n                parent.children[index] = node;\n            }\n            else {\n                this._rootNodes.push(node);\n            }\n            node.children.push(container);\n            this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n        }\n    };\n    /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getElementFullName = function (prefix, localName, parentElement) {\n        if (prefix == null) {\n            prefix = ((this.getTagDefinition(localName).implicitNamespacePrefix));\n            if (prefix == null && parentElement != null) {\n                prefix = getNsPrefix(parentElement.name);\n            }\n        }\n        return mergeNsAndName(prefix, localName);\n    };\n    return _TreeBuilder;\n}());\n/**\n * @param {?} stack\n * @param {?} element\n * @return {?}\n */\nfunction lastOnStack(stack, element) {\n    return stack.length > 0 && stack[stack.length - 1] === element;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Message = (function () {\n    /**\n     * @param {?} nodes message AST\n     * @param {?} placeholders maps placeholder names to static content\n     * @param {?} placeholderToMessage maps placeholder names to messages (used for nested ICU messages)\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     */\n    function Message(nodes, placeholders, placeholderToMessage, meaning, description, id) {\n        this.nodes = nodes;\n        this.placeholders = placeholders;\n        this.placeholderToMessage = placeholderToMessage;\n        this.meaning = meaning;\n        this.description = description;\n        this.id = id;\n        if (nodes.length) {\n            this.sources = [{\n                    filePath: nodes[0].sourceSpan.start.file.url,\n                    startLine: nodes[0].sourceSpan.start.line + 1,\n                    startCol: nodes[0].sourceSpan.start.col + 1,\n                    endLine: nodes[nodes.length - 1].sourceSpan.end.line + 1,\n                    endCol: nodes[0].sourceSpan.start.col + 1\n                }];\n        }\n        else {\n            this.sources = [];\n        }\n    }\n    return Message;\n}());\nvar Text$1 = (function () {\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function Text$1(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Text$1.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n    return Text$1;\n}());\nvar Container = (function () {\n    /**\n     * @param {?} children\n     * @param {?} sourceSpan\n     */\n    function Container(children, sourceSpan) {\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Container.prototype.visit = function (visitor, context) { return visitor.visitContainer(this, context); };\n    return Container;\n}());\nvar Icu = (function () {\n    /**\n     * @param {?} expression\n     * @param {?} type\n     * @param {?} cases\n     * @param {?} sourceSpan\n     */\n    function Icu(expression, type, cases, sourceSpan) {\n        this.expression = expression;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Icu.prototype.visit = function (visitor, context) { return visitor.visitIcu(this, context); };\n    return Icu;\n}());\nvar TagPlaceholder = (function () {\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} startName\n     * @param {?} closeName\n     * @param {?} children\n     * @param {?} isVoid\n     * @param {?} sourceSpan\n     */\n    function TagPlaceholder(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n        this.tag = tag;\n        this.attrs = attrs;\n        this.startName = startName;\n        this.closeName = closeName;\n        this.children = children;\n        this.isVoid = isVoid;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    TagPlaceholder.prototype.visit = function (visitor, context) { return visitor.visitTagPlaceholder(this, context); };\n    return TagPlaceholder;\n}());\nvar Placeholder = (function () {\n    /**\n     * @param {?} value\n     * @param {?} name\n     * @param {?} sourceSpan\n     */\n    function Placeholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Placeholder.prototype.visit = function (visitor, context) { return visitor.visitPlaceholder(this, context); };\n    return Placeholder;\n}());\nvar IcuPlaceholder = (function () {\n    /**\n     * @param {?} value\n     * @param {?} name\n     * @param {?} sourceSpan\n     */\n    function IcuPlaceholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    IcuPlaceholder.prototype.visit = function (visitor, context) { return visitor.visitIcuPlaceholder(this, context); };\n    return IcuPlaceholder;\n}());\nvar CloneVisitor = (function () {\n    function CloneVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitText = function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var /** @type {?} */ children = container.children.map(function (n) { return n.visit(_this, context); });\n        return new Container(children, container.sourceSpan);\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = {};\n        Object.keys(icu.cases).forEach(function (key) { return cases[key] = icu.cases[key].visit(_this, context); });\n        var /** @type {?} */ msg = new Icu(icu.expression, icu.type, cases, icu.sourceSpan);\n        msg.expressionPlaceholder = icu.expressionPlaceholder;\n        return msg;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, context); });\n        return new TagPlaceholder(ph.tag, ph.attrs, ph.startName, ph.closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitPlaceholder = function (ph, context) {\n        return new Placeholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        return new IcuPlaceholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    return CloneVisitor;\n}());\nvar RecurseVisitor = (function () {\n    function RecurseVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitText = function (text, context) { };\n    \n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        container.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        Object.keys(icu.cases).forEach(function (k) { icu.cases[k].visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        ph.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitPlaceholder = function (ph, context) { };\n    \n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcuPlaceholder = function (ph, context) { };\n    \n    return RecurseVisitor;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TAG_TO_PLACEHOLDER_NAMES = {\n    'A': 'LINK',\n    'B': 'BOLD_TEXT',\n    'BR': 'LINE_BREAK',\n    'EM': 'EMPHASISED_TEXT',\n    'H1': 'HEADING_LEVEL1',\n    'H2': 'HEADING_LEVEL2',\n    'H3': 'HEADING_LEVEL3',\n    'H4': 'HEADING_LEVEL4',\n    'H5': 'HEADING_LEVEL5',\n    'H6': 'HEADING_LEVEL6',\n    'HR': 'HORIZONTAL_RULE',\n    'I': 'ITALIC_TEXT',\n    'LI': 'LIST_ITEM',\n    'LINK': 'MEDIA_LINK',\n    'OL': 'ORDERED_LIST',\n    'P': 'PARAGRAPH',\n    'Q': 'QUOTATION',\n    'S': 'STRIKETHROUGH_TEXT',\n    'SMALL': 'SMALL_TEXT',\n    'SUB': 'SUBSTRIPT',\n    'SUP': 'SUPERSCRIPT',\n    'TBODY': 'TABLE_BODY',\n    'TD': 'TABLE_CELL',\n    'TFOOT': 'TABLE_FOOTER',\n    'TH': 'TABLE_HEADER_CELL',\n    'THEAD': 'TABLE_HEADER',\n    'TR': 'TABLE_ROW',\n    'TT': 'MONOSPACED_TEXT',\n    'U': 'UNDERLINED_TEXT',\n    'UL': 'UNORDERED_LIST',\n};\n/**\n * Creates unique names for placeholder with different content.\n *\n * Returns the same placeholder name when the content is identical.\n *\n * \\@internal\n */\nvar PlaceholderRegistry = (function () {\n    function PlaceholderRegistry() {\n        this._placeHolderNameCounts = {};\n        this._signatureToName = {};\n    }\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getStartTagPlaceholderName = function (tag, attrs, isVoid) {\n        var /** @type {?} */ signature = this._hashTag(tag, attrs, isVoid);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(isVoid ? baseName : \"START_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getCloseTagPlaceholderName = function (tag) {\n        var /** @type {?} */ signature = this._hashClosingTag(tag);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(\"CLOSE_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getPlaceholderName = function (name, content) {\n        var /** @type {?} */ upperName = name.toUpperCase();\n        var /** @type {?} */ signature = \"PH: \" + upperName + \"=\" + content;\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ uniqueName = this._generateUniqueName(upperName);\n        this._signatureToName[signature] = uniqueName;\n        return uniqueName;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getUniquePlaceholder = function (name) {\n        return this._generateUniqueName(name.toUpperCase());\n    };\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashTag = function (tag, attrs, isVoid) {\n        var /** @type {?} */ start = \"<\" + tag;\n        var /** @type {?} */ strAttrs = Object.keys(attrs).sort().map(function (name) { return \" \" + name + \"=\" + attrs[name]; }).join('');\n        var /** @type {?} */ end = isVoid ? '/>' : \"></\" + tag + \">\";\n        return start + strAttrs + end;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashClosingTag = function (tag) { return this._hashTag(\"/\" + tag, {}, false); };\n    /**\n     * @param {?} base\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._generateUniqueName = function (base) {\n        var /** @type {?} */ seen = this._placeHolderNameCounts.hasOwnProperty(base);\n        if (!seen) {\n            this._placeHolderNameCounts[base] = 1;\n            return base;\n        }\n        var /** @type {?} */ id = this._placeHolderNameCounts[base];\n        this._placeHolderNameCounts[base] = id + 1;\n        return base + \"_\" + id;\n    };\n    return PlaceholderRegistry;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _expParser = new Parser(new Lexer());\n/**\n * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction createI18nMessageFactory(interpolationConfig) {\n    var /** @type {?} */ visitor = new _I18nVisitor(_expParser, interpolationConfig);\n    return function (nodes, meaning, description, id) { return visitor.toI18nMessage(nodes, meaning, description, id); };\n}\nvar _I18nVisitor = (function () {\n    /**\n     * @param {?} _expressionParser\n     * @param {?} _interpolationConfig\n     */\n    function _I18nVisitor(_expressionParser, _interpolationConfig) {\n        this._expressionParser = _expressionParser;\n        this._interpolationConfig = _interpolationConfig;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    _I18nVisitor.prototype.toI18nMessage = function (nodes, meaning, description, id) {\n        this._isIcu = nodes.length == 1 && nodes[0] instanceof Expansion;\n        this._icuDepth = 0;\n        this._placeholderRegistry = new PlaceholderRegistry();\n        this._placeholderToContent = {};\n        this._placeholderToMessage = {};\n        var /** @type {?} */ i18nodes = visitAll(this, nodes, {});\n        return new Message(i18nodes, this._placeholderToContent, this._placeholderToMessage, meaning, description, id);\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitElement = function (el, context) {\n        var /** @type {?} */ children = visitAll(this, el.children);\n        var /** @type {?} */ attrs = {};\n        el.attrs.forEach(function (attr) {\n            // Do not visit the attributes, translatable ones are top-level ASTs\n            attrs[attr.name] = attr.value;\n        });\n        var /** @type {?} */ isVoid = getHtmlTagDefinition(el.name).isVoid;\n        var /** @type {?} */ startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n        this._placeholderToContent[startPhName] = ((el.sourceSpan)).toString();\n        var /** @type {?} */ closePhName = '';\n        if (!isVoid) {\n            closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n            this._placeholderToContent[closePhName] = \"</\" + el.name + \">\";\n        }\n        return new TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, /** @type {?} */ ((el.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitAttribute = function (attribute, context) {\n        return this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitText = function (text, context) {\n        return this._visitTextWithInterpolation(text.value, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitComment = function (comment, context) { return null; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansion = function (icu, context) {\n        var _this = this;\n        this._icuDepth++;\n        var /** @type {?} */ i18nIcuCases = {};\n        var /** @type {?} */ i18nIcu = new Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n        icu.cases.forEach(function (caze) {\n            i18nIcuCases[caze.value] = new Container(caze.expression.map(function (node) { return node.visit(_this, {}); }), caze.expSourceSpan);\n        });\n        this._icuDepth--;\n        if (this._isIcu || this._icuDepth > 0) {\n            // Returns an ICU node when:\n            // - the message (vs a part of the message) is an ICU message, or\n            // - the ICU message is nested.\n            var /** @type {?} */ expPh = this._placeholderRegistry.getUniquePlaceholder(\"VAR_\" + icu.type);\n            i18nIcu.expressionPlaceholder = expPh;\n            this._placeholderToContent[expPh] = icu.switchValue;\n            return i18nIcu;\n        }\n        // Else returns a placeholder\n        // ICU placeholders should not be replaced with their original content but with the their\n        // translations. We need to create a new visitor (they are not re-entrant) to compute the\n        // message id.\n        // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n        var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n        var /** @type {?} */ visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n        this._placeholderToMessage[phName] = visitor.toI18nMessage([icu], '', '', '');\n        return new IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansionCase = function (icuCase, context) {\n        throw new Error('Unreachable code');\n    };\n    /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _I18nVisitor.prototype._visitTextWithInterpolation = function (text, sourceSpan) {\n        var /** @type {?} */ splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n        if (!splitInterpolation) {\n            // No expression, return a single text\n            return new Text$1(text, sourceSpan);\n        }\n        // Return a group of text + expressions\n        var /** @type {?} */ nodes = [];\n        var /** @type {?} */ container = new Container(nodes, sourceSpan);\n        var _a = this._interpolationConfig, sDelimiter = _a.start, eDelimiter = _a.end;\n        for (var /** @type {?} */ i = 0; i < splitInterpolation.strings.length - 1; i++) {\n            var /** @type {?} */ expression = splitInterpolation.expressions[i];\n            var /** @type {?} */ baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n            var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n            if (splitInterpolation.strings[i].length) {\n                // No need to add empty strings\n                nodes.push(new Text$1(splitInterpolation.strings[i], sourceSpan));\n            }\n            nodes.push(new Placeholder(expression, phName, sourceSpan));\n            this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n        }\n        // The last index contains no expression\n        var /** @type {?} */ lastStringIdx = splitInterpolation.strings.length - 1;\n        if (splitInterpolation.strings[lastStringIdx].length) {\n            nodes.push(new Text$1(splitInterpolation.strings[lastStringIdx], sourceSpan));\n        }\n        return container;\n    };\n    return _I18nVisitor;\n}());\nvar _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*(\"|')([\\s\\S]*?)\\1[\\s\\S]*\\)/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction _extractPlaceholderName(input) {\n    return input.split(_CUSTOM_PH_EXP)[2];\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An i18n error.\n */\nvar I18nError = (function (_super) {\n    __extends(I18nError, _super);\n    /**\n     * @param {?} span\n     * @param {?} msg\n     */\n    function I18nError(span, msg) {\n        return _super.call(this, span, msg) || this;\n    }\n    return I18nError;\n}(ParseError));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _I18N_ATTR = 'i18n';\nvar _I18N_ATTR_PREFIX = 'i18n-';\nvar _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\nvar MEANING_SEPARATOR = '|';\nvar ID_SEPARATOR = '@@';\n/**\n * Extract translatable messages from an html AST\n * @param {?} nodes\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.extract(nodes, interpolationConfig);\n}\n/**\n * @param {?} nodes\n * @param {?} translations\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.merge(nodes, translations, interpolationConfig);\n}\nvar ExtractionResult = (function () {\n    /**\n     * @param {?} messages\n     * @param {?} errors\n     */\n    function ExtractionResult(messages, errors) {\n        this.messages = messages;\n        this.errors = errors;\n    }\n    return ExtractionResult;\n}());\nvar _VisitorMode = {};\n_VisitorMode.Extract = 0;\n_VisitorMode.Merge = 1;\n_VisitorMode[_VisitorMode.Extract] = \"Extract\";\n_VisitorMode[_VisitorMode.Merge] = \"Merge\";\n/**\n * This Visitor is used:\n * 1. to extract all the translatable strings from an html AST (see `extract()`),\n * 2. to replace the translatable strings with the actual translations (see `merge()`)\n *\n * \\@internal\n */\nvar _Visitor = (function () {\n    /**\n     * @param {?} _implicitTags\n     * @param {?} _implicitAttrs\n     */\n    function _Visitor(_implicitTags, _implicitAttrs) {\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n    }\n    /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.extract = function (nodes, interpolationConfig) {\n        var _this = this;\n        this._init(_VisitorMode.Extract, interpolationConfig);\n        nodes.forEach(function (node) { return node.visit(_this, null); });\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ExtractionResult(this._messages, this._errors);\n    };\n    /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.merge = function (nodes, translations, interpolationConfig) {\n        this._init(_VisitorMode.Merge, interpolationConfig);\n        this._translations = translations;\n        // Construct a single fake root element\n        var /** @type {?} */ wrapper = new Element('wrapper', [], nodes, /** @type {?} */ ((undefined)), undefined, undefined);\n        var /** @type {?} */ translatedNode = wrapper.visit(this, null);\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ParseTreeResult(translatedNode.children, this._errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansionCase = function (icuCase, context) {\n        // Parse cases for translatable html attributes\n        var /** @type {?} */ expression = visitAll(this, icuCase.expression, context);\n        if (this._mode === _VisitorMode.Merge) {\n            return new ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n        }\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansion = function (icu, context) {\n        this._mayBeAddBlockChildren(icu);\n        var /** @type {?} */ wasInIcu = this._inIcu;\n        if (!this._inIcu) {\n            // nested ICU messages should not be extracted but top-level translated as a whole\n            if (this._isInTranslatableSection) {\n                this._addMessage([icu]);\n            }\n            this._inIcu = true;\n        }\n        var /** @type {?} */ cases = visitAll(this, icu.cases, context);\n        if (this._mode === _VisitorMode.Merge) {\n            icu = new Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n        }\n        this._inIcu = wasInIcu;\n        return icu;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitComment = function (comment, context) {\n        var /** @type {?} */ isOpening = _isOpeningComment(comment);\n        if (isOpening && this._isInTranslatableSection) {\n            this._reportError(comment, 'Could not start a block inside a translatable section');\n            return;\n        }\n        var /** @type {?} */ isClosing = _isClosingComment(comment);\n        if (isClosing && !this._inI18nBlock) {\n            this._reportError(comment, 'Trying to close an unopened block');\n            return;\n        }\n        if (!this._inI18nNode && !this._inIcu) {\n            if (!this._inI18nBlock) {\n                if (isOpening) {\n                    this._inI18nBlock = true;\n                    this._blockStartDepth = this._depth;\n                    this._blockChildren = [];\n                    this._blockMeaningAndDesc = ((comment.value)).replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n                    this._openTranslatableSection(comment);\n                }\n            }\n            else {\n                if (isClosing) {\n                    if (this._depth == this._blockStartDepth) {\n                        this._closeTranslatableSection(comment, this._blockChildren);\n                        this._inI18nBlock = false;\n                        var /** @type {?} */ message = ((this._addMessage(this._blockChildren, this._blockMeaningAndDesc)));\n                        // merge attributes in sections\n                        var /** @type {?} */ nodes = this._translateMessage(comment, message);\n                        return visitAll(this, nodes);\n                    }\n                    else {\n                        this._reportError(comment, 'I18N blocks should not cross element boundaries');\n                        return;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = function (text, context) {\n        if (this._isInTranslatableSection) {\n            this._mayBeAddBlockChildren(text);\n        }\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitElement = function (el, context) {\n        var _this = this;\n        this._mayBeAddBlockChildren(el);\n        this._depth++;\n        var /** @type {?} */ wasInI18nNode = this._inI18nNode;\n        var /** @type {?} */ wasInImplicitNode = this._inImplicitNode;\n        var /** @type {?} */ childNodes = [];\n        var /** @type {?} */ translatedChildNodes = ((undefined));\n        // Extract:\n        // - top level nodes with the (implicit) \"i18n\" attribute if not already in a section\n        // - ICU messages\n        var /** @type {?} */ i18nAttr = _getI18nAttr(el);\n        var /** @type {?} */ i18nMeta = i18nAttr ? i18nAttr.value : '';\n        var /** @type {?} */ isImplicit = this._implicitTags.some(function (tag) { return el.name === tag; }) && !this._inIcu &&\n            !this._isInTranslatableSection;\n        var /** @type {?} */ isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n        this._inImplicitNode = wasInImplicitNode || isImplicit;\n        if (!this._isInTranslatableSection && !this._inIcu) {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._inI18nNode = true;\n                var /** @type {?} */ message = ((this._addMessage(el.children, i18nMeta)));\n                translatedChildNodes = this._translateMessage(el, message);\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                var /** @type {?} */ isTranslatable = i18nAttr || isTopLevelImplicit;\n                if (isTranslatable)\n                    this._openTranslatableSection(el);\n                visitAll(this, el.children);\n                if (isTranslatable)\n                    this._closeTranslatableSection(el, el.children);\n            }\n        }\n        else {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                // Descend into child nodes for extraction\n                visitAll(this, el.children);\n            }\n        }\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ visitNodes = translatedChildNodes || el.children;\n            visitNodes.forEach(function (child) {\n                var /** @type {?} */ visited = child.visit(_this, context);\n                if (visited && !_this._isInTranslatableSection) {\n                    // Do not add the children from translatable sections (= i18n blocks here)\n                    // They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)\n                    childNodes = childNodes.concat(visited);\n                }\n            });\n        }\n        this._visitAttributesOf(el);\n        this._depth--;\n        this._inI18nNode = wasInI18nNode;\n        this._inImplicitNode = wasInImplicitNode;\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ translatedAttrs = this._translateAttributes(el);\n            return new Element(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitAttribute = function (attribute, context) {\n        throw new Error('unreachable code');\n    };\n    /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype._init = function (mode, interpolationConfig) {\n        this._mode = mode;\n        this._inI18nBlock = false;\n        this._inI18nNode = false;\n        this._depth = 0;\n        this._inIcu = false;\n        this._msgCountAtSectionStart = undefined;\n        this._errors = [];\n        this._messages = [];\n        this._inImplicitNode = false;\n        this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._visitAttributesOf = function (el) {\n        var _this = this;\n        var /** @type {?} */ explicitAttrNameToValue = {};\n        var /** @type {?} */ implicitAttrNames = this._implicitAttrs[el.name] || [];\n        el.attrs.filter(function (attr) { return attr.name.startsWith(_I18N_ATTR_PREFIX); })\n            .forEach(function (attr) { return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n            attr.value; });\n        el.attrs.forEach(function (attr) {\n            if (attr.name in explicitAttrNameToValue) {\n                _this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n            }\n            else if (implicitAttrNames.some(function (name) { return attr.name === name; })) {\n                _this._addMessage([attr]);\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    _Visitor.prototype._addMessage = function (ast, msgMeta) {\n        if (ast.length == 0 ||\n            ast.length == 1 && ast[0] instanceof Attribute$1 && !((ast[0])).value) {\n            // Do not create empty messages\n            return null;\n        }\n        var _a = _parseMessageMeta(msgMeta), meaning = _a.meaning, description = _a.description, id = _a.id;\n        var /** @type {?} */ message = this._createI18nMessage(ast, meaning, description, id);\n        this._messages.push(message);\n        return message;\n    };\n    /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    _Visitor.prototype._translateMessage = function (el, message) {\n        if (message && this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ nodes = this._translations.get(message);\n            if (nodes) {\n                return nodes;\n            }\n            this._reportError(el, \"Translation unavailable for message id=\\\"\" + this._translations.digest(message) + \"\\\"\");\n        }\n        return [];\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._translateAttributes = function (el) {\n        var _this = this;\n        var /** @type {?} */ attributes = el.attrs;\n        var /** @type {?} */ i18nParsedMessageMeta = {};\n        attributes.forEach(function (attr) {\n            if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                    _parseMessageMeta(attr.value);\n            }\n        });\n        var /** @type {?} */ translatedAttributes = [];\n        attributes.forEach(function (attr) {\n            if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                // strip i18n specific attributes\n                return;\n            }\n            if (attr.value && attr.value != '' && i18nParsedMessageMeta.hasOwnProperty(attr.name)) {\n                var _a = i18nParsedMessageMeta[attr.name], meaning = _a.meaning, description = _a.description, id = _a.id;\n                var /** @type {?} */ message = _this._createI18nMessage([attr], meaning, description, id);\n                var /** @type {?} */ nodes = _this._translations.get(message);\n                if (nodes) {\n                    if (nodes.length == 0) {\n                        translatedAttributes.push(new Attribute$1(attr.name, '', attr.sourceSpan));\n                    }\n                    else if (nodes[0] instanceof Text) {\n                        var /** @type {?} */ value = ((nodes[0])).value;\n                        translatedAttributes.push(new Attribute$1(attr.name, value, attr.sourceSpan));\n                    }\n                    else {\n                        _this._reportError(el, \"Unexpected translation for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                    }\n                }\n                else {\n                    _this._reportError(el, \"Translation unavailable for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                }\n            }\n            else {\n                translatedAttributes.push(attr);\n            }\n        });\n        return translatedAttributes;\n    };\n    /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._mayBeAddBlockChildren = function (node) {\n        if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n            this._blockChildren.push(node);\n        }\n    };\n    /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._openTranslatableSection = function (node) {\n        if (this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section start');\n        }\n        else {\n            this._msgCountAtSectionStart = this._messages.length;\n        }\n    };\n    Object.defineProperty(_Visitor.prototype, \"_isInTranslatableSection\", {\n        /**\n         * A translatable section could be:\n         * - the content of translatable element,\n         * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n         * @return {?}\n         */\n        get: function () {\n            return this._msgCountAtSectionStart !== void 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    _Visitor.prototype._closeTranslatableSection = function (node, directChildren) {\n        if (!this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section end');\n            return;\n        }\n        var /** @type {?} */ startIndex = this._msgCountAtSectionStart;\n        var /** @type {?} */ significantChildren = directChildren.reduce(function (count, node) { return count + (node instanceof Comment ? 0 : 1); }, 0);\n        if (significantChildren == 1) {\n            for (var /** @type {?} */ i = this._messages.length - 1; i >= ((startIndex)); i--) {\n                var /** @type {?} */ ast = this._messages[i].nodes;\n                if (!(ast.length == 1 && ast[0] instanceof Text$1)) {\n                    this._messages.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this._msgCountAtSectionStart = undefined;\n    };\n    /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    _Visitor.prototype._reportError = function (node, msg) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), msg));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isOpeningComment(n) {\n    return !!(n instanceof Comment && n.value && n.value.startsWith('i18n'));\n}\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isClosingComment(n) {\n    return !!(n instanceof Comment && n.value && n.value === '/i18n');\n}\n/**\n * @param {?} p\n * @return {?}\n */\nfunction _getI18nAttr(p) {\n    return p.attrs.find(function (attr) { return attr.name === _I18N_ATTR; }) || null;\n}\n/**\n * @param {?=} i18n\n * @return {?}\n */\nfunction _parseMessageMeta(i18n) {\n    if (!i18n)\n        return { meaning: '', description: '', id: '' };\n    var /** @type {?} */ idIndex = i18n.indexOf(ID_SEPARATOR);\n    var /** @type {?} */ descIndex = i18n.indexOf(MEANING_SEPARATOR);\n    var _a = (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''], meaningAndDesc = _a[0], id = _a[1];\n    var _b = (descIndex > -1) ?\n        [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n        ['', meaningAndDesc], meaning = _b[0], description = _b[1];\n    return { meaning: meaning, description: description, id: id };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlTagDefinition = (function () {\n    function XmlTagDefinition() {\n        this.closedByParent = false;\n        this.contentType = TagContentType.PARSABLE_DATA;\n        this.isVoid = false;\n        this.ignoreFirstLf = false;\n        this.canSelfClose = true;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.requireExtraParent = function (currentParent) { return false; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.isClosedByChild = function (name) { return false; };\n    return XmlTagDefinition;\n}());\nvar _TAG_DEFINITION = new XmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getXmlTagDefinition(tagName) {\n    return _TAG_DEFINITION;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlParser = (function (_super) {\n    __extends(XmlParser, _super);\n    function XmlParser() {\n        return _super.call(this, getXmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    XmlParser.prototype.parse = function (source, url, parseExpansionForms) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms);\n    };\n    return XmlParser;\n}(Parser$1));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest(message) {\n    return message.id || sha1(serializeNodes(message.nodes).join('') + (\"[\" + message.meaning + \"]\"));\n}\n/**\n * @param {?} message\n * @return {?}\n */\nfunction decimalDigest(message) {\n    if (message.id) {\n        return message.id;\n    }\n    var /** @type {?} */ visitor = new _SerializerIgnoreIcuExpVisitor();\n    var /** @type {?} */ parts = message.nodes.map(function (a) { return a.visit(visitor, null); });\n    return computeMsgId(parts.join(''), message.meaning);\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * \\@internal\n */\nvar _SerializerVisitor = (function () {\n    function _SerializerVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitText = function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        return \"[\" + container.children.map(function (child) { return child.visit(_this); }).join(', ') + \"]\";\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        return \"{\" + icu.expression + \", \" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        return ph.isVoid ?\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\"/>\" :\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\">\" + ph.children.map(function (child) { return child.visit(_this); }).join(', ') + \"</ph name=\\\"\" + ph.closeName + \"\\\">\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitPlaceholder = function (ph, context) {\n        return ph.value ? \"<ph name=\\\"\" + ph.name + \"\\\">\" + ph.value + \"</ph>\" : \"<ph name=\\\"\" + ph.name + \"\\\"/>\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        return \"<ph icu name=\\\"\" + ph.name + \"\\\">\" + ph.value.visit(this) + \"</ph>\";\n    };\n    return _SerializerVisitor;\n}());\nvar serializerVisitor = new _SerializerVisitor();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serializeNodes(nodes) {\n    return nodes.map(function (a) { return a.visit(serializerVisitor, null); });\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n *\n * \\@internal\n */\nvar _SerializerIgnoreIcuExpVisitor = (function (_super) {\n    __extends(_SerializerIgnoreIcuExpVisitor, _super);\n    function _SerializerIgnoreIcuExpVisitor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerIgnoreIcuExpVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // Do not take the expression into account\n        return \"{\" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    return _SerializerIgnoreIcuExpVisitor;\n}(_SerializerVisitor));\n/**\n * Compute the SHA1 of the given string\n *\n * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n * @param {?} str\n * @return {?}\n */\nfunction sha1(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var /** @type {?} */ words32 = stringToWords32(utf8, Endian.Big);\n    var /** @type {?} */ len = utf8.length * 8;\n    var /** @type {?} */ w = new Array(80);\n    var _a = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], a = _a[0], b = _a[1], c = _a[2], d = _a[3], e = _a[4];\n    words32[len >> 5] |= 0x80 << (24 - len % 32);\n    words32[((len + 64 >> 9) << 4) + 15] = len;\n    for (var /** @type {?} */ i = 0; i < words32.length; i += 16) {\n        var _b = [a, b, c, d, e], h0 = _b[0], h1 = _b[1], h2 = _b[2], h3 = _b[3], h4 = _b[4];\n        for (var /** @type {?} */ j = 0; j < 80; j++) {\n            if (j < 16) {\n                w[j] = words32[i + j];\n            }\n            else {\n                w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            }\n            var _c = fk(j, b, c, d), f = _c[0], k = _c[1];\n            var /** @type {?} */ temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n            _d = [d, c, rol32(b, 30), a, temp], e = _d[0], d = _d[1], c = _d[2], b = _d[3], a = _d[4];\n        }\n        _e = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)], a = _e[0], b = _e[1], c = _e[2], d = _e[3], e = _e[4];\n    }\n    return byteStringToHexString(words32ToByteString([a, b, c, d, e]));\n    var _d, _e;\n}\n/**\n * @param {?} index\n * @param {?} b\n * @param {?} c\n * @param {?} d\n * @return {?}\n */\nfunction fk(index, b, c, d) {\n    if (index < 20) {\n        return [(b & c) | (~b & d), 0x5a827999];\n    }\n    if (index < 40) {\n        return [b ^ c ^ d, 0x6ed9eba1];\n    }\n    if (index < 60) {\n        return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n    }\n    return [b ^ c ^ d, 0xca62c1d6];\n}\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n * @param {?} str\n * @return {?}\n */\nfunction fingerprint(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var _a = [hash32(utf8, 0), hash32(utf8, 102072)], hi = _a[0], lo = _a[1];\n    if (hi == 0 && (lo == 0 || lo == 1)) {\n        hi = hi ^ 0x130f9bef;\n        lo = lo ^ -0x6b5f56d8;\n    }\n    return [hi, lo];\n}\n/**\n * @param {?} msg\n * @param {?} meaning\n * @return {?}\n */\nfunction computeMsgId(msg, meaning) {\n    var _a = fingerprint(msg), hi = _a[0], lo = _a[1];\n    if (meaning) {\n        var _b = fingerprint(meaning), him = _b[0], lom = _b[1];\n        _c = add64(rol64([hi, lo], 1), [him, lom]), hi = _c[0], lo = _c[1];\n    }\n    return byteStringToDecString(words32ToByteString([hi & 0x7fffffff, lo]));\n    var _c;\n}\n/**\n * @param {?} str\n * @param {?} c\n * @return {?}\n */\nfunction hash32(str, c) {\n    var _a = [0x9e3779b9, 0x9e3779b9], a = _a[0], b = _a[1];\n    var /** @type {?} */ i;\n    var /** @type {?} */ len = str.length;\n    for (i = 0; i + 12 <= len; i += 12) {\n        a = add32(a, wordAt(str, i, Endian.Little));\n        b = add32(b, wordAt(str, i + 4, Endian.Little));\n        c = add32(c, wordAt(str, i + 8, Endian.Little));\n        _b = mix([a, b, c]), a = _b[0], b = _b[1], c = _b[2];\n    }\n    a = add32(a, wordAt(str, i, Endian.Little));\n    b = add32(b, wordAt(str, i + 4, Endian.Little));\n    // the first byte of c is reserved for the length\n    c = add32(c, len);\n    c = add32(c, wordAt(str, i + 8, Endian.Little) << 8);\n    return mix([a, b, c])[2];\n    var _b;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction mix(_a) {\n    var a = _a[0], b = _a[1], c = _a[2];\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 13;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 8;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 13;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 12;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 16;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 5;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 3;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 10;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 15;\n    return [a, b, c];\n}\nvar Endian = {};\nEndian.Little = 0;\nEndian.Big = 1;\nEndian[Endian.Little] = \"Little\";\nEndian[Endian.Big] = \"Big\";\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32(a, b) {\n    return add32to64(a, b)[1];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32to64(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) + (b & 0xffff);\n    var /** @type {?} */ high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n    return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\n/**\n * @param {?} __0\n * @param {?} __1\n * @return {?}\n */\nfunction add64(_a, _b) {\n    var ah = _a[0], al = _a[1];\n    var bh = _b[0], bl = _b[1];\n    var _c = add32to64(al, bl), carry = _c[0], l = _c[1];\n    var /** @type {?} */ h = add32(add32(ah, bh), carry);\n    return [h, l];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction sub32(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) - (b & 0xffff);\n    var /** @type {?} */ high = (a >> 16) - (b >> 16) + (low >> 16);\n    return (high << 16) | (low & 0xffff);\n}\n/**\n * @param {?} a\n * @param {?} count\n * @return {?}\n */\nfunction rol32(a, count) {\n    return (a << count) | (a >>> (32 - count));\n}\n/**\n * @param {?} __0\n * @param {?} count\n * @return {?}\n */\nfunction rol64(_a, count) {\n    var hi = _a[0], lo = _a[1];\n    var /** @type {?} */ h = (hi << count) | (lo >>> (32 - count));\n    var /** @type {?} */ l = (lo << count) | (hi >>> (32 - count));\n    return [h, l];\n}\n/**\n * @param {?} str\n * @param {?} endian\n * @return {?}\n */\nfunction stringToWords32(str, endian) {\n    var /** @type {?} */ words32 = Array((str.length + 3) >>> 2);\n    for (var /** @type {?} */ i = 0; i < words32.length; i++) {\n        words32[i] = wordAt(str, i * 4, endian);\n    }\n    return words32;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @return {?}\n */\nfunction byteAt(str, index) {\n    return index >= str.length ? 0 : str.charCodeAt(index) & 0xff;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @param {?} endian\n * @return {?}\n */\nfunction wordAt(str, index, endian) {\n    var /** @type {?} */ word = 0;\n    if (endian === Endian.Big) {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << (24 - 8 * i);\n        }\n    }\n    else {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << 8 * i;\n        }\n    }\n    return word;\n}\n/**\n * @param {?} words32\n * @return {?}\n */\nfunction words32ToByteString(words32) {\n    return words32.reduce(function (str, word) { return str + word32ToByteString(word); }, '');\n}\n/**\n * @param {?} word\n * @return {?}\n */\nfunction word32ToByteString(word) {\n    var /** @type {?} */ str = '';\n    for (var /** @type {?} */ i = 0; i < 4; i++) {\n        str += String.fromCharCode((word >>> 8 * (3 - i)) & 0xff);\n    }\n    return str;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToHexString(str) {\n    var /** @type {?} */ hex = '';\n    for (var /** @type {?} */ i = 0; i < str.length; i++) {\n        var /** @type {?} */ b = byteAt(str, i);\n        hex += (b >>> 4).toString(16) + (b & 0x0f).toString(16);\n    }\n    return hex.toLowerCase();\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToDecString(str) {\n    var /** @type {?} */ decimal = '';\n    var /** @type {?} */ toThePower = '1';\n    for (var /** @type {?} */ i = str.length - 1; i >= 0; i--) {\n        decimal = addBigInt(decimal, numberTimesBigInt(byteAt(str, i), toThePower));\n        toThePower = numberTimesBigInt(256, toThePower);\n    }\n    return decimal.split('').reverse().join('');\n}\n/**\n * @param {?} x\n * @param {?} y\n * @return {?}\n */\nfunction addBigInt(x, y) {\n    var /** @type {?} */ sum = '';\n    var /** @type {?} */ len = Math.max(x.length, y.length);\n    for (var /** @type {?} */ i = 0, /** @type {?} */ carry = 0; i < len || carry; i++) {\n        var /** @type {?} */ tmpSum = carry + +(x[i] || 0) + +(y[i] || 0);\n        if (tmpSum >= 10) {\n            carry = 1;\n            sum += tmpSum - 10;\n        }\n        else {\n            carry = 0;\n            sum += tmpSum;\n        }\n    }\n    return sum;\n}\n/**\n * @param {?} num\n * @param {?} b\n * @return {?}\n */\nfunction numberTimesBigInt(num, b) {\n    var /** @type {?} */ product = '';\n    var /** @type {?} */ bToThePower = b;\n    for (; num !== 0; num = num >>> 1) {\n        if (num & 1)\n            product = addBigInt(product, bToThePower);\n        bToThePower = addBigInt(bToThePower, bToThePower);\n    }\n    return product;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar Serializer = (function () {\n    function Serializer() {\n    }\n    /**\n     * @abstract\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Serializer.prototype.write = function (messages, locale) { };\n    /**\n     * @abstract\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Serializer.prototype.load = function (content, url) { };\n    /**\n     * @abstract\n     * @param {?} message\n     * @return {?}\n     */\n    Serializer.prototype.digest = function (message) { };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Serializer.prototype.createNameMapper = function (message) { return null; };\n    return Serializer;\n}());\n/**\n * A simple mapper that take a function to transform an internal name to a public name\n */\nvar SimplePlaceholderMapper = (function (_super) {\n    __extends(SimplePlaceholderMapper, _super);\n    /**\n     * @param {?} message\n     * @param {?} mapName\n     */\n    function SimplePlaceholderMapper(message, mapName) {\n        var _this = _super.call(this) || this;\n        _this.mapName = mapName;\n        _this.internalToPublic = {};\n        _this.publicToNextId = {};\n        _this.publicToInternal = {};\n        message.nodes.forEach(function (node) { return node.visit(_this); });\n        return _this;\n    }\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toPublicName = function (internalName) {\n        return this.internalToPublic.hasOwnProperty(internalName) ?\n            this.internalToPublic[internalName] :\n            null;\n    };\n    /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toInternalName = function (publicName) {\n        return this.publicToInternal.hasOwnProperty(publicName) ? this.publicToInternal[publicName] :\n            null;\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitText = function (text, context) { return null; };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitTagPlaceholder = function (ph, context) {\n        this.visitPlaceholderName(ph.startName);\n        _super.prototype.visitTagPlaceholder.call(this, ph, context);\n        this.visitPlaceholderName(ph.closeName);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholder = function (ph, context) { this.visitPlaceholderName(ph.name); };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitIcuPlaceholder = function (ph, context) {\n        this.visitPlaceholderName(ph.name);\n    };\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholderName = function (internalName) {\n        if (!internalName || this.internalToPublic.hasOwnProperty(internalName)) {\n            return;\n        }\n        var /** @type {?} */ publicName = this.mapName(internalName);\n        if (this.publicToInternal.hasOwnProperty(publicName)) {\n            // Create a new XMB when it has already been used\n            var /** @type {?} */ nextId = this.publicToNextId[publicName];\n            this.publicToNextId[publicName] = nextId + 1;\n            publicName = publicName + \"_\" + nextId;\n        }\n        else {\n            this.publicToNextId[publicName] = 1;\n        }\n        this.internalToPublic[internalName] = publicName;\n        this.publicToInternal[publicName] = internalName;\n    };\n    return SimplePlaceholderMapper;\n}(RecurseVisitor));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _Visitor$1 = (function () {\n    function _Visitor$1() {\n    }\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    _Visitor$1.prototype.visitTag = function (tag) {\n        var _this = this;\n        var /** @type {?} */ strAttrs = this._serializeAttributes(tag.attrs);\n        if (tag.children.length == 0) {\n            return \"<\" + tag.name + strAttrs + \"/>\";\n        }\n        var /** @type {?} */ strChildren = tag.children.map(function (node) { return node.visit(_this); });\n        return \"<\" + tag.name + strAttrs + \">\" + strChildren.join('') + \"</\" + tag.name + \">\";\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    _Visitor$1.prototype.visitText = function (text) { return text.value; };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    _Visitor$1.prototype.visitDeclaration = function (decl) {\n        return \"<?xml\" + this._serializeAttributes(decl.attrs) + \" ?>\";\n    };\n    /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    _Visitor$1.prototype._serializeAttributes = function (attrs) {\n        var /** @type {?} */ strAttrs = Object.keys(attrs).map(function (name) { return name + \"=\\\"\" + attrs[name] + \"\\\"\"; }).join(' ');\n        return strAttrs.length > 0 ? ' ' + strAttrs : '';\n    };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    _Visitor$1.prototype.visitDoctype = function (doctype) {\n        return \"<!DOCTYPE \" + doctype.rootTag + \" [\\n\" + doctype.dtd + \"\\n]>\";\n    };\n    return _Visitor$1;\n}());\nvar _visitor = new _Visitor$1();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serialize(nodes) {\n    return nodes.map(function (node) { return node.visit(_visitor); }).join('');\n}\nvar Declaration = (function () {\n    /**\n     * @param {?} unescapedAttrs\n     */\n    function Declaration(unescapedAttrs) {\n        var _this = this;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Declaration.prototype.visit = function (visitor) { return visitor.visitDeclaration(this); };\n    return Declaration;\n}());\nvar Doctype = (function () {\n    /**\n     * @param {?} rootTag\n     * @param {?} dtd\n     */\n    function Doctype(rootTag, dtd) {\n        this.rootTag = rootTag;\n        this.dtd = dtd;\n    }\n    \n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Doctype.prototype.visit = function (visitor) { return visitor.visitDoctype(this); };\n    return Doctype;\n}());\nvar Tag = (function () {\n    /**\n     * @param {?} name\n     * @param {?=} unescapedAttrs\n     * @param {?=} children\n     */\n    function Tag(name, unescapedAttrs, children) {\n        if (unescapedAttrs === void 0) { unescapedAttrs = {}; }\n        if (children === void 0) { children = []; }\n        var _this = this;\n        this.name = name;\n        this.children = children;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Tag.prototype.visit = function (visitor) { return visitor.visitTag(this); };\n    return Tag;\n}());\nvar Text$2 = (function () {\n    /**\n     * @param {?} unescapedValue\n     */\n    function Text$2(unescapedValue) {\n        this.value = _escapeXml(unescapedValue);\n    }\n    \n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Text$2.prototype.visit = function (visitor) { return visitor.visitText(this); };\n    return Text$2;\n}());\nvar CR = (function (_super) {\n    __extends(CR, _super);\n    /**\n     * @param {?=} ws\n     */\n    function CR(ws) {\n        if (ws === void 0) { ws = 0; }\n        return _super.call(this, \"\\n\" + new Array(ws + 1).join(' ')) || this;\n    }\n    return CR;\n}(Text$2));\nvar _ESCAPED_CHARS = [\n    [/&/g, '&amp;'],\n    [/\"/g, '&quot;'],\n    [/'/g, '&apos;'],\n    [/</g, '&lt;'],\n    [/>/g, '&gt;'],\n];\n/**\n * @param {?} text\n * @return {?}\n */\nfunction _escapeXml(text) {\n    return _ESCAPED_CHARS.reduce(function (text, entry) { return text.replace(entry[0], entry[1]); }, text);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION = '1.2';\nvar _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG = 'en';\nvar _PLACEHOLDER_TAG = 'x';\nvar _FILE_TAG = 'file';\nvar _SOURCE_TAG = 'source';\nvar _TARGET_TAG = 'target';\nvar _UNIT_TAG = 'trans-unit';\nvar _CONTEXT_GROUP_TAG = 'context-group';\nvar _CONTEXT_TAG = 'context';\nvar Xliff = (function (_super) {\n    __extends(Xliff, _super);\n    function Xliff() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff.prototype.write = function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor();\n        var /** @type {?} */ transUnits = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ contextTags = [];\n            message.sources.forEach(function (source) {\n                var /** @type {?} */ contextGroupTag = new Tag(_CONTEXT_GROUP_TAG, { purpose: 'location' });\n                contextGroupTag.children.push(new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'sourcefile' }, [new Text$2(source.filePath)]), new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'linenumber' }, [new Text$2(\"\" + source.startLine)]), new CR(8));\n                contextTags.push(new CR(8), contextGroupTag);\n            });\n            var /** @type {?} */ transUnit = new Tag(_UNIT_TAG, { id: message.id, datatype: 'html' });\n            (_a = transUnit.children).push.apply(_a, [new CR(8), new Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes)), new CR(8), new Tag(_TARGET_TAG)].concat(contextTags));\n            if (message.description) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'description' }, [new Text$2(message.description)]));\n            }\n            if (message.meaning) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'meaning' }, [new Text$2(message.meaning)]));\n            }\n            transUnit.children.push(new CR(6));\n            transUnits.push(new CR(6), transUnit);\n            var _a;\n        });\n        var /** @type {?} */ body = new Tag('body', {}, transUnits.concat([new CR(4)]));\n        var /** @type {?} */ file = new Tag('file', {\n            'source-language': locale || _DEFAULT_SOURCE_LANG,\n            datatype: 'plaintext',\n            original: 'ng2.template',\n        }, [new CR(4), body, new CR(2)]);\n        var /** @type {?} */ xliff = new Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff.prototype.load = function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliffParser = new XliffParser();\n        var _a = xliffParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff.prototype.digest = function (message) { return digest(message); };\n    return Xliff;\n}(Serializer));\nvar _WriteVisitor = (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var /** @type {?} */ ctype = getCtypeForTag(ph.tag);\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype });\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.closeName, ctype: ctype });\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar XliffParser = (function () {\n    function XliffParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    XliffParser.prototype.parse = function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitElement = function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG:\n                this._unitMlString = ((null));\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG:\n                // ignore source message\n                break;\n            case _TARGET_TAG:\n                var /** @type {?} */ innerTextStart = ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _FILE_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'target-language'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                visitAll(this, element.children, null);\n                break;\n            default:\n                // TODO(vicb): assert file structure, xliff version\n                // For now only recurse on unhandled nodes\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitText = function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansion = function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansionCase = function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XliffParser.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XliffParser;\n}());\nvar XmlToI18n = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'id'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"id\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getCtypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n            return 'lb';\n        case 'img':\n            return 'image';\n        default:\n            return \"x-\" + tag;\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION$1 = '2.0';\nvar _XMLNS$1 = 'urn:oasis:names:tc:xliff:document:2.0';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG$1 = 'en';\nvar _PLACEHOLDER_TAG$1 = 'ph';\nvar _PLACEHOLDER_SPANNING_TAG = 'pc';\nvar _XLIFF_TAG = 'xliff';\nvar _SOURCE_TAG$1 = 'source';\nvar _TARGET_TAG$1 = 'target';\nvar _UNIT_TAG$1 = 'unit';\nvar Xliff2 = (function (_super) {\n    __extends(Xliff2, _super);\n    function Xliff2() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff2.prototype.write = function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor$1();\n        var /** @type {?} */ units = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ unit = new Tag(_UNIT_TAG$1, { id: message.id });\n            var /** @type {?} */ notes = new Tag('notes');\n            if (message.description || message.meaning) {\n                if (message.description) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'description' }, [new Text$2(message.description)]));\n                }\n                if (message.meaning) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'meaning' }, [new Text$2(message.meaning)]));\n                }\n            }\n            message.sources.forEach(function (source) {\n                notes.children.push(new CR(8), new Tag('note', { category: 'location' }, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            notes.children.push(new CR(6));\n            unit.children.push(new CR(6), notes);\n            var /** @type {?} */ segment = new Tag('segment');\n            segment.children.push(new CR(8), new Tag(_SOURCE_TAG$1, {}, visitor.serialize(message.nodes)), new CR(6));\n            unit.children.push(new CR(6), segment, new CR(4));\n            units.push(new CR(4), unit);\n        });\n        var /** @type {?} */ file = new Tag('file', { 'original': 'ng.template', id: 'ngi18n' }, units.concat([new CR(2)]));\n        var /** @type {?} */ xliff = new Tag(_XLIFF_TAG, { version: _VERSION$1, xmlns: _XMLNS$1, srcLang: locale || _DEFAULT_SOURCE_LANG$1 }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2.prototype.load = function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliff2Parser = new Xliff2Parser();\n        var _a = xliff2Parser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$1();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff2 parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2.prototype.digest = function (message) { return decimalDigest(message); };\n    return Xliff2;\n}(Serializer));\nvar _WriteVisitor$1 = (function () {\n    function _WriteVisitor$1() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitText = function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ type = getTypeForTag(ph.tag);\n        if (ph.isVoid) {\n            var /** @type {?} */ tagPh = new Tag(_PLACEHOLDER_TAG$1, {\n                id: (this._nextPlaceholderId++).toString(),\n                equiv: ph.startName,\n                type: type,\n                disp: \"<\" + ph.tag + \"/>\",\n            });\n            return [tagPh];\n        }\n        var /** @type {?} */ tagPc = new Tag(_PLACEHOLDER_SPANNING_TAG, {\n            id: (this._nextPlaceholderId++).toString(),\n            equivStart: ph.startName,\n            equivEnd: ph.closeName,\n            type: type,\n            dispStart: \"<\" + ph.tag + \">\",\n            dispEnd: \"</\" + ph.tag + \">\",\n        });\n        var /** @type {?} */ nodes = [].concat.apply([], ph.children.map(function (node) { return node.visit(_this); }));\n        if (nodes.length) {\n            nodes.forEach(function (node) { return tagPc.children.push(node); });\n        }\n        else {\n            tagPc.children.push(new Text$2(''));\n        }\n        return [tagPc];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG$1, {\n                id: (this._nextPlaceholderId++).toString(),\n                equiv: ph.name,\n                disp: \"{{\" + ph.value + \"}}\",\n            })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitIcuPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG$1, { id: (this._nextPlaceholderId++).toString() })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.serialize = function (nodes) {\n        var _this = this;\n        this._nextPlaceholderId = 0;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor$1;\n}());\nvar Xliff2Parser = (function () {\n    function Xliff2Parser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2Parser.prototype.parse = function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitElement = function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG$1:\n                this._unitMlString = null;\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG$1 + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG$1:\n                // ignore source message\n                break;\n            case _TARGET_TAG$1:\n                var /** @type {?} */ innerTextStart = ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _XLIFF_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'trgLang'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                var /** @type {?} */ versionAttr = element.attrs.find(function (attr) { return attr.name === 'version'; });\n                if (versionAttr) {\n                    var /** @type {?} */ version = versionAttr.value;\n                    if (version !== '2.0') {\n                        this._addError(element, \"The XLIFF file version \" + version + \" is not compatible with XLIFF 2.0 serializer\");\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                    }\n                }\n                break;\n            default:\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitText = function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansion = function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansionCase = function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2Parser.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return Xliff2Parser;\n}());\nvar XmlToI18n$1 = (function () {\n    function XmlToI18n$1() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.convert = function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] : [].concat.apply([], visitAll(this, xmlIcu.rootNodes));\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitText = function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitElement = function (el, context) {\n        var _this = this;\n        switch (el.name) {\n            case _PLACEHOLDER_TAG$1:\n                var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'equiv'; });\n                if (nameAttr) {\n                    return [new Placeholder('', nameAttr.value, el.sourceSpan)];\n                }\n                this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equiv\\\" attribute\");\n                break;\n            case _PLACEHOLDER_SPANNING_TAG:\n                var /** @type {?} */ startAttr = el.attrs.find(function (attr) { return attr.name === 'equivStart'; });\n                var /** @type {?} */ endAttr = el.attrs.find(function (attr) { return attr.name === 'equivEnd'; });\n                if (!startAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivStart\\\" attribute\");\n                }\n                else if (!endAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivEnd\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ startId = startAttr.value;\n                    var /** @type {?} */ endId = endAttr.value;\n                    var /** @type {?} */ nodes = [];\n                    return nodes.concat.apply(nodes, [new Placeholder('', startId, el.sourceSpan)].concat(el.children.map(function (node) { return node.visit(_this, null); }), [new Placeholder('', endId, el.sourceSpan)]));\n                }\n                break;\n            default:\n                this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitExpansion = function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitExpansionCase = function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: [].concat.apply([], visitAll(this, icuCase.expression)),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n$1.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XmlToI18n$1;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getTypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n        case 'b':\n        case 'i':\n        case 'u':\n            return 'fmt';\n        case 'img':\n            return 'image';\n        case 'a':\n            return 'link';\n        default:\n            return 'other';\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _MESSAGES_TAG = 'messagebundle';\nvar _MESSAGE_TAG = 'msg';\nvar _PLACEHOLDER_TAG$2 = 'ph';\nvar _EXEMPLE_TAG = 'ex';\nvar _SOURCE_TAG$2 = 'source';\nvar _DOCTYPE = \"<!ELEMENT messagebundle (msg)*>\\n<!ATTLIST messagebundle class CDATA #IMPLIED>\\n\\n<!ELEMENT msg (#PCDATA|ph|source)*>\\n<!ATTLIST msg id CDATA #IMPLIED>\\n<!ATTLIST msg seq CDATA #IMPLIED>\\n<!ATTLIST msg name CDATA #IMPLIED>\\n<!ATTLIST msg desc CDATA #IMPLIED>\\n<!ATTLIST msg meaning CDATA #IMPLIED>\\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\\n<!ATTLIST msg xml:space (default|preserve) \\\"default\\\">\\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\\n\\n<!ELEMENT source (#PCDATA)>\\n\\n<!ELEMENT ph (#PCDATA|ex)*>\\n<!ATTLIST ph name CDATA #REQUIRED>\\n\\n<!ELEMENT ex (#PCDATA)>\";\nvar Xmb = (function (_super) {\n    __extends(Xmb, _super);\n    function Xmb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xmb.prototype.write = function (messages, locale) {\n        var /** @type {?} */ exampleVisitor = new ExampleVisitor();\n        var /** @type {?} */ visitor = new _Visitor$2();\n        var /** @type {?} */ rootNode = new Tag(_MESSAGES_TAG);\n        messages.forEach(function (message) {\n            var /** @type {?} */ attrs = { id: message.id };\n            if (message.description) {\n                attrs['desc'] = message.description;\n            }\n            if (message.meaning) {\n                attrs['meaning'] = message.meaning;\n            }\n            var /** @type {?} */ sourceTags = [];\n            message.sources.forEach(function (source) {\n                sourceTags.push(new Tag(_SOURCE_TAG$2, {}, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            rootNode.children.push(new CR(2), new Tag(_MESSAGE_TAG, attrs, sourceTags.concat(visitor.serialize(message.nodes))));\n        });\n        rootNode.children.push(new CR());\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }),\n            new CR(),\n            new Doctype(_MESSAGES_TAG, _DOCTYPE),\n            new CR(),\n            exampleVisitor.addDefaultExamples(rootNode),\n            new CR(),\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xmb.prototype.load = function (content, url) {\n        throw new Error('Unsupported');\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.digest = function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.createNameMapper = function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xmb;\n}(Serializer));\nvar _Visitor$2 = (function () {\n    function _Visitor$2() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitText = function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitTagPlaceholder = function (ph, context) {\n        var /** @type {?} */ startEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"<\" + ph.tag + \">\")]);\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.startName }, [startEx]);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        var /** @type {?} */ closeEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"</\" + ph.tag + \">\")]);\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.closeName }, [closeEx]);\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitIcuPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _Visitor$2.prototype.serialize = function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _Visitor$2;\n}());\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest$1(message) {\n    return decimalDigest(message);\n}\nvar ExampleVisitor = (function () {\n    function ExampleVisitor() {\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    ExampleVisitor.prototype.addDefaultExamples = function (node) {\n        node.visit(this);\n        return node;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitTag = function (tag) {\n        var _this = this;\n        if (tag.name === _PLACEHOLDER_TAG$2) {\n            if (!tag.children || tag.children.length == 0) {\n                var /** @type {?} */ exText = new Text$2(tag.attrs['name'] || '...');\n                tag.children = [new Tag(_EXEMPLE_TAG, {}, [exText])];\n            }\n        }\n        else if (tag.children) {\n            tag.children.forEach(function (node) { return node.visit(_this); });\n        }\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitText = function (text) { };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDeclaration = function (decl) { };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDoctype = function (doctype) { };\n    return ExampleVisitor;\n}());\n/**\n * @param {?} internalName\n * @return {?}\n */\nfunction toPublicName(internalName) {\n    return internalName.toUpperCase().replace(/[^A-Z0-9_]/g, '_');\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _TRANSLATIONS_TAG = 'translationbundle';\nvar _TRANSLATION_TAG = 'translation';\nvar _PLACEHOLDER_TAG$3 = 'ph';\nvar Xtb = (function (_super) {\n    __extends(Xtb, _super);\n    function Xtb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xtb.prototype.write = function (messages, locale) { throw new Error('Unsupported'); };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xtb.prototype.load = function (content, url) {\n        // xtb to xml nodes\n        var /** @type {?} */ xtbParser = new XtbParser();\n        var _a = xtbParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$2();\n        // Because we should be able to load xtb files that rely on features not supported by angular,\n        // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n        // converted\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var /** @type {?} */ valueFn = function () {\n                var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, errors = _a.errors;\n                if (errors.length) {\n                    throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n                }\n                return i18nNodes;\n            };\n            createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n        });\n        if (errors.length) {\n            throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.digest = function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.createNameMapper = function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xtb;\n}(Serializer));\n/**\n * @param {?} messages\n * @param {?} id\n * @param {?} valueFn\n * @return {?}\n */\nfunction createLazyProperty(messages, id, valueFn) {\n    Object.defineProperty(messages, id, {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n            var /** @type {?} */ value = valueFn();\n            Object.defineProperty(messages, id, { enumerable: true, value: value });\n            return value;\n        },\n        set: function (_) { throw new Error('Could not overwrite an XTB translation'); },\n    });\n}\nvar XtbParser = (function () {\n    function XtbParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    XtbParser.prototype.parse = function (xtb, url) {\n        this._bundleDepth = 0;\n        this._msgIdToHtml = {};\n        // We can not parse the ICU messages at this point as some messages might not originate\n        // from Angular that could not be lex'd.\n        var /** @type {?} */ xml = new XmlParser().parse(xtb, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitElement = function (element, context) {\n        switch (element.name) {\n            case _TRANSLATIONS_TAG:\n                this._bundleDepth++;\n                if (this._bundleDepth > 1) {\n                    this._addError(element, \"<\" + _TRANSLATIONS_TAG + \"> elements can not be nested\");\n                }\n                var /** @type {?} */ langAttr = element.attrs.find(function (attr) { return attr.name === 'lang'; });\n                if (langAttr) {\n                    this._locale = langAttr.value;\n                }\n                visitAll(this, element.children, null);\n                this._bundleDepth--;\n                break;\n            case _TRANSLATION_TAG:\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _TRANSLATION_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        var /** @type {?} */ innerTextStart = ((element.startSourceSpan)).end.offset;\n                        var /** @type {?} */ innerTextEnd = ((element.endSourceSpan)).start.offset;\n                        var /** @type {?} */ content = ((element.startSourceSpan)).start.file.content;\n                        var /** @type {?} */ innerText = content.slice(/** @type {?} */ ((innerTextStart)), /** @type {?} */ ((innerTextEnd)));\n                        this._msgIdToHtml[id] = innerText;\n                    }\n                }\n                break;\n            default:\n                this._addError(element, 'Unexpected tag');\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitText = function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansion = function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansionCase = function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XtbParser.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XtbParser;\n}());\nvar XmlToI18n$2 = (function () {\n    function XmlToI18n$2() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.convert = function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitText = function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitExpansion = function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitExpansionCase = function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitElement = function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG$3) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'name'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG$3 + \"> misses the \\\"name\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n$2.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n$2;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlParser = (function (_super) {\n    __extends(HtmlParser, _super);\n    function HtmlParser() {\n        return _super.call(this, getHtmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    HtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms, interpolationConfig);\n    };\n    return HtmlParser;\n}(Parser$1));\nHtmlParser.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nHtmlParser.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for translated messages\n */\nvar TranslationBundle = (function () {\n    /**\n     * @param {?=} _i18nNodesByMsgId\n     * @param {?=} locale\n     * @param {?=} digest\n     * @param {?=} mapperFactory\n     * @param {?=} missingTranslationStrategy\n     * @param {?=} console\n     */\n    function TranslationBundle(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        if (missingTranslationStrategy === void 0) { missingTranslationStrategy = _angular_core.MissingTranslationStrategy.Warning; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this.digest = digest;\n        this.mapperFactory = mapperFactory;\n        this._i18nToHtml = new I18nToHtmlVisitor(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console);\n    }\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    TranslationBundle.load = function (content, url, serializer, missingTranslationStrategy, console) {\n        var _a = serializer.load(content, url), locale = _a.locale, i18nNodesByMsgId = _a.i18nNodesByMsgId;\n        var /** @type {?} */ digestFn = function (m) { return serializer.digest(m); };\n        var /** @type {?} */ mapperFactory = function (m) { return ((serializer.createNameMapper(m))); };\n        return new TranslationBundle(i18nNodesByMsgId, locale, digestFn, mapperFactory, missingTranslationStrategy, console);\n    };\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.get = function (srcMsg) {\n        var /** @type {?} */ html = this._i18nToHtml.convert(srcMsg);\n        if (html.errors.length) {\n            throw new Error(html.errors.join('\\n'));\n        }\n        return html.nodes;\n    };\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.has = function (srcMsg) { return this.digest(srcMsg) in this._i18nNodesByMsgId; };\n    return TranslationBundle;\n}());\nvar I18nToHtmlVisitor = (function () {\n    /**\n     * @param {?=} _i18nNodesByMsgId\n     * @param {?=} _locale\n     * @param {?=} _digest\n     * @param {?=} _mapperFactory\n     * @param {?=} _missingTranslationStrategy\n     * @param {?=} _console\n     */\n    function I18nToHtmlVisitor(_i18nNodesByMsgId, _locale, _digest, _mapperFactory, _missingTranslationStrategy, _console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this._locale = _locale;\n        this._digest = _digest;\n        this._mapperFactory = _mapperFactory;\n        this._missingTranslationStrategy = _missingTranslationStrategy;\n        this._console = _console;\n        this._contextStack = [];\n        this._errors = [];\n    }\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.convert = function (srcMsg) {\n        this._contextStack.length = 0;\n        this._errors.length = 0;\n        // i18n to text\n        var /** @type {?} */ text = this._convertToText(srcMsg);\n        // text to html\n        var /** @type {?} */ url = srcMsg.nodes[0].sourceSpan.start.file.url;\n        var /** @type {?} */ html = new HtmlParser().parse(text, url, true);\n        return {\n            nodes: html.rootNodes,\n            errors: this._errors.concat(html.errors),\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitText = function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        return container.children.map(function (n) { return n.visit(_this); }).join('');\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // TODO(vicb): Once all format switch to using expression placeholders\n        // we should throw when the placeholder is not in the source message\n        var /** @type {?} */ exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n            this._srcMsg.placeholders[icu.expression] :\n            icu.expression;\n        return \"{\" + exp + \", \" + icu.type + \", \" + cases.join(' ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitPlaceholder = function (ph, context) {\n        var /** @type {?} */ phName = this._mapper(ph.name);\n        if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n            return this._srcMsg.placeholders[phName];\n        }\n        if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n            return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n        }\n        this._addError(ph, \"Unknown placeholder \\\"\" + ph.name + \"\\\"\");\n        return '';\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ tag = \"\" + ph.tag;\n        var /** @type {?} */ attrs = Object.keys(ph.attrs).map(function (name) { return name + \"=\\\"\" + ph.attrs[name] + \"\\\"\"; }).join(' ');\n        if (ph.isVoid) {\n            return \"<\" + tag + \" \" + attrs + \"/>\";\n        }\n        var /** @type {?} */ children = ph.children.map(function (c) { return c.visit(_this); }).join('');\n        return \"<\" + tag + \" \" + attrs + \">\" + children + \"</\" + tag + \">\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        // An ICU placeholder references the source message to be serialized\n        return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n    };\n    /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._convertToText = function (srcMsg) {\n        var _this = this;\n        var /** @type {?} */ id = this._digest(srcMsg);\n        var /** @type {?} */ mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n        var /** @type {?} */ nodes;\n        this._contextStack.push({ msg: this._srcMsg, mapper: this._mapper });\n        this._srcMsg = srcMsg;\n        if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n            // When there is a translation use its nodes as the source\n            // And create a mapper to convert serialized placeholder names to internal names\n            nodes = this._i18nNodesByMsgId[id];\n            this._mapper = function (name) { return mapper ? ((mapper.toInternalName(name))) : name; };\n        }\n        else {\n            // When no translation has been found\n            // - report an error / a warning / nothing,\n            // - use the nodes from the original message\n            // - placeholders are already internal and need no mapper\n            if (this._missingTranslationStrategy === _angular_core.MissingTranslationStrategy.Error) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._addError(srcMsg.nodes[0], \"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            else if (this._console &&\n                this._missingTranslationStrategy === _angular_core.MissingTranslationStrategy.Warning) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._console.warn(\"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            nodes = srcMsg.nodes;\n            this._mapper = function (name) { return name; };\n        }\n        var /** @type {?} */ text = nodes.map(function (node) { return node.visit(_this); }).join('');\n        var /** @type {?} */ context = ((this._contextStack.pop()));\n        this._srcMsg = context.msg;\n        this._mapper = context.mapper;\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._addError = function (el, msg) {\n        this._errors.push(new I18nError(el.sourceSpan, msg));\n    };\n    return I18nToHtmlVisitor;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar I18NHtmlParser = (function () {\n    /**\n     * @param {?} _htmlParser\n     * @param {?=} translations\n     * @param {?=} translationsFormat\n     * @param {?=} missingTranslation\n     * @param {?=} console\n     */\n    function I18NHtmlParser(_htmlParser, translations, translationsFormat, missingTranslation, console) {\n        if (missingTranslation === void 0) { missingTranslation = _angular_core.MissingTranslationStrategy.Warning; }\n        this._htmlParser = _htmlParser;\n        if (translations) {\n            var serializer = createSerializer(translationsFormat);\n            this._translationBundle =\n                TranslationBundle.load(translations, 'i18n', serializer, missingTranslation, console);\n        }\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    I18NHtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n        if (!this._translationBundle) {\n            // Do not enable i18n when no translation bundle is provided\n            return parseResult;\n        }\n        if (parseResult.errors.length) {\n            return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n        }\n        return mergeTranslations(parseResult.rootNodes, this._translationBundle, interpolationConfig, [], {});\n    };\n    return I18NHtmlParser;\n}());\n/**\n * @param {?=} format\n * @return {?}\n */\nfunction createSerializer(format) {\n    format = (format || 'xlf').toLowerCase();\n    switch (format) {\n        case 'xmb':\n            return new Xmb();\n        case 'xtb':\n            return new Xtb();\n        case 'xliff2':\n        case 'xlf2':\n            return new Xliff2();\n        case 'xliff':\n        case 'xlf':\n        default:\n            return new Xliff();\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CORE = assetUrl('core');\nvar Identifiers = (function () {\n    function Identifiers() {\n    }\n    return Identifiers;\n}());\nIdentifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n    name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n    moduleUrl: CORE,\n    runtime: _angular_core.ANALYZE_FOR_ENTRY_COMPONENTS\n};\nIdentifiers.ElementRef = { name: 'ElementRef', moduleUrl: CORE, runtime: _angular_core.ElementRef };\nIdentifiers.NgModuleRef = { name: 'NgModuleRef', moduleUrl: CORE, runtime: _angular_core.NgModuleRef };\nIdentifiers.ViewContainerRef = { name: 'ViewContainerRef', moduleUrl: CORE, runtime: _angular_core.ViewContainerRef };\nIdentifiers.ChangeDetectorRef = { name: 'ChangeDetectorRef', moduleUrl: CORE, runtime: _angular_core.ChangeDetectorRef };\nIdentifiers.QueryList = { name: 'QueryList', moduleUrl: CORE, runtime: _angular_core.QueryList };\nIdentifiers.TemplateRef = { name: 'TemplateRef', moduleUrl: CORE, runtime: _angular_core.TemplateRef };\nIdentifiers.CodegenComponentFactoryResolver = {\n    name: 'ɵCodegenComponentFactoryResolver',\n    moduleUrl: CORE,\n    runtime: _angular_core.ɵCodegenComponentFactoryResolver\n};\nIdentifiers.ComponentFactoryResolver = {\n    name: 'ComponentFactoryResolver',\n    moduleUrl: CORE,\n    runtime: _angular_core.ComponentFactoryResolver\n};\nIdentifiers.ComponentFactory = { name: 'ComponentFactory', moduleUrl: CORE, runtime: _angular_core.ComponentFactory };\nIdentifiers.ComponentRef = { name: 'ComponentRef', moduleUrl: CORE, runtime: _angular_core.ComponentRef };\nIdentifiers.NgModuleFactory = { name: 'NgModuleFactory', moduleUrl: CORE, runtime: _angular_core.NgModuleFactory };\nIdentifiers.createModuleFactory = {\n    name: 'ɵcmf',\n    moduleUrl: CORE,\n    runtime: _angular_core.ɵcmf,\n};\nIdentifiers.moduleDef = {\n    name: 'ɵmod',\n    moduleUrl: CORE,\n    runtime: _angular_core.ɵmod,\n};\nIdentifiers.moduleProviderDef = {\n    name: 'ɵmpd',\n    moduleUrl: CORE,\n    runtime: _angular_core.ɵmpd,\n};\nIdentifiers.RegisterModuleFactoryFn = {\n    name: 'ɵregisterModuleFactory',\n    moduleUrl: CORE,\n    runtime: _angular_core.ɵregisterModuleFactory,\n};\nIdentifiers.Injector = { name: 'Injector', moduleUrl: CORE, runtime: _angular_core.Injector };\nIdentifiers.ViewEncapsulation = { name: 'ViewEncapsulation', moduleUrl: CORE, runtime: _angular_core.ViewEncapsulation };\nIdentifiers.ChangeDetectionStrategy = {\n    name: 'ChangeDetectionStrategy',\n    moduleUrl: CORE,\n    runtime: _angular_core.ChangeDetectionStrategy\n};\nIdentifiers.SecurityContext = {\n    name: 'SecurityContext',\n    moduleUrl: CORE,\n    runtime: _angular_core.SecurityContext,\n};\nIdentifiers.LOCALE_ID = { name: 'LOCALE_ID', moduleUrl: CORE, runtime: _angular_core.LOCALE_ID };\nIdentifiers.TRANSLATIONS_FORMAT = { name: 'TRANSLATIONS_FORMAT', moduleUrl: CORE, runtime: _angular_core.TRANSLATIONS_FORMAT };\nIdentifiers.inlineInterpolate = { name: 'ɵinlineInterpolate', moduleUrl: CORE, runtime: _angular_core.ɵinlineInterpolate };\nIdentifiers.interpolate = { name: 'ɵinterpolate', moduleUrl: CORE, runtime: _angular_core.ɵinterpolate };\nIdentifiers.EMPTY_ARRAY = { name: 'ɵEMPTY_ARRAY', moduleUrl: CORE, runtime: _angular_core.ɵEMPTY_ARRAY };\nIdentifiers.EMPTY_MAP = { name: 'ɵEMPTY_MAP', moduleUrl: CORE, runtime: _angular_core.ɵEMPTY_MAP };\nIdentifiers.Renderer = { name: 'Renderer', moduleUrl: CORE, runtime: _angular_core.Renderer };\nIdentifiers.viewDef = { name: 'ɵvid', moduleUrl: CORE, runtime: _angular_core.ɵvid };\nIdentifiers.elementDef = { name: 'ɵeld', moduleUrl: CORE, runtime: _angular_core.ɵeld };\nIdentifiers.anchorDef = { name: 'ɵand', moduleUrl: CORE, runtime: _angular_core.ɵand };\nIdentifiers.textDef = { name: 'ɵted', moduleUrl: CORE, runtime: _angular_core.ɵted };\nIdentifiers.directiveDef = { name: 'ɵdid', moduleUrl: CORE, runtime: _angular_core.ɵdid };\nIdentifiers.providerDef = { name: 'ɵprd', moduleUrl: CORE, runtime: _angular_core.ɵprd };\nIdentifiers.queryDef = { name: 'ɵqud', moduleUrl: CORE, runtime: _angular_core.ɵqud };\nIdentifiers.pureArrayDef = { name: 'ɵpad', moduleUrl: CORE, runtime: _angular_core.ɵpad };\nIdentifiers.pureObjectDef = { name: 'ɵpod', moduleUrl: CORE, runtime: _angular_core.ɵpod };\nIdentifiers.purePipeDef = { name: 'ɵppd', moduleUrl: CORE, runtime: _angular_core.ɵppd };\nIdentifiers.pipeDef = { name: 'ɵpid', moduleUrl: CORE, runtime: _angular_core.ɵpid };\nIdentifiers.nodeValue = { name: 'ɵnov', moduleUrl: CORE, runtime: _angular_core.ɵnov };\nIdentifiers.ngContentDef = { name: 'ɵncd', moduleUrl: CORE, runtime: _angular_core.ɵncd };\nIdentifiers.unwrapValue = { name: 'ɵunv', moduleUrl: CORE, runtime: _angular_core.ɵunv };\nIdentifiers.createRendererType2 = { name: 'ɵcrt', moduleUrl: CORE, runtime: _angular_core.ɵcrt };\nIdentifiers.RendererType2 = {\n    name: 'RendererType2',\n    moduleUrl: CORE,\n    // type only\n    runtime: null\n};\nIdentifiers.ViewDefinition = {\n    name: 'ɵViewDefinition',\n    moduleUrl: CORE,\n    // type only\n    runtime: null\n};\nIdentifiers.createComponentFactory = { name: 'ɵccf', moduleUrl: CORE, runtime: _angular_core.ɵccf };\n/**\n * @param {?} pkg\n * @param {?=} path\n * @param {?=} type\n * @return {?}\n */\nfunction assetUrl(pkg, path, type) {\n    if (path === void 0) { path = null; }\n    if (type === void 0) { type = 'src'; }\n    if (path == null) {\n        return \"@angular/\" + pkg;\n    }\n    else {\n        return \"@angular/\" + pkg + \"/\" + type + \"/\" + path;\n    }\n}\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction resolveIdentifier(identifier) {\n    var /** @type {?} */ name = identifier.name;\n    return _angular_core.ɵreflector.resolveIdentifier(name, identifier.moduleUrl, null, identifier.runtime);\n}\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction createIdentifier(identifier) {\n    return { reference: resolveIdentifier(identifier) };\n}\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction identifierToken(identifier) {\n    return { identifier: identifier };\n}\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction createIdentifierToken(identifier) {\n    return identifierToken(createIdentifier(identifier));\n}\n/**\n * @param {?} enumType\n * @param {?} name\n * @return {?}\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// http://cldr.unicode.org/index/cldr-spec/plural-rules\nvar PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n/**\n * Expands special forms into elements.\n *\n * For example,\n *\n * ```\n * { messages.length, plural,\n *   =0 {zero}\n *   =1 {one}\n *   other {more than one}\n * }\n * ```\n *\n * will be expanded into\n *\n * ```\n * <ng-container [ngPlural]=\"messages.length\">\n *   <ng-template ngPluralCase=\"=0\">zero</ng-template>\n *   <ng-template ngPluralCase=\"=1\">one</ng-template>\n *   <ng-template ngPluralCase=\"other\">more than one</ng-template>\n * </ng-container>\n * ```\n * @param {?} nodes\n * @return {?}\n */\nfunction expandNodes(nodes) {\n    var /** @type {?} */ expander = new _Expander();\n    return new ExpansionResult(visitAll(expander, nodes), expander.isExpanded, expander.errors);\n}\nvar ExpansionResult = (function () {\n    /**\n     * @param {?} nodes\n     * @param {?} expanded\n     * @param {?} errors\n     */\n    function ExpansionResult(nodes, expanded, errors) {\n        this.nodes = nodes;\n        this.expanded = expanded;\n        this.errors = errors;\n    }\n    return ExpansionResult;\n}());\nvar ExpansionError = (function (_super) {\n    __extends(ExpansionError, _super);\n    /**\n     * @param {?} span\n     * @param {?} errorMsg\n     */\n    function ExpansionError(span, errorMsg) {\n        return _super.call(this, span, errorMsg) || this;\n    }\n    return ExpansionError;\n}(ParseError));\n/**\n * Expand expansion forms (plural, select) to directives\n *\n * \\@internal\n */\nvar _Expander = (function () {\n    function _Expander() {\n        this.isExpanded = false;\n        this.errors = [];\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitElement = function (element, context) {\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitAttribute = function (attribute, context) { return attribute; };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitText = function (text, context) { return text; };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitComment = function (comment, context) { return comment; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansion = function (icu, context) {\n        this.isExpanded = true;\n        return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n            _expandDefaultForm(icu, this.errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansionCase = function (icuCase, context) {\n        throw new Error('Should not be reached');\n    };\n    return _Expander;\n}());\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandPluralForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n            errors.push(new ExpansionError(c.valueSourceSpan, \"Plural cases should be \\\"=<number>\\\" or one of \" + PLURAL_CASES.join(\", \")));\n        }\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        return new Element(\"ng-template\", [new Attribute$1('ngPluralCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandDefaultForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        if (c.value === 'other') {\n            // other is the default case when no values match\n            return new Element(\"ng-template\", [new Attribute$1('ngSwitchDefault', '', c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n        }\n        return new Element(\"ng-template\", [new Attribute$1('ngSwitchCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ProviderError = (function (_super) {\n    __extends(ProviderError, _super);\n    /**\n     * @param {?} message\n     * @param {?} span\n     */\n    function ProviderError(message, span) {\n        return _super.call(this, span, message) || this;\n    }\n    return ProviderError;\n}(ParseError));\nvar ProviderViewContext = (function () {\n    /**\n     * @param {?} component\n     */\n    function ProviderViewContext(component) {\n        var _this = this;\n        this.component = component;\n        this.errors = [];\n        this.viewQueries = _getViewQueries(component);\n        this.viewProviders = new Map();\n        component.viewProviders.forEach(function (provider) {\n            if (_this.viewProviders.get(tokenReference(provider.token)) == null) {\n                _this.viewProviders.set(tokenReference(provider.token), true);\n            }\n        });\n    }\n    return ProviderViewContext;\n}());\nvar ProviderElementContext = (function () {\n    /**\n     * @param {?} viewContext\n     * @param {?} _parent\n     * @param {?} _isViewRoot\n     * @param {?} _directiveAsts\n     * @param {?} attrs\n     * @param {?} refs\n     * @param {?} isTemplate\n     * @param {?} contentQueryStartId\n     * @param {?} _sourceSpan\n     */\n    function ProviderElementContext(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, isTemplate, contentQueryStartId, _sourceSpan) {\n        var _this = this;\n        this.viewContext = viewContext;\n        this._parent = _parent;\n        this._isViewRoot = _isViewRoot;\n        this._directiveAsts = _directiveAsts;\n        this._sourceSpan = _sourceSpan;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._hasViewContainer = false;\n        this._queriedTokens = new Map();\n        this._attrs = {};\n        attrs.forEach(function (attrAst) { return _this._attrs[attrAst.name] = attrAst.value; });\n        var directivesMeta = _directiveAsts.map(function (directiveAst) { return directiveAst.directive; });\n        this._allProviders =\n            _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n        this._contentQueries = _getContentQueries(contentQueryStartId, directivesMeta);\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._addQueryReadsTo(provider.token, provider.token, _this._queriedTokens);\n        });\n        if (isTemplate) {\n            var templateRefId = createIdentifierToken(Identifiers.TemplateRef);\n            this._addQueryReadsTo(templateRefId, templateRefId, this._queriedTokens);\n        }\n        refs.forEach(function (refAst) {\n            var defaultQueryValue = refAst.value || createIdentifierToken(Identifiers.ElementRef);\n            _this._addQueryReadsTo({ value: refAst.name }, defaultQueryValue, _this._queriedTokens);\n        });\n        if (this._queriedTokens.get(resolveIdentifier(Identifiers.ViewContainerRef))) {\n            this._hasViewContainer = true;\n        }\n        // create the providers that we know are eager first\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            var eager = provider.eager || _this._queriedTokens.get(tokenReference(provider.token));\n            if (eager) {\n                _this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ProviderElementContext.prototype.afterElement = function () {\n        var _this = this;\n        // collect lazy providers\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n        });\n    };\n    Object.defineProperty(ProviderElementContext.prototype, \"transformProviders\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            // Note: Maps keep their insertion order.\n            var /** @type {?} */ lazyProviders = [];\n            var /** @type {?} */ eagerProviders = [];\n            this._transformedProviders.forEach(function (provider) {\n                if (provider.eager) {\n                    eagerProviders.push(provider);\n                }\n                else {\n                    lazyProviders.push(provider);\n                }\n            });\n            return lazyProviders.concat(eagerProviders);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedDirectiveAsts\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ sortedProviderTypes = this.transformProviders.map(function (provider) { return provider.token.identifier; });\n            var /** @type {?} */ sortedDirectives = this._directiveAsts.slice();\n            sortedDirectives.sort(function (dir1, dir2) { return sortedProviderTypes.indexOf(dir1.directive.type) -\n                sortedProviderTypes.indexOf(dir2.directive.type); });\n            return sortedDirectives;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedHasViewContainer\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._hasViewContainer; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"queryMatches\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ allMatches = [];\n            this._queriedTokens.forEach(function (matches) { allMatches.push.apply(allMatches, matches); });\n            return allMatches;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    ProviderElementContext.prototype._addQueryReadsTo = function (token, defaultValue, queryReadTokens) {\n        this._getQueriesFor(token).forEach(function (query) {\n            var /** @type {?} */ queryValue = query.meta.read || defaultValue;\n            var /** @type {?} */ tokenRef = tokenReference(queryValue);\n            var /** @type {?} */ queryMatches = queryReadTokens.get(tokenRef);\n            if (!queryMatches) {\n                queryMatches = [];\n                queryReadTokens.set(tokenRef, queryMatches);\n            }\n            queryMatches.push({ queryId: query.queryId, value: queryValue });\n        });\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getQueriesFor = function (token) {\n        var /** @type {?} */ result = [];\n        var /** @type {?} */ currentEl = this;\n        var /** @type {?} */ distance = 0;\n        var /** @type {?} */ queries;\n        while (currentEl !== null) {\n            queries = currentEl._contentQueries.get(tokenReference(token));\n            if (queries) {\n                result.push.apply(result, queries.filter(function (query) { return query.meta.descendants || distance <= 1; }));\n            }\n            if (currentEl._directiveAsts.length > 0) {\n                distance++;\n            }\n            currentEl = currentEl._parent;\n        }\n        queries = this.viewContext.viewQueries.get(tokenReference(token));\n        if (queries) {\n            result.push.apply(result, queries);\n        }\n        return result;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getOrCreateLocalProvider = function (requestingProviderType, token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider || ((requestingProviderType === ProviderAstType.Directive ||\n            requestingProviderType === ProviderAstType.PublicService) &&\n            resolvedProvider.providerType === ProviderAstType.PrivateService) ||\n            ((requestingProviderType === ProviderAstType.PrivateService ||\n                requestingProviderType === ProviderAstType.PublicService) &&\n                resolvedProvider.providerType === ProviderAstType.Builtin)) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this.viewContext.errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), this._sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = ((_this._getDependency(resolvedProvider.providerType, { token: provider.useExisting }, eager)));\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getLocalDependency = function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        if (dep.isAttribute) {\n            var /** @type {?} */ attrValue = this._attrs[((dep.token)).value];\n            return { isValue: true, value: attrValue == null ? null : attrValue };\n        }\n        if (dep.token != null) {\n            // access builtints\n            if ((requestingProviderType === ProviderAstType.Directive ||\n                requestingProviderType === ProviderAstType.Component)) {\n                if (tokenReference(dep.token) === resolveIdentifier(Identifiers.Renderer) ||\n                    tokenReference(dep.token) === resolveIdentifier(Identifiers.ElementRef) ||\n                    tokenReference(dep.token) === resolveIdentifier(Identifiers.ChangeDetectorRef) ||\n                    tokenReference(dep.token) === resolveIdentifier(Identifiers.TemplateRef)) {\n                    return dep;\n                }\n                if (tokenReference(dep.token) === resolveIdentifier(Identifiers.ViewContainerRef)) {\n                    this._hasViewContainer = true;\n                }\n            }\n            // access the injector\n            if (tokenReference(dep.token) === resolveIdentifier(Identifiers.Injector)) {\n                return dep;\n            }\n            // access providers\n            if (this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager) != null) {\n                return dep;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getDependency = function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ currElement = this;\n        var /** @type {?} */ currEager = eager;\n        var /** @type {?} */ result = null;\n        if (!dep.isSkipSelf) {\n            result = this._getLocalDependency(requestingProviderType, dep, eager);\n        }\n        if (dep.isSelf) {\n            if (!result && dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n        }\n        else {\n            // check parent elements\n            while (!result && currElement._parent) {\n                var /** @type {?} */ prevElement = currElement;\n                currElement = currElement._parent;\n                if (prevElement._isViewRoot) {\n                    currEager = false;\n                }\n                result = currElement._getLocalDependency(ProviderAstType.PublicService, dep, currEager);\n            }\n            // check @Host restriction\n            if (!result) {\n                if (!dep.isHost || this.viewContext.component.isHost ||\n                    this.viewContext.component.type.reference === tokenReference(/** @type {?} */ ((dep.token))) ||\n                    this.viewContext.viewProviders.get(tokenReference(/** @type {?} */ ((dep.token)))) != null) {\n                    result = dep;\n                }\n                else {\n                    result = dep.isOptional ? result = { isValue: true, value: null } : null;\n                }\n            }\n        }\n        if (!result) {\n            this.viewContext.errors.push(new ProviderError(\"No provider for \" + tokenName(/** @type {?} */ ((dep.token))), this._sourceSpan));\n        }\n        return result;\n    };\n    return ProviderElementContext;\n}());\nvar NgModuleProviderAnalyzer = (function () {\n    /**\n     * @param {?} ngModule\n     * @param {?} extraProviders\n     * @param {?} sourceSpan\n     */\n    function NgModuleProviderAnalyzer(ngModule, extraProviders, sourceSpan) {\n        var _this = this;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._errors = [];\n        this._allProviders = new Map();\n        ngModule.transitiveModule.modules.forEach(function (ngModuleType) {\n            var ngModuleProvider = { token: { identifier: ngModuleType }, useClass: ngModuleType };\n            _resolveProviders([ngModuleProvider], ProviderAstType.PublicService, true, sourceSpan, _this._errors, _this._allProviders);\n        });\n        _resolveProviders(ngModule.transitiveModule.providers.map(function (entry) { return entry.provider; }).concat(extraProviders), ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders);\n    }\n    /**\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype.parse = function () {\n        var _this = this;\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.token, provider.eager);\n        });\n        if (this._errors.length > 0) {\n            var /** @type {?} */ errorString = this._errors.join('\\n');\n            throw new Error(\"Provider parse errors:\\n\" + errorString);\n        }\n        // Note: Maps keep their insertion order.\n        var /** @type {?} */ lazyProviders = [];\n        var /** @type {?} */ eagerProviders = [];\n        this._transformedProviders.forEach(function (provider) {\n            if (provider.eager) {\n                eagerProviders.push(provider);\n            }\n            else {\n                lazyProviders.push(provider);\n            }\n        });\n        return lazyProviders.concat(eagerProviders);\n    };\n    /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider = function (token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this._errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), resolvedProvider.sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = _this._getDependency({ token: provider.useExisting }, eager, resolvedProvider.sourceSpan);\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getDependency = function (dep, eager, requestorSourceSpan) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ foundLocal = false;\n        if (!dep.isSkipSelf && dep.token != null) {\n            // access the injector\n            if (tokenReference(dep.token) === resolveIdentifier(Identifiers.Injector) ||\n                tokenReference(dep.token) === resolveIdentifier(Identifiers.ComponentFactoryResolver)) {\n                foundLocal = true;\n                // access providers\n            }\n            else if (this._getOrCreateLocalProvider(dep.token, eager) != null) {\n                foundLocal = true;\n            }\n        }\n        var /** @type {?} */ result = dep;\n        if (dep.isSelf && !foundLocal) {\n            if (dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n            else {\n                this._errors.push(new ProviderError(\"No provider for \" + tokenName(/** @type {?} */ ((dep.token))), requestorSourceSpan));\n            }\n        }\n        return result;\n    };\n    return NgModuleProviderAnalyzer;\n}());\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProvider(provider, _a) {\n    var useExisting = _a.useExisting, useValue = _a.useValue, deps = _a.deps;\n    return {\n        token: provider.token,\n        useClass: provider.useClass,\n        useExisting: useExisting,\n        useFactory: provider.useFactory,\n        useValue: useValue,\n        deps: deps,\n        multi: provider.multi\n    };\n}\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProviderAst(provider, _a) {\n    var eager = _a.eager, providers = _a.providers;\n    return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan);\n}\n/**\n * @param {?} directives\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @return {?}\n */\nfunction _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n    var /** @type {?} */ providersByToken = new Map();\n    directives.forEach(function (directive) {\n        var /** @type {?} */ dirProvider = { token: { identifier: directive.type }, useClass: directive.type };\n        _resolveProviders([dirProvider], directive.isComponent ? ProviderAstType.Component : ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken);\n    });\n    // Note: directives need to be able to overwrite providers of a component!\n    var /** @type {?} */ directivesWithComponentFirst = directives.filter(function (dir) { return dir.isComponent; }).concat(directives.filter(function (dir) { return !dir.isComponent; }));\n    directivesWithComponentFirst.forEach(function (directive) {\n        _resolveProviders(directive.providers, ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken);\n        _resolveProviders(directive.viewProviders, ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken);\n    });\n    return providersByToken;\n}\n/**\n * @param {?} providers\n * @param {?} providerType\n * @param {?} eager\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @param {?} targetProvidersByToken\n * @return {?}\n */\nfunction _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken) {\n    providers.forEach(function (provider) {\n        var /** @type {?} */ resolvedProvider = targetProvidersByToken.get(tokenReference(provider.token));\n        if (resolvedProvider != null && !!resolvedProvider.multiProvider !== !!provider.multi) {\n            targetErrors.push(new ProviderError(\"Mixing multi and non multi provider is not possible for token \" + tokenName(resolvedProvider.token), sourceSpan));\n        }\n        if (!resolvedProvider) {\n            var /** @type {?} */ lifecycleHooks = provider.token.identifier &&\n                ((provider.token.identifier)).lifecycleHooks ?\n                ((provider.token.identifier)).lifecycleHooks :\n                [];\n            var /** @type {?} */ isUseValue = !(provider.useClass || provider.useExisting || provider.useFactory);\n            resolvedProvider = new ProviderAst(provider.token, !!provider.multi, eager || isUseValue, [provider], providerType, lifecycleHooks, sourceSpan);\n            targetProvidersByToken.set(tokenReference(provider.token), resolvedProvider);\n        }\n        else {\n            if (!provider.multi) {\n                resolvedProvider.providers.length = 0;\n            }\n            resolvedProvider.providers.push(provider);\n        }\n    });\n}\n/**\n * @param {?} component\n * @return {?}\n */\nfunction _getViewQueries(component) {\n    // Note: queries start with id 1 so we can use the number in a Bloom filter!\n    var /** @type {?} */ viewQueryId = 1;\n    var /** @type {?} */ viewQueries = new Map();\n    if (component.viewQueries) {\n        component.viewQueries.forEach(function (query) { return _addQueryToTokenMap(viewQueries, { meta: query, queryId: viewQueryId++ }); });\n    }\n    return viewQueries;\n}\n/**\n * @param {?} contentQueryStartId\n * @param {?} directives\n * @return {?}\n */\nfunction _getContentQueries(contentQueryStartId, directives) {\n    var /** @type {?} */ contentQueryId = contentQueryStartId;\n    var /** @type {?} */ contentQueries = new Map();\n    directives.forEach(function (directive, directiveIndex) {\n        if (directive.queries) {\n            directive.queries.forEach(function (query) { return _addQueryToTokenMap(contentQueries, { meta: query, queryId: contentQueryId++ }); });\n        }\n    });\n    return contentQueries;\n}\n/**\n * @param {?} map\n * @param {?} query\n * @return {?}\n */\nfunction _addQueryToTokenMap(map, query) {\n    query.meta.selectors.forEach(function (token) {\n        var /** @type {?} */ entry = map.get(tokenReference(token));\n        if (!entry) {\n            entry = [];\n            map.set(tokenReference(token), entry);\n        }\n        entry.push(query);\n    });\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar ElementSchemaRegistry = (function () {\n    function ElementSchemaRegistry() {\n    }\n    /**\n     * @abstract\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.hasProperty = function (tagName, propName, schemaMetas) { };\n    /**\n     * @abstract\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.hasElement = function (tagName, schemaMetas) { };\n    /**\n     * @abstract\n     * @param {?} elementName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.securityContext = function (elementName, propName, isAttribute) { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.allKnownElementNames = function () { };\n    /**\n     * @abstract\n     * @param {?} propName\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.getMappedPropName = function (propName) { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.getDefaultComponentElementName = function () { };\n    /**\n     * @abstract\n     * @param {?} name\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.validateProperty = function (name) { };\n    /**\n     * @abstract\n     * @param {?} name\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.validateAttribute = function (name) { };\n    /**\n     * @abstract\n     * @param {?} propName\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = function (propName) { };\n    /**\n     * @abstract\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.normalizeAnimationStyleValue = function (camelCaseProp, userProvidedProp, val) { };\n    return ElementSchemaRegistry;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar StyleWithImports = (function () {\n    /**\n     * @param {?} style\n     * @param {?} styleUrls\n     */\n    function StyleWithImports(style$$1, styleUrls) {\n        this.style = style$$1;\n        this.styleUrls = styleUrls;\n    }\n    return StyleWithImports;\n}());\n/**\n * @param {?} url\n * @return {?}\n */\nfunction isStyleUrlResolvable(url) {\n    if (url == null || url.length === 0 || url[0] == '/')\n        return false;\n    var /** @type {?} */ schemeMatch = url.match(URL_WITH_SCHEMA_REGEXP);\n    return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n}\n/**\n * Rewrites stylesheets by resolving and removing the \\@import urls that\n * are either relative or don't have a `package:` scheme\n * @param {?} resolver\n * @param {?} baseUrl\n * @param {?} cssText\n * @return {?}\n */\nfunction extractStyleUrls(resolver, baseUrl, cssText) {\n    var /** @type {?} */ foundUrls = [];\n    var /** @type {?} */ modifiedCssText = cssText.replace(CSS_COMMENT_REGEXP, '').replace(CSS_IMPORT_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ url = m[1] || m[2];\n        if (!isStyleUrlResolvable(url)) {\n            // Do not attempt to resolve non-package absolute URLs with URI scheme\n            return m[0];\n        }\n        foundUrls.push(resolver.resolve(baseUrl, url));\n        return '';\n    });\n    return new StyleWithImports(modifiedCssText, foundUrls);\n}\nvar CSS_IMPORT_REGEXP = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\nvar CSS_COMMENT_REGEXP = /\\/\\*.+?\\*\\//g;\nvar URL_WITH_SCHEMA_REGEXP = /^([^:/?#]+):/;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PROPERTY_PARTS_SEPARATOR = '.';\nvar ATTRIBUTE_PREFIX = 'attr';\nvar CLASS_PREFIX = 'class';\nvar STYLE_PREFIX = 'style';\nvar ANIMATE_PROP_PREFIX = 'animate-';\nvar BoundPropertyType = {};\nBoundPropertyType.DEFAULT = 0;\nBoundPropertyType.LITERAL_ATTR = 1;\nBoundPropertyType.ANIMATION = 2;\nBoundPropertyType[BoundPropertyType.DEFAULT] = \"DEFAULT\";\nBoundPropertyType[BoundPropertyType.LITERAL_ATTR] = \"LITERAL_ATTR\";\nBoundPropertyType[BoundPropertyType.ANIMATION] = \"ANIMATION\";\n/**\n * Represents a parsed property.\n */\nvar BoundProperty = (function () {\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} type\n     * @param {?} sourceSpan\n     */\n    function BoundProperty(name, expression, type, sourceSpan) {\n        this.name = name;\n        this.expression = expression;\n        this.type = type;\n        this.sourceSpan = sourceSpan;\n    }\n    Object.defineProperty(BoundProperty.prototype, \"isLiteral\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.type === BoundPropertyType.LITERAL_ATTR; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BoundProperty.prototype, \"isAnimation\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.type === BoundPropertyType.ANIMATION; },\n        enumerable: true,\n        configurable: true\n    });\n    return BoundProperty;\n}());\n/**\n * Parses bindings in templates and in the directive host area.\n */\nvar BindingParser = (function () {\n    /**\n     * @param {?} _exprParser\n     * @param {?} _interpolationConfig\n     * @param {?} _schemaRegistry\n     * @param {?} pipes\n     * @param {?} _targetErrors\n     */\n    function BindingParser(_exprParser, _interpolationConfig, _schemaRegistry, pipes, _targetErrors) {\n        var _this = this;\n        this._exprParser = _exprParser;\n        this._interpolationConfig = _interpolationConfig;\n        this._schemaRegistry = _schemaRegistry;\n        this._targetErrors = _targetErrors;\n        this.pipesByName = new Map();\n        this._usedPipes = new Map();\n        pipes.forEach(function (pipe) { return _this.pipesByName.set(pipe.name, pipe); });\n    }\n    /**\n     * @return {?}\n     */\n    BindingParser.prototype.getUsedPipes = function () { return Array.from(this._usedPipes.values()); };\n    /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostPropertyAsts = function (dirMeta, elementSelector, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostProperties) {\n            var /** @type {?} */ boundProps_1 = [];\n            Object.keys(dirMeta.hostProperties).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostProperties[propName];\n                if (typeof expression === 'string') {\n                    _this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host property binding \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return boundProps_1.map(function (prop) { return _this.createElementPropertyAst(elementSelector, prop); });\n        }\n        return null;\n    };\n    /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostEventAsts = function (dirMeta, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostListeners) {\n            var /** @type {?} */ targetEventAsts_1 = [];\n            Object.keys(dirMeta.hostListeners).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostListeners[propName];\n                if (typeof expression === 'string') {\n                    _this.parseEvent(propName, expression, sourceSpan, [], targetEventAsts_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host listener \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return targetEventAsts_1;\n        }\n        return null;\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.parseInterpolation = function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = ((this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig)));\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    BindingParser.prototype.parseInlineTemplateBinding = function (prefixToken, value, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n        var /** @type {?} */ bindings = this._parseTemplateBindings(prefixToken, value, sourceSpan);\n        for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n            var /** @type {?} */ binding = bindings[i];\n            if (binding.keyIsVar) {\n                targetVars.push(new VariableAst(binding.key, binding.name, sourceSpan));\n            }\n            else if (binding.expression) {\n                this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n            else {\n                targetMatchableAttrs.push([binding.key, '']);\n                this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseTemplateBindings = function (prefixToken, value, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ bindingsResult = this._exprParser.parseTemplateBindings(prefixToken, value, sourceInfo);\n            this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n            bindingsResult.templateBindings.forEach(function (binding) {\n                if (binding.expression) {\n                    _this._checkPipes(binding.expression, sourceSpan);\n                }\n            });\n            bindingsResult.warnings.forEach(function (warning) { _this._reportError(warning, sourceSpan, ParseErrorLevel.WARNING); });\n            return bindingsResult.templateBindings;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return [];\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parseLiteralAttr = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        if (_isAnimationLabel(name)) {\n            name = name.substring(1);\n            if (value) {\n                this._reportError(\"Assigning animation triggers via @prop=\\\"exp\\\" attributes with an expression is invalid.\" +\n                    \" Use property bindings (e.g. [@prop]=\\\"exp\\\") or use an attribute without a value (e.g. @prop) instead.\", sourceSpan, ParseErrorLevel.ERROR);\n            }\n            this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            targetProps.push(new BoundProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), BoundPropertyType.LITERAL_ATTR, sourceSpan));\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyBinding = function (name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ isAnimationProp = false;\n        if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n            isAnimationProp = true;\n            name = name.substring(ANIMATE_PROP_PREFIX.length);\n        }\n        else if (_isAnimationLabel(name)) {\n            isAnimationProp = true;\n            name = name.substring(1);\n        }\n        if (isAnimationProp) {\n            this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyInterpolation = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ expr = this.parseInterpolation(value, sourceSpan);\n        if (expr) {\n            this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parsePropertyAst = function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.DEFAULT, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimation = function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n        // This will occur when a @trigger is not paired with an expression.\n        // For animations it is valid to not have an expression since */void\n        // states will be applied by angular when the element is attached/detached\n        var /** @type {?} */ ast = this._parseBinding(expression || 'null', false, sourceSpan);\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.ANIMATION, sourceSpan));\n    };\n    /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseBinding = function (value, isHostBinding, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = isHostBinding ?\n                this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n                this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    BindingParser.prototype.createElementPropertyAst = function (elementSelector, boundProp) {\n        if (boundProp.isAnimation) {\n            return new BoundElementPropertyAst(boundProp.name, PropertyBindingType.Animation, _angular_core.SecurityContext.NONE, boundProp.expression, null, boundProp.sourceSpan);\n        }\n        var /** @type {?} */ unit = null;\n        var /** @type {?} */ bindingType = ((undefined));\n        var /** @type {?} */ boundPropertyName = null;\n        var /** @type {?} */ parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n        var /** @type {?} */ securityContexts = ((undefined));\n        // Check check for special cases (prefix style, attr, class)\n        if (parts.length > 1) {\n            if (parts[0] == ATTRIBUTE_PREFIX) {\n                boundPropertyName = parts[1];\n                this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n                securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n                var /** @type {?} */ nsSeparatorIdx = boundPropertyName.indexOf(':');\n                if (nsSeparatorIdx > -1) {\n                    var /** @type {?} */ ns = boundPropertyName.substring(0, nsSeparatorIdx);\n                    var /** @type {?} */ name = boundPropertyName.substring(nsSeparatorIdx + 1);\n                    boundPropertyName = mergeNsAndName(ns, name);\n                }\n                bindingType = PropertyBindingType.Attribute;\n            }\n            else if (parts[0] == CLASS_PREFIX) {\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Class;\n                securityContexts = [_angular_core.SecurityContext.NONE];\n            }\n            else if (parts[0] == STYLE_PREFIX) {\n                unit = parts.length > 2 ? parts[2] : null;\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Style;\n                securityContexts = [_angular_core.SecurityContext.STYLE];\n            }\n        }\n        // If not a special case, use the full property name\n        if (boundPropertyName === null) {\n            boundPropertyName = this._schemaRegistry.getMappedPropName(boundProp.name);\n            securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n            bindingType = PropertyBindingType.Property;\n            this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n        }\n        return new BoundElementPropertyAst(boundPropertyName, bindingType, securityContexts[0], boundProp.expression, unit, boundProp.sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype.parseEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        if (_isAnimationLabel(name)) {\n            name = name.substr(1);\n            this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n        }\n        else {\n            this._parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimationEvent = function (name, expression, sourceSpan, targetEvents) {\n        var /** @type {?} */ matches = splitAtPeriod(name, [name, '']);\n        var /** @type {?} */ eventName = matches[0];\n        var /** @type {?} */ phase = matches[1].toLowerCase();\n        if (phase) {\n            switch (phase) {\n                case 'start':\n                case 'done':\n                    var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n                    targetEvents.push(new BoundEventAst(eventName, null, phase, ast, sourceSpan));\n                    break;\n                default:\n                    this._reportError(\"The provided animation output phase value \\\"\" + phase + \"\\\" for \\\"@\" + eventName + \"\\\" is not supported (use start or done)\", sourceSpan);\n                    break;\n            }\n        }\n        else {\n            this._reportError(\"The animation trigger output event (@\" + eventName + \") is missing its phase value name (start or done are currently supported)\", sourceSpan);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        // long format: 'target: eventName'\n        var _a = splitAtColon(name, [/** @type {?} */ ((null)), name]), target = _a[0], eventName = _a[1];\n        var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n        targetMatchableAttrs.push([/** @type {?} */ ((name)), /** @type {?} */ ((ast.source))]);\n        targetEvents.push(new BoundEventAst(eventName, target, null, ast, sourceSpan));\n        // Don't detect directives for event names for now,\n        // so don't add the event name to the matchableAttrs\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseAction = function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n            if (ast) {\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            }\n            if (!ast || ast.ast instanceof EmptyExpr) {\n                this._reportError(\"Empty expressions are not allowed\", sourceSpan);\n                return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n            }\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    BindingParser.prototype._reportError = function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._reportExpressionParserErrors = function (errors, sourceSpan) {\n        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n            var error = errors_1[_i];\n            this._reportError(error.message, sourceSpan);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._checkPipes = function (ast, sourceSpan) {\n        var _this = this;\n        if (ast) {\n            var /** @type {?} */ collector = new PipeCollector();\n            ast.visit(collector);\n            collector.pipes.forEach(function (ast, pipeName) {\n                var /** @type {?} */ pipeMeta = _this.pipesByName.get(pipeName);\n                if (!pipeMeta) {\n                    _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", new ParseSourceSpan(sourceSpan.start.moveBy(ast.span.start), sourceSpan.start.moveBy(ast.span.end)));\n                }\n                else {\n                    _this._usedPipes.set(pipeName, pipeMeta);\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    BindingParser.prototype._validatePropertyOrAttributeName = function (propName, sourceSpan, isAttr) {\n        var /** @type {?} */ report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n            this._schemaRegistry.validateProperty(propName);\n        if (report.error) {\n            this._reportError(/** @type {?} */ ((report.msg)), sourceSpan, ParseErrorLevel.ERROR);\n        }\n    };\n    return BindingParser;\n}());\nvar PipeCollector = (function (_super) {\n    __extends(PipeCollector, _super);\n    function PipeCollector() {\n        var _this = _super.apply(this, arguments) || this;\n        _this.pipes = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    PipeCollector.prototype.visitPipe = function (ast, context) {\n        this.pipes.set(ast.name, ast);\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    return PipeCollector;\n}(RecursiveAstVisitor));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _isAnimationLabel(name) {\n    return name[0] == '@';\n}\n/**\n * @param {?} registry\n * @param {?} selector\n * @param {?} propName\n * @param {?} isAttribute\n * @return {?}\n */\nfunction calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n    var /** @type {?} */ ctxs = [];\n    CssSelector.parse(selector).forEach(function (selector) {\n        var /** @type {?} */ elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n        var /** @type {?} */ notElementNames = new Set(selector.notSelectors.filter(function (selector) { return selector.isElementSelector(); })\n            .map(function (selector) { return selector.element; }));\n        var /** @type {?} */ possibleElementNames = elementNames.filter(function (elementName) { return !notElementNames.has(elementName); });\n        ctxs.push.apply(ctxs, possibleElementNames.map(function (elementName) { return registry.securityContext(elementName, propName, isAttribute); }));\n    });\n    return ctxs.length === 0 ? [_angular_core.SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NG_CONTENT_SELECT_ATTR = 'select';\nvar LINK_ELEMENT = 'link';\nvar LINK_STYLE_REL_ATTR = 'rel';\nvar LINK_STYLE_HREF_ATTR = 'href';\nvar LINK_STYLE_REL_VALUE = 'stylesheet';\nvar STYLE_ELEMENT = 'style';\nvar SCRIPT_ELEMENT = 'script';\nvar NG_NON_BINDABLE_ATTR = 'ngNonBindable';\nvar NG_PROJECT_AS = 'ngProjectAs';\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction preparseElement(ast) {\n    var /** @type {?} */ selectAttr = ((null));\n    var /** @type {?} */ hrefAttr = ((null));\n    var /** @type {?} */ relAttr = ((null));\n    var /** @type {?} */ nonBindable = false;\n    var /** @type {?} */ projectAs = ((null));\n    ast.attrs.forEach(function (attr) {\n        var /** @type {?} */ lcAttrName = attr.name.toLowerCase();\n        if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n            selectAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n            hrefAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n            relAttr = attr.value;\n        }\n        else if (attr.name == NG_NON_BINDABLE_ATTR) {\n            nonBindable = true;\n        }\n        else if (attr.name == NG_PROJECT_AS) {\n            if (attr.value.length > 0) {\n                projectAs = attr.value;\n            }\n        }\n    });\n    selectAttr = normalizeNgContentSelect(selectAttr);\n    var /** @type {?} */ nodeName = ast.name.toLowerCase();\n    var /** @type {?} */ type = PreparsedElementType.OTHER;\n    if (isNgContent(nodeName)) {\n        type = PreparsedElementType.NG_CONTENT;\n    }\n    else if (nodeName == STYLE_ELEMENT) {\n        type = PreparsedElementType.STYLE;\n    }\n    else if (nodeName == SCRIPT_ELEMENT) {\n        type = PreparsedElementType.SCRIPT;\n    }\n    else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n        type = PreparsedElementType.STYLESHEET;\n    }\n    return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n}\nvar PreparsedElementType = {};\nPreparsedElementType.NG_CONTENT = 0;\nPreparsedElementType.STYLE = 1;\nPreparsedElementType.STYLESHEET = 2;\nPreparsedElementType.SCRIPT = 3;\nPreparsedElementType.OTHER = 4;\nPreparsedElementType[PreparsedElementType.NG_CONTENT] = \"NG_CONTENT\";\nPreparsedElementType[PreparsedElementType.STYLE] = \"STYLE\";\nPreparsedElementType[PreparsedElementType.STYLESHEET] = \"STYLESHEET\";\nPreparsedElementType[PreparsedElementType.SCRIPT] = \"SCRIPT\";\nPreparsedElementType[PreparsedElementType.OTHER] = \"OTHER\";\nvar PreparsedElement = (function () {\n    /**\n     * @param {?} type\n     * @param {?} selectAttr\n     * @param {?} hrefAttr\n     * @param {?} nonBindable\n     * @param {?} projectAs\n     */\n    function PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n        this.type = type;\n        this.selectAttr = selectAttr;\n        this.hrefAttr = hrefAttr;\n        this.nonBindable = nonBindable;\n        this.projectAs = projectAs;\n    }\n    return PreparsedElement;\n}());\n/**\n * @param {?} selectAttr\n * @return {?}\n */\nfunction normalizeNgContentSelect(selectAttr) {\n    if (selectAttr === null || selectAttr.length === 0) {\n        return '*';\n    }\n    return selectAttr;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n// Group 1 = \"bind-\"\nvar KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nvar KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nvar KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nvar KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nvar KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nvar KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nvar IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nvar IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nvar IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nvar IDENT_EVENT_IDX = 10;\n// deprecated in 4.x\nvar TEMPLATE_ELEMENT = 'template';\n// deprecated in 4.x\nvar TEMPLATE_ATTR = 'template';\nvar TEMPLATE_ATTR_PREFIX = '*';\nvar CLASS_ATTR = 'class';\nvar TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\nvar TEMPLATE_ELEMENT_DEPRECATION_WARNING = 'The <template> element is deprecated. Use <ng-template> instead';\nvar TEMPLATE_ATTR_DEPRECATION_WARNING = 'The template attribute is deprecated. Use an ng-template element instead.';\nvar warningCounts = {};\n/**\n * @param {?} warnings\n * @return {?}\n */\nfunction warnOnlyOnce(warnings) {\n    return function (error) {\n        if (warnings.indexOf(error.msg) !== -1) {\n            warningCounts[error.msg] = (warningCounts[error.msg] || 0) + 1;\n            return warningCounts[error.msg] <= 1;\n        }\n        return true;\n    };\n}\n/**\n * Provides an array of {\\@link TemplateAstVisitor}s which will be used to transform\n * parsed templates before compilation is invoked, allowing custom expression syntax\n * and other advanced transformations.\n *\n * This is currently an internal-only feature and not meant for general use.\n */\nvar TEMPLATE_TRANSFORMS = new _angular_core.InjectionToken('TemplateTransforms');\nvar TemplateParseError = (function (_super) {\n    __extends(TemplateParseError, _super);\n    /**\n     * @param {?} message\n     * @param {?} span\n     * @param {?} level\n     */\n    function TemplateParseError(message, span, level) {\n        return _super.call(this, span, message, level) || this;\n    }\n    return TemplateParseError;\n}(ParseError));\nvar TemplateParseResult = (function () {\n    /**\n     * @param {?=} templateAst\n     * @param {?=} usedPipes\n     * @param {?=} errors\n     */\n    function TemplateParseResult(templateAst, usedPipes, errors) {\n        this.templateAst = templateAst;\n        this.usedPipes = usedPipes;\n        this.errors = errors;\n    }\n    return TemplateParseResult;\n}());\nvar TemplateParser = (function () {\n    /**\n     * @param {?} _config\n     * @param {?} _exprParser\n     * @param {?} _schemaRegistry\n     * @param {?} _htmlParser\n     * @param {?} _console\n     * @param {?} transforms\n     */\n    function TemplateParser(_config, _exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n        this._config = _config;\n        this._exprParser = _exprParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._htmlParser = _htmlParser;\n        this._console = _console;\n        this.transforms = transforms;\n    }\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @return {?}\n     */\n    TemplateParser.prototype.parse = function (component, template, directives, pipes, schemas, templateUrl) {\n        var /** @type {?} */ result = this.tryParse(component, template, directives, pipes, schemas, templateUrl);\n        var /** @type {?} */ warnings = ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.WARNING; })\n            .filter(warnOnlyOnce([TEMPLATE_ATTR_DEPRECATION_WARNING, TEMPLATE_ELEMENT_DEPRECATION_WARNING]));\n        var /** @type {?} */ errors = ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.ERROR; });\n        if (warnings.length > 0) {\n            this._console.warn(\"Template parse warnings:\\n\" + warnings.join('\\n'));\n        }\n        if (errors.length > 0) {\n            var /** @type {?} */ errorString = errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString);\n        }\n        return { template: /** @type {?} */ ((result.templateAst)), pipes: /** @type {?} */ ((result.usedPipes)) };\n    };\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParse = function (component, template, directives, pipes, schemas, templateUrl) {\n        return this.tryParseHtml(this.expandHtml(/** @type {?} */ ((this._htmlParser)).parse(template, templateUrl, true, this.getInterpolationConfig(component))), component, directives, pipes, schemas);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParseHtml = function (htmlAstWithErrors, component, directives, pipes, schemas) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        var /** @type {?} */ usedPipes = [];\n        if (htmlAstWithErrors.rootNodes.length > 0) {\n            var /** @type {?} */ uniqDirectives = removeSummaryDuplicates(directives);\n            var /** @type {?} */ uniqPipes = removeSummaryDuplicates(pipes);\n            var /** @type {?} */ providerViewContext = new ProviderViewContext(component);\n            var /** @type {?} */ interpolationConfig = ((undefined));\n            if (component.template && component.template.interpolation) {\n                interpolationConfig = {\n                    start: component.template.interpolation[0],\n                    end: component.template.interpolation[1]\n                };\n            }\n            var /** @type {?} */ bindingParser = new BindingParser(this._exprParser, /** @type {?} */ ((interpolationConfig)), this._schemaRegistry, uniqPipes, errors);\n            var /** @type {?} */ parseVisitor = new TemplateParseVisitor(this._config, providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n            result = visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n            errors.push.apply(errors, providerViewContext.errors);\n            usedPipes.push.apply(usedPipes, bindingParser.getUsedPipes());\n        }\n        else {\n            result = [];\n        }\n        this._assertNoReferenceDuplicationOnTemplate(result, errors);\n        if (errors.length > 0) {\n            return new TemplateParseResult(result, usedPipes, errors);\n        }\n        if (this.transforms) {\n            this.transforms.forEach(function (transform) { result = templateVisitAll(transform, result); });\n        }\n        return new TemplateParseResult(result, usedPipes, errors);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    TemplateParser.prototype.expandHtml = function (htmlAstWithErrors, forced) {\n        if (forced === void 0) { forced = false; }\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        if (errors.length == 0 || forced) {\n            // Transform ICU messages to angular directives\n            var /** @type {?} */ expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n            errors.push.apply(errors, expandedHtmlAst.errors);\n            htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n        }\n        return htmlAstWithErrors;\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    TemplateParser.prototype.getInterpolationConfig = function (component) {\n        if (component.template) {\n            return InterpolationConfig.fromArray(component.template.interpolation);\n        }\n        return undefined;\n    };\n    /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate = function (result, errors) {\n        var /** @type {?} */ existingReferences = [];\n        result.filter(function (element) { return !!((element)).references; })\n            .forEach(function (element) { return ((element)).references.forEach(function (reference) {\n            var /** @type {?} */ name = reference.name;\n            if (existingReferences.indexOf(name) < 0) {\n                existingReferences.push(name);\n            }\n            else {\n                var /** @type {?} */ error = new TemplateParseError(\"Reference \\\"#\" + name + \"\\\" is defined several times\", reference.sourceSpan, ParseErrorLevel.ERROR);\n                errors.push(error);\n            }\n        }); });\n    };\n    return TemplateParser;\n}());\nTemplateParser.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nTemplateParser.ctorParameters = function () { return [\n    { type: CompilerConfig, },\n    { type: Parser, },\n    { type: ElementSchemaRegistry, },\n    { type: I18NHtmlParser, },\n    { type: _angular_core.ɵConsole, },\n    { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [TEMPLATE_TRANSFORMS,] },] },\n]; };\nvar TemplateParseVisitor = (function () {\n    /**\n     * @param {?} config\n     * @param {?} providerViewContext\n     * @param {?} directives\n     * @param {?} _bindingParser\n     * @param {?} _schemaRegistry\n     * @param {?} _schemas\n     * @param {?} _targetErrors\n     */\n    function TemplateParseVisitor(config, providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n        var _this = this;\n        this.config = config;\n        this.providerViewContext = providerViewContext;\n        this._bindingParser = _bindingParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._schemas = _schemas;\n        this._targetErrors = _targetErrors;\n        this.selectorMatcher = new SelectorMatcher();\n        this.directivesIndex = new Map();\n        this.ngContentCount = 0;\n        // Note: queries start with id 1 so we can use the number in a Bloom filter!\n        this.contentQueryStartId = providerViewContext.component.viewQueries.length + 1;\n        directives.forEach(function (directive, index) {\n            var selector = CssSelector.parse(directive.selector);\n            _this.selectorMatcher.addSelectables(selector, directive);\n            _this.directivesIndex.set(directive, index);\n        });\n    }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansion = function (expansion, context) { return null; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return null; };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitText = function (text, parent) {\n        var /** @type {?} */ ngContentIndex = ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        var /** @type {?} */ expr = this._bindingParser.parseInterpolation(text.value, /** @type {?} */ ((text.sourceSpan)));\n        return expr ? new BoundTextAst(expr, ngContentIndex, /** @type {?} */ ((text.sourceSpan))) :\n            new TextAst(text.value, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitAttribute = function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitComment = function (comment, context) { return null; };\n    /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitElement = function (element, parent) {\n        var _this = this;\n        var /** @type {?} */ queryStartIndex = this.contentQueryStartId;\n        var /** @type {?} */ nodeName = element.name;\n        var /** @type {?} */ preparsedElement = preparseElement(element);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE) {\n            // Skipping <script> for security reasons\n            // Skipping <style> as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n            isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n            // Skipping stylesheets with either relative urls or package scheme as we already processed\n            // them in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ matchableAttrs = [];\n        var /** @type {?} */ elementOrDirectiveProps = [];\n        var /** @type {?} */ elementOrDirectiveRefs = [];\n        var /** @type {?} */ elementVars = [];\n        var /** @type {?} */ events = [];\n        var /** @type {?} */ templateElementOrDirectiveProps = [];\n        var /** @type {?} */ templateMatchableAttrs = [];\n        var /** @type {?} */ templateElementVars = [];\n        var /** @type {?} */ hasInlineTemplates = false;\n        var /** @type {?} */ attrs = [];\n        var /** @type {?} */ isTemplateElement = isTemplate(element, this.config.enableLegacyTemplate, function (m, span) { return _this._reportError(m, span, ParseErrorLevel.WARNING); });\n        element.attrs.forEach(function (attr) {\n            var /** @type {?} */ hasBinding = _this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n            var /** @type {?} */ templateBindingsSource;\n            var /** @type {?} */ prefixToken;\n            var /** @type {?} */ normalizedName = _this._normalizeAttributeName(attr.name);\n            if (_this.config.enableLegacyTemplate && normalizedName == TEMPLATE_ATTR) {\n                _this._reportError(TEMPLATE_ATTR_DEPRECATION_WARNING, attr.sourceSpan, ParseErrorLevel.WARNING);\n                templateBindingsSource = attr.value;\n            }\n            else if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n                templateBindingsSource = attr.value;\n                prefixToken = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length) + ':';\n            }\n            var /** @type {?} */ hasTemplateBinding = templateBindingsSource != null;\n            if (hasTemplateBinding) {\n                if (hasInlineTemplates) {\n                    _this._reportError(\"Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *\", attr.sourceSpan);\n                }\n                hasInlineTemplates = true;\n                _this._bindingParser.parseInlineTemplateBinding(/** @type {?} */ ((prefixToken)), /** @type {?} */ ((templateBindingsSource)), attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, templateElementVars);\n            }\n            if (!hasBinding && !hasTemplateBinding) {\n                // don't include the bindings as attributes as well in the AST\n                attrs.push(_this.visitAttribute(attr, null));\n                matchableAttrs.push([attr.name, attr.value]);\n            }\n        });\n        var /** @type {?} */ elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);\n        var _a = this._parseDirectives(this.selectorMatcher, elementCssSelector), directiveMetas = _a.directives, matchElement = _a.matchElement;\n        var /** @type {?} */ references = [];\n        var /** @type {?} */ boundDirectivePropNames = new Set();\n        var /** @type {?} */ directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, /** @type {?} */ ((element.sourceSpan)), references, boundDirectivePropNames);\n        var /** @type {?} */ elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, boundDirectivePropNames);\n        var /** @type {?} */ isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n        var /** @type {?} */ providerContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), isViewRoot, directiveAsts, attrs, references, isTemplateElement, queryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n        var /** @type {?} */ children = visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? ((parent.providerContext)) : providerContext));\n        providerContext.afterElement();\n        // Override the actual selector when the `ngProjectAs` attribute is provided\n        var /** @type {?} */ projectionSelector = preparsedElement.projectAs != null ?\n            CssSelector.parse(preparsedElement.projectAs)[0] :\n            elementCssSelector;\n        var /** @type {?} */ ngContentIndex = ((parent.findNgContentIndex(projectionSelector)));\n        var /** @type {?} */ parsedElement;\n        if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n            if (element.children && !element.children.every(_isEmptyTextNode)) {\n                this._reportError(\"<ng-content> element cannot have content.\", /** @type {?} */ ((element.sourceSpan)));\n            }\n            parsedElement = new NgContentAst(this.ngContentCount++, hasInlineTemplates ? ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else if (isTemplateElement) {\n            this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n            this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, /** @type {?} */ ((element.sourceSpan)));\n            parsedElement = new EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else {\n            this._assertElementExists(matchElement, element);\n            this._assertOnlyOneComponent(directiveAsts, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ ngContentIndex_1 = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n            parsedElement = new ElementAst(nodeName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex_1, element.sourceSpan, element.endSourceSpan || null);\n        }\n        if (hasInlineTemplates) {\n            var /** @type {?} */ templateQueryStartIndex = this.contentQueryStartId;\n            var /** @type {?} */ templateSelector = createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);\n            var templateDirectiveMetas = this._parseDirectives(this.selectorMatcher, templateSelector).directives;\n            var /** @type {?} */ templateBoundDirectivePropNames = new Set();\n            var /** @type {?} */ templateDirectiveAsts = this._createDirectiveAsts(true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [], /** @type {?} */ ((element.sourceSpan)), [], templateBoundDirectivePropNames);\n            var /** @type {?} */ templateElementProps = this._createElementPropertyAsts(element.name, templateElementOrDirectiveProps, templateBoundDirectivePropNames);\n            this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ templateProviderContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), parent.isTemplateElement, templateDirectiveAsts, [], [], true, templateQueryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n            templateProviderContext.afterElement();\n            parsedElement = new EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches, [parsedElement], ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        return parsedElement;\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAttr = function (isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n        var /** @type {?} */ name = this._normalizeAttributeName(attr.name);\n        var /** @type {?} */ value = attr.value;\n        var /** @type {?} */ srcSpan = attr.sourceSpan;\n        var /** @type {?} */ bindParts = name.match(BIND_NAME_REGEXP);\n        var /** @type {?} */ hasBinding = false;\n        if (bindParts !== null) {\n            hasBinding = true;\n            if (bindParts[KW_BIND_IDX] != null) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[KW_LET_IDX]) {\n                if (isTemplateElement) {\n                    var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                    this._parseVariable(identifier, value, srcSpan, targetVars);\n                }\n                else {\n                    this._reportError(\"\\\"let-\\\" is only supported on template elements.\", srcSpan);\n                }\n            }\n            else if (bindParts[KW_REF_IDX]) {\n                var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                this._parseReference(identifier, value, srcSpan, targetRefs);\n            }\n            else if (bindParts[KW_ON_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_BINDON_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_AT_IDX]) {\n                this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[IDENT_PROPERTY_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_EVENT_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n        }\n        else {\n            hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        if (!hasBinding) {\n            this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        return hasBinding;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._normalizeAttributeName = function (attrName) {\n        return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseVariable = function (identifier, value, sourceSpan, targetVars) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n        }\n        targetVars.push(new VariableAst(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseReference = function (identifier, value, sourceSpan, targetRefs) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n        }\n        targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAssignmentEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        this._bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\n    };\n    /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseDirectives = function (selectorMatcher, elementCssSelector) {\n        var _this = this;\n        // Need to sort the directives so that we get consistent results throughout,\n        // as selectorMatcher uses Maps inside.\n        // Also deduplicate directives as they might match more than one time!\n        var /** @type {?} */ directives = new Array(this.directivesIndex.size);\n        // Whether any directive selector matches on the element name\n        var /** @type {?} */ matchElement = false;\n        selectorMatcher.match(elementCssSelector, function (selector, directive) {\n            directives[((_this.directivesIndex.get(directive)))] = directive;\n            matchElement = matchElement || selector.hasElementSelector();\n        });\n        return {\n            directives: directives.filter(function (dir) { return !!dir; }),\n            matchElement: matchElement,\n        };\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectiveAsts = function (isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences, targetBoundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ matchedReferences = new Set();\n        var /** @type {?} */ component = ((null));\n        var /** @type {?} */ directiveAsts = directives.map(function (directive) {\n            var /** @type {?} */ sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, \"Directive \" + identifierName(directive.type));\n            if (directive.isComponent) {\n                component = directive;\n            }\n            var /** @type {?} */ directiveProperties = [];\n            var /** @type {?} */ hostProperties = ((_this._bindingParser.createDirectiveHostPropertyAsts(directive, elementName, sourceSpan)));\n            // Note: We need to check the host properties here as well,\n            // as we don't know the element name in the DirectiveWrapperCompiler yet.\n            hostProperties = _this._checkPropertiesInSchema(elementName, hostProperties);\n            var /** @type {?} */ hostEvents = ((_this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan)));\n            _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties, targetBoundDirectivePropNames);\n            elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n                if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n                    (directive.exportAs == elOrDirRef.value)) {\n                    targetReferences.push(new ReferenceAst(elOrDirRef.name, identifierToken(directive.type), elOrDirRef.sourceSpan));\n                    matchedReferences.add(elOrDirRef.name);\n                }\n            });\n            var /** @type {?} */ contentQueryStartId = _this.contentQueryStartId;\n            _this.contentQueryStartId += directive.queries.length;\n            return new DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, contentQueryStartId, sourceSpan);\n        });\n        elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n            if (elOrDirRef.value.length > 0) {\n                if (!matchedReferences.has(elOrDirRef.name)) {\n                    _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + elOrDirRef.value + \"\\\"\", elOrDirRef.sourceSpan);\n                }\n            }\n            else if (!component) {\n                var /** @type {?} */ refToken = ((null));\n                if (isTemplateElement) {\n                    refToken = createIdentifierToken(Identifiers.TemplateRef);\n                }\n                targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.sourceSpan));\n            }\n        });\n        return directiveAsts;\n    };\n    /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectivePropertyAsts = function (directiveProperties, boundProps, targetBoundDirectiveProps, targetBoundDirectivePropNames) {\n        if (directiveProperties) {\n            var /** @type {?} */ boundPropsByName_1 = new Map();\n            boundProps.forEach(function (boundProp) {\n                var /** @type {?} */ prevValue = boundPropsByName_1.get(boundProp.name);\n                if (!prevValue || prevValue.isLiteral) {\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    boundPropsByName_1.set(boundProp.name, boundProp);\n                }\n            });\n            Object.keys(directiveProperties).forEach(function (dirProp) {\n                var /** @type {?} */ elProp = directiveProperties[dirProp];\n                var /** @type {?} */ boundProp = boundPropsByName_1.get(elProp);\n                // Bindings are optional, so this binding only needs to be set up if an expression is given.\n                if (boundProp) {\n                    targetBoundDirectivePropNames.add(boundProp.name);\n                    if (!isEmptyExpression(boundProp.expression)) {\n                        targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createElementPropertyAsts = function (elementName, props, boundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ boundElementProps = [];\n        props.forEach(function (prop) {\n            if (!prop.isLiteral && !boundDirectivePropNames.has(prop.name)) {\n                boundElementProps.push(_this._bindingParser.createElementPropertyAst(elementName, prop));\n            }\n        });\n        return this._checkPropertiesInSchema(elementName, boundElementProps);\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectives = function (directives) {\n        return directives.filter(function (directive) { return directive.directive.isComponent; });\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectiveNames = function (directives) {\n        return this._findComponentDirectives(directives)\n            .map(function (directive) { return ((identifierName(directive.directive.type))); });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertOnlyOneComponent = function (directives, sourceSpan) {\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 1) {\n            this._reportError(\"More than one component matched on this element.\\n\" +\n                \"Make sure that only one component's selector can match a given element.\\n\" +\n                (\"Conflicting components: \" + componentTypeNames.join(',')), sourceSpan);\n        }\n    };\n    /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertElementExists = function (matchElement, element) {\n        var /** @type {?} */ elName = element.name.replace(/^:xhtml:/, '');\n        if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n            var /** @type {?} */ errorMsg = \"'\" + elName + \"' is not a known element:\\n\";\n            errorMsg +=\n                \"1. If '\" + elName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n            if (elName.indexOf('-') > -1) {\n                errorMsg +=\n                    \"2. If '\" + elName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n            }\n            else {\n                errorMsg +=\n                    \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n            }\n            this._reportError(errorMsg, /** @type {?} */ ((element.sourceSpan)));\n        }\n    };\n    /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = function (directives, elementProps, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 0) {\n            this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\n        }\n        elementProps.forEach(function (prop) {\n            _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", sourceSpan);\n        });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = function (directives, events) {\n        var _this = this;\n        var /** @type {?} */ allDirectiveEvents = new Set();\n        directives.forEach(function (directive) {\n            Object.keys(directive.directive.outputs).forEach(function (k) {\n                var /** @type {?} */ eventName = directive.directive.outputs[k];\n                allDirectiveEvents.add(eventName);\n            });\n        });\n        events.forEach(function (event) {\n            if (event.target != null || !allDirectiveEvents.has(event.name)) {\n                _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", event.sourceSpan);\n            }\n        });\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._checkPropertiesInSchema = function (elementName, boundProps) {\n        var _this = this;\n        // Note: We can't filter out empty expressions before this method,\n        // as we still want to validate them!\n        return boundProps.filter(function (boundProp) {\n            if (boundProp.type === PropertyBindingType.Property &&\n                !_this._schemaRegistry.hasProperty(elementName, boundProp.name, _this._schemas)) {\n                var /** @type {?} */ errorMsg = \"Can't bind to '\" + boundProp.name + \"' since it isn't a known property of '\" + elementName + \"'.\";\n                if (elementName.startsWith('ng-')) {\n                    errorMsg +=\n                        \"\\n1. If '\" + boundProp.name + \"' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.\" +\n                            \"\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                else if (elementName.indexOf('-') > -1) {\n                    errorMsg +=\n                        \"\\n1. If '\" + elementName + \"' is an Angular component and it has '\" + boundProp.name + \"' input, then verify that it is part of this module.\" +\n                            (\"\\n2. If '\" + elementName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\") +\n                            \"\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                _this._reportError(errorMsg, boundProp.sourceSpan);\n            }\n            return !isEmptyExpression(boundProp.value);\n        });\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._reportError = function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    return TemplateParseVisitor;\n}());\nvar NonBindableVisitor = (function () {\n    function NonBindableVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitElement = function (ast, parent) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE ||\n            preparsedElement.type === PreparsedElementType.STYLESHEET) {\n            // Skipping <script> for security reasons\n            // Skipping <style> and stylesheets as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ attrNameAndValues = ast.attrs.map(function (attr) { return [attr.name, attr.value]; });\n        var /** @type {?} */ selector = createElementCssSelector(ast.name, attrNameAndValues);\n        var /** @type {?} */ ngContentIndex = parent.findNgContentIndex(selector);\n        var /** @type {?} */ children = visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n        return new ElementAst(ast.name, visitAll(this, ast.attrs), [], [], [], [], [], false, [], children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitComment = function (comment, context) { return null; };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitAttribute = function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitText = function (text, parent) {\n        var /** @type {?} */ ngContentIndex = ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        return new TextAst(text.value, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansion = function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return expansionCase; };\n    return NonBindableVisitor;\n}());\nvar ElementOrDirectiveRef = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function ElementOrDirectiveRef(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    return ElementOrDirectiveRef;\n}());\n/**\n * @param {?} classAttrValue\n * @return {?}\n */\nfunction splitClasses(classAttrValue) {\n    return classAttrValue.trim().split(/\\s+/g);\n}\nvar ElementContext = (function () {\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} _ngContentIndexMatcher\n     * @param {?} _wildcardNgContentIndex\n     * @param {?} providerContext\n     */\n    function ElementContext(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n        this.isTemplateElement = isTemplateElement;\n        this._ngContentIndexMatcher = _ngContentIndexMatcher;\n        this._wildcardNgContentIndex = _wildcardNgContentIndex;\n        this.providerContext = providerContext;\n    }\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    ElementContext.create = function (isTemplateElement, directives, providerContext) {\n        var /** @type {?} */ matcher = new SelectorMatcher();\n        var /** @type {?} */ wildcardNgContentIndex = ((null));\n        var /** @type {?} */ component = directives.find(function (directive) { return directive.directive.isComponent; });\n        if (component) {\n            var /** @type {?} */ ngContentSelectors = ((component.directive.template)).ngContentSelectors;\n            for (var /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n                var /** @type {?} */ selector = ngContentSelectors[i];\n                if (selector === '*') {\n                    wildcardNgContentIndex = i;\n                }\n                else {\n                    matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n                }\n            }\n        }\n        return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ElementContext.prototype.findNgContentIndex = function (selector) {\n        var /** @type {?} */ ngContentIndices = [];\n        this._ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\n        ngContentIndices.sort();\n        if (this._wildcardNgContentIndex != null) {\n            ngContentIndices.push(this._wildcardNgContentIndex);\n        }\n        return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n    };\n    return ElementContext;\n}());\n/**\n * @param {?} elementName\n * @param {?} attributes\n * @return {?}\n */\nfunction createElementCssSelector(elementName, attributes) {\n    var /** @type {?} */ cssSelector = new CssSelector();\n    var /** @type {?} */ elNameNoNs = splitNsName(elementName)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (var /** @type {?} */ i = 0; i < attributes.length; i++) {\n        var /** @type {?} */ attrName = attributes[i][0];\n        var /** @type {?} */ attrNameNoNs = splitNsName(attrName)[1];\n        var /** @type {?} */ attrValue = attributes[i][1];\n        cssSelector.addAttribute(attrNameNoNs, attrValue);\n        if (attrName.toLowerCase() == CLASS_ATTR) {\n            var /** @type {?} */ classes = splitClasses(attrValue);\n            classes.forEach(function (className) { return cssSelector.addClassName(className); });\n        }\n    }\n    return cssSelector;\n}\nvar EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nvar NON_BINDABLE_VISITOR = new NonBindableVisitor();\n/**\n * @param {?} node\n * @return {?}\n */\nfunction _isEmptyTextNode(node) {\n    return node instanceof Text && node.value.trim().length == 0;\n}\n/**\n * @template T\n * @param {?} items\n * @return {?}\n */\nfunction removeSummaryDuplicates(items) {\n    var /** @type {?} */ map = new Map();\n    items.forEach(function (item) {\n        if (!map.get(item.type.reference)) {\n            map.set(item.type.reference, item);\n        }\n    });\n    return Array.from(map.values());\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction isEmptyExpression(ast) {\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    return ast instanceof EmptyExpr;\n}\n/**\n * @param {?} el\n * @param {?} enableLegacyTemplate\n * @param {?} reportDeprecation\n * @return {?}\n */\nfunction isTemplate(el, enableLegacyTemplate, reportDeprecation) {\n    if (isNgTemplate(el.name))\n        return true;\n    var /** @type {?} */ tagNoNs = splitNsName(el.name)[1];\n    // `<template>` is HTML and case insensitive\n    if (tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n        if (enableLegacyTemplate && tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n            reportDeprecation(TEMPLATE_ELEMENT_DEPRECATION_WARNING, /** @type {?} */ ((el.sourceSpan)));\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * An interface for retrieving documents by URL that the compiler uses\n * to load templates.\n */\nvar ResourceLoader = (function () {\n    function ResourceLoader() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    ResourceLoader.prototype.get = function (url) { return null; };\n    return ResourceLoader;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a {\\@link UrlResolver} with no package prefix.\n * @return {?}\n */\nfunction createUrlResolverWithoutPackagePrefix() {\n    return new UrlResolver();\n}\n/**\n * @return {?}\n */\nfunction createOfflineCompileUrlResolver() {\n    return new UrlResolver('.');\n}\n/**\n * A default provider for {\\@link PACKAGE_ROOT_URL} that maps to '/'.\n */\nvar DEFAULT_PACKAGE_URL_PROVIDER = {\n    provide: _angular_core.PACKAGE_ROOT_URL,\n    useValue: '/'\n};\n/**\n * Used by the {\\@link Compiler} when resolving HTML and CSS template URLs.\n *\n * This class can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n *\n * ## Example\n *\n * {\\@example compiler/ts/url_resolver/url_resolver.ts region='url_resolver'}\n *\n * \\@security When compiling templates at runtime, you must\n * ensure that the entire template comes from a trusted source.\n * Attacker-controlled data introduced by a template could expose your\n * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar UrlResolver = (function () {\n    /**\n     * @param {?=} _packagePrefix\n     */\n    function UrlResolver(_packagePrefix) {\n        if (_packagePrefix === void 0) { _packagePrefix = null; }\n        this._packagePrefix = _packagePrefix;\n    }\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    UrlResolver.prototype.resolve = function (baseUrl, url) {\n        var /** @type {?} */ resolvedUrl = url;\n        if (baseUrl != null && baseUrl.length > 0) {\n            resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n        }\n        var /** @type {?} */ resolvedParts = _split(resolvedUrl);\n        var /** @type {?} */ prefix = this._packagePrefix;\n        if (prefix != null && resolvedParts != null &&\n            resolvedParts[_ComponentIndex.Scheme] == 'package') {\n            var /** @type {?} */ path = resolvedParts[_ComponentIndex.Path];\n            prefix = prefix.replace(/\\/+$/, '');\n            path = path.replace(/^\\/+/, '');\n            return prefix + \"/\" + path;\n        }\n        return resolvedUrl;\n    };\n    return UrlResolver;\n}());\nUrlResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nUrlResolver.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.PACKAGE_ROOT_URL,] },] },\n]; };\n/**\n * Extract the scheme of a URL.\n * @param {?} url\n * @return {?}\n */\nfunction getUrlScheme(url) {\n    var /** @type {?} */ match = _split(url);\n    return (match && match[_ComponentIndex.Scheme]) || '';\n}\n/**\n * Builds a URI string from already-encoded parts.\n *\n * No encoding is performed.  Any component may be omitted as either null or\n * undefined.\n *\n * @param {?=} opt_scheme The scheme such as 'http'.\n * @param {?=} opt_userInfo The user name before the '\\@'.\n * @param {?=} opt_domain The domain such as 'www.google.com', already\n *     URI-encoded.\n * @param {?=} opt_port The port number.\n * @param {?=} opt_path The path, already URI-encoded.  If it is not\n *     empty, it must begin with a slash.\n * @param {?=} opt_queryData The URI-encoded query data.\n * @param {?=} opt_fragment The URI-encoded fragment identifier.\n * @return {?} The fully combined URI.\n */\nfunction _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n    var /** @type {?} */ out = [];\n    if (opt_scheme != null) {\n        out.push(opt_scheme + ':');\n    }\n    if (opt_domain != null) {\n        out.push('//');\n        if (opt_userInfo != null) {\n            out.push(opt_userInfo + '@');\n        }\n        out.push(opt_domain);\n        if (opt_port != null) {\n            out.push(':' + opt_port);\n        }\n    }\n    if (opt_path != null) {\n        out.push(opt_path);\n    }\n    if (opt_queryData != null) {\n        out.push('?' + opt_queryData);\n    }\n    if (opt_fragment != null) {\n        out.push('#' + opt_fragment);\n    }\n    return out.join('');\n}\n/**\n * A regular expression for breaking a URI into its component parts.\n *\n * {\\@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n * \\@internal\n */\nvar _splitRe = new RegExp('^' +\n    '(?:' +\n    '([^:/?#.]+)' +\n    // used by other URL parts such as :,\n    // ?, /, #, and .\n    ':)?' +\n    '(?://' +\n    '(?:([^/?#]*)@)?' +\n    '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' +\n    // digits, dashes, dots, percent\n    // escapes, and unicode characters.\n    '(?::([0-9]+))?' +\n    ')?' +\n    '([^?#]+)?' +\n    '(?:\\\\?([^#]*))?' +\n    '(?:#(.*))?' +\n    '$');\nvar _ComponentIndex = {};\n_ComponentIndex.Scheme = 1;\n_ComponentIndex.UserInfo = 2;\n_ComponentIndex.Domain = 3;\n_ComponentIndex.Port = 4;\n_ComponentIndex.Path = 5;\n_ComponentIndex.QueryData = 6;\n_ComponentIndex.Fragment = 7;\n_ComponentIndex[_ComponentIndex.Scheme] = \"Scheme\";\n_ComponentIndex[_ComponentIndex.UserInfo] = \"UserInfo\";\n_ComponentIndex[_ComponentIndex.Domain] = \"Domain\";\n_ComponentIndex[_ComponentIndex.Port] = \"Port\";\n_ComponentIndex[_ComponentIndex.Path] = \"Path\";\n_ComponentIndex[_ComponentIndex.QueryData] = \"QueryData\";\n_ComponentIndex[_ComponentIndex.Fragment] = \"Fragment\";\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n * </pre>\n *\n * @param {?} uri The URI string to examine.\n * @return {?} Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\nfunction _split(uri) {\n    return ((uri.match(_splitRe)));\n}\n/**\n * Removes dot segments in given path component, as described in\n * RFC 3986, section 5.2.4.\n *\n * @param {?} path A non-empty path component.\n * @return {?} Path component with removed dot segments.\n */\nfunction _removeDotSegments(path) {\n    if (path == '/')\n        return '/';\n    var /** @type {?} */ leadingSlash = path[0] == '/' ? '/' : '';\n    var /** @type {?} */ trailingSlash = path[path.length - 1] === '/' ? '/' : '';\n    var /** @type {?} */ segments = path.split('/');\n    var /** @type {?} */ out = [];\n    var /** @type {?} */ up = 0;\n    for (var /** @type {?} */ pos = 0; pos < segments.length; pos++) {\n        var /** @type {?} */ segment = segments[pos];\n        switch (segment) {\n            case '':\n            case '.':\n                break;\n            case '..':\n                if (out.length > 0) {\n                    out.pop();\n                }\n                else {\n                    up++;\n                }\n                break;\n            default:\n                out.push(segment);\n        }\n    }\n    if (leadingSlash == '') {\n        while (up-- > 0) {\n            out.unshift('..');\n        }\n        if (out.length === 0)\n            out.push('.');\n    }\n    return leadingSlash + out.join('/') + trailingSlash;\n}\n/**\n * Takes an array of the parts from split and canonicalizes the path part\n * and then joins all the parts.\n * @param {?} parts\n * @return {?}\n */\nfunction _joinAndCanonicalizePath(parts) {\n    var /** @type {?} */ path = parts[_ComponentIndex.Path];\n    path = path == null ? '' : _removeDotSegments(path);\n    parts[_ComponentIndex.Path] = path;\n    return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n}\n/**\n * Resolves a URL.\n * @param {?} base The URL acting as the base URL.\n * @param {?} url\n * @return {?}\n */\nfunction _resolveUrl(base, url) {\n    var /** @type {?} */ parts = _split(encodeURI(url));\n    var /** @type {?} */ baseParts = _split(base);\n    if (parts[_ComponentIndex.Scheme] != null) {\n        return _joinAndCanonicalizePath(parts);\n    }\n    else {\n        parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n    }\n    for (var /** @type {?} */ i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n        if (parts[i] == null) {\n            parts[i] = baseParts[i];\n        }\n    }\n    if (parts[_ComponentIndex.Path][0] == '/') {\n        return _joinAndCanonicalizePath(parts);\n    }\n    var /** @type {?} */ path = baseParts[_ComponentIndex.Path];\n    if (path == null)\n        path = '/';\n    var /** @type {?} */ index = path.lastIndexOf('/');\n    path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];\n    parts[_ComponentIndex.Path] = path;\n    return _joinAndCanonicalizePath(parts);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DirectiveNormalizer = (function () {\n    /**\n     * @param {?} _resourceLoader\n     * @param {?} _urlResolver\n     * @param {?} _htmlParser\n     * @param {?} _config\n     */\n    function DirectiveNormalizer(_resourceLoader, _urlResolver, _htmlParser, _config) {\n        this._resourceLoader = _resourceLoader;\n        this._urlResolver = _urlResolver;\n        this._htmlParser = _htmlParser;\n        this._config = _config;\n        this._resourceLoaderCache = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCache = function () { this._resourceLoaderCache.clear(); };\n    /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCacheFor = function (normalizedDirective) {\n        var _this = this;\n        if (!normalizedDirective.isComponent) {\n            return;\n        }\n        var /** @type {?} */ template = ((normalizedDirective.template));\n        this._resourceLoaderCache.delete(/** @type {?} */ ((template.templateUrl)));\n        template.externalStylesheets.forEach(function (stylesheet) { _this._resourceLoaderCache.delete(/** @type {?} */ ((stylesheet.moduleUrl))); });\n    };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._fetch = function (url) {\n        var /** @type {?} */ result = this._resourceLoaderCache.get(url);\n        if (!result) {\n            result = ((this._resourceLoader.get(url)));\n            this._resourceLoaderCache.set(url, result);\n        }\n        return result;\n    };\n    /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplate = function (prenormData) {\n        var _this = this;\n        var /** @type {?} */ normalizedTemplateSync = ((null));\n        var /** @type {?} */ normalizedTemplateAsync = ((undefined));\n        if (isDefined(prenormData.template)) {\n            if (isDefined(prenormData.templateUrl)) {\n                throw syntaxError(\"'\" + _angular_core.ɵstringify(prenormData.componentType) + \"' component cannot define both template and templateUrl\");\n            }\n            if (typeof prenormData.template !== 'string') {\n                throw syntaxError(\"The template specified for component \" + _angular_core.ɵstringify(prenormData.componentType) + \" is not a string\");\n            }\n            normalizedTemplateSync = this.normalizeTemplateSync(prenormData);\n            normalizedTemplateAsync = Promise.resolve(/** @type {?} */ ((normalizedTemplateSync)));\n        }\n        else if (isDefined(prenormData.templateUrl)) {\n            if (typeof prenormData.templateUrl !== 'string') {\n                throw syntaxError(\"The templateUrl specified for component \" + _angular_core.ɵstringify(prenormData.componentType) + \" is not a string\");\n            }\n            normalizedTemplateAsync = this.normalizeTemplateAsync(prenormData);\n        }\n        else {\n            throw syntaxError(\"No template specified for component \" + _angular_core.ɵstringify(prenormData.componentType));\n        }\n        if (normalizedTemplateSync && normalizedTemplateSync.styleUrls.length === 0) {\n            // sync case\n            return new SyncAsyncResult(normalizedTemplateSync);\n        }\n        else {\n            // async case\n            return new SyncAsyncResult(null, normalizedTemplateAsync.then(function (normalizedTemplate) { return _this.normalizeExternalStylesheets(normalizedTemplate); }));\n        }\n    };\n    /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplateSync = function (prenomData) {\n        return this.normalizeLoadedTemplate(prenomData, /** @type {?} */ ((prenomData.template)), prenomData.moduleUrl);\n    };\n    /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplateAsync = function (prenomData) {\n        var _this = this;\n        var /** @type {?} */ templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, /** @type {?} */ ((prenomData.templateUrl)));\n        return this._fetch(templateUrl)\n            .then(function (value) { return _this.normalizeLoadedTemplate(prenomData, value, templateUrl); });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeLoadedTemplate = function (prenormData, template, templateAbsUrl) {\n        var /** @type {?} */ isInline = !!prenormData.template;\n        var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((prenormData.interpolation)));\n        var /** @type {?} */ rootNodesAndErrors = this._htmlParser.parse(template, templateSourceUrl({ reference: prenormData.ngModuleType }, { type: { reference: prenormData.componentType } }, { isInline: isInline, templateUrl: templateAbsUrl }), true, interpolationConfig);\n        if (rootNodesAndErrors.errors.length > 0) {\n            var /** @type {?} */ errorString = rootNodesAndErrors.errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString);\n        }\n        var /** @type {?} */ templateMetadataStyles = this.normalizeStylesheet(new CompileStylesheetMetadata({\n            styles: prenormData.styles,\n            styleUrls: prenormData.styleUrls,\n            moduleUrl: prenormData.moduleUrl\n        }));\n        var /** @type {?} */ visitor = new TemplatePreparseVisitor();\n        visitAll(visitor, rootNodesAndErrors.rootNodes);\n        var /** @type {?} */ templateStyles = this.normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n        var /** @type {?} */ encapsulation = prenormData.encapsulation;\n        if (encapsulation == null) {\n            encapsulation = this._config.defaultEncapsulation;\n        }\n        var /** @type {?} */ styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n        var /** @type {?} */ styleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n        if (encapsulation === _angular_core.ViewEncapsulation.Emulated && styles.length === 0 &&\n            styleUrls.length === 0) {\n            encapsulation = _angular_core.ViewEncapsulation.None;\n        }\n        return new CompileTemplateMetadata({\n            encapsulation: encapsulation,\n            template: template,\n            templateUrl: templateAbsUrl, styles: styles, styleUrls: styleUrls,\n            ngContentSelectors: visitor.ngContentSelectors,\n            animations: prenormData.animations,\n            interpolation: prenormData.interpolation, isInline: isInline,\n            externalStylesheets: []\n        });\n    };\n    /**\n     * @param {?} templateMeta\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeExternalStylesheets = function (templateMeta) {\n        return this._loadMissingExternalStylesheets(templateMeta.styleUrls)\n            .then(function (externalStylesheets) { return new CompileTemplateMetadata({\n            encapsulation: templateMeta.encapsulation,\n            template: templateMeta.template,\n            templateUrl: templateMeta.templateUrl,\n            styles: templateMeta.styles,\n            styleUrls: templateMeta.styleUrls,\n            externalStylesheets: externalStylesheets,\n            ngContentSelectors: templateMeta.ngContentSelectors,\n            animations: templateMeta.animations,\n            interpolation: templateMeta.interpolation,\n            isInline: templateMeta.isInline,\n        }); });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._loadMissingExternalStylesheets = function (styleUrls, loadedStylesheets) {\n        var _this = this;\n        if (loadedStylesheets === void 0) { loadedStylesheets = new Map(); }\n        return Promise\n            .all(styleUrls.filter(function (styleUrl) { return !loadedStylesheets.has(styleUrl); })\n            .map(function (styleUrl) { return _this._fetch(styleUrl).then(function (loadedStyle) {\n            var /** @type {?} */ stylesheet = _this.normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n            loadedStylesheets.set(styleUrl, stylesheet);\n            return _this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n        }); }))\n            .then(function (_) { return Array.from(loadedStylesheets.values()); });\n    };\n    /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeStylesheet = function (stylesheet) {\n        var _this = this;\n        var /** @type {?} */ moduleUrl = ((stylesheet.moduleUrl));\n        var /** @type {?} */ allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n            .map(function (url) { return _this._urlResolver.resolve(moduleUrl, url); });\n        var /** @type {?} */ allStyles = stylesheet.styles.map(function (style$$1) {\n            var /** @type {?} */ styleWithImports = extractStyleUrls(_this._urlResolver, moduleUrl, style$$1);\n            allStyleUrls.push.apply(allStyleUrls, styleWithImports.styleUrls);\n            return styleWithImports.style;\n        });\n        return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: moduleUrl });\n    };\n    return DirectiveNormalizer;\n}());\nDirectiveNormalizer.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nDirectiveNormalizer.ctorParameters = function () { return [\n    { type: ResourceLoader, },\n    { type: UrlResolver, },\n    { type: HtmlParser, },\n    { type: CompilerConfig, },\n]; };\nvar TemplatePreparseVisitor = (function () {\n    function TemplatePreparseVisitor() {\n        this.ngContentSelectors = [];\n        this.styles = [];\n        this.styleUrls = [];\n        this.ngNonBindableStackCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitElement = function (ast, context) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        switch (preparsedElement.type) {\n            case PreparsedElementType.NG_CONTENT:\n                if (this.ngNonBindableStackCount === 0) {\n                    this.ngContentSelectors.push(preparsedElement.selectAttr);\n                }\n                break;\n            case PreparsedElementType.STYLE:\n                var /** @type {?} */ textContent_1 = '';\n                ast.children.forEach(function (child) {\n                    if (child instanceof Text) {\n                        textContent_1 += child.value;\n                    }\n                });\n                this.styles.push(textContent_1);\n                break;\n            case PreparsedElementType.STYLESHEET:\n                this.styleUrls.push(preparsedElement.hrefAttr);\n                break;\n            default:\n                break;\n        }\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount++;\n        }\n        visitAll(this, ast.children);\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount--;\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansion = function (ast, context) { visitAll(this, ast.cases); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansionCase = function (ast, context) {\n        visitAll(this, ast.expression);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitComment = function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitAttribute = function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitText = function (ast, context) { return null; };\n    return TemplatePreparseVisitor;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DirectiveResolver = (function () {\n    /**\n     * @param {?=} _reflector\n     */\n    function DirectiveResolver(_reflector) {\n        if (_reflector === void 0) { _reflector = _angular_core.ɵreflector; }\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    DirectiveResolver.prototype.isDirective = function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    DirectiveResolver.prototype.resolve = function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n        if (typeMetadata) {\n            var /** @type {?} */ metadata = findLast(typeMetadata, isDirectiveMetadata);\n            if (metadata) {\n                var /** @type {?} */ propertyMetadata = this._reflector.propMetadata(type);\n                return this._mergeWithPropertyMetadata(metadata, propertyMetadata, type);\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Directive annotation found on \" + _angular_core.ɵstringify(type));\n        }\n        return null;\n    };\n    /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._mergeWithPropertyMetadata = function (dm, propertyMetadata, directiveType) {\n        var /** @type {?} */ inputs = [];\n        var /** @type {?} */ outputs = [];\n        var /** @type {?} */ host = {};\n        var /** @type {?} */ queries = {};\n        Object.keys(propertyMetadata).forEach(function (propName) {\n            var /** @type {?} */ input = findLast(propertyMetadata[propName], function (a) { return a instanceof _angular_core.Input; });\n            if (input) {\n                if (input.bindingPropertyName) {\n                    inputs.push(propName + \": \" + input.bindingPropertyName);\n                }\n                else {\n                    inputs.push(propName);\n                }\n            }\n            var /** @type {?} */ output = findLast(propertyMetadata[propName], function (a) { return a instanceof _angular_core.Output; });\n            if (output) {\n                if (output.bindingPropertyName) {\n                    outputs.push(propName + \": \" + output.bindingPropertyName);\n                }\n                else {\n                    outputs.push(propName);\n                }\n            }\n            var /** @type {?} */ hostBindings = propertyMetadata[propName].filter(function (a) { return a && a instanceof _angular_core.HostBinding; });\n            hostBindings.forEach(function (hostBinding) {\n                if (hostBinding.hostPropertyName) {\n                    var /** @type {?} */ startWith = hostBinding.hostPropertyName[0];\n                    if (startWith === '(') {\n                        throw new Error(\"@HostBinding can not bind to events. Use @HostListener instead.\");\n                    }\n                    else if (startWith === '[') {\n                        throw new Error(\"@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.\");\n                    }\n                    host[\"[\" + hostBinding.hostPropertyName + \"]\"] = propName;\n                }\n                else {\n                    host[\"[\" + propName + \"]\"] = propName;\n                }\n            });\n            var /** @type {?} */ hostListeners = propertyMetadata[propName].filter(function (a) { return a && a instanceof _angular_core.HostListener; });\n            hostListeners.forEach(function (hostListener) {\n                var /** @type {?} */ args = hostListener.args || [];\n                host[\"(\" + hostListener.eventName + \")\"] = propName + \"(\" + args.join(',') + \")\";\n            });\n            var /** @type {?} */ query = findLast(propertyMetadata[propName], function (a) { return a instanceof _angular_core.Query; });\n            if (query) {\n                queries[propName] = query;\n            }\n        });\n        return this._merge(dm, inputs, outputs, host, queries, directiveType);\n    };\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    DirectiveResolver.prototype._extractPublicName = function (def) { return splitAtColon(def, [/** @type {?} */ ((null)), def])[1].trim(); };\n    /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    DirectiveResolver.prototype._dedupeBindings = function (bindings) {\n        var /** @type {?} */ names = new Set();\n        var /** @type {?} */ reversedResult = [];\n        // go last to first to allow later entries to overwrite previous entries\n        for (var /** @type {?} */ i = bindings.length - 1; i >= 0; i--) {\n            var /** @type {?} */ binding = bindings[i];\n            var /** @type {?} */ name = this._extractPublicName(binding);\n            if (!names.has(name)) {\n                names.add(name);\n                reversedResult.push(binding);\n            }\n        }\n        return reversedResult.reverse();\n    };\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._merge = function (directive, inputs, outputs, host, queries, directiveType) {\n        var /** @type {?} */ mergedInputs = this._dedupeBindings(directive.inputs ? directive.inputs.concat(inputs) : inputs);\n        var /** @type {?} */ mergedOutputs = this._dedupeBindings(directive.outputs ? directive.outputs.concat(outputs) : outputs);\n        var /** @type {?} */ mergedHost = directive.host ? Object.assign({}, directive.host, host) : host;\n        var /** @type {?} */ mergedQueries = directive.queries ? Object.assign({}, directive.queries, queries) : queries;\n        if (directive instanceof _angular_core.Component) {\n            return new _angular_core.Component({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                moduleId: directive.moduleId,\n                queries: mergedQueries,\n                changeDetection: directive.changeDetection,\n                providers: directive.providers,\n                viewProviders: directive.viewProviders,\n                entryComponents: directive.entryComponents,\n                template: directive.template,\n                templateUrl: directive.templateUrl,\n                styles: directive.styles,\n                styleUrls: directive.styleUrls,\n                encapsulation: directive.encapsulation,\n                animations: directive.animations,\n                interpolation: directive.interpolation\n            });\n        }\n        else {\n            return new _angular_core.Directive({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                queries: mergedQueries,\n                providers: directive.providers\n            });\n        }\n    };\n    return DirectiveResolver;\n}());\nDirectiveResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nDirectiveResolver.ctorParameters = function () { return [\n    { type: _angular_core.ɵReflectorReader, },\n]; };\n/**\n * @param {?} type\n * @return {?}\n */\nfunction isDirectiveMetadata(type) {\n    return type instanceof _angular_core.Directive;\n}\n/**\n * @template T\n * @param {?} arr\n * @param {?} condition\n * @return {?}\n */\nfunction findLast(arr, condition) {\n    for (var /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n        if (condition(arr[i])) {\n            return arr[i];\n        }\n    }\n    return null;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nvar GENERATED_FILE = /\\.ngfactory\\.|\\.ngsummary\\./;\nvar JIT_SUMMARY_FILE = /\\.ngsummary\\./;\nvar JIT_SUMMARY_NAME = /NgSummary$/;\n/**\n * @param {?} filePath\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction ngfactoryFilePath(filePath, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(filePath, forceSourceFile);\n    return urlWithSuffix[0] + \".ngfactory\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripGeneratedFileSuffix(filePath) {\n    return filePath.replace(GENERATED_FILE, '.');\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction isGeneratedFile(filePath) {\n    return GENERATED_FILE.test(filePath);\n}\n/**\n * @param {?} path\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction splitTypescriptSuffix(path, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    if (path.endsWith('.d.ts')) {\n        return [path.slice(0, -5), forceSourceFile ? '.ts' : '.d.ts'];\n    }\n    var /** @type {?} */ lastDot = path.lastIndexOf('.');\n    if (lastDot !== -1) {\n        return [path.substring(0, lastDot), path.substring(lastDot)];\n    }\n    return [path, ''];\n}\n/**\n * @param {?} fileName\n * @return {?}\n */\nfunction summaryFileName(fileName) {\n    var /** @type {?} */ fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n    return fileNameWithoutSuffix + \".ngsummary.json\";\n}\n/**\n * @param {?} fileName\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction summaryForJitFileName(fileName, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(stripGeneratedFileSuffix(fileName), forceSourceFile);\n    return urlWithSuffix[0] + \".ngsummary\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripSummaryForJitFileSuffix(filePath) {\n    return filePath.replace(JIT_SUMMARY_FILE, '.');\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction summaryForJitName(symbolName) {\n    return symbolName + \"NgSummary\";\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction stripSummaryForJitNameSuffix(symbolName) {\n    return symbolName.replace(JIT_SUMMARY_NAME, '');\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} hook\n * @param {?} token\n * @return {?}\n */\nfunction hasLifecycleHook(hook, token) {\n    return _angular_core.ɵreflector.hasLifecycleHook(token, getHookName(hook));\n}\n/**\n * @param {?} hook\n * @return {?}\n */\nfunction getHookName(hook) {\n    switch (hook) {\n        case _angular_core.ɵLifecycleHooks.OnInit:\n            return 'ngOnInit';\n        case _angular_core.ɵLifecycleHooks.OnDestroy:\n            return 'ngOnDestroy';\n        case _angular_core.ɵLifecycleHooks.DoCheck:\n            return 'ngDoCheck';\n        case _angular_core.ɵLifecycleHooks.OnChanges:\n            return 'ngOnChanges';\n        case _angular_core.ɵLifecycleHooks.AfterContentInit:\n            return 'ngAfterContentInit';\n        case _angular_core.ɵLifecycleHooks.AfterContentChecked:\n            return 'ngAfterContentChecked';\n        case _angular_core.ɵLifecycleHooks.AfterViewInit:\n            return 'ngAfterViewInit';\n        case _angular_core.ɵLifecycleHooks.AfterViewChecked:\n            return 'ngAfterViewChecked';\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _isNgModuleMetadata(obj) {\n    return obj instanceof _angular_core.NgModule;\n}\n/**\n * Resolves types to {\\@link NgModule}.\n */\nvar NgModuleResolver = (function () {\n    /**\n     * @param {?=} _reflector\n     */\n    function NgModuleResolver(_reflector) {\n        if (_reflector === void 0) { _reflector = _angular_core.ɵreflector; }\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    NgModuleResolver.prototype.isNgModule = function (type) { return this._reflector.annotations(type).some(_isNgModuleMetadata); };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    NgModuleResolver.prototype.resolve = function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModuleMeta = findLast(this._reflector.annotations(type), _isNgModuleMetadata);\n        if (ngModuleMeta) {\n            return ngModuleMeta;\n        }\n        else {\n            if (throwIfNotFound) {\n                throw new Error(\"No NgModule metadata found for '\" + _angular_core.ɵstringify(type) + \"'.\");\n            }\n            return null;\n        }\n    };\n    return NgModuleResolver;\n}());\nNgModuleResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nNgModuleResolver.ctorParameters = function () { return [\n    { type: _angular_core.ɵReflectorReader, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} type\n * @return {?}\n */\nfunction _isPipeMetadata(type) {\n    return type instanceof _angular_core.Pipe;\n}\n/**\n * Resolve a `Type` for {\\@link Pipe}.\n *\n * This interface can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n */\nvar PipeResolver = (function () {\n    /**\n     * @param {?=} _reflector\n     */\n    function PipeResolver(_reflector) {\n        if (_reflector === void 0) { _reflector = _angular_core.ɵreflector; }\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    PipeResolver.prototype.isPipe = function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(_isPipeMetadata);\n    };\n    /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    PipeResolver.prototype.resolve = function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ metas = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n        if (metas) {\n            var /** @type {?} */ annotation = findLast(metas, _isPipeMetadata);\n            if (annotation) {\n                return annotation;\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Pipe decorator found on \" + _angular_core.ɵstringify(type));\n        }\n        return null;\n    };\n    return PipeResolver;\n}());\nPipeResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nPipeResolver.ctorParameters = function () { return [\n    { type: _angular_core.ɵReflectorReader, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar SummaryResolver = (function () {\n    function SummaryResolver() {\n    }\n    /**\n     * @abstract\n     * @param {?} fileName\n     * @return {?}\n     */\n    SummaryResolver.prototype.isLibraryFile = function (fileName) { };\n    /**\n     * @abstract\n     * @param {?} fileName\n     * @return {?}\n     */\n    SummaryResolver.prototype.getLibraryFileName = function (fileName) { };\n    /**\n     * @abstract\n     * @param {?} reference\n     * @return {?}\n     */\n    SummaryResolver.prototype.resolveSummary = function (reference) { };\n    /**\n     * @abstract\n     * @param {?} filePath\n     * @return {?}\n     */\n    SummaryResolver.prototype.getSymbolsOf = function (filePath) { };\n    /**\n     * @abstract\n     * @param {?} reference\n     * @return {?}\n     */\n    SummaryResolver.prototype.getImportAs = function (reference) { };\n    /**\n     * @abstract\n     * @param {?} summary\n     * @return {?}\n     */\n    SummaryResolver.prototype.addSummary = function (summary) { };\n    return SummaryResolver;\n}());\nvar JitSummaryResolver = (function () {\n    function JitSummaryResolver() {\n        this._summaries = new Map();\n    }\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.isLibraryFile = function (fileName) { return false; };\n    \n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getLibraryFileName = function (fileName) { return null; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.resolveSummary = function (reference) {\n        return this._summaries.get(reference) || null;\n    };\n    \n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getSymbolsOf = function (filePath) { return []; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getImportAs = function (reference) { return reference; };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.addSummary = function (summary) { this._summaries.set(summary.symbol, summary); };\n    \n    return JitSummaryResolver;\n}());\nJitSummaryResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nJitSummaryResolver.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ERROR_COLLECTOR_TOKEN = new _angular_core.InjectionToken('ErrorCollector');\nvar CompileMetadataResolver = (function () {\n    /**\n     * @param {?} _config\n     * @param {?} _ngModuleResolver\n     * @param {?} _directiveResolver\n     * @param {?} _pipeResolver\n     * @param {?} _summaryResolver\n     * @param {?} _schemaRegistry\n     * @param {?} _directiveNormalizer\n     * @param {?} _console\n     * @param {?} _staticSymbolCache\n     * @param {?=} _reflector\n     * @param {?=} _errorCollector\n     */\n    function CompileMetadataResolver(_config, _ngModuleResolver, _directiveResolver, _pipeResolver, _summaryResolver, _schemaRegistry, _directiveNormalizer, _console, _staticSymbolCache, _reflector, _errorCollector) {\n        if (_reflector === void 0) { _reflector = _angular_core.ɵreflector; }\n        this._config = _config;\n        this._ngModuleResolver = _ngModuleResolver;\n        this._directiveResolver = _directiveResolver;\n        this._pipeResolver = _pipeResolver;\n        this._summaryResolver = _summaryResolver;\n        this._schemaRegistry = _schemaRegistry;\n        this._directiveNormalizer = _directiveNormalizer;\n        this._console = _console;\n        this._staticSymbolCache = _staticSymbolCache;\n        this._reflector = _reflector;\n        this._errorCollector = _errorCollector;\n        this._nonNormalizedDirectiveCache = new Map();\n        this._directiveCache = new Map();\n        this._summaryCache = new Map();\n        this._pipeCache = new Map();\n        this._ngModuleCache = new Map();\n        this._ngModuleOfTypes = new Map();\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCacheFor = function (type) {\n        var /** @type {?} */ dirMeta = this._directiveCache.get(type);\n        this._directiveCache.delete(type);\n        this._nonNormalizedDirectiveCache.delete(type);\n        this._summaryCache.delete(type);\n        this._pipeCache.delete(type);\n        this._ngModuleOfTypes.delete(type);\n        // Clear all of the NgModule as they contain transitive information!\n        this._ngModuleCache.clear();\n        if (dirMeta) {\n            this._directiveNormalizer.clearCacheFor(dirMeta);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCache = function () {\n        this._directiveCache.clear();\n        this._nonNormalizedDirectiveCache.clear();\n        this._summaryCache.clear();\n        this._pipeCache.clear();\n        this._ngModuleCache.clear();\n        this._ngModuleOfTypes.clear();\n        this._directiveNormalizer.clearCache();\n    };\n    /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._createProxyClass = function (baseType, name) {\n        var /** @type {?} */ delegate = null;\n        var /** @type {?} */ proxyClass = (function () {\n            if (!delegate) {\n                throw new Error(\"Illegal state: Class \" + name + \" for type \" + _angular_core.ɵstringify(baseType) + \" is not compiled yet!\");\n            }\n            return delegate.apply(this, arguments);\n        });\n        proxyClass.setDelegate = function (d) {\n            delegate = d;\n            ((proxyClass)).prototype = d.prototype;\n        };\n        // Make stringify work correctly\n        ((proxyClass)).overriddenName = name;\n        return proxyClass;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getGeneratedClass = function (dirType, name) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n        }\n        else {\n            return this._createProxyClass(dirType, name);\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentViewClass = function (dirType) {\n        return this.getGeneratedClass(dirType, viewClassName(dirType, 0));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentViewClass = function (dirType) {\n        return this.getGeneratedClass(dirType, hostViewClassName(dirType));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentType = function (dirType) {\n        var /** @type {?} */ name = identifierName({ reference: dirType }) + \"_Host\";\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(dirType.filePath, name);\n        }\n        else {\n            var /** @type {?} */ HostClass = (function HostClass() { });\n            HostClass.overriddenName = name;\n            return HostClass;\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getRendererType = function (dirType) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), rendererTypeName(dirType));\n        }\n        else {\n            // returning an object as proxy,\n            // that we fill later during runtime compilation.\n            return ({});\n        }\n    };\n    /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentFactory = function (selector, dirType, inputs, outputs) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), componentFactoryName(dirType));\n        }\n        else {\n            var /** @type {?} */ hostView = this.getHostComponentViewClass(dirType);\n            // Note: ngContentSelectors will be filled later once the template is\n            // loaded.\n            return _angular_core.ɵccf(selector, dirType, /** @type {?} */ (hostView), inputs, outputs, []);\n        }\n    };\n    /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.initComponentFactory = function (factory, ngContentSelectors) {\n        if (!(factory instanceof StaticSymbol)) {\n            (_a = factory.ngContentSelectors).push.apply(_a, ngContentSelectors);\n        }\n        var _a;\n    };\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadSummary = function (type, kind) {\n        var /** @type {?} */ typeSummary = this._summaryCache.get(type);\n        if (!typeSummary) {\n            var /** @type {?} */ summary = this._summaryResolver.resolveSummary(type);\n            typeSummary = summary ? summary.type : null;\n            this._summaryCache.set(type, typeSummary || null);\n        }\n        return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n    };\n    /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadDirectiveMetadata = function (ngModuleType, directiveType, isSync) {\n        var _this = this;\n        if (this._directiveCache.has(directiveType)) {\n            return null;\n        }\n        directiveType = _angular_core.resolveForwardRef(directiveType);\n        var _a = ((this.getNonNormalizedDirectiveMetadata(directiveType))), annotation = _a.annotation, metadata = _a.metadata;\n        var /** @type {?} */ createDirectiveMetadata = function (templateMetadata) {\n            var /** @type {?} */ normalizedDirMeta = new CompileDirectiveMetadata({\n                isHost: false,\n                type: metadata.type,\n                isComponent: metadata.isComponent,\n                selector: metadata.selector,\n                exportAs: metadata.exportAs,\n                changeDetection: metadata.changeDetection,\n                inputs: metadata.inputs,\n                outputs: metadata.outputs,\n                hostListeners: metadata.hostListeners,\n                hostProperties: metadata.hostProperties,\n                hostAttributes: metadata.hostAttributes,\n                providers: metadata.providers,\n                viewProviders: metadata.viewProviders,\n                queries: metadata.queries,\n                viewQueries: metadata.viewQueries,\n                entryComponents: metadata.entryComponents,\n                componentViewType: metadata.componentViewType,\n                rendererType: metadata.rendererType,\n                componentFactory: metadata.componentFactory,\n                template: templateMetadata\n            });\n            if (templateMetadata) {\n                _this.initComponentFactory(/** @type {?} */ ((metadata.componentFactory)), templateMetadata.ngContentSelectors);\n            }\n            _this._directiveCache.set(directiveType, normalizedDirMeta);\n            _this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n            return normalizedDirMeta;\n        };\n        if (metadata.isComponent) {\n            var /** @type {?} */ template = ((metadata.template));\n            var /** @type {?} */ templateMeta = this._directiveNormalizer.normalizeTemplate({\n                ngModuleType: ngModuleType,\n                componentType: directiveType,\n                moduleUrl: componentModuleUrl(this._reflector, directiveType, annotation),\n                encapsulation: template.encapsulation,\n                template: template.template,\n                templateUrl: template.templateUrl,\n                styles: template.styles,\n                styleUrls: template.styleUrls,\n                animations: template.animations,\n                interpolation: template.interpolation\n            });\n            if (templateMeta.syncResult) {\n                createDirectiveMetadata(templateMeta.syncResult);\n                return null;\n            }\n            else {\n                if (isSync) {\n                    this._reportError(componentStillLoadingError(directiveType), directiveType);\n                    return null;\n                }\n                return ((templateMeta.asyncResult)).then(createDirectiveMetadata);\n            }\n        }\n        else {\n            // directive\n            createDirectiveMetadata(null);\n            return null;\n        }\n    };\n    /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNonNormalizedDirectiveMetadata = function (directiveType) {\n        var _this = this;\n        directiveType = _angular_core.resolveForwardRef(directiveType);\n        if (!directiveType) {\n            return null;\n        }\n        var /** @type {?} */ cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n        if (cacheEntry) {\n            return cacheEntry;\n        }\n        var /** @type {?} */ dirMeta = this._directiveResolver.resolve(directiveType, false);\n        if (!dirMeta) {\n            return null;\n        }\n        var /** @type {?} */ nonNormalizedTemplateMetadata = ((undefined));\n        if (dirMeta instanceof _angular_core.Component) {\n            // component\n            assertArrayOfStrings('styles', dirMeta.styles);\n            assertArrayOfStrings('styleUrls', dirMeta.styleUrls);\n            assertInterpolationSymbols('interpolation', dirMeta.interpolation);\n            var /** @type {?} */ animations = dirMeta.animations;\n            nonNormalizedTemplateMetadata = new CompileTemplateMetadata({\n                encapsulation: noUndefined(dirMeta.encapsulation),\n                template: noUndefined(dirMeta.template),\n                templateUrl: noUndefined(dirMeta.templateUrl),\n                styles: dirMeta.styles || [],\n                styleUrls: dirMeta.styleUrls || [],\n                animations: animations || [],\n                interpolation: noUndefined(dirMeta.interpolation),\n                isInline: !!dirMeta.template,\n                externalStylesheets: [],\n                ngContentSelectors: []\n            });\n        }\n        var /** @type {?} */ changeDetectionStrategy = ((null));\n        var /** @type {?} */ viewProviders = [];\n        var /** @type {?} */ entryComponentMetadata = [];\n        var /** @type {?} */ selector = dirMeta.selector;\n        if (dirMeta instanceof _angular_core.Component) {\n            // Component\n            changeDetectionStrategy = ((dirMeta.changeDetection));\n            if (dirMeta.viewProviders) {\n                viewProviders = this._getProvidersMetadata(dirMeta.viewProviders, entryComponentMetadata, \"viewProviders for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n            }\n            if (dirMeta.entryComponents) {\n                entryComponentMetadata = flattenAndDedupeArray(dirMeta.entryComponents)\n                    .map(function (type) { return ((_this._getEntryComponentMetadata(type))); })\n                    .concat(entryComponentMetadata);\n            }\n            if (!selector) {\n                selector = this._schemaRegistry.getDefaultComponentElementName();\n            }\n        }\n        else {\n            // Directive\n            if (!selector) {\n                this._reportError(syntaxError(\"Directive \" + stringifyType(directiveType) + \" has no selector, please add it!\"), directiveType);\n                selector = 'error';\n            }\n        }\n        var /** @type {?} */ providers = [];\n        if (dirMeta.providers != null) {\n            providers = this._getProvidersMetadata(dirMeta.providers, entryComponentMetadata, \"providers for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n        }\n        var /** @type {?} */ queries = [];\n        var /** @type {?} */ viewQueries = [];\n        if (dirMeta.queries != null) {\n            queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n            viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n        }\n        var /** @type {?} */ metadata = CompileDirectiveMetadata.create({\n            isHost: false,\n            selector: selector,\n            exportAs: noUndefined(dirMeta.exportAs),\n            isComponent: !!nonNormalizedTemplateMetadata,\n            type: this._getTypeMetadata(directiveType),\n            template: nonNormalizedTemplateMetadata,\n            changeDetection: changeDetectionStrategy,\n            inputs: dirMeta.inputs || [],\n            outputs: dirMeta.outputs || [],\n            host: dirMeta.host || {},\n            providers: providers || [],\n            viewProviders: viewProviders || [],\n            queries: queries || [],\n            viewQueries: viewQueries || [],\n            entryComponents: entryComponentMetadata,\n            componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                null,\n            rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : null,\n            componentFactory: null\n        });\n        if (nonNormalizedTemplateMetadata) {\n            metadata.componentFactory =\n                this.getComponentFactory(selector, directiveType, metadata.inputs, metadata.outputs);\n        }\n        cacheEntry = { metadata: metadata, annotation: dirMeta };\n        this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n        return cacheEntry;\n    };\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveMetadata = function (directiveType) {\n        var /** @type {?} */ dirMeta = ((this._directiveCache.get(directiveType)));\n        if (!dirMeta) {\n            this._reportError(syntaxError(\"Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive \" + stringifyType(directiveType) + \".\"), directiveType);\n        }\n        return dirMeta;\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveSummary = function (dirType) {\n        var /** @type {?} */ dirSummary = (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (!dirSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for directive \" + stringifyType(dirType) + \".\"), dirType);\n        }\n        return dirSummary;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isDirective = function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Directive) ||\n            this._directiveResolver.isDirective(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isPipe = function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Pipe) ||\n            this._pipeResolver.isPipe(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isNgModule = function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.NgModule) ||\n            this._ngModuleResolver.isNgModule(type);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleSummary = function (moduleType) {\n        var /** @type {?} */ moduleSummary = (this._loadSummary(moduleType, CompileSummaryKind.NgModule));\n        if (!moduleSummary) {\n            var /** @type {?} */ moduleMeta = this.getNgModuleMetadata(moduleType, false);\n            moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n            if (moduleSummary) {\n                this._summaryCache.set(moduleType, moduleSummary);\n            }\n        }\n        return moduleSummary;\n    };\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadNgModuleDirectiveAndPipeMetadata = function (moduleType, isSync, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n        var /** @type {?} */ loading = [];\n        if (ngModule) {\n            ngModule.declaredDirectives.forEach(function (id) {\n                var /** @type {?} */ promise = _this.loadDirectiveMetadata(moduleType, id.reference, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            ngModule.declaredPipes.forEach(function (id) { return _this._loadPipeMetadata(id.reference); });\n        }\n        return Promise.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleMetadata = function (moduleType, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        moduleType = _angular_core.resolveForwardRef(moduleType);\n        var /** @type {?} */ compileMeta = this._ngModuleCache.get(moduleType);\n        if (compileMeta) {\n            return compileMeta;\n        }\n        var /** @type {?} */ meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n        if (!meta) {\n            return null;\n        }\n        var /** @type {?} */ declaredDirectives = [];\n        var /** @type {?} */ exportedNonModuleIdentifiers = [];\n        var /** @type {?} */ declaredPipes = [];\n        var /** @type {?} */ importedModules = [];\n        var /** @type {?} */ exportedModules = [];\n        var /** @type {?} */ providers = [];\n        var /** @type {?} */ entryComponents = [];\n        var /** @type {?} */ bootstrapComponents = [];\n        var /** @type {?} */ schemas = [];\n        if (meta.imports) {\n            flattenAndDedupeArray(meta.imports).forEach(function (importedType) {\n                var /** @type {?} */ importedModuleType = ((undefined));\n                if (isValidType(importedType)) {\n                    importedModuleType = importedType;\n                }\n                else if (importedType && importedType.ngModule) {\n                    var /** @type {?} */ moduleWithProviders = importedType;\n                    importedModuleType = moduleWithProviders.ngModule;\n                    if (moduleWithProviders.providers) {\n                        providers.push.apply(providers, _this._getProvidersMetadata(moduleWithProviders.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(importedModuleType) + \"'\", [], importedType));\n                    }\n                }\n                if (importedModuleType) {\n                    if (_this._checkSelfImport(moduleType, importedModuleType))\n                        return;\n                    var /** @type {?} */ importedModuleSummary = _this.getNgModuleSummary(importedModuleType);\n                    if (!importedModuleSummary) {\n                        _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(importedType) + \" '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'. Please add a @NgModule annotation.\"), moduleType);\n                        return;\n                    }\n                    importedModules.push(importedModuleSummary);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n            });\n        }\n        if (meta.exports) {\n            flattenAndDedupeArray(meta.exports).forEach(function (exportedType) {\n                if (!isValidType(exportedType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(exportedType) + \"' exported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ exportedModuleSummary = _this.getNgModuleSummary(exportedType);\n                if (exportedModuleSummary) {\n                    exportedModules.push(exportedModuleSummary);\n                }\n                else {\n                    exportedNonModuleIdentifiers.push(_this._getIdentifierMetadata(exportedType));\n                }\n            });\n        }\n        // Note: This will be modified later, so we rely on\n        // getting a new instance every time!\n        var /** @type {?} */ transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n        if (meta.declarations) {\n            flattenAndDedupeArray(meta.declarations).forEach(function (declaredType) {\n                if (!isValidType(declaredType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ declaredIdentifier = _this._getIdentifierMetadata(declaredType);\n                if (_this.isDirective(declaredType)) {\n                    transitiveModule.addDirective(declaredIdentifier);\n                    declaredDirectives.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else if (_this.isPipe(declaredType)) {\n                    transitiveModule.addPipe(declaredIdentifier);\n                    transitiveModule.pipes.push(declaredIdentifier);\n                    declaredPipes.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(declaredType) + \" '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\"), moduleType);\n                    return;\n                }\n            });\n        }\n        var /** @type {?} */ exportedDirectives = [];\n        var /** @type {?} */ exportedPipes = [];\n        exportedNonModuleIdentifiers.forEach(function (exportedId) {\n            if (transitiveModule.directivesSet.has(exportedId.reference)) {\n                exportedDirectives.push(exportedId);\n                transitiveModule.addExportedDirective(exportedId);\n            }\n            else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n                exportedPipes.push(exportedId);\n                transitiveModule.addExportedPipe(exportedId);\n            }\n            else {\n                _this._reportError(syntaxError(\"Can't export \" + _this._getTypeDescriptor(exportedId.reference) + \" \" + stringifyType(exportedId.reference) + \" from \" + stringifyType(moduleType) + \" as it was neither declared nor imported!\"), moduleType);\n                return;\n            }\n        });\n        // The providers of the module have to go last\n        // so that they overwrite any other provider we already added.\n        if (meta.providers) {\n            providers.push.apply(providers, this._getProvidersMetadata(meta.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(moduleType) + \"'\", [], moduleType));\n        }\n        if (meta.entryComponents) {\n            entryComponents.push.apply(entryComponents, flattenAndDedupeArray(meta.entryComponents)\n                .map(function (type) { return ((_this._getEntryComponentMetadata(type))); }));\n        }\n        if (meta.bootstrap) {\n            flattenAndDedupeArray(meta.bootstrap).forEach(function (type) {\n                if (!isValidType(type)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(type) + \"' used in the bootstrap property of module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                bootstrapComponents.push(_this._getIdentifierMetadata(type));\n            });\n        }\n        entryComponents.push.apply(entryComponents, bootstrapComponents.map(function (type) { return ((_this._getEntryComponentMetadata(type.reference))); }));\n        if (meta.schemas) {\n            schemas.push.apply(schemas, flattenAndDedupeArray(meta.schemas));\n        }\n        compileMeta = new CompileNgModuleMetadata({\n            type: this._getTypeMetadata(moduleType),\n            providers: providers,\n            entryComponents: entryComponents,\n            bootstrapComponents: bootstrapComponents,\n            schemas: schemas,\n            declaredDirectives: declaredDirectives,\n            exportedDirectives: exportedDirectives,\n            declaredPipes: declaredPipes,\n            exportedPipes: exportedPipes,\n            importedModules: importedModules,\n            exportedModules: exportedModules,\n            transitiveModule: transitiveModule,\n            id: meta.id || null,\n        });\n        entryComponents.forEach(function (id) { return transitiveModule.addEntryComponent(id); });\n        providers.forEach(function (provider) { return transitiveModule.addProvider(provider, /** @type {?} */ ((compileMeta)).type); });\n        transitiveModule.addModule(compileMeta.type);\n        this._ngModuleCache.set(moduleType, compileMeta);\n        return compileMeta;\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._checkSelfImport = function (moduleType, importedModuleType) {\n        if (moduleType === importedModuleType) {\n            this._reportError(syntaxError(\"'\" + stringifyType(moduleType) + \"' module can't import itself\"), moduleType);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeDescriptor = function (type) {\n        if (this.isDirective(type)) {\n            return 'directive';\n        }\n        if (this.isPipe(type)) {\n            return 'pipe';\n        }\n        if (this.isNgModule(type)) {\n            return 'module';\n        }\n        if (((type)).provide) {\n            return 'provider';\n        }\n        return 'value';\n    };\n    /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._addTypeToModule = function (type, moduleType) {\n        var /** @type {?} */ oldModule = this._ngModuleOfTypes.get(type);\n        if (oldModule && oldModule !== moduleType) {\n            this._reportError(syntaxError(\"Type \" + stringifyType(type) + \" is part of the declarations of 2 modules: \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \"! \" +\n                (\"Please consider moving \" + stringifyType(type) + \" to a higher module that imports \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \". \") +\n                (\"You can also create a new NgModule that exports and includes \" + stringifyType(type) + \" then import that NgModule in \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \".\")), moduleType);\n            return;\n        }\n        this._ngModuleOfTypes.set(type, moduleType);\n    };\n    /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata = function (importedModules, exportedModules) {\n        // collect `providers` / `entryComponents` from all imported and all exported modules\n        var /** @type {?} */ result = new TransitiveCompileNgModuleMetadata();\n        var /** @type {?} */ modulesByToken = new Map();\n        importedModules.concat(exportedModules).forEach(function (modSummary) {\n            modSummary.modules.forEach(function (mod) { return result.addModule(mod); });\n            modSummary.entryComponents.forEach(function (comp) { return result.addEntryComponent(comp); });\n            var /** @type {?} */ addedTokens = new Set();\n            modSummary.providers.forEach(function (entry) {\n                var /** @type {?} */ tokenRef = tokenReference(entry.provider.token);\n                var /** @type {?} */ prevModules = modulesByToken.get(tokenRef);\n                if (!prevModules) {\n                    prevModules = new Set();\n                    modulesByToken.set(tokenRef, prevModules);\n                }\n                var /** @type {?} */ moduleRef = entry.module.reference;\n                // Note: the providers of one module may still contain multiple providers\n                // per token (e.g. for multi providers), and we need to preserve these.\n                if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n                    prevModules.add(moduleRef);\n                    addedTokens.add(tokenRef);\n                    result.addProvider(entry.provider, entry.module);\n                }\n            });\n        });\n        exportedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addExportedDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addExportedPipe(id); });\n        });\n        importedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addPipe(id); });\n        });\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getIdentifierMetadata = function (type) {\n        type = _angular_core.resolveForwardRef(type);\n        return { reference: type };\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isInjectable = function (type) {\n        var /** @type {?} */ annotations = this._reflector.annotations(type);\n        // Note: We need an exact check here as @Component / @Directive / ... inherit\n        // from @CompilerInjectable!\n        return annotations.some(function (ann) { return ann.constructor === _angular_core.Injectable; });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getInjectableSummary = function (type) {\n        return {\n            summaryKind: CompileSummaryKind.Injectable,\n            type: this._getTypeMetadata(type, null, false)\n        };\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getInjectableMetadata = function (type, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        var /** @type {?} */ typeSummary = this._loadSummary(type, CompileSummaryKind.Injectable);\n        if (typeSummary) {\n            return typeSummary.type;\n        }\n        return this._getTypeMetadata(type, dependencies);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeMetadata = function (type, dependencies, throwOnUnknownDeps) {\n        if (dependencies === void 0) { dependencies = null; }\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ identifier = this._getIdentifierMetadata(type);\n        return {\n            reference: identifier.reference,\n            diDeps: this._getDependenciesMetadata(identifier.reference, dependencies, throwOnUnknownDeps),\n            lifecycleHooks: _angular_core.ɵLIFECYCLE_HOOKS_VALUES.filter(function (hook) { return hasLifecycleHook(hook, identifier.reference); }),\n        };\n    };\n    /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getFactoryMetadata = function (factory, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        factory = _angular_core.resolveForwardRef(factory);\n        return { reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies) };\n    };\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeMetadata = function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            this._reportError(syntaxError(\"Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeMeta || null;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeSummary = function (pipeType) {\n        var /** @type {?} */ pipeSummary = (this._loadSummary(pipeType, CompileSummaryKind.Pipe));\n        if (!pipeSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeSummary;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getOrLoadPipeMetadata = function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            pipeMeta = this._loadPipeMetadata(pipeType);\n        }\n        return pipeMeta;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadPipeMetadata = function (pipeType) {\n        pipeType = _angular_core.resolveForwardRef(pipeType);\n        var /** @type {?} */ pipeAnnotation = ((this._pipeResolver.resolve(pipeType)));\n        var /** @type {?} */ pipeMeta = new CompilePipeMetadata({\n            type: this._getTypeMetadata(pipeType),\n            name: pipeAnnotation.name,\n            pure: !!pipeAnnotation.pure\n        });\n        this._pipeCache.set(pipeType, pipeMeta);\n        this._summaryCache.set(pipeType, pipeMeta.toSummary());\n        return pipeMeta;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getDependenciesMetadata = function (typeOrFunc, dependencies, throwOnUnknownDeps) {\n        var _this = this;\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ hasUnknownDeps = false;\n        var /** @type {?} */ params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n        var /** @type {?} */ dependenciesMetadata = params.map(function (param) {\n            var /** @type {?} */ isAttribute = false;\n            var /** @type {?} */ isHost = false;\n            var /** @type {?} */ isSelf = false;\n            var /** @type {?} */ isSkipSelf = false;\n            var /** @type {?} */ isOptional = false;\n            var /** @type {?} */ token = null;\n            if (Array.isArray(param)) {\n                param.forEach(function (paramEntry) {\n                    if (paramEntry instanceof _angular_core.Host) {\n                        isHost = true;\n                    }\n                    else if (paramEntry instanceof _angular_core.Self) {\n                        isSelf = true;\n                    }\n                    else if (paramEntry instanceof _angular_core.SkipSelf) {\n                        isSkipSelf = true;\n                    }\n                    else if (paramEntry instanceof _angular_core.Optional) {\n                        isOptional = true;\n                    }\n                    else if (paramEntry instanceof _angular_core.Attribute) {\n                        isAttribute = true;\n                        token = paramEntry.attributeName;\n                    }\n                    else if (paramEntry instanceof _angular_core.Inject) {\n                        token = paramEntry.token;\n                    }\n                    else if (paramEntry instanceof _angular_core.InjectionToken) {\n                        token = paramEntry;\n                    }\n                    else if (isValidType(paramEntry) && token == null) {\n                        token = paramEntry;\n                    }\n                });\n            }\n            else {\n                token = param;\n            }\n            if (token == null) {\n                hasUnknownDeps = true;\n                return ((null));\n            }\n            return {\n                isAttribute: isAttribute,\n                isHost: isHost,\n                isSelf: isSelf,\n                isSkipSelf: isSkipSelf,\n                isOptional: isOptional,\n                token: _this._getTokenMetadata(token)\n            };\n        });\n        if (hasUnknownDeps) {\n            var /** @type {?} */ depsTokens = dependenciesMetadata.map(function (dep) { return dep ? stringifyType(dep.token) : '?'; }).join(', ');\n            var /** @type {?} */ message = \"Can't resolve all parameters for \" + stringifyType(typeOrFunc) + \": (\" + depsTokens + \").\";\n            if (throwOnUnknownDeps) {\n                this._reportError(syntaxError(message), typeOrFunc);\n            }\n            else {\n                this._console.warn(\"Warning: \" + message + \" This will become an error in Angular v5.x\");\n            }\n        }\n        return dependenciesMetadata;\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTokenMetadata = function (token) {\n        token = _angular_core.resolveForwardRef(token);\n        var /** @type {?} */ compileToken;\n        if (typeof token === 'string') {\n            compileToken = { value: token };\n        }\n        else {\n            compileToken = { identifier: { reference: token } };\n        }\n        return compileToken;\n    };\n    /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getProvidersMetadata = function (providers, targetEntryComponents, debugInfo, compileProviders, type) {\n        var _this = this;\n        if (compileProviders === void 0) { compileProviders = []; }\n        providers.forEach(function (provider, providerIdx) {\n            if (Array.isArray(provider)) {\n                _this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n            }\n            else {\n                provider = _angular_core.resolveForwardRef(provider);\n                var /** @type {?} */ providerMeta = ((undefined));\n                if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n                    _this._validateProvider(provider);\n                    providerMeta = new ProviderMeta(provider.provide, provider);\n                }\n                else if (isValidType(provider)) {\n                    providerMeta = new ProviderMeta(provider, { useClass: provider });\n                }\n                else if (provider === void 0) {\n                    _this._reportError(syntaxError(\"Encountered undefined provider! Usually this means you have a circular dependencies (might be caused by using 'barrel' index.ts files.\"));\n                    return;\n                }\n                else {\n                    var /** @type {?} */ providersInfo = ((providers.reduce(function (soFar, seenProvider, seenProviderIdx) {\n                        if (seenProviderIdx < providerIdx) {\n                            soFar.push(\"\" + stringifyType(seenProvider));\n                        }\n                        else if (seenProviderIdx == providerIdx) {\n                            soFar.push(\"?\" + stringifyType(seenProvider) + \"?\");\n                        }\n                        else if (seenProviderIdx == providerIdx + 1) {\n                            soFar.push('...');\n                        }\n                        return soFar;\n                    }, [])))\n                        .join(', ');\n                    _this._reportError(syntaxError(\"Invalid \" + (debugInfo ? debugInfo : 'provider') + \" - only instances of Provider and Type are allowed, got: [\" + providersInfo + \"]\"), type);\n                    return;\n                }\n                if (providerMeta.token === resolveIdentifier(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n                    targetEntryComponents.push.apply(targetEntryComponents, _this._getEntryComponentsFromProvider(providerMeta, type));\n                }\n                else {\n                    compileProviders.push(_this.getProviderMetadata(providerMeta));\n                }\n            }\n        });\n        return compileProviders;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._validateProvider = function (provider) {\n        if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n            this._reportError(syntaxError(\"Invalid provider for \" + stringifyType(provider.provide) + \". useClass cannot be \" + provider.useClass + \".\\n           Usually it happens when:\\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\\n           2. Class was used before it was declared. Use forwardRef in this case.\"));\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentsFromProvider = function (provider, type) {\n        var _this = this;\n        var /** @type {?} */ components = [];\n        var /** @type {?} */ collectedIdentifiers = [];\n        if (provider.useFactory || provider.useExisting || provider.useClass) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!\"), type);\n            return [];\n        }\n        if (!provider.multi) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!\"), type);\n            return [];\n        }\n        extractIdentifiers(provider.useValue, collectedIdentifiers);\n        collectedIdentifiers.forEach(function (identifier) {\n            var /** @type {?} */ entry = _this._getEntryComponentMetadata(identifier.reference, false);\n            if (entry) {\n                components.push(entry);\n            }\n        });\n        return components;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentMetadata = function (dirType, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n        if (dirMeta && dirMeta.metadata.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirMeta.metadata.componentFactory)) };\n        }\n        var /** @type {?} */ dirSummary = (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (dirSummary && dirSummary.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirSummary.componentFactory)) };\n        }\n        if (throwIfNotFound) {\n            throw syntaxError(dirType.name + \" cannot be used as an entry component.\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getProviderMetadata = function (provider) {\n        var /** @type {?} */ compileDeps = ((undefined));\n        var /** @type {?} */ compileTypeMetadata = ((null));\n        var /** @type {?} */ compileFactoryMetadata = ((null));\n        var /** @type {?} */ token = this._getTokenMetadata(provider.token);\n        if (provider.useClass) {\n            compileTypeMetadata = this._getInjectableMetadata(provider.useClass, provider.dependencies);\n            compileDeps = compileTypeMetadata.diDeps;\n            if (provider.token === provider.useClass) {\n                // use the compileTypeMetadata as it contains information about lifecycleHooks...\n                token = { identifier: compileTypeMetadata };\n            }\n        }\n        else if (provider.useFactory) {\n            compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n            compileDeps = compileFactoryMetadata.diDeps;\n        }\n        return {\n            token: token,\n            useClass: compileTypeMetadata,\n            useValue: provider.useValue,\n            useFactory: compileFactoryMetadata,\n            useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : undefined,\n            deps: compileDeps,\n            multi: provider.multi\n        };\n    };\n    /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueriesMetadata = function (queries, isViewQuery, directiveType) {\n        var _this = this;\n        var /** @type {?} */ res = [];\n        Object.keys(queries).forEach(function (propertyName) {\n            var /** @type {?} */ query = queries[propertyName];\n            if (query.isViewQuery === isViewQuery) {\n                res.push(_this._getQueryMetadata(query, propertyName, directiveType));\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._queryVarBindings = function (selector) { return selector.split(/\\s*,\\s*/); };\n    /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueryMetadata = function (q, propertyName, typeOrFunc) {\n        var _this = this;\n        var /** @type {?} */ selectors;\n        if (typeof q.selector === 'string') {\n            selectors =\n                this._queryVarBindings(q.selector).map(function (varName) { return _this._getTokenMetadata(varName); });\n        }\n        else {\n            if (!q.selector) {\n                this._reportError(syntaxError(\"Can't construct a query for the property \\\"\" + propertyName + \"\\\" of \\\"\" + stringifyType(typeOrFunc) + \"\\\" since the query selector wasn't defined.\"), typeOrFunc);\n                selectors = [];\n            }\n            else {\n                selectors = [this._getTokenMetadata(q.selector)];\n            }\n        }\n        return {\n            selectors: selectors,\n            first: q.first,\n            descendants: q.descendants, propertyName: propertyName,\n            read: q.read ? this._getTokenMetadata(q.read) : ((null))\n        };\n    };\n    /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._reportError = function (error, type, otherType) {\n        if (this._errorCollector) {\n            this._errorCollector(error, type);\n            if (otherType) {\n                this._errorCollector(error, otherType);\n            }\n        }\n        else {\n            throw error;\n        }\n    };\n    return CompileMetadataResolver;\n}());\nCompileMetadataResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nCompileMetadataResolver.ctorParameters = function () { return [\n    { type: CompilerConfig, },\n    { type: NgModuleResolver, },\n    { type: DirectiveResolver, },\n    { type: PipeResolver, },\n    { type: SummaryResolver, },\n    { type: ElementSchemaRegistry, },\n    { type: DirectiveNormalizer, },\n    { type: _angular_core.ɵConsole, },\n    { type: StaticSymbolCache, decorators: [{ type: _angular_core.Optional },] },\n    { type: _angular_core.ɵReflectorReader, },\n    { type: undefined, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [ERROR_COLLECTOR_TOKEN,] },] },\n]; };\n/**\n * @param {?} tree\n * @param {?=} out\n * @return {?}\n */\nfunction flattenArray(tree, out) {\n    if (out === void 0) { out = []; }\n    if (tree) {\n        for (var /** @type {?} */ i = 0; i < tree.length; i++) {\n            var /** @type {?} */ item = _angular_core.resolveForwardRef(tree[i]);\n            if (Array.isArray(item)) {\n                flattenArray(item, out);\n            }\n            else {\n                out.push(item);\n            }\n        }\n    }\n    return out;\n}\n/**\n * @param {?} array\n * @return {?}\n */\nfunction dedupeArray(array) {\n    if (array) {\n        return Array.from(new Set(array));\n    }\n    return [];\n}\n/**\n * @param {?} tree\n * @return {?}\n */\nfunction flattenAndDedupeArray(tree) {\n    return dedupeArray(flattenArray(tree));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValidType(value) {\n    return (value instanceof StaticSymbol) || (value instanceof _angular_core.Type);\n}\n/**\n * @param {?} reflector\n * @param {?} type\n * @param {?} cmpMetadata\n * @return {?}\n */\nfunction componentModuleUrl(reflector, type, cmpMetadata) {\n    if (type instanceof StaticSymbol) {\n        return reflector.resourceUri(type);\n    }\n    var /** @type {?} */ moduleId = cmpMetadata.moduleId;\n    if (typeof moduleId === 'string') {\n        var /** @type {?} */ scheme = getUrlScheme(moduleId);\n        return scheme ? moduleId : \"package:\" + moduleId + MODULE_SUFFIX;\n    }\n    else if (moduleId !== null && moduleId !== void 0) {\n        throw syntaxError(\"moduleId should be a string in \\\"\" + stringifyType(type) + \"\\\". See https://goo.gl/wIDDiL for more information.\\n\" +\n            \"If you're using Webpack you should inline the template and the styles, see https://goo.gl/X2J8zc.\");\n    }\n    return ((reflector.importUri(type)));\n}\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nfunction extractIdentifiers(value, targetIdentifiers) {\n    visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\nvar _CompileValueConverter = (function (_super) {\n    __extends(_CompileValueConverter, _super);\n    function _CompileValueConverter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    _CompileValueConverter.prototype.visitOther = function (value, targetIdentifiers) {\n        targetIdentifiers.push({ reference: value });\n    };\n    return _CompileValueConverter;\n}(ValueTransformer));\n/**\n * @param {?} type\n * @return {?}\n */\nfunction stringifyType(type) {\n    if (type instanceof StaticSymbol) {\n        return type.name + \" in \" + type.filePath;\n    }\n    else {\n        return _angular_core.ɵstringify(type);\n    }\n}\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n * @param {?} compType\n * @return {?}\n */\nfunction componentStillLoadingError(compType) {\n    var /** @type {?} */ error = Error(\"Can't compile synchronously as \" + _angular_core.ɵstringify(compType) + \" is still being loaded!\");\n    ((error))[_angular_core.ɵERROR_COMPONENT_TYPE] = compType;\n    return error;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TypeModifier = {};\nTypeModifier.Const = 0;\nTypeModifier[TypeModifier.Const] = \"Const\";\n/**\n * @abstract\n */\nvar Type$1 = (function () {\n    /**\n     * @param {?=} modifiers\n     */\n    function Type$1(modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n    }\n    /**\n     * @abstract\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Type$1.prototype.visitType = function (visitor, context) { };\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Type$1.prototype.hasModifier = function (modifier) { return ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Type$1;\n}());\nvar BuiltinTypeName = {};\nBuiltinTypeName.Dynamic = 0;\nBuiltinTypeName.Bool = 1;\nBuiltinTypeName.String = 2;\nBuiltinTypeName.Int = 3;\nBuiltinTypeName.Number = 4;\nBuiltinTypeName.Function = 5;\nBuiltinTypeName.Inferred = 6;\nBuiltinTypeName[BuiltinTypeName.Dynamic] = \"Dynamic\";\nBuiltinTypeName[BuiltinTypeName.Bool] = \"Bool\";\nBuiltinTypeName[BuiltinTypeName.String] = \"String\";\nBuiltinTypeName[BuiltinTypeName.Int] = \"Int\";\nBuiltinTypeName[BuiltinTypeName.Number] = \"Number\";\nBuiltinTypeName[BuiltinTypeName.Function] = \"Function\";\nBuiltinTypeName[BuiltinTypeName.Inferred] = \"Inferred\";\nvar BuiltinType = (function (_super) {\n    __extends(BuiltinType, _super);\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     */\n    function BuiltinType(name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BuiltinType.prototype.visitType = function (visitor, context) {\n        return visitor.visitBuiltintType(this, context);\n    };\n    return BuiltinType;\n}(Type$1));\nvar ExpressionType = (function (_super) {\n    __extends(ExpressionType, _super);\n    /**\n     * @param {?} value\n     * @param {?=} modifiers\n     */\n    function ExpressionType(value, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionType.prototype.visitType = function (visitor, context) {\n        return visitor.visitExpressionType(this, context);\n    };\n    return ExpressionType;\n}(Type$1));\nvar ArrayType = (function (_super) {\n    __extends(ArrayType, _super);\n    /**\n     * @param {?} of\n     * @param {?=} modifiers\n     */\n    function ArrayType(of, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.of = of;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ArrayType.prototype.visitType = function (visitor, context) {\n        return visitor.visitArrayType(this, context);\n    };\n    return ArrayType;\n}(Type$1));\nvar MapType = (function (_super) {\n    __extends(MapType, _super);\n    /**\n     * @param {?} valueType\n     * @param {?=} modifiers\n     */\n    function MapType(valueType, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.valueType = valueType || null;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    MapType.prototype.visitType = function (visitor, context) { return visitor.visitMapType(this, context); };\n    return MapType;\n}(Type$1));\nvar DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\nvar INFERRED_TYPE = new BuiltinType(BuiltinTypeName.Inferred);\nvar BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\nvar INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\nvar NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\nvar STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\nvar FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\nvar BinaryOperator = {};\nBinaryOperator.Equals = 0;\nBinaryOperator.NotEquals = 1;\nBinaryOperator.Identical = 2;\nBinaryOperator.NotIdentical = 3;\nBinaryOperator.Minus = 4;\nBinaryOperator.Plus = 5;\nBinaryOperator.Divide = 6;\nBinaryOperator.Multiply = 7;\nBinaryOperator.Modulo = 8;\nBinaryOperator.And = 9;\nBinaryOperator.Or = 10;\nBinaryOperator.Lower = 11;\nBinaryOperator.LowerEquals = 12;\nBinaryOperator.Bigger = 13;\nBinaryOperator.BiggerEquals = 14;\nBinaryOperator[BinaryOperator.Equals] = \"Equals\";\nBinaryOperator[BinaryOperator.NotEquals] = \"NotEquals\";\nBinaryOperator[BinaryOperator.Identical] = \"Identical\";\nBinaryOperator[BinaryOperator.NotIdentical] = \"NotIdentical\";\nBinaryOperator[BinaryOperator.Minus] = \"Minus\";\nBinaryOperator[BinaryOperator.Plus] = \"Plus\";\nBinaryOperator[BinaryOperator.Divide] = \"Divide\";\nBinaryOperator[BinaryOperator.Multiply] = \"Multiply\";\nBinaryOperator[BinaryOperator.Modulo] = \"Modulo\";\nBinaryOperator[BinaryOperator.And] = \"And\";\nBinaryOperator[BinaryOperator.Or] = \"Or\";\nBinaryOperator[BinaryOperator.Lower] = \"Lower\";\nBinaryOperator[BinaryOperator.LowerEquals] = \"LowerEquals\";\nBinaryOperator[BinaryOperator.Bigger] = \"Bigger\";\nBinaryOperator[BinaryOperator.BiggerEquals] = \"BiggerEquals\";\n/**\n * @abstract\n */\nvar Expression = (function () {\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     */\n    function Expression(type, sourceSpan) {\n        this.type = type || null;\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @abstract\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Expression.prototype.visitExpression = function (visitor, context) { };\n    /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.prop = function (name, sourceSpan) {\n        return new ReadPropExpr(this, name, null, sourceSpan);\n    };\n    /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.key = function (index, type, sourceSpan) {\n        return new ReadKeyExpr(this, index, type, sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callMethod = function (name, params, sourceSpan) {\n        return new InvokeMethodExpr(this, name, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callFn = function (params, sourceSpan) {\n        return new InvokeFunctionExpr(this, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.instantiate = function (params, type, sourceSpan) {\n        return new InstantiateExpr(this, params, type, sourceSpan);\n    };\n    /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.conditional = function (trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        return new ConditionalExpr(this, trueCase, falseCase, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.equals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notEquals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.identical = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notIdentical = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.minus = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.plus = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.divide = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.multiply = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.modulo = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.and = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.And, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.or = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lower = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lowerEquals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.bigger = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.biggerEquals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.isBlank = function (sourceSpan) {\n        // Note: We use equals by purpose here to compare to null and undefined in JS.\n        // We use the typed null to allow strictNullChecks to narrow types.\n        return this.equals(TYPED_NULL_EXPR, sourceSpan);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.cast = function (type, sourceSpan) {\n        return new CastExpr(this, type, sourceSpan);\n    };\n    /**\n     * @return {?}\n     */\n    Expression.prototype.toStmt = function () { return new ExpressionStatement(this, null); };\n    return Expression;\n}());\nvar BuiltinVar = {};\nBuiltinVar.This = 0;\nBuiltinVar.Super = 1;\nBuiltinVar.CatchError = 2;\nBuiltinVar.CatchStack = 3;\nBuiltinVar[BuiltinVar.This] = \"This\";\nBuiltinVar[BuiltinVar.Super] = \"Super\";\nBuiltinVar[BuiltinVar.CatchError] = \"CatchError\";\nBuiltinVar[BuiltinVar.CatchStack] = \"CatchStack\";\nvar ReadVarExpr = (function (_super) {\n    __extends(ReadVarExpr, _super);\n    /**\n     * @param {?} name\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function ReadVarExpr(name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        if (typeof name === 'string') {\n            _this.name = name;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = name;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadVarExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitReadVarExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadVarExpr.prototype.set = function (value) {\n        if (!this.name) {\n            throw new Error(\"Built in variable \" + this.builtin + \" can not be assigned to.\");\n        }\n        return new WriteVarExpr(this.name, value, null, this.sourceSpan);\n    };\n    return ReadVarExpr;\n}(Expression));\nvar WriteVarExpr = (function (_super) {\n    __extends(WriteVarExpr, _super);\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function WriteVarExpr(name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteVarExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWriteVarExpr(this, context);\n    };\n    /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    WriteVarExpr.prototype.toDeclStmt = function (type, modifiers) {\n        return new DeclareVarStmt(this.name, this.value, type, modifiers, this.sourceSpan);\n    };\n    return WriteVarExpr;\n}(Expression));\nvar WriteKeyExpr = (function (_super) {\n    __extends(WriteKeyExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} index\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function WriteKeyExpr(receiver, index, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWriteKeyExpr(this, context);\n    };\n    return WriteKeyExpr;\n}(Expression));\nvar WritePropExpr = (function (_super) {\n    __extends(WritePropExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function WritePropExpr(receiver, name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WritePropExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWritePropExpr(this, context);\n    };\n    return WritePropExpr;\n}(Expression));\nvar BuiltinMethod = {};\nBuiltinMethod.ConcatArray = 0;\nBuiltinMethod.SubscribeObservable = 1;\nBuiltinMethod.Bind = 2;\nBuiltinMethod[BuiltinMethod.ConcatArray] = \"ConcatArray\";\nBuiltinMethod[BuiltinMethod.SubscribeObservable] = \"SubscribeObservable\";\nBuiltinMethod[BuiltinMethod.Bind] = \"Bind\";\nvar InvokeMethodExpr = (function (_super) {\n    __extends(InvokeMethodExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} method\n     * @param {?} args\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function InvokeMethodExpr(receiver, method, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.args = args;\n        if (typeof method === 'string') {\n            _this.name = method;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = method;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitInvokeMethodExpr(this, context);\n    };\n    return InvokeMethodExpr;\n}(Expression));\nvar InvokeFunctionExpr = (function (_super) {\n    __extends(InvokeFunctionExpr, _super);\n    /**\n     * @param {?} fn\n     * @param {?} args\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function InvokeFunctionExpr(fn, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.fn = fn;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitInvokeFunctionExpr(this, context);\n    };\n    return InvokeFunctionExpr;\n}(Expression));\nvar InstantiateExpr = (function (_super) {\n    __extends(InstantiateExpr, _super);\n    /**\n     * @param {?} classExpr\n     * @param {?} args\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function InstantiateExpr(classExpr, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.classExpr = classExpr;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InstantiateExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitInstantiateExpr(this, context);\n    };\n    return InstantiateExpr;\n}(Expression));\nvar LiteralExpr = (function (_super) {\n    __extends(LiteralExpr, _super);\n    /**\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function LiteralExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitLiteralExpr(this, context);\n    };\n    return LiteralExpr;\n}(Expression));\nvar ExternalExpr = (function (_super) {\n    __extends(ExternalExpr, _super);\n    /**\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} typeParams\n     * @param {?=} sourceSpan\n     */\n    function ExternalExpr(value, type, typeParams, sourceSpan) {\n        if (typeParams === void 0) { typeParams = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        _this.typeParams = typeParams;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExternalExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitExternalExpr(this, context);\n    };\n    return ExternalExpr;\n}(Expression));\nvar ConditionalExpr = (function (_super) {\n    __extends(ConditionalExpr, _super);\n    /**\n     * @param {?} condition\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function ConditionalExpr(condition, trueCase, falseCase, type, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        var _this = _super.call(this, type || trueCase.type, sourceSpan) || this;\n        _this.condition = condition;\n        _this.falseCase = falseCase;\n        _this.trueCase = trueCase;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ConditionalExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitConditionalExpr(this, context);\n    };\n    return ConditionalExpr;\n}(Expression));\nvar NotExpr = (function (_super) {\n    __extends(NotExpr, _super);\n    /**\n     * @param {?} condition\n     * @param {?=} sourceSpan\n     */\n    function NotExpr(condition, sourceSpan) {\n        var _this = _super.call(this, BOOL_TYPE, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NotExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitNotExpr(this, context);\n    };\n    return NotExpr;\n}(Expression));\nvar AssertNotNull = (function (_super) {\n    __extends(AssertNotNull, _super);\n    /**\n     * @param {?} condition\n     * @param {?=} sourceSpan\n     */\n    function AssertNotNull(condition, sourceSpan) {\n        var _this = _super.call(this, condition.type, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AssertNotNull.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitAssertNotNullExpr(this, context);\n    };\n    return AssertNotNull;\n}(Expression));\nvar CastExpr = (function (_super) {\n    __extends(CastExpr, _super);\n    /**\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function CastExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CastExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitCastExpr(this, context);\n    };\n    return CastExpr;\n}(Expression));\nvar FnParam = (function () {\n    /**\n     * @param {?} name\n     * @param {?=} type\n     */\n    function FnParam(name, type) {\n        if (type === void 0) { type = null; }\n        this.name = name;\n        this.type = type;\n    }\n    return FnParam;\n}());\nvar FunctionExpr = (function (_super) {\n    __extends(FunctionExpr, _super);\n    /**\n     * @param {?} params\n     * @param {?} statements\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function FunctionExpr(params, statements, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.params = params;\n        _this.statements = statements;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    FunctionExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitFunctionExpr(this, context);\n    };\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    FunctionExpr.prototype.toDeclStmt = function (name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers, this.sourceSpan);\n    };\n    return FunctionExpr;\n}(Expression));\nvar BinaryOperatorExpr = (function (_super) {\n    __extends(BinaryOperatorExpr, _super);\n    /**\n     * @param {?} operator\n     * @param {?} lhs\n     * @param {?} rhs\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function BinaryOperatorExpr(operator, lhs, rhs, type, sourceSpan) {\n        var _this = _super.call(this, type || lhs.type, sourceSpan) || this;\n        _this.operator = operator;\n        _this.rhs = rhs;\n        _this.lhs = lhs;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitBinaryOperatorExpr(this, context);\n    };\n    return BinaryOperatorExpr;\n}(Expression));\nvar ReadPropExpr = (function (_super) {\n    __extends(ReadPropExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function ReadPropExpr(receiver, name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadPropExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitReadPropExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadPropExpr.prototype.set = function (value) {\n        return new WritePropExpr(this.receiver, this.name, value, null, this.sourceSpan);\n    };\n    return ReadPropExpr;\n}(Expression));\nvar ReadKeyExpr = (function (_super) {\n    __extends(ReadKeyExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function ReadKeyExpr(receiver, index, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitReadKeyExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.set = function (value) {\n        return new WriteKeyExpr(this.receiver, this.index, value, null, this.sourceSpan);\n    };\n    return ReadKeyExpr;\n}(Expression));\nvar LiteralArrayExpr = (function (_super) {\n    __extends(LiteralArrayExpr, _super);\n    /**\n     * @param {?} entries\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function LiteralArrayExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitLiteralArrayExpr(this, context);\n    };\n    return LiteralArrayExpr;\n}(Expression));\nvar LiteralMapEntry = (function () {\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @param {?=} quoted\n     */\n    function LiteralMapEntry(key, value, quoted) {\n        if (quoted === void 0) { quoted = false; }\n        this.key = key;\n        this.value = value;\n        this.quoted = quoted;\n    }\n    return LiteralMapEntry;\n}());\nvar LiteralMapExpr = (function (_super) {\n    __extends(LiteralMapExpr, _super);\n    /**\n     * @param {?} entries\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function LiteralMapExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        _this.valueType = null;\n        if (type) {\n            _this.valueType = type.valueType;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitLiteralMapExpr(this, context);\n    };\n    return LiteralMapExpr;\n}(Expression));\nvar CommaExpr = (function (_super) {\n    __extends(CommaExpr, _super);\n    /**\n     * @param {?} parts\n     * @param {?=} sourceSpan\n     */\n    function CommaExpr(parts, sourceSpan) {\n        var _this = _super.call(this, parts[parts.length - 1].type, sourceSpan) || this;\n        _this.parts = parts;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommaExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitCommaExpr(this, context);\n    };\n    return CommaExpr;\n}(Expression));\nvar THIS_EXPR = new ReadVarExpr(BuiltinVar.This, null, null);\nvar SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super, null, null);\nvar CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError, null, null);\nvar CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack, null, null);\nvar NULL_EXPR = new LiteralExpr(null, null, null);\nvar TYPED_NULL_EXPR = new LiteralExpr(null, INFERRED_TYPE, null);\nvar StmtModifier = {};\nStmtModifier.Final = 0;\nStmtModifier.Private = 1;\nStmtModifier[StmtModifier.Final] = \"Final\";\nStmtModifier[StmtModifier.Private] = \"Private\";\n/**\n * @abstract\n */\nvar Statement = (function () {\n    /**\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    function Statement(modifiers, sourceSpan) {\n        this.modifiers = modifiers || [];\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @abstract\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Statement.prototype.visitStatement = function (visitor, context) { };\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Statement.prototype.hasModifier = function (modifier) { return ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Statement;\n}());\nvar DeclareVarStmt = (function (_super) {\n    __extends(DeclareVarStmt, _super);\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    function DeclareVarStmt(name, value, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        _this.type = type || value.type;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitDeclareVarStmt(this, context);\n    };\n    return DeclareVarStmt;\n}(Statement));\nvar DeclareFunctionStmt = (function (_super) {\n    __extends(DeclareFunctionStmt, _super);\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?} statements\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    function DeclareFunctionStmt(name, params, statements, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.statements = statements;\n        _this.type = type || null;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitDeclareFunctionStmt(this, context);\n    };\n    return DeclareFunctionStmt;\n}(Statement));\nvar ExpressionStatement = (function (_super) {\n    __extends(ExpressionStatement, _super);\n    /**\n     * @param {?} expr\n     * @param {?=} sourceSpan\n     */\n    function ExpressionStatement(expr, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.expr = expr;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionStatement.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitExpressionStmt(this, context);\n    };\n    return ExpressionStatement;\n}(Statement));\nvar ReturnStatement = (function (_super) {\n    __extends(ReturnStatement, _super);\n    /**\n     * @param {?} value\n     * @param {?=} sourceSpan\n     */\n    function ReturnStatement(value, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReturnStatement.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitReturnStmt(this, context);\n    };\n    return ReturnStatement;\n}(Statement));\nvar AbstractClassPart = (function () {\n    /**\n     * @param {?} type\n     * @param {?} modifiers\n     */\n    function AbstractClassPart(type, modifiers) {\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n        this.type = type || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    AbstractClassPart.prototype.hasModifier = function (modifier) { return ((this.modifiers)).indexOf(modifier) !== -1; };\n    return AbstractClassPart;\n}());\nvar ClassMethod = (function (_super) {\n    __extends(ClassMethod, _super);\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?} body\n     * @param {?=} type\n     * @param {?=} modifiers\n     */\n    function ClassMethod(name, params, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.body = body;\n        return _this;\n    }\n    return ClassMethod;\n}(AbstractClassPart));\nvar ClassGetter = (function (_super) {\n    __extends(ClassGetter, _super);\n    /**\n     * @param {?} name\n     * @param {?} body\n     * @param {?=} type\n     * @param {?=} modifiers\n     */\n    function ClassGetter(name, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.body = body;\n        return _this;\n    }\n    return ClassGetter;\n}(AbstractClassPart));\nvar ClassStmt = (function (_super) {\n    __extends(ClassStmt, _super);\n    /**\n     * @param {?} name\n     * @param {?} parent\n     * @param {?} fields\n     * @param {?} getters\n     * @param {?} constructorMethod\n     * @param {?} methods\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    function ClassStmt(name, parent, fields, getters, constructorMethod, methods, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.parent = parent;\n        _this.fields = fields;\n        _this.getters = getters;\n        _this.constructorMethod = constructorMethod;\n        _this.methods = methods;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ClassStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitDeclareClassStmt(this, context);\n    };\n    return ClassStmt;\n}(Statement));\nvar IfStmt = (function (_super) {\n    __extends(IfStmt, _super);\n    /**\n     * @param {?} condition\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     */\n    function IfStmt(condition, trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = []; }\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.condition = condition;\n        _this.trueCase = trueCase;\n        _this.falseCase = falseCase;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    IfStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitIfStmt(this, context);\n    };\n    return IfStmt;\n}(Statement));\nvar TryCatchStmt = (function (_super) {\n    __extends(TryCatchStmt, _super);\n    /**\n     * @param {?} bodyStmts\n     * @param {?} catchStmts\n     * @param {?=} sourceSpan\n     */\n    function TryCatchStmt(bodyStmts, catchStmts, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.bodyStmts = bodyStmts;\n        _this.catchStmts = catchStmts;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TryCatchStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitTryCatchStmt(this, context);\n    };\n    return TryCatchStmt;\n}(Statement));\nvar ThrowStmt = (function (_super) {\n    __extends(ThrowStmt, _super);\n    /**\n     * @param {?} error\n     * @param {?=} sourceSpan\n     */\n    function ThrowStmt(error, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.error = error;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ThrowStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitThrowStmt(this, context);\n    };\n    return ThrowStmt;\n}(Statement));\nvar AstTransformer$1 = (function () {\n    function AstTransformer$1() {\n    }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.transformExpr = function (expr, context) { return expr; };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.transformStmt = function (stmt, context) { return stmt; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitReadVarExpr = function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitWriteVarExpr = function (expr, context) {\n        return this.transformExpr(new WriteVarExpr(expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitWriteKeyExpr = function (expr, context) {\n        return this.transformExpr(new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitWritePropExpr = function (expr, context) {\n        return this.transformExpr(new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitInvokeMethodExpr = function (ast, context) {\n        var /** @type {?} */ method = ast.builtin || ast.name;\n        return this.transformExpr(new InvokeMethodExpr(ast.receiver.visitExpression(this, context), /** @type {?} */ ((method)), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitInvokeFunctionExpr = function (ast, context) {\n        return this.transformExpr(new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitInstantiateExpr = function (ast, context) {\n        return this.transformExpr(new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitLiteralExpr = function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitExternalExpr = function (ast, context) {\n        return this.transformExpr(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitConditionalExpr = function (ast, context) {\n        return this.transformExpr(new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), /** @type {?} */ ((ast.falseCase)).visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitNotExpr = function (ast, context) {\n        return this.transformExpr(new NotExpr(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitAssertNotNullExpr = function (ast, context) {\n        return this.transformExpr(new AssertNotNull(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitCastExpr = function (ast, context) {\n        return this.transformExpr(new CastExpr(ast.value.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitFunctionExpr = function (ast, context) {\n        return this.transformExpr(new FunctionExpr(ast.params, this.visitAllStatements(ast.statements, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitBinaryOperatorExpr = function (ast, context) {\n        return this.transformExpr(new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitReadPropExpr = function (ast, context) {\n        return this.transformExpr(new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitReadKeyExpr = function (ast, context) {\n        return this.transformExpr(new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitLiteralArrayExpr = function (ast, context) {\n        return this.transformExpr(new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitLiteralMapExpr = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ entries = ast.entries.map(function (entry) { return new LiteralMapEntry(entry.key, entry.value.visitExpression(_this, context), entry.quoted); });\n        var /** @type {?} */ mapType = new MapType(ast.valueType, null);\n        return this.transformExpr(new LiteralMapExpr(entries, mapType, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitCommaExpr = function (ast, context) {\n        return this.transformExpr(new CommaExpr(this.visitAllExpressions(ast.parts, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitAllExpressions = function (exprs, context) {\n        var _this = this;\n        return exprs.map(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitDeclareVarStmt = function (stmt, context) {\n        return this.transformStmt(new DeclareVarStmt(stmt.name, stmt.value.visitExpression(this, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n        return this.transformStmt(new DeclareFunctionStmt(stmt.name, stmt.params, this.visitAllStatements(stmt.statements, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitExpressionStmt = function (stmt, context) {\n        return this.transformStmt(new ExpressionStatement(stmt.expr.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitReturnStmt = function (stmt, context) {\n        return this.transformStmt(new ReturnStatement(stmt.value.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitDeclareClassStmt = function (stmt, context) {\n        var _this = this;\n        var /** @type {?} */ parent = ((stmt.parent)).visitExpression(this, context);\n        var /** @type {?} */ getters = stmt.getters.map(function (getter) { return new ClassGetter(getter.name, _this.visitAllStatements(getter.body, context), getter.type, getter.modifiers); });\n        var /** @type {?} */ ctorMethod = stmt.constructorMethod &&\n            new ClassMethod(stmt.constructorMethod.name, stmt.constructorMethod.params, this.visitAllStatements(stmt.constructorMethod.body, context), stmt.constructorMethod.type, stmt.constructorMethod.modifiers);\n        var /** @type {?} */ methods = stmt.methods.map(function (method) { return new ClassMethod(method.name, method.params, _this.visitAllStatements(method.body, context), method.type, method.modifiers); });\n        return this.transformStmt(new ClassStmt(stmt.name, parent, stmt.fields, getters, ctorMethod, methods, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitIfStmt = function (stmt, context) {\n        return this.transformStmt(new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitTryCatchStmt = function (stmt, context) {\n        return this.transformStmt(new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitThrowStmt = function (stmt, context) {\n        return this.transformStmt(new ThrowStmt(stmt.error.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitCommentStmt = function (stmt, context) {\n        return this.transformStmt(stmt, context);\n    };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitAllStatements = function (stmts, context) {\n        var _this = this;\n        return stmts.map(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return AstTransformer$1;\n}());\nvar RecursiveAstVisitor$1 = (function () {\n    function RecursiveAstVisitor$1() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitReadVarExpr = function (ast, context) { return ast; };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitWriteVarExpr = function (expr, context) {\n        expr.value.visitExpression(this, context);\n        return expr;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitWriteKeyExpr = function (expr, context) {\n        expr.receiver.visitExpression(this, context);\n        expr.index.visitExpression(this, context);\n        expr.value.visitExpression(this, context);\n        return expr;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitWritePropExpr = function (expr, context) {\n        expr.receiver.visitExpression(this, context);\n        expr.value.visitExpression(this, context);\n        return expr;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitInvokeMethodExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitInvokeFunctionExpr = function (ast, context) {\n        ast.fn.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitInstantiateExpr = function (ast, context) {\n        ast.classExpr.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitLiteralExpr = function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitExternalExpr = function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitConditionalExpr = function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        ast.trueCase.visitExpression(this, context); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitNotExpr = function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitAssertNotNullExpr = function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitCastExpr = function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitFunctionExpr = function (ast, context) {\n        this.visitAllStatements(ast.statements, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitBinaryOperatorExpr = function (ast, context) {\n        ast.lhs.visitExpression(this, context);\n        ast.rhs.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitReadPropExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitReadKeyExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitLiteralArrayExpr = function (ast, context) {\n        this.visitAllExpressions(ast.entries, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitLiteralMapExpr = function (ast, context) {\n        var _this = this;\n        ast.entries.forEach(function (entry) { return entry.value.visitExpression(_this, context); });\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitCommaExpr = function (ast, context) {\n        this.visitAllExpressions(ast.parts, context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitAllExpressions = function (exprs, context) {\n        var _this = this;\n        exprs.forEach(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitDeclareVarStmt = function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n        this.visitAllStatements(stmt.statements, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitExpressionStmt = function (stmt, context) {\n        stmt.expr.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitReturnStmt = function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitDeclareClassStmt = function (stmt, context) {\n        var _this = this;\n        ((stmt.parent)).visitExpression(this, context);\n        stmt.getters.forEach(function (getter) { return _this.visitAllStatements(getter.body, context); });\n        if (stmt.constructorMethod) {\n            this.visitAllStatements(stmt.constructorMethod.body, context);\n        }\n        stmt.methods.forEach(function (method) { return _this.visitAllStatements(method.body, context); });\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitIfStmt = function (stmt, context) {\n        stmt.condition.visitExpression(this, context);\n        this.visitAllStatements(stmt.trueCase, context);\n        this.visitAllStatements(stmt.falseCase, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitTryCatchStmt = function (stmt, context) {\n        this.visitAllStatements(stmt.bodyStmts, context);\n        this.visitAllStatements(stmt.catchStmts, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitThrowStmt = function (stmt, context) {\n        stmt.error.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitCommentStmt = function (stmt, context) { return stmt; };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitAllStatements = function (stmts, context) {\n        var _this = this;\n        stmts.forEach(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return RecursiveAstVisitor$1;\n}());\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction findReadVarNames(stmts) {\n    var /** @type {?} */ visitor = new _ReadVarVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.varNames;\n}\nvar _ReadVarVisitor = (function (_super) {\n    __extends(_ReadVarVisitor, _super);\n    function _ReadVarVisitor() {\n        var _this = _super.apply(this, arguments) || this;\n        _this.varNames = new Set();\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n        // Don't descend into nested functions\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareClassStmt = function (stmt, context) {\n        // Don't descend into nested classes\n        return stmt;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitReadVarExpr = function (ast, context) {\n        if (ast.name) {\n            this.varNames.add(ast.name);\n        }\n        return null;\n    };\n    return _ReadVarVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmt\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToStatementIfNeeded(stmt, sourceSpan) {\n    if (!sourceSpan) {\n        return stmt;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return stmt.visitStatement(transformer, null);\n}\n/**\n * @param {?} expr\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToExpressionIfNeeded(expr, sourceSpan) {\n    if (!sourceSpan) {\n        return expr;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return expr.visitExpression(transformer, null);\n}\nvar _ApplySourceSpanTransformer = (function (_super) {\n    __extends(_ApplySourceSpanTransformer, _super);\n    /**\n     * @param {?} sourceSpan\n     */\n    function _ApplySourceSpanTransformer(sourceSpan) {\n        var _this = _super.call(this) || this;\n        _this.sourceSpan = sourceSpan;\n        return _this;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype._clone = function (obj) {\n        var /** @type {?} */ clone = Object.create(obj.constructor.prototype);\n        for (var /** @type {?} */ prop in obj) {\n            clone[prop] = obj[prop];\n        }\n        return clone;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformExpr = function (expr, context) {\n        if (!expr.sourceSpan) {\n            expr = this._clone(expr);\n            expr.sourceSpan = this.sourceSpan;\n        }\n        return expr;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformStmt = function (stmt, context) {\n        if (!stmt.sourceSpan) {\n            stmt = this._clone(stmt);\n            stmt.sourceSpan = this.sourceSpan;\n        }\n        return stmt;\n    };\n    return _ApplySourceSpanTransformer;\n}(AstTransformer$1));\n/**\n * @param {?} name\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction variable(name, type, sourceSpan) {\n    return new ReadVarExpr(name, type, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction importExpr(id, typeParams, sourceSpan) {\n    if (typeParams === void 0) { typeParams = null; }\n    return new ExternalExpr(id, null, typeParams, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction importType(id, typeParams, typeModifiers) {\n    if (typeParams === void 0) { typeParams = null; }\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return id != null ? expressionType(importExpr(id, typeParams, null), typeModifiers) : null;\n}\n/**\n * @param {?} expr\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction expressionType(expr, typeModifiers) {\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return expr != null ? ((new ExpressionType(expr, typeModifiers))) : null;\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literalArr(values, type, sourceSpan) {\n    return new LiteralArrayExpr(values, type, sourceSpan);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @param {?=} quoted\n * @return {?}\n */\nfunction literalMap(values, type, quoted) {\n    if (type === void 0) { type = null; }\n    if (quoted === void 0) { quoted = false; }\n    return new LiteralMapExpr(values.map(function (entry) { return new LiteralMapEntry(entry[0], entry[1], quoted); }), type, null);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction not(expr, sourceSpan) {\n    return new NotExpr(expr, sourceSpan);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction assertNotNull(expr, sourceSpan) {\n    return new AssertNotNull(expr, sourceSpan);\n}\n/**\n * @param {?} params\n * @param {?} body\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction fn(params, body, type, sourceSpan) {\n    return new FunctionExpr(params, body, type, sourceSpan);\n}\n/**\n * @param {?} value\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literal(value, type, sourceSpan) {\n    return new LiteralExpr(value, type, sourceSpan);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUOTED_KEYS = '$quoted$';\n/**\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nfunction convertValueToOutputAst(value, type) {\n    if (type === void 0) { type = null; }\n    return visitValue(value, new _ValueOutputAstTransformer(), type);\n}\nvar _ValueOutputAstTransformer = (function () {\n    function _ValueOutputAstTransformer() {\n    }\n    /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitArray = function (arr, type) {\n        var _this = this;\n        return literalArr(arr.map(function (value) { return visitValue(value, _this, null); }), type);\n    };\n    /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitStringMap = function (map, type) {\n        var _this = this;\n        var /** @type {?} */ entries = [];\n        var /** @type {?} */ quotedSet = new Set(map && map[QUOTED_KEYS]);\n        Object.keys(map).forEach(function (key) {\n            entries.push(new LiteralMapEntry(key, visitValue(map[key], _this, null), quotedSet.has(key)));\n        });\n        return new LiteralMapExpr(entries, type);\n    };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitPrimitive = function (value, type) { return literal(value, type); };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitOther = function (value, type) {\n        if (value instanceof Expression) {\n            return value;\n        }\n        else {\n            return importExpr({ reference: value });\n        }\n    };\n    return _ValueOutputAstTransformer;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} providerAst\n * @return {?}\n */\nfunction providerDef(providerAst) {\n    var /** @type {?} */ flags = 0;\n    if (!providerAst.eager) {\n        flags |= 4096 /* LazyProvider */;\n    }\n    if (providerAst.providerType === ProviderAstType.PrivateService) {\n        flags |= 8192 /* PrivateProvider */;\n    }\n    providerAst.lifecycleHooks.forEach(function (lifecycleHook) {\n        // for regular providers, we only support ngOnDestroy\n        if (lifecycleHook === _angular_core.ɵLifecycleHooks.OnDestroy ||\n            providerAst.providerType === ProviderAstType.Directive ||\n            providerAst.providerType === ProviderAstType.Component) {\n            flags |= lifecycleHookToNodeFlag(lifecycleHook);\n        }\n    });\n    var _a = providerAst.multiProvider ?\n        multiProviderDef(flags, providerAst.providers) :\n        singleProviderDef(flags, providerAst.providerType, providerAst.providers[0]), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return {\n        providerExpr: providerExpr,\n        flags: providerFlags, depsExpr: depsExpr,\n        tokenExpr: tokenExpr(providerAst.token),\n    };\n}\n/**\n * @param {?} flags\n * @param {?} providers\n * @return {?}\n */\nfunction multiProviderDef(flags, providers) {\n    var /** @type {?} */ allDepDefs = [];\n    var /** @type {?} */ allParams = [];\n    var /** @type {?} */ exprs = providers.map(function (provider, providerIndex) {\n        var /** @type {?} */ expr;\n        if (provider.useClass) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useClass.diDeps);\n            expr = importExpr(provider.useClass).instantiate(depExprs);\n        }\n        else if (provider.useFactory) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useFactory.diDeps);\n            expr = importExpr(provider.useFactory).callFn(depExprs);\n        }\n        else if (provider.useExisting) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, [{ token: provider.useExisting }]);\n            expr = depExprs[0];\n        }\n        else {\n            expr = convertValueToOutputAst(provider.useValue);\n        }\n        return expr;\n    });\n    var /** @type {?} */ providerExpr = fn(allParams, [new ReturnStatement(literalArr(exprs))], INFERRED_TYPE);\n    return {\n        providerExpr: providerExpr,\n        flags: flags | 1024 /* TypeFactoryProvider */,\n        depsExpr: literalArr(allDepDefs)\n    };\n    /**\n     * @param {?} providerIndex\n     * @param {?} deps\n     * @return {?}\n     */\n    function convertDeps(providerIndex, deps) {\n        return deps.map(function (dep, depIndex) {\n            var /** @type {?} */ paramName = \"p\" + providerIndex + \"_\" + depIndex;\n            allParams.push(new FnParam(paramName, DYNAMIC_TYPE));\n            allDepDefs.push(depDef(dep));\n            return variable(paramName);\n        });\n    }\n}\n/**\n * @param {?} flags\n * @param {?} providerType\n * @param {?} providerMeta\n * @return {?}\n */\nfunction singleProviderDef(flags, providerType, providerMeta) {\n    var /** @type {?} */ providerExpr;\n    var /** @type {?} */ deps;\n    if (providerType === ProviderAstType.Directive || providerType === ProviderAstType.Component) {\n        providerExpr = importExpr(/** @type {?} */ ((providerMeta.useClass)));\n        flags |= 16384 /* TypeDirective */;\n        deps = providerMeta.deps || ((providerMeta.useClass)).diDeps;\n    }\n    else {\n        if (providerMeta.useClass) {\n            providerExpr = importExpr(providerMeta.useClass);\n            flags |= 512 /* TypeClassProvider */;\n            deps = providerMeta.deps || providerMeta.useClass.diDeps;\n        }\n        else if (providerMeta.useFactory) {\n            providerExpr = importExpr(providerMeta.useFactory);\n            flags |= 1024 /* TypeFactoryProvider */;\n            deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n        }\n        else if (providerMeta.useExisting) {\n            providerExpr = NULL_EXPR;\n            flags |= 2048 /* TypeUseExistingProvider */;\n            deps = [{ token: providerMeta.useExisting }];\n        }\n        else {\n            providerExpr = convertValueToOutputAst(providerMeta.useValue);\n            flags |= 256 /* TypeValueProvider */;\n            deps = [];\n        }\n    }\n    var /** @type {?} */ depsExpr = literalArr(deps.map(function (dep) { return depDef(dep); }));\n    return { providerExpr: providerExpr, flags: flags, depsExpr: depsExpr };\n}\n/**\n * @param {?} tokenMeta\n * @return {?}\n */\nfunction tokenExpr(tokenMeta) {\n    return tokenMeta.identifier ? importExpr(tokenMeta.identifier) : literal(tokenMeta.value);\n}\n/**\n * @param {?} dep\n * @return {?}\n */\nfunction depDef(dep) {\n    // Note: the following fields have already been normalized out by provider_analyzer:\n    // - isAttribute, isSelf, isHost\n    var /** @type {?} */ expr = dep.isValue ? convertValueToOutputAst(dep.value) : tokenExpr(/** @type {?} */ ((dep.token)));\n    var /** @type {?} */ flags = 0;\n    if (dep.isSkipSelf) {\n        flags |= 1 /* SkipSelf */;\n    }\n    if (dep.isOptional) {\n        flags |= 2 /* Optional */;\n    }\n    if (dep.isValue) {\n        flags |= 8 /* Value */;\n    }\n    return flags === 0 /* None */ ? expr : literalArr([literal(flags), expr]);\n}\n/**\n * @param {?} lifecycleHook\n * @return {?}\n */\nfunction lifecycleHookToNodeFlag(lifecycleHook) {\n    var /** @type {?} */ nodeFlag = 0;\n    switch (lifecycleHook) {\n        case _angular_core.ɵLifecycleHooks.AfterContentChecked:\n            nodeFlag = 2097152 /* AfterContentChecked */;\n            break;\n        case _angular_core.ɵLifecycleHooks.AfterContentInit:\n            nodeFlag = 1048576 /* AfterContentInit */;\n            break;\n        case _angular_core.ɵLifecycleHooks.AfterViewChecked:\n            nodeFlag = 8388608 /* AfterViewChecked */;\n            break;\n        case _angular_core.ɵLifecycleHooks.AfterViewInit:\n            nodeFlag = 4194304 /* AfterViewInit */;\n            break;\n        case _angular_core.ɵLifecycleHooks.DoCheck:\n            nodeFlag = 262144 /* DoCheck */;\n            break;\n        case _angular_core.ɵLifecycleHooks.OnChanges:\n            nodeFlag = 524288 /* OnChanges */;\n            break;\n        case _angular_core.ɵLifecycleHooks.OnDestroy:\n            nodeFlag = 131072 /* OnDestroy */;\n            break;\n        case _angular_core.ɵLifecycleHooks.OnInit:\n            nodeFlag = 65536 /* OnInit */;\n            break;\n    }\n    return nodeFlag;\n}\n/**\n * @param {?} flags\n * @param {?} entryComponents\n * @return {?}\n */\nfunction componentFactoryResolverProviderDef(flags, entryComponents) {\n    var /** @type {?} */ entryComponentFactories = entryComponents.map(function (entryComponent) { return importExpr({ reference: entryComponent.componentFactory }); });\n    var /** @type {?} */ token = createIdentifierToken(Identifiers.ComponentFactoryResolver);\n    var /** @type {?} */ classMeta = {\n        diDeps: [\n            { isValue: true, value: literalArr(entryComponentFactories) },\n            { token: token, isSkipSelf: true, isOptional: true },\n            { token: createIdentifierToken(Identifiers.NgModuleRef) },\n        ],\n        lifecycleHooks: [],\n        reference: resolveIdentifier(Identifiers.CodegenComponentFactoryResolver)\n    };\n    var _a = singleProviderDef(flags, ProviderAstType.PrivateService, {\n        token: token,\n        multi: false,\n        useClass: classMeta,\n    }), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return { providerExpr: providerExpr, flags: providerFlags, depsExpr: depsExpr, tokenExpr: tokenExpr(token) };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NgModuleCompileResult = (function () {\n    /**\n     * @param {?} statements\n     * @param {?} ngModuleFactoryVar\n     */\n    function NgModuleCompileResult(statements, ngModuleFactoryVar) {\n        this.statements = statements;\n        this.ngModuleFactoryVar = ngModuleFactoryVar;\n    }\n    return NgModuleCompileResult;\n}());\nvar LOG_VAR = variable('_l');\nvar NgModuleCompiler = (function () {\n    function NgModuleCompiler() {\n    }\n    /**\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.compile = function (ngModuleMeta, extraProviders) {\n        var /** @type {?} */ sourceSpan = typeSourceSpan('NgModule', ngModuleMeta.type);\n        var /** @type {?} */ entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents;\n        var /** @type {?} */ bootstrapComponents = ngModuleMeta.bootstrapComponents;\n        var /** @type {?} */ providerParser = new NgModuleProviderAnalyzer(ngModuleMeta, extraProviders, sourceSpan);\n        var /** @type {?} */ providerDefs = [componentFactoryResolverProviderDef(0 /* None */, entryComponentFactories)]\n            .concat(providerParser.parse().map(function (provider) { return providerDef(provider); }))\n            .map(function (_a) {\n            var providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            return importExpr(createIdentifier(Identifiers.moduleProviderDef)).callFn([\n                literal(flags), tokenExpr, providerExpr, depsExpr\n            ]);\n        });\n        var /** @type {?} */ ngModuleDef = importExpr(createIdentifier(Identifiers.moduleDef)).callFn([literalArr(providerDefs)]);\n        var /** @type {?} */ ngModuleDefFactory = fn([new FnParam(/** @type {?} */ ((LOG_VAR.name)))], [new ReturnStatement(ngModuleDef)], INFERRED_TYPE);\n        var /** @type {?} */ ngModuleFactoryVar = identifierName(ngModuleMeta.type) + \"NgFactory\";\n        var /** @type {?} */ ngModuleFactoryStmt = variable(ngModuleFactoryVar)\n            .set(importExpr(createIdentifier(Identifiers.createModuleFactory)).callFn([\n            importExpr(ngModuleMeta.type),\n            literalArr(bootstrapComponents.map(function (id) { return importExpr(id); })), ngModuleDefFactory\n        ]))\n            .toDeclStmt(importType(createIdentifier(Identifiers.NgModuleFactory), [/** @type {?} */ ((importType(ngModuleMeta.type)))], [TypeModifier.Const]), [StmtModifier.Final]);\n        var /** @type {?} */ stmts = [ngModuleFactoryStmt];\n        if (ngModuleMeta.id) {\n            var /** @type {?} */ registerFactoryStmt = importExpr(createIdentifier(Identifiers.RegisterModuleFactoryFn))\n                .callFn([literal(ngModuleMeta.id), variable(ngModuleFactoryVar)])\n                .toStmt();\n            stmts.push(registerFactoryStmt);\n        }\n        return new NgModuleCompileResult(stmts, ngModuleFactoryVar);\n    };\n    return NgModuleCompiler;\n}());\nNgModuleCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nNgModuleCompiler.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\nvar VERSION$1 = 3;\nvar JS_B64_PREFIX = '# sourceMappingURL=data:application/json;base64,';\nvar SourceMapGenerator = (function () {\n    /**\n     * @param {?=} file\n     */\n    function SourceMapGenerator(file) {\n        if (file === void 0) { file = null; }\n        this.file = file;\n        this.sourcesContent = new Map();\n        this.lines = [];\n        this.lastCol0 = 0;\n        this.hasMappings = false;\n    }\n    /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addSource = function (url, content) {\n        if (content === void 0) { content = null; }\n        if (!this.sourcesContent.has(url)) {\n            this.sourcesContent.set(url, content);\n        }\n        return this;\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addLine = function () {\n        this.lines.push([]);\n        this.lastCol0 = 0;\n        return this;\n    };\n    /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addMapping = function (col0, sourceUrl, sourceLine0, sourceCol0) {\n        if (!this.currentLine) {\n            throw new Error(\"A line must be added before mappings can be added\");\n        }\n        if (sourceUrl != null && !this.sourcesContent.has(sourceUrl)) {\n            throw new Error(\"Unknown source file \\\"\" + sourceUrl + \"\\\"\");\n        }\n        if (col0 == null) {\n            throw new Error(\"The column in the generated code must be provided\");\n        }\n        if (col0 < this.lastCol0) {\n            throw new Error(\"Mapping should be added in output order\");\n        }\n        if (sourceUrl && (sourceLine0 == null || sourceCol0 == null)) {\n            throw new Error(\"The source location must be provided when a source url is provided\");\n        }\n        this.hasMappings = true;\n        this.lastCol0 = col0;\n        this.currentLine.push({ col0: col0, sourceUrl: sourceUrl, sourceLine0: sourceLine0, sourceCol0: sourceCol0 });\n        return this;\n    };\n    Object.defineProperty(SourceMapGenerator.prototype, \"currentLine\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.lines.slice(-1)[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJSON = function () {\n        var _this = this;\n        if (!this.hasMappings) {\n            return null;\n        }\n        var /** @type {?} */ sourcesIndex = new Map();\n        var /** @type {?} */ sources = [];\n        var /** @type {?} */ sourcesContent = [];\n        Array.from(this.sourcesContent.keys()).forEach(function (url, i) {\n            sourcesIndex.set(url, i);\n            sources.push(url);\n            sourcesContent.push(_this.sourcesContent.get(url) || null);\n        });\n        var /** @type {?} */ mappings = '';\n        var /** @type {?} */ lastCol0 = 0;\n        var /** @type {?} */ lastSourceIndex = 0;\n        var /** @type {?} */ lastSourceLine0 = 0;\n        var /** @type {?} */ lastSourceCol0 = 0;\n        this.lines.forEach(function (segments) {\n            lastCol0 = 0;\n            mappings += segments\n                .map(function (segment) {\n                // zero-based starting column of the line in the generated code\n                var /** @type {?} */ segAsStr = toBase64VLQ(segment.col0 - lastCol0);\n                lastCol0 = segment.col0;\n                if (segment.sourceUrl != null) {\n                    // zero-based index into the “sources” list\n                    segAsStr +=\n                        toBase64VLQ(/** @type {?} */ ((sourcesIndex.get(segment.sourceUrl))) - lastSourceIndex);\n                    lastSourceIndex = ((sourcesIndex.get(segment.sourceUrl)));\n                    // the zero-based starting line in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceLine0)) - lastSourceLine0);\n                    lastSourceLine0 = ((segment.sourceLine0));\n                    // the zero-based starting column in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceCol0)) - lastSourceCol0);\n                    lastSourceCol0 = ((segment.sourceCol0));\n                }\n                return segAsStr;\n            })\n                .join(',');\n            mappings += ';';\n        });\n        mappings = mappings.slice(0, -1);\n        return {\n            'file': this.file || '',\n            'version': VERSION$1,\n            'sourceRoot': '',\n            'sources': sources,\n            'sourcesContent': sourcesContent,\n            'mappings': mappings,\n        };\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJsComment = function () {\n        return this.hasMappings ? '//' + JS_B64_PREFIX + toBase64String(JSON.stringify(this, null, 0)) :\n            '';\n    };\n    return SourceMapGenerator;\n}());\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64String(value) {\n    var /** @type {?} */ b64 = '';\n    value = utf8Encode(value);\n    for (var /** @type {?} */ i = 0; i < value.length;) {\n        var /** @type {?} */ i1 = value.charCodeAt(i++);\n        var /** @type {?} */ i2 = value.charCodeAt(i++);\n        var /** @type {?} */ i3 = value.charCodeAt(i++);\n        b64 += toBase64Digit(i1 >> 2);\n        b64 += toBase64Digit(((i1 & 3) << 4) | (isNaN(i2) ? 0 : i2 >> 4));\n        b64 += isNaN(i2) ? '=' : toBase64Digit(((i2 & 15) << 2) | (i3 >> 6));\n        b64 += isNaN(i2) || isNaN(i3) ? '=' : toBase64Digit(i3 & 63);\n    }\n    return b64;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64VLQ(value) {\n    value = value < 0 ? ((-value) << 1) + 1 : value << 1;\n    var /** @type {?} */ out = '';\n    do {\n        var /** @type {?} */ digit = value & 31;\n        value = value >> 5;\n        if (value > 0) {\n            digit = digit | 32;\n        }\n        out += toBase64Digit(digit);\n    } while (value > 0);\n    return out;\n}\nvar B64_DIGITS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64Digit(value) {\n    if (value < 0 || value >= 64) {\n        throw new Error(\"Can only encode value in the range [0, 63]\");\n    }\n    return B64_DIGITS[value];\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\nvar _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\nvar _INDENT_WITH = '  ';\nvar CATCH_ERROR_VAR$1 = variable('error', null, null);\nvar CATCH_STACK_VAR$1 = variable('stack', null, null);\n/**\n * @abstract\n */\nvar _EmittedLine = (function () {\n    /**\n     * @param {?} indent\n     */\n    function _EmittedLine(indent) {\n        this.indent = indent;\n        this.partsLength = 0;\n        this.parts = [];\n        this.srcSpans = [];\n    }\n    return _EmittedLine;\n}());\nvar EmitterVisitorContext = (function () {\n    /**\n     * @param {?} _exportedVars\n     * @param {?} _indent\n     */\n    function EmitterVisitorContext(_exportedVars, _indent) {\n        this._exportedVars = _exportedVars;\n        this._indent = _indent;\n        this._classes = [];\n        this._lines = [new _EmittedLine(_indent)];\n    }\n    /**\n     * @param {?} exportedVars\n     * @return {?}\n     */\n    EmitterVisitorContext.createRoot = function (exportedVars) {\n        return new EmitterVisitorContext(exportedVars, 0);\n    };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"_currentLine\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._lines[this._lines.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} varName\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.isExportedVar = function (varName) { return this._exportedVars.indexOf(varName) !== -1; };\n    /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.println = function (from, lastPart) {\n        if (lastPart === void 0) { lastPart = ''; }\n        this.print(from || null, lastPart, true);\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineIsEmpty = function () { return this._currentLine.parts.length === 0; };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineLength = function () {\n        return this._currentLine.indent * _INDENT_WITH.length + this._currentLine.partsLength;\n    };\n    /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.print = function (from, part, newLine) {\n        if (newLine === void 0) { newLine = false; }\n        if (part.length > 0) {\n            this._currentLine.parts.push(part);\n            this._currentLine.partsLength += part.length;\n            this._currentLine.srcSpans.push(from && from.sourceSpan || null);\n        }\n        if (newLine) {\n            this._lines.push(new _EmittedLine(this._indent));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.removeEmptyLastLine = function () {\n        if (this.lineIsEmpty()) {\n            this._lines.pop();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.incIndent = function () {\n        this._indent++;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.decIndent = function () {\n        this._indent--;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.pushClass = function (clazz) { this._classes.push(clazz); };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.popClass = function () { return ((this._classes.pop())); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"currentClass\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSource = function () {\n        return this.sourceLines\n            .map(function (l) { return l.parts.length > 0 ? _createIndent(l.indent) + l.parts.join('') : ''; })\n            .join('\\n');\n    };\n    /**\n     * @param {?} sourceFilePath\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSourceMapGenerator = function (sourceFilePath, genFilePath, startsAtLine) {\n        if (startsAtLine === void 0) { startsAtLine = 0; }\n        var /** @type {?} */ map = new SourceMapGenerator(genFilePath);\n        var /** @type {?} */ firstOffsetMapped = false;\n        var /** @type {?} */ mapFirstOffsetIfNeeded = function () {\n            if (!firstOffsetMapped) {\n                // Add a single space so that tools won't try to load the file from disk.\n                // Note: We are using virtual urls like `ng:///`, so we have to\n                // provide a content here.\n                map.addSource(sourceFilePath, ' ').addMapping(0, sourceFilePath, 0, 0);\n                firstOffsetMapped = true;\n            }\n        };\n        for (var /** @type {?} */ i = 0; i < startsAtLine; i++) {\n            map.addLine();\n            mapFirstOffsetIfNeeded();\n        }\n        this.sourceLines.forEach(function (line, lineIdx) {\n            map.addLine();\n            var /** @type {?} */ spans = line.srcSpans;\n            var /** @type {?} */ parts = line.parts;\n            var /** @type {?} */ col0 = line.indent * _INDENT_WITH.length;\n            var /** @type {?} */ spanIdx = 0;\n            // skip leading parts without source spans\n            while (spanIdx < spans.length && !spans[spanIdx]) {\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n            }\n            if (spanIdx < spans.length && lineIdx === 0 && col0 === 0) {\n                firstOffsetMapped = true;\n            }\n            else {\n                mapFirstOffsetIfNeeded();\n            }\n            while (spanIdx < spans.length) {\n                var /** @type {?} */ span = ((spans[spanIdx]));\n                var /** @type {?} */ source = span.start.file;\n                var /** @type {?} */ sourceLine = span.start.line;\n                var /** @type {?} */ sourceCol = span.start.col;\n                map.addSource(source.url, source.content)\n                    .addMapping(col0, source.url, sourceLine, sourceCol);\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n                // assign parts without span or the same span to the previous segment\n                while (spanIdx < spans.length && (span === spans[spanIdx] || !spans[spanIdx])) {\n                    col0 += parts[spanIdx].length;\n                    spanIdx++;\n                }\n            }\n        });\n        return map;\n    };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"sourceLines\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (this._lines.length && this._lines[this._lines.length - 1].parts.length === 0) {\n                return this._lines.slice(0, -1);\n            }\n            return this._lines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EmitterVisitorContext;\n}());\n/**\n * @abstract\n */\nvar AbstractEmitterVisitor = (function () {\n    /**\n     * @param {?} _escapeDollarInStrings\n     */\n    function AbstractEmitterVisitor(_escapeDollarInStrings) {\n        this._escapeDollarInStrings = _escapeDollarInStrings;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitExpressionStmt = function (stmt, ctx) {\n        stmt.expr.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReturnStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"return \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCastExpr = function (ast, context) { };\n    /**\n     * @abstract\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) { };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitIfStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"if (\");\n        stmt.condition.visitExpression(this, ctx);\n        ctx.print(stmt, \") {\");\n        var /** @type {?} */ hasElseCase = stmt.falseCase != null && stmt.falseCase.length > 0;\n        if (stmt.trueCase.length <= 1 && !hasElseCase) {\n            ctx.print(stmt, \" \");\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.removeEmptyLastLine();\n            ctx.print(stmt, \" \");\n        }\n        else {\n            ctx.println();\n            ctx.incIndent();\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.decIndent();\n            if (hasElseCase) {\n                ctx.println(stmt, \"} else {\");\n                ctx.incIndent();\n                this.visitAllStatements(stmt.falseCase, ctx);\n                ctx.decIndent();\n            }\n        }\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) { };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitThrowStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"throw \");\n        stmt.error.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommentStmt = function (stmt, ctx) {\n        var /** @type {?} */ lines = stmt.comment.split('\\n');\n        lines.forEach(function (line) { ctx.println(stmt, \"// \" + line); });\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) { };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteVarExpr = function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        ctx.print(expr, expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteKeyExpr = function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \"[\");\n        expr.index.visitExpression(this, ctx);\n        ctx.print(expr, \"] = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWritePropExpr = function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \".\" + expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeMethodExpr = function (expr, ctx) {\n        expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ name = expr.name;\n        if (expr.builtin != null) {\n            name = this.getBuiltinMethodName(expr.builtin);\n            if (name == null) {\n                // some builtins just mean to skip the call.\n                return null;\n            }\n        }\n        ctx.print(expr, \".\" + name + \"(\");\n        this.visitAllExpressions(expr.args, ctx, \",\");\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} method\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.getBuiltinMethodName = function (method) { };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {\n        expr.fn.visitExpression(this, ctx);\n        ctx.print(expr, \"(\");\n        this.visitAllExpressions(expr.args, ctx, ',');\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {\n        var /** @type {?} */ varName = ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    varName = 'super';\n                    break;\n                case BuiltinVar.This:\n                    varName = 'this';\n                    break;\n                case BuiltinVar.CatchError:\n                    varName = ((CATCH_ERROR_VAR$1.name));\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = ((CATCH_STACK_VAR$1.name));\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        ctx.print(ast, varName);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInstantiateExpr = function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        ast.classExpr.visitExpression(this, ctx);\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralExpr = function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (typeof value === 'string') {\n            ctx.print(ast, escapeIdentifier(value, this._escapeDollarInStrings));\n        }\n        else {\n            ctx.print(ast, \"\" + value);\n        }\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) { };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitConditionalExpr = function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        ast.condition.visitExpression(this, ctx);\n        ctx.print(ast, '? ');\n        ast.trueCase.visitExpression(this, ctx);\n        ctx.print(ast, ': '); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitNotExpr = function (ast, ctx) {\n        ctx.print(ast, '!');\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAssertNotNullExpr = function (ast, ctx) {\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) { };\n    /**\n     * @abstract\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr = function (ast, ctx) {\n        var /** @type {?} */ opStr;\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                opStr = '==';\n                break;\n            case BinaryOperator.Identical:\n                opStr = '===';\n                break;\n            case BinaryOperator.NotEquals:\n                opStr = '!=';\n                break;\n            case BinaryOperator.NotIdentical:\n                opStr = '!==';\n                break;\n            case BinaryOperator.And:\n                opStr = '&&';\n                break;\n            case BinaryOperator.Or:\n                opStr = '||';\n                break;\n            case BinaryOperator.Plus:\n                opStr = '+';\n                break;\n            case BinaryOperator.Minus:\n                opStr = '-';\n                break;\n            case BinaryOperator.Divide:\n                opStr = '/';\n                break;\n            case BinaryOperator.Multiply:\n                opStr = '*';\n                break;\n            case BinaryOperator.Modulo:\n                opStr = '%';\n                break;\n            case BinaryOperator.Lower:\n                opStr = '<';\n                break;\n            case BinaryOperator.LowerEquals:\n                opStr = '<=';\n                break;\n            case BinaryOperator.Bigger:\n                opStr = '>';\n                break;\n            case BinaryOperator.BiggerEquals:\n                opStr = '>=';\n                break;\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n        ctx.print(ast, \"(\");\n        ast.lhs.visitExpression(this, ctx);\n        ctx.print(ast, \" \" + opStr + \" \");\n        ast.rhs.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadPropExpr = function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \".\");\n        ctx.print(ast, ast.name);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadKeyExpr = function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \"[\");\n        ast.index.visitExpression(this, ctx);\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n        ctx.print(ast, \"[\");\n        this.visitAllExpressions(ast.entries, ctx, ',');\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralMapExpr = function (ast, ctx) {\n        var _this = this;\n        ctx.print(ast, \"{\");\n        this.visitAllObjects(function (entry) {\n            ctx.print(ast, escapeIdentifier(entry.key, _this._escapeDollarInStrings, entry.quoted) + \":\");\n            entry.value.visitExpression(_this, ctx);\n        }, ast.entries, ctx, ',');\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommaExpr = function (ast, ctx) {\n        ctx.print(ast, '(');\n        this.visitAllExpressions(ast.parts, ctx, ',');\n        ctx.print(ast, ')');\n        return null;\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllExpressions = function (expressions, ctx, separator) {\n        var _this = this;\n        this.visitAllObjects(function (expr) { return expr.visitExpression(_this, ctx); }, expressions, ctx, separator);\n    };\n    /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllObjects = function (handler, expressions, ctx, separator) {\n        var /** @type {?} */ incrementedIndent = false;\n        for (var /** @type {?} */ i = 0; i < expressions.length; i++) {\n            if (i > 0) {\n                if (ctx.lineLength() > 80) {\n                    ctx.print(null, separator, true);\n                    if (!incrementedIndent) {\n                        // continuation are marked with double indent.\n                        ctx.incIndent();\n                        ctx.incIndent();\n                        incrementedIndent = true;\n                    }\n                }\n                else {\n                    ctx.print(null, separator, false);\n                }\n            }\n            handler(expressions[i]);\n        }\n        if (incrementedIndent) {\n            // continuation are marked with double indent.\n            ctx.decIndent();\n            ctx.decIndent();\n        }\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllStatements = function (statements, ctx) {\n        var _this = this;\n        statements.forEach(function (stmt) { return stmt.visitStatement(_this, ctx); });\n    };\n    return AbstractEmitterVisitor;\n}());\n/**\n * @param {?} input\n * @param {?} escapeDollar\n * @param {?=} alwaysQuote\n * @return {?}\n */\nfunction escapeIdentifier(input, escapeDollar, alwaysQuote) {\n    if (alwaysQuote === void 0) { alwaysQuote = true; }\n    if (input == null) {\n        return null;\n    }\n    var /** @type {?} */ body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, function () {\n        var match = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            match[_i] = arguments[_i];\n        }\n        if (match[0] == '$') {\n            return escapeDollar ? '\\\\$' : '$';\n        }\n        else if (match[0] == '\\n') {\n            return '\\\\n';\n        }\n        else if (match[0] == '\\r') {\n            return '\\\\r';\n        }\n        else {\n            return \"\\\\\" + match[0];\n        }\n    });\n    var /** @type {?} */ requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n    return requiresQuotes ? \"'\" + body + \"'\" : body;\n}\n/**\n * @param {?} count\n * @return {?}\n */\nfunction _createIndent(count) {\n    var /** @type {?} */ res = '';\n    for (var /** @type {?} */ i = 0; i < count; i++) {\n        res += _INDENT_WITH;\n    }\n    return res;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _debugFilePath = '/debug/lib';\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction debugOutputAstAsTypeScript(ast) {\n    var /** @type {?} */ converter = new _TsEmitterVisitor(_debugFilePath, {\n        /**\n         * @param {?} filePath\n         * @param {?} containingFilePath\n         * @return {?}\n         */\n        fileNameToModuleName: function (filePath, containingFilePath) { return filePath; },\n        /**\n         * @param {?} symbol\n         * @return {?}\n         */\n        getImportAs: function (symbol) { return null; },\n        getTypeArity: function (symbol) { return null; }\n    });\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot([]);\n    var /** @type {?} */ asts = Array.isArray(ast) ? ast : [ast];\n    asts.forEach(function (ast) {\n        if (ast instanceof Statement) {\n            ast.visitStatement(converter, ctx);\n        }\n        else if (ast instanceof Expression) {\n            ast.visitExpression(converter, ctx);\n        }\n        else if (ast instanceof Type$1) {\n            ast.visitType(converter, ctx);\n        }\n        else {\n            throw new Error(\"Don't know how to print debug info for \" + ast);\n        }\n    });\n    return ctx.toSource();\n}\nvar TypeScriptEmitter = (function () {\n    /**\n     * @param {?} _importResolver\n     */\n    function TypeScriptEmitter(_importResolver) {\n        this._importResolver = _importResolver;\n    }\n    /**\n     * @param {?} srcFilePath\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?} exportedVars\n     * @param {?=} preamble\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatements = function (srcFilePath, genFilePath, stmts, exportedVars, preamble) {\n        var _this = this;\n        if (preamble === void 0) { preamble = ''; }\n        var /** @type {?} */ converter = new _TsEmitterVisitor(genFilePath, this._importResolver);\n        var /** @type {?} */ ctx = EmitterVisitorContext.createRoot(exportedVars);\n        converter.visitAllStatements(stmts, ctx);\n        var /** @type {?} */ preambleLines = preamble ? preamble.split('\\n') : [];\n        converter.reexports.forEach(function (reexports, exportedFilePath) {\n            var /** @type {?} */ reexportsCode = reexports.map(function (reexport) { return reexport.name + \" as \" + reexport.as; }).join(',');\n            preambleLines.push(\"export {\" + reexportsCode + \"} from '\" + _this._importResolver.fileNameToModuleName(exportedFilePath, genFilePath) + \"';\");\n        });\n        converter.importsWithPrefixes.forEach(function (prefix, importedFilePath) {\n            // Note: can't write the real word for import as it screws up system.js auto detection...\n            preambleLines.push(\"imp\" +\n                (\"ort * as \" + prefix + \" from '\" + _this._importResolver.fileNameToModuleName(importedFilePath, genFilePath) + \"';\"));\n        });\n        var /** @type {?} */ sm = ctx.toSourceMapGenerator(srcFilePath, genFilePath, preambleLines.length).toJsComment();\n        var /** @type {?} */ lines = preambleLines.concat([ctx.toSource(), sm]);\n        if (sm) {\n            // always add a newline at the end, as some tools have bugs without it.\n            lines.push('');\n        }\n        return lines.join('\\n');\n    };\n    return TypeScriptEmitter;\n}());\nvar _TsEmitterVisitor = (function (_super) {\n    __extends(_TsEmitterVisitor, _super);\n    /**\n     * @param {?} _genFilePath\n     * @param {?} _importResolver\n     */\n    function _TsEmitterVisitor(_genFilePath, _importResolver) {\n        var _this = _super.call(this, false) || this;\n        _this._genFilePath = _genFilePath;\n        _this._importResolver = _importResolver;\n        _this.typeExpression = 0;\n        _this.importsWithPrefixes = new Map();\n        _this.reexports = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitType = function (t, ctx, defaultType) {\n        if (defaultType === void 0) { defaultType = 'any'; }\n        if (t) {\n            this.typeExpression++;\n            t.visitType(this, ctx);\n            this.typeExpression--;\n        }\n        else {\n            ctx.print(null, defaultType);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralExpr = function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (value == null && ast.type != INFERRED_TYPE) {\n            ctx.print(ast, \"(\" + value + \" as any)\");\n            return null;\n        }\n        return _super.prototype.visitLiteralExpr.call(this, ast, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n        if (ast.entries.length === 0) {\n            ctx.print(ast, '(');\n        }\n        var /** @type {?} */ result = _super.prototype.visitLiteralArrayExpr.call(this, ast, ctx);\n        if (ast.entries.length === 0) {\n            ctx.print(ast, ' as any[])');\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {\n        this._visitIdentifier(ast.value, ast.typeParams, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitAssertNotNullExpr = function (ast, ctx) {\n        var /** @type {?} */ result = _super.prototype.visitAssertNotNullExpr.call(this, ast, ctx);\n        ctx.print(ast, '!');\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        if (ctx.isExportedVar(stmt.name) && stmt.value instanceof ExternalExpr && !stmt.type) {\n            // check for a reexport\n            var _a = this._resolveStaticSymbol(stmt.value.value), name = _a.name, filePath = _a.filePath, members = _a.members;\n            if (((members)).length === 0 && filePath !== this._genFilePath) {\n                var /** @type {?} */ reexports = this.reexports.get(filePath);\n                if (!reexports) {\n                    reexports = [];\n                    this.reexports.set(filePath, reexports);\n                }\n                reexports.push({ name: name, as: stmt.name });\n                return null;\n            }\n        }\n        if (ctx.isExportedVar(stmt.name)) {\n            ctx.print(stmt, \"export \");\n        }\n        if (stmt.hasModifier(StmtModifier.Final)) {\n            ctx.print(stmt, \"const\");\n        }\n        else {\n            ctx.print(stmt, \"var\");\n        }\n        ctx.print(stmt, \" \" + stmt.name);\n        this._printColonType(stmt.type, ctx);\n        ctx.print(stmt, \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {\n        ctx.print(ast, \"(<\"); /** @type {?} */\n        ((ast.type)).visitType(this, ctx);\n        ctx.print(ast, \">\");\n        ast.value.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitInstantiateExpr = function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        this.typeExpression++;\n        ast.classExpr.visitExpression(this, ctx);\n        this.typeExpression--;\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        if (ctx.isExportedVar(stmt.name)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"class \" + stmt.name);\n        if (stmt.parent != null) {\n            ctx.print(stmt, \" extends \");\n            this.typeExpression++;\n            stmt.parent.visitExpression(this, ctx);\n            this.typeExpression--;\n        }\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        stmt.fields.forEach(function (field) { return _this._visitClassField(field, ctx); });\n        if (stmt.constructorMethod != null) {\n            this._visitClassConstructor(stmt, ctx);\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(method, ctx); });\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassField = function (field, ctx) {\n        if (field.hasModifier(StmtModifier.Private)) {\n            // comment out as a workaround for #10967\n            ctx.print(null, \"/*private*/ \");\n        }\n        ctx.print(null, field.name);\n        this._printColonType(field.type, ctx);\n        ctx.println(null, \";\");\n    };\n    /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassGetter = function (getter, ctx) {\n        if (getter.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, \"get \" + getter.name + \"()\");\n        this._printColonType(getter.type, ctx);\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(getter.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {\n        ctx.print(stmt, \"constructor(\");\n        this._visitParams(stmt.constructorMethod.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.constructorMethod.body, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassMethod = function (method, ctx) {\n        if (method.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, method.name + \"(\");\n        this._visitParams(method.params, ctx);\n        ctx.print(null, \")\");\n        this._printColonType(method.type, ctx, 'void');\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(method.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        this._visitParams(ast.params, ctx);\n        ctx.print(ast, \")\");\n        this._printColonType(ast.type, ctx, 'void');\n        ctx.println(ast, \" => {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        if (ctx.isExportedVar(stmt.name)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.print(stmt, \")\");\n        this._printColonType(stmt.type, ctx, 'void');\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack', null)).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitBuiltintType = function (type, ctx) {\n        var /** @type {?} */ typeStr;\n        switch (type.name) {\n            case BuiltinTypeName.Bool:\n                typeStr = 'boolean';\n                break;\n            case BuiltinTypeName.Dynamic:\n                typeStr = 'any';\n                break;\n            case BuiltinTypeName.Function:\n                typeStr = 'Function';\n                break;\n            case BuiltinTypeName.Number:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.Int:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.String:\n                typeStr = 'string';\n                break;\n            default:\n                throw new Error(\"Unsupported builtin type \" + type.name);\n        }\n        ctx.print(null, typeStr);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExpressionType = function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitArrayType = function (type, ctx) {\n        this.visitType(type.of, ctx);\n        ctx.print(null, \"[]\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitMapType = function (type, ctx) {\n        ctx.print(null, \"{[key: string]:\");\n        this.visitType(type.valueType, ctx);\n        ctx.print(null, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitParams = function (params, ctx) {\n        var _this = this;\n        this.visitAllObjects(function (param) {\n            ctx.print(null, param.name);\n            _this._printColonType(param.type, ctx);\n        }, params, ctx, ',');\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._resolveStaticSymbol = function (value) {\n        var /** @type {?} */ reference = value.reference;\n        if (!(reference instanceof StaticSymbol)) {\n            throw new Error(\"Internal error: unknown identifier \" + JSON.stringify(value));\n        }\n        var /** @type {?} */ arity = this._importResolver.getTypeArity(reference) || undefined;\n        var /** @type {?} */ importReference = this._importResolver.getImportAs(reference) || reference;\n        return {\n            name: importReference.name,\n            filePath: importReference.filePath,\n            members: importReference.members, arity: arity\n        };\n    };\n    /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitIdentifier = function (value, typeParams, ctx) {\n        var _this = this;\n        var _a = this._resolveStaticSymbol(value), name = _a.name, filePath = _a.filePath, members = _a.members, arity = _a.arity;\n        if (filePath != this._genFilePath) {\n            var /** @type {?} */ prefix = this.importsWithPrefixes.get(filePath);\n            if (prefix == null) {\n                prefix = \"i\" + this.importsWithPrefixes.size;\n                this.importsWithPrefixes.set(filePath, prefix);\n            }\n            ctx.print(null, prefix + \".\");\n        }\n        if (((members)).length) {\n            ctx.print(null, name);\n            ctx.print(null, '.');\n            ctx.print(null, /** @type {?} */ ((members)).join('.'));\n        }\n        else {\n            ctx.print(null, name);\n        }\n        if (this.typeExpression > 0) {\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedParameters = (typeParams && typeParams.length) || 0;\n            var /** @type {?} */ additionalParameters = (arity || 0) - suppliedParameters;\n            if (suppliedParameters > 0 || additionalParameters > 0) {\n                ctx.print(null, \"<\");\n                if (suppliedParameters > 0) {\n                    this.visitAllObjects(function (type) { return type.visitType(_this, ctx); }, /** @type {?} */ ((typeParams)), ctx, ',');\n                }\n                if (additionalParameters > 0) {\n                    for (var /** @type {?} */ i = 0; i < additionalParameters; i++) {\n                        if (i > 0 || suppliedParameters > 0)\n                            ctx.print(null, ',');\n                        ctx.print(null, 'any');\n                    }\n                }\n                ctx.print(null, \">\");\n            }\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._printColonType = function (type, ctx, defaultType) {\n        if (type !== INFERRED_TYPE) {\n            ctx.print(null, ':');\n            this.visitType(type, ctx, defaultType);\n        }\n    };\n    return _TsEmitterVisitor;\n}(AbstractEmitterVisitor));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'.\n */\nvar SECURITY_SCHEMA = {};\n/**\n * @param {?} ctx\n * @param {?} specs\n * @return {?}\n */\nfunction registerContext(ctx, specs) {\n    for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n        var spec = specs_1[_i];\n        SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n    }\n}\n// Case is insignificant below, all element and attribute names are lower-cased for lookup.\nregisterContext(_angular_core.SecurityContext.HTML, [\n    'iframe|srcdoc',\n    '*|innerHTML',\n    '*|outerHTML',\n]);\nregisterContext(_angular_core.SecurityContext.STYLE, ['*|style']);\n// NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\nregisterContext(_angular_core.SecurityContext.URL, [\n    '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n    'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n    'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n    'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n]);\nregisterContext(_angular_core.SecurityContext.RESOURCE_URL, [\n    'applet|code',\n    'applet|codebase',\n    'base|href',\n    'embed|src',\n    'frame|src',\n    'head|profile',\n    'html|manifest',\n    'iframe|src',\n    'link|href',\n    'media|src',\n    'object|codebase',\n    'object|data',\n    'script|src',\n]);\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BOOLEAN = 'boolean';\nvar NUMBER = 'number';\nvar STRING = 'string';\nvar OBJECT = 'object';\n/**\n * This array represents the DOM schema. It encodes inheritance, properties, and events.\n *\n * ## Overview\n *\n * Each line represents one kind of element. The `element_inheritance` and properties are joined\n * using `element_inheritance|properties` syntax.\n *\n * ## Element Inheritance\n *\n * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n * Here the individual elements are separated by `,` (commas). Every element in the list\n * has identical properties.\n *\n * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n * specified then `\"\"` (blank) element is assumed.\n *\n * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n * elements.\n *\n * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n *\n * ## Properties\n *\n * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n * by a special character designating its type:\n *\n * - (no prefix): property is a string.\n * - `*`: property represents an event.\n * - `!`: property is a boolean.\n * - `#`: property is a number.\n * - `%`: property is an object.\n *\n * ## Query\n *\n * The class creates an internal squas representation which allows to easily answer the query of\n * if a given property exist on a given element.\n *\n * NOTE: We don't yet support querying for types or events.\n * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n *       see dom_element_schema_registry_spec.ts\n */\n// =================================================================================================\n// =================================================================================================\n// =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========\n// =================================================================================================\n// =================================================================================================\n//\n//                       DO NOT EDIT THIS DOM SCHEMA WITHOUT A SECURITY REVIEW!\n//\n// Newly added properties must be security reviewed and assigned an appropriate SecurityContext in\n// dom_security_schema.ts. Reach out to mprobst & rjamet for details.\n//\n// =================================================================================================\nvar SCHEMA = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*beforecopy,*beforecut,*beforepaste,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*copy,*cuechange,*cut,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*message,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*paste,*pause,*play,*playing,*progress,*ratechange,*reset,*resize,*scroll,*search,*seeked,*seeking,*select,*selectstart,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*beforecopy,*beforecut,*beforepaste,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*copy,*cuechange,*cut,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*message,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*paste,*pause,*play,*playing,*progress,*ratechange,*reset,*resize,*scroll,*search,*seeked,*seeking,*select,*selectstart,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,keytype,name',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:cursor^:svg:|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n];\nvar _ATTR_TO_PROP = {\n    'class': 'className',\n    'for': 'htmlFor',\n    'formaction': 'formAction',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\nvar DomElementSchemaRegistry = (function (_super) {\n    __extends(DomElementSchemaRegistry, _super);\n    function DomElementSchemaRegistry() {\n        var _this = _super.call(this) || this;\n        _this._schema = {};\n        SCHEMA.forEach(function (encodedType) {\n            var type = {};\n            var _a = encodedType.split('|'), strType = _a[0], strProperties = _a[1];\n            var properties = strProperties.split(',');\n            var _b = strType.split('^'), typeNames = _b[0], superName = _b[1];\n            typeNames.split(',').forEach(function (tag) { return _this._schema[tag.toLowerCase()] = type; });\n            var superType = superName && _this._schema[superName.toLowerCase()];\n            if (superType) {\n                Object.keys(superType).forEach(function (prop) { type[prop] = superType[prop]; });\n            }\n            properties.forEach(function (property) {\n                if (property.length > 0) {\n                    switch (property[0]) {\n                        case '*':\n                            // We don't yet support events.\n                            // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                            // will\n                            // almost certainly introduce bad XSS vulnerabilities.\n                            // type[property.substring(1)] = EVENT;\n                            break;\n                        case '!':\n                            type[property.substring(1)] = BOOLEAN;\n                            break;\n                        case '#':\n                            type[property.substring(1)] = NUMBER;\n                            break;\n                        case '%':\n                            type[property.substring(1)] = OBJECT;\n                            break;\n                        default:\n                            type[property] = STRING;\n                    }\n                }\n            });\n        });\n        return _this;\n    }\n    /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasProperty = function (tagName, propName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === _angular_core.NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return false;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === _angular_core.CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Can't tell now as we don't know which properties a custom element will get\n                // once it is instantiated\n                return true;\n            }\n        }\n        var /** @type {?} */ elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n        return !!elementProperties[propName];\n    };\n    /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasElement = function (tagName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === _angular_core.NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return true;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === _angular_core.CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Allow any custom elements\n                return true;\n            }\n        }\n        return !!this._schema[tagName.toLowerCase()];\n    };\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.securityContext = function (tagName, propName, isAttribute) {\n        if (isAttribute) {\n            // NB: For security purposes, use the mapped property name, not the attribute name.\n            propName = this.getMappedPropName(propName);\n        }\n        // Make sure comparisons are case insensitive, so that case differences between attribute and\n        // property names do not have a security impact.\n        tagName = tagName.toLowerCase();\n        propName = propName.toLowerCase();\n        var /** @type {?} */ ctx = SECURITY_SCHEMA[tagName + '|' + propName];\n        if (ctx) {\n            return ctx;\n        }\n        ctx = SECURITY_SCHEMA['*|' + propName];\n        return ctx ? ctx : _angular_core.SecurityContext.NONE;\n    };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getMappedPropName = function (propName) { return _ATTR_TO_PROP[propName] || propName; };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getDefaultComponentElementName = function () { return 'ng-component'; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateProperty = function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateAttribute = function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.allKnownElementNames = function () { return Object.keys(this._schema); };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = function (propName) {\n        return dashCaseToCamelCase(propName);\n    };\n    /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue = function (camelCaseProp, userProvidedProp, val) {\n        var /** @type {?} */ unit = '';\n        var /** @type {?} */ strVal = val.toString().trim();\n        var /** @type {?} */ errorMsg = ((null));\n        if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n            if (typeof val === 'number') {\n                unit = 'px';\n            }\n            else {\n                var /** @type {?} */ valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errorMsg = \"Please provide a CSS unit value for \" + userProvidedProp + \":\" + val;\n                }\n            }\n        }\n        return { error: errorMsg, value: strVal + unit };\n    };\n    return DomElementSchemaRegistry;\n}(ElementSchemaRegistry));\nDomElementSchemaRegistry.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nDomElementSchemaRegistry.ctorParameters = function () { return []; };\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction _isPixelDimensionStyle(prop) {\n    switch (prop) {\n        case 'width':\n        case 'height':\n        case 'minWidth':\n        case 'minHeight':\n        case 'maxWidth':\n        case 'maxHeight':\n        case 'left':\n        case 'top':\n        case 'bottom':\n        case 'right':\n        case 'fontSize':\n        case 'outlineWidth':\n        case 'outlineOffset':\n        case 'paddingTop':\n        case 'paddingLeft':\n        case 'paddingBottom':\n        case 'paddingRight':\n        case 'marginTop':\n        case 'marginLeft':\n        case 'marginBottom':\n        case 'marginRight':\n        case 'borderRadius':\n        case 'borderWidth':\n        case 'borderTopWidth':\n        case 'borderLeftWidth':\n        case 'borderRightWidth':\n        case 'borderBottomWidth':\n        case 'textIndent':\n            return true;\n        default:\n            return false;\n    }\n}\nvar ShadowCss = (function () {\n    function ShadowCss() {\n        this.strictStyling = true;\n    }\n    /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype.shimCssText = function (cssText, selector, hostSelector) {\n        if (hostSelector === void 0) { hostSelector = ''; }\n        var /** @type {?} */ sourceMappingUrl = extractSourceMappingUrl(cssText);\n        cssText = stripComments(cssText);\n        cssText = this._insertDirectives(cssText);\n        return this._scopeCssText(cssText, selector, hostSelector) + sourceMappingUrl;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertDirectives = function (cssText) {\n        cssText = this._insertPolyfillDirectivesInCssText(cssText);\n        return this._insertPolyfillRulesInCssText(cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillDirectivesInCssText = function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentNextSelectorRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return m[2] + '{';\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillRulesInCssText = function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentRuleRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            var /** @type {?} */ rule = m[0].replace(m[1], '').replace(m[2], '');\n            return m[4] + rule;\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeCssText = function (cssText, scopeSelector, hostSelector) {\n        var /** @type {?} */ unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n        // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n        cssText = this._insertPolyfillHostInCssText(cssText);\n        cssText = this._convertColonHost(cssText);\n        cssText = this._convertColonHostContext(cssText);\n        cssText = this._convertShadowDOMSelectors(cssText);\n        if (scopeSelector) {\n            cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n        }\n        cssText = cssText + '\\n' + unscopedRules;\n        return cssText.trim();\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._extractUnscopedRulesFromCssText = function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        var /** @type {?} */ r = '';\n        var /** @type {?} */ m;\n        _cssContentUnscopedRuleRe.lastIndex = 0;\n        while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n            var /** @type {?} */ rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n            r += rule + '\\n\\n';\n        }\n        return r;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHost = function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHostContext = function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonRule = function (cssText, regExp, partReplacer) {\n        // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n        return cssText.replace(regExp, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            if (m[2]) {\n                var /** @type {?} */ parts = m[2].split(',');\n                var /** @type {?} */ r = [];\n                for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n                    var /** @type {?} */ p = parts[i].trim();\n                    if (!p)\n                        break;\n                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                }\n                return r.join(',');\n            }\n            else {\n                return _polyfillHostNoCombinator + m[3];\n            }\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostContextPartReplacer = function (host, part, suffix) {\n        if (part.indexOf(_polyfillHost) > -1) {\n            return this._colonHostPartReplacer(host, part, suffix);\n        }\n        else {\n            return host + part + suffix + ', ' + part + ' ' + host + suffix;\n        }\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostPartReplacer = function (host, part, suffix) {\n        return host + part.replace(_polyfillHost, '') + suffix;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertShadowDOMSelectors = function (cssText) {\n        return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelectors = function (cssText, scopeSelector, hostSelector) {\n        var _this = this;\n        return processRules(cssText, function (rule) {\n            var /** @type {?} */ selector = rule.selector;\n            var /** @type {?} */ content = rule.content;\n            if (rule.selector[0] != '@') {\n                selector =\n                    _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n            }\n            return new CssRule(selector, content);\n        });\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelector = function (selector, scopeSelector, hostSelector, strict) {\n        var _this = this;\n        return selector.split(',')\n            .map(function (part) { return part.trim().split(_shadowDeepSelectors); })\n            .map(function (deepParts) {\n            var shallowPart = deepParts[0], otherParts = deepParts.slice(1);\n            var /** @type {?} */ applyScope = function (shallowPart) {\n                if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                    return strict ?\n                        _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                        _this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n                }\n                else {\n                    return shallowPart;\n                }\n            };\n            return [applyScope(shallowPart)].concat(otherParts).join(' ');\n        })\n            .join(', ');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._selectorNeedsScoping = function (selector, scopeSelector) {\n        var /** @type {?} */ re = this._makeScopeMatcher(scopeSelector);\n        return !re.test(selector);\n    };\n    /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._makeScopeMatcher = function (scopeSelector) {\n        var /** @type {?} */ lre = /\\[/g;\n        var /** @type {?} */ rre = /\\]/g;\n        scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n        return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySelectorScope = function (selector, scopeSelector, hostSelector) {\n        // Difference from webcomponents.js: scopeSelector could not be an array\n        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {\n        // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n        _polyfillHostRe.lastIndex = 0;\n        if (_polyfillHostRe.test(selector)) {\n            var /** @type {?} */ replaceBy_1 = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\n            return selector\n                .replace(_polyfillHostNoCombinatorRe, function (hnc, selector) {\n                return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                    return before + replaceBy_1 + colon + after;\n                });\n            })\n                .replace(_polyfillHostRe, replaceBy_1 + ' ');\n        }\n        return scopeSelector + ' ' + selector;\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applyStrictSelectorScope = function (selector, scopeSelector, hostSelector) {\n        var _this = this;\n        var /** @type {?} */ isRe = /\\[is=([^\\]]*)\\]/g;\n        scopeSelector = scopeSelector.replace(isRe, function (_) {\n            var parts = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                parts[_i - 1] = arguments[_i];\n            }\n            return parts[0];\n        });\n        var /** @type {?} */ attrName = '[' + scopeSelector + ']';\n        var /** @type {?} */ _scopeSelectorPart = function (p) {\n            var /** @type {?} */ scopedP = p.trim();\n            if (!scopedP) {\n                return '';\n            }\n            if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n            }\n            else {\n                // remove :host since it should be unnecessary\n                var /** @type {?} */ t = p.replace(_polyfillHostRe, '');\n                if (t.length > 0) {\n                    var /** @type {?} */ matches = t.match(/([^:]*)(:*)(.*)/);\n                    if (matches) {\n                        scopedP = matches[1] + attrName + matches[2] + matches[3];\n                    }\n                }\n            }\n            return scopedP;\n        };\n        var /** @type {?} */ safeContent = new SafeSelector(selector);\n        selector = safeContent.content();\n        var /** @type {?} */ scopedSelector = '';\n        var /** @type {?} */ startIndex = 0;\n        var /** @type {?} */ res;\n        var /** @type {?} */ sep = /( |>|\\+|~(?!=))\\s*/g;\n        var /** @type {?} */ scopeAfter = selector.indexOf(_polyfillHostNoCombinator);\n        while ((res = sep.exec(selector)) !== null) {\n            var /** @type {?} */ separator = res[1];\n            var /** @type {?} */ part = selector.slice(startIndex, res.index).trim();\n            // if a selector appears before :host-context it should not be shimmed as it\n            // matches on ancestor elements and not on elements in the host's shadow\n            var /** @type {?} */ scopedPart = startIndex >= scopeAfter ? _scopeSelectorPart(part) : part;\n            scopedSelector += scopedPart + \" \" + separator + \" \";\n            startIndex = sep.lastIndex;\n        }\n        scopedSelector += _scopeSelectorPart(selector.substring(startIndex));\n        // replace the placeholders with their original values\n        return safeContent.restore(scopedSelector);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillHostInCssText = function (selector) {\n        return selector.replace(_colonHostContextRe, _polyfillHostContext)\n            .replace(_colonHostRe, _polyfillHost);\n    };\n    return ShadowCss;\n}());\nvar SafeSelector = (function () {\n    /**\n     * @param {?} selector\n     */\n    function SafeSelector(selector) {\n        var _this = this;\n        this.placeholders = [];\n        this.index = 0;\n        // Replaces attribute selectors with placeholders.\n        // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n        selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n            var replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(keep);\n            _this.index++;\n            return replaceBy;\n        });\n        // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n        // WS and \"+\" would otherwise be interpreted as selector separators.\n        this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n            var replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(exp);\n            _this.index++;\n            return pseudo + replaceBy;\n        });\n    }\n    \n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    SafeSelector.prototype.restore = function (content) {\n        var _this = this;\n        return content.replace(/__ph-(\\d+)__/g, function (ph, index) { return _this.placeholders[+index]; });\n    };\n    /**\n     * @return {?}\n     */\n    SafeSelector.prototype.content = function () { return this._content; };\n    return SafeSelector;\n}());\nvar _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\nvar _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _polyfillHost = '-shadowcsshost';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g,\n    // Deprecated selectors\n    /\\/shadow-deep\\//g,\n    /\\/shadow\\//g,\n];\nvar _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)/g;\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stripComments(input) {\n    return input.replace(_commentRe, '');\n}\n// all comments except inline source mapping\nvar _sourceMappingUrlRe = /\\/\\*\\s*#\\s*sourceMappingURL=[\\s\\S]+?\\*\\//;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction extractSourceMappingUrl(input) {\n    var /** @type {?} */ matcher = input.match(_sourceMappingUrlRe);\n    return matcher ? matcher[0] : '';\n}\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar CssRule = (function () {\n    /**\n     * @param {?} selector\n     * @param {?} content\n     */\n    function CssRule(selector, content) {\n        this.selector = selector;\n        this.content = content;\n    }\n    return CssRule;\n}());\n/**\n * @param {?} input\n * @param {?} ruleCallback\n * @return {?}\n */\nfunction processRules(input, ruleCallback) {\n    var /** @type {?} */ inputWithEscapedBlocks = escapeBlocks(input);\n    var /** @type {?} */ nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ selector = m[2];\n        var /** @type {?} */ content = '';\n        var /** @type {?} */ suffix = m[4];\n        var /** @type {?} */ contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var /** @type {?} */ rule = ruleCallback(new CssRule(selector, content));\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n}\nvar StringWithEscapedBlocks = (function () {\n    /**\n     * @param {?} escapedString\n     * @param {?} blocks\n     */\n    function StringWithEscapedBlocks(escapedString, blocks) {\n        this.escapedString = escapedString;\n        this.blocks = blocks;\n    }\n    return StringWithEscapedBlocks;\n}());\n/**\n * @param {?} input\n * @return {?}\n */\nfunction escapeBlocks(input) {\n    var /** @type {?} */ inputParts = input.split(_curlyRe);\n    var /** @type {?} */ resultParts = [];\n    var /** @type {?} */ escapedBlocks = [];\n    var /** @type {?} */ bracketCount = 0;\n    var /** @type {?} */ currentBlockParts = [];\n    for (var /** @type {?} */ partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var /** @type {?} */ part = inputParts[partIndex];\n        if (part == CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part == OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\nvar CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\nvar StylesCompileDependency = (function () {\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} isShimmed\n     * @param {?} valuePlaceholder\n     */\n    function StylesCompileDependency(name, moduleUrl, isShimmed, valuePlaceholder) {\n        this.name = name;\n        this.moduleUrl = moduleUrl;\n        this.isShimmed = isShimmed;\n        this.valuePlaceholder = valuePlaceholder;\n    }\n    return StylesCompileDependency;\n}());\nvar StylesCompileResult = (function () {\n    /**\n     * @param {?} componentStylesheet\n     * @param {?} externalStylesheets\n     */\n    function StylesCompileResult(componentStylesheet, externalStylesheets) {\n        this.componentStylesheet = componentStylesheet;\n        this.externalStylesheets = externalStylesheets;\n    }\n    return StylesCompileResult;\n}());\nvar CompiledStylesheet = (function () {\n    /**\n     * @param {?} statements\n     * @param {?} stylesVar\n     * @param {?} dependencies\n     * @param {?} isShimmed\n     * @param {?} meta\n     */\n    function CompiledStylesheet(statements, stylesVar, dependencies, isShimmed, meta) {\n        this.statements = statements;\n        this.stylesVar = stylesVar;\n        this.dependencies = dependencies;\n        this.isShimmed = isShimmed;\n        this.meta = meta;\n    }\n    return CompiledStylesheet;\n}());\nvar StyleCompiler = (function () {\n    /**\n     * @param {?} _urlResolver\n     */\n    function StyleCompiler(_urlResolver) {\n        this._urlResolver = _urlResolver;\n        this._shadowCss = new ShadowCss();\n    }\n    /**\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileComponent = function (comp) {\n        var _this = this;\n        var /** @type {?} */ template = ((comp.template));\n        var /** @type {?} */ externalStylesheets = [];\n        var /** @type {?} */ componentStylesheet = this._compileStyles(comp, new CompileStylesheetMetadata({\n            styles: template.styles,\n            styleUrls: template.styleUrls,\n            moduleUrl: identifierModuleUrl(comp.type)\n        }), true);\n        template.externalStylesheets.forEach(function (stylesheetMeta) {\n            var /** @type {?} */ compiledStylesheet = _this._compileStyles(comp, stylesheetMeta, false);\n            externalStylesheets.push(compiledStylesheet);\n        });\n        return new StylesCompileResult(componentStylesheet, externalStylesheets);\n    };\n    /**\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    StyleCompiler.prototype._compileStyles = function (comp, stylesheet, isComponentStylesheet) {\n        var _this = this;\n        var /** @type {?} */ shim = ((comp.template)).encapsulation === _angular_core.ViewEncapsulation.Emulated;\n        var /** @type {?} */ styleExpressions = stylesheet.styles.map(function (plainStyle) { return literal(_this._shimIfNeeded(plainStyle, shim)); });\n        var /** @type {?} */ dependencies = [];\n        for (var /** @type {?} */ i = 0; i < stylesheet.styleUrls.length; i++) {\n            var /** @type {?} */ identifier = { reference: null };\n            dependencies.push(new StylesCompileDependency(getStylesVarName(null), stylesheet.styleUrls[i], shim, identifier));\n            styleExpressions.push(new ExternalExpr(identifier));\n        }\n        // styles variable contains plain strings and arrays of other styles arrays (recursive),\n        // so we set its type to dynamic.\n        var /** @type {?} */ stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n        var /** @type {?} */ stmt = variable(stylesVar)\n            .set(literalArr(styleExpressions, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])))\n            .toDeclStmt(null, [StmtModifier.Final]);\n        return new CompiledStylesheet([stmt], stylesVar, dependencies, shim, stylesheet);\n    };\n    /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype._shimIfNeeded = function (style$$1, shim) {\n        return shim ? this._shadowCss.shimCssText(style$$1, CONTENT_ATTR, HOST_ATTR) : style$$1;\n    };\n    return StyleCompiler;\n}());\nStyleCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nStyleCompiler.ctorParameters = function () { return [\n    { type: UrlResolver, },\n]; };\n/**\n * @param {?} component\n * @return {?}\n */\nfunction getStylesVarName(component) {\n    var /** @type {?} */ result = \"styles\";\n    if (component) {\n        result += \"_\" + identifierName(component.type);\n    }\n    return result;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventHandlerVars = (function () {\n    function EventHandlerVars() {\n    }\n    return EventHandlerVars;\n}());\nEventHandlerVars.event = variable('$event');\nvar ConvertActionBindingResult = (function () {\n    /**\n     * @param {?} stmts\n     * @param {?} allowDefault\n     */\n    function ConvertActionBindingResult(stmts, allowDefault) {\n        this.stmts = stmts;\n        this.allowDefault = allowDefault;\n    }\n    return ConvertActionBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression is\n * used in an action binding (e.g. an event handler).\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} action\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertActionBinding(localResolver, implicitReceiver, action, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ actionWithoutBuiltins = convertPropertyBindingBuiltins({\n        createLiteralArrayConverter: function (argCount) {\n            // Note: no caching for literal arrays in actions.\n            return function (args) { return literalArr(args); };\n        },\n        createLiteralMapConverter: function (keys) {\n            // Note: no caching for literal maps in actions.\n            return function (args) { return literalMap(/** @type {?} */ (keys.map(function (key, i) { return [key, args[i]]; }))); };\n        },\n        createPipeConverter: function (name) {\n            throw new Error(\"Illegal State: Actions are not allowed to contain pipes. Pipe: \" + name);\n        }\n    }, action);\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ actionStmts = [];\n    flattenStatements(actionWithoutBuiltins.visit(visitor, _Mode.Statement), actionStmts);\n    prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n    var /** @type {?} */ lastIndex = actionStmts.length - 1;\n    var /** @type {?} */ preventDefaultVar = ((null));\n    if (lastIndex >= 0) {\n        var /** @type {?} */ lastStatement = actionStmts[lastIndex];\n        var /** @type {?} */ returnExpr = convertStmtIntoExpression(lastStatement);\n        if (returnExpr) {\n            // Note: We need to cast the result of the method call to dynamic,\n            // as it might be a void method!\n            preventDefaultVar = createPreventDefaultVar(bindingId);\n            actionStmts[lastIndex] =\n                preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false)))\n                    .toDeclStmt(null, [StmtModifier.Final]);\n        }\n    }\n    return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertPropertyBindingBuiltins(converterFactory, ast) {\n    return convertBuiltins(converterFactory, ast);\n}\nvar ConvertPropertyBindingResult = (function () {\n    /**\n     * @param {?} stmts\n     * @param {?} currValExpr\n     */\n    function ConvertPropertyBindingResult(stmts, currValExpr) {\n        this.stmts = stmts;\n        this.currValExpr = currValExpr;\n    }\n    return ConvertPropertyBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression\n * is used in property binding. The expression has to be preprocessed via\n * `convertPropertyBindingBuiltins`.\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} expressionWithoutBuiltins\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertPropertyBinding(localResolver, implicitReceiver, expressionWithoutBuiltins, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ currValExpr = createCurrValueExpr(bindingId);\n    var /** @type {?} */ stmts = [];\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ outputExpr = expressionWithoutBuiltins.visit(visitor, _Mode.Expression);\n    if (visitor.temporaryCount) {\n        for (var /** @type {?} */ i = 0; i < visitor.temporaryCount; i++) {\n            stmts.push(temporaryDeclaration(bindingId, i));\n        }\n    }\n    stmts.push(currValExpr.set(outputExpr).toDeclStmt(null, [StmtModifier.Final]));\n    return new ConvertPropertyBindingResult(stmts, currValExpr);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertBuiltins(converterFactory, ast) {\n    var /** @type {?} */ visitor = new _BuiltinAstConverter(converterFactory);\n    return ast.visit(visitor);\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryName(bindingId, temporaryNumber) {\n    return \"tmp_\" + bindingId + \"_\" + temporaryNumber;\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryDeclaration(bindingId, temporaryNumber) {\n    return new DeclareVarStmt(temporaryName(bindingId, temporaryNumber), NULL_EXPR);\n}\n/**\n * @param {?} temporaryCount\n * @param {?} bindingId\n * @param {?} statements\n * @return {?}\n */\nfunction prependTemporaryDecls(temporaryCount, bindingId, statements) {\n    for (var /** @type {?} */ i = temporaryCount - 1; i >= 0; i--) {\n        statements.unshift(temporaryDeclaration(bindingId, i));\n    }\n}\nvar _Mode = {};\n_Mode.Statement = 0;\n_Mode.Expression = 1;\n_Mode[_Mode.Statement] = \"Statement\";\n_Mode[_Mode.Expression] = \"Expression\";\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureStatementMode(mode, ast) {\n    if (mode !== _Mode.Statement) {\n        throw new Error(\"Expected a statement, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureExpressionMode(mode, ast) {\n    if (mode !== _Mode.Expression) {\n        throw new Error(\"Expected an expression, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} expr\n * @return {?}\n */\nfunction convertToStatementIfNeeded(mode, expr) {\n    if (mode === _Mode.Statement) {\n        return expr.toStmt();\n    }\n    else {\n        return expr;\n    }\n}\nvar _BuiltinAstConverter = (function (_super) {\n    __extends(_BuiltinAstConverter, _super);\n    /**\n     * @param {?} _converterFactory\n     */\n    function _BuiltinAstConverter(_converterFactory) {\n        var _this = _super.call(this) || this;\n        _this._converterFactory = _converterFactory;\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitPipe = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = [ast.exp].concat(ast.args).map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createPipeConverter(ast.name, args.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralArray = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.expressions.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralArrayConverter(ast.expressions.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralMap = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.values.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralMapConverter(ast.keys));\n    };\n    return _BuiltinAstConverter;\n}(AstTransformer));\nvar _AstToIrVisitor = (function () {\n    /**\n     * @param {?} _localResolver\n     * @param {?} _implicitReceiver\n     * @param {?} bindingId\n     */\n    function _AstToIrVisitor(_localResolver, _implicitReceiver, bindingId) {\n        this._localResolver = _localResolver;\n        this._implicitReceiver = _implicitReceiver;\n        this.bindingId = bindingId;\n        this._nodeMap = new Map();\n        this._resultMap = new Map();\n        this._currentTemporary = 0;\n        this.temporaryCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitBinary = function (ast, mode) {\n        var /** @type {?} */ op;\n        switch (ast.operation) {\n            case '+':\n                op = BinaryOperator.Plus;\n                break;\n            case '-':\n                op = BinaryOperator.Minus;\n                break;\n            case '*':\n                op = BinaryOperator.Multiply;\n                break;\n            case '/':\n                op = BinaryOperator.Divide;\n                break;\n            case '%':\n                op = BinaryOperator.Modulo;\n                break;\n            case '&&':\n                op = BinaryOperator.And;\n                break;\n            case '||':\n                op = BinaryOperator.Or;\n                break;\n            case '==':\n                op = BinaryOperator.Equals;\n                break;\n            case '!=':\n                op = BinaryOperator.NotEquals;\n                break;\n            case '===':\n                op = BinaryOperator.Identical;\n                break;\n            case '!==':\n                op = BinaryOperator.NotIdentical;\n                break;\n            case '<':\n                op = BinaryOperator.Lower;\n                break;\n            case '>':\n                op = BinaryOperator.Bigger;\n                break;\n            case '<=':\n                op = BinaryOperator.LowerEquals;\n                break;\n            case '>=':\n                op = BinaryOperator.BiggerEquals;\n                break;\n            default:\n                throw new Error(\"Unsupported operation \" + ast.operation);\n        }\n        return convertToStatementIfNeeded(mode, new BinaryOperatorExpr(op, this._visit(ast.left, _Mode.Expression), this._visit(ast.right, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitChain = function (ast, mode) {\n        ensureStatementMode(mode, ast);\n        return this.visitAll(ast.expressions, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitConditional = function (ast, mode) {\n        var /** @type {?} */ value = this._visit(ast.condition, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, value.conditional(this._visit(ast.trueExp, _Mode.Expression), this._visit(ast.falseExp, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPipe = function (ast, mode) {\n        throw new Error(\"Illegal state: Pipes should have been converted into functions. Pipe: \" + ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitFunctionCall = function (ast, mode) {\n        var /** @type {?} */ convertedArgs = this.visitAll(ast.args, _Mode.Expression);\n        var /** @type {?} */ fnResult;\n        if (ast instanceof BuiltinFunctionCall) {\n            fnResult = ast.converter(convertedArgs);\n        }\n        else {\n            fnResult = this._visit(/** @type {?} */ ((ast.target)), _Mode.Expression).callFn(convertedArgs);\n        }\n        return convertToStatementIfNeeded(mode, fnResult);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitImplicitReceiver = function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        return this._implicitReceiver;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitInterpolation = function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        var /** @type {?} */ args = [literal(ast.expressions.length)];\n        for (var /** @type {?} */ i = 0; i < ast.strings.length - 1; i++) {\n            args.push(literal(ast.strings[i]));\n            args.push(this._visit(ast.expressions[i], _Mode.Expression));\n        }\n        args.push(literal(ast.strings[ast.strings.length - 1]));\n        return ast.expressions.length <= 9 ?\n            importExpr(createIdentifier(Identifiers.inlineInterpolate)).callFn(args) :\n            importExpr(createIdentifier(Identifiers.interpolate)).callFn([\n                args[0], literalArr(args.slice(1))\n            ]);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedRead = function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            return convertToStatementIfNeeded(mode, this._visit(ast.obj, _Mode.Expression).key(this._visit(ast.key, _Mode.Expression)));\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedWrite = function (ast, mode) {\n        var /** @type {?} */ obj = this._visit(ast.obj, _Mode.Expression);\n        var /** @type {?} */ key = this._visit(ast.key, _Mode.Expression);\n        var /** @type {?} */ value = this._visit(ast.value, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralArray = function (ast, mode) {\n        throw new Error(\"Illegal State: literal arrays should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralMap = function (ast, mode) {\n        throw new Error(\"Illegal State: literal maps should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralPrimitive = function (ast, mode) {\n        return convertToStatementIfNeeded(mode, literal(ast.value));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._getLocal = function (name) { return this._localResolver.getLocal(name); };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitMethodCall = function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ args = this.visitAll(ast.args, _Mode.Expression);\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                var /** @type {?} */ varExpr = this._getLocal(ast.name);\n                if (varExpr) {\n                    result = varExpr.callFn(args);\n                }\n            }\n            if (result == null) {\n                result = receiver.callMethod(ast.name, args);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPrefixNot = function (ast, mode) {\n        return convertToStatementIfNeeded(mode, not(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitNonNullAssert = function (ast, mode) {\n        return convertToStatementIfNeeded(mode, assertNotNull(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyRead = function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                result = this._getLocal(ast.name);\n            }\n            if (result == null) {\n                result = receiver.prop(ast.name);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyWrite = function (ast, mode) {\n        var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n        if (receiver === this._implicitReceiver) {\n            var /** @type {?} */ varExpr = this._getLocal(ast.name);\n            if (varExpr) {\n                throw new Error('Cannot assign to a reference or variable!');\n            }\n        }\n        return convertToStatementIfNeeded(mode, receiver.prop(ast.name).set(this._visit(ast.value, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafePropertyRead = function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafeMethodCall = function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitAll = function (asts, mode) {\n        var _this = this;\n        return asts.map(function (ast) { return _this._visit(ast, mode); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitQuote = function (ast, mode) {\n        throw new Error(\"Quotes are not supported for evaluation!\\n        Statement: \" + ast.uninterpretedExpression + \" located at \" + ast.location);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._visit = function (ast, mode) {\n        var /** @type {?} */ result = this._resultMap.get(ast);\n        if (result)\n            return result;\n        return (this._nodeMap.get(ast) || ast).visit(this, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.convertSafeAccess = function (ast, leftMostSafe, mode) {\n        // If the expression contains a safe access node on the left it needs to be converted to\n        // an expression that guards the access to the member by checking the receiver for blank. As\n        // execution proceeds from left to right, the left most part of the expression must be guarded\n        // first but, because member access is left associative, the right side of the expression is at\n        // the top of the AST. The desired result requires lifting a copy of the the left part of the\n        // expression up to test it for blank before generating the unguarded version.\n        // Consider, for example the following expression: a?.b.c?.d.e\n        // This results in the ast:\n        //         .\n        //        / \\\n        //       ?.   e\n        //      /  \\\n        //     .    d\n        //    / \\\n        //   ?.  c\n        //  /  \\\n        // a    b\n        // The following tree should be generated:\n        //\n        //        /---- ? ----\\\n        //       /      |      \\\n        //     a   /--- ? ---\\  null\n        //        /     |     \\\n        //       .      .     null\n        //      / \\    / \\\n        //     .  c   .   e\n        //    / \\    / \\\n        //   a   b  ,   d\n        //         / \\\n        //        .   c\n        //       / \\\n        //      a   b\n        //\n        // Notice that the first guard condition is the left hand of the left most safe access node\n        // which comes in as leftMostSafe to this routine.\n        var /** @type {?} */ guardedExpression = this._visit(leftMostSafe.receiver, _Mode.Expression);\n        var /** @type {?} */ temporary = ((undefined));\n        if (this.needsTemporary(leftMostSafe.receiver)) {\n            // If the expression has method calls or pipes then we need to save the result into a\n            // temporary variable to avoid calling stateful or impure code more than once.\n            temporary = this.allocateTemporary();\n            // Preserve the result in the temporary variable\n            guardedExpression = temporary.set(guardedExpression);\n            // Ensure all further references to the guarded expression refer to the temporary instead.\n            this._resultMap.set(leftMostSafe.receiver, temporary);\n        }\n        var /** @type {?} */ condition = guardedExpression.isBlank();\n        // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n        // leftMostNode with its unguarded version in the call to `this.visit()`.\n        if (leftMostSafe instanceof SafeMethodCall) {\n            this._nodeMap.set(leftMostSafe, new MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n        }\n        else {\n            this._nodeMap.set(leftMostSafe, new PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n        }\n        // Recursively convert the node now without the guarded member access.\n        var /** @type {?} */ access = this._visit(ast, _Mode.Expression);\n        // Remove the mapping. This is not strictly required as the converter only traverses each node\n        // once but is safer if the conversion is changed to traverse the nodes more than once.\n        this._nodeMap.delete(leftMostSafe);\n        // If we allocated a temporary, release it.\n        if (temporary) {\n            this.releaseTemporary(temporary);\n        }\n        // Produce the conditional\n        return convertToStatementIfNeeded(mode, condition.conditional(literal(null), access));\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.leftMostSafeNode = function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        return ast.visit({\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitBinary: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitChain: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitConditional: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitFunctionCall: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitImplicitReceiver: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitInterpolation: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedRead: function (ast) { return visit(this, ast.obj); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedWrite: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralArray: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralMap: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralPrimitive: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitMethodCall: function (ast) { return visit(this, ast.receiver); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPipe: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPrefixNot: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitNonNullAssert: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyRead: function (ast) { return visit(this, ast.receiver); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyWrite: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitQuote: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafeMethodCall: function (ast) { return visit(this, ast.receiver) || ast; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafePropertyRead: function (ast) {\n                return visit(this, ast.receiver) || ast;\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.needsTemporary = function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return ast && (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        var /** @type {?} */ visitSome = function (visitor, ast) {\n            return ast.some(function (ast) { return visit(visitor, ast); });\n        };\n        return ast.visit({\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitBinary: function (ast) { return visit(this, ast.left) || visit(this, ast.right); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitChain: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitConditional: function (ast) {\n                return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                    visit(this, ast.falseExp);\n            },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitFunctionCall: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitImplicitReceiver: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitInterpolation: function (ast) { return visitSome(this, ast.expressions); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedRead: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedWrite: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralArray: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralMap: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralPrimitive: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitMethodCall: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPipe: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPrefixNot: function (ast) { return visit(this, ast.expression); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitNonNullAssert: function (ast) { return visit(this, ast.expression); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyRead: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyWrite: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitQuote: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafeMethodCall: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafePropertyRead: function (ast) { return false; }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.allocateTemporary = function () {\n        var /** @type {?} */ tempNumber = this._currentTemporary++;\n        this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n        return new ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n    };\n    /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.releaseTemporary = function (temporary) {\n        this._currentTemporary--;\n        if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n            throw new Error(\"Temporary \" + temporary.name + \" released out of order\");\n        }\n    };\n    return _AstToIrVisitor;\n}());\n/**\n * @param {?} arg\n * @param {?} output\n * @return {?}\n */\nfunction flattenStatements(arg, output) {\n    if (Array.isArray(arg)) {\n        ((arg)).forEach(function (entry) { return flattenStatements(entry, output); });\n    }\n    else {\n        output.push(arg);\n    }\n}\nvar DefaultLocalResolver = (function () {\n    function DefaultLocalResolver() {\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DefaultLocalResolver.prototype.getLocal = function (name) {\n        if (name === EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        return null;\n    };\n    return DefaultLocalResolver;\n}());\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createCurrValueExpr(bindingId) {\n    return variable(\"currVal_\" + bindingId); // fix syntax highlighting: `\n}\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createPreventDefaultVar(bindingId) {\n    return variable(\"pd_\" + bindingId);\n}\n/**\n * @param {?} stmt\n * @return {?}\n */\nfunction convertStmtIntoExpression(stmt) {\n    if (stmt instanceof ExpressionStatement) {\n        return stmt.expr;\n    }\n    else if (stmt instanceof ReturnStatement) {\n        return stmt.value;\n    }\n    return null;\n}\nvar BuiltinFunctionCall = (function (_super) {\n    __extends(BuiltinFunctionCall, _super);\n    /**\n     * @param {?} span\n     * @param {?} args\n     * @param {?} converter\n     */\n    function BuiltinFunctionCall(span, args, converter) {\n        var _this = _super.call(this, span, null, args) || this;\n        _this.args = args;\n        _this.converter = converter;\n        return _this;\n    }\n    return BuiltinFunctionCall;\n}(FunctionCall));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CLASS_ATTR$1 = 'class';\nvar STYLE_ATTR = 'style';\nvar IMPLICIT_TEMPLATE_VAR = '\\$implicit';\nvar ViewCompileResult = (function () {\n    /**\n     * @param {?} statements\n     * @param {?} viewClassVar\n     * @param {?} rendererTypeVar\n     */\n    function ViewCompileResult(statements, viewClassVar, rendererTypeVar) {\n        this.statements = statements;\n        this.viewClassVar = viewClassVar;\n        this.rendererTypeVar = rendererTypeVar;\n    }\n    return ViewCompileResult;\n}());\nvar ViewCompiler = (function () {\n    /**\n     * @param {?} _genConfigNext\n     * @param {?} _schemaRegistry\n     */\n    function ViewCompiler(_genConfigNext, _schemaRegistry) {\n        this._genConfigNext = _genConfigNext;\n        this._schemaRegistry = _schemaRegistry;\n    }\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    ViewCompiler.prototype.compileComponent = function (component, template, styles, usedPipes) {\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ staticQueryIds = findStaticQueryIds(template);\n        var /** @type {?} */ statements = [];\n        var /** @type {?} */ renderComponentVarName = ((undefined));\n        if (!component.isHost) {\n            var /** @type {?} */ template_1 = ((component.template));\n            var /** @type {?} */ customRenderData = [];\n            if (template_1.animations && template_1.animations.length) {\n                customRenderData.push(new LiteralMapEntry('animation', convertValueToOutputAst(template_1.animations), true));\n            }\n            var /** @type {?} */ renderComponentVar = variable(rendererTypeName(component.type.reference));\n            renderComponentVarName = ((renderComponentVar.name));\n            statements.push(renderComponentVar\n                .set(importExpr(createIdentifier(Identifiers.createRendererType2))\n                .callFn([new LiteralMapExpr([\n                    new LiteralMapEntry('encapsulation', literal(template_1.encapsulation)),\n                    new LiteralMapEntry('styles', styles),\n                    new LiteralMapEntry('data', new LiteralMapExpr(customRenderData))\n                ])]))\n                .toDeclStmt(importType(createIdentifier(Identifiers.RendererType2)), [StmtModifier.Final]));\n        }\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder(parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        statements.push.apply(statements, visitor.build());\n        return new ViewCompileResult(statements, visitor.viewName, renderComponentVarName);\n    };\n    return ViewCompiler;\n}());\nViewCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nViewCompiler.ctorParameters = function () { return [\n    { type: CompilerConfig, },\n    { type: ElementSchemaRegistry, },\n]; };\nvar LOG_VAR$1 = variable('_l');\nvar VIEW_VAR = variable('_v');\nvar CHECK_VAR = variable('_ck');\nvar COMP_VAR = variable('_co');\nvar EVENT_NAME_VAR = variable('en');\nvar ALLOW_DEFAULT_VAR = variable(\"ad\");\nvar ViewBuilder = (function () {\n    /**\n     * @param {?} parent\n     * @param {?} component\n     * @param {?} embeddedViewIndex\n     * @param {?} usedPipes\n     * @param {?} staticQueryIds\n     * @param {?} viewBuilderFactory\n     */\n    function ViewBuilder(parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory) {\n        this.parent = parent;\n        this.component = component;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.usedPipes = usedPipes;\n        this.staticQueryIds = staticQueryIds;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.nodes = [];\n        this.purePipeNodeIndices = Object.create(null);\n        this.refNodeIndices = Object.create(null);\n        this.variables = [];\n        this.children = [];\n        // TODO(tbosch): The old view compiler used to use an `any` type\n        // for the context in any embedded view. We keep this behaivor for now\n        // to be able to introduce the new view compiler without too many errors.\n        this.compType =\n            this.embeddedViewIndex > 0 ? DYNAMIC_TYPE : importType(this.component.type);\n    }\n    Object.defineProperty(ViewBuilder.prototype, \"viewName\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return viewClassName(this.component.type.reference, this.embeddedViewIndex);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = function (variables, astNodes) {\n        var _this = this;\n        this.variables = variables;\n        // create the pipes for the pure pipes immediately, so that we know their indices.\n        if (!this.parent) {\n            this.usedPipes.forEach(function (pipe) {\n                if (pipe.pure) {\n                    _this.purePipeNodeIndices[pipe.name] = _this._createPipe(null, pipe);\n                }\n            });\n        }\n        if (!this.parent) {\n            var /** @type {?} */ queryIds_1 = staticViewQueryIds(this.staticQueryIds);\n            this.component.viewQueries.forEach(function (query, queryIndex) {\n                // Note: queries start with id 1 so we can use the number in a Bloom filter!\n                var /** @type {?} */ queryId = queryIndex + 1;\n                var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n                var /** @type {?} */ flags = 134217728 /* TypeViewQuery */ | calcStaticDynamicQueryFlags(queryIds_1, queryId, query.first);\n                _this.nodes.push(function () { return ({\n                    sourceSpan: null,\n                    nodeFlags: flags,\n                    nodeDef: importExpr(createIdentifier(Identifiers.queryDef)).callFn([\n                        literal(flags), literal(queryId),\n                        new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType))])\n                    ])\n                }); });\n            });\n        }\n        templateVisitAll(this, astNodes);\n        if (this.parent && (astNodes.length === 0 || needsAdditionalRootNode(astNodes))) {\n            // if the view is an embedded view, then we need to add an additional root node in some cases\n            this.nodes.push(function () { return ({\n                sourceSpan: null,\n                nodeFlags: 1 /* TypeElement */,\n                nodeDef: importExpr(createIdentifier(Identifiers.anchorDef)).callFn([\n                    literal(0 /* None */), NULL_EXPR, NULL_EXPR, literal(0)\n                ])\n            }); });\n        }\n    };\n    /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = function (targetStatements) {\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(targetStatements); });\n        var _a = this._createNodeExpressions(), updateRendererStmts = _a.updateRendererStmts, updateDirectivesStmts = _a.updateDirectivesStmts, nodeDefExprs = _a.nodeDefExprs;\n        var /** @type {?} */ updateRendererFn = this._createUpdateFn(updateRendererStmts);\n        var /** @type {?} */ updateDirectivesFn = this._createUpdateFn(updateDirectivesStmts);\n        var /** @type {?} */ viewFlags = 0;\n        if (!this.parent && this.component.changeDetection === _angular_core.ChangeDetectionStrategy.OnPush) {\n            viewFlags |= 2 /* OnPush */;\n        }\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(this.viewName, [new FnParam(/** @type {?} */ ((LOG_VAR$1.name)))], [new ReturnStatement(importExpr(createIdentifier(Identifiers.viewDef)).callFn([\n                literal(viewFlags),\n                literalArr(nodeDefExprs),\n                updateDirectivesFn,\n                updateRendererFn,\n            ]))], importType(createIdentifier(Identifiers.ViewDefinition)));\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    ViewBuilder.prototype._createUpdateFn = function (updateStmts) {\n        var /** @type {?} */ updateFn;\n        if (updateStmts.length > 0) {\n            var /** @type {?} */ preStmts = [];\n            if (!this.component.isHost && findReadVarNames(updateStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            updateFn = fn([\n                new FnParam(/** @type {?} */ ((CHECK_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE)\n            ], preStmts.concat(updateStmts), INFERRED_TYPE);\n        }\n        else {\n            updateFn = NULL_EXPR;\n        }\n        return updateFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = function (ast, context) {\n        // ngContentDef(ngContentIndex: number, index: number): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 8 /* TypeNgContent */,\n            nodeDef: importExpr(createIdentifier(Identifiers.ngContentDef)).callFn([\n                literal(ast.ngContentIndex), literal(ast.index)\n            ])\n        }); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = function (ast, context) {\n        // textDef(ngContentIndex: number, constants: string[]): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 2 /* TypeText */,\n            nodeDef: importExpr(createIdentifier(Identifiers.textDef)).callFn([\n                literal(ast.ngContentIndex), literalArr([literal(ast.value)])\n            ])\n        }); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var /** @type {?} */ astWithSource = (ast.value);\n        var /** @type {?} */ inter = (astWithSource.ast);\n        var /** @type {?} */ updateRendererExpressions = inter.expressions.map(function (expr, bindingIndex) { return _this._preprocessUpdateExpression({ nodeIndex: nodeIndex, bindingIndex: bindingIndex, sourceSpan: ast.sourceSpan, context: COMP_VAR, value: expr }); });\n        // textDef(ngContentIndex: number, constants: string[]): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 2 /* TypeText */,\n            nodeDef: importExpr(createIdentifier(Identifiers.textDef)).callFn([\n                literal(ast.ngContentIndex), literalArr(inter.strings.map(function (s) { return literal(s); }))\n            ]),\n            updateRenderer: updateRendererExpressions\n        }); };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, queryMatchesExpr = _a.queryMatchesExpr, hostEvents = _a.hostEvents;\n        var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n        this.children.push(childVisitor);\n        childVisitor.visitAll(ast.variables, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        // anchorDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n        //   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:\n        //   ViewDefinitionFactory): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 1 /* TypeElement */ | flags,\n            nodeDef: importExpr(createIdentifier(Identifiers.anchorDef)).callFn([\n                literal(flags),\n                queryMatchesExpr,\n                literal(ast.ngContentIndex),\n                literal(childCount),\n                _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                variable(childVisitor.viewName),\n            ])\n        }); };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        // Using a null element name creates an anchor.\n        var /** @type {?} */ elName = isNgContainer(ast.name) ? null : ast.name;\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, usedEvents = _a.usedEvents, queryMatchesExpr = _a.queryMatchesExpr, dirHostBindings = _a.hostBindings, hostEvents = _a.hostEvents;\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        if (elName) {\n            var /** @type {?} */ hostBindings = ast.inputs\n                .map(function (inputAst) { return ({\n                context: /** @type {?} */ (COMP_VAR),\n                inputAst: inputAst,\n                dirAst: /** @type {?} */ (null),\n            }); })\n                .concat(dirHostBindings);\n            if (hostBindings.length) {\n                updateRendererExpressions =\n                    hostBindings.map(function (hostBinding, bindingIndex) { return _this._preprocessUpdateExpression({\n                        context: hostBinding.context,\n                        nodeIndex: nodeIndex,\n                        bindingIndex: bindingIndex,\n                        sourceSpan: hostBinding.inputAst.sourceSpan,\n                        value: hostBinding.inputAst.value\n                    }); });\n                inputDefs = hostBindings.map(function (hostBinding) { return elementBindingDef(hostBinding.inputAst, hostBinding.dirAst); });\n            }\n            outputDefs = usedEvents.map(function (_a) {\n                var target = _a[0], eventName = _a[1];\n                return literalArr([literal(target), literal(eventName)]);\n            });\n        }\n        templateVisitAll(this, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var /** @type {?} */ compAst = ast.directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        var /** @type {?} */ compRendererType = NULL_EXPR;\n        var /** @type {?} */ compView = NULL_EXPR;\n        if (compAst) {\n            compView = importExpr({ reference: compAst.directive.componentViewType });\n            compRendererType = importExpr({ reference: compAst.directive.rendererType });\n        }\n        // elementDef(\n        //   flags: NodeFlags, matchedQueriesDsl: [string | number, QueryValueType][],\n        //   ngContentIndex: number, childCount: number, namespaceAndName: string,\n        //   fixedAttrs: [string, string][] = [],\n        //   bindings?: [BindingFlags, string, string | SecurityContext][],\n        //   outputs?: ([OutputType.ElementOutput | OutputType.DirectiveHostOutput, string, string])[],\n        //   handleEvent?: ElementHandleEventFn,\n        //   componentView?: () => ViewDefinition, componentRendererType?: RendererType2): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 1 /* TypeElement */ | flags,\n            nodeDef: importExpr(createIdentifier(Identifiers.elementDef)).callFn([\n                literal(flags),\n                queryMatchesExpr,\n                literal(ast.ngContentIndex),\n                literal(childCount),\n                literal(elName),\n                elName ? fixedAttrsDef(ast) : NULL_EXPR,\n                inputDefs.length ? literalArr(inputDefs) : NULL_EXPR,\n                outputDefs.length ? literalArr(outputDefs) : NULL_EXPR,\n                _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                compView,\n                compRendererType,\n            ]),\n            updateRenderer: updateRendererExpressions\n        }); };\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitElementOrTemplate = function (nodeIndex, ast) {\n        var _this = this;\n        var /** @type {?} */ flags = 0;\n        if (ast.hasViewContainer) {\n            flags |= 16777216 /* EmbeddedViews */;\n        }\n        var /** @type {?} */ usedEvents = new Map();\n        ast.outputs.forEach(function (event) {\n            var _a = elementEventNameAndTarget(event, null), name = _a.name, target = _a.target;\n            usedEvents.set(_angular_core.ɵelementEventFullName(target, name), [target, name]);\n        });\n        ast.directives.forEach(function (dirAst) {\n            dirAst.hostEvents.forEach(function (event) {\n                var _a = elementEventNameAndTarget(event, dirAst), name = _a.name, target = _a.target;\n                usedEvents.set(_angular_core.ɵelementEventFullName(target, name), [target, name]);\n            });\n        });\n        var /** @type {?} */ hostBindings = [];\n        var /** @type {?} */ hostEvents = [];\n        this._visitComponentFactoryResolverProvider(ast.directives);\n        ast.providers.forEach(function (providerAst, providerIndex) {\n            var /** @type {?} */ dirAst = ((undefined));\n            var /** @type {?} */ dirIndex = ((undefined));\n            ast.directives.forEach(function (localDirAst, i) {\n                if (localDirAst.directive.type.reference === tokenReference(providerAst.token)) {\n                    dirAst = localDirAst;\n                    dirIndex = i;\n                }\n            });\n            if (dirAst) {\n                var _a = _this._visitDirective(providerAst, dirAst, dirIndex, nodeIndex, ast.references, ast.queryMatches, usedEvents, /** @type {?} */ ((_this.staticQueryIds.get(/** @type {?} */ (ast))))), dirHostBindings = _a.hostBindings, dirHostEvents = _a.hostEvents;\n                hostBindings.push.apply(hostBindings, dirHostBindings);\n                hostEvents.push.apply(hostEvents, dirHostEvents);\n            }\n            else {\n                _this._visitProvider(providerAst, ast.queryMatches);\n            }\n        });\n        var /** @type {?} */ queryMatchExprs = [];\n        ast.queryMatches.forEach(function (match) {\n            var /** @type {?} */ valueType = ((undefined));\n            if (tokenReference(match.value) === resolveIdentifier(Identifiers.ElementRef)) {\n                valueType = 0 /* ElementRef */;\n            }\n            else if (tokenReference(match.value) === resolveIdentifier(Identifiers.ViewContainerRef)) {\n                valueType = 3 /* ViewContainerRef */;\n            }\n            else if (tokenReference(match.value) === resolveIdentifier(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(valueType)]));\n            }\n        });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ valueType = ((undefined));\n            if (!ref.value) {\n                valueType = 1 /* RenderElement */;\n            }\n            else if (tokenReference(ref.value) === resolveIdentifier(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(valueType)]));\n            }\n        });\n        ast.outputs.forEach(function (outputAst) {\n            hostEvents.push({ context: COMP_VAR, eventAst: outputAst, dirAst: /** @type {?} */ ((null)) });\n        });\n        return {\n            flags: flags,\n            usedEvents: Array.from(usedEvents.values()),\n            queryMatchesExpr: queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n            hostBindings: hostBindings,\n            hostEvents: hostEvents\n        };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitDirective = function (providerAst, dirAst, directiveIndex, elementNodeIndex, refs, queryMatches, usedEvents, queryIds) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        dirAst.directive.queries.forEach(function (query, queryIndex) {\n            var /** @type {?} */ queryId = dirAst.contentQueryStartId + queryIndex;\n            var /** @type {?} */ flags = 67108864 /* TypeContentQuery */ | calcStaticDynamicQueryFlags(queryIds, queryId, query.first);\n            var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n            _this.nodes.push(function () { return ({\n                sourceSpan: dirAst.sourceSpan,\n                nodeFlags: flags,\n                nodeDef: importExpr(createIdentifier(Identifiers.queryDef)).callFn([\n                    literal(flags), literal(queryId),\n                    new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType))])\n                ]),\n            }); });\n        });\n        // Note: the operation below might also create new nodeDefs,\n        // but we don't want them to be a child of a directive,\n        // as they might be a provider/pipe on their own.\n        // I.e. we only allow queries as children of directives nodes.\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var _a = this._visitProviderOrDirective(providerAst, queryMatches), flags = _a.flags, queryMatchExprs = _a.queryMatchExprs, providerExpr = _a.providerExpr, depsExpr = _a.depsExpr;\n        refs.forEach(function (ref) {\n            if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(4 /* Provider */)]));\n            }\n        });\n        if (dirAst.directive.isComponent) {\n            flags |= 32768 /* Component */;\n        }\n        var /** @type {?} */ inputDefs = dirAst.inputs.map(function (inputAst, inputIndex) {\n            var /** @type {?} */ mapValue = literalArr([literal(inputIndex), literal(inputAst.directiveName)]);\n            // Note: it's important to not quote the key so that we can capture renames by minifiers!\n            return new LiteralMapEntry(inputAst.directiveName, mapValue, false);\n        });\n        var /** @type {?} */ outputDefs = [];\n        var /** @type {?} */ dirMeta = dirAst.directive;\n        Object.keys(dirMeta.outputs).forEach(function (propName) {\n            var /** @type {?} */ eventName = dirMeta.outputs[propName];\n            if (usedEvents.has(eventName)) {\n                // Note: it's important to not quote the key so that we can capture renames by minifiers!\n                outputDefs.push(new LiteralMapEntry(propName, literal(eventName), false));\n            }\n        });\n        var /** @type {?} */ updateDirectiveExpressions = [];\n        if (dirAst.inputs.length || (flags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0) {\n            updateDirectiveExpressions =\n                dirAst.inputs.map(function (input, bindingIndex) { return _this._preprocessUpdateExpression({\n                    nodeIndex: nodeIndex,\n                    bindingIndex: bindingIndex,\n                    sourceSpan: input.sourceSpan,\n                    context: COMP_VAR,\n                    value: input.value\n                }); });\n        }\n        var /** @type {?} */ dirContextExpr = importExpr(createIdentifier(Identifiers.nodeValue)).callFn([\n            VIEW_VAR, literal(nodeIndex)\n        ]);\n        var /** @type {?} */ hostBindings = dirAst.hostProperties.map(function (inputAst) { return ({\n            context: dirContextExpr,\n            dirAst: dirAst,\n            inputAst: inputAst,\n        }); });\n        var /** @type {?} */ hostEvents = dirAst.hostEvents.map(function (hostEventAst) { return ({\n            context: dirContextExpr,\n            eventAst: hostEventAst, dirAst: dirAst,\n        }); });\n        // directiveDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], childCount: number, ctor:\n        //   any,\n        //   deps: ([DepFlags, any] | any)[], props?: {[name: string]: [number, string]},\n        //   outputs?: {[name: string]: string}, component?: () => ViewDefinition): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: dirAst.sourceSpan,\n            nodeFlags: 16384 /* TypeDirective */ | flags,\n            nodeDef: importExpr(createIdentifier(Identifiers.directiveDef)).callFn([\n                literal(flags), queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n                literal(childCount), providerExpr, depsExpr,\n                inputDefs.length ? new LiteralMapExpr(inputDefs) : NULL_EXPR,\n                outputDefs.length ? new LiteralMapExpr(outputDefs) : NULL_EXPR\n            ]),\n            updateDirectives: updateDirectiveExpressions,\n            directive: dirAst.directive.type,\n        }); };\n        return { hostBindings: hostBindings, hostEvents: hostEvents };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProvider = function (providerAst, queryMatches) {\n        this._addProviderNode(this._visitProviderOrDirective(providerAst, queryMatches));\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitComponentFactoryResolverProvider = function (directives) {\n        var /** @type {?} */ componentDirMeta = directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        if (componentDirMeta && componentDirMeta.directive.entryComponents.length) {\n            var _a = componentFactoryResolverProviderDef(8192 /* PrivateProvider */, componentDirMeta.directive.entryComponents), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr_1 = _a.tokenExpr;\n            this._addProviderNode({\n                providerExpr: providerExpr,\n                depsExpr: depsExpr,\n                flags: flags,\n                tokenExpr: tokenExpr_1,\n                queryMatchExprs: [],\n                sourceSpan: componentDirMeta.sourceSpan\n            });\n        }\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ViewBuilder.prototype._addProviderNode = function (data) {\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // providerDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,\n        //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: data.sourceSpan,\n            nodeFlags: data.flags,\n            nodeDef: importExpr(createIdentifier(Identifiers.providerDef)).callFn([\n                literal(data.flags),\n                data.queryMatchExprs.length ? literalArr(data.queryMatchExprs) : NULL_EXPR,\n                data.tokenExpr, data.providerExpr, data.depsExpr\n            ])\n        }); });\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProviderOrDirective = function (providerAst, queryMatches) {\n        var /** @type {?} */ flags = 0;\n        var /** @type {?} */ queryMatchExprs = [];\n        queryMatches.forEach(function (match) {\n            if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(4 /* Provider */)]));\n            }\n        });\n        var _a = providerDef(providerAst), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, providerFlags = _a.flags, tokenExpr = _a.tokenExpr;\n        return {\n            flags: flags | providerFlags,\n            queryMatchExprs: queryMatchExprs,\n            providerExpr: providerExpr,\n            depsExpr: depsExpr,\n            tokenExpr: tokenExpr,\n            sourceSpan: providerAst.sourceSpan\n        };\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        var /** @type {?} */ currViewExpr = VIEW_VAR;\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent,\n            currViewExpr = currViewExpr.prop('parent').cast(DYNAMIC_TYPE)) {\n            // check references\n            var /** @type {?} */ refNodeIndex = currBuilder.refNodeIndices[name];\n            if (refNodeIndex != null) {\n                return importExpr(createIdentifier(Identifiers.nodeValue)).callFn([\n                    currViewExpr, literal(refNodeIndex)\n                ]);\n            }\n            // check variables\n            var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n            if (varAst) {\n                var /** @type {?} */ varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n                return currViewExpr.prop('context').prop(varValue);\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype.createLiteralArrayConverter = function (sourceSpan, argCount) {\n        if (argCount === 0) {\n            var /** @type {?} */ valueExpr_1 = importExpr(createIdentifier(Identifiers.EMPTY_ARRAY));\n            return function () { return valueExpr_1; };\n        }\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // pureArrayDef(argCount: number): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: sourceSpan,\n            nodeFlags: 32 /* TypePureArray */,\n            nodeDef: importExpr(createIdentifier(Identifiers.pureArrayDef)).callFn([literal(argCount)])\n        }); });\n        return function (args) { return callCheckStmt(nodeIndex, args); };\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    ViewBuilder.prototype.createLiteralMapConverter = function (sourceSpan, keys) {\n        if (keys.length === 0) {\n            var /** @type {?} */ valueExpr_2 = importExpr(createIdentifier(Identifiers.EMPTY_MAP));\n            return function () { return valueExpr_2; };\n        }\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // function pureObjectDef(propertyNames: string[]): NodeDef\n        this.nodes.push(function () { return ({\n            sourceSpan: sourceSpan,\n            nodeFlags: 64 /* TypePureObject */,\n            nodeDef: importExpr(createIdentifier(Identifiers.pureObjectDef))\n                .callFn([literalArr(keys.map(function (key) { return literal(key); }))])\n        }); });\n        return function (args) { return callCheckStmt(nodeIndex, args); };\n    };\n    /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype.createPipeConverter = function (expression, name, argCount) {\n        var /** @type {?} */ pipe = ((this.usedPipes.find(function (pipeSummary) { return pipeSummary.name === name; })));\n        if (pipe.pure) {\n            var /** @type {?} */ nodeIndex_1 = this.nodes.length;\n            // function purePipeDef(argCount: number): NodeDef;\n            this.nodes.push(function () { return ({\n                sourceSpan: expression.sourceSpan,\n                nodeFlags: 128 /* TypePurePipe */,\n                nodeDef: importExpr(createIdentifier(Identifiers.purePipeDef))\n                    .callFn([literal(argCount)])\n            }); });\n            // find underlying pipe in the component view\n            var /** @type {?} */ compViewExpr = VIEW_VAR;\n            var /** @type {?} */ compBuilder = this;\n            while (compBuilder.parent) {\n                compBuilder = compBuilder.parent;\n                compViewExpr = compViewExpr.prop('parent').cast(DYNAMIC_TYPE);\n            }\n            var /** @type {?} */ pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n            var /** @type {?} */ pipeValueExpr_1 = importExpr(createIdentifier(Identifiers.nodeValue)).callFn([\n                compViewExpr, literal(pipeNodeIndex)\n            ]);\n            return function (args) { return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, callCheckStmt(nodeIndex_1, [pipeValueExpr_1].concat(args))); };\n        }\n        else {\n            var /** @type {?} */ nodeIndex = this._createPipe(expression.sourceSpan, pipe);\n            var /** @type {?} */ nodeValueExpr_1 = importExpr(createIdentifier(Identifiers.nodeValue)).callFn([\n                VIEW_VAR, literal(nodeIndex)\n            ]);\n            return function (args) { return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, nodeValueExpr_1.callMethod('transform', args)); };\n        }\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipe = function (sourceSpan, pipe) {\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        var /** @type {?} */ flags = 0;\n        pipe.type.lifecycleHooks.forEach(function (lifecycleHook) {\n            // for pipes, we only support ngOnDestroy\n            if (lifecycleHook === _angular_core.ɵLifecycleHooks.OnDestroy) {\n                flags |= lifecycleHookToNodeFlag(lifecycleHook);\n            }\n        });\n        var /** @type {?} */ depExprs = pipe.type.diDeps.map(depDef);\n        // function pipeDef(\n        //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n        this.nodes.push(function () { return ({\n            sourceSpan: sourceSpan,\n            nodeFlags: 16 /* TypePipe */,\n            nodeDef: importExpr(createIdentifier(Identifiers.pipeDef)).callFn([\n                literal(flags), importExpr(pipe.type), literalArr(depExprs)\n            ])\n        }); });\n        return nodeIndex;\n    };\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype._preprocessUpdateExpression = function (expression) {\n        var _this = this;\n        return {\n            nodeIndex: expression.nodeIndex,\n            bindingIndex: expression.bindingIndex,\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) { return _this.createLiteralArrayConverter(expression.sourceSpan, argCount); },\n                createLiteralMapConverter: function (keys) { return _this.createLiteralMapConverter(expression.sourceSpan, keys); },\n                createPipeConverter: function (name, argCount) { return _this.createPipeConverter(expression, name, argCount); }\n            }, expression.value)\n        };\n    };\n    /**\n     * @return {?}\n     */\n    ViewBuilder.prototype._createNodeExpressions = function () {\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ updateBindingCount = 0;\n        var /** @type {?} */ updateRendererStmts = [];\n        var /** @type {?} */ updateDirectivesStmts = [];\n        var /** @type {?} */ nodeDefExprs = this.nodes.map(function (factory, nodeIndex) {\n            var _a = factory(), nodeDef = _a.nodeDef, nodeFlags = _a.nodeFlags, updateDirectives = _a.updateDirectives, updateRenderer = _a.updateRenderer, sourceSpan = _a.sourceSpan;\n            if (updateRenderer) {\n                updateRendererStmts.push.apply(updateRendererStmts, createUpdateStatements(nodeIndex, sourceSpan, updateRenderer, false));\n            }\n            if (updateDirectives) {\n                updateDirectivesStmts.push.apply(updateDirectivesStmts, createUpdateStatements(nodeIndex, sourceSpan, updateDirectives, (nodeFlags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0));\n            }\n            // We use a comma expression to call the log function before\n            // the nodeDef function, but still use the result of the nodeDef function\n            // as the value.\n            // Note: We only add the logger to elements / text nodes,\n            // so we don't generate too much code.\n            var /** @type {?} */ logWithNodeDef = nodeFlags & 3 /* CatRenderNode */ ?\n                new CommaExpr([LOG_VAR$1.callFn([]).callFn([]), nodeDef]) :\n                nodeDef;\n            return applySourceSpanToExpressionIfNeeded(logWithNodeDef, sourceSpan);\n        });\n        return { updateRendererStmts: updateRendererStmts, updateDirectivesStmts: updateDirectivesStmts, nodeDefExprs: nodeDefExprs };\n        /**\n         * @param {?} nodeIndex\n         * @param {?} sourceSpan\n         * @param {?} expressions\n         * @param {?} allowEmptyExprs\n         * @return {?}\n         */\n        function createUpdateStatements(nodeIndex, sourceSpan, expressions, allowEmptyExprs) {\n            var /** @type {?} */ updateStmts = [];\n            var /** @type {?} */ exprs = expressions.map(function (_a) {\n                var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n                var /** @type {?} */ bindingId = \"\" + updateBindingCount++;\n                var /** @type {?} */ nameResolver = context === COMP_VAR ? self : null;\n                var _b = convertPropertyBinding(nameResolver, context, value, bindingId), stmts = _b.stmts, currValExpr = _b.currValExpr;\n                updateStmts.push.apply(updateStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n                return applySourceSpanToExpressionIfNeeded(currValExpr, sourceSpan);\n            });\n            if (expressions.length || allowEmptyExprs) {\n                updateStmts.push(applySourceSpanToStatementIfNeeded(callCheckStmt(nodeIndex, exprs).toStmt(), sourceSpan));\n            }\n            return updateStmts;\n        }\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    ViewBuilder.prototype._createElementHandleEventFn = function (nodeIndex, handlers) {\n        var _this = this;\n        var /** @type {?} */ handleEventStmts = [];\n        var /** @type {?} */ handleEventBindingCount = 0;\n        handlers.forEach(function (_a) {\n            var context = _a.context, eventAst = _a.eventAst, dirAst = _a.dirAst;\n            var /** @type {?} */ bindingId = \"\" + handleEventBindingCount++;\n            var /** @type {?} */ nameResolver = context === COMP_VAR ? _this : null;\n            var _b = convertActionBinding(nameResolver, context, eventAst.handler, bindingId), stmts = _b.stmts, allowDefault = _b.allowDefault;\n            var /** @type {?} */ trueStmts = stmts;\n            if (allowDefault) {\n                trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n            }\n            var _c = elementEventNameAndTarget(eventAst, dirAst), eventTarget = _c.target, eventName = _c.name;\n            var /** @type {?} */ fullEventName = _angular_core.ɵelementEventFullName(eventTarget, eventName);\n            handleEventStmts.push(applySourceSpanToStatementIfNeeded(new IfStmt(literal(fullEventName).identical(EVENT_NAME_VAR), trueStmts), eventAst.sourceSpan));\n        });\n        var /** @type {?} */ handleEventFn;\n        if (handleEventStmts.length > 0) {\n            var /** @type {?} */ preStmts = [ALLOW_DEFAULT_VAR.set(literal(true)).toDeclStmt(BOOL_TYPE)];\n            if (!this.component.isHost && findReadVarNames(handleEventStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            handleEventFn = fn([\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EVENT_NAME_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EventHandlerVars.event.name)), INFERRED_TYPE)\n            ], preStmts.concat(handleEventStmts, [new ReturnStatement(ALLOW_DEFAULT_VAR)]), INFERRED_TYPE);\n        }\n        else {\n            handleEventFn = NULL_EXPR;\n        }\n        return handleEventFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = function (ast, context) { };\n    return ViewBuilder;\n}());\n/**\n * @param {?} astNodes\n * @return {?}\n */\nfunction needsAdditionalRootNode(astNodes) {\n    var /** @type {?} */ lastAstNode = astNodes[astNodes.length - 1];\n    if (lastAstNode instanceof EmbeddedTemplateAst) {\n        return lastAstNode.hasViewContainer;\n    }\n    if (lastAstNode instanceof ElementAst) {\n        if (isNgContainer(lastAstNode.name) && lastAstNode.children.length) {\n            return needsAdditionalRootNode(lastAstNode.children);\n        }\n        return lastAstNode.hasViewContainer;\n    }\n    return lastAstNode instanceof NgContentAst;\n}\n/**\n * @param {?} inputAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementBindingDef(inputAst, dirAst) {\n    switch (inputAst.type) {\n        case PropertyBindingType.Attribute:\n            return literalArr([\n                literal(1 /* TypeElementAttribute */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Property:\n            return literalArr([\n                literal(8 /* TypeProperty */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Animation:\n            var /** @type {?} */ bindingType = 8 /* TypeProperty */ |\n                (dirAst && dirAst.directive.isComponent ? 32 /* SyntheticHostProperty */ :\n                    16 /* SyntheticProperty */);\n            return literalArr([\n                literal(bindingType), literal('@' + inputAst.name), literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Class:\n            return literalArr([literal(2 /* TypeElementClass */), literal(inputAst.name), NULL_EXPR]);\n        case PropertyBindingType.Style:\n            return literalArr([\n                literal(4 /* TypeElementStyle */), literal(inputAst.name), literal(inputAst.unit)\n            ]);\n    }\n}\n/**\n * @param {?} elementAst\n * @return {?}\n */\nfunction fixedAttrsDef(elementAst) {\n    var /** @type {?} */ mapResult = Object.create(null);\n    elementAst.attrs.forEach(function (attrAst) { mapResult[attrAst.name] = attrAst.value; });\n    elementAst.directives.forEach(function (dirAst) {\n        Object.keys(dirAst.directive.hostAttributes).forEach(function (name) {\n            var /** @type {?} */ value = dirAst.directive.hostAttributes[name];\n            var /** @type {?} */ prevValue = mapResult[name];\n            mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n        });\n    });\n    // Note: We need to sort to get a defined output order\n    // for tests and for caching generated artifacts...\n    return literalArr(Object.keys(mapResult).sort().map(function (attrName) { return literalArr([literal(attrName), literal(mapResult[attrName])]); }));\n}\n/**\n * @param {?} attrName\n * @param {?} attrValue1\n * @param {?} attrValue2\n * @return {?}\n */\nfunction mergeAttributeValue(attrName, attrValue1, attrValue2) {\n    if (attrName == CLASS_ATTR$1 || attrName == STYLE_ATTR) {\n        return attrValue1 + \" \" + attrValue2;\n    }\n    else {\n        return attrValue2;\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} exprs\n * @return {?}\n */\nfunction callCheckStmt(nodeIndex, exprs) {\n    if (exprs.length > 10) {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(1 /* Dynamic */), literalArr(exprs)]);\n    }\n    else {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(0 /* Inline */)].concat(exprs));\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} bindingIdx\n * @param {?} expr\n * @return {?}\n */\nfunction callUnwrapValue(nodeIndex, bindingIdx, expr) {\n    return importExpr(createIdentifier(Identifiers.unwrapValue)).callFn([\n        VIEW_VAR, literal(nodeIndex), literal(bindingIdx), expr\n    ]);\n}\n/**\n * @param {?} nodes\n * @param {?=} result\n * @return {?}\n */\nfunction findStaticQueryIds(nodes, result) {\n    if (result === void 0) { result = new Map(); }\n    nodes.forEach(function (node) {\n        var /** @type {?} */ staticQueryIds = new Set();\n        var /** @type {?} */ dynamicQueryIds = new Set();\n        var /** @type {?} */ queryMatches = ((undefined));\n        if (node instanceof ElementAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        else if (node instanceof EmbeddedTemplateAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        if (queryMatches) {\n            queryMatches.forEach(function (match) { return staticQueryIds.add(match.queryId); });\n        }\n        dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n        result.set(node, { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds });\n    });\n    return result;\n}\n/**\n * @param {?} nodeStaticQueryIds\n * @return {?}\n */\nfunction staticViewQueryIds(nodeStaticQueryIds) {\n    var /** @type {?} */ staticQueryIds = new Set();\n    var /** @type {?} */ dynamicQueryIds = new Set();\n    Array.from(nodeStaticQueryIds.values()).forEach(function (entry) {\n        entry.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n        entry.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n    });\n    dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n    return { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds };\n}\n/**\n * @param {?} eventAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementEventNameAndTarget(eventAst, dirAst) {\n    if (eventAst.isAnimation) {\n        return {\n            name: \"@\" + eventAst.name + \".\" + eventAst.phase,\n            target: dirAst && dirAst.directive.isComponent ? 'component' : null\n        };\n    }\n    else {\n        return eventAst;\n    }\n}\n/**\n * @param {?} queryIds\n * @param {?} queryId\n * @param {?} isFirst\n * @return {?}\n */\nfunction calcStaticDynamicQueryFlags(queryIds, queryId, isFirst) {\n    var /** @type {?} */ flags = 0;\n    // Note: We only make queries static that query for a single item.\n    // This is because of backwards compatibility with the old view compiler...\n    if (isFirst && (queryIds.staticQueryIds.has(queryId) || !queryIds.dynamicQueryIds.has(queryId))) {\n        flags |= 268435456 /* StaticQuery */;\n    }\n    else {\n        flags |= 536870912 /* DynamicQuery */;\n    }\n    return flags;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar GeneratedFile = (function () {\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} genFileUrl\n     * @param {?} source\n     */\n    function GeneratedFile(srcFileUrl, genFileUrl, source) {\n        this.srcFileUrl = srcFileUrl;\n        this.genFileUrl = genFileUrl;\n        this.source = source;\n    }\n    return GeneratedFile;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} summaryResolver\n * @param {?} symbolResolver\n * @param {?} symbols\n * @param {?} types\n * @return {?}\n */\nfunction serializeSummaries(summaryResolver, symbolResolver, symbols, types) {\n    var /** @type {?} */ toJsonSerializer = new ToJsonSerializer(symbolResolver, summaryResolver);\n    var /** @type {?} */ forJitSerializer = new ForJitSerializer(symbolResolver);\n    // for symbols, we use everything except for the class metadata itself\n    // (we keep the statics though), as the class metadata is contained in the\n    // CompileTypeSummary.\n    symbols.forEach(function (resolvedSymbol) { return toJsonSerializer.addOrMergeSummary({ symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata }); });\n    // Add summaries that are referenced by the given symbols (transitively)\n    // Note: the serializer.symbols array might be growing while\n    // we execute the loop!\n    for (var /** @type {?} */ processedIndex = 0; processedIndex < toJsonSerializer.symbols.length; processedIndex++) {\n        var /** @type {?} */ symbol = toJsonSerializer.symbols[processedIndex];\n        if (summaryResolver.isLibraryFile(symbol.filePath)) {\n            var /** @type {?} */ summary = summaryResolver.resolveSummary(symbol);\n            if (!summary) {\n                // some symbols might originate from a plain typescript library\n                // that just exported .d.ts and .metadata.json files, i.e. where no summary\n                // files were created.\n                var /** @type {?} */ resolvedSymbol = symbolResolver.resolveSymbol(symbol);\n                if (resolvedSymbol) {\n                    summary = { symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata };\n                }\n            }\n            if (summary) {\n                if (summary.type) {\n                    forJitSerializer.addLibType(summary.type);\n                }\n                toJsonSerializer.addOrMergeSummary(summary);\n            }\n        }\n    }\n    // Add type summaries.\n    // Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,\n    // as the type summaries already contain the transitive data that they require\n    // (in a minimal way).\n    types.forEach(function (_a) {\n        var summary = _a.summary, metadata = _a.metadata;\n        forJitSerializer.addSourceType(summary, metadata);\n        toJsonSerializer.addOrMergeSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n        if (summary.summaryKind === CompileSummaryKind.NgModule) {\n            var /** @type {?} */ ngModuleSummary = (summary);\n            ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach(function (id) {\n                var /** @type {?} */ symbol = id.reference;\n                if (summaryResolver.isLibraryFile(symbol.filePath)) {\n                    var /** @type {?} */ summary_1 = summaryResolver.resolveSummary(symbol);\n                    if (summary_1) {\n                        toJsonSerializer.addOrMergeSummary(summary_1);\n                    }\n                }\n            });\n        }\n    });\n    var _a = toJsonSerializer.serialize(), json = _a.json, exportAs = _a.exportAs;\n    var _b = forJitSerializer.serialize(exportAs), statements = _b.statements, exportedVars = _b.exportedVars;\n    return { json: json, forJit: { statements: statements, exportedVars: exportedVars }, exportAs: exportAs };\n}\n/**\n * @param {?} symbolCache\n * @param {?} json\n * @return {?}\n */\nfunction deserializeSummaries(symbolCache, json) {\n    var /** @type {?} */ deserializer = new FromJsonDeserializer(symbolCache);\n    return deserializer.deserialize(json);\n}\nvar ToJsonSerializer = (function (_super) {\n    __extends(ToJsonSerializer, _super);\n    /**\n     * @param {?} symbolResolver\n     * @param {?} summaryResolver\n     */\n    function ToJsonSerializer(symbolResolver, summaryResolver) {\n        var _this = _super.call(this) || this;\n        _this.symbolResolver = symbolResolver;\n        _this.summaryResolver = summaryResolver;\n        // Note: This only contains symbols without members.\n        _this.symbols = [];\n        _this.indexBySymbol = new Map();\n        _this.processedSummaryBySymbol = new Map();\n        _this.processedSummaries = [];\n        return _this;\n    }\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.addOrMergeSummary = function (summary) {\n        var /** @type {?} */ symbolMeta = summary.metadata;\n        if (symbolMeta && symbolMeta.__symbolic === 'class') {\n            // For classes, we keep everything except their class decorators.\n            // We need to keep e.g. the ctor args, method names, method decorators\n            // so that the class can be extended in another compilation unit.\n            // We don't keep the class decorators as\n            // 1) they refer to data\n            //   that should not cause a rebuild of downstream compilation units\n            //   (e.g. inline templates of @Component, or @NgModule.declarations)\n            // 2) their data is already captured in TypeSummaries, e.g. DirectiveSummary.\n            var /** @type {?} */ clone_1 = {};\n            Object.keys(symbolMeta).forEach(function (propName) {\n                if (propName !== 'decorators') {\n                    clone_1[propName] = symbolMeta[propName];\n                }\n            });\n            symbolMeta = clone_1;\n        }\n        var /** @type {?} */ processedSummary = this.processedSummaryBySymbol.get(summary.symbol);\n        if (!processedSummary) {\n            processedSummary = this.processValue({ symbol: summary.symbol });\n            this.processedSummaries.push(processedSummary);\n            this.processedSummaryBySymbol.set(summary.symbol, processedSummary);\n        }\n        // Note: == on purpose to compare with undefined!\n        if (processedSummary.metadata == null && symbolMeta != null) {\n            processedSummary.metadata = this.processValue(symbolMeta);\n        }\n        // Note: == on purpose to compare with undefined!\n        if (processedSummary.type == null && summary.type != null) {\n            processedSummary.type = this.processValue(summary.type);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.serialize = function () {\n        var _this = this;\n        var /** @type {?} */ exportAs = [];\n        var /** @type {?} */ json = JSON.stringify({\n            summaries: this.processedSummaries,\n            symbols: this.symbols.map(function (symbol, index) {\n                symbol.assertNoMembers();\n                var /** @type {?} */ importAs = ((undefined));\n                if (_this.summaryResolver.isLibraryFile(symbol.filePath)) {\n                    importAs = symbol.name + \"_\" + index;\n                    exportAs.push({ symbol: symbol, exportAs: importAs });\n                }\n                return {\n                    __symbol: index,\n                    name: symbol.name,\n                    // We convert the source filenames tinto output filenames,\n                    // as the generated summary file will be used when teh current\n                    // compilation unit is used as a library\n                    filePath: _this.summaryResolver.getLibraryFileName(symbol.filePath),\n                    importAs: importAs\n                };\n            })\n        });\n        return { json: json, exportAs: exportAs };\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.processValue = function (value) { return visitValue(value, this, null); };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitOther = function (value, context) {\n        if (value instanceof StaticSymbol) {\n            var /** @type {?} */ baseSymbol = this.symbolResolver.getStaticSymbol(value.filePath, value.name);\n            var /** @type {?} */ index = this.indexBySymbol.get(baseSymbol);\n            // Note: == on purpose to compare with undefined!\n            if (index == null) {\n                index = this.indexBySymbol.size;\n                this.indexBySymbol.set(baseSymbol, index);\n                this.symbols.push(baseSymbol);\n            }\n            return { __symbol: index, members: value.members };\n        }\n    };\n    return ToJsonSerializer;\n}(ValueTransformer));\nvar ForJitSerializer = (function () {\n    /**\n     * @param {?} symbolResolver\n     */\n    function ForJitSerializer(symbolResolver) {\n        this.symbolResolver = symbolResolver;\n        this.data = new Map();\n    }\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addSourceType = function (summary, metadata) {\n        this.data.set(summary.type.reference, { summary: summary, metadata: metadata, isLibrary: false });\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addLibType = function (summary) {\n        this.data.set(summary.type.reference, { summary: summary, metadata: null, isLibrary: true });\n    };\n    /**\n     * @param {?} exportAs\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serialize = function (exportAs) {\n        var _this = this;\n        var /** @type {?} */ statements = [];\n        var /** @type {?} */ exportedVars = [];\n        var /** @type {?} */ ngModuleSymbols = new Set();\n        Array.from(this.data.values()).forEach(function (_a) {\n            var summary = _a.summary, metadata = _a.metadata, isLibrary = _a.isLibrary;\n            if (summary.summaryKind === CompileSummaryKind.NgModule) {\n                // collect the symbols that refer to NgModule classes.\n                // Note: we can't just rely on `summary.type.summaryKind` to determine this as\n                // we don't add the summaries of all referenced symbols when we serialize type summaries.\n                // See serializeSummaries for details.\n                ngModuleSymbols.add(summary.type.reference);\n                var /** @type {?} */ modSummary = (summary);\n                modSummary.modules.forEach(function (mod) { ngModuleSymbols.add(mod.reference); });\n            }\n            if (!isLibrary) {\n                var /** @type {?} */ fnName = summaryForJitName(summary.type.reference.name);\n                statements.push(fn([], [new ReturnStatement(_this.serializeSummaryWithDeps(summary, /** @type {?} */ ((metadata))))], new ArrayType(DYNAMIC_TYPE))\n                    .toDeclStmt(fnName, [StmtModifier.Final]));\n                exportedVars.push(fnName);\n            }\n        });\n        exportAs.forEach(function (entry) {\n            var /** @type {?} */ symbol = entry.symbol;\n            if (ngModuleSymbols.has(symbol)) {\n                var /** @type {?} */ jitExportAsName = summaryForJitName(entry.exportAs);\n                statements.push(variable(jitExportAsName).set(_this.serializeSummaryRef(symbol)).toDeclStmt());\n                exportedVars.push(jitExportAsName);\n            }\n        });\n        return { statements: statements, exportedVars: exportedVars };\n    };\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryWithDeps = function (summary, metadata) {\n        var _this = this;\n        var /** @type {?} */ expressions = [this.serializeSummary(summary)];\n        var /** @type {?} */ providers = [];\n        if (metadata instanceof CompileNgModuleMetadata) {\n            expressions.push.apply(expressions, \n            // For directives / pipes, we only add the declared ones,\n            // and rely on transitively importing NgModules to get the transitive\n            // summaries.\n            metadata.declaredDirectives.concat(metadata.declaredPipes)\n                .map(function (type) { return type.reference; })\n                .concat(metadata.transitiveModule.modules.map(function (type) { return type.reference; })\n                .filter(function (ref) { return ref !== metadata.type.reference; }))\n                .map(function (ref) { return _this.serializeSummaryRef(ref); }));\n            // Note: We don't use `NgModuleSummary.providers`, as that one is transitive,\n            // and we already have transitive modules.\n            providers = metadata.providers;\n        }\n        else if (summary.summaryKind === CompileSummaryKind.Directive) {\n            var /** @type {?} */ dirSummary = (summary);\n            providers = dirSummary.providers.concat(dirSummary.viewProviders);\n        }\n        // Note: We can't just refer to the `ngsummary.ts` files for `useClass` providers (as we do for\n        // declaredDirectives / declaredPipes), as we allow\n        // providers without ctor arguments to skip the `@Injectable` decorator,\n        // i.e. we didn't generate .ngsummary.ts files for these.\n        expressions.push.apply(expressions, providers.filter(function (provider) { return !!provider.useClass; }).map(function (provider) { return _this.serializeSummary(/** @type {?} */ ({\n            summaryKind: CompileSummaryKind.Injectable, type: provider.useClass\n        })); }));\n        return literalArr(expressions);\n    };\n    /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryRef = function (typeSymbol) {\n        var /** @type {?} */ jitImportedSymbol = this.symbolResolver.getStaticSymbol(summaryForJitFileName(typeSymbol.filePath), summaryForJitName(typeSymbol.name));\n        return importExpr({ reference: jitImportedSymbol });\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummary = function (data) {\n        var Transformer = (function () {\n            function Transformer() {\n            }\n            /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitArray = function (arr, context) {\n                var _this = this;\n                return literalArr(arr.map(function (entry) { return visitValue(entry, _this, context); }));\n            };\n            /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitStringMap = function (map, context) {\n                var _this = this;\n                return new LiteralMapExpr(Object.keys(map).map(function (key) { return new LiteralMapEntry(key, visitValue(map[key], _this, context)); }));\n            };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitPrimitive = function (value, context) { return literal(value); };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitOther = function (value, context) {\n                if (value instanceof StaticSymbol) {\n                    return importExpr({ reference: value });\n                }\n                else {\n                    throw new Error(\"Illegal State: Encountered value \" + value);\n                }\n            };\n            return Transformer;\n        }());\n        return visitValue(data, new Transformer(), null);\n    };\n    return ForJitSerializer;\n}());\nvar FromJsonDeserializer = (function (_super) {\n    __extends(FromJsonDeserializer, _super);\n    /**\n     * @param {?} symbolCache\n     */\n    function FromJsonDeserializer(symbolCache) {\n        var _this = _super.call(this) || this;\n        _this.symbolCache = symbolCache;\n        return _this;\n    }\n    /**\n     * @param {?} json\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.deserialize = function (json) {\n        var _this = this;\n        var /** @type {?} */ data = JSON.parse(json);\n        var /** @type {?} */ importAs = [];\n        this.symbols = [];\n        data.symbols.forEach(function (serializedSymbol) {\n            var /** @type {?} */ symbol = _this.symbolCache.get(serializedSymbol.filePath, serializedSymbol.name);\n            _this.symbols.push(symbol);\n            if (serializedSymbol.importAs) {\n                importAs.push({ symbol: symbol, importAs: serializedSymbol.importAs });\n            }\n        });\n        var /** @type {?} */ summaries = visitValue(data.summaries, this, null);\n        return { summaries: summaries, importAs: importAs };\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.visitStringMap = function (map, context) {\n        if ('__symbol' in map) {\n            var /** @type {?} */ baseSymbol = this.symbols[map['__symbol']];\n            var /** @type {?} */ members = map['members'];\n            return members.length ? this.symbolCache.get(baseSymbol.filePath, baseSymbol.name, members) :\n                baseSymbol;\n        }\n        else {\n            return _super.prototype.visitStringMap.call(this, map, context);\n        }\n    };\n    return FromJsonDeserializer;\n}(ValueTransformer));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AotCompiler = (function () {\n    /**\n     * @param {?} _config\n     * @param {?} _host\n     * @param {?} _metadataResolver\n     * @param {?} _templateParser\n     * @param {?} _styleCompiler\n     * @param {?} _viewCompiler\n     * @param {?} _ngModuleCompiler\n     * @param {?} _outputEmitter\n     * @param {?} _summaryResolver\n     * @param {?} _localeId\n     * @param {?} _translationFormat\n     * @param {?} _genFilePreamble\n     * @param {?} _symbolResolver\n     */\n    function AotCompiler(_config, _host, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _outputEmitter, _summaryResolver, _localeId, _translationFormat, _genFilePreamble, _symbolResolver) {\n        this._config = _config;\n        this._host = _host;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._outputEmitter = _outputEmitter;\n        this._summaryResolver = _summaryResolver;\n        this._localeId = _localeId;\n        this._translationFormat = _translationFormat;\n        this._genFilePreamble = _genFilePreamble;\n        this._symbolResolver = _symbolResolver;\n    }\n    /**\n     * @return {?}\n     */\n    AotCompiler.prototype.clearCache = function () { this._metadataResolver.clearCache(); };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.compileAll = function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ programSymbols = extractProgramSymbols(this._symbolResolver, rootFiles, this._host);\n        var _a = analyzeAndValidateNgModules(programSymbols, this._host, this._metadataResolver), ngModuleByPipeOrDirective = _a.ngModuleByPipeOrDirective, files = _a.files, ngModules = _a.ngModules;\n        return Promise\n            .all(ngModules.map(function (ngModule) { return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false); }))\n            .then(function () {\n            var /** @type {?} */ sourceModules = files.map(function (file) { return _this._compileSrcFile(file.srcUrl, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables); });\n            return flatten(sourceModules);\n        });\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    AotCompiler.prototype._compileSrcFile = function (srcFileUrl, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n        var _this = this;\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(srcFileUrl, true)[1];\n        var /** @type {?} */ statements = [];\n        var /** @type {?} */ exportedVars = [];\n        var /** @type {?} */ generatedFiles = [];\n        generatedFiles.push.apply(generatedFiles, this._createSummary(srcFileUrl, directives, pipes, ngModules, injectables, statements, exportedVars));\n        // compile all ng modules\n        exportedVars.push.apply(exportedVars, ngModules.map(function (ngModuleType) { return _this._compileModule(ngModuleType, statements); }));\n        // compile components\n        directives.forEach(function (dirType) {\n            var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(/** @type {?} */ (dirType));\n            if (!compMeta.isComponent) {\n                return Promise.resolve(null);\n            }\n            var /** @type {?} */ ngModule = ngModuleByPipeOrDirective.get(dirType);\n            if (!ngModule) {\n                throw new Error(\"Internal Error: cannot determine the module for component \" + identifierName(compMeta.type) + \"!\");\n            }\n            _assertComponent(compMeta);\n            // compile styles\n            var /** @type {?} */ stylesCompileResults = _this._styleCompiler.compileComponent(compMeta);\n            stylesCompileResults.externalStylesheets.forEach(function (compiledStyleSheet) {\n                generatedFiles.push(_this._codgenStyles(srcFileUrl, compiledStyleSheet, fileSuffix));\n            });\n            // compile components\n            var /** @type {?} */ compViewVars = _this._compileComponent(compMeta, ngModule, ngModule.transitiveModule.directives, stylesCompileResults.componentStylesheet, fileSuffix, statements);\n            exportedVars.push(_this._compileComponentFactory(compMeta, ngModule, fileSuffix, statements), compViewVars.viewClassVar, compViewVars.compRenderTypeVar);\n        });\n        if (statements.length > 0) {\n            var /** @type {?} */ srcModule = this._codegenSourceModule(srcFileUrl, ngfactoryFilePath(srcFileUrl, true), statements, exportedVars);\n            generatedFiles.unshift(srcModule);\n        }\n        return generatedFiles;\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} targetStatements\n     * @param {?} targetExportedVars\n     * @return {?}\n     */\n    AotCompiler.prototype._createSummary = function (srcFileUrl, directives, pipes, ngModules, injectables, targetStatements, targetExportedVars) {\n        var _this = this;\n        var /** @type {?} */ symbolSummaries = this._symbolResolver.getSymbolsOf(srcFileUrl)\n            .map(function (symbol) { return _this._symbolResolver.resolveSymbol(symbol); });\n        var /** @type {?} */ typeData = ngModules.map(function (ref) { return ({\n            summary: /** @type {?} */ ((_this._metadataResolver.getNgModuleSummary(ref))),\n            metadata: /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(ref)))\n        }); }).concat(directives.map(function (ref) { return ({\n            summary: /** @type {?} */ ((_this._metadataResolver.getDirectiveSummary(ref))),\n            metadata: /** @type {?} */ ((_this._metadataResolver.getDirectiveMetadata(ref)))\n        }); }), pipes.map(function (ref) { return ({\n            summary: /** @type {?} */ ((_this._metadataResolver.getPipeSummary(ref))),\n            metadata: /** @type {?} */ ((_this._metadataResolver.getPipeMetadata(ref)))\n        }); }), injectables.map(function (ref) { return ({\n            summary: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))),\n            metadata: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))).type\n        }); }));\n        var _a = serializeSummaries(this._summaryResolver, this._symbolResolver, symbolSummaries, typeData), json = _a.json, exportAs = _a.exportAs, forJit = _a.forJit;\n        exportAs.forEach(function (entry) {\n            targetStatements.push(variable(entry.exportAs).set(importExpr({ reference: entry.symbol })).toDeclStmt());\n            targetExportedVars.push(entry.exportAs);\n        });\n        return [\n            new GeneratedFile(srcFileUrl, summaryFileName(srcFileUrl), json),\n            this._codegenSourceModule(srcFileUrl, summaryForJitFileName(srcFileUrl, true), forJit.statements, forJit.exportedVars)\n        ];\n    };\n    /**\n     * @param {?} ngModuleType\n     * @param {?} targetStatements\n     * @return {?}\n     */\n    AotCompiler.prototype._compileModule = function (ngModuleType, targetStatements) {\n        var /** @type {?} */ ngModule = ((this._metadataResolver.getNgModuleMetadata(ngModuleType)));\n        var /** @type {?} */ providers = [];\n        if (this._localeId) {\n            providers.push({\n                token: createIdentifierToken(Identifiers.LOCALE_ID),\n                useValue: this._localeId,\n            });\n        }\n        if (this._translationFormat) {\n            providers.push({\n                token: createIdentifierToken(Identifiers.TRANSLATIONS_FORMAT),\n                useValue: this._translationFormat\n            });\n        }\n        var /** @type {?} */ appCompileResult = this._ngModuleCompiler.compile(ngModule, providers);\n        targetStatements.push.apply(targetStatements, appCompileResult.statements);\n        return appCompileResult.ngModuleFactoryVar;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @param {?} targetStatements\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponentFactory = function (compMeta, ngModule, fileSuffix, targetStatements) {\n        var /** @type {?} */ hostType = this._metadataResolver.getHostComponentType(compMeta.type.reference);\n        var /** @type {?} */ hostMeta = createHostComponentMeta(hostType, compMeta, this._metadataResolver.getHostComponentViewClass(hostType));\n        var /** @type {?} */ hostViewFactoryVar = this._compileComponent(hostMeta, ngModule, [compMeta.type], null, fileSuffix, targetStatements)\n            .viewClassVar;\n        var /** @type {?} */ compFactoryVar = componentFactoryName(compMeta.type.reference);\n        var /** @type {?} */ inputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.inputs) {\n            var /** @type {?} */ templateName = compMeta.inputs[propName];\n            // Don't quote so that the key gets minified...\n            inputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        var /** @type {?} */ outputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.outputs) {\n            var /** @type {?} */ templateName = compMeta.outputs[propName];\n            // Don't quote so that the key gets minified...\n            outputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        targetStatements.push(variable(compFactoryVar)\n            .set(importExpr(createIdentifier(Identifiers.createComponentFactory)).callFn([\n            literal(compMeta.selector), importExpr(compMeta.type),\n            variable(hostViewFactoryVar), new LiteralMapExpr(inputsExprs),\n            new LiteralMapExpr(outputsExprs),\n            literalArr(/** @type {?} */ ((compMeta.template)).ngContentSelectors.map(function (selector) { return literal(selector); }))\n        ]))\n            .toDeclStmt(importType(createIdentifier(Identifiers.ComponentFactory), [/** @type {?} */ ((importType(compMeta.type)))], [TypeModifier.Const]), [StmtModifier.Final]));\n        return compFactoryVar;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @param {?} targetStatements\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponent = function (compMeta, ngModule, directiveIdentifiers, componentStyles, fileSuffix, targetStatements) {\n        var _this = this;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var _a = this._templateParser.parse(compMeta, /** @type {?} */ ((((compMeta.template)).template)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template)))), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ stylesExpr = componentStyles ? variable(componentStyles.stylesVar) : literalArr([]);\n        var /** @type {?} */ viewResult = this._viewCompiler.compileComponent(compMeta, parsedTemplate, stylesExpr, usedPipes);\n        if (componentStyles) {\n            targetStatements.push.apply(targetStatements, _resolveStyleStatements(this._symbolResolver, componentStyles, fileSuffix));\n        }\n        targetStatements.push.apply(targetStatements, viewResult.statements);\n        return { viewClassVar: viewResult.viewClassVar, compRenderTypeVar: viewResult.rendererTypeVar };\n    };\n    /**\n     * @param {?} fileUrl\n     * @param {?} stylesCompileResult\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._codgenStyles = function (fileUrl, stylesCompileResult, fileSuffix) {\n        _resolveStyleStatements(this._symbolResolver, stylesCompileResult, fileSuffix);\n        return this._codegenSourceModule(fileUrl, _stylesModuleUrl(/** @type {?} */ ((stylesCompileResult.meta.moduleUrl)), stylesCompileResult.isShimmed, fileSuffix), stylesCompileResult.statements, [stylesCompileResult.stylesVar]);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} genFileUrl\n     * @param {?} statements\n     * @param {?} exportedVars\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenSourceModule = function (srcFileUrl, genFileUrl, statements, exportedVars) {\n        return new GeneratedFile(srcFileUrl, genFileUrl, this._outputEmitter.emitStatements(sourceUrl(srcFileUrl), genFileUrl, statements, exportedVars, this._genFilePreamble));\n    };\n    return AotCompiler;\n}());\n/**\n * @param {?} reflector\n * @param {?} compileResult\n * @param {?} fileSuffix\n * @return {?}\n */\nfunction _resolveStyleStatements(reflector, compileResult, fileSuffix) {\n    compileResult.dependencies.forEach(function (dep) {\n        dep.valuePlaceholder.reference = reflector.getStaticSymbol(_stylesModuleUrl(dep.moduleUrl, dep.isShimmed, fileSuffix), dep.name);\n    });\n    return compileResult.statements;\n}\n/**\n * @param {?} stylesheetUrl\n * @param {?} shim\n * @param {?} suffix\n * @return {?}\n */\nfunction _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n    return \"\" + stylesheetUrl + (shim ? '.shim' : '') + \".ngstyle\" + suffix;\n}\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction _assertComponent(meta) {\n    if (!meta.isComponent) {\n        throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n    }\n}\n/**\n * @param {?} programStaticSymbols\n * @param {?} host\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeNgModules(programStaticSymbols, host, metadataResolver) {\n    var _a = _createNgModules(programStaticSymbols, host, metadataResolver), ngModules = _a.ngModules, symbolsMissingModule = _a.symbolsMissingModule;\n    return _analyzeNgModules(programStaticSymbols, ngModules, symbolsMissingModule, metadataResolver);\n}\n/**\n * @param {?} programStaticSymbols\n * @param {?} host\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeAndValidateNgModules(programStaticSymbols, host, metadataResolver) {\n    var /** @type {?} */ result = analyzeNgModules(programStaticSymbols, host, metadataResolver);\n    if (result.symbolsMissingModule && result.symbolsMissingModule.length) {\n        var /** @type {?} */ messages = result.symbolsMissingModule.map(function (s) { return \"Cannot determine the module for class \" + s.name + \" in \" + s.filePath + \"! Add \" + s.name + \" to the NgModule to fix it.\"; });\n        throw syntaxError(messages.join('\\n'));\n    }\n    return result;\n}\n/**\n * @param {?} programSymbols\n * @param {?} ngModuleMetas\n * @param {?} symbolsMissingModule\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _analyzeNgModules(programSymbols, ngModuleMetas, symbolsMissingModule, metadataResolver) {\n    var /** @type {?} */ moduleMetasByRef = new Map();\n    ngModuleMetas.forEach(function (ngModule) { return moduleMetasByRef.set(ngModule.type.reference, ngModule); });\n    var /** @type {?} */ ngModuleByPipeOrDirective = new Map();\n    var /** @type {?} */ ngModulesByFile = new Map();\n    var /** @type {?} */ ngDirectivesByFile = new Map();\n    var /** @type {?} */ ngPipesByFile = new Map();\n    var /** @type {?} */ ngInjectablesByFile = new Map();\n    var /** @type {?} */ filePaths = new Set();\n    // Make sure we produce an analyzed file for each input file\n    programSymbols.forEach(function (symbol) {\n        var /** @type {?} */ filePath = symbol.filePath;\n        filePaths.add(filePath);\n        if (metadataResolver.isInjectable(symbol)) {\n            ngInjectablesByFile.set(filePath, (ngInjectablesByFile.get(filePath) || []).concat(symbol));\n        }\n    });\n    // Looping over all modules to construct:\n    // - a map from file to modules `ngModulesByFile`,\n    // - a map from file to directives `ngDirectivesByFile`,\n    // - a map from file to pipes `ngPipesByFile`,\n    // - a map from directive/pipe to module `ngModuleByPipeOrDirective`.\n    ngModuleMetas.forEach(function (ngModuleMeta) {\n        var /** @type {?} */ srcFileUrl = ngModuleMeta.type.reference.filePath;\n        filePaths.add(srcFileUrl);\n        ngModulesByFile.set(srcFileUrl, (ngModulesByFile.get(srcFileUrl) || []).concat(ngModuleMeta.type.reference));\n        ngModuleMeta.declaredDirectives.forEach(function (dirIdentifier) {\n            var /** @type {?} */ fileUrl = dirIdentifier.reference.filePath;\n            filePaths.add(fileUrl);\n            ngDirectivesByFile.set(fileUrl, (ngDirectivesByFile.get(fileUrl) || []).concat(dirIdentifier.reference));\n            ngModuleByPipeOrDirective.set(dirIdentifier.reference, ngModuleMeta);\n        });\n        ngModuleMeta.declaredPipes.forEach(function (pipeIdentifier) {\n            var /** @type {?} */ fileUrl = pipeIdentifier.reference.filePath;\n            filePaths.add(fileUrl);\n            ngPipesByFile.set(fileUrl, (ngPipesByFile.get(fileUrl) || []).concat(pipeIdentifier.reference));\n            ngModuleByPipeOrDirective.set(pipeIdentifier.reference, ngModuleMeta);\n        });\n    });\n    var /** @type {?} */ files = [];\n    filePaths.forEach(function (srcUrl) {\n        var /** @type {?} */ directives = ngDirectivesByFile.get(srcUrl) || [];\n        var /** @type {?} */ pipes = ngPipesByFile.get(srcUrl) || [];\n        var /** @type {?} */ ngModules = ngModulesByFile.get(srcUrl) || [];\n        var /** @type {?} */ injectables = ngInjectablesByFile.get(srcUrl) || [];\n        files.push({ srcUrl: srcUrl, directives: directives, pipes: pipes, ngModules: ngModules, injectables: injectables });\n    });\n    return {\n        // map directive/pipe to module\n        ngModuleByPipeOrDirective: ngModuleByPipeOrDirective,\n        // list modules and directives for every source file\n        files: files,\n        ngModules: ngModuleMetas, symbolsMissingModule: symbolsMissingModule\n    };\n}\n/**\n * @param {?} staticSymbolResolver\n * @param {?} files\n * @param {?} host\n * @return {?}\n */\nfunction extractProgramSymbols(staticSymbolResolver, files, host) {\n    var /** @type {?} */ staticSymbols = [];\n    files.filter(function (fileName) { return host.isSourceFile(fileName); }).forEach(function (sourceFile) {\n        staticSymbolResolver.getSymbolsOf(sourceFile).forEach(function (symbol) {\n            var /** @type {?} */ resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            var /** @type {?} */ symbolMeta = resolvedSymbol.metadata;\n            if (symbolMeta) {\n                if (symbolMeta.__symbolic != 'error') {\n                    // Ignore symbols that are only included to record error information.\n                    staticSymbols.push(resolvedSymbol.symbol);\n                }\n            }\n        });\n    });\n    return staticSymbols;\n}\n/**\n * @param {?} programStaticSymbols\n * @param {?} host\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _createNgModules(programStaticSymbols, host, metadataResolver) {\n    var /** @type {?} */ ngModules = new Map();\n    var /** @type {?} */ programPipesAndDirectives = [];\n    var /** @type {?} */ ngModulePipesAndDirective = new Set();\n    var /** @type {?} */ addNgModule = function (staticSymbol) {\n        if (ngModules.has(staticSymbol) || !host.isSourceFile(staticSymbol.filePath)) {\n            return false;\n        }\n        var /** @type {?} */ ngModule = metadataResolver.getNgModuleMetadata(staticSymbol, false);\n        if (ngModule) {\n            ngModules.set(ngModule.type.reference, ngModule);\n            ngModule.declaredDirectives.forEach(function (dir) { return ngModulePipesAndDirective.add(dir.reference); });\n            ngModule.declaredPipes.forEach(function (pipe) { return ngModulePipesAndDirective.add(pipe.reference); });\n            // For every input module add the list of transitively included modules\n            ngModule.transitiveModule.modules.forEach(function (modMeta) { return addNgModule(modMeta.reference); });\n        }\n        return !!ngModule;\n    };\n    programStaticSymbols.forEach(function (staticSymbol) {\n        if (!addNgModule(staticSymbol) &&\n            (metadataResolver.isDirective(staticSymbol) || metadataResolver.isPipe(staticSymbol))) {\n            programPipesAndDirectives.push(staticSymbol);\n        }\n    });\n    // Throw an error if any of the program pipe or directives is not declared by a module\n    var /** @type {?} */ symbolsMissingModule = programPipesAndDirectives.filter(function (s) { return !ngModulePipesAndDirective.has(s); });\n    return { ngModules: Array.from(ngModules.values()), symbolsMissingModule: symbolsMissingModule };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar StaticAndDynamicReflectionCapabilities = (function () {\n    /**\n     * @param {?} staticDelegate\n     */\n    function StaticAndDynamicReflectionCapabilities(staticDelegate) {\n        this.staticDelegate = staticDelegate;\n        this.dynamicDelegate = new _angular_core.ɵReflectionCapabilities();\n    }\n    /**\n     * @param {?} staticDelegate\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.install = function (staticDelegate) {\n        _angular_core.ɵreflector.updateCapabilities(new StaticAndDynamicReflectionCapabilities(staticDelegate));\n    };\n    /**\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.factory = function (type) { return this.dynamicDelegate.factory(type); };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n        return isStaticType(type) ? this.staticDelegate.hasLifecycleHook(type, lcProperty) :\n            this.dynamicDelegate.hasLifecycleHook(type, lcProperty);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.parameters = function (type) {\n        return isStaticType(type) ? this.staticDelegate.parameters(type) :\n            this.dynamicDelegate.parameters(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.annotations = function (type) {\n        return isStaticType(type) ? this.staticDelegate.annotations(type) :\n            this.dynamicDelegate.annotations(type);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n        return isStaticType(typeOrFunc) ? this.staticDelegate.propMetadata(typeOrFunc) :\n            this.dynamicDelegate.propMetadata(typeOrFunc);\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.getter = function (name) { return this.dynamicDelegate.getter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.setter = function (name) { return this.dynamicDelegate.setter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.method = function (name) { return this.dynamicDelegate.method(name); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.importUri = function (type) { return ((this.staticDelegate.importUri(type))); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.resourceUri = function (type) { return this.staticDelegate.resourceUri(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n        return this.staticDelegate.resolveIdentifier(name, moduleUrl, members);\n    };\n    /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) {\n        if (isStaticType(enumIdentifier)) {\n            return this.staticDelegate.resolveEnum(enumIdentifier, name);\n        }\n        else {\n            return null;\n        }\n    };\n    return StaticAndDynamicReflectionCapabilities;\n}());\n/**\n * @param {?} type\n * @return {?}\n */\nfunction isStaticType(type) {\n    return typeof type === 'object' && type.name && type.filePath;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANGULAR_CORE = '@angular/core';\nvar HIDDEN_KEY = /^\\$.*\\$$/;\nvar IGNORE = {\n    __symbolic: 'ignore'\n};\n/**\n * @param {?} value\n * @return {?}\n */\nfunction shouldIgnore(value) {\n    return value && value.__symbolic == 'ignore';\n}\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nvar StaticReflector = (function () {\n    /**\n     * @param {?} summaryResolver\n     * @param {?} symbolResolver\n     * @param {?=} knownMetadataClasses\n     * @param {?=} knownMetadataFunctions\n     * @param {?=} errorRecorder\n     */\n    function StaticReflector(summaryResolver, symbolResolver, knownMetadataClasses, knownMetadataFunctions, errorRecorder) {\n        if (knownMetadataClasses === void 0) { knownMetadataClasses = []; }\n        if (knownMetadataFunctions === void 0) { knownMetadataFunctions = []; }\n        var _this = this;\n        this.summaryResolver = summaryResolver;\n        this.symbolResolver = symbolResolver;\n        this.errorRecorder = errorRecorder;\n        this.annotationCache = new Map();\n        this.propertyCache = new Map();\n        this.parameterCache = new Map();\n        this.methodCache = new Map();\n        this.conversionMap = new Map();\n        this.annotationForParentClassWithSummaryKind = new Map();\n        this.annotationNames = new Map();\n        this.initializeConversionMap();\n        knownMetadataClasses.forEach(function (kc) { return _this._registerDecoratorOrConstructor(_this.getStaticSymbol(kc.filePath, kc.name), kc.ctor); });\n        knownMetadataFunctions.forEach(function (kf) { return _this._registerFunction(_this.getStaticSymbol(kf.filePath, kf.name), kf.fn); });\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Directive, [_angular_core.Directive, _angular_core.Component]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Pipe, [_angular_core.Pipe]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.NgModule, [_angular_core.NgModule]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Injectable, [_angular_core.Injectable, _angular_core.Pipe, _angular_core.Directive, _angular_core.Component, _angular_core.NgModule]);\n        this.annotationNames.set(_angular_core.Directive, 'Directive');\n        this.annotationNames.set(_angular_core.Component, 'Component');\n        this.annotationNames.set(_angular_core.Pipe, 'Pipe');\n        this.annotationNames.set(_angular_core.NgModule, 'NgModule');\n        this.annotationNames.set(_angular_core.Injectable, 'Injectable');\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    StaticReflector.prototype.importUri = function (typeOrFunc) {\n        var /** @type {?} */ staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n        return staticSymbol ? staticSymbol.filePath : null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    StaticReflector.prototype.resourceUri = function (typeOrFunc) {\n        var /** @type {?} */ staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n        return this.symbolResolver.getResourcePath(staticSymbol);\n    };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @return {?}\n     */\n    StaticReflector.prototype.resolveIdentifier = function (name, moduleUrl, members) {\n        var /** @type {?} */ importSymbol = this.getStaticSymbol(moduleUrl, name);\n        var /** @type {?} */ rootSymbol = this.findDeclaration(moduleUrl, name);\n        if (importSymbol != rootSymbol) {\n            this.symbolResolver.recordImportAs(rootSymbol, importSymbol);\n        }\n        if (members && members.length) {\n            return this.getStaticSymbol(rootSymbol.filePath, rootSymbol.name, members);\n        }\n        return rootSymbol;\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.findDeclaration = function (moduleUrl, name, containingFile) {\n        return this.findSymbolDeclaration(this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    StaticReflector.prototype.findSymbolDeclaration = function (symbol) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n        if (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            return this.findSymbolDeclaration(resolvedSymbol.metadata);\n        }\n        else {\n            return symbol;\n        }\n    };\n    /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    StaticReflector.prototype.resolveEnum = function (enumIdentifier, name) {\n        var /** @type {?} */ staticSymbol = enumIdentifier;\n        var /** @type {?} */ members = (staticSymbol.members || []).concat(name);\n        return this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name, members);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.annotations = function (type) {\n        var _this = this;\n        var /** @type {?} */ annotations = this.annotationCache.get(type);\n        if (!annotations) {\n            annotations = [];\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentAnnotations = this.annotations(parentType);\n                annotations.push.apply(annotations, parentAnnotations);\n            }\n            var /** @type {?} */ ownAnnotations_1 = [];\n            if (classMetadata['decorators']) {\n                ownAnnotations_1 = this.simplify(type, classMetadata['decorators']);\n                annotations.push.apply(annotations, ownAnnotations_1);\n            }\n            if (parentType && !this.summaryResolver.isLibraryFile(type.filePath) &&\n                this.summaryResolver.isLibraryFile(parentType.filePath)) {\n                var /** @type {?} */ summary = this.summaryResolver.resolveSummary(parentType);\n                if (summary && summary.type) {\n                    var /** @type {?} */ requiredAnnotationTypes = ((this.annotationForParentClassWithSummaryKind.get(/** @type {?} */ ((summary.type.summaryKind)))));\n                    var /** @type {?} */ typeHasRequiredAnnotation = requiredAnnotationTypes.some(function (requiredType) { return ownAnnotations_1.some(function (ann) { return ann instanceof requiredType; }); });\n                    if (!typeHasRequiredAnnotation) {\n                        this.reportError(syntaxError(\"Class \" + type.name + \" in \" + type.filePath + \" extends from a \" + CompileSummaryKind[((summary.type.summaryKind))] + \" in another compilation unit without duplicating the decorator. \" +\n                            (\"Please add a \" + requiredAnnotationTypes.map(function (type) { return _this.annotationNames.get(type); }).join(' or ') + \" decorator to the class.\")), type);\n                    }\n                }\n            }\n            this.annotationCache.set(type, annotations.filter(function (ann) { return !!ann; }));\n        }\n        return annotations;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.propMetadata = function (type) {\n        var _this = this;\n        var /** @type {?} */ propMetadata = this.propertyCache.get(type);\n        if (!propMetadata) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            propMetadata = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentType);\n                Object.keys(parentPropMetadata_1).forEach(function (parentProp) {\n                    ((propMetadata))[parentProp] = parentPropMetadata_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_1 = classMetadata['members'] || {};\n            Object.keys(members_1).forEach(function (propName) {\n                var /** @type {?} */ propData = members_1[propName];\n                var /** @type {?} */ prop = ((propData))\n                    .find(function (a) { return a['__symbolic'] == 'property' || a['__symbolic'] == 'method'; });\n                var /** @type {?} */ decorators = [];\n                if (((propMetadata))[propName]) {\n                    decorators.push.apply(decorators, ((propMetadata))[propName]);\n                } /** @type {?} */\n                ((propMetadata))[propName] = decorators;\n                if (prop && prop['decorators']) {\n                    decorators.push.apply(decorators, _this.simplify(type, prop['decorators']));\n                }\n            });\n            this.propertyCache.set(type, propMetadata);\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.parameters = function (type) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"parameters received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return [];\n        }\n        try {\n            var /** @type {?} */ parameters_1 = this.parameterCache.get(type);\n            if (!parameters_1) {\n                var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n                var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n                var /** @type {?} */ members = classMetadata ? classMetadata['members'] : null;\n                var /** @type {?} */ ctorData = members ? members['__ctor__'] : null;\n                if (ctorData) {\n                    var /** @type {?} */ ctor = ((ctorData)).find(function (a) { return a['__symbolic'] == 'constructor'; });\n                    var /** @type {?} */ parameterTypes = (this.simplify(type, ctor['parameters'] || []));\n                    var /** @type {?} */ parameterDecorators_1 = (this.simplify(type, ctor['parameterDecorators'] || []));\n                    parameters_1 = [];\n                    parameterTypes.forEach(function (paramType, index) {\n                        var /** @type {?} */ nestedResult = [];\n                        if (paramType) {\n                            nestedResult.push(paramType);\n                        }\n                        var /** @type {?} */ decorators = parameterDecorators_1 ? parameterDecorators_1[index] : null;\n                        if (decorators) {\n                            nestedResult.push.apply(nestedResult, decorators);\n                        } /** @type {?} */\n                        ((parameters_1)).push(nestedResult);\n                    });\n                }\n                else if (parentType) {\n                    parameters_1 = this.parameters(parentType);\n                }\n                if (!parameters_1) {\n                    parameters_1 = [];\n                }\n                this.parameterCache.set(type, parameters_1);\n            }\n            return parameters_1;\n        }\n        catch (e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype._methodNames = function (type) {\n        var /** @type {?} */ methodNames = this.methodCache.get(type);\n        if (!methodNames) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            methodNames = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentMethodNames_1 = this._methodNames(parentType);\n                Object.keys(parentMethodNames_1).forEach(function (parentProp) {\n                    ((methodNames))[parentProp] = parentMethodNames_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_2 = classMetadata['members'] || {};\n            Object.keys(members_2).forEach(function (propName) {\n                var /** @type {?} */ propData = members_2[propName];\n                var /** @type {?} */ isMethod = ((propData)).some(function (a) { return a['__symbolic'] == 'method'; }); /** @type {?} */\n                ((methodNames))[propName] = ((methodNames))[propName] || isMethod;\n            });\n            this.methodCache.set(type, methodNames);\n        }\n        return methodNames;\n    };\n    /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    StaticReflector.prototype.findParentType = function (type, classMetadata) {\n        var /** @type {?} */ parentType = this.trySimplify(type, classMetadata['extends']);\n        if (parentType instanceof StaticSymbol) {\n            return parentType;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    StaticReflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"hasLifecycleHook received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n        }\n        try {\n            return !!this._methodNames(type)[lcProperty];\n        }\n        catch (e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    StaticReflector.prototype._registerDecoratorOrConstructor = function (type, ctor) {\n        this.conversionMap.set(type, function (context, args) { return new (ctor.bind.apply(ctor, [void 0].concat(args)))(); });\n    };\n    /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    StaticReflector.prototype._registerFunction = function (type, fn) {\n        this.conversionMap.set(type, function (context, args) { return fn.apply(undefined, args); });\n    };\n    /**\n     * @return {?}\n     */\n    StaticReflector.prototype.initializeConversionMap = function () {\n        this.injectionToken = this.findDeclaration(ANGULAR_CORE, 'InjectionToken');\n        this.opaqueToken = this.findDeclaration(ANGULAR_CORE, 'OpaqueToken');\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), _angular_core.Host);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Injectable'), _angular_core.Injectable);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), _angular_core.Self);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), _angular_core.SkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Inject'), _angular_core.Inject);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), _angular_core.Optional);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Attribute'), _angular_core.Attribute);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChild'), _angular_core.ContentChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChildren'), _angular_core.ContentChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChild'), _angular_core.ViewChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChildren'), _angular_core.ViewChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Input'), _angular_core.Input);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Output'), _angular_core.Output);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Pipe'), _angular_core.Pipe);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostBinding'), _angular_core.HostBinding);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostListener'), _angular_core.HostListener);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Directive'), _angular_core.Directive);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Component'), _angular_core.Component);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'NgModule'), _angular_core.NgModule);\n        // Note: Some metadata classes can be used directly with Provider.deps.\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), _angular_core.Host);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), _angular_core.Self);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), _angular_core.SkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), _angular_core.Optional);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'trigger'), _angular_core.trigger);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'state'), _angular_core.state);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'transition'), _angular_core.transition);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'style'), _angular_core.style);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'animate'), _angular_core.animate);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'keyframes'), _angular_core.keyframes);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'sequence'), _angular_core.sequence);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'group'), _angular_core.group);\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticReflector.prototype.getStaticSymbol = function (declarationFile, name, members) {\n        return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n    };\n    /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticReflector.prototype.reportError = function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.trySimplify = function (context, value) {\n        var /** @type {?} */ originalRecorder = this.errorRecorder;\n        this.errorRecorder = function (error, fileName) { };\n        var /** @type {?} */ result = this.simplify(context, value);\n        this.errorRecorder = originalRecorder;\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.simplify = function (context, value) {\n        var _this = this;\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ scope = BindingScope.empty;\n        var /** @type {?} */ calling = new Map();\n        /**\n         * @param {?} context\n         * @param {?} value\n         * @param {?} depth\n         * @return {?}\n         */\n        function simplifyInContext(context, value, depth) {\n            /**\n             * @param {?} staticSymbol\n             * @return {?}\n             */\n            function resolveReferenceValue(staticSymbol) {\n                var /** @type {?} */ resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n                return resolvedSymbol ? resolvedSymbol.metadata : null;\n            }\n            /**\n             * @param {?} functionSymbol\n             * @param {?} targetFunction\n             * @param {?} args\n             * @return {?}\n             */\n            function simplifyCall(functionSymbol, targetFunction, args) {\n                if (targetFunction && targetFunction['__symbolic'] == 'function') {\n                    if (calling.get(functionSymbol)) {\n                        throw new Error('Recursion not supported');\n                    }\n                    calling.set(functionSymbol, true);\n                    try {\n                        var /** @type {?} */ value_1 = targetFunction['value'];\n                        if (value_1 && (depth != 0 || value_1.__symbolic != 'error')) {\n                            var /** @type {?} */ parameters = targetFunction['parameters'];\n                            var /** @type {?} */ defaults = targetFunction.defaults;\n                            args = args.map(function (arg) { return simplifyInContext(context, arg, depth + 1); })\n                                .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                            if (defaults && defaults.length > args.length) {\n                                args.push.apply(args, defaults.slice(args.length).map(function (value) { return simplify(value); }));\n                            }\n                            var /** @type {?} */ functionScope = BindingScope.build();\n                            for (var /** @type {?} */ i = 0; i < parameters.length; i++) {\n                                functionScope.define(parameters[i], args[i]);\n                            }\n                            var /** @type {?} */ oldScope = scope;\n                            var /** @type {?} */ result_1;\n                            try {\n                                scope = functionScope.done();\n                                result_1 = simplifyInContext(functionSymbol, value_1, depth + 1);\n                            }\n                            finally {\n                                scope = oldScope;\n                            }\n                            return result_1;\n                        }\n                    }\n                    finally {\n                        calling.delete(functionSymbol);\n                    }\n                }\n                if (depth === 0) {\n                    // If depth is 0 we are evaluating the top level expression that is describing element\n                    // decorator. In this case, it is a decorator we don't understand, such as a custom\n                    // non-angular decorator, and we should just ignore it.\n                    return IGNORE;\n                }\n                return simplify({ __symbolic: 'error', message: 'Function call not supported', context: functionSymbol });\n            }\n            /**\n             * @param {?} expression\n             * @return {?}\n             */\n            function simplify(expression) {\n                if (isPrimitive(expression)) {\n                    return expression;\n                }\n                if (expression instanceof Array) {\n                    var /** @type {?} */ result_2 = [];\n                    for (var _i = 0, _a = ((expression)); _i < _a.length; _i++) {\n                        var item = _a[_i];\n                        // Check for a spread expression\n                        if (item && item.__symbolic === 'spread') {\n                            var /** @type {?} */ spreadArray = simplify(item.expression);\n                            if (Array.isArray(spreadArray)) {\n                                for (var _b = 0, spreadArray_1 = spreadArray; _b < spreadArray_1.length; _b++) {\n                                    var spreadItem = spreadArray_1[_b];\n                                    result_2.push(spreadItem);\n                                }\n                                continue;\n                            }\n                        }\n                        var /** @type {?} */ value_2 = simplify(item);\n                        if (shouldIgnore(value_2)) {\n                            continue;\n                        }\n                        result_2.push(value_2);\n                    }\n                    return result_2;\n                }\n                if (expression instanceof StaticSymbol) {\n                    // Stop simplification at builtin symbols\n                    if (expression === self.injectionToken || expression === self.opaqueToken ||\n                        self.conversionMap.has(expression)) {\n                        return expression;\n                    }\n                    else {\n                        var /** @type {?} */ staticSymbol = expression;\n                        var /** @type {?} */ declarationValue = resolveReferenceValue(staticSymbol);\n                        if (declarationValue) {\n                            return simplifyInContext(staticSymbol, declarationValue, depth + 1);\n                        }\n                        else {\n                            return staticSymbol;\n                        }\n                    }\n                }\n                if (expression) {\n                    if (expression['__symbolic']) {\n                        var /** @type {?} */ staticSymbol = void 0;\n                        switch (expression['__symbolic']) {\n                            case 'binop':\n                                var /** @type {?} */ left = simplify(expression['left']);\n                                if (shouldIgnore(left))\n                                    return left;\n                                var /** @type {?} */ right = simplify(expression['right']);\n                                if (shouldIgnore(right))\n                                    return right;\n                                switch (expression['operator']) {\n                                    case '&&':\n                                        return left && right;\n                                    case '||':\n                                        return left || right;\n                                    case '|':\n                                        return left | right;\n                                    case '^':\n                                        return left ^ right;\n                                    case '&':\n                                        return left & right;\n                                    case '==':\n                                        return left == right;\n                                    case '!=':\n                                        return left != right;\n                                    case '===':\n                                        return left === right;\n                                    case '!==':\n                                        return left !== right;\n                                    case '<':\n                                        return left < right;\n                                    case '>':\n                                        return left > right;\n                                    case '<=':\n                                        return left <= right;\n                                    case '>=':\n                                        return left >= right;\n                                    case '<<':\n                                        return left << right;\n                                    case '>>':\n                                        return left >> right;\n                                    case '+':\n                                        return left + right;\n                                    case '-':\n                                        return left - right;\n                                    case '*':\n                                        return left * right;\n                                    case '/':\n                                        return left / right;\n                                    case '%':\n                                        return left % right;\n                                }\n                                return null;\n                            case 'if':\n                                var /** @type {?} */ condition = simplify(expression['condition']);\n                                return condition ? simplify(expression['thenExpression']) :\n                                    simplify(expression['elseExpression']);\n                            case 'pre':\n                                var /** @type {?} */ operand = simplify(expression['operand']);\n                                if (shouldIgnore(operand))\n                                    return operand;\n                                switch (expression['operator']) {\n                                    case '+':\n                                        return operand;\n                                    case '-':\n                                        return -operand;\n                                    case '!':\n                                        return !operand;\n                                    case '~':\n                                        return ~operand;\n                                }\n                                return null;\n                            case 'index':\n                                var /** @type {?} */ indexTarget = simplify(expression['expression']);\n                                var /** @type {?} */ index = simplify(expression['index']);\n                                if (indexTarget && isPrimitive(index))\n                                    return indexTarget[index];\n                                return null;\n                            case 'select':\n                                var /** @type {?} */ member = expression['member'];\n                                var /** @type {?} */ selectContext = context;\n                                var /** @type {?} */ selectTarget = simplify(expression['expression']);\n                                if (selectTarget instanceof StaticSymbol) {\n                                    var /** @type {?} */ members = selectTarget.members.concat(member);\n                                    selectContext =\n                                        self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                                    var /** @type {?} */ declarationValue = resolveReferenceValue(selectContext);\n                                    if (declarationValue) {\n                                        return simplifyInContext(selectContext, declarationValue, depth + 1);\n                                    }\n                                    else {\n                                        return selectContext;\n                                    }\n                                }\n                                if (selectTarget && isPrimitive(member))\n                                    return simplifyInContext(selectContext, selectTarget[member], depth + 1);\n                                return null;\n                            case 'reference':\n                                // Note: This only has to deal with variable references,\n                                // as symbol references have been converted into StaticSymbols already\n                                // in the StaticSymbolResolver!\n                                var /** @type {?} */ name = expression['name'];\n                                var /** @type {?} */ localValue = scope.resolve(name);\n                                if (localValue != BindingScope.missing) {\n                                    return localValue;\n                                }\n                                break;\n                            case 'class':\n                                return context;\n                            case 'function':\n                                return context;\n                            case 'new':\n                            case 'call':\n                                // Determine if the function is a built-in conversion\n                                staticSymbol = simplifyInContext(context, expression['expression'], depth + 1);\n                                if (staticSymbol instanceof StaticSymbol) {\n                                    if (staticSymbol === self.injectionToken || staticSymbol === self.opaqueToken) {\n                                        // if somebody calls new InjectionToken, don't create an InjectionToken,\n                                        // but rather return the symbol to which the InjectionToken is assigned to.\n                                        return context;\n                                    }\n                                    var /** @type {?} */ argExpressions = expression['arguments'] || [];\n                                    var /** @type {?} */ converter = self.conversionMap.get(staticSymbol);\n                                    if (converter) {\n                                        var /** @type {?} */ args = argExpressions.map(function (arg) { return simplifyInContext(context, arg, depth + 1); })\n                                            .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                                        return converter(context, args);\n                                    }\n                                    else {\n                                        // Determine if the function is one we can simplify.\n                                        var /** @type {?} */ targetFunction = resolveReferenceValue(staticSymbol);\n                                        return simplifyCall(staticSymbol, targetFunction, argExpressions);\n                                    }\n                                }\n                                return IGNORE;\n                            case 'error':\n                                var /** @type {?} */ message = produceErrorMessage(expression);\n                                if (expression['line']) {\n                                    message =\n                                        message + \" (position \" + (expression['line'] + 1) + \":\" + (expression['character'] + 1) + \" in the original .ts file)\";\n                                    self.reportError(positionalError(message, context.filePath, expression['line'], expression['character']), context);\n                                }\n                                else {\n                                    self.reportError(new Error(message), context);\n                                }\n                                return IGNORE;\n                            case 'ignore':\n                                return expression;\n                        }\n                        return null;\n                    }\n                    return mapStringMap(expression, function (value, name) { return simplify(value); });\n                }\n                return IGNORE;\n            }\n            try {\n                return simplify(value);\n            }\n            catch (e) {\n                var /** @type {?} */ members = context.members.length ? \".\" + context.members.join('.') : '';\n                var /** @type {?} */ message = e.message + \", resolving symbol \" + context.name + members + \" in \" + context.filePath;\n                if (e.fileName) {\n                    throw positionalError(message, e.fileName, e.line, e.column);\n                }\n                throw syntaxError(message);\n            }\n        }\n        var /** @type {?} */ recordedSimplifyInContext = function (context, value, depth) {\n            try {\n                return simplifyInContext(context, value, depth);\n            }\n            catch (e) {\n                _this.reportError(e, context);\n            }\n        };\n        var /** @type {?} */ result = this.errorRecorder ? recordedSimplifyInContext(context, value, 0) :\n            simplifyInContext(context, value, 0);\n        if (shouldIgnore(result)) {\n            return undefined;\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.getTypeMetadata = function (type) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n        return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n            { __symbolic: 'class' };\n    };\n    return StaticReflector;\n}());\n/**\n * @param {?} error\n * @return {?}\n */\nfunction expandedMessage(error) {\n    switch (error.message) {\n        case 'Reference to non-exported class':\n            if (error.context && error.context.className) {\n                return \"Reference to a non-exported class \" + error.context.className + \". Consider exporting the class\";\n            }\n            break;\n        case 'Variable not initialized':\n            return 'Only initialized variables and constants can be referenced because the value of this variable is needed by the template compiler';\n        case 'Destructuring not supported':\n            return 'Referencing an exported destructured variable or constant is not supported by the template compiler. Consider simplifying this to avoid destructuring';\n        case 'Could not resolve type':\n            if (error.context && error.context.typeName) {\n                return \"Could not resolve type \" + error.context.typeName;\n            }\n            break;\n        case 'Function call not supported':\n            var /** @type {?} */ prefix = error.context && error.context.name ? \"Calling function '\" + error.context.name + \"', f\" : 'F';\n            return prefix +\n                'unction calls are not supported. Consider replacing the function or lambda with a reference to an exported function';\n        case 'Reference to a local symbol':\n            if (error.context && error.context.name) {\n                return \"Reference to a local (non-exported) symbol '\" + error.context.name + \"'. Consider exporting the symbol\";\n            }\n            break;\n    }\n    return error.message;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction produceErrorMessage(error) {\n    return \"Error encountered resolving symbol values statically. \" + expandedMessage(error);\n}\n/**\n * @param {?} input\n * @param {?} transform\n * @return {?}\n */\nfunction mapStringMap(input, transform) {\n    if (!input)\n        return {};\n    var /** @type {?} */ result = {};\n    Object.keys(input).forEach(function (key) {\n        var /** @type {?} */ value = transform(input[key], key);\n        if (!shouldIgnore(value)) {\n            if (HIDDEN_KEY.test(key)) {\n                Object.defineProperty(result, key, { enumerable: false, configurable: true, value: value });\n            }\n            else {\n                result[key] = value;\n            }\n        }\n    });\n    return result;\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPrimitive(o) {\n    return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\n/**\n * @abstract\n */\nvar BindingScope = (function () {\n    function BindingScope() {\n    }\n    /**\n     * @abstract\n     * @param {?} name\n     * @return {?}\n     */\n    BindingScope.prototype.resolve = function (name) { };\n    /**\n     * @return {?}\n     */\n    BindingScope.build = function () {\n        var /** @type {?} */ current = new Map();\n        return {\n            define: function (name, value) {\n                current.set(name, value);\n                return this;\n            },\n            done: function () {\n                return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n            }\n        };\n    };\n    return BindingScope;\n}());\nBindingScope.missing = {};\nBindingScope.empty = { resolve: function (name) { return BindingScope.missing; } };\nvar PopulatedScope = (function (_super) {\n    __extends(PopulatedScope, _super);\n    /**\n     * @param {?} bindings\n     */\n    function PopulatedScope(bindings) {\n        var _this = _super.call(this) || this;\n        _this.bindings = bindings;\n        return _this;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PopulatedScope.prototype.resolve = function (name) {\n        return this.bindings.has(name) ? this.bindings.get(name) : BindingScope.missing;\n    };\n    return PopulatedScope;\n}(BindingScope));\n/**\n * @param {?} message\n * @param {?} fileName\n * @param {?} line\n * @param {?} column\n * @return {?}\n */\nfunction positionalError(message, fileName, line, column) {\n    var /** @type {?} */ result = new Error(message);\n    ((result)).fileName = fileName;\n    ((result)).line = line;\n    ((result)).column = column;\n    return result;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ResolvedStaticSymbol = (function () {\n    /**\n     * @param {?} symbol\n     * @param {?} metadata\n     */\n    function ResolvedStaticSymbol(symbol, metadata) {\n        this.symbol = symbol;\n        this.metadata = metadata;\n    }\n    return ResolvedStaticSymbol;\n}());\nvar SUPPORTED_SCHEMA_VERSION = 3;\n/**\n * This class is responsible for loading metadata per symbol,\n * and normalizing references between symbols.\n *\n * Internally, it only uses symbols without members,\n * and deduces the values for symbols with members based\n * on these symbols.\n */\nvar StaticSymbolResolver = (function () {\n    /**\n     * @param {?} host\n     * @param {?} staticSymbolCache\n     * @param {?} summaryResolver\n     * @param {?=} errorRecorder\n     */\n    function StaticSymbolResolver(host, staticSymbolCache, summaryResolver, errorRecorder) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryResolver = summaryResolver;\n        this.errorRecorder = errorRecorder;\n        this.metadataCache = new Map();\n        this.resolvedSymbols = new Map();\n        this.resolvedFilePaths = new Set();\n        this.importAs = new Map();\n        this.symbolResourcePaths = new Map();\n        this.symbolFromFile = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveSymbol = function (staticSymbol) {\n        if (staticSymbol.members.length > 0) {\n            return ((this._resolveSymbolMembers(staticSymbol)));\n        }\n        var /** @type {?} */ result = this.resolvedSymbols.get(staticSymbol);\n        if (result) {\n            return result;\n        }\n        result = ((this._resolveSymbolFromSummary(staticSymbol)));\n        if (result) {\n            return result;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        this._createSymbolsOf(staticSymbol.filePath);\n        result = ((this.resolvedSymbols.get(staticSymbol)));\n        return result;\n    };\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getImportAs = function (staticSymbol) {\n        if (staticSymbol.members.length) {\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(baseImportAs.filePath, baseImportAs.name, staticSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ summarizedFileName = stripSummaryForJitFileSuffix(staticSymbol.filePath);\n        if (summarizedFileName !== staticSymbol.filePath) {\n            var /** @type {?} */ summarizedName = stripSummaryForJitNameSuffix(staticSymbol.name);\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(summarizedFileName, summarizedName, staticSymbol.members);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(summaryForJitFileName(baseImportAs.filePath), summaryForJitName(baseImportAs.name), baseSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ result = this.summaryResolver.getImportAs(staticSymbol);\n        if (!result) {\n            result = ((this.importAs.get(staticSymbol)));\n        }\n        return result;\n    };\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getResourcePath = function (staticSymbol) {\n        return this.symbolResourcePaths.get(staticSymbol) || staticSymbol.filePath;\n    };\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getTypeArity = function (staticSymbol) {\n        // If the file is a factory/ngsummary file, don't resolve the symbol as doing so would\n        // cause the metadata for an factory/ngsummary file to be loaded which doesn't exist.\n        // All references to generated classes must include the correct arity whenever\n        // generating code.\n        if (isGeneratedFile(staticSymbol.filePath)) {\n            return null;\n        }\n        var /** @type {?} */ resolvedSymbol = this.resolveSymbol(staticSymbol);\n        while (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            resolvedSymbol = this.resolveSymbol(resolvedSymbol.metadata);\n        }\n        return (resolvedSymbol && resolvedSymbol.metadata && resolvedSymbol.metadata.arity) || null;\n    };\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.fileNameToModuleName = function (importedFilePath, containingFilePath) {\n        if (importedFilePath === containingFilePath) {\n            return null;\n        }\n        return this.knownFileNameToModuleNames.get(importedFilePath) ||\n            this.host.fileNameToModuleName(importedFilePath, containingFilePath);\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordImportAs = function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        this.importAs.set(sourceSymbol, targetSymbol);\n    };\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.invalidateFile = function (fileName) {\n        this.metadataCache.delete(fileName);\n        this.resolvedFilePaths.delete(fileName);\n        var /** @type {?} */ symbols = this.symbolFromFile.get(fileName);\n        if (symbols) {\n            this.symbolFromFile.delete(fileName);\n            for (var _i = 0, symbols_1 = symbols; _i < symbols_1.length; _i++) {\n                var symbol = symbols_1[_i];\n                this.resolvedSymbols.delete(symbol);\n                this.importAs.delete(symbol);\n                this.symbolResourcePaths.delete(symbol);\n            }\n        }\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolMembers = function (staticSymbol) {\n        var /** @type {?} */ members = staticSymbol.members;\n        var /** @type {?} */ baseResolvedSymbol = this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name));\n        if (!baseResolvedSymbol) {\n            return null;\n        }\n        var /** @type {?} */ baseMetadata = baseResolvedSymbol.metadata;\n        if (baseMetadata instanceof StaticSymbol) {\n            return new ResolvedStaticSymbol(staticSymbol, this.getStaticSymbol(baseMetadata.filePath, baseMetadata.name, members));\n        }\n        else if (baseMetadata && baseMetadata.__symbolic === 'class') {\n            if (baseMetadata.statics && members.length === 1) {\n                return new ResolvedStaticSymbol(staticSymbol, baseMetadata.statics[members[0]]);\n            }\n        }\n        else {\n            var /** @type {?} */ value = baseMetadata;\n            for (var /** @type {?} */ i = 0; i < members.length && value; i++) {\n                value = value[members[i]];\n            }\n            return new ResolvedStaticSymbol(staticSymbol, value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolFromSummary = function (staticSymbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(staticSymbol);\n        return summary ? new ResolvedStaticSymbol(staticSymbol, summary.metadata) : null;\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getStaticSymbol = function (declarationFile, name, members) {\n        return this.staticSymbolCache.get(declarationFile, name, members);\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolsOf = function (filePath) {\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        var /** @type {?} */ symbols = new Set(this.summaryResolver.getSymbolsOf(filePath));\n        this._createSymbolsOf(filePath);\n        this.resolvedSymbols.forEach(function (resolvedSymbol) {\n            if (resolvedSymbol.symbol.filePath === filePath) {\n                symbols.add(resolvedSymbol.symbol);\n            }\n        });\n        return Array.from(symbols);\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._createSymbolsOf = function (filePath) {\n        var _this = this;\n        if (this.resolvedFilePaths.has(filePath)) {\n            return;\n        }\n        this.resolvedFilePaths.add(filePath);\n        var /** @type {?} */ resolvedSymbols = [];\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['importAs']) {\n            // Index bundle indices should use the importAs module name defined\n            // in the bundle.\n            this.knownFileNameToModuleNames.set(filePath, metadata['importAs']);\n        }\n        if (metadata['metadata']) {\n            // handle direct declarations of the symbol\n            var /** @type {?} */ topLevelSymbolNames_1 = new Set(Object.keys(metadata['metadata']).map(unescapeIdentifier));\n            var /** @type {?} */ origins_1 = metadata['origins'] || {};\n            Object.keys(metadata['metadata']).forEach(function (metadataKey) {\n                var /** @type {?} */ symbolMeta = metadata['metadata'][metadataKey];\n                var /** @type {?} */ name = unescapeIdentifier(metadataKey);\n                var /** @type {?} */ symbol = _this.getStaticSymbol(filePath, name);\n                var /** @type {?} */ origin = origins_1.hasOwnProperty(metadataKey) && origins_1[metadataKey];\n                if (origin) {\n                    // If the symbol is from a bundled index, use the declaration location of the\n                    // symbol so relative references (such as './my.html') will be calculated\n                    // correctly.\n                    var /** @type {?} */ originFilePath = _this.resolveModule(origin, filePath);\n                    if (!originFilePath) {\n                        _this.reportError(new Error(\"Couldn't resolve original symbol for \" + origin + \" from \" + filePath));\n                    }\n                    else {\n                        _this.symbolResourcePaths.set(symbol, originFilePath);\n                    }\n                }\n                resolvedSymbols.push(_this.createResolvedSymbol(symbol, filePath, topLevelSymbolNames_1, symbolMeta));\n            });\n        }\n        // handle the symbols in one of the re-export location\n        if (metadata['exports']) {\n            var _loop_1 = function (moduleExport) {\n                // handle the symbols in the list of explicitly re-exported symbols.\n                if (moduleExport.export) {\n                    moduleExport.export.forEach(function (exportSymbol) {\n                        var /** @type {?} */ symbolName;\n                        if (typeof exportSymbol === 'string') {\n                            symbolName = exportSymbol;\n                        }\n                        else {\n                            symbolName = exportSymbol.as;\n                        }\n                        symbolName = unescapeIdentifier(symbolName);\n                        var /** @type {?} */ symName = symbolName;\n                        if (typeof exportSymbol !== 'string') {\n                            symName = unescapeIdentifier(exportSymbol.name);\n                        }\n                        var /** @type {?} */ resolvedModule = _this.resolveModule(moduleExport.from, filePath);\n                        if (resolvedModule) {\n                            var /** @type {?} */ targetSymbol = _this.getStaticSymbol(resolvedModule, symName);\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, symbolName);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        }\n                    });\n                }\n                else {\n                    // handle the symbols via export * directives.\n                    var /** @type {?} */ resolvedModule = this_1.resolveModule(moduleExport.from, filePath);\n                    if (resolvedModule) {\n                        var /** @type {?} */ nestedExports = this_1.getSymbolsOf(resolvedModule);\n                        nestedExports.forEach(function (targetSymbol) {\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, targetSymbol.name);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        });\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var _i = 0, _a = metadata['exports']; _i < _a.length; _i++) {\n                var moduleExport = _a[_i];\n                _loop_1(/** @type {?} */ moduleExport);\n            }\n        }\n        resolvedSymbols.forEach(function (resolvedSymbol) { return _this.resolvedSymbols.set(resolvedSymbol.symbol, resolvedSymbol); });\n        this.symbolFromFile.set(filePath, resolvedSymbols.map(function (resolvedSymbol) { return resolvedSymbol.symbol; }));\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createResolvedSymbol = function (sourceSymbol, topLevelPath, topLevelSymbolNames, metadata) {\n        // For classes that don't have Angular summaries / metadata,\n        // we only keep their arity, but nothing else\n        // (e.g. their constructor parameters).\n        // We do this to prevent introducing deep imports\n        // as we didn't generate .ngfactory.ts files with proper reexports.\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) && metadata &&\n            metadata['__symbolic'] === 'class') {\n            var /** @type {?} */ transformedMeta_1 = { __symbolic: 'class', arity: metadata.arity };\n            return new ResolvedStaticSymbol(sourceSymbol, transformedMeta_1);\n        }\n        var /** @type {?} */ self = this;\n        var ReferenceTransformer = (function (_super) {\n            __extends(ReferenceTransformer, _super);\n            function ReferenceTransformer() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            ReferenceTransformer.prototype.visitStringMap = function (map, functionParams) {\n                var /** @type {?} */ symbolic = map['__symbolic'];\n                if (symbolic === 'function') {\n                    var /** @type {?} */ oldLen = functionParams.length;\n                    functionParams.push.apply(functionParams, (map['parameters'] || []));\n                    var /** @type {?} */ result = _super.prototype.visitStringMap.call(this, map, functionParams);\n                    functionParams.length = oldLen;\n                    return result;\n                }\n                else if (symbolic === 'reference') {\n                    var /** @type {?} */ module_1 = map['module'];\n                    var /** @type {?} */ name = map['name'] ? unescapeIdentifier(map['name']) : map['name'];\n                    if (!name) {\n                        return null;\n                    }\n                    var /** @type {?} */ filePath = void 0;\n                    if (module_1) {\n                        filePath = ((self.resolveModule(module_1, sourceSymbol.filePath)));\n                        if (!filePath) {\n                            return {\n                                __symbolic: 'error',\n                                message: \"Could not resolve \" + module_1 + \" relative to \" + sourceSymbol.filePath + \".\"\n                            };\n                        }\n                        return self.getStaticSymbol(filePath, name);\n                    }\n                    else if (functionParams.indexOf(name) >= 0) {\n                        // reference to a function parameter\n                        return { __symbolic: 'reference', name: name };\n                    }\n                    else {\n                        if (topLevelSymbolNames.has(name)) {\n                            return self.getStaticSymbol(topLevelPath, name);\n                        }\n                        // ambient value\n                        null;\n                    }\n                }\n                else {\n                    return _super.prototype.visitStringMap.call(this, map, functionParams);\n                }\n            };\n            return ReferenceTransformer;\n        }(ValueTransformer));\n        var /** @type {?} */ transformedMeta = visitValue(metadata, new ReferenceTransformer(), []);\n        if (transformedMeta instanceof StaticSymbol) {\n            return this.createExport(sourceSymbol, transformedMeta);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createExport = function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath)) {\n            // This case is for an ng library importing symbols from a plain ts library\n            // transitively.\n            // Note: We rely on the fact that we discover symbols in the direction\n            // from source files to library files\n            this.importAs.set(targetSymbol, this.getImportAs(sourceSymbol) || sourceSymbol);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.reportError = function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getModuleMetadata = function (module) {\n        var /** @type {?} */ moduleMetadata = this.metadataCache.get(module);\n        if (!moduleMetadata) {\n            var /** @type {?} */ moduleMetadatas = this.host.getMetadataFor(module);\n            if (moduleMetadatas) {\n                var /** @type {?} */ maxVersion_1 = -1;\n                moduleMetadatas.forEach(function (md) {\n                    if (md['version'] > maxVersion_1) {\n                        maxVersion_1 = md['version'];\n                        moduleMetadata = md;\n                    }\n                });\n            }\n            if (!moduleMetadata) {\n                moduleMetadata =\n                    { __symbolic: 'module', version: SUPPORTED_SCHEMA_VERSION, module: module, metadata: {} };\n            }\n            if (moduleMetadata['version'] != SUPPORTED_SCHEMA_VERSION) {\n                var /** @type {?} */ errorMessage = moduleMetadata['version'] == 2 ?\n                    \"Unsupported metadata version \" + moduleMetadata['version'] + \" for module \" + module + \". This module should be compiled with a newer version of ngc\" :\n                    \"Metadata version mismatch for module \" + module + \", found version \" + moduleMetadata['version'] + \", expected \" + SUPPORTED_SCHEMA_VERSION;\n                this.reportError(new Error(errorMessage));\n            }\n            this.metadataCache.set(module, moduleMetadata);\n        }\n        return moduleMetadata;\n    };\n    /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolByModule = function (module, symbolName, containingFile) {\n        var /** @type {?} */ filePath = this.resolveModule(module, containingFile);\n        if (!filePath) {\n            this.reportError(new Error(\"Could not resolve module \" + module + (containingFile ? \" relative to $ {\\n            containingFile\\n          } \" : '')));\n            return this.getStaticSymbol(\"ERROR:\" + module, symbolName);\n        }\n        return this.getStaticSymbol(filePath, symbolName);\n    };\n    /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveModule = function (module, containingFile) {\n        try {\n            return this.host.moduleNameToFileName(module, containingFile);\n        }\n        catch (e) {\n            console.error(\"Could not resolve module '\" + module + \"' relative to file \" + containingFile);\n            this.reportError(e, undefined, containingFile);\n        }\n        return null;\n    };\n    return StaticSymbolResolver;\n}());\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction unescapeIdentifier(identifier) {\n    return identifier.startsWith('___') ? identifier.substr(1) : identifier;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AotSummaryResolver = (function () {\n    /**\n     * @param {?} host\n     * @param {?} staticSymbolCache\n     */\n    function AotSummaryResolver(host, staticSymbolCache) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryCache = new Map();\n        this.loadedFilePaths = new Set();\n        this.importAs = new Map();\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.isLibraryFile = function (filePath) {\n        // Note: We need to strip the .ngfactory. file path,\n        // so this method also works for generated files\n        // (for which host.isSourceFile will always return false).\n        return !this.host.isSourceFile(stripGeneratedFileSuffix(filePath));\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getLibraryFileName = function (filePath) { return this.host.getOutputFileName(filePath); };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.resolveSummary = function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        var /** @type {?} */ summary = this.summaryCache.get(staticSymbol);\n        if (!summary) {\n            this._loadSummaryFile(staticSymbol.filePath);\n            summary = ((this.summaryCache.get(staticSymbol)));\n        }\n        return summary;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getSymbolsOf = function (filePath) {\n        this._loadSummaryFile(filePath);\n        return Array.from(this.summaryCache.keys()).filter(function (symbol) { return symbol.filePath === filePath; });\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getImportAs = function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        return ((this.importAs.get(staticSymbol)));\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.addSummary = function (summary) { this.summaryCache.set(summary.symbol, summary); };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype._loadSummaryFile = function (filePath) {\n        var _this = this;\n        if (this.loadedFilePaths.has(filePath)) {\n            return;\n        }\n        this.loadedFilePaths.add(filePath);\n        if (this.isLibraryFile(filePath)) {\n            var /** @type {?} */ summaryFilePath = summaryFileName(filePath);\n            var /** @type {?} */ json = void 0;\n            try {\n                json = this.host.loadSummary(summaryFilePath);\n            }\n            catch (e) {\n                console.error(\"Error loading summary file \" + summaryFilePath);\n                throw e;\n            }\n            if (json) {\n                var _a = deserializeSummaries(this.staticSymbolCache, json), summaries = _a.summaries, importAs = _a.importAs;\n                summaries.forEach(function (summary) { return _this.summaryCache.set(summary.symbol, summary); });\n                importAs.forEach(function (importAs) {\n                    _this.importAs.set(importAs.symbol, _this.staticSymbolCache.get(ngfactoryFilePath(filePath), importAs.importAs));\n                });\n            }\n        }\n    };\n    return AotSummaryResolver;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a new AotCompiler based on options and a host.\n * @param {?} compilerHost\n * @param {?} options\n * @return {?}\n */\nfunction createAotCompiler(compilerHost, options) {\n    var /** @type {?} */ translations = options.translations || '';\n    var /** @type {?} */ urlResolver = createOfflineCompileUrlResolver();\n    var /** @type {?} */ symbolCache = new StaticSymbolCache();\n    var /** @type {?} */ summaryResolver = new AotSummaryResolver(compilerHost, symbolCache);\n    var /** @type {?} */ symbolResolver = new StaticSymbolResolver(compilerHost, symbolCache, summaryResolver);\n    var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, symbolResolver);\n    StaticAndDynamicReflectionCapabilities.install(staticReflector);\n    var /** @type {?} */ console = new _angular_core.ɵConsole();\n    var /** @type {?} */ htmlParser = new I18NHtmlParser(new HtmlParser(), translations, options.i18nFormat, options.missingTranslation, console);\n    var /** @type {?} */ config = new CompilerConfig({\n        defaultEncapsulation: _angular_core.ViewEncapsulation.Emulated,\n        useJit: false,\n        enableLegacyTemplate: options.enableLegacyTemplate !== false,\n        missingTranslation: options.missingTranslation,\n    });\n    var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return compilerHost.loadResource(url); } }, urlResolver, htmlParser, config);\n    var /** @type {?} */ expressionParser = new Parser(new Lexer());\n    var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n    var /** @type {?} */ tmplParser = new TemplateParser(config, expressionParser, elementSchemaRegistry, htmlParser, console, []);\n    var /** @type {?} */ resolver = new CompileMetadataResolver(config, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n    // TODO(vicb): do not pass options.i18nFormat here\n    var /** @type {?} */ viewCompiler = new ViewCompiler(config, elementSchemaRegistry);\n    var /** @type {?} */ compiler = new AotCompiler(config, compilerHost, resolver, tmplParser, new StyleCompiler(urlResolver), viewCompiler, new NgModuleCompiler(), new TypeScriptEmitter(symbolResolver), summaryResolver, options.locale || null, options.i18nFormat || null, options.genFilePreamble || null, symbolResolver);\n    return { compiler: compiler, reflector: staticReflector };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} statements\n * @param {?} resultVars\n * @return {?}\n */\nfunction interpretStatements(statements, resultVars) {\n    var /** @type {?} */ stmtsWithReturn = statements.concat([new ReturnStatement(literalArr(resultVars.map(function (resultVar) { return variable(resultVar); })))]);\n    var /** @type {?} */ ctx = new _ExecutionContext(null, null, null, new Map());\n    var /** @type {?} */ visitor = new StatementInterpreter();\n    var /** @type {?} */ result = visitor.visitAllStatements(stmtsWithReturn, ctx);\n    return result != null ? result.value : null;\n}\n/**\n * @param {?} varNames\n * @param {?} varValues\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n    var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n    for (var /** @type {?} */ i = 0; i < varNames.length; i++) {\n        childCtx.vars.set(varNames[i], varValues[i]);\n    }\n    var /** @type {?} */ result = visitor.visitAllStatements(statements, childCtx);\n    return result ? result.value : null;\n}\nvar _ExecutionContext = (function () {\n    /**\n     * @param {?} parent\n     * @param {?} instance\n     * @param {?} className\n     * @param {?} vars\n     */\n    function _ExecutionContext(parent, instance, className, vars) {\n        this.parent = parent;\n        this.instance = instance;\n        this.className = className;\n        this.vars = vars;\n    }\n    /**\n     * @return {?}\n     */\n    _ExecutionContext.prototype.createChildWihtLocalVars = function () {\n        return new _ExecutionContext(this, this.instance, this.className, new Map());\n    };\n    return _ExecutionContext;\n}());\nvar ReturnValue = (function () {\n    /**\n     * @param {?} value\n     */\n    function ReturnValue(value) {\n        this.value = value;\n    }\n    return ReturnValue;\n}());\n/**\n * @param {?} _classStmt\n * @param {?} _ctx\n * @param {?} _visitor\n * @return {?}\n */\nfunction createDynamicClass(_classStmt, _ctx, _visitor) {\n    var /** @type {?} */ propertyDescriptors = {};\n    _classStmt.getters.forEach(function (getter) {\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[getter.name] = {\n            configurable: false,\n            get: function () {\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    _classStmt.methods.forEach(function (method) {\n        var /** @type {?} */ paramNames = method.params.map(function (param) { return param.name; });\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[((method.name))] = {\n            writable: false,\n            configurable: false,\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    var /** @type {?} */ ctorParamNames = _classStmt.constructorMethod.params.map(function (param) { return param.name; });\n    // Note: use `function` instead of arrow function to capture `this`\n    var /** @type {?} */ ctor = function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n        _classStmt.fields.forEach(function (field) { _this[field.name] = undefined; });\n        _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n    };\n    var /** @type {?} */ superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n    ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n    return ctor;\n}\nvar StatementInterpreter = (function () {\n    function StatementInterpreter() {\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    StatementInterpreter.prototype.debugAst = function (ast) { return debugOutputAstAsTypeScript(ast); };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        ctx.vars.set(stmt.name, stmt.value.visitExpression(this, ctx));\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteVarExpr = function (expr, ctx) {\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(expr.name)) {\n                currCtx.vars.set(expr.name, value);\n                return value;\n            }\n            currCtx = ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + expr.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadVarExpr = function (ast, ctx) {\n        var /** @type {?} */ varName = ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    return ctx.instance.__proto__;\n                case BuiltinVar.This:\n                    return ctx.instance;\n                case BuiltinVar.CatchError:\n                    varName = CATCH_ERROR_VAR$2;\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = CATCH_STACK_VAR$2;\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(varName)) {\n                return currCtx.vars.get(varName);\n            }\n            currCtx = ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + varName);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteKeyExpr = function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ index = expr.index.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[index] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWritePropExpr = function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[expr.name] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeMethodExpr = function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ args = this.visitAllExpressions(expr.args, ctx);\n        var /** @type {?} */ result;\n        if (expr.builtin != null) {\n            switch (expr.builtin) {\n                case BuiltinMethod.ConcatArray:\n                    result = receiver.concat.apply(receiver, args);\n                    break;\n                case BuiltinMethod.SubscribeObservable:\n                    result = receiver.subscribe({ next: args[0] });\n                    break;\n                case BuiltinMethod.Bind:\n                    result = receiver.bind.apply(receiver, args);\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin method \" + expr.builtin);\n            }\n        }\n        else {\n            result = receiver[((expr.name))].apply(receiver, args);\n        }\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeFunctionExpr = function (stmt, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(stmt.args, ctx);\n        var /** @type {?} */ fnExpr = stmt.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n            return null;\n        }\n        else {\n            var /** @type {?} */ fn$$1 = stmt.fn.visitExpression(this, ctx);\n            return fn$$1.apply(null, args);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReturnStmt = function (stmt, ctx) {\n        return new ReturnValue(stmt.value.visitExpression(this, ctx));\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        var /** @type {?} */ clazz = createDynamicClass(stmt, ctx, this);\n        ctx.vars.set(stmt.name, clazz);\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExpressionStmt = function (stmt, ctx) {\n        return stmt.expr.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitIfStmt = function (stmt, ctx) {\n        var /** @type {?} */ condition = stmt.condition.visitExpression(this, ctx);\n        if (condition) {\n            return this.visitAllStatements(stmt.trueCase, ctx);\n        }\n        else if (stmt.falseCase != null) {\n            return this.visitAllStatements(stmt.falseCase, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitTryCatchStmt = function (stmt, ctx) {\n        try {\n            return this.visitAllStatements(stmt.bodyStmts, ctx);\n        }\n        catch (e) {\n            var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n            childCtx.vars.set(CATCH_ERROR_VAR$2, e);\n            childCtx.vars.set(CATCH_STACK_VAR$2, e.stack);\n            return this.visitAllStatements(stmt.catchStmts, childCtx);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitThrowStmt = function (stmt, ctx) {\n        throw stmt.error.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommentStmt = function (stmt, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInstantiateExpr = function (ast, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(ast.args, ctx);\n        var /** @type {?} */ clazz = ast.classExpr.visitExpression(this, ctx);\n        return new (clazz.bind.apply(clazz, [void 0].concat(args)))();\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralExpr = function (ast, ctx) { return ast.value; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExternalExpr = function (ast, ctx) {\n        return ast.value.reference;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitConditionalExpr = function (ast, ctx) {\n        if (ast.condition.visitExpression(this, ctx)) {\n            return ast.trueCase.visitExpression(this, ctx);\n        }\n        else if (ast.falseCase != null) {\n            return ast.falseCase.visitExpression(this, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitNotExpr = function (ast, ctx) {\n        return !ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAssertNotNullExpr = function (ast, ctx) {\n        return ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCastExpr = function (ast, ctx) {\n        return ast.value.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitFunctionExpr = function (ast, ctx) {\n        var /** @type {?} */ paramNames = ast.params.map(function (param) { return param.name; });\n        return _declareFn(paramNames, ast.statements, ctx, this);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        var /** @type {?} */ paramNames = stmt.params.map(function (param) { return param.name; });\n        ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitBinaryOperatorExpr = function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ lhs = function () { return ast.lhs.visitExpression(_this, ctx); };\n        var /** @type {?} */ rhs = function () { return ast.rhs.visitExpression(_this, ctx); };\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                return lhs() == rhs();\n            case BinaryOperator.Identical:\n                return lhs() === rhs();\n            case BinaryOperator.NotEquals:\n                return lhs() != rhs();\n            case BinaryOperator.NotIdentical:\n                return lhs() !== rhs();\n            case BinaryOperator.And:\n                return lhs() && rhs();\n            case BinaryOperator.Or:\n                return lhs() || rhs();\n            case BinaryOperator.Plus:\n                return lhs() + rhs();\n            case BinaryOperator.Minus:\n                return lhs() - rhs();\n            case BinaryOperator.Divide:\n                return lhs() / rhs();\n            case BinaryOperator.Multiply:\n                return lhs() * rhs();\n            case BinaryOperator.Modulo:\n                return lhs() % rhs();\n            case BinaryOperator.Lower:\n                return lhs() < rhs();\n            case BinaryOperator.LowerEquals:\n                return lhs() <= rhs();\n            case BinaryOperator.Bigger:\n                return lhs() > rhs();\n            case BinaryOperator.BiggerEquals:\n                return lhs() >= rhs();\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadPropExpr = function (ast, ctx) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        result = receiver[ast.name];\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadKeyExpr = function (ast, ctx) {\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ prop = ast.index.visitExpression(this, ctx);\n        return receiver[prop];\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n        return this.visitAllExpressions(ast.entries, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralMapExpr = function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        ast.entries.forEach(function (entry) { return ((result))[entry.key] = entry.value.visitExpression(_this, ctx); });\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommaExpr = function (ast, context) {\n        var /** @type {?} */ values = this.visitAllExpressions(ast.parts, context);\n        return values[values.length - 1];\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllExpressions = function (expressions, ctx) {\n        var _this = this;\n        return expressions.map(function (expr) { return expr.visitExpression(_this, ctx); });\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllStatements = function (statements, ctx) {\n        for (var /** @type {?} */ i = 0; i < statements.length; i++) {\n            var /** @type {?} */ stmt = statements[i];\n            var /** @type {?} */ val = stmt.visitStatement(this, ctx);\n            if (val instanceof ReturnValue) {\n                return val;\n            }\n        }\n        return null;\n    };\n    return StatementInterpreter;\n}());\n/**\n * @param {?} varNames\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _declareFn(varNames, statements, ctx, visitor) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n    };\n}\nvar CATCH_ERROR_VAR$2 = 'error';\nvar CATCH_STACK_VAR$2 = 'stack';\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar AbstractJsEmitterVisitor = (function (_super) {\n    __extends(AbstractJsEmitterVisitor, _super);\n    function AbstractJsEmitterVisitor() {\n        return _super.call(this, false) || this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        this._visitClassConstructor(stmt, ctx);\n        if (stmt.parent != null) {\n            ctx.print(stmt, stmt.name + \".prototype = Object.create(\");\n            stmt.parent.visitExpression(this, ctx);\n            ctx.println(stmt, \".prototype);\");\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(stmt, getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(stmt, method, ctx); });\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        if (stmt.constructorMethod != null) {\n            this._visitParams(stmt.constructorMethod.params, ctx);\n        }\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (stmt.constructorMethod != null) {\n            if (stmt.constructorMethod.body.length > 0) {\n                ctx.println(stmt, \"var self = this;\");\n                this.visitAllStatements(stmt.constructorMethod.body, ctx);\n            }\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassGetter = function (stmt, getter, ctx) {\n        ctx.println(stmt, \"Object.defineProperty(\" + stmt.name + \".prototype, '\" + getter.name + \"', { get: function() {\");\n        ctx.incIndent();\n        if (getter.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(getter.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}});\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassMethod = function (stmt, method, ctx) {\n        ctx.print(stmt, stmt.name + \".prototype.\" + method.name + \" = function(\");\n        this._visitParams(method.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (method.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(method.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"};\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {\n        if (ast.builtin === BuiltinVar.This) {\n            ctx.print(ast, 'self');\n        }\n        else if (ast.builtin === BuiltinVar.Super) {\n            throw new Error(\"'super' needs to be handled at a parent ast node, not at the variable level!\");\n        }\n        else {\n            _super.prototype.visitReadVarExpr.call(this, ast, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"var \" + stmt.name + \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {\n        var /** @type {?} */ fnExpr = expr.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ((((ctx.currentClass)).parent)).visitExpression(this, ctx);\n            ctx.print(expr, \".call(this\");\n            if (expr.args.length > 0) {\n                ctx.print(expr, \", \");\n                this.visitAllExpressions(expr.args, ctx, ',');\n            }\n            ctx.print(expr, \")\");\n        }\n        else {\n            _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {\n        ctx.print(ast, \"function(\");\n        this._visitParams(ast.params, ctx);\n        ctx.println(ast, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack')).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitParams = function (params, ctx) {\n        this.visitAllObjects(function (param) { return ctx.print(null, param.name); }, params, ctx, ',');\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    return AbstractJsEmitterVisitor;\n}(AbstractEmitterVisitor));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} sourceUrl\n * @param {?} ctx\n * @param {?} vars\n * @return {?}\n */\nfunction evalExpression(sourceUrl$$1, ctx, vars) {\n    var /** @type {?} */ fnBody = ctx.toSource() + \"\\n//# sourceURL=\" + sourceUrl$$1;\n    var /** @type {?} */ fnArgNames = [];\n    var /** @type {?} */ fnArgValues = [];\n    for (var /** @type {?} */ argName in vars) {\n        fnArgNames.push(argName);\n        fnArgValues.push(vars[argName]);\n    }\n    if (_angular_core.isDevMode()) {\n        // using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise\n        // E.g. ```\n        // function anonymous(a,b,c\n        // /**/) { ... }```\n        // We don't want to hard code this fact, so we auto detect it via an empty function first.\n        var /** @type {?} */ emptyFn = new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat('return null;'))))().toString();\n        var /** @type {?} */ headerLines = emptyFn.slice(0, emptyFn.indexOf('return null;')).split('\\n').length - 1;\n        fnBody += \"\\n\" + ctx.toSourceMapGenerator(sourceUrl$$1, sourceUrl$$1, headerLines).toJsComment();\n    }\n    return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);\n}\n/**\n * @param {?} sourceUrl\n * @param {?} statements\n * @param {?} resultVars\n * @return {?}\n */\nfunction jitStatements(sourceUrl$$1, statements, resultVars) {\n    var /** @type {?} */ converter = new JitEmitterVisitor();\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot(resultVars);\n    var /** @type {?} */ returnStmt = new ReturnStatement(literalArr(resultVars.map(function (resultVar) { return variable(resultVar); })));\n    converter.visitAllStatements(statements.concat([returnStmt]), ctx);\n    return evalExpression(sourceUrl$$1, ctx, converter.getArgs());\n}\nvar JitEmitterVisitor = (function (_super) {\n    __extends(JitEmitterVisitor, _super);\n    function JitEmitterVisitor() {\n        var _this = _super.apply(this, arguments) || this;\n        _this._evalArgNames = [];\n        _this._evalArgValues = [];\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.getArgs = function () {\n        var /** @type {?} */ result = {};\n        for (var /** @type {?} */ i = 0; i < this._evalArgNames.length; i++) {\n            result[this._evalArgNames[i]] = this._evalArgValues[i];\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {\n        var /** @type {?} */ value = ast.value.reference;\n        var /** @type {?} */ id = this._evalArgValues.indexOf(value);\n        if (id === -1) {\n            id = this._evalArgValues.length;\n            this._evalArgValues.push(value);\n            var /** @type {?} */ name = identifierName(ast.value) || 'val';\n            this._evalArgNames.push(\"jit_\" + name + id);\n        }\n        ctx.print(ast, this._evalArgNames[id]);\n        return null;\n    };\n    return JitEmitterVisitor;\n}(AbstractJsEmitterVisitor));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n *\n * \\@security When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar JitCompiler = (function () {\n    /**\n     * @param {?} _injector\n     * @param {?} _metadataResolver\n     * @param {?} _templateParser\n     * @param {?} _styleCompiler\n     * @param {?} _viewCompiler\n     * @param {?} _ngModuleCompiler\n     * @param {?} _summaryResolver\n     * @param {?} _compilerConfig\n     * @param {?} _console\n     */\n    function JitCompiler(_injector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _summaryResolver, _compilerConfig, _console) {\n        this._injector = _injector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._summaryResolver = _summaryResolver;\n        this._compilerConfig = _compilerConfig;\n        this._console = _console;\n        this._compiledTemplateCache = new Map();\n        this._compiledHostTemplateCache = new Map();\n        this._compiledDirectiveWrapperCache = new Map();\n        this._compiledNgModuleCache = new Map();\n        this._sharedStylesheetCount = 0;\n    }\n    Object.defineProperty(JitCompiler.prototype, \"injector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleSync = function (moduleType) {\n        return ((this._compileModuleAndComponents(moduleType, true).syncResult));\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAsync = function (moduleType) {\n        return ((this._compileModuleAndComponents(moduleType, false).asyncResult));\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n        return ((this._compileModuleAndAllComponents(moduleType, true).syncResult));\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n        return ((this._compileModuleAndAllComponents(moduleType, false).asyncResult));\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    JitCompiler.prototype.getNgContentSelectors = function (component) {\n        this._console.warn('Compiler.getNgContentSelectors is deprecated. Use ComponentFactory.ngContentSelectors instead!');\n        var /** @type {?} */ template = this._compiledTemplateCache.get(component);\n        if (!template) {\n            throw new Error(\"The component \" + _angular_core.ɵstringify(component) + \" is not yet compiled!\");\n        }\n        return ((template.compMeta.template)).ngContentSelectors;\n    };\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    JitCompiler.prototype.getComponentFactory = function (component) {\n        var /** @type {?} */ summary = this._metadataResolver.getDirectiveSummary(component);\n        return (summary.componentFactory);\n    };\n    /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    JitCompiler.prototype.loadAotSummaries = function (summaries) {\n        var _this = this;\n        this.clearCache();\n        flattenSummaries(summaries).forEach(function (summary) {\n            _this._summaryResolver.addSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n        });\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    JitCompiler.prototype.hasAotSummary = function (ref) { return !!this._summaryResolver.resolveSummary(ref); };\n    /**\n     * @param {?} ids\n     * @return {?}\n     */\n    JitCompiler.prototype._filterJitIdentifiers = function (ids) {\n        var _this = this;\n        return ids.map(function (mod) { return mod.reference; }).filter(function (ref) { return !_this.hasAotSummary(ref); });\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndComponents = function (moduleType, isSync) {\n        var _this = this;\n        var /** @type {?} */ loadingPromise = this._loadModules(moduleType, isSync);\n        var /** @type {?} */ createResult = function () {\n            _this._compileComponents(moduleType, null);\n            return _this._compileModule(moduleType);\n        };\n        if (isSync) {\n            return new SyncAsyncResult(createResult());\n        }\n        else {\n            return new SyncAsyncResult(null, loadingPromise.then(createResult));\n        }\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndAllComponents = function (moduleType, isSync) {\n        var _this = this;\n        var /** @type {?} */ loadingPromise = this._loadModules(moduleType, isSync);\n        var /** @type {?} */ createResult = function () {\n            var /** @type {?} */ componentFactories = [];\n            _this._compileComponents(moduleType, componentFactories);\n            return new _angular_core.ModuleWithComponentFactories(_this._compileModule(moduleType), componentFactories);\n        };\n        if (isSync) {\n            return new SyncAsyncResult(createResult());\n        }\n        else {\n            return new SyncAsyncResult(null, loadingPromise.then(createResult));\n        }\n    };\n    /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._loadModules = function (mainModule, isSync) {\n        var _this = this;\n        var /** @type {?} */ loadingPromises = [];\n        var /** @type {?} */ mainNgModule = ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        // Note: for runtime compilation, we want to transitively compile all modules,\n        // so we also need to load the declared directives / pipes for all nested modules.\n        this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach(function (nestedNgModule) {\n            // getNgModuleMetadata only returns null if the value passed in is not an NgModule\n            var /** @type {?} */ moduleMeta = ((_this._metadataResolver.getNgModuleMetadata(nestedNgModule)));\n            _this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach(function (ref) {\n                var /** @type {?} */ promise = _this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference, ref, isSync);\n                if (promise) {\n                    loadingPromises.push(promise);\n                }\n            });\n            _this._filterJitIdentifiers(moduleMeta.declaredPipes)\n                .forEach(function (ref) { return _this._metadataResolver.getOrLoadPipeMetadata(ref); });\n        });\n        return Promise.all(loadingPromises);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModule = function (moduleType) {\n        var _this = this;\n        var /** @type {?} */ ngModuleFactory = ((this._compiledNgModuleCache.get(moduleType)));\n        if (!ngModuleFactory) {\n            var /** @type {?} */ moduleMeta_1 = ((this._metadataResolver.getNgModuleMetadata(moduleType)));\n            // Always provide a bound Compiler\n            var /** @type {?} */ extraProviders = [this._metadataResolver.getProviderMetadata(new ProviderMeta(_angular_core.Compiler, { useFactory: function () { return new ModuleBoundCompiler(_this, moduleMeta_1.type.reference); } }))];\n            var /** @type {?} */ compileResult = this._ngModuleCompiler.compile(moduleMeta_1, extraProviders);\n            if (!this._compilerConfig.useJit) {\n                ngModuleFactory =\n                    interpretStatements(compileResult.statements, [compileResult.ngModuleFactoryVar])[0];\n            }\n            else {\n                ngModuleFactory = jitStatements(ngModuleJitUrl(moduleMeta_1), compileResult.statements, [compileResult.ngModuleFactoryVar])[0];\n            }\n            this._compiledNgModuleCache.set(moduleMeta_1.type.reference, ngModuleFactory);\n        }\n        return ngModuleFactory;\n    };\n    /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    JitCompiler.prototype._compileComponents = function (mainModule, allComponentFactories) {\n        var _this = this;\n        var /** @type {?} */ ngModule = ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        var /** @type {?} */ moduleByJitDirective = new Map();\n        var /** @type {?} */ templates = new Set();\n        var /** @type {?} */ transJitModules = this._filterJitIdentifiers(ngModule.transitiveModule.modules);\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                moduleByJitDirective.set(dirRef, localModuleMeta);\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    templates.add(_this._createCompiledTemplate(dirMeta, localModuleMeta));\n                    if (allComponentFactories) {\n                        var /** @type {?} */ template = _this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n                        templates.add(template);\n                        allComponentFactories.push(/** @type {?} */ (dirMeta.componentFactory));\n                    }\n                }\n            });\n        });\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    dirMeta.entryComponents.forEach(function (entryComponentType) {\n                        var /** @type {?} */ moduleMeta = ((moduleByJitDirective.get(entryComponentType.componentType)));\n                        templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                    });\n                }\n            });\n            localModuleMeta.entryComponents.forEach(function (entryComponentType) {\n                if (!_this.hasAotSummary(entryComponentType.componentType.reference)) {\n                    var /** @type {?} */ moduleMeta = ((moduleByJitDirective.get(entryComponentType.componentType)));\n                    templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                }\n            });\n        });\n        templates.forEach(function (template) { return _this._compileTemplate(template); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCacheFor = function (type) {\n        this._compiledNgModuleCache.delete(type);\n        this._metadataResolver.clearCacheFor(type);\n        this._compiledHostTemplateCache.delete(type);\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(type);\n        if (compiledTemplate) {\n            this._compiledTemplateCache.delete(type);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCache = function () {\n        this._metadataResolver.clearCache();\n        this._compiledTemplateCache.clear();\n        this._compiledHostTemplateCache.clear();\n        this._compiledNgModuleCache.clear();\n    };\n    /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledHostTemplate = function (compType, ngModule) {\n        if (!ngModule) {\n            throw new Error(\"Component \" + _angular_core.ɵstringify(compType) + \" is not part of any NgModule or the module has not been imported into your module.\");\n        }\n        var /** @type {?} */ compiledTemplate = this._compiledHostTemplateCache.get(compType);\n        if (!compiledTemplate) {\n            var /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n            assertComponent(compMeta);\n            var /** @type {?} */ componentFactory = (compMeta.componentFactory);\n            var /** @type {?} */ hostClass = this._metadataResolver.getHostComponentType(compType);\n            var /** @type {?} */ hostMeta = createHostComponentMeta(hostClass, compMeta, /** @type {?} */ (_angular_core.ɵgetComponentViewDefinitionFactory(componentFactory)));\n            compiledTemplate =\n                new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n            this._compiledHostTemplateCache.set(compType, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledTemplate = function (compMeta, ngModule) {\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n        if (!compiledTemplate) {\n            assertComponent(compMeta);\n            compiledTemplate = new CompiledTemplate(false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n            this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} template\n     * @return {?}\n     */\n    JitCompiler.prototype._compileTemplate = function (template) {\n        var _this = this;\n        if (template.isCompiled) {\n            return;\n        }\n        var /** @type {?} */ compMeta = template.compMeta;\n        var /** @type {?} */ externalStylesheetsByModuleUrl = new Map();\n        var /** @type {?} */ stylesCompileResult = this._styleCompiler.compileComponent(compMeta);\n        stylesCompileResult.externalStylesheets.forEach(function (r) { externalStylesheetsByModuleUrl.set(/** @type {?} */ ((r.meta.moduleUrl)), r); });\n        this._resolveStylesCompileResult(stylesCompileResult.componentStylesheet, externalStylesheetsByModuleUrl);\n        var /** @type {?} */ directives = template.directives.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = template.ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var _a = this._templateParser.parse(compMeta, /** @type {?} */ ((((compMeta.template)).template)), directives, pipes, template.ngModule.schemas, templateSourceUrl(template.ngModule.type, template.compMeta, /** @type {?} */ ((template.compMeta.template)))), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ compileResult = this._viewCompiler.compileComponent(compMeta, parsedTemplate, variable(stylesCompileResult.componentStylesheet.stylesVar), usedPipes);\n        var /** @type {?} */ statements = stylesCompileResult.componentStylesheet.statements.concat(compileResult.statements);\n        var /** @type {?} */ viewClassAndRendererTypeVars = compMeta.isHost ?\n            [compileResult.viewClassVar] :\n            [compileResult.viewClassVar, compileResult.rendererTypeVar];\n        var /** @type {?} */ viewClass;\n        var /** @type {?} */ rendererType;\n        if (!this._compilerConfig.useJit) {\n            _b = interpretStatements(statements, viewClassAndRendererTypeVars), viewClass = _b[0], rendererType = _b[1];\n        }\n        else {\n            _c = jitStatements(templateJitUrl(template.ngModule.type, template.compMeta), statements, viewClassAndRendererTypeVars), viewClass = _c[0], rendererType = _c[1];\n        }\n        template.compiled(viewClass, rendererType);\n        var _b, _c;\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveStylesCompileResult = function (result, externalStylesheetsByModuleUrl) {\n        var _this = this;\n        result.dependencies.forEach(function (dep, i) {\n            var /** @type {?} */ nestedCompileResult = ((externalStylesheetsByModuleUrl.get(dep.moduleUrl)));\n            var /** @type {?} */ nestedStylesArr = _this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n            dep.valuePlaceholder.reference = nestedStylesArr;\n        });\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveAndEvalStylesCompileResult = function (result, externalStylesheetsByModuleUrl) {\n        this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n        if (!this._compilerConfig.useJit) {\n            return interpretStatements(result.statements, [result.stylesVar])[0];\n        }\n        else {\n            return jitStatements(sharedStylesheetJitUrl(result.meta, this._sharedStylesheetCount++), result.statements, [result.stylesVar])[0];\n        }\n    };\n    return JitCompiler;\n}());\nJitCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nJitCompiler.ctorParameters = function () { return [\n    { type: _angular_core.Injector, },\n    { type: CompileMetadataResolver, },\n    { type: TemplateParser, },\n    { type: StyleCompiler, },\n    { type: ViewCompiler, },\n    { type: NgModuleCompiler, },\n    { type: SummaryResolver, },\n    { type: CompilerConfig, },\n    { type: _angular_core.ɵConsole, },\n]; };\nvar CompiledTemplate = (function () {\n    /**\n     * @param {?} isHost\n     * @param {?} compType\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directives\n     */\n    function CompiledTemplate(isHost, compType, compMeta, ngModule, directives) {\n        this.isHost = isHost;\n        this.compType = compType;\n        this.compMeta = compMeta;\n        this.ngModule = ngModule;\n        this.directives = directives;\n        this._viewClass = ((null));\n        this.isCompiled = false;\n    }\n    /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    CompiledTemplate.prototype.compiled = function (viewClass, rendererType) {\n        this._viewClass = viewClass;\n        ((this.compMeta.componentViewType)).setDelegate(viewClass);\n        for (var /** @type {?} */ prop in rendererType) {\n            ((this.compMeta.rendererType))[prop] = rendererType[prop];\n        }\n        this.isCompiled = true;\n    };\n    return CompiledTemplate;\n}());\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction assertComponent(meta) {\n    if (!meta.isComponent) {\n        throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n    }\n}\n/**\n * Implements `Compiler` by delegating to the JitCompiler using a known module.\n */\nvar ModuleBoundCompiler = (function () {\n    /**\n     * @param {?} _delegate\n     * @param {?} _ngModule\n     */\n    function ModuleBoundCompiler(_delegate, _ngModule) {\n        this._delegate = _delegate;\n        this._ngModule = _ngModule;\n    }\n    Object.defineProperty(ModuleBoundCompiler.prototype, \"_injector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._delegate.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.compileModuleSync = function (moduleType) {\n        return this._delegate.compileModuleSync(moduleType);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.compileModuleAsync = function (moduleType) {\n        return this._delegate.compileModuleAsync(moduleType);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n        return this._delegate.compileModuleAndAllComponentsSync(moduleType);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n        return this._delegate.compileModuleAndAllComponentsAsync(moduleType);\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.getNgContentSelectors = function (component) {\n        return this._delegate.getNgContentSelectors(component);\n    };\n    /**\n     * Clears all caches\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.clearCache = function () { this._delegate.clearCache(); };\n    /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.clearCacheFor = function (type) { this._delegate.clearCacheFor(type); };\n    return ModuleBoundCompiler;\n}());\n/**\n * @param {?} fn\n * @param {?=} out\n * @return {?}\n */\nfunction flattenSummaries(fn$$1, out) {\n    if (out === void 0) { out = []; }\n    fn$$1().forEach(function (entry) {\n        if (typeof entry === 'function') {\n            flattenSummaries(entry, out);\n        }\n        else {\n            out.push(entry);\n        }\n    });\n    return out;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for message extracted from the templates.\n */\nvar MessageBundle = (function () {\n    /**\n     * @param {?} _htmlParser\n     * @param {?} _implicitTags\n     * @param {?} _implicitAttrs\n     * @param {?=} _locale\n     */\n    function MessageBundle(_htmlParser, _implicitTags, _implicitAttrs, _locale) {\n        if (_locale === void 0) { _locale = null; }\n        this._htmlParser = _htmlParser;\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n        this._locale = _locale;\n        this._messages = [];\n    }\n    /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    MessageBundle.prototype.updateFromTemplate = function (html, url, interpolationConfig) {\n        var /** @type {?} */ htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n        if (htmlParserResult.errors.length) {\n            return htmlParserResult.errors;\n        }\n        var /** @type {?} */ i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n        if (i18nParserResult.errors.length) {\n            return i18nParserResult.errors;\n        }\n        (_a = this._messages).push.apply(_a, i18nParserResult.messages);\n        return [];\n        var _a;\n    };\n    /**\n     * @return {?}\n     */\n    MessageBundle.prototype.getMessages = function () { return this._messages; };\n    /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    MessageBundle.prototype.write = function (serializer, filterSources) {\n        var /** @type {?} */ messages = {};\n        var /** @type {?} */ mapperVisitor = new MapPlaceholderNames();\n        // Deduplicate messages based on their ID\n        this._messages.forEach(function (message) {\n            var /** @type {?} */ id = serializer.digest(message);\n            if (!messages.hasOwnProperty(id)) {\n                messages[id] = message;\n            }\n            else {\n                (_a = messages[id].sources).push.apply(_a, message.sources);\n            }\n            var _a;\n        });\n        // Transform placeholder names using the serializer mapping\n        var /** @type {?} */ msgList = Object.keys(messages).map(function (id) {\n            var /** @type {?} */ mapper = serializer.createNameMapper(messages[id]);\n            var /** @type {?} */ src = messages[id];\n            var /** @type {?} */ nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n            var /** @type {?} */ transformedMessage = new Message(nodes, {}, {}, src.meaning, src.description, id);\n            transformedMessage.sources = src.sources;\n            if (filterSources) {\n                transformedMessage.sources.forEach(function (source) { return source.filePath = filterSources(source.filePath); });\n            }\n            return transformedMessage;\n        });\n        return serializer.write(msgList, this._locale);\n    };\n    return MessageBundle;\n}());\nvar MapPlaceholderNames = (function (_super) {\n    __extends(MapPlaceholderNames, _super);\n    function MapPlaceholderNames() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.convert = function (nodes, mapper) {\n        var _this = this;\n        return mapper ? nodes.map(function (n) { return n.visit(_this, mapper); }) : nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitTagPlaceholder = function (ph, mapper) {\n        var _this = this;\n        var /** @type {?} */ startName = ((mapper.toPublicName(ph.startName)));\n        var /** @type {?} */ closeName = ph.closeName ? ((mapper.toPublicName(ph.closeName))) : ph.closeName;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, mapper); });\n        return new TagPlaceholder(ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitPlaceholder = function (ph, mapper) {\n        return new Placeholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitIcuPlaceholder = function (ph, mapper) {\n        return new IcuPlaceholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    return MapPlaceholderNames;\n}(CloneVisitor));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extract i18n messages from source code\n */\nvar Extractor = (function () {\n    /**\n     * @param {?} host\n     * @param {?} staticSymbolResolver\n     * @param {?} messageBundle\n     * @param {?} metadataResolver\n     */\n    function Extractor(host, staticSymbolResolver, messageBundle, metadataResolver) {\n        this.host = host;\n        this.staticSymbolResolver = staticSymbolResolver;\n        this.messageBundle = messageBundle;\n        this.metadataResolver = metadataResolver;\n    }\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    Extractor.prototype.extract = function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ programSymbols = extractProgramSymbols(this.staticSymbolResolver, rootFiles, this.host);\n        var _a = analyzeAndValidateNgModules(programSymbols, this.host, this.metadataResolver), files = _a.files, ngModules = _a.ngModules;\n        return Promise\n            .all(ngModules.map(function (ngModule) { return _this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false); }))\n            .then(function () {\n            var /** @type {?} */ errors = [];\n            files.forEach(function (file) {\n                var /** @type {?} */ compMetas = [];\n                file.directives.forEach(function (directiveType) {\n                    var /** @type {?} */ dirMeta = _this.metadataResolver.getDirectiveMetadata(directiveType);\n                    if (dirMeta && dirMeta.isComponent) {\n                        compMetas.push(dirMeta);\n                    }\n                });\n                compMetas.forEach(function (compMeta) {\n                    var /** @type {?} */ html = ((((compMeta.template)).template));\n                    var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                    errors.push.apply(errors, ((_this.messageBundle.updateFromTemplate(html, file.srcUrl, interpolationConfig))));\n                });\n            });\n            if (errors.length) {\n                throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n            }\n            return _this.messageBundle;\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    Extractor.create = function (host, locale) {\n        var /** @type {?} */ htmlParser = new I18NHtmlParser(new HtmlParser());\n        var /** @type {?} */ urlResolver = createOfflineCompileUrlResolver();\n        var /** @type {?} */ symbolCache = new StaticSymbolCache();\n        var /** @type {?} */ summaryResolver = new AotSummaryResolver(host, symbolCache);\n        var /** @type {?} */ staticSymbolResolver = new StaticSymbolResolver(host, symbolCache, summaryResolver);\n        var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, staticSymbolResolver);\n        StaticAndDynamicReflectionCapabilities.install(staticReflector);\n        var /** @type {?} */ config = new CompilerConfig({ defaultEncapsulation: _angular_core.ViewEncapsulation.Emulated, useJit: false });\n        var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return host.loadResource(url); } }, urlResolver, htmlParser, config);\n        var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n        var /** @type {?} */ resolver = new CompileMetadataResolver(config, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, new _angular_core.ɵConsole(), symbolCache, staticReflector);\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        var /** @type {?} */ extractor = new Extractor(host, staticSymbolResolver, messageBundle, resolver);\n        return { extractor: extractor, staticReflector: staticReflector };\n    };\n    return Extractor;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _NO_RESOURCE_LOADER = {\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    get: function (url) {\n        throw new Error(\"No ResourceLoader implementation has been provided. Can't read the url \\\"\" + url + \"\\\"\");\n    }\n};\nvar baseHtmlParser = new _angular_core.InjectionToken('HtmlParser');\n/**\n * A set of providers that provide `JitCompiler` and its dependencies to use for\n * template compilation.\n */\nvar COMPILER_PROVIDERS = [\n    { provide: _angular_core.ɵReflector, useValue: _angular_core.ɵreflector },\n    { provide: _angular_core.ɵReflectorReader, useExisting: _angular_core.ɵReflector },\n    { provide: ResourceLoader, useValue: _NO_RESOURCE_LOADER },\n    JitSummaryResolver,\n    { provide: SummaryResolver, useExisting: JitSummaryResolver },\n    _angular_core.ɵConsole,\n    Lexer,\n    Parser,\n    {\n        provide: baseHtmlParser,\n        useClass: HtmlParser,\n    },\n    {\n        provide: I18NHtmlParser,\n        useFactory: function (parser, translations, format, config, console) { return new I18NHtmlParser(parser, translations, format, config.missingTranslation, console); },\n        deps: [\n            baseHtmlParser,\n            [new _angular_core.Optional(), new _angular_core.Inject(_angular_core.TRANSLATIONS)],\n            [new _angular_core.Optional(), new _angular_core.Inject(_angular_core.TRANSLATIONS_FORMAT)],\n            [CompilerConfig],\n            [_angular_core.ɵConsole],\n        ]\n    },\n    {\n        provide: HtmlParser,\n        useExisting: I18NHtmlParser,\n    },\n    TemplateParser,\n    DirectiveNormalizer,\n    CompileMetadataResolver,\n    DEFAULT_PACKAGE_URL_PROVIDER,\n    StyleCompiler,\n    ViewCompiler,\n    NgModuleCompiler,\n    { provide: CompilerConfig, useValue: new CompilerConfig() },\n    JitCompiler,\n    { provide: _angular_core.Compiler, useExisting: JitCompiler },\n    DomElementSchemaRegistry,\n    { provide: ElementSchemaRegistry, useExisting: DomElementSchemaRegistry },\n    UrlResolver,\n    DirectiveResolver,\n    PipeResolver,\n    NgModuleResolver,\n];\nvar JitCompilerFactory = (function () {\n    /**\n     * @param {?} defaultOptions\n     */\n    function JitCompilerFactory(defaultOptions) {\n        var compilerOptions = {\n            useDebug: _angular_core.isDevMode(),\n            useJit: true,\n            defaultEncapsulation: _angular_core.ViewEncapsulation.Emulated,\n            missingTranslation: _angular_core.MissingTranslationStrategy.Warning,\n            enableLegacyTemplate: true,\n        };\n        this._defaultOptions = [compilerOptions].concat(defaultOptions);\n    }\n    /**\n     * @param {?=} options\n     * @return {?}\n     */\n    JitCompilerFactory.prototype.createCompiler = function (options) {\n        if (options === void 0) { options = []; }\n        var /** @type {?} */ opts = _mergeOptions(this._defaultOptions.concat(options));\n        var /** @type {?} */ injector = _angular_core.ReflectiveInjector.resolveAndCreate([\n            COMPILER_PROVIDERS, {\n                provide: CompilerConfig,\n                useFactory: function () {\n                    return new CompilerConfig({\n                        // let explicit values from the compiler options overwrite options\n                        // from the app providers\n                        useJit: opts.useJit,\n                        // let explicit values from the compiler options overwrite options\n                        // from the app providers\n                        defaultEncapsulation: opts.defaultEncapsulation,\n                        missingTranslation: opts.missingTranslation,\n                        enableLegacyTemplate: opts.enableLegacyTemplate,\n                    });\n                },\n                deps: []\n            }, /** @type {?} */ ((opts.providers))\n        ]);\n        return injector.get(_angular_core.Compiler);\n    };\n    return JitCompilerFactory;\n}());\nJitCompilerFactory.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nJitCompilerFactory.ctorParameters = function () { return [\n    { type: Array, decorators: [{ type: _angular_core.Inject, args: [_angular_core.COMPILER_OPTIONS,] },] },\n]; };\n/**\n * @return {?}\n */\nfunction _initReflector() {\n    _angular_core.ɵreflector.reflectionCapabilities = new _angular_core.ɵReflectionCapabilities();\n}\n/**\n * A platform that included corePlatform and the compiler.\n *\n * \\@experimental\n */\nvar platformCoreDynamic = _angular_core.createPlatformFactory(_angular_core.platformCore, 'coreDynamic', [\n    { provide: _angular_core.COMPILER_OPTIONS, useValue: {}, multi: true },\n    { provide: _angular_core.CompilerFactory, useClass: JitCompilerFactory },\n    { provide: _angular_core.PLATFORM_INITIALIZER, useValue: _initReflector, multi: true },\n]);\n/**\n * @param {?} optionsArr\n * @return {?}\n */\nfunction _mergeOptions(optionsArr) {\n    return {\n        useJit: _lastDefined(optionsArr.map(function (options) { return options.useJit; })),\n        defaultEncapsulation: _lastDefined(optionsArr.map(function (options) { return options.defaultEncapsulation; })),\n        providers: _mergeArrays(optionsArr.map(function (options) { return ((options.providers)); })),\n        missingTranslation: _lastDefined(optionsArr.map(function (options) { return options.missingTranslation; })),\n    };\n}\n/**\n * @template T\n * @param {?} args\n * @return {?}\n */\nfunction _lastDefined(args) {\n    for (var /** @type {?} */ i = args.length - 1; i >= 0; i--) {\n        if (args[i] !== undefined) {\n            return args[i];\n        }\n    }\n    return undefined;\n}\n/**\n * @param {?} parts\n * @return {?}\n */\nfunction _mergeArrays(parts) {\n    var /** @type {?} */ result = [];\n    parts.forEach(function (part) { return part && result.push.apply(result, part); });\n    return result;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Interface that defines how import statements should be generated.\n * @abstract\n */\nvar ImportResolver = (function () {\n    function ImportResolver() {\n    }\n    /**\n     * Converts a file path to a module name that can be used as an `import.\n     * I.e. `path/to/importedFile.ts` should be imported by `path/to/containingFile.ts`.\n     * @abstract\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    ImportResolver.prototype.fileNameToModuleName = function (importedFilePath, containingFilePath) { };\n    /**\n     * Converts the given StaticSymbol into another StaticSymbol that should be used\n     * to generate the import from.\n     * @abstract\n     * @param {?} symbol\n     * @return {?}\n     */\n    ImportResolver.prototype.getImportAs = function (symbol) { };\n    /**\n     * Determine the arity of a type.\n     * @abstract\n     * @param {?} symbol\n     * @return {?}\n     */\n    ImportResolver.prototype.getTypeArity = function (symbol) { };\n    return ImportResolver;\n}());\n\nexports.VERSION = VERSION;\nexports.TEMPLATE_TRANSFORMS = TEMPLATE_TRANSFORMS;\nexports.CompilerConfig = CompilerConfig;\nexports.JitCompiler = JitCompiler;\nexports.DirectiveResolver = DirectiveResolver;\nexports.PipeResolver = PipeResolver;\nexports.NgModuleResolver = NgModuleResolver;\nexports.DEFAULT_INTERPOLATION_CONFIG = DEFAULT_INTERPOLATION_CONFIG;\nexports.InterpolationConfig = InterpolationConfig;\nexports.NgModuleCompiler = NgModuleCompiler;\nexports.ViewCompiler = ViewCompiler;\nexports.isSyntaxError = isSyntaxError;\nexports.syntaxError = syntaxError;\nexports.TextAst = TextAst;\nexports.BoundTextAst = BoundTextAst;\nexports.AttrAst = AttrAst;\nexports.BoundElementPropertyAst = BoundElementPropertyAst;\nexports.BoundEventAst = BoundEventAst;\nexports.ReferenceAst = ReferenceAst;\nexports.VariableAst = VariableAst;\nexports.ElementAst = ElementAst;\nexports.EmbeddedTemplateAst = EmbeddedTemplateAst;\nexports.BoundDirectivePropertyAst = BoundDirectivePropertyAst;\nexports.DirectiveAst = DirectiveAst;\nexports.ProviderAst = ProviderAst;\nexports.ProviderAstType = ProviderAstType;\nexports.NgContentAst = NgContentAst;\nexports.PropertyBindingType = PropertyBindingType;\nexports.NullTemplateVisitor = NullTemplateVisitor;\nexports.RecursiveTemplateAstVisitor = RecursiveTemplateAstVisitor;\nexports.templateVisitAll = templateVisitAll;\nexports.CompileAnimationEntryMetadata = CompileAnimationEntryMetadata;\nexports.CompileAnimationStateMetadata = CompileAnimationStateMetadata;\nexports.CompileAnimationStateDeclarationMetadata = CompileAnimationStateDeclarationMetadata;\nexports.CompileAnimationStateTransitionMetadata = CompileAnimationStateTransitionMetadata;\nexports.CompileAnimationMetadata = CompileAnimationMetadata;\nexports.CompileAnimationKeyframesSequenceMetadata = CompileAnimationKeyframesSequenceMetadata;\nexports.CompileAnimationStyleMetadata = CompileAnimationStyleMetadata;\nexports.CompileAnimationAnimateMetadata = CompileAnimationAnimateMetadata;\nexports.CompileAnimationWithStepsMetadata = CompileAnimationWithStepsMetadata;\nexports.CompileAnimationSequenceMetadata = CompileAnimationSequenceMetadata;\nexports.CompileAnimationGroupMetadata = CompileAnimationGroupMetadata;\nexports.identifierName = identifierName;\nexports.identifierModuleUrl = identifierModuleUrl;\nexports.viewClassName = viewClassName;\nexports.rendererTypeName = rendererTypeName;\nexports.hostViewClassName = hostViewClassName;\nexports.dirWrapperClassName = dirWrapperClassName;\nexports.componentFactoryName = componentFactoryName;\nexports.CompileSummaryKind = CompileSummaryKind;\nexports.tokenName = tokenName;\nexports.tokenReference = tokenReference;\nexports.CompileStylesheetMetadata = CompileStylesheetMetadata;\nexports.CompileTemplateMetadata = CompileTemplateMetadata;\nexports.CompileDirectiveMetadata = CompileDirectiveMetadata;\nexports.createHostComponentMeta = createHostComponentMeta;\nexports.CompilePipeMetadata = CompilePipeMetadata;\nexports.CompileNgModuleMetadata = CompileNgModuleMetadata;\nexports.TransitiveCompileNgModuleMetadata = TransitiveCompileNgModuleMetadata;\nexports.ProviderMeta = ProviderMeta;\nexports.flatten = flatten;\nexports.sourceUrl = sourceUrl;\nexports.templateSourceUrl = templateSourceUrl;\nexports.sharedStylesheetJitUrl = sharedStylesheetJitUrl;\nexports.ngModuleJitUrl = ngModuleJitUrl;\nexports.templateJitUrl = templateJitUrl;\nexports.createAotCompiler = createAotCompiler;\nexports.AotCompiler = AotCompiler;\nexports.analyzeNgModules = analyzeNgModules;\nexports.analyzeAndValidateNgModules = analyzeAndValidateNgModules;\nexports.extractProgramSymbols = extractProgramSymbols;\nexports.GeneratedFile = GeneratedFile;\nexports.StaticReflector = StaticReflector;\nexports.StaticAndDynamicReflectionCapabilities = StaticAndDynamicReflectionCapabilities;\nexports.StaticSymbol = StaticSymbol;\nexports.StaticSymbolCache = StaticSymbolCache;\nexports.ResolvedStaticSymbol = ResolvedStaticSymbol;\nexports.StaticSymbolResolver = StaticSymbolResolver;\nexports.unescapeIdentifier = unescapeIdentifier;\nexports.AotSummaryResolver = AotSummaryResolver;\nexports.AstPath = AstPath;\nexports.SummaryResolver = SummaryResolver;\nexports.JitSummaryResolver = JitSummaryResolver;\nexports.COMPILER_PROVIDERS = COMPILER_PROVIDERS;\nexports.JitCompilerFactory = JitCompilerFactory;\nexports.platformCoreDynamic = platformCoreDynamic;\nexports.createUrlResolverWithoutPackagePrefix = createUrlResolverWithoutPackagePrefix;\nexports.createOfflineCompileUrlResolver = createOfflineCompileUrlResolver;\nexports.DEFAULT_PACKAGE_URL_PROVIDER = DEFAULT_PACKAGE_URL_PROVIDER;\nexports.UrlResolver = UrlResolver;\nexports.getUrlScheme = getUrlScheme;\nexports.ResourceLoader = ResourceLoader;\nexports.ElementSchemaRegistry = ElementSchemaRegistry;\nexports.Extractor = Extractor;\nexports.I18NHtmlParser = I18NHtmlParser;\nexports.MessageBundle = MessageBundle;\nexports.Serializer = Serializer;\nexports.Xliff = Xliff;\nexports.Xliff2 = Xliff2;\nexports.Xmb = Xmb;\nexports.Xtb = Xtb;\nexports.DirectiveNormalizer = DirectiveNormalizer;\nexports.ParserError = ParserError;\nexports.ParseSpan = ParseSpan;\nexports.AST = AST;\nexports.Quote = Quote;\nexports.EmptyExpr = EmptyExpr;\nexports.ImplicitReceiver = ImplicitReceiver;\nexports.Chain = Chain;\nexports.Conditional = Conditional;\nexports.PropertyRead = PropertyRead;\nexports.PropertyWrite = PropertyWrite;\nexports.SafePropertyRead = SafePropertyRead;\nexports.KeyedRead = KeyedRead;\nexports.KeyedWrite = KeyedWrite;\nexports.BindingPipe = BindingPipe;\nexports.LiteralPrimitive = LiteralPrimitive;\nexports.LiteralArray = LiteralArray;\nexports.LiteralMap = LiteralMap;\nexports.Interpolation = Interpolation;\nexports.Binary = Binary;\nexports.PrefixNot = PrefixNot;\nexports.NonNullAssert = NonNullAssert;\nexports.MethodCall = MethodCall;\nexports.SafeMethodCall = SafeMethodCall;\nexports.FunctionCall = FunctionCall;\nexports.ASTWithSource = ASTWithSource;\nexports.TemplateBinding = TemplateBinding;\nexports.NullAstVisitor = NullAstVisitor;\nexports.RecursiveAstVisitor = RecursiveAstVisitor;\nexports.AstTransformer = AstTransformer;\nexports.visitAstChildren = visitAstChildren;\nexports.TokenType = TokenType;\nexports.Lexer = Lexer;\nexports.Token = Token;\nexports.EOF = EOF;\nexports.isIdentifier = isIdentifier;\nexports.isQuote = isQuote;\nexports.SplitInterpolation = SplitInterpolation;\nexports.TemplateBindingParseResult = TemplateBindingParseResult;\nexports.Parser = Parser;\nexports._ParseAST = _ParseAST;\nexports.ERROR_COLLECTOR_TOKEN = ERROR_COLLECTOR_TOKEN;\nexports.CompileMetadataResolver = CompileMetadataResolver;\nexports.componentModuleUrl = componentModuleUrl;\nexports.Text = Text;\nexports.Expansion = Expansion;\nexports.ExpansionCase = ExpansionCase;\nexports.Attribute = Attribute$1;\nexports.Element = Element;\nexports.Comment = Comment;\nexports.visitAll = visitAll;\nexports.RecursiveVisitor = RecursiveVisitor;\nexports.findNode = findNode;\nexports.ParseTreeResult = ParseTreeResult;\nexports.TreeError = TreeError;\nexports.HtmlParser = HtmlParser;\nexports.HtmlTagDefinition = HtmlTagDefinition;\nexports.getHtmlTagDefinition = getHtmlTagDefinition;\nexports.TagContentType = TagContentType;\nexports.splitNsName = splitNsName;\nexports.isNgContainer = isNgContainer;\nexports.isNgContent = isNgContent;\nexports.isNgTemplate = isNgTemplate;\nexports.getNsPrefix = getNsPrefix;\nexports.mergeNsAndName = mergeNsAndName;\nexports.NAMED_ENTITIES = NAMED_ENTITIES;\nexports.ImportResolver = ImportResolver;\nexports.debugOutputAstAsTypeScript = debugOutputAstAsTypeScript;\nexports.TypeScriptEmitter = TypeScriptEmitter;\nexports.ParseLocation = ParseLocation;\nexports.ParseSourceFile = ParseSourceFile;\nexports.ParseSourceSpan = ParseSourceSpan;\nexports.ParseErrorLevel = ParseErrorLevel;\nexports.ParseError = ParseError;\nexports.typeSourceSpan = typeSourceSpan;\nexports.DomElementSchemaRegistry = DomElementSchemaRegistry;\nexports.CssSelector = CssSelector;\nexports.SelectorMatcher = SelectorMatcher;\nexports.SelectorListContext = SelectorListContext;\nexports.SelectorContext = SelectorContext;\nexports.StylesCompileDependency = StylesCompileDependency;\nexports.StylesCompileResult = StylesCompileResult;\nexports.CompiledStylesheet = CompiledStylesheet;\nexports.StyleCompiler = StyleCompiler;\nexports.TemplateParseError = TemplateParseError;\nexports.TemplateParseResult = TemplateParseResult;\nexports.TemplateParser = TemplateParser;\nexports.splitClasses = splitClasses;\nexports.createElementCssSelector = createElementCssSelector;\nexports.removeSummaryDuplicates = removeSummaryDuplicates;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=compiler.umd.js.map\n"]}