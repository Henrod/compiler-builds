{"version":3,"sources":["/home/travis/build/angular/angular/dist/packages-dist/compiler/bundles/compiler.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","compiler","core","this","_angular_core","templateVisitAll","visitor","asts","context","result","visit","ast","forEach","astResult","push","splitNsName","elementName","colonIndex","indexOf","Error","slice","isNgContainer","tagName","isNgContent","isNgTemplate","getNsPrefix","fullName","mergeNsAndName","prefix","localName","getHtmlTagDefinition","TAG_DEFINITIONS","toLowerCase","_DEFAULT_TAG_DEFINITION","dashCaseToCamelCase","input","replace","DASH_CASE_REGEXP","m","_i","arguments","length","toUpperCase","splitAtColon","defaultValues","_splitAt","splitAtPeriod","character","characterIndex","trim","visitValue","value","Array","isArray","visitArray","isStrictStringMap","visitStringMap","visitPrimitive","visitOther","isDefined","val","undefined","noUndefined","syntaxError","msg","error","ERROR_SYNTAX_ERROR","isSyntaxError","escapeRegExp","s","obj","Object","getPrototypeOf","STRING_MAP_PROTO","utf8Encode","str","encoded","index","codePoint","charCodeAt","low","String","fromCharCode","_sanitizeIdentifier","name","identifierName","compileIdentifier","reference","ref","StaticSymbol","identifier","Éµstringify","_anonymousTypeIndex","identifierModuleUrl","filePath","viewClassName","compType","embeddedTemplateIndex","rendererTypeName","hostViewClassName","dirWrapperClassName","dirType","componentFactoryName","tokenName","token","tokenReference","createHostComponentMeta","hostTypeReference","compMeta","hostViewType","template","CssSelector","parse","getMatchingElementTemplate","CompileDirectiveMetadata","create","isHost","type","diDeps","lifecycleHooks","CompileTemplateMetadata","encapsulation","ViewEncapsulation","None","templateUrl","styles","styleUrls","ngContentSelectors","animations","isInline","externalStylesheets","interpolation","exportAs","changeDetection","ChangeDetectionStrategy","Default","inputs","outputs","host","isComponent","selector","providers","viewProviders","queries","viewQueries","componentViewType","rendererType","id","data","entryComponents","componentFactory","_normalizeArray","flatten","list","reduce","flat","item","flatItem","concat","sourceUrl","url","templateSourceUrl","ngModuleType","templateMeta","sharedStylesheetJitUrl","meta","pathParts","split","baseName","ngModuleJitUrl","moduleMeta","templateJitUrl","visitAstChildren","visitAll","visitBinary","left","right","visitChain","expressions","visitConditional","condition","trueExp","falseExp","visitFunctionCall","target","args","visitImplicitReceiver","visitInterpolation","visitKeyedRead","key","visitKeyedWrite","visitLiteralArray","visitLiteralMap","visitLiteralPrimitive","visitMethodCall","receiver","visitPipe","exp","visitPrefixNot","expression","visitNonNullAssert","visitPropertyRead","visitPropertyWrite","visitQuote","visitSafeMethodCall","visitSafePropertyRead","isWhitespace","code","$TAB","$SPACE","$NBSP","isDigit","$0","$9","isAsciiLetter","$a","$z","$A","$Z","isAsciiHexDigit","$f","$F","CompilerInjectable","x","assertArrayOfStrings","isDevMode","i","assertInterpolationSymbols","start_1","end_1","INTERPOLATION_BLACKLIST_REGEXPS","regexp","test","newCharacterToken","Token","TokenType","Character","newIdentifierToken","text","Identifier","newKeywordToken","Keyword","newOperatorToken","Operator","newStringToken","newNumberToken","n","Number","newErrorToken","message","isIdentifierStart","$_","$$","isIdentifier","scanner","_Scanner","peek","advance","$EOF","isIdentifierPart","isExponentStart","$e","$E","isExponentSign","$MINUS","$PLUS","isQuote","$SQ","$DQ","$BT","unescape","$n","$LF","$FF","$r","$CR","$t","$v","$VTAB","parseIntAutoRadix","parseInt","isNaN","_createInterpolateRegExp","config","pattern","start","end","RegExp","typeSourceSpan","kind","moduleUrl","sourceFileName","sourceFile","ParseSourceFile","ParseSourceSpan","ParseLocation","nodes","spanOf","sourceSpan","offset","Element","endSourceSpan","children","findNode","position","path","_super","class_1","apply","__extends","prototype","span","RecursiveVisitor","AstPath","tokenize","source","getTagDefinition","tokenizeExpansionForms","interpolationConfig","DEFAULT_INTERPOLATION_CONFIG","_Tokenizer","_unexpectedCharacterErrorMsg","charCode","char","_unknownEntityErrorMsg","entitySrc","isNotWhitespace","isNameEnd","$GT","$SLASH","$EQ","isPrefixEnd","isDigitEntityEnd","$SEMICOLON","isNamedEntityEnd","isExpansionFormStart","isInterpolationStart","$LBRACE","isExpansionCaseStart","compareCharCodeCaseInsensitive","code1","code2","toUpperCaseCharCode","mergeTextTokens","srcTokens","dstTokens","lastDstToken","TokenType$1","TEXT","parts","lastOnStack","stack","element","createI18nMessageFactory","_I18nVisitor","_expParser","meaning","description","toI18nMessage","_extractPlaceholderName","_CUSTOM_PH_EXP","extractMessages","implicitTags","implicitAttrs","_Visitor","extract","mergeTranslations","translations","merge","_isOpeningComment","Comment","startsWith","_isClosingComment","_getI18nAttr","p","attrs","find","attr","_I18N_ATTR","_parseMessageMeta","i18n","idIndex","ID_SEPARATOR","descIndex","MEANING_SEPARATOR","_a","meaningAndDesc","_b","getXmlTagDefinition","_TAG_DEFINITION","digest","sha1","serializeNodes","join","decimalDigest","_SerializerIgnoreIcuExpVisitor","map","a","computeMsgId","serializerVisitor","utf8","words32","stringToWords32","Endian","Big","len","w","b","c","d","e","h0","h1","h2","h3","h4","j","rol32","_c","fk","f","k","temp","add32","_d","_e","byteStringToHexString","words32ToByteString","fingerprint","hash32","hi","lo","him","lom","add64","rol64","byteStringToDecString","wordAt","Little","mix","sub32","add32to64","high","ah","al","bh","bl","carry","l","h","count","endian","byteAt","word","word32ToByteString","hex","toString","decimal","toThePower","addBigInt","numberTimesBigInt","reverse","y","sum","Math","max","tmpSum","num","product","bToThePower","serialize","node","_visitor","_escapeXml","_ESCAPED_CHARS","entry","getCtypeForTag","tag","getTypeForTag","digest$1","toPublicName","internalName","createLazyProperty","messages","valueFn","defineProperty","configurable","enumerable","get","set","_","createSerializer","format","Xmb","Xtb","Xliff2","Xliff","createTokenForReference","createTokenForExternalReference","reflector","resolveExternalReference","expandNodes","expander","_Expander","ExpansionResult","isExpanded","errors","_expandPluralForm","cases","PLURAL_CASES","match","ExpansionError","valueSourceSpan","expansionResult","Attribute$1","switchAttr","switchValue","switchValueSourceSpan","_expandDefaultForm","_transformProvider","provider","useExisting","useValue","deps","useClass","useFactory","multi","_transformProviderAst","eager","ProviderAst","multiProvider","providerType","_resolveProvidersFromDirectives","directives","targetErrors","providersByToken","Map","directive","dirProvider","_resolveProviders","ProviderAstType","Component","Directive","directivesWithComponentFirst","filter","dir","PublicService","PrivateService","targetProvidersByToken","resolvedProvider","ProviderError","isUseValue","_getViewQueries","component","viewQueryId","query","_addQueryToTokenMap","queryId","_getContentQueries","contentQueryStartId","contentQueryId","contentQueries","directiveIndex","selectors","isStyleUrlResolvable","schemeMatch","URL_WITH_SCHEMA_REGEXP","extractStyleUrls","resolver","baseUrl","cssText","foundUrls","modifiedCssText","CSS_COMMENT_REGEXP","CSS_IMPORT_REGEXP","resolve","StyleWithImports","_isAnimationLabel","calcPossibleSecurityContexts","registry","propName","isAttribute","ctxs","elementNames","allKnownElementNames","notElementNames","Set","notSelectors","isElementSelector","possibleElementNames","has","securityContext","SecurityContext","NONE","from","sort","preparseElement","selectAttr","hrefAttr","relAttr","nonBindable","projectAs","lcAttrName","NG_CONTENT_SELECT_ATTR","LINK_STYLE_HREF_ATTR","LINK_STYLE_REL_ATTR","NG_NON_BINDABLE_ATTR","NG_PROJECT_AS","normalizeNgContentSelect","nodeName","PreparsedElementType","OTHER","NG_CONTENT","STYLE_ELEMENT","STYLE","SCRIPT_ELEMENT","SCRIPT","LINK_ELEMENT","LINK_STYLE_REL_VALUE","STYLESHEET","PreparsedElement","warnOnlyOnce","warnings","warningCounts","splitClasses","classAttrValue","createElementCssSelector","attributes","cssSelector","elNameNoNs","setElement","attrName","attrNameNoNs","attrValue","addAttribute","CLASS_ATTR","classes","className","addClassName","_isEmptyTextNode","Text","removeSummaryDuplicates","items","values","isEmptyExpression","ASTWithSource","EmptyExpr","isTemplate","el","enableLegacyTemplate","reportDeprecation","tagNoNs","TEMPLATE_ELEMENT","TEMPLATE_ELEMENT_DEPRECATION_WARNING","createUrlResolverWithoutPackagePrefix","UrlResolver","createOfflineCompileUrlResolver","getUrlScheme","_split","_ComponentIndex","Scheme","_buildFromEncodedParts","opt_scheme","opt_userInfo","opt_domain","opt_port","opt_path","opt_queryData","opt_fragment","out","uri","_splitRe","_removeDotSegments","leadingSlash","trailingSlash","segments","up","pos","segment","pop","unshift","_joinAndCanonicalizePath","Path","UserInfo","Domain","Port","QueryData","Fragment","_resolveUrl","base","encodeURI","baseParts","lastIndexOf","substring","isDirectiveMetadata","findLast","arr","ngfactoryFilePath","forceSourceFile","urlWithSuffix","splitTypescriptSuffix","stripGeneratedFileSuffix","GENERATED_FILE","isGeneratedFile","endsWith","lastDot","summaryFileName","fileName","fileNameWithoutSuffix","STRIP_SRC_FILE_SUFFIXES","summaryForJitFileName","stripSummaryForJitFileSuffix","JIT_SUMMARY_FILE","summaryForJitName","symbolName","stripSummaryForJitNameSuffix","JIT_SUMMARY_NAME","hasLifecycleHook","hook","getHookName","getAllLifecycleHooks","LIFECYCLE_HOOKS_VALUES","LifecycleHooks","OnInit","OnDestroy","DoCheck","OnChanges","AfterContentInit","AfterContentChecked","AfterViewInit","AfterViewChecked","_isNgModuleMetadata","NgModule","_isPipeMetadata","Pipe","flattenArray","tree","resolveForwardRef","dedupeArray","array","flattenAndDedupeArray","isValidType","Type","extractIdentifiers","targetIdentifiers","_CompileValueConverter","stringifyType","componentStillLoadingError","ÉµERROR_COMPONENT_TYPE","findReadVarNames","stmts","_ReadVarVisitor","visitAllStatements","varNames","applySourceSpanToStatementIfNeeded","stmt","transformer","_ApplySourceSpanTransformer","visitStatement","applySourceSpanToExpressionIfNeeded","expr","visitExpression","variable","ReadVarExpr","importExpr","typeParams","ExternalExpr","importType","typeModifiers","expressionType","ExpressionType","literalArr","LiteralArrayExpr","literalMap","quoted","LiteralMapExpr","LiteralMapEntry","not","NotExpr","assertNotNull","AssertNotNull","fn","params","body","FunctionExpr","literal","LiteralExpr","convertValueToOutputAst","ctx","_ValueOutputAstTransformer","providerDef","providerAst","flags","lifecycleHook","lifecycleHookToNodeFlag","multiProviderDef","singleProviderDef","providerExpr","providerFlags","depsExpr","tokenExpr","convertDeps","providerIndex","dep","depIndex","paramName","allParams","FnParam","DYNAMIC_TYPE","allDepDefs","depDef","exprs","depExprs","instantiate","callFn","ReturnStatement","INFERRED_TYPE","providerMeta","NULL_EXPR","tokenMeta","isValue","isSkipSelf","isOptional","nodeFlag","componentFactoryResolverProviderDef","entryComponentFactories","entryComponent","Identifiers","ComponentFactoryResolver","classMeta","NgModuleRef","CodegenComponentFactoryResolver","toBase64String","b64","i1","i2","i3","toBase64Digit","toBase64VLQ","digit","B64_DIGITS","escapeIdentifier","escapeDollar","alwaysQuote","_SINGLE_QUOTE_ESCAPE_STRING_RE","requiresQuotes","_LEGAL_IDENTIFIER_RE","_createIndent","res","_INDENT_WITH","debugOutputAstAsTypeScript","converter","_TsEmitterVisitor","EmitterVisitorContext","createRoot","Statement","Expression","Type$1","visitType","toSource","registerContext","specs","specs_1","spec","SECURITY_SCHEMA","_isPixelDimensionStyle","prop","stripComments","_commentRe","extractSourceMappingUrl","matcher","_sourceMappingUrlRe","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","_ruleRe","content","suffix","contentPrefix","BLOCK_PLACEHOLDER","blocks","rule","CssRule","inputParts","_curlyRe","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","CLOSE_CURLY","OPEN_CURLY","StringWithEscapedBlocks","getStylesVarName","convertActionBinding","localResolver","implicitReceiver","action","bindingId","DefaultLocalResolver","actionWithoutBuiltins","convertPropertyBindingBuiltins","createLiteralArrayConverter","argCount","createLiteralMapConverter","keys","createPipeConverter","_AstToIrVisitor","actionStmts","flattenStatements","_Mode","prependTemporaryDecls","temporaryCount","lastIndex","preventDefaultVar","lastStatement","returnExpr","convertStmtIntoExpression","createPreventDefaultVar","cast","notIdentical","toDeclStmt","StmtModifier","Final","ConvertActionBindingResult","converterFactory","convertBuiltins","convertPropertyBinding","expressionWithoutBuiltins","currValExpr","createCurrValueExpr","outputExpr","temporaryDeclaration","ConvertPropertyBindingResult","_BuiltinAstConverter","temporaryName","temporaryNumber","DeclareVarStmt","statements","ensureStatementMode","mode","ensureExpressionMode","convertToStatementIfNeeded","toStmt","arg","output","ExpressionStatement","needsAdditionalRootNode","astNodes","lastAstNode","EmbeddedTemplateAst","hasViewContainer","ElementAst","NgContentAst","elementBindingDef","inputAst","dirAst","PropertyBindingType","Attribute","Property","Animation","bindingType","Class","Style","unit","fixedAttrsDef","elementAst","mapResult","attrAst","hostAttributes","prevValue","mergeAttributeValue","attrValue1","attrValue2","CLASS_ATTR$1","STYLE_ATTR","callCheckStmt","nodeIndex","CHECK_VAR","VIEW_VAR","callUnwrapValue","bindingIdx","unwrapValue","findStaticQueryIds","staticQueryIds","dynamicQueryIds","queryMatches","child","childData","add","delete","staticViewQueryIds","nodeStaticQueryIds","elementEventNameAndTarget","eventAst","isAnimation","phase","calcStaticDynamicQueryFlags","queryIds","isFirst","toTypeScript","file","preamble","genFileUrl","TypeScriptEmitter","emitStatements","srcFileUrl","serializeSummaries","forJitCtx","summaryResolver","symbolResolver","symbols","types","toJsonSerializer","ToJsonSerializer","forJitSerializer","ForJitSerializer","resolvedSymbol","addOrMergeSummary","symbol","metadata","processedIndex","isLibraryFile","summary","resolveSummary","resolveSymbol","addLibType","addSourceType","summaryKind","CompileSummaryKind","ngModuleSummary","exportedDirectives","exportedPipes","summary_1","json","deserializeSummaries","symbolCache","deserializer","FromJsonDeserializer","deserialize","_resolveStyleStatements","compileResult","needsShim","fileSuffix","dependencies","setValue","getStaticSymbol","_stylesModuleUrl","stylesheetUrl","shim","_assertComponent","analyzeNgModules","programStaticSymbols","metadataResolver","_createNgModules","ngModules","symbolsMissingModule","_analyzeNgModules","analyzeAndValidateNgModules","programSymbols","ngModuleMetas","moduleMetasByRef","ngModule","ngModuleByPipeOrDirective","ngModulesByFile","ngDirectivesByFile","ngPipesByFile","ngInjectablesByFile","filePaths","isInjectable","ngModuleMeta","declaredDirectives","dirIdentifier","fileUrl","declaredPipes","pipeIdentifier","files","srcUrl","pipes","injectables","extractProgramSymbols","staticSymbolResolver","staticSymbols","isSourceFile","getSymbolsOf","symbolMeta","__symbolic","programPipesAndDirectives","ngModulePipesAndDirective","addNgModule","staticSymbol","getNgModuleMetadata","pipe","transitiveModule","modules","modMeta","isDirective","isPipe","shouldIgnore","expandedMessage","typeName","produceErrorMessage","mapStringMap","transform","HIDDEN_KEY","isPrimitive","o","positionalError","line","column","unescapeIdentifier","substr","createAotCompiler","compilerHost","options","urlResolver","StaticSymbolCache","AotSummaryResolver","StaticSymbolResolver","staticReflector","StaticReflector","console","ÉµConsole","htmlParser","I18NHtmlParser","HtmlParser","i18nFormat","missingTranslation","CompilerConfig","defaultEncapsulation","Emulated","useJit","normalizer","DirectiveNormalizer","loadResource","expressionParser","Parser","Lexer","elementSchemaRegistry","DomElementSchemaRegistry","tmplParser","TemplateParser","CompileMetadataResolver","NgModuleResolver","DirectiveResolver","PipeResolver","viewCompiler","ViewCompiler","AotCompiler","StyleCompiler","NgModuleCompiler","locale","interpretStatements","_ExecutionContext","StatementInterpreter","exportName","vars","_executeFunctionStatements","varValues","childCtx","createChildWihtLocalVars","createDynamicClass","_classStmt","_ctx","propertyDescriptors","getters","getter","instanceCtx","methods","method","paramNames","param","writable","ctorParamNames","constructorMethod","ctor","_this","fields","field","superClass","parent","_declareFn","evalExpression","sourceUrl$$1","fnBody","fnArgNames","fnArgValues","argName","emptyFn","Function","bind","headerLines","toSourceMapGenerator","toJsComment","jitStatements","JitEmitterVisitor","createReturnStmt","getArgs","assertComponent","flattenSummaries","fn$$1","createOutputContext","importExpr$$1","moduleName","runtime","genFilePath","_mergeOptions","optionsArr","_lastDefined","_mergeArrays","extendStatics","setPrototypeOf","__proto__","hasOwnProperty","__","constructor","VERSION","Version","TextAst","ngContentIndex","visitText","BoundTextAst","visitBoundText","AttrAst","visitAttr","BoundElementPropertyAst","visitElementProperty","BoundEventAst","handler","calcFullName","visitEvent","ReferenceAst","visitReference","VariableAst","visitVariable","references","visitElement","variables","visitEmbeddedTemplate","BoundDirectivePropertyAst","directiveName","templateName","visitDirectiveProperty","DirectiveAst","hostProperties","hostEvents","visitDirective","Builtin","visitNgContent","NullTemplateVisitor","RecursiveTemplateAstVisitor","call","visitChildren","cb","results","t","members","assertNoMembers","JSON","stringify","cache","declarationFile","memberSuffix","TagContentType","RAW_TEXT","ESCAPABLE_RAW_TEXT","PARSABLE_DATA","NAMED_ENTITIES","Aacute","aacute","Acirc","acirc","acute","AElig","aelig","Agrave","agrave","alefsym","Alpha","alpha","amp","and","ang","apos","Aring","aring","asymp","Atilde","atilde","Auml","auml","bdquo","Beta","beta","brvbar","bull","cap","Ccedil","ccedil","cedil","cent","Chi","chi","circ","clubs","cong","copy","crarr","cup","curren","dagger","Dagger","darr","dArr","deg","Delta","delta","diams","divide","Eacute","eacute","Ecirc","ecirc","Egrave","egrave","empty","emsp","ensp","Epsilon","epsilon","equiv","Eta","eta","ETH","eth","Euml","euml","euro","exist","fnof","forall","frac12","frac14","frac34","frasl","Gamma","gamma","ge","gt","harr","hArr","hearts","hellip","Iacute","iacute","Icirc","icirc","iexcl","Igrave","igrave","image","infin","int","Iota","iota","iquest","isin","Iuml","iuml","Kappa","kappa","Lambda","lambda","lang","laquo","larr","lArr","lceil","ldquo","le","lfloor","lowast","loz","lrm","lsaquo","lsquo","lt","macr","mdash","micro","middot","minus","Mu","mu","nabla","nbsp","ndash","ne","ni","notin","nsub","Ntilde","ntilde","Nu","nu","Oacute","oacute","Ocirc","ocirc","OElig","oelig","Ograve","ograve","oline","Omega","omega","Omicron","omicron","oplus","or","ordf","ordm","Oslash","oslash","Otilde","otilde","otimes","Ouml","ouml","para","permil","perp","Phi","phi","Pi","pi","piv","plusmn","pound","prime","Prime","prod","Psi","psi","quot","radic","rang","raquo","rarr","rArr","rceil","rdquo","real","reg","rfloor","Rho","rho","rlm","rsaquo","rsquo","sbquo","Scaron","scaron","sdot","sect","shy","Sigma","sigma","sigmaf","sim","spades","sub","sube","sup","sup1","sup2","sup3","supe","szlig","Tau","tau","there4","Theta","theta","thetasym","thinsp","THORN","thorn","tilde","times","trade","Uacute","uacute","uarr","uArr","Ucirc","ucirc","Ugrave","ugrave","uml","upsih","Upsilon","upsilon","Uuml","uuml","weierp","Xi","xi","Yacute","yacute","yen","yuml","Yuml","Zeta","zeta","zwj","zwnj","HtmlTagDefinition","closedByChildren","requiredParents","implicitNamespacePrefix","contentType","closedByParent","isVoid","_f","ignoreFirstLf","canSelfClose","parentToAdd","requireExtraParent","currentParent","lcParent","isParentTemplate","isClosedByChild","area","embed","link","img","hr","br","track","wbr","thead","tbody","tfoot","tr","td","th","col","svg","math","li","dt","dd","rb","rt","rtc","rp","optgroup","option","pre","listing","style","script","title","textarea","_SELECTOR_REGEXP","classNames","_addResult","cssSel","current","inNot","exec","hasElementSelector","classAttr","klass","notSelector","SelectorMatcher","_elementMap","_elementPartialMap","_classMap","_classPartialMap","_attrValueMap","_attrValuePartialMap","_listContexts","createNotMatcher","notMatcher","addSelectables","cssSelectors","callbackCtxt","listContext","SelectorListContext","_addSelectable","selectable","SelectorContext","isTerminal","_addTerminal","_addPartial","terminalMap","terminalValuesMap","partialMap","partialValuesMap","terminalList","matchedCallback","alreadyMatched","_matchTerminal","_matchPartial","selectables","starSelectables","finalize","nestedSelector","cbContext","callback","MODULE_SUFFIX","ValueTransformer","SyncAsync","assertSync","ÉµisPromise","then","all","syncAsyncValues","some","Promise","HOST_REG_EXP","CompileAnimationEntryMetadata","definitions","CompileAnimationStateMetadata","CompileAnimationStateDeclarationMetadata","stateNameExpr","CompileAnimationStateTransitionMetadata","stateChangeExpr","steps","CompileAnimationMetadata","CompileAnimationKeyframesSequenceMetadata","CompileAnimationStyleMetadata","CompileAnimationAnimateMetadata","timings","CompileAnimationWithStepsMetadata","CompileAnimationSequenceMetadata","CompileAnimationGroupMetadata","Injectable","CompileStylesheetMetadata","toSummary","anim","hostListeners","matches","inputsMap","bindConfig","outputsMap","CompilePipeMetadata","pure","CompileNgModuleMetadata","bootstrapComponents","importedModules","exportedModules","schemas","TransitiveCompileNgModuleMetadata","directivesSet","exportedDirectivesSet","pipesSet","exportedPipesSet","modulesSet","entryComponentsSet","addProvider","addDirective","addExportedDirective","addPipe","addExportedPipe","addModule","addEntryComponent","ec","componentType","ProviderMeta","CompileReflector","parameters","typeOrFunc","annotations","propMetadata","lcProperty","componentModuleUrl","cmpMetadata","ParserError","errLocation","ctxLocation","ParseSpan","AST","Quote","uninterpretedExpression","location","ImplicitReceiver","Chain","Conditional","PropertyRead","PropertyWrite","SafePropertyRead","KeyedRead","KeyedWrite","BindingPipe","LiteralPrimitive","LiteralArray","LiteralMap","Interpolation","strings","Binary","operation","PrefixNot","NonNullAssert","MethodCall","SafeMethodCall","FunctionCall","TemplateBinding","keyIsVar","NullAstVisitor","RecursiveAstVisitor","AstTransformer","$BANG","$HASH","$PERCENT","$AMPERSAND","$LPAREN","$RPAREN","$STAR","$COMMA","$PERIOD","$COLON","$LT","$QUESTION","$X","$LBRACKET","$BACKSLASH","$RBRACKET","$CARET","$u","$x","$BAR","$RBRACE","InterpolationConfig","fromArray","markers","KEYWORDS","tokens","scanToken","decorators","ctorParameters","numValue","strValue","isCharacter","isNumber","isString","isOperator","operater","isKeyword","isKeywordLet","isKeywordAs","isKeywordNull","isKeywordUndefined","isKeywordTrue","isKeywordFalse","isKeywordThis","isError","toNumber","EOF","scanIdentifier","scanNumber","scanCharacter","scanString","scanOperator","scanComplexOperator","one","twoCode","two","threeCode","three","simple","parseFloat","quote","buffer","marker","unescapedCode","last","SplitInterpolation","offsets","TemplateBindingParseResult","templateBindings","_lexer","parseAction","_checkNoInterpolation","sourceToLex","_stripComments","_ParseAST","parseChain","parseBinding","_parseBindingAst","parseSimpleBinding","SimpleExpressionChecker","check","_reportError","_parseQuote","prefixSeparatorIndex","parseTemplateBindings","prefixToken","prefixTokens","parseInterpolation","splitInterpolation","expressionText","_findInterpolationErrorColumn","wrapLiteralPrimitive","_commentStart","outerQuote","nextChar","partInErrIdx","inputLength","rparensExpected","rbracketsExpected","rbracesExpected","next","inputIndex","optionalCharacter","peekKeywordLet","peekKeywordAs","expectCharacter","optionalOperator","op","expectOperator","operator","expectIdentifierOrKeyword","expectIdentifierOrKeywordOrString","parsePipe","parseExpression","parseConditional","parseLogicalOr","yes","no","parseLogicalAnd","parseEquality","parseRelational","parseAdditive","parseMultiplicative","parsePrefix","parseCallChain","parsePrimary","parseAccessMemberOrMethodCall","parseCallArguments","elements","parseExpressionList","parseLiteralMap","literalValue","terminator","isSafe","positionals","expectTemplateBindingKey","operatorFound","bindings","rawKey","letStart","start_2","letName","locationText","skip","moveBy","ch","priorLine","getContext","maxChars","maxLines","startOffset","endOffset","ctxChars","ctxLines","before","after","details","ParseErrorLevel","WARNING","ERROR","ParseError","level","contextStr","parentOf","childOf","first","Expansion","visitExpansion","ExpansionCase","expSourceSpan","visitExpansionCase","valueSpan","visitAttribute","startSourceSpan","visitComment","TAG_OPEN_START","TAG_OPEN_END","TAG_OPEN_END_VOID","TAG_CLOSE","COMMENT_START","COMMENT_END","CDATA_START","CDATA_END","ATTR_NAME","ATTR_VALUE","DOC_TYPE","EXPANSION_FORM_START","EXPANSION_CASE_VALUE","EXPANSION_CASE_EXP_START","EXPANSION_CASE_EXP_END","EXPANSION_FORM_END","Token$1","TokenError","errorMsg","tokenType","TokenizeResult","_CR_OR_CRLF_REGEXP","_ControlFlowError","_file","_getTagDefinition","_tokenizeIcu","_interpolationConfig","_peek","_nextPeek","_index","_line","_column","_expansionCaseStack","_inInterpolation","_input","_length","_advance","_processCarriageReturns","_getLocation","_attemptCharCode","_consumeCdata","_consumeComment","_consumeDocType","_consumeTagClose","_consumeTagOpen","_tokenizeExpansionForm","_consumeText","_beginToken","_endToken","_consumeExpansionFormStart","_isInExpansionForm","_consumeExpansionCaseStart","_isInExpansionCase","_consumeExpansionCaseEnd","_consumeExpansionFormEnd","_getSpan","_currentTokenStart","_currentTokenType","_createError","_attemptCharCodeCaseInsensitive","_requireCharCode","_attemptStr","chars","initialPosition","_savePosition","_restorePosition","_attemptStrCaseInsensitive","_requireStr","_attemptCharCodeUntilFn","predicate","_requireCharCodeUntilFn","_attemptUntilChar","_readChar","decodeEntities","_decodeEntity","startPosition","isHex","numberStart","strNum","entity","_consumeRawText","firstCharOfEnd","attemptEndRest","tagCloseStart","textStart","textToken","_consumePrefixAndName","nameOrPrefixStart","nameStart","lowercaseTagName","savedPos","_consumeTagOpenStart","_consumeAttributeName","_consumeAttributeValue","_consumeTagOpenEnd","contentTokenType","_consumeRawTextWithTagClose","prefixAndName","quoteChar","valueStart","_readUntil","_isTextEnd","nbTokens","TreeError","ParseTreeResult","rootNodes","Parser$1","parseExpansionForms","tokensAndErrors","treeAndErrors","_TreeBuilder","build","_rootNodes","_errors","_elementStack","_consumeStartTag","_consumeEndTag","_closeVoidElement","_consumeExpansion","prev","_advanceIf","startToken","_addToParent","expCase","_parseExpansionCase","_collectExpansionExpTokens","parsedExp","expansionFormStack","_getParentElement","startTagToken","_consumeAttr","_getElementFullName","selfClosing","tagDef","_pushElement","_popElement","parentEl","_getParentElementSkippingContainers","container","newParent","_insertBeforeContainer","endTagToken","errMsg","stackIndex","splice","valueToken","parentElement","Message","placeholders","placeholderToMessage","sources","startLine","startCol","endLine","endCol","Text$1","Container","visitContainer","Icu","visitIcu","TagPlaceholder","startName","closeName","visitTagPlaceholder","Placeholder","visitPlaceholder","IcuPlaceholder","visitIcuPlaceholder","CloneVisitor","icu","expressionPlaceholder","ph","RecurseVisitor","TAG_TO_PLACEHOLDER_NAMES","A","B","BR","EM","H1","H2","H3","H4","H5","H6","HR","I","LI","LINK","OL","P","Q","S","SMALL","SUB","SUP","TBODY","TD","TFOOT","TH","THEAD","TR","TT","U","UL","PlaceholderRegistry","_placeHolderNameCounts","_signatureToName","getStartTagPlaceholderName","signature","_hashTag","upperTag","_generateUniqueName","getCloseTagPlaceholderName","_hashClosingTag","getPlaceholderName","upperName","uniqueName","getUniquePlaceholder","strAttrs","seen","_expressionParser","_isIcu","_icuDepth","_placeholderRegistry","_placeholderToContent","_placeholderToMessage","i18nodes","startPhName","closePhName","attribute","_visitTextWithInterpolation","comment","i18nIcuCases","i18nIcu","caze","expPh","phName","icuCase","sDelimiter","eDelimiter","lastStringIdx","I18nError","_I18N_ATTR_PREFIX","_I18N_COMMENT_PREFIX_REGEXP","ExtractionResult","_VisitorMode","Extract","Merge","_implicitTags","_implicitAttrs","_init","_inI18nBlock","_messages","_translations","wrapper","translatedNode","_mode","_mayBeAddBlockChildren","wasInIcu","_inIcu","_isInTranslatableSection","_addMessage","isOpening","isClosing","_inI18nNode","_depth","_blockStartDepth","_closeTranslatableSection","_blockChildren","_blockMeaningAndDesc","_translateMessage","_openTranslatableSection","wasInI18nNode","wasInImplicitNode","_inImplicitNode","childNodes","translatedChildNodes","i18nAttr","i18nMeta","isImplicit","isTopLevelImplicit","isTranslatable","visitNodes","visited","_visitAttributesOf","translatedAttrs","_translateAttributes","_msgCountAtSectionStart","_createI18nMessage","explicitAttrNameToValue","implicitAttrNames","msgMeta","i18nParsedMessageMeta","translatedAttributes","directChildren","startIndex","significantChildren","XmlTagDefinition","XmlParser","_SerializerVisitor","strCases","Serializer","write","load","createNameMapper","SimplePlaceholderMapper","mapName","internalToPublic","publicToNextId","publicToInternal","toInternalName","publicName","visitPlaceholderName","nextId","_Visitor$1","visitTag","_serializeAttributes","strChildren","visitDeclaration","decl","visitDoctype","doctype","rootTag","dtd","Declaration","unescapedAttrs","Doctype","Tag","Text$2","unescapedValue","CR","ws","_VERSION","_XMLNS","_DEFAULT_SOURCE_LANG","_PLACEHOLDER_TAG","_FILE_TAG","_SOURCE_TAG","_TARGET_TAG","_UNIT_TAG","_CONTEXT_GROUP_TAG","_CONTEXT_TAG","_WriteVisitor","transUnits","contextTags","contextGroupTag","purpose","context-type","transUnit","datatype","priority","source-language","original","xliff","version","xmlns","encoding","xliffParser","XliffParser","msgIdToHtml","i18nNodesByMsgId","XmlToI18n","msgId","convert","i18nNodes","ctype","startTagPh","closeTagPh","_locale","_unitMlString","_msgIdToHtml","xml","idAttr","_addError","innerTextStart","innerTextEnd","innerText","localeAttr","expansion","expansionCase","xmlIcu","nameAttr","caseMap","_VERSION$1","_XMLNS$1","_DEFAULT_SOURCE_LANG$1","_PLACEHOLDER_TAG$1","_PLACEHOLDER_SPANNING_TAG","_XLIFF_TAG","_SOURCE_TAG$1","_TARGET_TAG$1","_UNIT_TAG$1","_WriteVisitor$1","units","notes","category","srcLang","xliff2Parser","Xliff2Parser","XmlToI18n$1","tagPh","_nextPlaceholderId","disp","tagPc","equivStart","equivEnd","dispStart","dispEnd","versionAttr","startAttr","endAttr","startId","endId","_MESSAGES_TAG","_MESSAGE_TAG","_PLACEHOLDER_TAG$2","_EXEMPLE_TAG","_SOURCE_TAG$2","_DOCTYPE","exampleVisitor","ExampleVisitor","_Visitor$2","rootNode","sourceTags","addDefaultExamples","startEx","closeEx","exText","_TRANSLATIONS_TAG","_TRANSLATION_TAG","_PLACEHOLDER_TAG$3","xtbParser","XtbParser","XmlToI18n$2","xtb","_bundleDepth","langAttr","TranslationBundle","_i18nNodesByMsgId","mapperFactory","missingTranslationStrategy","MissingTranslationStrategy","Warning","_i18nToHtml","I18nToHtmlVisitor","serializer","digestFn","srcMsg","html","_digest","_mapperFactory","_missingTranslationStrategy","_console","_contextStack","_convertToText","_srcMsg","_mapper","mapper","warn","_htmlParser","translationsFormat","_translationBundle","parseResult","CORE","ANALYZE_FOR_ENTRY_COMPONENTS","ElementRef","ViewContainerRef","ChangeDetectorRef","QueryList","TemplateRef","ÉµCodegenComponentFactoryResolver","ComponentFactory","ComponentRef","NgModuleFactory","createModuleFactory","Éµcmf","moduleDef","Éµmod","moduleProviderDef","Éµmpd","RegisterModuleFactoryFn","ÉµregisterModuleFactory","Injector","LOCALE_ID","TRANSLATIONS_FORMAT","inlineInterpolate","ÉµinlineInterpolate","interpolate","Éµinterpolate","EMPTY_ARRAY","ÉµEMPTY_ARRAY","EMPTY_MAP","ÉµEMPTY_MAP","Renderer","viewDef","Éµvid","elementDef","Éµeld","anchorDef","Éµand","textDef","Éµted","directiveDef","Éµdid","Éµprd","queryDef","Éµqud","pureArrayDef","Éµpad","pureObjectDef","Éµpod","purePipeDef","Éµppd","pipeDef","Éµpid","nodeValue","Éµnov","ngContentDef","Éµncd","Éµunv","createRendererType2","Éµcrt","RendererType2","ViewDefinition","createComponentFactory","Éµccf","expanded","ProviderViewContext","ProviderElementContext","viewContext","_parent","_isViewRoot","_directiveAsts","refs","_sourceSpan","_transformedProviders","_seenProviders","_hasViewContainer","_queriedTokens","_attrs","directivesMeta","directiveAst","_allProviders","_contentQueries","_addQueryReadsTo","templateRefId","refAst","defaultQueryValue","_getOrCreateLocalProvider","afterElement","lazyProviders","eagerProviders","sortedProviderTypes","transformProviders","sortedDirectives","dir1","dir2","allMatches","defaultValue","queryReadTokens","_getQueriesFor","queryValue","read","tokenRef","currentEl","distance","descendants","requestingProviderType","transformedProviderAst","transformedProviders","transformedUseValue","transformedUseExisting","transformedDeps","existingDiDep","_getDependency","_getLocalDependency","currElement","currEager","isSelf","prevElement","NgModuleProviderAnalyzer","extraProviders","ngModuleProvider","errorString","requestorSourceSpan","foundLocal","ElementSchemaRegistry","hasProperty","schemaMetas","hasElement","getMappedPropName","getDefaultComponentElementName","validateProperty","validateAttribute","normalizeAnimationStyleProperty","normalizeAnimationStyleValue","camelCaseProp","userProvidedProp","style$$1","PROPERTY_PARTS_SEPARATOR","ATTRIBUTE_PREFIX","CLASS_PREFIX","STYLE_PREFIX","ANIMATE_PROP_PREFIX","BoundPropertyType","DEFAULT","LITERAL_ATTR","ANIMATION","BoundProperty","BindingParser","_exprParser","_schemaRegistry","_targetErrors","pipesByName","_usedPipes","getUsedPipes","createDirectiveHostPropertyAsts","dirMeta","elementSelector","boundProps_1","parsePropertyBinding","createElementPropertyAst","createDirectiveHostEventAsts","targetEventAsts_1","parseEvent","sourceInfo","_reportExpressionParserErrors","_checkPipes","parseInlineTemplateBinding","targetMatchableAttrs","targetProps","targetVars","_parseTemplateBindings","binding","_parsePropertyAst","parseLiteralAttr","bindingsResult","warning","_parseAnimation","isAnimationProp","_parseBinding","parsePropertyInterpolation","isHostBinding","boundProp","boundPropertyName","securityContexts","_validatePropertyOrAttributeName","nsSeparatorIdx","ns","targetEvents","_parseAnimationEvent","_parseEvent","eventName","_parseAction","errors_1","collector","PipeCollector","pipeName","pipeMeta","isAttr","report","BIND_NAME_REGEXP","KW_BIND_IDX","KW_LET_IDX","KW_REF_IDX","KW_ON_IDX","KW_BINDON_IDX","KW_AT_IDX","IDENT_KW_IDX","IDENT_BANANA_BOX_IDX","IDENT_PROPERTY_IDX","IDENT_EVENT_IDX","TEMPLATE_ATTR","TEMPLATE_ATTR_PREFIX","TEXT_CSS_SELECTOR","TEMPLATE_ATTR_DEPRECATION_WARNING","TEMPLATE_TRANSFORMS","InjectionToken","TemplateParseError","TemplateParseResult","templateAst","usedPipes","_config","_reflector","transforms","tryParse","tryParseHtml","expandHtml","getInterpolationConfig","htmlAstWithErrors","uniqDirectives","uniqPipes","providerViewContext","bindingParser","parseVisitor","TemplateParseVisitor","EMPTY_ELEMENT_CONTEXT","_assertNoReferenceDuplicationOnTemplate","forced","expandedHtmlAst","existingReferences","Optional","Inject","_bindingParser","_schemas","selectorMatcher","directivesIndex","ngContentCount","findNgContentIndex","queryStartIndex","preparsedElement","matchableAttrs","elementOrDirectiveProps","elementOrDirectiveRefs","elementVars","events","templateElementOrDirectiveProps","templateMatchableAttrs","templateElementVars","hasInlineTemplates","isTemplateElement","templateBindingsSource","hasBinding","_parseAttr","normalizedName","_normalizeAttributeName","hasTemplateBinding","elementCssSelector","_parseDirectives","directiveMetas","matchElement","boundDirectivePropNames","directiveAsts","_createDirectiveAsts","elementProps","_createElementPropertyAsts","isViewRoot","providerContext","NON_BINDABLE_VISITOR","ElementContext","parsedElement","projectionSelector","every","_assertAllEventsPublishedByDirectives","_assertNoComponentsNorElementBindingsOnTemplate","transformedDirectiveAsts","transformedHasViewContainer","_assertElementExists","_assertOnlyOneComponent","ngContentIndex_1","templateQueryStartIndex","templateSelector","templateDirectiveMetas","templateBoundDirectivePropNames","templateDirectiveAsts","templateElementProps","templateProviderContext","targetRefs","srcSpan","bindParts","_parseVariable","_parseReference","_parseAssignmentEvent","ElementOrDirectiveRef","size","props","elementSourceSpan","targetReferences","targetBoundDirectivePropNames","matchedReferences","directiveProperties","_checkPropertiesInSchema","_createDirectivePropertyAsts","elOrDirRef","refToken","boundProps","targetBoundDirectiveProps","boundPropsByName_1","isLiteral","dirProp","elProp","boundElementProps","_findComponentDirectives","_findComponentDirectiveNames","componentTypeNames","elName","allDirectiveEvents","event","NonBindableVisitor","attrNameAndValues","_ngContentIndexMatcher","_wildcardNgContentIndex","wildcardNgContentIndex","ngContentIndices","ResourceLoader","DEFAULT_PACKAGE_URL_PROVIDER","provide","PACKAGE_ROOT_URL","_packagePrefix","resolvedUrl","resolvedParts","_resourceLoader","_urlResolver","_resourceLoaderCache","clearCache","clear","clearCacheFor","normalizedDirective","stylesheet","_fetch","normalizeTemplate","prenormData","normalizeTemplateOnly","normalizeExternalStylesheets","prenomData","normalizeLoadedTemplate","templateAbsUrl","rootNodesAndErrors","templateMetadataStyles","normalizeStylesheet","TemplatePreparseVisitor","templateStyles","_loadMissingExternalStylesheets","loadedStylesheets","styleUrl","loadedStyle","allStyleUrls","allStyles","styleWithImports","ngNonBindableStackCount","textContent_1","typeMetadata","throwIfNotFound","propertyMetadata","_mergeWithPropertyMetadata","dm","directiveType","Input","bindingPropertyName","Output","hostBindings","HostBinding","hostBinding","hostPropertyName","startWith","HostListener","hostListener","Query","_merge","_extractPublicName","def","_dedupeBindings","names","reversedResult","mergedInputs","mergedOutputs","mergedHost","assign","mergedQueries","moduleId","isNgModule","metas","annotation","SummaryResolver","getLibraryFileName","getImportAs","addSummary","JitSummaryResolver","_summaries","ERROR_COLLECTOR_TOKEN","_ngModuleResolver","_directiveResolver","_pipeResolver","_summaryResolver","_directiveNormalizer","_staticSymbolCache","_errorCollector","_nonNormalizedDirectiveCache","_directiveCache","_summaryCache","_pipeCache","_ngModuleCache","_ngModuleOfTypes","getReflector","_createProxyClass","baseType","delegate","proxyClass","setDelegate","overriddenName","getGeneratedClass","getComponentViewClass","getHostComponentViewClass","getHostComponentType","HostClass","getRendererType","getComponentFactory","hostView","initComponentFactory","_loadSummary","typeSummary","loadDirectiveMetadata","isSync","getNonNormalizedDirectiveMetadata","createDirectiveMetadata","templateMetadata","normalizedDirMeta","cacheEntry","nonNormalizedTemplateMetadata","changeDetectionStrategy","entryComponentMetadata","_getProvidersMetadata","_getEntryComponentMetadata","_getQueriesMetadata","_getTypeMetadata","getDirectiveMetadata","getDirectiveSummary","dirSummary","getNgModuleSummary","moduleType","moduleSummary","loadNgModuleDirectiveAndPipeMetadata","loading","promise","_loadPipeMetadata","compileMeta","exportedNonModuleIdentifiers","imports","importedType","importedModuleType","moduleWithProviders","_checkSelfImport","importedModuleSummary","_getTypeDescriptor","exportedType","exportedModuleSummary","_getIdentifierMetadata","_getTransitiveNgModuleMetadata","declarations","declaredType","declaredIdentifier","_addTypeToModule","exportedId","bootstrap","oldModule","modulesByToken","modSummary","mod","comp","addedTokens","prevModules","moduleRef","ann","getInjectableSummary","_getInjectableMetadata","throwOnUnknownDeps","_getDependenciesMetadata","_getFactoryMetadata","getPipeMetadata","pipeType","getPipeSummary","pipeSummary","getOrLoadPipeMetadata","pipeAnnotation","hasUnknownDeps","dependenciesMetadata","paramEntry","Host","Self","SkipSelf","attributeName","_getTokenMetadata","depsTokens","compileToken","targetEntryComponents","debugInfo","compileProviders","providerIdx","_validateProvider","providersInfo","soFar","seenProvider","seenProviderIdx","_getEntryComponentsFromProvider","getProviderMetadata","components","collectedIdentifiers","compileDeps","compileTypeMetadata","compileFactoryMetadata","isViewQuery","propertyName","_getQueryMetadata","_queryVarBindings","q","varName","otherType","TypeModifier","Const","modifiers","hasModifier","modifier","BuiltinTypeName","Dynamic","Bool","Int","Inferred","BuiltinType","visitBuiltintType","visitExpressionType","ArrayType","of","visitArrayType","MapType","valueType","visitMapType","BOOL_TYPE","BinaryOperator","Equals","NotEquals","Identical","NotIdentical","Minus","Plus","Divide","Multiply","Modulo","And","Or","Lower","LowerEquals","Bigger","BiggerEquals","ReadPropExpr","ReadKeyExpr","callMethod","InvokeMethodExpr","InvokeFunctionExpr","InstantiateExpr","conditional","trueCase","falseCase","ConditionalExpr","equals","rhs","BinaryOperatorExpr","notEquals","identical","plus","multiply","modulo","lower","lowerEquals","bigger","biggerEquals","isBlank","TYPED_NULL_EXPR","CastExpr","BuiltinVar","This","Super","CatchError","CatchStack","builtin","visitReadVarExpr","WriteVarExpr","visitWriteVarExpr","WriteKeyExpr","visitWriteKeyExpr","WritePropExpr","visitWritePropExpr","BuiltinMethod","ConcatArray","SubscribeObservable","Bind","visitInvokeMethodExpr","visitInvokeFunctionExpr","classExpr","visitInstantiateExpr","visitLiteralExpr","visitExternalExpr","ExternalReference","visitConditionalExpr","visitNotExpr","visitAssertNotNullExpr","visitCastExpr","visitFunctionExpr","DeclareFunctionStmt","lhs","visitBinaryOperatorExpr","visitReadPropExpr","visitReadKeyExpr","entries","visitLiteralArrayExpr","visitLiteralMapExpr","CommaExpr","visitCommaExpr","Private","Exported","visitDeclareVarStmt","visitDeclareFunctionStmt","visitExpressionStmt","visitReturnStmt","AbstractClassPart","ClassMethod","ClassGetter","ClassStmt","visitDeclareClassStmt","IfStmt","visitIfStmt","TryCatchStmt","bodyStmts","catchStmts","visitTryCatchStmt","ThrowStmt","visitThrowStmt","AstTransformer$1","transformExpr","transformStmt","visitAllExpressions","mapType","ctorMethod","visitCommentStmt","RecursiveAstVisitor$1","_clone","clone","QUOTED_KEYS","quotedSet","NgModuleCompileResult","ngModuleFactoryVar","LOG_VAR","compile","providerParser","providerDefs","ngModuleDef","ngModuleDefFactory","ngModuleFactoryStmt","registerFactoryStmt","VERSION$1","JS_B64_PREFIX","SourceMapGenerator","sourcesContent","lines","lastCol0","hasMappings","addSource","addLine","addMapping","col0","sourceLine0","sourceCol0","currentLine","toJSON","sourcesIndex","mappings","lastSourceIndex","lastSourceLine0","lastSourceCol0","segAsStr","sourceRoot","CATCH_ERROR_VAR$1","CATCH_STACK_VAR$1","_EmittedLine","indent","partsLength","srcSpans","_indent","_classes","_lines","println","lastPart","print","lineIsEmpty","_currentLine","lineLength","newLine","removeEmptyLastLine","incIndent","decIndent","pushClass","clazz","popClass","sourceLines","sourceFilePath","startsAtLine","firstOffsetMapped","mapFirstOffsetIfNeeded","lineIdx","spans","spanIdx","sourceLine","sourceCol","AbstractEmitterVisitor","_escapeDollarInStrings","hasElseCase","lineWasEmpty","getBuiltinMethodName","opStr","visitAllObjects","separator","incrementedIndent","srcFilePath","preambleLines","reexports","exportedModuleName","reexportsCode","reexport","as","importsWithPrefixes","importedModuleName","sm","typeExpression","defaultType","_visitIdentifier","_printColonType","_visitClassField","_visitClassConstructor","_visitClassGetter","_visitClassMethod","_visitParams","typeStr","suppliedParameters","HTML","URL","RESOURCE_URL","BOOLEAN","NUMBER","STRING","OBJECT","SCHEMA","_ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","_schema","encodedType","strType","strProperties","properties","typeNames","superName","superType","property","schema","NO_ERRORS_SCHEMA","CUSTOM_ELEMENTS_SCHEMA","elementProperties","strVal","valAndSuffixMatch","ShadowCss","strictStyling","shimCssText","hostSelector","sourceMappingUrl","_insertDirectives","_scopeCssText","_insertPolyfillDirectivesInCssText","_insertPolyfillRulesInCssText","_cssContentNextSelectorRe","_cssContentRuleRe","scopeSelector","unscopedRules","_extractUnscopedRulesFromCssText","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertShadowDOMSelectors","_scopeSelectors","r","_cssContentUnscopedRuleRe","_convertColonRule","_cssColonHostRe","_colonHostPartReplacer","_cssColonHostContextRe","_colonHostContextPartReplacer","regExp","partReplacer","_polyfillHostNoCombinator","_polyfillHost","_shadowDOMSelectorsRe","_scopeSelector","strict","_shadowDeepSelectors","deepParts","shallowPart","otherParts","applyScope","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","re","_makeScopeMatcher","lre","rre","_selectorReSuffix","_applySimpleSelectorScope","_polyfillHostRe","replaceBy_1","_polyfillHostNoCombinatorRe","hnc","colon","isRe","_scopeSelectorPart","scopedP","safeContent","SafeSelector","scopedSelector","sep","scopeAfter","scopedPart","restore","_colonHostContextRe","_polyfillHostContext","_colonHostRe","keep","replaceBy","_content","pseudo","_parenSuffix","COMPONENT_VARIABLE","HOST_ATTR","CONTENT_ATTR","StylesCompileDependency","CompiledStylesheet","outputCtx","stylesVar","isShimmed","_shadowCss","compileComponent","_compileStyles","compileStyles","needsStyleShim","isComponentStylesheet","styleExpressions","plainStyle","_shimIfNeeded","exprIndex","EventHandlerVars","allowDefault","_converterFactory","BuiltinFunctionCall","_localResolver","_implicitReceiver","_nodeMap","_resultMap","_currentTemporary","_visit","fnResult","convertedArgs","leftMostSafe","leftMostSafeNode","convertSafeAccess","_getLocal","getLocal","varExpr","guardedExpression","temporary","needsTemporary","allocateTemporary","access","releaseTemporary","visitSome","tempNumber","IMPLICIT_TEMPLATE_VAR","ViewCompileResult","viewClassVar","rendererTypeVar","embeddedViewCount","renderComponentVarName","template_1","customRenderData","renderComponentVar","viewBuilderFactory","embeddedViewIndex","ViewBuilder","viewName","LOG_VAR$1","COMP_VAR","EVENT_NAME_VAR","ALLOW_DEFAULT_VAR","purePipeNodeIndices","refNodeIndices","_createPipe","queryIds_1","queryIndex","nodeFlags","nodeDef","targetStatements","_createNodeExpressions","updateRendererStmts","updateDirectivesStmts","nodeDefExprs","updateRendererFn","_createUpdateFn","updateDirectivesFn","viewFlags","OnPush","viewFactory","updateStmts","updateFn","preStmts","astWithSource","inter","updateRendererExpressions","bindingIndex","_preprocessUpdateExpression","updateRenderer","_visitElementOrTemplate","queryMatchesExpr","childVisitor","childCount","_createElementHandleEventFn","usedEvents","dirHostBindings","inputDefs","outputDefs","compAst","compRendererType","compView","ÉµelementEventFullName","_visitComponentFactoryResolverProvider","dirIndex","localDirAst","_visitDirective","dirHostEvents","_visitProvider","queryMatchExprs","outputAst","elementNodeIndex","_visitProviderOrDirective","mapValue","updateDirectiveExpressions","dirContextExpr","hostEventAst","updateDirectives","_addProviderNode","componentDirMeta","tokenExpr_1","currViewExpr","currBuilder","refNodeIndex","varAst","varValue","valueExpr_1","valueExpr_2","nodeIndex_1","compViewExpr","compBuilder","pipeNodeIndex","pipeValueExpr_1","nodeValueExpr_1","diDep","createUpdateStatements","allowEmptyExprs","updateBindingCount","nameResolver","self","logWithNodeDef","handlers","handleEventStmts","handleEventBindingCount","trueStmts","eventTarget","fullEventName","handleEventFn","GeneratedFile","sourceOrStmts","indexBySymbol","processedSummaryBySymbol","processedSummaries","clone_1","processedSummary","processValue","summaries","importAs","__symbol","baseSymbol","isLibrary","ngModuleSymbols","fnName","serializeSummaryWithDeps","jitExportAsName","serializeSummaryRef","serializeSummary","typeSymbol","jitImportedSymbol","Transformer","serializedSymbol","_host","_metadataResolver","_templateParser","_styleCompiler","_viewCompiler","_ngModuleCompiler","_outputEmitter","_localeId","_translationFormat","_symbolResolver","compileAllAsync","rootFiles","sourceModules","_compileSrcFile","compileAllSync","generatedFiles","_createOutputContext","_createSummary","_compileModule","componentStylesheet","stylesheetMeta","_codegenStyles","_compileComponent","_compileComponentFactory","srcModule","_codegenSourceModule","ngFactoryCtx","symbolSummaries","typeData","forJitOutputCtx","hostType","hostMeta","hostViewFactoryVar","compFactoryVar","inputsExprs","outputsExprs","directiveIdentifiers","componentStyles","parsedTemplate","stylesExpr","viewResult","arity","getTypeArity","fileNameToModuleName","suppliedTypeParams","missingTypeParamsCount","allTypeParams","fill","memberName","stylesheetMetadata","compiledStylesheet","ANGULAR_CORE","IGNORE","knownMetadataClasses","knownMetadataFunctions","errorRecorder","annotationCache","propertyCache","parameterCache","methodCache","conversionMap","annotationForParentClassWithSummaryKind","annotationNames","initializeConversionMap","kc","_registerDecoratorOrConstructor","kf","_registerFunction","findSymbolDeclaration","getResourcePath","importSymbol","rootSymbol","findDeclaration","recordImportAs","containingFile","getSymbolByModule","classMetadata","getTypeMetadata","parentType","findParentType","parentAnnotations","ownAnnotations_1","simplify","requiredAnnotationTypes","typeHasRequiredAnnotation","requiredType","reportError","parentPropMetadata_1","parentProp","members_1","propData","parameters_1","ctorData","rawParameterTypes","parameterDecorators_1","rawParamType","nestedResult","paramType","trySimplify","_methodNames","methodNames","parentMethodNames_1","members_2","isMethod","injectionToken","opaqueToken","ContentChild","ContentChildren","ViewChild","ViewChildren","trigger","state","transition","animate","keyframes","sequence","group","originalRecorder","simplifyInContext","depth","resolveReferenceValue","simplifyCall","functionSymbol","targetFunction","calling","value_1","defaults","functionScope","BindingScope","result_1","oldScope","scope","done","result_2","spreadArray","spreadArray_1","spreadItem","value_2","declarationValue","operand","indexTarget","member","selectContext","selectTarget","localValue","missing","argExpressions","recordedSimplifyInContext","PopulatedScope","ResolvedStaticSymbol","SUPPORTED_SCHEMA_VERSION","staticSymbolCache","metadataCache","resolvedSymbols","resolvedFilePaths","symbolResourcePaths","symbolFromFile","knownFileNameToModuleNames","_resolveSymbolMembers","_resolveSymbolFromSummary","_createSymbolsOf","baseImportAs","summarizedFileName","summarizedName","importedFilePath","containingFilePath","sourceSymbol","targetSymbol","invalidateFile","symbols_1","baseResolvedSymbol","baseMetadata","statics","getModuleMetadata","topLevelSymbolNames_1","origins_1","metadataKey","origin","originFilePath","resolveModule","createResolvedSymbol","_loop_1","moduleExport","export","exportSymbol","symName","resolvedModule","createExport","this_1","nestedExports","topLevelPath","topLevelSymbolNames","transformedMeta_1","ReferenceTransformer","functionParams","symbolic","oldLen","module_1","transformedMeta","moduleMetadata","moduleMetadatas","getMetadataFor","maxVersion_1","md","errorMessage","moduleNameToFileName","summaryCache","loadedFilePaths","getOutputFileName","_loadSummaryFile","summaryFilePath","loadSummary","instance","ReturnValue","debugAst","currCtx","CATCH_ERROR_VAR$2","CATCH_STACK_VAR$2","subscribe","fnExpr","AbstractJsEmitterVisitor","_evalArgNames","_evalArgValues","_evalExportedVars","resultVar","JitCompiler","_injector","_compilerConfig","_compiledTemplateCache","_compiledHostTemplateCache","_compiledDirectiveWrapperCache","_compiledNgModuleCache","_sharedStylesheetCount","compileModuleSync","_compileModuleAndComponents","compileModuleAsync","compileModuleAndAllComponentsSync","_compileModuleAndAllComponents","compileModuleAndAllComponentsAsync","getNgContentSelectors","loadAotSummaries","hasAotSummary","_filterJitIdentifiers","ids","_loadModules","_compileComponents","componentFactories","ModuleWithComponentFactories","mainModule","mainNgModule","nestedNgModule","ngModuleFactory","moduleMeta_1","Compiler","ModuleBoundCompiler","allComponentFactories","moduleByJitDirective","templates","transJitModules","localMod","localModuleMeta","dirRef","_createCompiledTemplate","_createCompiledHostTemplate","entryComponentType","_compileTemplate","compiledTemplate","hostClass","ÉµgetComponentViewDefinitionFactory","CompiledTemplate","isCompiled","externalStylesheetsByModuleUrl","outputContext","_resolveStylesCompileResult","evalResult","viewClass","compiled","nestedCompileResult","nestedStylesArr","_resolveAndEvalStylesCompileResult","_viewClass","_delegate","_ngModule","injector","MessageBundle","updateFromTemplate","htmlParserResult","i18nParserResult","getMessages","filterSources","mapperVisitor","MapPlaceholderNames","msgList","src","transformedMessage","Extractor","messageBundle","compMetas","extractor","JitReflector","reflectionCapabilities","ÉµReflectionCapabilities","scheme","_NO_RESOURCE_LOADER","baseHtmlParser","COMPILER_PROVIDERS","parser","TRANSLATIONS","JitCompilerFactory","defaultOptions","compilerOptions","useDebug","_defaultOptions","createCompiler","opts","ReflectiveInjector","resolveAndCreate","COMPILER_OPTIONS","platformCoreDynamic","createPlatformFactory","platformCore","CompilerFactory"],"mappings":"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AAKquB,UAAUkU,MAAOxY,MAA0B,WAAgBA,IAAK,KACnHA,IAAIouE,MAAM,KAAM,QAU5BpqE,kBAAkB9hB,UAAU6uF,gBAAkB,SAAU96F,KAAM+pB,IAAK6wE,aAC3D56F,OAAS2rB,gBACT5B,IAAIouE,MAAM,KAAM,KAChBr/F,KAAKu1B,UAAUruB,KAAM+pB,IAAK6wE,eAG3B7sE,mBACTyrE,wBAWE7qE,kBAaJJ,iBAAgBx1B,cAAc4kB,gBAAgB29E,MAC1C,gBACA,cACA,gBAEJ/sE,gBAAgBx1B,cAAc4kB,gBAAgBsB,OAAQ,YAEtDsP,gBAAgBx1B,cAAc4kB,gBAAgB49E,KAC1C,eAAgB,YAAa,YAAa,YAAa,SACvD,SAAU,kBAAmB,kBAAmB,WAAY,cAC5D,UAAW,aAAc,YAAa,WAAY,SAClD,aAAc,gBAAiB,YAAa,eAAgB,cAEhEhtE,gBAAgBx1B,cAAc4kB,gBAAgB69E,cAC1C,cACA,kBACA,YACA,YACA,YACA,eACA,gBACA,aACA,YACA,YACA,kBACA,cACA;;;;;;;AASJ,GAAIC,SAAU,UACVC,OAAS,SACTC,OAAS,SACTC,OAAS,SAuDTC,QACA,4NACA,69BACA,4oCACA,mMACA,ilBACA,uBACA,2CACA,uBACA,wCACA,uBACA,kCACA,yCACA,mLACA,iJACA,eACA,yBACA,iCACA,iQACA,yHACA,sCACA,+BACA,4BACA,0BACA,8BACA,yCACA,6BACA,0BACA,uDACA,wCACA,qCACA,uGACA,iGACA,sOACA,mDACA,sBACA,wCACA,6BACA,2JACA,oJACA,wbACA,mEACA,+BACA,8BACA,6BACA,yHACA,yBACA,4HACA,8BACA,mDACA,2DACA,sCACA,kDACA,uIACA,yCACA,6EACA,wDACA,wBACA,gDACA,yBACA,2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,qBACA,2BACA,mBACA,sBACA,8BACA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","file":"/home/travis/build/angular/angular/dist/packages-dist/compiler/bundles/compiler.umd.min.js","sourcesContent":["/**\n * @license Angular v4.2.0-rc.0-1651a8f\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', '@angular/core'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.compiler = global.ng.compiler || {}),global.ng.core));\n}(this, (function (exports,_angular_core) { 'use strict';\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @license Angular v4.2.0-rc.0-1651a8f\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new _angular_core.Version('4.2.0-rc.0-1651a8f');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A segment of text within the template.\n */\nvar TextAst = (function () {\n    /**\n     * @param {?} value\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    function TextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TextAst.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n    return TextAst;\n}());\n/**\n * A bound expression within the text of a template.\n */\nvar BoundTextAst = (function () {\n    /**\n     * @param {?} value\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    function BoundTextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundTextAst.prototype.visit = function (visitor, context) {\n        return visitor.visitBoundText(this, context);\n    };\n    return BoundTextAst;\n}());\n/**\n * A plain attribute on an element.\n */\nvar AttrAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function AttrAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AttrAst.prototype.visit = function (visitor, context) { return visitor.visitAttr(this, context); };\n    return AttrAst;\n}());\n/**\n * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n * `[\\@trigger]=\"stateExp\"`)\n */\nvar BoundElementPropertyAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} type\n     * @param {?} securityContext\n     * @param {?} value\n     * @param {?} unit\n     * @param {?} sourceSpan\n     */\n    function BoundElementPropertyAst(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundElementPropertyAst.prototype.visit = function (visitor, context) {\n        return visitor.visitElementProperty(this, context);\n    };\n    Object.defineProperty(BoundElementPropertyAst.prototype, \"isAnimation\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.type === PropertyBindingType.Animation; },\n        enumerable: true,\n        configurable: true\n    });\n    return BoundElementPropertyAst;\n}());\n/**\n * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n * `(\\@trigger.phase)=\"callback($event)\"`).\n */\nvar BoundEventAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @param {?} handler\n     * @param {?} sourceSpan\n     */\n    function BoundEventAst(name, target, phase, handler, sourceSpan) {\n        this.name = name;\n        this.target = target;\n        this.phase = phase;\n        this.handler = handler;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    BoundEventAst.calcFullName = function (name, target, phase) {\n        if (target) {\n            return target + \":\" + name;\n        }\n        else if (phase) {\n            return \"@\" + name + \".\" + phase;\n        }\n        else {\n            return name;\n        }\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundEventAst.prototype.visit = function (visitor, context) {\n        return visitor.visitEvent(this, context);\n    };\n    Object.defineProperty(BoundEventAst.prototype, \"fullName\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return BoundEventAst.calcFullName(this.name, this.target, this.phase); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BoundEventAst.prototype, \"isAnimation\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return !!this.phase; },\n        enumerable: true,\n        configurable: true\n    });\n    return BoundEventAst;\n}());\n/**\n * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n */\nvar ReferenceAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function ReferenceAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReferenceAst.prototype.visit = function (visitor, context) {\n        return visitor.visitReference(this, context);\n    };\n    return ReferenceAst;\n}());\n/**\n * A variable declaration on a <ng-template> (e.g. `var-someName=\"someLocalName\"`).\n */\nvar VariableAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function VariableAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    VariableAst.prototype.visit = function (visitor, context) {\n        return visitor.visitVariable(this, context);\n    };\n    return VariableAst;\n}());\n/**\n * An element declaration in a template.\n */\nvar ElementAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} attrs\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} references\n     * @param {?} directives\n     * @param {?} providers\n     * @param {?} hasViewContainer\n     * @param {?} queryMatches\n     * @param {?} children\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     * @param {?} endSourceSpan\n     */\n    function ElementAst(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan, endSourceSpan) {\n        this.name = name;\n        this.attrs = attrs;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.references = references;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ElementAst.prototype.visit = function (visitor, context) {\n        return visitor.visitElement(this, context);\n    };\n    return ElementAst;\n}());\n/**\n * A `<ng-template>` element included in an Angular template.\n */\nvar EmbeddedTemplateAst = (function () {\n    /**\n     * @param {?} attrs\n     * @param {?} outputs\n     * @param {?} references\n     * @param {?} variables\n     * @param {?} directives\n     * @param {?} providers\n     * @param {?} hasViewContainer\n     * @param {?} queryMatches\n     * @param {?} children\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    function EmbeddedTemplateAst(attrs, outputs, references, variables, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan) {\n        this.attrs = attrs;\n        this.outputs = outputs;\n        this.references = references;\n        this.variables = variables;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    EmbeddedTemplateAst.prototype.visit = function (visitor, context) {\n        return visitor.visitEmbeddedTemplate(this, context);\n    };\n    return EmbeddedTemplateAst;\n}());\n/**\n * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n */\nvar BoundDirectivePropertyAst = (function () {\n    /**\n     * @param {?} directiveName\n     * @param {?} templateName\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\n        this.directiveName = directiveName;\n        this.templateName = templateName;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundDirectivePropertyAst.prototype.visit = function (visitor, context) {\n        return visitor.visitDirectiveProperty(this, context);\n    };\n    return BoundDirectivePropertyAst;\n}());\n/**\n * A directive declared on an element.\n */\nvar DirectiveAst = (function () {\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} hostProperties\n     * @param {?} hostEvents\n     * @param {?} contentQueryStartId\n     * @param {?} sourceSpan\n     */\n    function DirectiveAst(directive, inputs, hostProperties, hostEvents, contentQueryStartId, sourceSpan) {\n        this.directive = directive;\n        this.inputs = inputs;\n        this.hostProperties = hostProperties;\n        this.hostEvents = hostEvents;\n        this.contentQueryStartId = contentQueryStartId;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DirectiveAst.prototype.visit = function (visitor, context) {\n        return visitor.visitDirective(this, context);\n    };\n    return DirectiveAst;\n}());\n/**\n * A provider declared on an element\n */\nvar ProviderAst = (function () {\n    /**\n     * @param {?} token\n     * @param {?} multiProvider\n     * @param {?} eager\n     * @param {?} providers\n     * @param {?} providerType\n     * @param {?} lifecycleHooks\n     * @param {?} sourceSpan\n     */\n    function ProviderAst(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan) {\n        this.token = token;\n        this.multiProvider = multiProvider;\n        this.eager = eager;\n        this.providers = providers;\n        this.providerType = providerType;\n        this.lifecycleHooks = lifecycleHooks;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ProviderAst.prototype.visit = function (visitor, context) {\n        // No visit method in the visitor for now...\n        return null;\n    };\n    return ProviderAst;\n}());\nvar ProviderAstType = {};\nProviderAstType.PublicService = 0;\nProviderAstType.PrivateService = 1;\nProviderAstType.Component = 2;\nProviderAstType.Directive = 3;\nProviderAstType.Builtin = 4;\nProviderAstType[ProviderAstType.PublicService] = \"PublicService\";\nProviderAstType[ProviderAstType.PrivateService] = \"PrivateService\";\nProviderAstType[ProviderAstType.Component] = \"Component\";\nProviderAstType[ProviderAstType.Directive] = \"Directive\";\nProviderAstType[ProviderAstType.Builtin] = \"Builtin\";\n/**\n * Position where content is to be projected (instance of `<ng-content>` in a template).\n */\nvar NgContentAst = (function () {\n    /**\n     * @param {?} index\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    function NgContentAst(index, ngContentIndex, sourceSpan) {\n        this.index = index;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NgContentAst.prototype.visit = function (visitor, context) {\n        return visitor.visitNgContent(this, context);\n    };\n    return NgContentAst;\n}());\nvar PropertyBindingType = {};\nPropertyBindingType.Property = 0;\nPropertyBindingType.Attribute = 1;\nPropertyBindingType.Class = 2;\nPropertyBindingType.Style = 3;\nPropertyBindingType.Animation = 4;\nPropertyBindingType[PropertyBindingType.Property] = \"Property\";\nPropertyBindingType[PropertyBindingType.Attribute] = \"Attribute\";\nPropertyBindingType[PropertyBindingType.Class] = \"Class\";\nPropertyBindingType[PropertyBindingType.Style] = \"Style\";\nPropertyBindingType[PropertyBindingType.Animation] = \"Animation\";\n/**\n * A visitor that accepts each node but doesn't do anything. It is intended to be used\n * as the base class for a visitor that is only interested in a subset of the node types.\n */\nvar NullTemplateVisitor = (function () {\n    function NullTemplateVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitNgContent = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEmbeddedTemplate = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElement = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitReference = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitVariable = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEvent = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElementProperty = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitAttr = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitBoundText = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitText = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirective = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirectiveProperty = function (ast, context) { };\n    return NullTemplateVisitor;\n}());\n/**\n * Base class that can be used to build a visitor that visits each node\n * in an template ast recursively.\n */\nvar RecursiveTemplateAstVisitor = (function (_super) {\n    __extends(RecursiveTemplateAstVisitor, _super);\n    function RecursiveTemplateAstVisitor() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitEmbeddedTemplate = function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.references);\n            visit(ast.variables);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitElement = function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.inputs);\n            visit(ast.outputs);\n            visit(ast.references);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitDirective = function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.inputs);\n            visit(ast.hostProperties);\n            visit(ast.hostEvents);\n        });\n    };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitChildren = function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children && children.length)\n                results.push(templateVisitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveTemplateAstVisitor;\n}(NullTemplateVisitor));\n/**\n * Visit every node in a list of {\\@link TemplateAst}s with the given {\\@link TemplateAstVisitor}.\n * @param {?} visitor\n * @param {?} asts\n * @param {?=} context\n * @return {?}\n */\nfunction templateVisitAll(visitor, asts, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    asts.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\n/**\n * A token representing the a reference to a static type.\n *\n * This token is unique for a filePath and name and can be used as a hash table key.\n */\nvar StaticSymbol = (function () {\n    /**\n     * @param {?} filePath\n     * @param {?} name\n     * @param {?} members\n     */\n    function StaticSymbol(filePath, name, members) {\n        this.filePath = filePath;\n        this.name = name;\n        this.members = members;\n    }\n    /**\n     * @return {?}\n     */\n    StaticSymbol.prototype.assertNoMembers = function () {\n        if (this.members.length) {\n            throw new Error(\"Illegal state: symbol without members expected, but got \" + JSON.stringify(this) + \".\");\n        }\n    };\n    return StaticSymbol;\n}());\n/**\n * A cache of static symbol used by the StaticReflector to return the same symbol for the\n * same symbol values.\n */\nvar StaticSymbolCache = (function () {\n    function StaticSymbolCache() {\n        this.cache = new Map();\n    }\n    /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticSymbolCache.prototype.get = function (declarationFile, name, members) {\n        members = members || [];\n        var /** @type {?} */ memberSuffix = members.length ? \".\" + members.join('.') : '';\n        var /** @type {?} */ key = \"\\\"\" + declarationFile + \"\\\".\" + name + memberSuffix;\n        var /** @type {?} */ result = this.cache.get(key);\n        if (!result) {\n            result = new StaticSymbol(declarationFile, name, members);\n            this.cache.set(key, result);\n        }\n        return result;\n    };\n    return StaticSymbolCache;\n}());\nvar TagContentType = {};\nTagContentType.RAW_TEXT = 0;\nTagContentType.ESCAPABLE_RAW_TEXT = 1;\nTagContentType.PARSABLE_DATA = 2;\nTagContentType[TagContentType.RAW_TEXT] = \"RAW_TEXT\";\nTagContentType[TagContentType.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTagContentType[TagContentType.PARSABLE_DATA] = \"PARSABLE_DATA\";\n/**\n * @param {?} elementName\n * @return {?}\n */\nfunction splitNsName(elementName) {\n    if (elementName[0] != ':') {\n        return [null, elementName];\n    }\n    var /** @type {?} */ colonIndex = elementName.indexOf(':', 1);\n    if (colonIndex == -1) {\n        throw new Error(\"Unsupported format \\\"\" + elementName + \"\\\" expecting \\\":namespace:name\\\"\");\n    }\n    return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContainer(tagName) {\n    return splitNsName(tagName)[1] === 'ng-container';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContent(tagName) {\n    return splitNsName(tagName)[1] === 'ng-content';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgTemplate(tagName) {\n    return splitNsName(tagName)[1] === 'ng-template';\n}\n/**\n * @param {?} fullName\n * @return {?}\n */\nfunction getNsPrefix(fullName) {\n    return fullName === null ? null : splitNsName(fullName)[0];\n}\n/**\n * @param {?} prefix\n * @param {?} localName\n * @return {?}\n */\nfunction mergeNsAndName(prefix, localName) {\n    return prefix ? \":\" + prefix + \":\" + localName : localName;\n}\n// see http://www.w3.org/TR/html51/syntax.html#named-character-references\n// see https://html.spec.whatwg.org/multipage/entities.json\n// This list is not exhaustive to keep the compiler footprint low.\n// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not\n// exist.\nvar NAMED_ENTITIES = {\n    'Aacute': '\\u00C1',\n    'aacute': '\\u00E1',\n    'Acirc': '\\u00C2',\n    'acirc': '\\u00E2',\n    'acute': '\\u00B4',\n    'AElig': '\\u00C6',\n    'aelig': '\\u00E6',\n    'Agrave': '\\u00C0',\n    'agrave': '\\u00E0',\n    'alefsym': '\\u2135',\n    'Alpha': '\\u0391',\n    'alpha': '\\u03B1',\n    'amp': '&',\n    'and': '\\u2227',\n    'ang': '\\u2220',\n    'apos': '\\u0027',\n    'Aring': '\\u00C5',\n    'aring': '\\u00E5',\n    'asymp': '\\u2248',\n    'Atilde': '\\u00C3',\n    'atilde': '\\u00E3',\n    'Auml': '\\u00C4',\n    'auml': '\\u00E4',\n    'bdquo': '\\u201E',\n    'Beta': '\\u0392',\n    'beta': '\\u03B2',\n    'brvbar': '\\u00A6',\n    'bull': '\\u2022',\n    'cap': '\\u2229',\n    'Ccedil': '\\u00C7',\n    'ccedil': '\\u00E7',\n    'cedil': '\\u00B8',\n    'cent': '\\u00A2',\n    'Chi': '\\u03A7',\n    'chi': '\\u03C7',\n    'circ': '\\u02C6',\n    'clubs': '\\u2663',\n    'cong': '\\u2245',\n    'copy': '\\u00A9',\n    'crarr': '\\u21B5',\n    'cup': '\\u222A',\n    'curren': '\\u00A4',\n    'dagger': '\\u2020',\n    'Dagger': '\\u2021',\n    'darr': '\\u2193',\n    'dArr': '\\u21D3',\n    'deg': '\\u00B0',\n    'Delta': '\\u0394',\n    'delta': '\\u03B4',\n    'diams': '\\u2666',\n    'divide': '\\u00F7',\n    'Eacute': '\\u00C9',\n    'eacute': '\\u00E9',\n    'Ecirc': '\\u00CA',\n    'ecirc': '\\u00EA',\n    'Egrave': '\\u00C8',\n    'egrave': '\\u00E8',\n    'empty': '\\u2205',\n    'emsp': '\\u2003',\n    'ensp': '\\u2002',\n    'Epsilon': '\\u0395',\n    'epsilon': '\\u03B5',\n    'equiv': '\\u2261',\n    'Eta': '\\u0397',\n    'eta': '\\u03B7',\n    'ETH': '\\u00D0',\n    'eth': '\\u00F0',\n    'Euml': '\\u00CB',\n    'euml': '\\u00EB',\n    'euro': '\\u20AC',\n    'exist': '\\u2203',\n    'fnof': '\\u0192',\n    'forall': '\\u2200',\n    'frac12': '\\u00BD',\n    'frac14': '\\u00BC',\n    'frac34': '\\u00BE',\n    'frasl': '\\u2044',\n    'Gamma': '\\u0393',\n    'gamma': '\\u03B3',\n    'ge': '\\u2265',\n    'gt': '>',\n    'harr': '\\u2194',\n    'hArr': '\\u21D4',\n    'hearts': '\\u2665',\n    'hellip': '\\u2026',\n    'Iacute': '\\u00CD',\n    'iacute': '\\u00ED',\n    'Icirc': '\\u00CE',\n    'icirc': '\\u00EE',\n    'iexcl': '\\u00A1',\n    'Igrave': '\\u00CC',\n    'igrave': '\\u00EC',\n    'image': '\\u2111',\n    'infin': '\\u221E',\n    'int': '\\u222B',\n    'Iota': '\\u0399',\n    'iota': '\\u03B9',\n    'iquest': '\\u00BF',\n    'isin': '\\u2208',\n    'Iuml': '\\u00CF',\n    'iuml': '\\u00EF',\n    'Kappa': '\\u039A',\n    'kappa': '\\u03BA',\n    'Lambda': '\\u039B',\n    'lambda': '\\u03BB',\n    'lang': '\\u27E8',\n    'laquo': '\\u00AB',\n    'larr': '\\u2190',\n    'lArr': '\\u21D0',\n    'lceil': '\\u2308',\n    'ldquo': '\\u201C',\n    'le': '\\u2264',\n    'lfloor': '\\u230A',\n    'lowast': '\\u2217',\n    'loz': '\\u25CA',\n    'lrm': '\\u200E',\n    'lsaquo': '\\u2039',\n    'lsquo': '\\u2018',\n    'lt': '<',\n    'macr': '\\u00AF',\n    'mdash': '\\u2014',\n    'micro': '\\u00B5',\n    'middot': '\\u00B7',\n    'minus': '\\u2212',\n    'Mu': '\\u039C',\n    'mu': '\\u03BC',\n    'nabla': '\\u2207',\n    'nbsp': '\\u00A0',\n    'ndash': '\\u2013',\n    'ne': '\\u2260',\n    'ni': '\\u220B',\n    'not': '\\u00AC',\n    'notin': '\\u2209',\n    'nsub': '\\u2284',\n    'Ntilde': '\\u00D1',\n    'ntilde': '\\u00F1',\n    'Nu': '\\u039D',\n    'nu': '\\u03BD',\n    'Oacute': '\\u00D3',\n    'oacute': '\\u00F3',\n    'Ocirc': '\\u00D4',\n    'ocirc': '\\u00F4',\n    'OElig': '\\u0152',\n    'oelig': '\\u0153',\n    'Ograve': '\\u00D2',\n    'ograve': '\\u00F2',\n    'oline': '\\u203E',\n    'Omega': '\\u03A9',\n    'omega': '\\u03C9',\n    'Omicron': '\\u039F',\n    'omicron': '\\u03BF',\n    'oplus': '\\u2295',\n    'or': '\\u2228',\n    'ordf': '\\u00AA',\n    'ordm': '\\u00BA',\n    'Oslash': '\\u00D8',\n    'oslash': '\\u00F8',\n    'Otilde': '\\u00D5',\n    'otilde': '\\u00F5',\n    'otimes': '\\u2297',\n    'Ouml': '\\u00D6',\n    'ouml': '\\u00F6',\n    'para': '\\u00B6',\n    'permil': '\\u2030',\n    'perp': '\\u22A5',\n    'Phi': '\\u03A6',\n    'phi': '\\u03C6',\n    'Pi': '\\u03A0',\n    'pi': '\\u03C0',\n    'piv': '\\u03D6',\n    'plusmn': '\\u00B1',\n    'pound': '\\u00A3',\n    'prime': '\\u2032',\n    'Prime': '\\u2033',\n    'prod': '\\u220F',\n    'prop': '\\u221D',\n    'Psi': '\\u03A8',\n    'psi': '\\u03C8',\n    'quot': '\\u0022',\n    'radic': '\\u221A',\n    'rang': '\\u27E9',\n    'raquo': '\\u00BB',\n    'rarr': '\\u2192',\n    'rArr': '\\u21D2',\n    'rceil': '\\u2309',\n    'rdquo': '\\u201D',\n    'real': '\\u211C',\n    'reg': '\\u00AE',\n    'rfloor': '\\u230B',\n    'Rho': '\\u03A1',\n    'rho': '\\u03C1',\n    'rlm': '\\u200F',\n    'rsaquo': '\\u203A',\n    'rsquo': '\\u2019',\n    'sbquo': '\\u201A',\n    'Scaron': '\\u0160',\n    'scaron': '\\u0161',\n    'sdot': '\\u22C5',\n    'sect': '\\u00A7',\n    'shy': '\\u00AD',\n    'Sigma': '\\u03A3',\n    'sigma': '\\u03C3',\n    'sigmaf': '\\u03C2',\n    'sim': '\\u223C',\n    'spades': '\\u2660',\n    'sub': '\\u2282',\n    'sube': '\\u2286',\n    'sum': '\\u2211',\n    'sup': '\\u2283',\n    'sup1': '\\u00B9',\n    'sup2': '\\u00B2',\n    'sup3': '\\u00B3',\n    'supe': '\\u2287',\n    'szlig': '\\u00DF',\n    'Tau': '\\u03A4',\n    'tau': '\\u03C4',\n    'there4': '\\u2234',\n    'Theta': '\\u0398',\n    'theta': '\\u03B8',\n    'thetasym': '\\u03D1',\n    'thinsp': '\\u2009',\n    'THORN': '\\u00DE',\n    'thorn': '\\u00FE',\n    'tilde': '\\u02DC',\n    'times': '\\u00D7',\n    'trade': '\\u2122',\n    'Uacute': '\\u00DA',\n    'uacute': '\\u00FA',\n    'uarr': '\\u2191',\n    'uArr': '\\u21D1',\n    'Ucirc': '\\u00DB',\n    'ucirc': '\\u00FB',\n    'Ugrave': '\\u00D9',\n    'ugrave': '\\u00F9',\n    'uml': '\\u00A8',\n    'upsih': '\\u03D2',\n    'Upsilon': '\\u03A5',\n    'upsilon': '\\u03C5',\n    'Uuml': '\\u00DC',\n    'uuml': '\\u00FC',\n    'weierp': '\\u2118',\n    'Xi': '\\u039E',\n    'xi': '\\u03BE',\n    'Yacute': '\\u00DD',\n    'yacute': '\\u00FD',\n    'yen': '\\u00A5',\n    'yuml': '\\u00FF',\n    'Yuml': '\\u0178',\n    'Zeta': '\\u0396',\n    'zeta': '\\u03B6',\n    'zwj': '\\u200D',\n    'zwnj': '\\u200C',\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlTagDefinition = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function HtmlTagDefinition(_a) {\n        var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, _c = _b.contentType, contentType = _c === void 0 ? TagContentType.PARSABLE_DATA : _c, _d = _b.closedByParent, closedByParent = _d === void 0 ? false : _d, _e = _b.isVoid, isVoid = _e === void 0 ? false : _e, _f = _b.ignoreFirstLf, ignoreFirstLf = _f === void 0 ? false : _f;\n        var _this = this;\n        this.closedByChildren = {};\n        this.closedByParent = false;\n        this.canSelfClose = false;\n        if (closedByChildren && closedByChildren.length > 0) {\n            closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\n        }\n        this.isVoid = isVoid;\n        this.closedByParent = closedByParent || isVoid;\n        if (requiredParents && requiredParents.length > 0) {\n            this.requiredParents = {};\n            // The first parent is the list is automatically when none of the listed parents are present\n            this.parentToAdd = requiredParents[0];\n            requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\n        }\n        this.implicitNamespacePrefix = implicitNamespacePrefix || null;\n        this.contentType = contentType;\n        this.ignoreFirstLf = ignoreFirstLf;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.requireExtraParent = function (currentParent) {\n        if (!this.requiredParents) {\n            return false;\n        }\n        if (!currentParent) {\n            return true;\n        }\n        var /** @type {?} */ lcParent = currentParent.toLowerCase();\n        var /** @type {?} */ isParentTemplate = lcParent === 'template' || currentParent === 'ng-template';\n        return !isParentTemplate && this.requiredParents[lcParent] != true;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.isClosedByChild = function (name) {\n        return this.isVoid || name.toLowerCase() in this.closedByChildren;\n    };\n    return HtmlTagDefinition;\n}());\n// see http://www.w3.org/TR/html51/syntax.html#optional-tags\n// This implementation does not fully conform to the HTML5 spec.\nvar TAG_DEFINITIONS = {\n    'base': new HtmlTagDefinition({ isVoid: true }),\n    'meta': new HtmlTagDefinition({ isVoid: true }),\n    'area': new HtmlTagDefinition({ isVoid: true }),\n    'embed': new HtmlTagDefinition({ isVoid: true }),\n    'link': new HtmlTagDefinition({ isVoid: true }),\n    'img': new HtmlTagDefinition({ isVoid: true }),\n    'input': new HtmlTagDefinition({ isVoid: true }),\n    'param': new HtmlTagDefinition({ isVoid: true }),\n    'hr': new HtmlTagDefinition({ isVoid: true }),\n    'br': new HtmlTagDefinition({ isVoid: true }),\n    'source': new HtmlTagDefinition({ isVoid: true }),\n    'track': new HtmlTagDefinition({ isVoid: true }),\n    'wbr': new HtmlTagDefinition({ isVoid: true }),\n    'p': new HtmlTagDefinition({\n        closedByChildren: [\n            'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset', 'footer', 'form',\n            'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr',\n            'main', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'\n        ],\n        closedByParent: true\n    }),\n    'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n    'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n    'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n    'tr': new HtmlTagDefinition({\n        closedByChildren: ['tr'],\n        requiredParents: ['tbody', 'tfoot', 'thead'],\n        closedByParent: true\n    }),\n    'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n    'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n    'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n    'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n    'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n    'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n    'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n    'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n    'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n    'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'style': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'script': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'title': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT }),\n    'textarea': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n};\nvar _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getHtmlTagDefinition(tagName) {\n    return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' +\n    '([-\\\\w]+)|' +\n    '(?:\\\\.([-\\\\w]+))|' +\n    // \"-\" should appear first in the regexp below as FF31 parses \"[.-\\w]\" as a range\n    '(?:\\\\[([-.\\\\w*]+)(?:=([\\\"\\']?)([^\\\\]\\\"\\']*)\\\\5)?\\\\])|' +\n    // \"[name=\"value\"]\",\n    // \"[name='value']\"\n    '(\\\\))|' +\n    '(\\\\s*,\\\\s*)', // \",\"\n'g');\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nvar CssSelector = (function () {\n    function CssSelector() {\n        this.element = null;\n        this.classNames = [];\n        this.attrs = [];\n        this.notSelectors = [];\n    }\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CssSelector.parse = function (selector) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ _addResult = function (res, cssSel) {\n            if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n                cssSel.attrs.length == 0) {\n                cssSel.element = '*';\n            }\n            res.push(cssSel);\n        };\n        var /** @type {?} */ cssSelector = new CssSelector();\n        var /** @type {?} */ match;\n        var /** @type {?} */ current = cssSelector;\n        var /** @type {?} */ inNot = false;\n        _SELECTOR_REGEXP.lastIndex = 0;\n        while (match = _SELECTOR_REGEXP.exec(selector)) {\n            if (match[1]) {\n                if (inNot) {\n                    throw new Error('Nesting :not is not allowed in a selector');\n                }\n                inNot = true;\n                current = new CssSelector();\n                cssSelector.notSelectors.push(current);\n            }\n            if (match[2]) {\n                current.setElement(match[2]);\n            }\n            if (match[3]) {\n                current.addClassName(match[3]);\n            }\n            if (match[4]) {\n                current.addAttribute(match[4], match[6]);\n            }\n            if (match[7]) {\n                inNot = false;\n                current = cssSelector;\n            }\n            if (match[8]) {\n                if (inNot) {\n                    throw new Error('Multiple selectors in :not are not supported');\n                }\n                _addResult(results, cssSelector);\n                cssSelector = current = new CssSelector();\n            }\n        }\n        _addResult(results, cssSelector);\n        return results;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.isElementSelector = function () {\n        return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n            this.notSelectors.length === 0;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.hasElementSelector = function () { return !!this.element; };\n    /**\n     * @param {?=} element\n     * @return {?}\n     */\n    CssSelector.prototype.setElement = function (element) {\n        if (element === void 0) { element = null; }\n        this.element = element;\n    };\n    /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    CssSelector.prototype.getMatchingElementTemplate = function () {\n        var /** @type {?} */ tagName = this.element || 'div';\n        var /** @type {?} */ classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\n        var /** @type {?} */ attrs = '';\n        for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n            var /** @type {?} */ attrName = this.attrs[i];\n            var /** @type {?} */ attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\n            attrs += \" \" + attrName + attrValue;\n        }\n        return getHtmlTagDefinition(tagName).isVoid ? \"<\" + tagName + classAttr + attrs + \"/>\" :\n            \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\n    };\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    CssSelector.prototype.addAttribute = function (name, value) {\n        if (value === void 0) { value = ''; }\n        this.attrs.push(name, value && value.toLowerCase() || '');\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    CssSelector.prototype.addClassName = function (name) { this.classNames.push(name.toLowerCase()); };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.toString = function () {\n        var /** @type {?} */ res = this.element || '';\n        if (this.classNames) {\n            this.classNames.forEach(function (klass) { return res += \".\" + klass; });\n        }\n        if (this.attrs) {\n            for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n                var /** @type {?} */ name = this.attrs[i];\n                var /** @type {?} */ value = this.attrs[i + 1];\n                res += \"[\" + name + (value ? '=' + value : '') + \"]\";\n            }\n        }\n        this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\n        return res;\n    };\n    return CssSelector;\n}());\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nvar SelectorMatcher = (function () {\n    function SelectorMatcher() {\n        this._elementMap = new Map();\n        this._elementPartialMap = new Map();\n        this._classMap = new Map();\n        this._classPartialMap = new Map();\n        this._attrValueMap = new Map();\n        this._attrValuePartialMap = new Map();\n        this._listContexts = [];\n    }\n    /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    SelectorMatcher.createNotMatcher = function (notSelectors) {\n        var /** @type {?} */ notMatcher = new SelectorMatcher();\n        notMatcher.addSelectables(notSelectors, null);\n        return notMatcher;\n    };\n    /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    SelectorMatcher.prototype.addSelectables = function (cssSelectors, callbackCtxt) {\n        var /** @type {?} */ listContext = ((null));\n        if (cssSelectors.length > 1) {\n            listContext = new SelectorListContext(cssSelectors);\n            this._listContexts.push(listContext);\n        }\n        for (var /** @type {?} */ i = 0; i < cssSelectors.length; i++) {\n            this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n        }\n    };\n    /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addSelectable = function (cssSelector, callbackCtxt, listContext) {\n        var /** @type {?} */ matcher = this;\n        var /** @type {?} */ element = cssSelector.element;\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        var /** @type {?} */ selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n        if (element) {\n            var /** @type {?} */ isTerminal = attrs.length === 0 && classNames.length === 0;\n            if (isTerminal) {\n                this._addTerminal(matcher._elementMap, element, selectable);\n            }\n            else {\n                matcher = this._addPartial(matcher._elementPartialMap, element);\n            }\n        }\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ isTerminal = attrs.length === 0 && i === classNames.length - 1;\n                var /** @type {?} */ className = classNames[i];\n                if (isTerminal) {\n                    this._addTerminal(matcher._classMap, className, selectable);\n                }\n                else {\n                    matcher = this._addPartial(matcher._classPartialMap, className);\n                }\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ isTerminal = i === attrs.length - 2;\n                var /** @type {?} */ name = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                if (isTerminal) {\n                    var /** @type {?} */ terminalMap = matcher._attrValueMap;\n                    var /** @type {?} */ terminalValuesMap = terminalMap.get(name);\n                    if (!terminalValuesMap) {\n                        terminalValuesMap = new Map();\n                        terminalMap.set(name, terminalValuesMap);\n                    }\n                    this._addTerminal(terminalValuesMap, value, selectable);\n                }\n                else {\n                    var /** @type {?} */ partialMap = matcher._attrValuePartialMap;\n                    var /** @type {?} */ partialValuesMap = partialMap.get(name);\n                    if (!partialValuesMap) {\n                        partialValuesMap = new Map();\n                        partialMap.set(name, partialValuesMap);\n                    }\n                    matcher = this._addPartial(partialValuesMap, value);\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addTerminal = function (map, name, selectable) {\n        var /** @type {?} */ terminalList = map.get(name);\n        if (!terminalList) {\n            terminalList = [];\n            map.set(name, terminalList);\n        }\n        terminalList.push(selectable);\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addPartial = function (map, name) {\n        var /** @type {?} */ matcher = map.get(name);\n        if (!matcher) {\n            matcher = new SelectorMatcher();\n            map.set(name, matcher);\n        }\n        return matcher;\n    };\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    SelectorMatcher.prototype.match = function (cssSelector, matchedCallback) {\n        var /** @type {?} */ result = false;\n        var /** @type {?} */ element = ((cssSelector.element));\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        for (var /** @type {?} */ i = 0; i < this._listContexts.length; i++) {\n            this._listContexts[i].alreadyMatched = false;\n        }\n        result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n        result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n            result;\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ className = classNames[i];\n                result =\n                    this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n                result =\n                    this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n                        result;\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ name = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                var /** @type {?} */ terminalValuesMap = ((this._attrValueMap.get(name)));\n                if (value) {\n                    result =\n                        this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n                var /** @type {?} */ partialValuesMap = ((this._attrValuePartialMap.get(name)));\n                if (value) {\n                    result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n            }\n        }\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchTerminal = function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ selectables = map.get(name) || [];\n        var /** @type {?} */ starSelectables = ((map.get('*')));\n        if (starSelectables) {\n            selectables = selectables.concat(starSelectables);\n        }\n        if (selectables.length === 0) {\n            return false;\n        }\n        var /** @type {?} */ selectable;\n        var /** @type {?} */ result = false;\n        for (var /** @type {?} */ i = 0; i < selectables.length; i++) {\n            selectable = selectables[i];\n            result = selectable.finalize(cssSelector, matchedCallback) || result;\n        }\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchPartial = function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ nestedSelector = map.get(name);\n        if (!nestedSelector) {\n            return false;\n        }\n        // TODO(perf): get rid of recursion and measure again\n        // TODO(perf): don't pass the whole selector into the recursion,\n        // but only the not processed parts\n        return nestedSelector.match(cssSelector, matchedCallback);\n    };\n    return SelectorMatcher;\n}());\nvar SelectorListContext = (function () {\n    /**\n     * @param {?} selectors\n     */\n    function SelectorListContext(selectors) {\n        this.selectors = selectors;\n        this.alreadyMatched = false;\n    }\n    return SelectorListContext;\n}());\nvar SelectorContext = (function () {\n    /**\n     * @param {?} selector\n     * @param {?} cbContext\n     * @param {?} listContext\n     */\n    function SelectorContext(selector, cbContext, listContext) {\n        this.selector = selector;\n        this.cbContext = cbContext;\n        this.listContext = listContext;\n        this.notSelectors = selector.notSelectors;\n    }\n    /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    SelectorContext.prototype.finalize = function (cssSelector, callback) {\n        var /** @type {?} */ result = true;\n        if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n            var /** @type {?} */ notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n            result = !notMatcher.match(cssSelector, null);\n        }\n        if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n            if (this.listContext) {\n                this.listContext.alreadyMatched = true;\n            }\n            callback(this.selector, this.cbContext);\n        }\n        return result;\n    };\n    return SelectorContext;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar MODULE_SUFFIX = '';\nvar DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n/**\n * @param {?} input\n * @return {?}\n */\n/**\n * @param {?} input\n * @return {?}\n */\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return m[1].toUpperCase();\n    });\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtColon(input, defaultValues) {\n    return _splitAt(input, ':', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtPeriod(input, defaultValues) {\n    return _splitAt(input, '.', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} character\n * @param {?} defaultValues\n * @return {?}\n */\nfunction _splitAt(input, character, defaultValues) {\n    var /** @type {?} */ characterIndex = input.indexOf(character);\n    if (characterIndex == -1)\n        return defaultValues;\n    return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n}\n/**\n * @param {?} value\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nfunction visitValue(value, visitor, context) {\n    if (Array.isArray(value)) {\n        return visitor.visitArray(/** @type {?} */ (value), context);\n    }\n    if (isStrictStringMap(value)) {\n        return visitor.visitStringMap(/** @type {?} */ (value), context);\n    }\n    if (value == null || typeof value == 'string' || typeof value == 'number' ||\n        typeof value == 'boolean') {\n        return visitor.visitPrimitive(value, context);\n    }\n    return visitor.visitOther(value, context);\n}\n/**\n * @param {?} val\n * @return {?}\n */\nfunction isDefined(val) {\n    return val !== null && val !== undefined;\n}\n/**\n * @template T\n * @param {?} val\n * @return {?}\n */\nfunction noUndefined(val) {\n    return val === undefined ? ((null)) : val;\n}\nvar ValueTransformer = (function () {\n    function ValueTransformer() {\n    }\n    /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitArray = function (arr, context) {\n        var _this = this;\n        return arr.map(function (value) { return visitValue(value, _this, context); });\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitStringMap = function (map, context) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        Object.keys(map).forEach(function (key) { result[key] = visitValue(map[key], _this, context); });\n        return result;\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitPrimitive = function (value, context) { return value; };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitOther = function (value, context) { return value; };\n    return ValueTransformer;\n}());\nvar SyncAsync = {\n    assertSync: function (value) {\n        if (_angular_core.ÉµisPromise(value)) {\n            throw new Error(\"Illegal state: value cannot be a promise\");\n        }\n        return value;\n    },\n    then: function (value, cb) { return _angular_core.ÉµisPromise(value) ? value.then(cb) : cb(value); },\n    all: function (syncAsyncValues) {\n        return syncAsyncValues.some(_angular_core.ÉµisPromise) ? Promise.all(syncAsyncValues) : (syncAsyncValues);\n    }\n};\n/**\n * @param {?} msg\n * @return {?}\n */\nfunction syntaxError(msg) {\n    var /** @type {?} */ error = Error(msg);\n    ((error))[ERROR_SYNTAX_ERROR] = true;\n    return error;\n}\nvar ERROR_SYNTAX_ERROR = 'ngSyntaxError';\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isSyntaxError(error) {\n    return ((error))[ERROR_SYNTAX_ERROR];\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction escapeRegExp(s) {\n    return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\nvar STRING_MAP_PROTO = Object.getPrototypeOf({});\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isStrictStringMap(obj) {\n    return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction utf8Encode(str) {\n    var /** @type {?} */ encoded = '';\n    for (var /** @type {?} */ index = 0; index < str.length; index++) {\n        var /** @type {?} */ codePoint = str.charCodeAt(index);\n        // decode surrogate\n        // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        if (codePoint >= 0xd800 && codePoint <= 0xdbff && str.length > (index + 1)) {\n            var /** @type {?} */ low = str.charCodeAt(index + 1);\n            if (low >= 0xdc00 && low <= 0xdfff) {\n                index++;\n                codePoint = ((codePoint - 0xd800) << 10) + low - 0xdc00 + 0x10000;\n            }\n        }\n        if (codePoint <= 0x7f) {\n            encoded += String.fromCharCode(codePoint);\n        }\n        else if (codePoint <= 0x7ff) {\n            encoded += String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xc0, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0xffff) {\n            encoded += String.fromCharCode((codePoint >> 12) | 0xe0, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0x1fffff) {\n            encoded += String.fromCharCode(((codePoint >> 18) & 0x07) | 0xf0, ((codePoint >> 12) & 0x3f) | 0x80, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n    }\n    return encoded;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// group 0: \"[prop] or (event) or @trigger\"\n// group 1: \"prop\" from \"[prop]\"\n// group 2: \"event\" from \"(event)\"\n// group 3: \"@trigger\" from \"@trigger\"\nvar HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\nvar CompileAnimationEntryMetadata = (function () {\n    /**\n     * @param {?=} name\n     * @param {?=} definitions\n     */\n    function CompileAnimationEntryMetadata(name, definitions) {\n        if (name === void 0) { name = null; }\n        if (definitions === void 0) { definitions = null; }\n        this.name = name;\n        this.definitions = definitions;\n    }\n    return CompileAnimationEntryMetadata;\n}());\n/**\n * @abstract\n */\nvar CompileAnimationStateMetadata = (function () {\n    function CompileAnimationStateMetadata() {\n    }\n    return CompileAnimationStateMetadata;\n}());\nvar CompileAnimationStateDeclarationMetadata = (function (_super) {\n    __extends(CompileAnimationStateDeclarationMetadata, _super);\n    /**\n     * @param {?} stateNameExpr\n     * @param {?} styles\n     */\n    function CompileAnimationStateDeclarationMetadata(stateNameExpr, styles) {\n        var _this = _super.call(this) || this;\n        _this.stateNameExpr = stateNameExpr;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationStateDeclarationMetadata;\n}(CompileAnimationStateMetadata));\nvar CompileAnimationStateTransitionMetadata = (function (_super) {\n    __extends(CompileAnimationStateTransitionMetadata, _super);\n    /**\n     * @param {?} stateChangeExpr\n     * @param {?} steps\n     */\n    function CompileAnimationStateTransitionMetadata(stateChangeExpr, steps) {\n        var _this = _super.call(this) || this;\n        _this.stateChangeExpr = stateChangeExpr;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationStateTransitionMetadata;\n}(CompileAnimationStateMetadata));\n/**\n * @abstract\n */\nvar CompileAnimationMetadata = (function () {\n    function CompileAnimationMetadata() {\n    }\n    return CompileAnimationMetadata;\n}());\nvar CompileAnimationKeyframesSequenceMetadata = (function (_super) {\n    __extends(CompileAnimationKeyframesSequenceMetadata, _super);\n    /**\n     * @param {?=} steps\n     */\n    function CompileAnimationKeyframesSequenceMetadata(steps) {\n        if (steps === void 0) { steps = []; }\n        var _this = _super.call(this) || this;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationKeyframesSequenceMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationStyleMetadata = (function (_super) {\n    __extends(CompileAnimationStyleMetadata, _super);\n    /**\n     * @param {?} offset\n     * @param {?=} styles\n     */\n    function CompileAnimationStyleMetadata(offset, styles) {\n        if (styles === void 0) { styles = null; }\n        var _this = _super.call(this) || this;\n        _this.offset = offset;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationStyleMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationAnimateMetadata = (function (_super) {\n    __extends(CompileAnimationAnimateMetadata, _super);\n    /**\n     * @param {?=} timings\n     * @param {?=} styles\n     */\n    function CompileAnimationAnimateMetadata(timings, styles) {\n        if (timings === void 0) { timings = 0; }\n        if (styles === void 0) { styles = null; }\n        var _this = _super.call(this) || this;\n        _this.timings = timings;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationAnimateMetadata;\n}(CompileAnimationMetadata));\n/**\n * @abstract\n */\nvar CompileAnimationWithStepsMetadata = (function (_super) {\n    __extends(CompileAnimationWithStepsMetadata, _super);\n    /**\n     * @param {?=} steps\n     */\n    function CompileAnimationWithStepsMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        var _this = _super.call(this) || this;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationWithStepsMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationSequenceMetadata = (function (_super) {\n    __extends(CompileAnimationSequenceMetadata, _super);\n    /**\n     * @param {?=} steps\n     */\n    function CompileAnimationSequenceMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        return _super.call(this, steps) || this;\n    }\n    return CompileAnimationSequenceMetadata;\n}(CompileAnimationWithStepsMetadata));\nvar CompileAnimationGroupMetadata = (function (_super) {\n    __extends(CompileAnimationGroupMetadata, _super);\n    /**\n     * @param {?=} steps\n     */\n    function CompileAnimationGroupMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        return _super.call(this, steps) || this;\n    }\n    return CompileAnimationGroupMetadata;\n}(CompileAnimationWithStepsMetadata));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _sanitizeIdentifier(name) {\n    return name.replace(/\\W/g, '_');\n}\nvar _anonymousTypeIndex = 0;\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierName(compileIdentifier) {\n    if (!compileIdentifier || !compileIdentifier.reference) {\n        return null;\n    }\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.name;\n    }\n    if (ref['__anonymousType']) {\n        return ref['__anonymousType'];\n    }\n    var /** @type {?} */ identifier = _angular_core.Éµstringify(ref);\n    if (identifier.indexOf('(') >= 0) {\n        // case: anonymous functions!\n        identifier = \"anonymous_\" + _anonymousTypeIndex++;\n        ref['__anonymousType'] = identifier;\n    }\n    else {\n        identifier = _sanitizeIdentifier(identifier);\n    }\n    return identifier;\n}\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierModuleUrl(compileIdentifier) {\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.filePath;\n    }\n    // Runtime type\n    return \"./\" + _angular_core.Éµstringify(ref);\n}\n/**\n * @param {?} compType\n * @param {?} embeddedTemplateIndex\n * @return {?}\n */\nfunction viewClassName(compType, embeddedTemplateIndex) {\n    return \"View_\" + identifierName({ reference: compType }) + \"_\" + embeddedTemplateIndex;\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction rendererTypeName(compType) {\n    return \"RenderType_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction hostViewClassName(compType) {\n    return \"HostView_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} dirType\n * @return {?}\n */\nfunction dirWrapperClassName(dirType) {\n    return \"Wrapper_\" + identifierName({ reference: dirType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction componentFactoryName(compType) {\n    return identifierName({ reference: compType }) + \"NgFactory\";\n}\nvar CompileSummaryKind = {};\nCompileSummaryKind.Pipe = 0;\nCompileSummaryKind.Directive = 1;\nCompileSummaryKind.NgModule = 2;\nCompileSummaryKind.Injectable = 3;\nCompileSummaryKind[CompileSummaryKind.Pipe] = \"Pipe\";\nCompileSummaryKind[CompileSummaryKind.Directive] = \"Directive\";\nCompileSummaryKind[CompileSummaryKind.NgModule] = \"NgModule\";\nCompileSummaryKind[CompileSummaryKind.Injectable] = \"Injectable\";\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenName(token) {\n    return token.value != null ? _sanitizeIdentifier(token.value) : identifierName(token.identifier);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenReference(token) {\n    if (token.identifier != null) {\n        return token.identifier.reference;\n    }\n    else {\n        return token.value;\n    }\n}\n/**\n * Metadata about a stylesheet\n */\nvar CompileStylesheetMetadata = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function CompileStylesheetMetadata(_a) {\n        var _b = _a === void 0 ? {} : _a, moduleUrl = _b.moduleUrl, styles = _b.styles, styleUrls = _b.styleUrls;\n        this.moduleUrl = moduleUrl || null;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n    }\n    return CompileStylesheetMetadata;\n}());\n/**\n * Metadata regarding compilation of a template.\n */\nvar CompileTemplateMetadata = (function () {\n    /**\n     * @param {?} __0\n     */\n    function CompileTemplateMetadata(_a) {\n        var encapsulation = _a.encapsulation, template = _a.template, templateUrl = _a.templateUrl, styles = _a.styles, styleUrls = _a.styleUrls, externalStylesheets = _a.externalStylesheets, animations = _a.animations, ngContentSelectors = _a.ngContentSelectors, interpolation = _a.interpolation, isInline = _a.isInline;\n        this.encapsulation = encapsulation;\n        this.template = template;\n        this.templateUrl = templateUrl;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n        this.externalStylesheets = _normalizeArray(externalStylesheets);\n        this.animations = animations ? flatten(animations) : [];\n        this.ngContentSelectors = ngContentSelectors || [];\n        if (interpolation && interpolation.length != 2) {\n            throw new Error(\"'interpolation' should have a start and an end symbol.\");\n        }\n        this.interpolation = interpolation;\n        this.isInline = isInline;\n    }\n    /**\n     * @return {?}\n     */\n    CompileTemplateMetadata.prototype.toSummary = function () {\n        return {\n            animations: this.animations.map(function (anim) { return anim.name; }),\n            ngContentSelectors: this.ngContentSelectors,\n            encapsulation: this.encapsulation,\n        };\n    };\n    return CompileTemplateMetadata;\n}());\n/**\n * Metadata regarding compilation of a directive.\n */\nvar CompileDirectiveMetadata = (function () {\n    /**\n     * @param {?} __0\n     */\n    function CompileDirectiveMetadata(_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, hostListeners = _a.hostListeners, hostProperties = _a.hostProperties, hostAttributes = _a.hostAttributes, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        this.isHost = !!isHost;\n        this.type = type;\n        this.isComponent = isComponent;\n        this.selector = selector;\n        this.exportAs = exportAs;\n        this.changeDetection = changeDetection;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.hostListeners = hostListeners;\n        this.hostProperties = hostProperties;\n        this.hostAttributes = hostAttributes;\n        this.providers = _normalizeArray(providers);\n        this.viewProviders = _normalizeArray(viewProviders);\n        this.queries = _normalizeArray(queries);\n        this.viewQueries = _normalizeArray(viewQueries);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.template = template;\n        this.componentViewType = componentViewType;\n        this.rendererType = rendererType;\n        this.componentFactory = componentFactory;\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    CompileDirectiveMetadata.create = function (_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, host = _a.host, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        var /** @type {?} */ hostListeners = {};\n        var /** @type {?} */ hostProperties = {};\n        var /** @type {?} */ hostAttributes = {};\n        if (host != null) {\n            Object.keys(host).forEach(function (key) {\n                var /** @type {?} */ value = host[key];\n                var /** @type {?} */ matches = key.match(HOST_REG_EXP);\n                if (matches === null) {\n                    hostAttributes[key] = value;\n                }\n                else if (matches[1] != null) {\n                    hostProperties[matches[1]] = value;\n                }\n                else if (matches[2] != null) {\n                    hostListeners[matches[2]] = value;\n                }\n            });\n        }\n        var /** @type {?} */ inputsMap = {};\n        if (inputs != null) {\n            inputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                inputsMap[parts[0]] = parts[1];\n            });\n        }\n        var /** @type {?} */ outputsMap = {};\n        if (outputs != null) {\n            outputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                outputsMap[parts[0]] = parts[1];\n            });\n        }\n        return new CompileDirectiveMetadata({\n            isHost: isHost,\n            type: type,\n            isComponent: !!isComponent, selector: selector, exportAs: exportAs, changeDetection: changeDetection,\n            inputs: inputsMap,\n            outputs: outputsMap,\n            hostListeners: hostListeners,\n            hostProperties: hostProperties,\n            hostAttributes: hostAttributes,\n            providers: providers,\n            viewProviders: viewProviders,\n            queries: queries,\n            viewQueries: viewQueries,\n            entryComponents: entryComponents,\n            template: template,\n            componentViewType: componentViewType,\n            rendererType: rendererType,\n            componentFactory: componentFactory,\n        });\n    };\n    /**\n     * @return {?}\n     */\n    CompileDirectiveMetadata.prototype.toSummary = function () {\n        return {\n            summaryKind: CompileSummaryKind.Directive,\n            type: this.type,\n            isComponent: this.isComponent,\n            selector: this.selector,\n            exportAs: this.exportAs,\n            inputs: this.inputs,\n            outputs: this.outputs,\n            hostListeners: this.hostListeners,\n            hostProperties: this.hostProperties,\n            hostAttributes: this.hostAttributes,\n            providers: this.providers,\n            viewProviders: this.viewProviders,\n            queries: this.queries,\n            viewQueries: this.viewQueries,\n            entryComponents: this.entryComponents,\n            changeDetection: this.changeDetection,\n            template: this.template && this.template.toSummary(),\n            componentViewType: this.componentViewType,\n            rendererType: this.rendererType,\n            componentFactory: this.componentFactory\n        };\n    };\n    return CompileDirectiveMetadata;\n}());\n/**\n * Construct {\\@link CompileDirectiveMetadata} from {\\@link ComponentTypeMetadata} and a selector.\n * @param {?} hostTypeReference\n * @param {?} compMeta\n * @param {?} hostViewType\n * @return {?}\n */\nfunction createHostComponentMeta(hostTypeReference, compMeta, hostViewType) {\n    var /** @type {?} */ template = CssSelector.parse(/** @type {?} */ ((compMeta.selector)))[0].getMatchingElementTemplate();\n    return CompileDirectiveMetadata.create({\n        isHost: true,\n        type: { reference: hostTypeReference, diDeps: [], lifecycleHooks: [] },\n        template: new CompileTemplateMetadata({\n            encapsulation: _angular_core.ViewEncapsulation.None,\n            template: template,\n            templateUrl: '',\n            styles: [],\n            styleUrls: [],\n            ngContentSelectors: [],\n            animations: [],\n            isInline: true,\n            externalStylesheets: [],\n            interpolation: null\n        }),\n        exportAs: null,\n        changeDetection: _angular_core.ChangeDetectionStrategy.Default,\n        inputs: [],\n        outputs: [],\n        host: {},\n        isComponent: true,\n        selector: '*',\n        providers: [],\n        viewProviders: [],\n        queries: [],\n        viewQueries: [],\n        componentViewType: hostViewType,\n        rendererType: { id: '__Host__', encapsulation: _angular_core.ViewEncapsulation.None, styles: [], data: {} },\n        entryComponents: [],\n        componentFactory: null\n    });\n}\nvar CompilePipeMetadata = (function () {\n    /**\n     * @param {?} __0\n     */\n    function CompilePipeMetadata(_a) {\n        var type = _a.type, name = _a.name, pure = _a.pure;\n        this.type = type;\n        this.name = name;\n        this.pure = !!pure;\n    }\n    /**\n     * @return {?}\n     */\n    CompilePipeMetadata.prototype.toSummary = function () {\n        return {\n            summaryKind: CompileSummaryKind.Pipe,\n            type: this.type,\n            name: this.name,\n            pure: this.pure\n        };\n    };\n    return CompilePipeMetadata;\n}());\n/**\n * Metadata regarding compilation of a module.\n */\nvar CompileNgModuleMetadata = (function () {\n    /**\n     * @param {?} __0\n     */\n    function CompileNgModuleMetadata(_a) {\n        var type = _a.type, providers = _a.providers, declaredDirectives = _a.declaredDirectives, exportedDirectives = _a.exportedDirectives, declaredPipes = _a.declaredPipes, exportedPipes = _a.exportedPipes, entryComponents = _a.entryComponents, bootstrapComponents = _a.bootstrapComponents, importedModules = _a.importedModules, exportedModules = _a.exportedModules, schemas = _a.schemas, transitiveModule = _a.transitiveModule, id = _a.id;\n        this.type = type || null;\n        this.declaredDirectives = _normalizeArray(declaredDirectives);\n        this.exportedDirectives = _normalizeArray(exportedDirectives);\n        this.declaredPipes = _normalizeArray(declaredPipes);\n        this.exportedPipes = _normalizeArray(exportedPipes);\n        this.providers = _normalizeArray(providers);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n        this.importedModules = _normalizeArray(importedModules);\n        this.exportedModules = _normalizeArray(exportedModules);\n        this.schemas = _normalizeArray(schemas);\n        this.id = id || null;\n        this.transitiveModule = transitiveModule || null;\n    }\n    /**\n     * @return {?}\n     */\n    CompileNgModuleMetadata.prototype.toSummary = function () {\n        var /** @type {?} */ module = ((this.transitiveModule));\n        return {\n            summaryKind: CompileSummaryKind.NgModule,\n            type: this.type,\n            entryComponents: module.entryComponents,\n            providers: module.providers,\n            modules: module.modules,\n            exportedDirectives: module.exportedDirectives,\n            exportedPipes: module.exportedPipes\n        };\n    };\n    return CompileNgModuleMetadata;\n}());\nvar TransitiveCompileNgModuleMetadata = (function () {\n    function TransitiveCompileNgModuleMetadata() {\n        this.directivesSet = new Set();\n        this.directives = [];\n        this.exportedDirectivesSet = new Set();\n        this.exportedDirectives = [];\n        this.pipesSet = new Set();\n        this.pipes = [];\n        this.exportedPipesSet = new Set();\n        this.exportedPipes = [];\n        this.modulesSet = new Set();\n        this.modules = [];\n        this.entryComponentsSet = new Set();\n        this.entryComponents = [];\n        this.providers = [];\n    }\n    /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addProvider = function (provider, module) {\n        this.providers.push({ provider: provider, module: module });\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addDirective = function (id) {\n        if (!this.directivesSet.has(id.reference)) {\n            this.directivesSet.add(id.reference);\n            this.directives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedDirective = function (id) {\n        if (!this.exportedDirectivesSet.has(id.reference)) {\n            this.exportedDirectivesSet.add(id.reference);\n            this.exportedDirectives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addPipe = function (id) {\n        if (!this.pipesSet.has(id.reference)) {\n            this.pipesSet.add(id.reference);\n            this.pipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedPipe = function (id) {\n        if (!this.exportedPipesSet.has(id.reference)) {\n            this.exportedPipesSet.add(id.reference);\n            this.exportedPipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addModule = function (id) {\n        if (!this.modulesSet.has(id.reference)) {\n            this.modulesSet.add(id.reference);\n            this.modules.push(id);\n        }\n    };\n    /**\n     * @param {?} ec\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addEntryComponent = function (ec) {\n        if (!this.entryComponentsSet.has(ec.componentType)) {\n            this.entryComponentsSet.add(ec.componentType);\n            this.entryComponents.push(ec);\n        }\n    };\n    return TransitiveCompileNgModuleMetadata;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _normalizeArray(obj) {\n    return obj || [];\n}\nvar ProviderMeta = (function () {\n    /**\n     * @param {?} token\n     * @param {?} __1\n     */\n    function ProviderMeta(token, _a) {\n        var useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n        this.token = token;\n        this.useClass = useClass || null;\n        this.useValue = useValue;\n        this.useExisting = useExisting;\n        this.useFactory = useFactory || null;\n        this.dependencies = deps || null;\n        this.multi = !!multi;\n    }\n    return ProviderMeta;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n        return ((flat)).concat(flatItem);\n    }, []);\n}\n/**\n * @param {?} url\n * @return {?}\n */\nfunction sourceUrl(url) {\n    // Note: We need 3 \"/\" so that ng shows up as a separate domain\n    // in the chrome dev tools.\n    return url.replace(/(\\w+:\\/\\/[\\w:-]+)?(\\/+)?/, 'ng:///');\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @param {?} templateMeta\n * @return {?}\n */\nfunction templateSourceUrl(ngModuleType, compMeta, templateMeta) {\n    var /** @type {?} */ url;\n    if (templateMeta.isInline) {\n        if (compMeta.type.reference instanceof StaticSymbol) {\n            // Note: a .ts file might contain multiple components with inline templates,\n            // so we need to give them unique urls, as these will be used for sourcemaps.\n            url = compMeta.type.reference.filePath + \".\" + compMeta.type.reference.name + \".html\";\n        }\n        else {\n            url = identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".html\";\n        }\n    }\n    else {\n        url = ((templateMeta.templateUrl));\n    }\n    // always prepend ng:// to make angular resources easy to find and not clobber\n    // user resources.\n    return sourceUrl(url);\n}\n/**\n * @param {?} meta\n * @param {?} id\n * @return {?}\n */\nfunction sharedStylesheetJitUrl(meta, id) {\n    var /** @type {?} */ pathParts = ((meta.moduleUrl)).split(/\\/\\\\/g);\n    var /** @type {?} */ baseName = pathParts[pathParts.length - 1];\n    return sourceUrl(\"css/\" + id + baseName + \".ngstyle.js\");\n}\n/**\n * @param {?} moduleMeta\n * @return {?}\n */\nfunction ngModuleJitUrl(moduleMeta) {\n    return sourceUrl(identifierName(moduleMeta.type) + \"/module.ngfactory.js\");\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @return {?}\n */\nfunction templateJitUrl(ngModuleType, compMeta) {\n    return sourceUrl(identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".ngfactory.js\");\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides access to reflection data about symbols that the compiler needs.\n * @abstract\n */\nvar CompileReflector = (function () {\n    function CompileReflector() {\n    }\n    /**\n     * @abstract\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileReflector.prototype.parameters = function (typeOrFunc) { };\n    /**\n     * @abstract\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileReflector.prototype.annotations = function (typeOrFunc) { };\n    /**\n     * @abstract\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileReflector.prototype.propMetadata = function (typeOrFunc) { };\n    /**\n     * @abstract\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    CompileReflector.prototype.hasLifecycleHook = function (type, lcProperty) { };\n    /**\n     * @abstract\n     * @param {?} type\n     * @param {?} cmpMetadata\n     * @return {?}\n     */\n    CompileReflector.prototype.componentModuleUrl = function (type, cmpMetadata) { };\n    /**\n     * @abstract\n     * @param {?} ref\n     * @return {?}\n     */\n    CompileReflector.prototype.resolveExternalReference = function (ref) { };\n    return CompileReflector;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CompilerConfig = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function CompilerConfig(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.defaultEncapsulation, defaultEncapsulation = _c === void 0 ? _angular_core.ViewEncapsulation.Emulated : _c, _d = _b.useJit, useJit = _d === void 0 ? true : _d, missingTranslation = _b.missingTranslation, enableLegacyTemplate = _b.enableLegacyTemplate;\n        this.defaultEncapsulation = defaultEncapsulation;\n        this.useJit = !!useJit;\n        this.missingTranslation = missingTranslation || null;\n        this.enableLegacyTemplate = enableLegacyTemplate !== false;\n    }\n    return CompilerConfig;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParserError = (function () {\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     */\n    function ParserError(message, input, errLocation, ctxLocation) {\n        this.input = input;\n        this.errLocation = errLocation;\n        this.ctxLocation = ctxLocation;\n        this.message = \"Parser Error: \" + message + \" \" + errLocation + \" [\" + input + \"] in \" + ctxLocation;\n    }\n    return ParserError;\n}());\nvar ParseSpan = (function () {\n    /**\n     * @param {?} start\n     * @param {?} end\n     */\n    function ParseSpan(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    return ParseSpan;\n}());\nvar AST = (function () {\n    /**\n     * @param {?} span\n     */\n    function AST(span) {\n        this.span = span;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    AST.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return null;\n    };\n    /**\n     * @return {?}\n     */\n    AST.prototype.toString = function () { return 'AST'; };\n    return AST;\n}());\n/**\n * Represents a quoted expression of the form:\n *\n * quote = prefix `:` uninterpretedExpression\n * prefix = identifier\n * uninterpretedExpression = arbitrary string\n *\n * A quoted expression is meant to be pre-processed by an AST transformer that\n * converts it into another AST that no longer contains quoted expressions.\n * It is meant to allow third-party developers to extend Angular template\n * expression language. The `uninterpretedExpression` part of the quote is\n * therefore not interpreted by the Angular's own expression parser.\n */\nvar Quote = (function (_super) {\n    __extends(Quote, _super);\n    /**\n     * @param {?} span\n     * @param {?} prefix\n     * @param {?} uninterpretedExpression\n     * @param {?} location\n     */\n    function Quote(span, prefix, uninterpretedExpression, location) {\n        var _this = _super.call(this, span) || this;\n        _this.prefix = prefix;\n        _this.uninterpretedExpression = uninterpretedExpression;\n        _this.location = location;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Quote.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitQuote(this, context);\n    };\n    /**\n     * @return {?}\n     */\n    Quote.prototype.toString = function () { return 'Quote'; };\n    return Quote;\n}(AST));\nvar EmptyExpr = (function (_super) {\n    __extends(EmptyExpr, _super);\n    function EmptyExpr() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    EmptyExpr.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        // do nothing\n    };\n    return EmptyExpr;\n}(AST));\nvar ImplicitReceiver = (function (_super) {\n    __extends(ImplicitReceiver, _super);\n    function ImplicitReceiver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ImplicitReceiver.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitImplicitReceiver(this, context);\n    };\n    return ImplicitReceiver;\n}(AST));\n/**\n * Multiple expressions separated by a semicolon.\n */\nvar Chain = (function (_super) {\n    __extends(Chain, _super);\n    /**\n     * @param {?} span\n     * @param {?} expressions\n     */\n    function Chain(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Chain.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitChain(this, context);\n    };\n    return Chain;\n}(AST));\nvar Conditional = (function (_super) {\n    __extends(Conditional, _super);\n    /**\n     * @param {?} span\n     * @param {?} condition\n     * @param {?} trueExp\n     * @param {?} falseExp\n     */\n    function Conditional(span, condition, trueExp, falseExp) {\n        var _this = _super.call(this, span) || this;\n        _this.condition = condition;\n        _this.trueExp = trueExp;\n        _this.falseExp = falseExp;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Conditional.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitConditional(this, context);\n    };\n    return Conditional;\n}(AST));\nvar PropertyRead = (function (_super) {\n    __extends(PropertyRead, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     */\n    function PropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyRead.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyRead(this, context);\n    };\n    return PropertyRead;\n}(AST));\nvar PropertyWrite = (function (_super) {\n    __extends(PropertyWrite, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} value\n     */\n    function PropertyWrite(span, receiver, name, value) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyWrite.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyWrite(this, context);\n    };\n    return PropertyWrite;\n}(AST));\nvar SafePropertyRead = (function (_super) {\n    __extends(SafePropertyRead, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     */\n    function SafePropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafePropertyRead.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafePropertyRead(this, context);\n    };\n    return SafePropertyRead;\n}(AST));\nvar KeyedRead = (function (_super) {\n    __extends(KeyedRead, _super);\n    /**\n     * @param {?} span\n     * @param {?} obj\n     * @param {?} key\n     */\n    function KeyedRead(span, obj, key) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedRead.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedRead(this, context);\n    };\n    return KeyedRead;\n}(AST));\nvar KeyedWrite = (function (_super) {\n    __extends(KeyedWrite, _super);\n    /**\n     * @param {?} span\n     * @param {?} obj\n     * @param {?} key\n     * @param {?} value\n     */\n    function KeyedWrite(span, obj, key, value) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedWrite.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedWrite(this, context);\n    };\n    return KeyedWrite;\n}(AST));\nvar BindingPipe = (function (_super) {\n    __extends(BindingPipe, _super);\n    /**\n     * @param {?} span\n     * @param {?} exp\n     * @param {?} name\n     * @param {?} args\n     */\n    function BindingPipe(span, exp, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.exp = exp;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    BindingPipe.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPipe(this, context);\n    };\n    return BindingPipe;\n}(AST));\nvar LiteralPrimitive = (function (_super) {\n    __extends(LiteralPrimitive, _super);\n    /**\n     * @param {?} span\n     * @param {?} value\n     */\n    function LiteralPrimitive(span, value) {\n        var _this = _super.call(this, span) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralPrimitive.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralPrimitive(this, context);\n    };\n    return LiteralPrimitive;\n}(AST));\nvar LiteralArray = (function (_super) {\n    __extends(LiteralArray, _super);\n    /**\n     * @param {?} span\n     * @param {?} expressions\n     */\n    function LiteralArray(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralArray.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralArray(this, context);\n    };\n    return LiteralArray;\n}(AST));\nvar LiteralMap = (function (_super) {\n    __extends(LiteralMap, _super);\n    /**\n     * @param {?} span\n     * @param {?} keys\n     * @param {?} values\n     */\n    function LiteralMap(span, keys, values) {\n        var _this = _super.call(this, span) || this;\n        _this.keys = keys;\n        _this.values = values;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralMap.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralMap(this, context);\n    };\n    return LiteralMap;\n}(AST));\nvar Interpolation = (function (_super) {\n    __extends(Interpolation, _super);\n    /**\n     * @param {?} span\n     * @param {?} strings\n     * @param {?} expressions\n     */\n    function Interpolation(span, strings, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.strings = strings;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Interpolation.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitInterpolation(this, context);\n    };\n    return Interpolation;\n}(AST));\nvar Binary = (function (_super) {\n    __extends(Binary, _super);\n    /**\n     * @param {?} span\n     * @param {?} operation\n     * @param {?} left\n     * @param {?} right\n     */\n    function Binary(span, operation, left, right) {\n        var _this = _super.call(this, span) || this;\n        _this.operation = operation;\n        _this.left = left;\n        _this.right = right;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Binary.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitBinary(this, context);\n    };\n    return Binary;\n}(AST));\nvar PrefixNot = (function (_super) {\n    __extends(PrefixNot, _super);\n    /**\n     * @param {?} span\n     * @param {?} expression\n     */\n    function PrefixNot(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PrefixNot.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPrefixNot(this, context);\n    };\n    return PrefixNot;\n}(AST));\nvar NonNullAssert = (function (_super) {\n    __extends(NonNullAssert, _super);\n    /**\n     * @param {?} span\n     * @param {?} expression\n     */\n    function NonNullAssert(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    NonNullAssert.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitNonNullAssert(this, context);\n    };\n    return NonNullAssert;\n}(AST));\nvar MethodCall = (function (_super) {\n    __extends(MethodCall, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} args\n     */\n    function MethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    MethodCall.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitMethodCall(this, context);\n    };\n    return MethodCall;\n}(AST));\nvar SafeMethodCall = (function (_super) {\n    __extends(SafeMethodCall, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} args\n     */\n    function SafeMethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafeMethodCall.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafeMethodCall(this, context);\n    };\n    return SafeMethodCall;\n}(AST));\nvar FunctionCall = (function (_super) {\n    __extends(FunctionCall, _super);\n    /**\n     * @param {?} span\n     * @param {?} target\n     * @param {?} args\n     */\n    function FunctionCall(span, target, args) {\n        var _this = _super.call(this, span) || this;\n        _this.target = target;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    FunctionCall.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitFunctionCall(this, context);\n    };\n    return FunctionCall;\n}(AST));\nvar ASTWithSource = (function (_super) {\n    __extends(ASTWithSource, _super);\n    /**\n     * @param {?} ast\n     * @param {?} source\n     * @param {?} location\n     * @param {?} errors\n     */\n    function ASTWithSource(ast, source, location, errors) {\n        var _this = _super.call(this, new ParseSpan(0, source == null ? 0 : source.length)) || this;\n        _this.ast = ast;\n        _this.source = source;\n        _this.location = location;\n        _this.errors = errors;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ASTWithSource.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return this.ast.visit(visitor, context);\n    };\n    /**\n     * @return {?}\n     */\n    ASTWithSource.prototype.toString = function () { return this.source + \" in \" + this.location; };\n    return ASTWithSource;\n}(AST));\nvar TemplateBinding = (function () {\n    /**\n     * @param {?} span\n     * @param {?} key\n     * @param {?} keyIsVar\n     * @param {?} name\n     * @param {?} expression\n     */\n    function TemplateBinding(span, key, keyIsVar, name, expression) {\n        this.span = span;\n        this.key = key;\n        this.keyIsVar = keyIsVar;\n        this.name = name;\n        this.expression = expression;\n    }\n    return TemplateBinding;\n}());\nvar NullAstVisitor = (function () {\n    function NullAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitBinary = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitChain = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitConditional = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitFunctionCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitImplicitReceiver = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitInterpolation = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedWrite = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralArray = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralMap = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralPrimitive = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitMethodCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPipe = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPrefixNot = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitNonNullAssert = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyWrite = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitQuote = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafeMethodCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafePropertyRead = function (ast, context) { };\n    return NullAstVisitor;\n}());\nvar RecursiveAstVisitor = (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinary = function (ast, context) {\n        ast.left.visit(this);\n        ast.right.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitChain = function (ast, context) { return this.visitAll(ast.expressions, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditional = function (ast, context) {\n        ast.condition.visit(this);\n        ast.trueExp.visit(this);\n        ast.falseExp.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPipe = function (ast, context) {\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionCall = function (ast, context) {\n        ((ast.target)).visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitImplicitReceiver = function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInterpolation = function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedRead = function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedWrite = function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArray = function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMap = function (ast, context) { return this.visitAll(ast.values, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralPrimitive = function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMethodCall = function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPrefixNot = function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNonNullAssert = function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyRead = function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyWrite = function (ast, context) {\n        ast.receiver.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafePropertyRead = function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafeMethodCall = function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAll = function (asts, context) {\n        var _this = this;\n        asts.forEach(function (ast) { return ast.visit(_this, context); });\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitQuote = function (ast, context) { return null; };\n    return RecursiveAstVisitor;\n}());\nvar AstTransformer = (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitImplicitReceiver = function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInterpolation = function (ast, context) {\n        return new Interpolation(ast.span, ast.strings, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralPrimitive = function (ast, context) {\n        return new LiteralPrimitive(ast.span, ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyRead = function (ast, context) {\n        return new PropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyWrite = function (ast, context) {\n        return new PropertyWrite(ast.span, ast.receiver.visit(this), ast.name, ast.value.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafePropertyRead = function (ast, context) {\n        return new SafePropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitMethodCall = function (ast, context) {\n        return new MethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafeMethodCall = function (ast, context) {\n        return new SafeMethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionCall = function (ast, context) {\n        return new FunctionCall(ast.span, /** @type {?} */ ((ast.target)).visit(this), this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArray = function (ast, context) {\n        return new LiteralArray(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMap = function (ast, context) {\n        return new LiteralMap(ast.span, ast.keys, this.visitAll(ast.values));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinary = function (ast, context) {\n        return new Binary(ast.span, ast.operation, ast.left.visit(this), ast.right.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPrefixNot = function (ast, context) {\n        return new PrefixNot(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNonNullAssert = function (ast, context) {\n        return new NonNullAssert(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditional = function (ast, context) {\n        return new Conditional(ast.span, ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPipe = function (ast, context) {\n        return new BindingPipe(ast.span, ast.exp.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedRead = function (ast, context) {\n        return new KeyedRead(ast.span, ast.obj.visit(this), ast.key.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedWrite = function (ast, context) {\n        return new KeyedWrite(ast.span, ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));\n    };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAll = function (asts) {\n        var /** @type {?} */ res = new Array(asts.length);\n        for (var /** @type {?} */ i = 0; i < asts.length; ++i) {\n            res[i] = asts[i].visit(this);\n        }\n        return res;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitChain = function (ast, context) {\n        return new Chain(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitQuote = function (ast, context) {\n        return new Quote(ast.span, ast.prefix, ast.uninterpretedExpression, ast.location);\n    };\n    return AstTransformer;\n}());\n/**\n * @param {?} ast\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nfunction visitAstChildren(ast, visitor, context) {\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function visit(ast) {\n        visitor.visit && visitor.visit(ast, context) || ast.visit(visitor, context);\n    }\n    /**\n     * @template T\n     * @param {?} asts\n     * @return {?}\n     */\n    function visitAll(asts) { asts.forEach(visit); }\n    ast.visit({\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitBinary: function (ast) {\n            visit(ast.left);\n            visit(ast.right);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitChain: function (ast) { visitAll(ast.expressions); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitConditional: function (ast) {\n            visit(ast.condition);\n            visit(ast.trueExp);\n            visit(ast.falseExp);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitFunctionCall: function (ast) {\n            if (ast.target) {\n                visit(ast.target);\n            }\n            visitAll(ast.args);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitImplicitReceiver: function (ast) { },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitInterpolation: function (ast) { visitAll(ast.expressions); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitKeyedRead: function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitKeyedWrite: function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n            visit(ast.obj);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitLiteralArray: function (ast) { visitAll(ast.expressions); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitLiteralMap: function (ast) { },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitLiteralPrimitive: function (ast) { },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitMethodCall: function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitPipe: function (ast) {\n            visit(ast.exp);\n            visitAll(ast.args);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitPrefixNot: function (ast) { visit(ast.expression); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitNonNullAssert: function (ast) { visit(ast.expression); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitPropertyRead: function (ast) { visit(ast.receiver); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitPropertyWrite: function (ast) {\n            visit(ast.receiver);\n            visit(ast.value);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitQuote: function (ast) { },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitSafeMethodCall: function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitSafePropertyRead: function (ast) { visit(ast.receiver); },\n    });\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar $EOF = 0;\nvar $TAB = 9;\nvar $LF = 10;\nvar $VTAB = 11;\nvar $FF = 12;\nvar $CR = 13;\nvar $SPACE = 32;\nvar $BANG = 33;\nvar $DQ = 34;\nvar $HASH = 35;\nvar $$ = 36;\nvar $PERCENT = 37;\nvar $AMPERSAND = 38;\nvar $SQ = 39;\nvar $LPAREN = 40;\nvar $RPAREN = 41;\nvar $STAR = 42;\nvar $PLUS = 43;\nvar $COMMA = 44;\nvar $MINUS = 45;\nvar $PERIOD = 46;\nvar $SLASH = 47;\nvar $COLON = 58;\nvar $SEMICOLON = 59;\nvar $LT = 60;\nvar $EQ = 61;\nvar $GT = 62;\nvar $QUESTION = 63;\nvar $0 = 48;\nvar $9 = 57;\nvar $A = 65;\nvar $E = 69;\nvar $F = 70;\nvar $X = 88;\nvar $Z = 90;\nvar $LBRACKET = 91;\nvar $BACKSLASH = 92;\nvar $RBRACKET = 93;\nvar $CARET = 94;\nvar $_ = 95;\nvar $a = 97;\nvar $e = 101;\nvar $f = 102;\nvar $n = 110;\nvar $r = 114;\nvar $t = 116;\nvar $u = 117;\nvar $v = 118;\nvar $x = 120;\nvar $z = 122;\nvar $LBRACE = 123;\nvar $BAR = 124;\nvar $RBRACE = 125;\nvar $NBSP = 160;\nvar $BT = 96;\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isWhitespace(code) {\n    return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigit(code) {\n    return $0 <= code && code <= $9;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiLetter(code) {\n    return code >= $a && code <= $z || code >= $A && code <= $Z;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiHexDigit(code) {\n    return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n}\n/**\n * A replacement for \\@Injectable to be used in the compiler, so that\n * we don't try to evaluate the metadata in the compiler during AoT.\n * This decorator is enough to make the compiler work with the ReflectiveInjector though.\n * \\@Annotation\n * @return {?}\n */\nfunction CompilerInjectable() {\n    return function (x) { return x; };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertArrayOfStrings(identifier, value) {\n    if (!_angular_core.isDevMode() || value == null) {\n        return;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n    }\n    for (var /** @type {?} */ i = 0; i < value.length; i += 1) {\n        if (typeof value[i] !== 'string') {\n            throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n        }\n    }\n}\nvar INTERPOLATION_BLACKLIST_REGEXPS = [\n    /^\\s*$/,\n    /[<>]/,\n    /^[{}]$/,\n    /&(#|[a-z])/i,\n    /^\\/\\//,\n];\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertInterpolationSymbols(identifier, value) {\n    if (value != null && !(Array.isArray(value) && value.length == 2)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array, [start, end].\");\n    }\n    else if (_angular_core.isDevMode() && value != null) {\n        var /** @type {?} */ start_1 = (value[0]);\n        var /** @type {?} */ end_1 = (value[1]);\n        // black list checking\n        INTERPOLATION_BLACKLIST_REGEXPS.forEach(function (regexp) {\n            if (regexp.test(start_1) || regexp.test(end_1)) {\n                throw new Error(\"['\" + start_1 + \"', '\" + end_1 + \"'] contains unusable interpolation symbol.\");\n            }\n        });\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar InterpolationConfig = (function () {\n    /**\n     * @param {?} start\n     * @param {?} end\n     */\n    function InterpolationConfig(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    /**\n     * @param {?} markers\n     * @return {?}\n     */\n    InterpolationConfig.fromArray = function (markers) {\n        if (!markers) {\n            return DEFAULT_INTERPOLATION_CONFIG;\n        }\n        assertInterpolationSymbols('interpolation', markers);\n        return new InterpolationConfig(markers[0], markers[1]);\n    };\n    \n    return InterpolationConfig;\n}());\nvar DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TokenType = {};\nTokenType.Character = 0;\nTokenType.Identifier = 1;\nTokenType.Keyword = 2;\nTokenType.String = 3;\nTokenType.Operator = 4;\nTokenType.Number = 5;\nTokenType.Error = 6;\nTokenType[TokenType.Character] = \"Character\";\nTokenType[TokenType.Identifier] = \"Identifier\";\nTokenType[TokenType.Keyword] = \"Keyword\";\nTokenType[TokenType.String] = \"String\";\nTokenType[TokenType.Operator] = \"Operator\";\nTokenType[TokenType.Number] = \"Number\";\nTokenType[TokenType.Error] = \"Error\";\nvar KEYWORDS = ['var', 'let', 'as', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\nvar Lexer = (function () {\n    function Lexer() {\n    }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    Lexer.prototype.tokenize = function (text) {\n        var /** @type {?} */ scanner = new _Scanner(text);\n        var /** @type {?} */ tokens = [];\n        var /** @type {?} */ token = scanner.scanToken();\n        while (token != null) {\n            tokens.push(token);\n            token = scanner.scanToken();\n        }\n        return tokens;\n    };\n    return Lexer;\n}());\nLexer.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nLexer.ctorParameters = function () { return []; };\nvar Token = (function () {\n    /**\n     * @param {?} index\n     * @param {?} type\n     * @param {?} numValue\n     * @param {?} strValue\n     */\n    function Token(index, type, numValue, strValue) {\n        this.index = index;\n        this.type = type;\n        this.numValue = numValue;\n        this.strValue = strValue;\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    Token.prototype.isCharacter = function (code) {\n        return this.type == TokenType.Character && this.numValue == code;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isNumber = function () { return this.type == TokenType.Number; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isString = function () { return this.type == TokenType.String; };\n    /**\n     * @param {?} operater\n     * @return {?}\n     */\n    Token.prototype.isOperator = function (operater) {\n        return this.type == TokenType.Operator && this.strValue == operater;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isIdentifier = function () { return this.type == TokenType.Identifier; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeyword = function () { return this.type == TokenType.Keyword; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordLet = function () { return this.type == TokenType.Keyword && this.strValue == 'let'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordAs = function () { return this.type == TokenType.Keyword && this.strValue == 'as'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordNull = function () { return this.type == TokenType.Keyword && this.strValue == 'null'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordUndefined = function () {\n        return this.type == TokenType.Keyword && this.strValue == 'undefined';\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordTrue = function () { return this.type == TokenType.Keyword && this.strValue == 'true'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordFalse = function () { return this.type == TokenType.Keyword && this.strValue == 'false'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordThis = function () { return this.type == TokenType.Keyword && this.strValue == 'this'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isError = function () { return this.type == TokenType.Error; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toNumber = function () { return this.type == TokenType.Number ? this.numValue : -1; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toString = function () {\n        switch (this.type) {\n            case TokenType.Character:\n            case TokenType.Identifier:\n            case TokenType.Keyword:\n            case TokenType.Operator:\n            case TokenType.String:\n            case TokenType.Error:\n                return this.strValue;\n            case TokenType.Number:\n                return this.numValue.toString();\n            default:\n                return null;\n        }\n    };\n    return Token;\n}());\n/**\n * @param {?} index\n * @param {?} code\n * @return {?}\n */\nfunction newCharacterToken(index, code) {\n    return new Token(index, TokenType.Character, code, String.fromCharCode(code));\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newIdentifierToken(index, text) {\n    return new Token(index, TokenType.Identifier, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newKeywordToken(index, text) {\n    return new Token(index, TokenType.Keyword, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newOperatorToken(index, text) {\n    return new Token(index, TokenType.Operator, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newStringToken(index, text) {\n    return new Token(index, TokenType.String, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} n\n * @return {?}\n */\nfunction newNumberToken(index, n) {\n    return new Token(index, TokenType.Number, n, '');\n}\n/**\n * @param {?} index\n * @param {?} message\n * @return {?}\n */\nfunction newErrorToken(index, message) {\n    return new Token(index, TokenType.Error, 0, message);\n}\nvar EOF = new Token(-1, TokenType.Character, 0, '');\nvar _Scanner = (function () {\n    /**\n     * @param {?} input\n     */\n    function _Scanner(input) {\n        this.input = input;\n        this.peek = 0;\n        this.index = -1;\n        this.length = input.length;\n        this.advance();\n    }\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.advance = function () {\n        this.peek = ++this.index >= this.length ? $EOF : this.input.charCodeAt(this.index);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanToken = function () {\n        var /** @type {?} */ input = this.input, /** @type {?} */ length = this.length;\n        var /** @type {?} */ peek = this.peek, /** @type {?} */ index = this.index;\n        // Skip whitespace.\n        while (peek <= $SPACE) {\n            if (++index >= length) {\n                peek = $EOF;\n                break;\n            }\n            else {\n                peek = input.charCodeAt(index);\n            }\n        }\n        this.peek = peek;\n        this.index = index;\n        if (index >= length) {\n            return null;\n        }\n        // Handle identifiers and numbers.\n        if (isIdentifierStart(peek))\n            return this.scanIdentifier();\n        if (isDigit(peek))\n            return this.scanNumber(index);\n        var /** @type {?} */ start = index;\n        switch (peek) {\n            case $PERIOD:\n                this.advance();\n                return isDigit(this.peek) ? this.scanNumber(start) :\n                    newCharacterToken(start, $PERIOD);\n            case $LPAREN:\n            case $RPAREN:\n            case $LBRACE:\n            case $RBRACE:\n            case $LBRACKET:\n            case $RBRACKET:\n            case $COMMA:\n            case $COLON:\n            case $SEMICOLON:\n                return this.scanCharacter(start, peek);\n            case $SQ:\n            case $DQ:\n                return this.scanString();\n            case $HASH:\n            case $PLUS:\n            case $MINUS:\n            case $STAR:\n            case $SLASH:\n            case $PERCENT:\n            case $CARET:\n                return this.scanOperator(start, String.fromCharCode(peek));\n            case $QUESTION:\n                return this.scanComplexOperator(start, '?', $PERIOD, '.');\n            case $LT:\n            case $GT:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=');\n            case $BANG:\n            case $EQ:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=', $EQ, '=');\n            case $AMPERSAND:\n                return this.scanComplexOperator(start, '&', $AMPERSAND, '&');\n            case $BAR:\n                return this.scanComplexOperator(start, '|', $BAR, '|');\n            case $NBSP:\n                while (isWhitespace(this.peek))\n                    this.advance();\n                return this.scanToken();\n        }\n        this.advance();\n        return this.error(\"Unexpected character [\" + String.fromCharCode(peek) + \"]\", 0);\n    };\n    /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    _Scanner.prototype.scanCharacter = function (start, code) {\n        this.advance();\n        return newCharacterToken(start, code);\n    };\n    /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    _Scanner.prototype.scanOperator = function (start, str) {\n        this.advance();\n        return newOperatorToken(start, str);\n    };\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    _Scanner.prototype.scanComplexOperator = function (start, one, twoCode, two, threeCode, three) {\n        this.advance();\n        var /** @type {?} */ str = one;\n        if (this.peek == twoCode) {\n            this.advance();\n            str += two;\n        }\n        if (threeCode != null && this.peek == threeCode) {\n            this.advance();\n            str += three;\n        }\n        return newOperatorToken(start, str);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanIdentifier = function () {\n        var /** @type {?} */ start = this.index;\n        this.advance();\n        while (isIdentifierPart(this.peek))\n            this.advance();\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n            newIdentifierToken(start, str);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Scanner.prototype.scanNumber = function (start) {\n        var /** @type {?} */ simple = (this.index === start);\n        this.advance(); // Skip initial digit.\n        while (true) {\n            if (isDigit(this.peek)) {\n                // Do nothing.\n            }\n            else if (this.peek == $PERIOD) {\n                simple = false;\n            }\n            else if (isExponentStart(this.peek)) {\n                this.advance();\n                if (isExponentSign(this.peek))\n                    this.advance();\n                if (!isDigit(this.peek))\n                    return this.error('Invalid exponent', -1);\n                simple = false;\n            }\n            else {\n                break;\n            }\n            this.advance();\n        }\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        var /** @type {?} */ value = simple ? parseIntAutoRadix(str) : parseFloat(str);\n        return newNumberToken(start, value);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanString = function () {\n        var /** @type {?} */ start = this.index;\n        var /** @type {?} */ quote = this.peek;\n        this.advance(); // Skip initial quote.\n        var /** @type {?} */ buffer = '';\n        var /** @type {?} */ marker = this.index;\n        var /** @type {?} */ input = this.input;\n        while (this.peek != quote) {\n            if (this.peek == $BACKSLASH) {\n                buffer += input.substring(marker, this.index);\n                this.advance();\n                var /** @type {?} */ unescapedCode = void 0;\n                // Workaround for TS2.1-introduced type strictness\n                this.peek = this.peek;\n                if (this.peek == $u) {\n                    // 4 character hex code for unicode character.\n                    var /** @type {?} */ hex = input.substring(this.index + 1, this.index + 5);\n                    if (/^[0-9a-f]+$/i.test(hex)) {\n                        unescapedCode = parseInt(hex, 16);\n                    }\n                    else {\n                        return this.error(\"Invalid unicode escape [\\\\u\" + hex + \"]\", 0);\n                    }\n                    for (var /** @type {?} */ i = 0; i < 5; i++) {\n                        this.advance();\n                    }\n                }\n                else {\n                    unescapedCode = unescape(this.peek);\n                    this.advance();\n                }\n                buffer += String.fromCharCode(unescapedCode);\n                marker = this.index;\n            }\n            else if (this.peek == $EOF) {\n                return this.error('Unterminated quote', 0);\n            }\n            else {\n                this.advance();\n            }\n        }\n        var /** @type {?} */ last = input.substring(marker, this.index);\n        this.advance(); // Skip terminating quote.\n        return newStringToken(start, buffer + last);\n    };\n    /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    _Scanner.prototype.error = function (message, offset) {\n        var /** @type {?} */ position = this.index + offset;\n        return newErrorToken(position, \"Lexer Error: \" + message + \" at column \" + position + \" in expression [\" + this.input + \"]\");\n    };\n    return _Scanner;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierStart(code) {\n    return ($a <= code && code <= $z) || ($A <= code && code <= $Z) ||\n        (code == $_) || (code == $$);\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction isIdentifier(input) {\n    if (input.length == 0)\n        return false;\n    var /** @type {?} */ scanner = new _Scanner(input);\n    if (!isIdentifierStart(scanner.peek))\n        return false;\n    scanner.advance();\n    while (scanner.peek !== $EOF) {\n        if (!isIdentifierPart(scanner.peek))\n            return false;\n        scanner.advance();\n    }\n    return true;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierPart(code) {\n    return isAsciiLetter(code) || isDigit(code) || (code == $_) ||\n        (code == $$);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentStart(code) {\n    return code == $e || code == $E;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentSign(code) {\n    return code == $MINUS || code == $PLUS;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isQuote(code) {\n    return code === $SQ || code === $DQ || code === $BT;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction unescape(code) {\n    switch (code) {\n        case $n:\n            return $LF;\n        case $f:\n            return $FF;\n        case $r:\n            return $CR;\n        case $t:\n            return $TAB;\n        case $v:\n            return $VTAB;\n        default:\n            return code;\n    }\n}\n/**\n * @param {?} text\n * @return {?}\n */\nfunction parseIntAutoRadix(text) {\n    var /** @type {?} */ result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SplitInterpolation = (function () {\n    /**\n     * @param {?} strings\n     * @param {?} expressions\n     * @param {?} offsets\n     */\n    function SplitInterpolation(strings, expressions, offsets) {\n        this.strings = strings;\n        this.expressions = expressions;\n        this.offsets = offsets;\n    }\n    return SplitInterpolation;\n}());\nvar TemplateBindingParseResult = (function () {\n    /**\n     * @param {?} templateBindings\n     * @param {?} warnings\n     * @param {?} errors\n     */\n    function TemplateBindingParseResult(templateBindings, warnings, errors) {\n        this.templateBindings = templateBindings;\n        this.warnings = warnings;\n        this.errors = errors;\n    }\n    return TemplateBindingParseResult;\n}());\n/**\n * @param {?} config\n * @return {?}\n */\nfunction _createInterpolateRegExp(config) {\n    var /** @type {?} */ pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n    return new RegExp(pattern, 'g');\n}\nvar Parser = (function () {\n    /**\n     * @param {?} _lexer\n     */\n    function Parser(_lexer) {\n        this._lexer = _lexer;\n        this.errors = [];\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseAction = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(this._stripComments(input));\n        var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseBinding = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseSimpleBinding = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        var /** @type {?} */ errors = SimpleExpressionChecker.check(ast);\n        if (errors.length > 0) {\n            this._reportError(\"Host binding expression cannot contain \" + errors.join(' '), input, location);\n        }\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    Parser.prototype._reportError = function (message, input, errLocation, ctxLocation) {\n        this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._parseBindingAst = function (input, location, interpolationConfig) {\n        // Quotes expressions use 3rd-party expression language. We don't want to use\n        // our lexer or parser for that, so we check for that ahead of time.\n        var /** @type {?} */ quote = this._parseQuote(input, location);\n        if (quote != null) {\n            return quote;\n        }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n        return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype._parseQuote = function (input, location) {\n        if (input == null)\n            return null;\n        var /** @type {?} */ prefixSeparatorIndex = input.indexOf(':');\n        if (prefixSeparatorIndex == -1)\n            return null;\n        var /** @type {?} */ prefix = input.substring(0, prefixSeparatorIndex).trim();\n        if (!isIdentifier(prefix))\n            return null;\n        var /** @type {?} */ uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n        return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.parseTemplateBindings = function (prefixToken, input, location) {\n        var /** @type {?} */ tokens = this._lexer.tokenize(input);\n        if (prefixToken) {\n            // Prefix the tokens with the tokens from prefixToken but have them take no space (0 index).\n            var /** @type {?} */ prefixTokens = this._lexer.tokenize(prefixToken).map(function (t) {\n                t.index = 0;\n                return t;\n            });\n            tokens.unshift.apply(tokens, prefixTokens);\n        }\n        return new _ParseAST(input, location, tokens, input.length, false, this.errors, 0)\n            .parseTemplateBindings();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseInterpolation = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ split = this.splitInterpolation(input, location, interpolationConfig);\n        if (split == null)\n            return null;\n        var /** @type {?} */ expressions = [];\n        for (var /** @type {?} */ i = 0; i < split.expressions.length; ++i) {\n            var /** @type {?} */ expressionText = split.expressions[i];\n            var /** @type {?} */ sourceToLex = this._stripComments(expressionText);\n            var /** @type {?} */ tokens = this._lexer.tokenize(this._stripComments(split.expressions[i]));\n            var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n                .parseChain();\n            expressions.push(ast);\n        }\n        return new ASTWithSource(new Interpolation(new ParseSpan(0, input == null ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.splitInterpolation = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length <= 1) {\n            return null;\n        }\n        var /** @type {?} */ strings = [];\n        var /** @type {?} */ expressions = [];\n        var /** @type {?} */ offsets = [];\n        var /** @type {?} */ offset = 0;\n        for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n            var /** @type {?} */ part = parts[i];\n            if (i % 2 === 0) {\n                // fixed string\n                strings.push(part);\n                offset += part.length;\n            }\n            else if (part.trim().length > 0) {\n                offset += interpolationConfig.start.length;\n                expressions.push(part);\n                offsets.push(offset);\n                offset += part.length + interpolationConfig.end.length;\n            }\n            else {\n                this._reportError('Blank expressions are not allowed in interpolated strings', input, \"at column \" + this._findInterpolationErrorColumn(parts, i, interpolationConfig) + \" in\", location);\n                expressions.push('$implict');\n                offsets.push(offset);\n            }\n        }\n        return new SplitInterpolation(strings, expressions, offsets);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.wrapLiteralPrimitive = function (input, location) {\n        return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, input == null ? 0 : input.length), input), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._stripComments = function (input) {\n        var /** @type {?} */ i = this._commentStart(input);\n        return i != null ? input.substring(0, i).trim() : input;\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._commentStart = function (input) {\n        var /** @type {?} */ outerQuote = null;\n        for (var /** @type {?} */ i = 0; i < input.length - 1; i++) {\n            var /** @type {?} */ char = input.charCodeAt(i);\n            var /** @type {?} */ nextChar = input.charCodeAt(i + 1);\n            if (char === $SLASH && nextChar == $SLASH && outerQuote == null)\n                return i;\n            if (outerQuote === char) {\n                outerQuote = null;\n            }\n            else if (outerQuote == null && isQuote(char)) {\n                outerQuote = char;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._checkNoInterpolation = function (input, location, interpolationConfig) {\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length > 1) {\n            this._reportError(\"Got interpolation (\" + interpolationConfig.start + interpolationConfig.end + \") where expression was expected\", input, \"at column \" + this._findInterpolationErrorColumn(parts, 1, interpolationConfig) + \" in\", location);\n        }\n    };\n    /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._findInterpolationErrorColumn = function (parts, partInErrIdx, interpolationConfig) {\n        var /** @type {?} */ errLocation = '';\n        for (var /** @type {?} */ j = 0; j < partInErrIdx; j++) {\n            errLocation += j % 2 === 0 ?\n                parts[j] :\n                \"\" + interpolationConfig.start + parts[j] + interpolationConfig.end;\n        }\n        return errLocation.length;\n    };\n    return Parser;\n}());\nParser.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nParser.ctorParameters = function () { return [\n    { type: Lexer, },\n]; };\nvar _ParseAST = (function () {\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} tokens\n     * @param {?} inputLength\n     * @param {?} parseAction\n     * @param {?} errors\n     * @param {?} offset\n     */\n    function _ParseAST(input, location, tokens, inputLength, parseAction, errors, offset) {\n        this.input = input;\n        this.location = location;\n        this.tokens = tokens;\n        this.inputLength = inputLength;\n        this.parseAction = parseAction;\n        this.errors = errors;\n        this.offset = offset;\n        this.rparensExpected = 0;\n        this.rbracketsExpected = 0;\n        this.rbracesExpected = 0;\n        this.index = 0;\n    }\n    /**\n     * @param {?} offset\n     * @return {?}\n     */\n    _ParseAST.prototype.peek = function (offset) {\n        var /** @type {?} */ i = this.index + offset;\n        return i < this.tokens.length ? this.tokens[i] : EOF;\n    };\n    Object.defineProperty(_ParseAST.prototype, \"next\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.peek(0); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_ParseAST.prototype, \"inputIndex\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return (this.index < this.tokens.length) ? this.next.index + this.offset :\n                this.inputLength + this.offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _ParseAST.prototype.span = function (start) { return new ParseSpan(start, this.inputIndex); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.advance = function () { this.index++; };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalCharacter = function (code) {\n        if (this.next.isCharacter(code)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordLet = function () { return this.next.isKeywordLet(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordAs = function () { return this.next.isKeywordAs(); };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.expectCharacter = function (code) {\n        if (this.optionalCharacter(code))\n            return;\n        this.error(\"Missing expected \" + String.fromCharCode(code));\n    };\n    /**\n     * @param {?} op\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalOperator = function (op) {\n        if (this.next.isOperator(op)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @param {?} operator\n     * @return {?}\n     */\n    _ParseAST.prototype.expectOperator = function (operator) {\n        if (this.optionalOperator(operator))\n            return;\n        this.error(\"Missing expected operator \" + operator);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeyword = function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier or keyword\");\n            return '';\n        }\n        this.advance();\n        return n.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeywordOrString = function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier, keyword, or string\");\n            return '';\n        }\n        this.advance();\n        return n.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseChain = function () {\n        var /** @type {?} */ exprs = [];\n        var /** @type {?} */ start = this.inputIndex;\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ expr = this.parsePipe();\n            exprs.push(expr);\n            if (this.optionalCharacter($SEMICOLON)) {\n                if (!this.parseAction) {\n                    this.error('Binding expression cannot contain chained expression');\n                }\n                while (this.optionalCharacter($SEMICOLON)) {\n                } // read all semicolons\n            }\n            else if (this.index < this.tokens.length) {\n                this.error(\"Unexpected token '\" + this.next + \"'\");\n            }\n        }\n        if (exprs.length == 0)\n            return new EmptyExpr(this.span(start));\n        if (exprs.length == 1)\n            return exprs[0];\n        return new Chain(this.span(start), exprs);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePipe = function () {\n        var /** @type {?} */ result = this.parseExpression();\n        if (this.optionalOperator('|')) {\n            if (this.parseAction) {\n                this.error('Cannot have a pipe in an action expression');\n            }\n            do {\n                var /** @type {?} */ name = ((this.expectIdentifierOrKeyword()));\n                var /** @type {?} */ args = [];\n                while (this.optionalCharacter($COLON)) {\n                    args.push(this.parseExpression());\n                }\n                result = new BindingPipe(this.span(result.span.start), result, name, args);\n            } while (this.optionalOperator('|'));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpression = function () { return this.parseConditional(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseConditional = function () {\n        var /** @type {?} */ start = this.inputIndex;\n        var /** @type {?} */ result = this.parseLogicalOr();\n        if (this.optionalOperator('?')) {\n            var /** @type {?} */ yes = this.parsePipe();\n            var /** @type {?} */ no = void 0;\n            if (!this.optionalCharacter($COLON)) {\n                var /** @type {?} */ end = this.inputIndex;\n                var /** @type {?} */ expression = this.input.substring(start, end);\n                this.error(\"Conditional expression \" + expression + \" requires all 3 expressions\");\n                no = new EmptyExpr(this.span(start));\n            }\n            else {\n                no = this.parsePipe();\n            }\n            return new Conditional(this.span(start), result, yes, no);\n        }\n        else {\n            return result;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalOr = function () {\n        // '||'\n        var /** @type {?} */ result = this.parseLogicalAnd();\n        while (this.optionalOperator('||')) {\n            var /** @type {?} */ right = this.parseLogicalAnd();\n            result = new Binary(this.span(result.span.start), '||', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalAnd = function () {\n        // '&&'\n        var /** @type {?} */ result = this.parseEquality();\n        while (this.optionalOperator('&&')) {\n            var /** @type {?} */ right = this.parseEquality();\n            result = new Binary(this.span(result.span.start), '&&', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseEquality = function () {\n        // '==','!=','===','!=='\n        var /** @type {?} */ result = this.parseRelational();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '==':\n                case '===':\n                case '!=':\n                case '!==':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseRelational();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseRelational = function () {\n        // '<', '>', '<=', '>='\n        var /** @type {?} */ result = this.parseAdditive();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '<':\n                case '>':\n                case '<=':\n                case '>=':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseAdditive();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAdditive = function () {\n        // '+', '-'\n        var /** @type {?} */ result = this.parseMultiplicative();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '+':\n                case '-':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseMultiplicative();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseMultiplicative = function () {\n        // '*', '%', '/'\n        var /** @type {?} */ result = this.parsePrefix();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '*':\n                case '%':\n                case '/':\n                    this.advance();\n                    var /** @type {?} */ right = this.parsePrefix();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrefix = function () {\n        if (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ operator = this.next.strValue;\n            var /** @type {?} */ result = void 0;\n            switch (operator) {\n                case '+':\n                    this.advance();\n                    return this.parsePrefix();\n                case '-':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n                case '!':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new PrefixNot(this.span(start), result);\n            }\n        }\n        return this.parseCallChain();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallChain = function () {\n        var /** @type {?} */ result = this.parsePrimary();\n        while (true) {\n            if (this.optionalCharacter($PERIOD)) {\n                result = this.parseAccessMemberOrMethodCall(result, false);\n            }\n            else if (this.optionalOperator('?.')) {\n                result = this.parseAccessMemberOrMethodCall(result, true);\n            }\n            else if (this.optionalCharacter($LBRACKET)) {\n                this.rbracketsExpected++;\n                var /** @type {?} */ key = this.parsePipe();\n                this.rbracketsExpected--;\n                this.expectCharacter($RBRACKET);\n                if (this.optionalOperator('=')) {\n                    var /** @type {?} */ value = this.parseConditional();\n                    result = new KeyedWrite(this.span(result.span.start), result, key, value);\n                }\n                else {\n                    result = new KeyedRead(this.span(result.span.start), result, key);\n                }\n            }\n            else if (this.optionalCharacter($LPAREN)) {\n                this.rparensExpected++;\n                var /** @type {?} */ args = this.parseCallArguments();\n                this.rparensExpected--;\n                this.expectCharacter($RPAREN);\n                result = new FunctionCall(this.span(result.span.start), result, args);\n            }\n            else if (this.optionalOperator('!')) {\n                result = new NonNullAssert(this.span(result.span.start), result);\n            }\n            else {\n                return result;\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrimary = function () {\n        var /** @type {?} */ start = this.inputIndex;\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ result = this.parsePipe();\n            this.rparensExpected--;\n            this.expectCharacter($RPAREN);\n            return result;\n        }\n        else if (this.next.isKeywordNull()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), null);\n        }\n        else if (this.next.isKeywordUndefined()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), void 0);\n        }\n        else if (this.next.isKeywordTrue()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), true);\n        }\n        else if (this.next.isKeywordFalse()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), false);\n        }\n        else if (this.next.isKeywordThis()) {\n            this.advance();\n            return new ImplicitReceiver(this.span(start));\n        }\n        else if (this.optionalCharacter($LBRACKET)) {\n            this.rbracketsExpected++;\n            var /** @type {?} */ elements = this.parseExpressionList($RBRACKET);\n            this.rbracketsExpected--;\n            this.expectCharacter($RBRACKET);\n            return new LiteralArray(this.span(start), elements);\n        }\n        else if (this.next.isCharacter($LBRACE)) {\n            return this.parseLiteralMap();\n        }\n        else if (this.next.isIdentifier()) {\n            return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n        }\n        else if (this.next.isNumber()) {\n            var /** @type {?} */ value = this.next.toNumber();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), value);\n        }\n        else if (this.next.isString()) {\n            var /** @type {?} */ literalValue = this.next.toString();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), literalValue);\n        }\n        else if (this.index >= this.tokens.length) {\n            this.error(\"Unexpected end of expression: \" + this.input);\n            return new EmptyExpr(this.span(start));\n        }\n        else {\n            this.error(\"Unexpected token \" + this.next);\n            return new EmptyExpr(this.span(start));\n        }\n    };\n    /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpressionList = function (terminator) {\n        var /** @type {?} */ result = [];\n        if (!this.next.isCharacter(terminator)) {\n            do {\n                result.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLiteralMap = function () {\n        var /** @type {?} */ keys = [];\n        var /** @type {?} */ values = [];\n        var /** @type {?} */ start = this.inputIndex;\n        this.expectCharacter($LBRACE);\n        if (!this.optionalCharacter($RBRACE)) {\n            this.rbracesExpected++;\n            do {\n                var /** @type {?} */ key = ((this.expectIdentifierOrKeywordOrString()));\n                keys.push(key);\n                this.expectCharacter($COLON);\n                values.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n            this.rbracesExpected--;\n            this.expectCharacter($RBRACE);\n        }\n        return new LiteralMap(this.span(start), keys, values);\n    };\n    /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAccessMemberOrMethodCall = function (receiver, isSafe) {\n        if (isSafe === void 0) { isSafe = false; }\n        var /** @type {?} */ start = receiver.span.start;\n        var /** @type {?} */ id = ((this.expectIdentifierOrKeyword()));\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ args = this.parseCallArguments();\n            this.expectCharacter($RPAREN);\n            this.rparensExpected--;\n            var /** @type {?} */ span = this.span(start);\n            return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                new MethodCall(span, receiver, id, args);\n        }\n        else {\n            if (isSafe) {\n                if (this.optionalOperator('=')) {\n                    this.error('The \\'?.\\' operator cannot be used in the assignment');\n                    return new EmptyExpr(this.span(start));\n                }\n                else {\n                    return new SafePropertyRead(this.span(start), receiver, id);\n                }\n            }\n            else {\n                if (this.optionalOperator('=')) {\n                    if (!this.parseAction) {\n                        this.error('Bindings cannot contain assignments');\n                        return new EmptyExpr(this.span(start));\n                    }\n                    var /** @type {?} */ value = this.parseConditional();\n                    return new PropertyWrite(this.span(start), receiver, id, value);\n                }\n                else {\n                    return new PropertyRead(this.span(start), receiver, id);\n                }\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallArguments = function () {\n        if (this.next.isCharacter($RPAREN))\n            return [];\n        var /** @type {?} */ positionals = [];\n        do {\n            positionals.push(this.parsePipe());\n        } while (this.optionalCharacter($COMMA));\n        return (positionals);\n    };\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    _ParseAST.prototype.expectTemplateBindingKey = function () {\n        var /** @type {?} */ result = '';\n        var /** @type {?} */ operatorFound = false;\n        do {\n            result += this.expectIdentifierOrKeywordOrString();\n            operatorFound = this.optionalOperator('-');\n            if (operatorFound) {\n                result += '-';\n            }\n        } while (operatorFound);\n        return result.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseTemplateBindings = function () {\n        var /** @type {?} */ bindings = [];\n        var /** @type {?} */ prefix = ((null));\n        var /** @type {?} */ warnings = [];\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ keyIsVar = this.peekKeywordLet();\n            if (keyIsVar) {\n                this.advance();\n            }\n            var /** @type {?} */ rawKey = this.expectTemplateBindingKey();\n            var /** @type {?} */ key = rawKey;\n            if (!keyIsVar) {\n                if (prefix == null) {\n                    prefix = key;\n                }\n                else {\n                    key = prefix + key[0].toUpperCase() + key.substring(1);\n                }\n            }\n            this.optionalCharacter($COLON);\n            var /** @type {?} */ name = ((null));\n            var /** @type {?} */ expression = ((null));\n            if (keyIsVar) {\n                if (this.optionalOperator('=')) {\n                    name = this.expectTemplateBindingKey();\n                }\n                else {\n                    name = '\\$implicit';\n                }\n            }\n            else if (this.peekKeywordAs()) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                name = rawKey;\n                key = this.expectTemplateBindingKey(); // read local var name\n                keyIsVar = true;\n            }\n            else if (this.next !== EOF && !this.peekKeywordLet()) {\n                var /** @type {?} */ start_2 = this.inputIndex;\n                var /** @type {?} */ ast = this.parsePipe();\n                var /** @type {?} */ source = this.input.substring(start_2 - this.offset, this.inputIndex - this.offset);\n                expression = new ASTWithSource(ast, source, this.location, this.errors);\n            }\n            bindings.push(new TemplateBinding(this.span(start), key, keyIsVar, name, expression));\n            if (this.peekKeywordAs() && !keyIsVar) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                var /** @type {?} */ letName = this.expectTemplateBindingKey(); // read local var name\n                bindings.push(new TemplateBinding(this.span(letStart), letName, true, key, /** @type {?} */ ((null))));\n            }\n            if (!this.optionalCharacter($SEMICOLON)) {\n                this.optionalCharacter($COMMA);\n            }\n        }\n        return new TemplateBindingParseResult(bindings, warnings, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.error = function (message, index) {\n        if (index === void 0) { index = null; }\n        this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n        this.skip();\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.locationText = function (index) {\n        if (index === void 0) { index = null; }\n        if (index == null)\n            index = this.index;\n        return (index < this.tokens.length) ? \"at column \" + (this.tokens[index].index + 1) + \" in\" :\n            \"at the end of the expression\";\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.skip = function () {\n        var /** @type {?} */ n = this.next;\n        while (this.index < this.tokens.length && !n.isCharacter($SEMICOLON) &&\n            (this.rparensExpected <= 0 || !n.isCharacter($RPAREN)) &&\n            (this.rbracesExpected <= 0 || !n.isCharacter($RBRACE)) &&\n            (this.rbracketsExpected <= 0 || !n.isCharacter($RBRACKET))) {\n            if (this.next.isError()) {\n                this.errors.push(new ParserError(/** @type {?} */ ((this.next.toString())), this.input, this.locationText(), this.location));\n            }\n            this.advance();\n            n = this.next;\n        }\n    };\n    return _ParseAST;\n}());\nvar SimpleExpressionChecker = (function () {\n    function SimpleExpressionChecker() {\n        this.errors = [];\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    SimpleExpressionChecker.check = function (ast) {\n        var /** @type {?} */ s = new SimpleExpressionChecker();\n        ast.visit(s);\n        return s.errors;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitImplicitReceiver = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitInterpolation = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralPrimitive = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyWrite = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafePropertyRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitMethodCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafeMethodCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitFunctionCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralArray = function (ast, context) { this.visitAll(ast.expressions); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralMap = function (ast, context) { this.visitAll(ast.values); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitBinary = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPrefixNot = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitNonNullAssert = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitConditional = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPipe = function (ast, context) { this.errors.push('pipes'); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedWrite = function (ast, context) { };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitAll = function (asts) {\n        var _this = this;\n        return asts.map(function (node) { return node.visit(_this); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitChain = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitQuote = function (ast, context) { };\n    return SimpleExpressionChecker;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParseLocation = (function () {\n    /**\n     * @param {?} file\n     * @param {?} offset\n     * @param {?} line\n     * @param {?} col\n     */\n    function ParseLocation(file, offset, line, col) {\n        this.file = file;\n        this.offset = offset;\n        this.line = line;\n        this.col = col;\n    }\n    /**\n     * @return {?}\n     */\n    ParseLocation.prototype.toString = function () {\n        return this.offset != null ? this.file.url + \"@\" + this.line + \":\" + this.col : this.file.url;\n    };\n    /**\n     * @param {?} delta\n     * @return {?}\n     */\n    ParseLocation.prototype.moveBy = function (delta) {\n        var /** @type {?} */ source = this.file.content;\n        var /** @type {?} */ len = source.length;\n        var /** @type {?} */ offset = this.offset;\n        var /** @type {?} */ line = this.line;\n        var /** @type {?} */ col = this.col;\n        while (offset > 0 && delta < 0) {\n            offset--;\n            delta++;\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            if (ch == $LF) {\n                line--;\n                var /** @type {?} */ priorLine = source.substr(0, offset - 1).lastIndexOf(String.fromCharCode($LF));\n                col = priorLine > 0 ? offset - priorLine : offset;\n            }\n            else {\n                col--;\n            }\n        }\n        while (offset < len && delta > 0) {\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            offset++;\n            delta--;\n            if (ch == $LF) {\n                line++;\n                col = 0;\n            }\n            else {\n                col++;\n            }\n        }\n        return new ParseLocation(this.file, offset, line, col);\n    };\n    /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    ParseLocation.prototype.getContext = function (maxChars, maxLines) {\n        var /** @type {?} */ content = this.file.content;\n        var /** @type {?} */ startOffset = this.offset;\n        if (startOffset != null) {\n            if (startOffset > content.length - 1) {\n                startOffset = content.length - 1;\n            }\n            var /** @type {?} */ endOffset = startOffset;\n            var /** @type {?} */ ctxChars = 0;\n            var /** @type {?} */ ctxLines = 0;\n            while (ctxChars < maxChars && startOffset > 0) {\n                startOffset--;\n                ctxChars++;\n                if (content[startOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            ctxChars = 0;\n            ctxLines = 0;\n            while (ctxChars < maxChars && endOffset < content.length - 1) {\n                endOffset++;\n                ctxChars++;\n                if (content[endOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            return {\n                before: content.substring(startOffset, this.offset),\n                after: content.substring(this.offset, endOffset + 1),\n            };\n        }\n        return null;\n    };\n    return ParseLocation;\n}());\nvar ParseSourceFile = (function () {\n    /**\n     * @param {?} content\n     * @param {?} url\n     */\n    function ParseSourceFile(content, url) {\n        this.content = content;\n        this.url = url;\n    }\n    return ParseSourceFile;\n}());\nvar ParseSourceSpan = (function () {\n    /**\n     * @param {?} start\n     * @param {?} end\n     * @param {?=} details\n     */\n    function ParseSourceSpan(start, end, details) {\n        if (details === void 0) { details = null; }\n        this.start = start;\n        this.end = end;\n        this.details = details;\n    }\n    /**\n     * @return {?}\n     */\n    ParseSourceSpan.prototype.toString = function () {\n        return this.start.file.content.substring(this.start.offset, this.end.offset);\n    };\n    return ParseSourceSpan;\n}());\nvar ParseErrorLevel = {};\nParseErrorLevel.WARNING = 0;\nParseErrorLevel.ERROR = 1;\nParseErrorLevel[ParseErrorLevel.WARNING] = \"WARNING\";\nParseErrorLevel[ParseErrorLevel.ERROR] = \"ERROR\";\nvar ParseError = (function () {\n    /**\n     * @param {?} span\n     * @param {?} msg\n     * @param {?=} level\n     */\n    function ParseError(span, msg, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this.span = span;\n        this.msg = msg;\n        this.level = level;\n    }\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.toString = function () {\n        var /** @type {?} */ ctx = this.span.start.getContext(100, 3);\n        var /** @type {?} */ contextStr = ctx ? \" (\\\"\" + ctx.before + \"[\" + ParseErrorLevel[this.level] + \" ->]\" + ctx.after + \"\\\")\" : '';\n        var /** @type {?} */ details = this.span.details ? \", \" + this.span.details : '';\n        return \"\" + this.msg + contextStr + \": \" + this.span.start + details;\n    };\n    return ParseError;\n}());\n/**\n * @param {?} kind\n * @param {?} type\n * @return {?}\n */\nfunction typeSourceSpan(kind, type) {\n    var /** @type {?} */ moduleUrl = identifierModuleUrl(type);\n    var /** @type {?} */ sourceFileName = moduleUrl != null ? \"in \" + kind + \" \" + identifierName(type) + \" in \" + moduleUrl :\n        \"in \" + kind + \" \" + identifierName(type);\n    var /** @type {?} */ sourceFile = new ParseSourceFile('', sourceFileName);\n    return new ParseSourceSpan(new ParseLocation(sourceFile, -1, -1, -1), new ParseLocation(sourceFile, -1, -1, -1));\n}\n/**\n * A path is an ordered set of elements. Typically a path is to  a\n * particular offset in a source file. The head of the list is the top\n * most node. The tail is the node that contains the offset directly.\n *\n * For example, the expresion `a + b + c` might have an ast that looks\n * like:\n *     +\n *    / \\\n *   a   +\n *      / \\\n *     b   c\n *\n * The path to the node at offset 9 would be `['+' at 1-10, '+' at 7-10,\n * 'c' at 9-10]` and the path the node at offset 1 would be\n * `['+' at 1-10, 'a' at 1-2]`.\n */\nvar AstPath = (function () {\n    /**\n     * @param {?} path\n     * @param {?=} position\n     */\n    function AstPath(path, position) {\n        if (position === void 0) { position = -1; }\n        this.path = path;\n        this.position = position;\n    }\n    Object.defineProperty(AstPath.prototype, \"empty\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return !this.path || !this.path.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"head\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.path[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"tail\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.parentOf = function (node) {\n        return node && this.path[this.path.indexOf(node) - 1];\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.childOf = function (node) { return this.path[this.path.indexOf(node) + 1]; };\n    /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    AstPath.prototype.first = function (ctor) {\n        for (var /** @type {?} */ i = this.path.length - 1; i >= 0; i--) {\n            var /** @type {?} */ item = this.path[i];\n            if (item instanceof ctor)\n                return (item);\n        }\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.push = function (node) { this.path.push(node); };\n    /**\n     * @return {?}\n     */\n    AstPath.prototype.pop = function () { return ((this.path.pop())); };\n    return AstPath;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Text = (function () {\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Text.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Expansion = (function () {\n    /**\n     * @param {?} switchValue\n     * @param {?} type\n     * @param {?} cases\n     * @param {?} sourceSpan\n     * @param {?} switchValueSourceSpan\n     */\n    function Expansion(switchValue, type, cases, sourceSpan, switchValueSourceSpan) {\n        this.switchValue = switchValue;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n        this.switchValueSourceSpan = switchValueSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Expansion.prototype.visit = function (visitor, context) { return visitor.visitExpansion(this, context); };\n    return Expansion;\n}());\nvar ExpansionCase = (function () {\n    /**\n     * @param {?} value\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} valueSourceSpan\n     * @param {?} expSourceSpan\n     */\n    function ExpansionCase(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n        this.value = value;\n        this.expression = expression;\n        this.sourceSpan = sourceSpan;\n        this.valueSourceSpan = valueSourceSpan;\n        this.expSourceSpan = expSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpansionCase.prototype.visit = function (visitor, context) { return visitor.visitExpansionCase(this, context); };\n    return ExpansionCase;\n}());\nvar Attribute$1 = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?=} valueSpan\n     */\n    function Attribute$1(name, value, sourceSpan, valueSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n        this.valueSpan = valueSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Attribute$1.prototype.visit = function (visitor, context) { return visitor.visitAttribute(this, context); };\n    return Attribute$1;\n}());\nvar Element = (function () {\n    /**\n     * @param {?} name\n     * @param {?} attrs\n     * @param {?} children\n     * @param {?} sourceSpan\n     * @param {?=} startSourceSpan\n     * @param {?=} endSourceSpan\n     */\n    function Element(name, attrs, children, sourceSpan, startSourceSpan, endSourceSpan) {\n        if (startSourceSpan === void 0) { startSourceSpan = null; }\n        if (endSourceSpan === void 0) { endSourceSpan = null; }\n        this.name = name;\n        this.attrs = attrs;\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Element.prototype.visit = function (visitor, context) { return visitor.visitElement(this, context); };\n    return Element;\n}());\nvar Comment = (function () {\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function Comment(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Comment.prototype.visit = function (visitor, context) { return visitor.visitComment(this, context); };\n    return Comment;\n}());\n/**\n * @param {?} visitor\n * @param {?} nodes\n * @param {?=} context\n * @return {?}\n */\nfunction visitAll(visitor, nodes, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    nodes.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\nvar RecursiveVisitor = (function () {\n    function RecursiveVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitElement = function (ast, context) {\n        this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitAttribute = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitText = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitComment = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansion = function (ast, context) {\n        return this.visitChildren(context, function (visit) { visit(ast.cases); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansionCase = function (ast, context) { };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitChildren = function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children)\n                results.push(visitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveVisitor;\n}());\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction spanOf(ast) {\n    var /** @type {?} */ start = ast.sourceSpan.start.offset;\n    var /** @type {?} */ end = ast.sourceSpan.end.offset;\n    if (ast instanceof Element) {\n        if (ast.endSourceSpan) {\n            end = ast.endSourceSpan.end.offset;\n        }\n        else if (ast.children && ast.children.length) {\n            end = spanOf(ast.children[ast.children.length - 1]).end;\n        }\n    }\n    return { start: start, end: end };\n}\n/**\n * @param {?} nodes\n * @param {?} position\n * @return {?}\n */\nfunction findNode(nodes, position) {\n    var /** @type {?} */ path = [];\n    var /** @type {?} */ visitor = new (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        class_1.prototype.visit = function (ast, context) {\n            var /** @type {?} */ span = spanOf(ast);\n            if (span.start <= position && position < span.end) {\n                path.push(ast);\n            }\n            else {\n                // Returning a value here will result in the children being skipped.\n                return true;\n            }\n        };\n        return class_1;\n    }(RecursiveVisitor));\n    visitAll(visitor, nodes);\n    return new AstPath(path, position);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TokenType$1 = {};\nTokenType$1.TAG_OPEN_START = 0;\nTokenType$1.TAG_OPEN_END = 1;\nTokenType$1.TAG_OPEN_END_VOID = 2;\nTokenType$1.TAG_CLOSE = 3;\nTokenType$1.TEXT = 4;\nTokenType$1.ESCAPABLE_RAW_TEXT = 5;\nTokenType$1.RAW_TEXT = 6;\nTokenType$1.COMMENT_START = 7;\nTokenType$1.COMMENT_END = 8;\nTokenType$1.CDATA_START = 9;\nTokenType$1.CDATA_END = 10;\nTokenType$1.ATTR_NAME = 11;\nTokenType$1.ATTR_VALUE = 12;\nTokenType$1.DOC_TYPE = 13;\nTokenType$1.EXPANSION_FORM_START = 14;\nTokenType$1.EXPANSION_CASE_VALUE = 15;\nTokenType$1.EXPANSION_CASE_EXP_START = 16;\nTokenType$1.EXPANSION_CASE_EXP_END = 17;\nTokenType$1.EXPANSION_FORM_END = 18;\nTokenType$1.EOF = 19;\nTokenType$1[TokenType$1.TAG_OPEN_START] = \"TAG_OPEN_START\";\nTokenType$1[TokenType$1.TAG_OPEN_END] = \"TAG_OPEN_END\";\nTokenType$1[TokenType$1.TAG_OPEN_END_VOID] = \"TAG_OPEN_END_VOID\";\nTokenType$1[TokenType$1.TAG_CLOSE] = \"TAG_CLOSE\";\nTokenType$1[TokenType$1.TEXT] = \"TEXT\";\nTokenType$1[TokenType$1.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTokenType$1[TokenType$1.RAW_TEXT] = \"RAW_TEXT\";\nTokenType$1[TokenType$1.COMMENT_START] = \"COMMENT_START\";\nTokenType$1[TokenType$1.COMMENT_END] = \"COMMENT_END\";\nTokenType$1[TokenType$1.CDATA_START] = \"CDATA_START\";\nTokenType$1[TokenType$1.CDATA_END] = \"CDATA_END\";\nTokenType$1[TokenType$1.ATTR_NAME] = \"ATTR_NAME\";\nTokenType$1[TokenType$1.ATTR_VALUE] = \"ATTR_VALUE\";\nTokenType$1[TokenType$1.DOC_TYPE] = \"DOC_TYPE\";\nTokenType$1[TokenType$1.EXPANSION_FORM_START] = \"EXPANSION_FORM_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_VALUE] = \"EXPANSION_CASE_VALUE\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_START] = \"EXPANSION_CASE_EXP_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_END] = \"EXPANSION_CASE_EXP_END\";\nTokenType$1[TokenType$1.EXPANSION_FORM_END] = \"EXPANSION_FORM_END\";\nTokenType$1[TokenType$1.EOF] = \"EOF\";\nvar Token$1 = (function () {\n    /**\n     * @param {?} type\n     * @param {?} parts\n     * @param {?} sourceSpan\n     */\n    function Token$1(type, parts, sourceSpan) {\n        this.type = type;\n        this.parts = parts;\n        this.sourceSpan = sourceSpan;\n    }\n    return Token$1;\n}());\nvar TokenError = (function (_super) {\n    __extends(TokenError, _super);\n    /**\n     * @param {?} errorMsg\n     * @param {?} tokenType\n     * @param {?} span\n     */\n    function TokenError(errorMsg, tokenType, span) {\n        var _this = _super.call(this, span, errorMsg) || this;\n        _this.tokenType = tokenType;\n        return _this;\n    }\n    return TokenError;\n}(ParseError));\nvar TokenizeResult = (function () {\n    /**\n     * @param {?} tokens\n     * @param {?} errors\n     */\n    function TokenizeResult(tokens, errors) {\n        this.tokens = tokens;\n        this.errors = errors;\n    }\n    return TokenizeResult;\n}());\n/**\n * @param {?} source\n * @param {?} url\n * @param {?} getTagDefinition\n * @param {?=} tokenizeExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nfunction tokenize(source, url, getTagDefinition, tokenizeExpansionForms, interpolationConfig) {\n    if (tokenizeExpansionForms === void 0) { tokenizeExpansionForms = false; }\n    if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n    return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n        .tokenize();\n}\nvar _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n/**\n * @param {?} charCode\n * @return {?}\n */\nfunction _unexpectedCharacterErrorMsg(charCode) {\n    var /** @type {?} */ char = charCode === $EOF ? 'EOF' : String.fromCharCode(charCode);\n    return \"Unexpected character \\\"\" + char + \"\\\"\";\n}\n/**\n * @param {?} entitySrc\n * @return {?}\n */\nfunction _unknownEntityErrorMsg(entitySrc) {\n    return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\n}\nvar _ControlFlowError = (function () {\n    /**\n     * @param {?} error\n     */\n    function _ControlFlowError(error) {\n        this.error = error;\n    }\n    return _ControlFlowError;\n}());\nvar _Tokenizer = (function () {\n    /**\n     * @param {?} _file The html source\n     * @param {?} _getTagDefinition\n     * @param {?} _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n     * @param {?=} _interpolationConfig\n     */\n    function _Tokenizer(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig) {\n        if (_interpolationConfig === void 0) { _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._file = _file;\n        this._getTagDefinition = _getTagDefinition;\n        this._tokenizeIcu = _tokenizeIcu;\n        this._interpolationConfig = _interpolationConfig;\n        this._peek = -1;\n        this._nextPeek = -1;\n        this._index = -1;\n        this._line = 0;\n        this._column = -1;\n        this._expansionCaseStack = [];\n        this._inInterpolation = false;\n        this.tokens = [];\n        this.errors = [];\n        this._input = _file.content;\n        this._length = _file.content.length;\n        this._advance();\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    _Tokenizer.prototype._processCarriageReturns = function (content) {\n        // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n        // In order to keep the original position in the source, we can not\n        // pre-process it.\n        // Instead CRs are processed right before instantiating the tokens.\n        return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype.tokenize = function () {\n        while (this._peek !== $EOF) {\n            var /** @type {?} */ start = this._getLocation();\n            try {\n                if (this._attemptCharCode($LT)) {\n                    if (this._attemptCharCode($BANG)) {\n                        if (this._attemptCharCode($LBRACKET)) {\n                            this._consumeCdata(start);\n                        }\n                        else if (this._attemptCharCode($MINUS)) {\n                            this._consumeComment(start);\n                        }\n                        else {\n                            this._consumeDocType(start);\n                        }\n                    }\n                    else if (this._attemptCharCode($SLASH)) {\n                        this._consumeTagClose(start);\n                    }\n                    else {\n                        this._consumeTagOpen(start);\n                    }\n                }\n                else if (!(this._tokenizeIcu && this._tokenizeExpansionForm())) {\n                    this._consumeText();\n                }\n            }\n            catch (e) {\n                if (e instanceof _ControlFlowError) {\n                    this.errors.push(e.error);\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        this._beginToken(TokenType$1.EOF);\n        this._endToken([]);\n        return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _Tokenizer.prototype._tokenizeExpansionForm = function () {\n        if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n            this._consumeExpansionFormStart();\n            return true;\n        }\n        if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n            this._consumeExpansionCaseStart();\n            return true;\n        }\n        if (this._peek === $RBRACE) {\n            if (this._isInExpansionCase()) {\n                this._consumeExpansionCaseEnd();\n                return true;\n            }\n            if (this._isInExpansionForm()) {\n                this._consumeExpansionFormEnd();\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._getLocation = function () {\n        return new ParseLocation(this._file, this._index, this._line, this._column);\n    };\n    /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._getSpan = function (start, end) {\n        if (start === void 0) { start = this._getLocation(); }\n        if (end === void 0) { end = this._getLocation(); }\n        return new ParseSourceSpan(start, end);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._beginToken = function (type, start) {\n        if (start === void 0) { start = this._getLocation(); }\n        this._currentTokenStart = start;\n        this._currentTokenType = type;\n    };\n    /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._endToken = function (parts, end) {\n        if (end === void 0) { end = this._getLocation(); }\n        var /** @type {?} */ token = new Token$1(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n        this.tokens.push(token);\n        this._currentTokenStart = ((null));\n        this._currentTokenType = ((null));\n        return token;\n    };\n    /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    _Tokenizer.prototype._createError = function (msg, span) {\n        if (this._isInExpansionForm()) {\n            msg += \" (Do you have an unescaped \\\"{\\\" in your template? Use \\\"{{ '{' }}\\\") to escape it.)\";\n        }\n        var /** @type {?} */ error = new TokenError(msg, this._currentTokenType, span);\n        this._currentTokenStart = ((null));\n        this._currentTokenType = ((null));\n        return new _ControlFlowError(error);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._advance = function () {\n        if (this._index >= this._length) {\n            throw this._createError(_unexpectedCharacterErrorMsg($EOF), this._getSpan());\n        }\n        if (this._peek === $LF) {\n            this._line++;\n            this._column = 0;\n        }\n        else if (this._peek !== $LF && this._peek !== $CR) {\n            this._column++;\n        }\n        this._index++;\n        this._peek = this._index >= this._length ? $EOF : this._input.charCodeAt(this._index);\n        this._nextPeek =\n            this._index + 1 >= this._length ? $EOF : this._input.charCodeAt(this._index + 1);\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCode = function (charCode) {\n        if (this._peek === charCode) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeCaseInsensitive = function (charCode) {\n        if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCode = function (charCode) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptCharCode(charCode)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n        }\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStr = function (chars) {\n        var /** @type {?} */ len = chars.length;\n        if (this._index + len > this._length) {\n            return false;\n        }\n        var /** @type {?} */ initialPosition = this._savePosition();\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            if (!this._attemptCharCode(chars.charCodeAt(i))) {\n                // If attempting to parse the string fails, we want to reset the parser\n                // to where it was before the attempt\n                this._restorePosition(initialPosition);\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStrCaseInsensitive = function (chars) {\n        for (var /** @type {?} */ i = 0; i < chars.length; i++) {\n            if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireStr = function (chars) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptStr(chars)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeUntilFn = function (predicate) {\n        while (!predicate(this._peek)) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCodeUntilFn = function (predicate, len) {\n        var /** @type {?} */ start = this._getLocation();\n        this._attemptCharCodeUntilFn(predicate);\n        if (this._index - start.offset < len) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n        }\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptUntilChar = function (char) {\n        while (this._peek !== char) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._readChar = function (decodeEntities) {\n        if (decodeEntities && this._peek === $AMPERSAND) {\n            return this._decodeEntity();\n        }\n        else {\n            var /** @type {?} */ index = this._index;\n            this._advance();\n            return this._input[index];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._decodeEntity = function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._advance();\n        if (this._attemptCharCode($HASH)) {\n            var /** @type {?} */ isHex = this._attemptCharCode($x) || this._attemptCharCode($X);\n            var /** @type {?} */ numberStart = this._getLocation().offset;\n            this._attemptCharCodeUntilFn(isDigitEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            this._advance();\n            var /** @type {?} */ strNum = this._input.substring(numberStart, this._index - 1);\n            try {\n                var /** @type {?} */ charCode = parseInt(strNum, isHex ? 16 : 10);\n                return String.fromCharCode(charCode);\n            }\n            catch (e) {\n                var /** @type {?} */ entity = this._input.substring(start.offset + 1, this._index - 1);\n                throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n            }\n        }\n        else {\n            var /** @type {?} */ startPosition = this._savePosition();\n            this._attemptCharCodeUntilFn(isNamedEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                this._restorePosition(startPosition);\n                return '&';\n            }\n            this._advance();\n            var /** @type {?} */ name = this._input.substring(start.offset + 1, this._index - 1);\n            var /** @type {?} */ char = NAMED_ENTITIES[name];\n            if (!char) {\n                throw this._createError(_unknownEntityErrorMsg(name), this._getSpan(start));\n            }\n            return char;\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawText = function (decodeEntities, firstCharOfEnd, attemptEndRest) {\n        var /** @type {?} */ tagCloseStart;\n        var /** @type {?} */ textStart = this._getLocation();\n        this._beginToken(decodeEntities ? TokenType$1.ESCAPABLE_RAW_TEXT : TokenType$1.RAW_TEXT, textStart);\n        var /** @type {?} */ parts = [];\n        while (true) {\n            tagCloseStart = this._getLocation();\n            if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n                break;\n            }\n            if (this._index > tagCloseStart.offset) {\n                // add the characters consumed by the previous if statement to the output\n                parts.push(this._input.substring(tagCloseStart.offset, this._index));\n            }\n            while (this._peek !== firstCharOfEnd) {\n                parts.push(this._readChar(decodeEntities));\n            }\n        }\n        return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeComment = function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.COMMENT_START, start);\n        this._requireCharCode($MINUS);\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $MINUS, function () { return _this._attemptStr('->'); });\n        this._beginToken(TokenType$1.COMMENT_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeCdata = function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.CDATA_START, start);\n        this._requireStr('CDATA[');\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $RBRACKET, function () { return _this._attemptStr(']>'); });\n        this._beginToken(TokenType$1.CDATA_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeDocType = function (start) {\n        this._beginToken(TokenType$1.DOC_TYPE, start);\n        this._attemptUntilChar($GT);\n        this._advance();\n        this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumePrefixAndName = function () {\n        var /** @type {?} */ nameOrPrefixStart = this._index;\n        var /** @type {?} */ prefix = ((null));\n        while (this._peek !== $COLON && !isPrefixEnd(this._peek)) {\n            this._advance();\n        }\n        var /** @type {?} */ nameStart;\n        if (this._peek === $COLON) {\n            this._advance();\n            prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n            nameStart = this._index;\n        }\n        else {\n            nameStart = nameOrPrefixStart;\n        }\n        this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n        var /** @type {?} */ name = this._input.substring(nameStart, this._index);\n        return [prefix, name];\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpen = function (start) {\n        var /** @type {?} */ savedPos = this._savePosition();\n        var /** @type {?} */ tagName;\n        var /** @type {?} */ lowercaseTagName;\n        try {\n            if (!isAsciiLetter(this._peek)) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            var /** @type {?} */ nameStart = this._index;\n            this._consumeTagOpenStart(start);\n            tagName = this._input.substring(nameStart, this._index);\n            lowercaseTagName = tagName.toLowerCase();\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            while (this._peek !== $SLASH && this._peek !== $GT) {\n                this._consumeAttributeName();\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n                if (this._attemptCharCode($EQ)) {\n                    this._attemptCharCodeUntilFn(isNotWhitespace);\n                    this._consumeAttributeValue();\n                }\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n            }\n            this._consumeTagOpenEnd();\n        }\n        catch (e) {\n            if (e instanceof _ControlFlowError) {\n                // When the start tag is invalid, assume we want a \"<\"\n                this._restorePosition(savedPos);\n                // Back to back text tokens are merged at the end\n                this._beginToken(TokenType$1.TEXT, start);\n                this._endToken(['<']);\n                return;\n            }\n            throw e;\n        }\n        var /** @type {?} */ contentTokenType = this._getTagDefinition(tagName).contentType;\n        if (contentTokenType === TagContentType.RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, false);\n        }\n        else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, true);\n        }\n    };\n    /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawTextWithTagClose = function (lowercaseTagName, decodeEntities) {\n        var _this = this;\n        var /** @type {?} */ textToken = this._consumeRawText(decodeEntities, $LT, function () {\n            if (!_this._attemptCharCode($SLASH))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            return _this._attemptCharCode($GT);\n        });\n        this._beginToken(TokenType$1.TAG_CLOSE, textToken.sourceSpan.end);\n        this._endToken([/** @type {?} */ ((null)), lowercaseTagName]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenStart = function (start) {\n        this._beginToken(TokenType$1.TAG_OPEN_START, start);\n        var /** @type {?} */ parts = this._consumePrefixAndName();\n        this._endToken(parts);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeName = function () {\n        this._beginToken(TokenType$1.ATTR_NAME);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeValue = function () {\n        this._beginToken(TokenType$1.ATTR_VALUE);\n        var /** @type {?} */ value;\n        if (this._peek === $SQ || this._peek === $DQ) {\n            var /** @type {?} */ quoteChar = this._peek;\n            this._advance();\n            var /** @type {?} */ parts = [];\n            while (this._peek !== quoteChar) {\n                parts.push(this._readChar(true));\n            }\n            value = parts.join('');\n            this._advance();\n        }\n        else {\n            var /** @type {?} */ valueStart = this._index;\n            this._requireCharCodeUntilFn(isNameEnd, 1);\n            value = this._input.substring(valueStart, this._index);\n        }\n        this._endToken([this._processCarriageReturns(value)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenEnd = function () {\n        var /** @type {?} */ tokenType = this._attemptCharCode($SLASH) ? TokenType$1.TAG_OPEN_END_VOID : TokenType$1.TAG_OPEN_END;\n        this._beginToken(tokenType);\n        this._requireCharCode($GT);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagClose = function (start) {\n        this._beginToken(TokenType$1.TAG_CLOSE, start);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._requireCharCode($GT);\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormStart = function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_FORM_START);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ condition = this._readUntil($COMMA);\n        this._endToken([condition], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ type = this._readUntil($COMMA);\n        this._endToken([type], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseStart = function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_VALUE, this._getLocation());\n        var /** @type {?} */ value = this._readUntil($LBRACE).trim();\n        this._endToken([value], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_CASE_EXP_START);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseEnd = function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormEnd = function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeText = function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._beginToken(TokenType$1.TEXT, start);\n        var /** @type {?} */ parts = [];\n        do {\n            if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n                parts.push(this._interpolationConfig.start);\n                this._inInterpolation = true;\n            }\n            else if (this._interpolationConfig && this._inInterpolation &&\n                this._attemptStr(this._interpolationConfig.end)) {\n                parts.push(this._interpolationConfig.end);\n                this._inInterpolation = false;\n            }\n            else {\n                parts.push(this._readChar(true));\n            }\n        } while (!this._isTextEnd());\n        this._endToken([this._processCarriageReturns(parts.join(''))]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isTextEnd = function () {\n        if (this._peek === $LT || this._peek === $EOF) {\n            return true;\n        }\n        if (this._tokenizeIcu && !this._inInterpolation) {\n            if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                // start of an expansion form\n                return true;\n            }\n            if (this._peek === $RBRACE && this._isInExpansionCase()) {\n                // end of and expansion case\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._savePosition = function () {\n        return [this._peek, this._index, this._column, this._line, this.tokens.length];\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._readUntil = function (char) {\n        var /** @type {?} */ start = this._index;\n        this._attemptUntilChar(char);\n        return this._input.substring(start, this._index);\n    };\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    _Tokenizer.prototype._restorePosition = function (position) {\n        this._peek = position[0];\n        this._index = position[1];\n        this._column = position[2];\n        this._line = position[3];\n        var /** @type {?} */ nbTokens = position[4];\n        if (nbTokens < this.tokens.length) {\n            // remove any extra tokens\n            this.tokens = this.tokens.slice(0, nbTokens);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionCase = function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_CASE_EXP_START;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionForm = function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_FORM_START;\n    };\n    return _Tokenizer;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNotWhitespace(code) {\n    return !isWhitespace(code) || code === $EOF;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNameEnd(code) {\n    return isWhitespace(code) || code === $GT || code === $SLASH ||\n        code === $SQ || code === $DQ || code === $EQ;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isPrefixEnd(code) {\n    return (code < $a || $z < code) && (code < $A || $Z < code) &&\n        (code < $0 || code > $9);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigitEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiHexDigit(code);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNamedEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiLetter(code);\n}\n/**\n * @param {?} input\n * @param {?} offset\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction isExpansionFormStart(input, offset, interpolationConfig) {\n    var /** @type {?} */ isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n    return input.charCodeAt(offset) == $LBRACE && !isInterpolationStart;\n}\n/**\n * @param {?} peek\n * @return {?}\n */\nfunction isExpansionCaseStart(peek) {\n    return peek === $EQ || isAsciiLetter(peek);\n}\n/**\n * @param {?} code1\n * @param {?} code2\n * @return {?}\n */\nfunction compareCharCodeCaseInsensitive(code1, code2) {\n    return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction toUpperCaseCharCode(code) {\n    return code >= $a && code <= $z ? code - $a + $A : code;\n}\n/**\n * @param {?} srcTokens\n * @return {?}\n */\nfunction mergeTextTokens(srcTokens) {\n    var /** @type {?} */ dstTokens = [];\n    var /** @type {?} */ lastDstToken = undefined;\n    for (var /** @type {?} */ i = 0; i < srcTokens.length; i++) {\n        var /** @type {?} */ token = srcTokens[i];\n        if (lastDstToken && lastDstToken.type == TokenType$1.TEXT && token.type == TokenType$1.TEXT) {\n            lastDstToken.parts[0] += token.parts[0];\n            lastDstToken.sourceSpan.end = token.sourceSpan.end;\n        }\n        else {\n            lastDstToken = token;\n            dstTokens.push(lastDstToken);\n        }\n    }\n    return dstTokens;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TreeError = (function (_super) {\n    __extends(TreeError, _super);\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     */\n    function TreeError(elementName, span, msg) {\n        var _this = _super.call(this, span, msg) || this;\n        _this.elementName = elementName;\n        return _this;\n    }\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    TreeError.create = function (elementName, span, msg) {\n        return new TreeError(elementName, span, msg);\n    };\n    return TreeError;\n}(ParseError));\nvar ParseTreeResult = (function () {\n    /**\n     * @param {?} rootNodes\n     * @param {?} errors\n     */\n    function ParseTreeResult(rootNodes, errors) {\n        this.rootNodes = rootNodes;\n        this.errors = errors;\n    }\n    return ParseTreeResult;\n}());\nvar Parser$1 = (function () {\n    /**\n     * @param {?} getTagDefinition\n     */\n    function Parser$1(getTagDefinition) {\n        this.getTagDefinition = getTagDefinition;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser$1.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ tokensAndErrors = tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n        var /** @type {?} */ treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n        return new ParseTreeResult(treeAndErrors.rootNodes, ((tokensAndErrors.errors)).concat(treeAndErrors.errors));\n    };\n    return Parser$1;\n}());\nvar _TreeBuilder = (function () {\n    /**\n     * @param {?} tokens\n     * @param {?} getTagDefinition\n     */\n    function _TreeBuilder(tokens, getTagDefinition) {\n        this.tokens = tokens;\n        this.getTagDefinition = getTagDefinition;\n        this._index = -1;\n        this._rootNodes = [];\n        this._errors = [];\n        this._elementStack = [];\n        this._advance();\n    }\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype.build = function () {\n        while (this._peek.type !== TokenType$1.EOF) {\n            if (this._peek.type === TokenType$1.TAG_OPEN_START) {\n                this._consumeStartTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TAG_CLOSE) {\n                this._consumeEndTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.CDATA_START) {\n                this._closeVoidElement();\n                this._consumeCdata(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.COMMENT_START) {\n                this._closeVoidElement();\n                this._consumeComment(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TEXT || this._peek.type === TokenType$1.RAW_TEXT ||\n                this._peek.type === TokenType$1.ESCAPABLE_RAW_TEXT) {\n                this._closeVoidElement();\n                this._consumeText(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.EXPANSION_FORM_START) {\n                this._consumeExpansion(this._advance());\n            }\n            else {\n                // Skip all other tokens...\n                this._advance();\n            }\n        }\n        return new ParseTreeResult(this._rootNodes, this._errors);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advance = function () {\n        var /** @type {?} */ prev = this._peek;\n        if (this._index < this.tokens.length - 1) {\n            // Note: there is always an EOF token at the end\n            this._index++;\n        }\n        this._peek = this.tokens[this._index];\n        return prev;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advanceIf = function (type) {\n        if (this._peek.type === type) {\n            return this._advance();\n        }\n        return null;\n    };\n    /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeCdata = function (startToken) {\n        this._consumeText(this._advance());\n        this._advanceIf(TokenType$1.CDATA_END);\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeComment = function (token) {\n        var /** @type {?} */ text = this._advanceIf(TokenType$1.RAW_TEXT);\n        this._advanceIf(TokenType$1.COMMENT_END);\n        var /** @type {?} */ value = text != null ? text.parts[0].trim() : null;\n        this._addToParent(new Comment(value, token.sourceSpan));\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeExpansion = function (token) {\n        var /** @type {?} */ switchValue = this._advance();\n        var /** @type {?} */ type = this._advance();\n        var /** @type {?} */ cases = [];\n        // read =\n        while (this._peek.type === TokenType$1.EXPANSION_CASE_VALUE) {\n            var /** @type {?} */ expCase = this._parseExpansionCase();\n            if (!expCase)\n                return; // error\n            cases.push(expCase);\n        }\n        // read the final }\n        if (this._peek.type !== TokenType$1.EXPANSION_FORM_END) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n            return;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n        this._addToParent(new Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n        this._advance();\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._parseExpansionCase = function () {\n        var /** @type {?} */ value = this._advance();\n        // read {\n        if (this._peek.type !== TokenType$1.EXPANSION_CASE_EXP_START) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '{'.\"));\n            return null;\n        }\n        // read until }\n        var /** @type {?} */ start = this._advance();\n        var /** @type {?} */ exp = this._collectExpansionExpTokens(start);\n        if (!exp)\n            return null;\n        var /** @type {?} */ end = this._advance();\n        exp.push(new Token$1(TokenType$1.EOF, [], end.sourceSpan));\n        // parse everything in between { and }\n        var /** @type {?} */ parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n        if (parsedExp.errors.length > 0) {\n            this._errors = this._errors.concat(/** @type {?} */ (parsedExp.errors));\n            return null;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n        var /** @type {?} */ expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n        return new ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _TreeBuilder.prototype._collectExpansionExpTokens = function (start) {\n        var /** @type {?} */ exp = [];\n        var /** @type {?} */ expansionFormStack = [TokenType$1.EXPANSION_CASE_EXP_START];\n        while (true) {\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_START ||\n                this._peek.type === TokenType$1.EXPANSION_CASE_EXP_START) {\n                expansionFormStack.push(this._peek.type);\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_CASE_EXP_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_CASE_EXP_START)) {\n                    expansionFormStack.pop();\n                    if (expansionFormStack.length == 0)\n                        return exp;\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_FORM_START)) {\n                    expansionFormStack.pop();\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EOF) {\n                this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                return null;\n            }\n            exp.push(this._advance());\n        }\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeText = function (token) {\n        var /** @type {?} */ text = token.parts[0];\n        if (text.length > 0 && text[0] == '\\n') {\n            var /** @type {?} */ parent = this._getParentElement();\n            if (parent != null && parent.children.length == 0 &&\n                this.getTagDefinition(parent.name).ignoreFirstLf) {\n                text = text.substring(1);\n            }\n        }\n        if (text.length > 0) {\n            this._addToParent(new Text(text, token.sourceSpan));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._closeVoidElement = function () {\n        if (this._elementStack.length > 0) {\n            var /** @type {?} */ el = this._elementStack[this._elementStack.length - 1];\n            if (this.getTagDefinition(el.name).isVoid) {\n                this._elementStack.pop();\n            }\n        }\n    };\n    /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeStartTag = function (startTagToken) {\n        var /** @type {?} */ prefix = startTagToken.parts[0];\n        var /** @type {?} */ name = startTagToken.parts[1];\n        var /** @type {?} */ attrs = [];\n        while (this._peek.type === TokenType$1.ATTR_NAME) {\n            attrs.push(this._consumeAttr(this._advance()));\n        }\n        var /** @type {?} */ fullName = this._getElementFullName(prefix, name, this._getParentElement());\n        var /** @type {?} */ selfClosing = false;\n        // Note: There could have been a tokenizer error\n        // so that we don't get a token for the end tag...\n        if (this._peek.type === TokenType$1.TAG_OPEN_END_VOID) {\n            this._advance();\n            selfClosing = true;\n            var /** @type {?} */ tagDef = this.getTagDefinition(fullName);\n            if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n                this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\n            }\n        }\n        else if (this._peek.type === TokenType$1.TAG_OPEN_END) {\n            this._advance();\n            selfClosing = false;\n        }\n        var /** @type {?} */ end = this._peek.sourceSpan.start;\n        var /** @type {?} */ span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n        var /** @type {?} */ el = new Element(fullName, attrs, [], span, span, undefined);\n        this._pushElement(el);\n        if (selfClosing) {\n            this._popElement(fullName);\n            el.endSourceSpan = span;\n        }\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _TreeBuilder.prototype._pushElement = function (el) {\n        if (this._elementStack.length > 0) {\n            var /** @type {?} */ parentEl = this._elementStack[this._elementStack.length - 1];\n            if (this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n                this._elementStack.pop();\n            }\n        }\n        var /** @type {?} */ tagDef = this.getTagDefinition(el.name);\n        var _a = this._getParentElementSkippingContainers(), parent = _a.parent, container = _a.container;\n        if (parent && tagDef.requireExtraParent(parent.name)) {\n            var /** @type {?} */ newParent = new Element(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n            this._insertBeforeContainer(parent, container, newParent);\n        }\n        this._addToParent(el);\n        this._elementStack.push(el);\n    };\n    /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeEndTag = function (endTagToken) {\n        var /** @type {?} */ fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n        if (this._getParentElement()) {\n            ((this._getParentElement())).endSourceSpan = endTagToken.sourceSpan;\n        }\n        if (this.getTagDefinition(fullName).isVoid) {\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n        }\n        else if (!this._popElement(fullName)) {\n            var /** @type {?} */ errMsg = \"Unexpected closing tag \\\"\" + fullName + \"\\\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags\";\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n        }\n    };\n    /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._popElement = function (fullName) {\n        for (var /** @type {?} */ stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n            var /** @type {?} */ el = this._elementStack[stackIndex];\n            if (el.name == fullName) {\n                this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n                return true;\n            }\n            if (!this.getTagDefinition(el.name).closedByParent) {\n                return false;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeAttr = function (attrName) {\n        var /** @type {?} */ fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n        var /** @type {?} */ end = attrName.sourceSpan.end;\n        var /** @type {?} */ value = '';\n        var /** @type {?} */ valueSpan = ((undefined));\n        if (this._peek.type === TokenType$1.ATTR_VALUE) {\n            var /** @type {?} */ valueToken = this._advance();\n            value = valueToken.parts[0];\n            end = valueToken.sourceSpan.end;\n            valueSpan = valueToken.sourceSpan;\n        }\n        return new Attribute$1(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElement = function () {\n        return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n    };\n    /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElementSkippingContainers = function () {\n        var /** @type {?} */ container = null;\n        for (var /** @type {?} */ i = this._elementStack.length - 1; i >= 0; i--) {\n            if (!isNgContainer(this._elementStack[i].name)) {\n                return { parent: this._elementStack[i], container: container };\n            }\n            container = this._elementStack[i];\n        }\n        return { parent: this._elementStack[this._elementStack.length - 1], container: container };\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._addToParent = function (node) {\n        var /** @type {?} */ parent = this._getParentElement();\n        if (parent != null) {\n            parent.children.push(node);\n        }\n        else {\n            this._rootNodes.push(node);\n        }\n    };\n    /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._insertBeforeContainer = function (parent, container, node) {\n        if (!container) {\n            this._addToParent(node);\n            this._elementStack.push(node);\n        }\n        else {\n            if (parent) {\n                // replace the container with the new node in the children\n                var /** @type {?} */ index = parent.children.indexOf(container);\n                parent.children[index] = node;\n            }\n            else {\n                this._rootNodes.push(node);\n            }\n            node.children.push(container);\n            this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n        }\n    };\n    /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getElementFullName = function (prefix, localName, parentElement) {\n        if (prefix == null) {\n            prefix = ((this.getTagDefinition(localName).implicitNamespacePrefix));\n            if (prefix == null && parentElement != null) {\n                prefix = getNsPrefix(parentElement.name);\n            }\n        }\n        return mergeNsAndName(prefix, localName);\n    };\n    return _TreeBuilder;\n}());\n/**\n * @param {?} stack\n * @param {?} element\n * @return {?}\n */\nfunction lastOnStack(stack, element) {\n    return stack.length > 0 && stack[stack.length - 1] === element;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Message = (function () {\n    /**\n     * @param {?} nodes message AST\n     * @param {?} placeholders maps placeholder names to static content\n     * @param {?} placeholderToMessage maps placeholder names to messages (used for nested ICU messages)\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     */\n    function Message(nodes, placeholders, placeholderToMessage, meaning, description, id) {\n        this.nodes = nodes;\n        this.placeholders = placeholders;\n        this.placeholderToMessage = placeholderToMessage;\n        this.meaning = meaning;\n        this.description = description;\n        this.id = id;\n        if (nodes.length) {\n            this.sources = [{\n                    filePath: nodes[0].sourceSpan.start.file.url,\n                    startLine: nodes[0].sourceSpan.start.line + 1,\n                    startCol: nodes[0].sourceSpan.start.col + 1,\n                    endLine: nodes[nodes.length - 1].sourceSpan.end.line + 1,\n                    endCol: nodes[0].sourceSpan.start.col + 1\n                }];\n        }\n        else {\n            this.sources = [];\n        }\n    }\n    return Message;\n}());\nvar Text$1 = (function () {\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function Text$1(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Text$1.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n    return Text$1;\n}());\nvar Container = (function () {\n    /**\n     * @param {?} children\n     * @param {?} sourceSpan\n     */\n    function Container(children, sourceSpan) {\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Container.prototype.visit = function (visitor, context) { return visitor.visitContainer(this, context); };\n    return Container;\n}());\nvar Icu = (function () {\n    /**\n     * @param {?} expression\n     * @param {?} type\n     * @param {?} cases\n     * @param {?} sourceSpan\n     */\n    function Icu(expression, type, cases, sourceSpan) {\n        this.expression = expression;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Icu.prototype.visit = function (visitor, context) { return visitor.visitIcu(this, context); };\n    return Icu;\n}());\nvar TagPlaceholder = (function () {\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} startName\n     * @param {?} closeName\n     * @param {?} children\n     * @param {?} isVoid\n     * @param {?} sourceSpan\n     */\n    function TagPlaceholder(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n        this.tag = tag;\n        this.attrs = attrs;\n        this.startName = startName;\n        this.closeName = closeName;\n        this.children = children;\n        this.isVoid = isVoid;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    TagPlaceholder.prototype.visit = function (visitor, context) { return visitor.visitTagPlaceholder(this, context); };\n    return TagPlaceholder;\n}());\nvar Placeholder = (function () {\n    /**\n     * @param {?} value\n     * @param {?} name\n     * @param {?} sourceSpan\n     */\n    function Placeholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Placeholder.prototype.visit = function (visitor, context) { return visitor.visitPlaceholder(this, context); };\n    return Placeholder;\n}());\nvar IcuPlaceholder = (function () {\n    /**\n     * @param {?} value\n     * @param {?} name\n     * @param {?} sourceSpan\n     */\n    function IcuPlaceholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    IcuPlaceholder.prototype.visit = function (visitor, context) { return visitor.visitIcuPlaceholder(this, context); };\n    return IcuPlaceholder;\n}());\nvar CloneVisitor = (function () {\n    function CloneVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitText = function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var /** @type {?} */ children = container.children.map(function (n) { return n.visit(_this, context); });\n        return new Container(children, container.sourceSpan);\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = {};\n        Object.keys(icu.cases).forEach(function (key) { return cases[key] = icu.cases[key].visit(_this, context); });\n        var /** @type {?} */ msg = new Icu(icu.expression, icu.type, cases, icu.sourceSpan);\n        msg.expressionPlaceholder = icu.expressionPlaceholder;\n        return msg;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, context); });\n        return new TagPlaceholder(ph.tag, ph.attrs, ph.startName, ph.closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitPlaceholder = function (ph, context) {\n        return new Placeholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        return new IcuPlaceholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    return CloneVisitor;\n}());\nvar RecurseVisitor = (function () {\n    function RecurseVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitText = function (text, context) { };\n    \n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        container.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        Object.keys(icu.cases).forEach(function (k) { icu.cases[k].visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        ph.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitPlaceholder = function (ph, context) { };\n    \n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcuPlaceholder = function (ph, context) { };\n    \n    return RecurseVisitor;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TAG_TO_PLACEHOLDER_NAMES = {\n    'A': 'LINK',\n    'B': 'BOLD_TEXT',\n    'BR': 'LINE_BREAK',\n    'EM': 'EMPHASISED_TEXT',\n    'H1': 'HEADING_LEVEL1',\n    'H2': 'HEADING_LEVEL2',\n    'H3': 'HEADING_LEVEL3',\n    'H4': 'HEADING_LEVEL4',\n    'H5': 'HEADING_LEVEL5',\n    'H6': 'HEADING_LEVEL6',\n    'HR': 'HORIZONTAL_RULE',\n    'I': 'ITALIC_TEXT',\n    'LI': 'LIST_ITEM',\n    'LINK': 'MEDIA_LINK',\n    'OL': 'ORDERED_LIST',\n    'P': 'PARAGRAPH',\n    'Q': 'QUOTATION',\n    'S': 'STRIKETHROUGH_TEXT',\n    'SMALL': 'SMALL_TEXT',\n    'SUB': 'SUBSTRIPT',\n    'SUP': 'SUPERSCRIPT',\n    'TBODY': 'TABLE_BODY',\n    'TD': 'TABLE_CELL',\n    'TFOOT': 'TABLE_FOOTER',\n    'TH': 'TABLE_HEADER_CELL',\n    'THEAD': 'TABLE_HEADER',\n    'TR': 'TABLE_ROW',\n    'TT': 'MONOSPACED_TEXT',\n    'U': 'UNDERLINED_TEXT',\n    'UL': 'UNORDERED_LIST',\n};\n/**\n * Creates unique names for placeholder with different content.\n *\n * Returns the same placeholder name when the content is identical.\n *\n * \\@internal\n */\nvar PlaceholderRegistry = (function () {\n    function PlaceholderRegistry() {\n        this._placeHolderNameCounts = {};\n        this._signatureToName = {};\n    }\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getStartTagPlaceholderName = function (tag, attrs, isVoid) {\n        var /** @type {?} */ signature = this._hashTag(tag, attrs, isVoid);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(isVoid ? baseName : \"START_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getCloseTagPlaceholderName = function (tag) {\n        var /** @type {?} */ signature = this._hashClosingTag(tag);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(\"CLOSE_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getPlaceholderName = function (name, content) {\n        var /** @type {?} */ upperName = name.toUpperCase();\n        var /** @type {?} */ signature = \"PH: \" + upperName + \"=\" + content;\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ uniqueName = this._generateUniqueName(upperName);\n        this._signatureToName[signature] = uniqueName;\n        return uniqueName;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getUniquePlaceholder = function (name) {\n        return this._generateUniqueName(name.toUpperCase());\n    };\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashTag = function (tag, attrs, isVoid) {\n        var /** @type {?} */ start = \"<\" + tag;\n        var /** @type {?} */ strAttrs = Object.keys(attrs).sort().map(function (name) { return \" \" + name + \"=\" + attrs[name]; }).join('');\n        var /** @type {?} */ end = isVoid ? '/>' : \"></\" + tag + \">\";\n        return start + strAttrs + end;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashClosingTag = function (tag) { return this._hashTag(\"/\" + tag, {}, false); };\n    /**\n     * @param {?} base\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._generateUniqueName = function (base) {\n        var /** @type {?} */ seen = this._placeHolderNameCounts.hasOwnProperty(base);\n        if (!seen) {\n            this._placeHolderNameCounts[base] = 1;\n            return base;\n        }\n        var /** @type {?} */ id = this._placeHolderNameCounts[base];\n        this._placeHolderNameCounts[base] = id + 1;\n        return base + \"_\" + id;\n    };\n    return PlaceholderRegistry;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _expParser = new Parser(new Lexer());\n/**\n * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction createI18nMessageFactory(interpolationConfig) {\n    var /** @type {?} */ visitor = new _I18nVisitor(_expParser, interpolationConfig);\n    return function (nodes, meaning, description, id) { return visitor.toI18nMessage(nodes, meaning, description, id); };\n}\nvar _I18nVisitor = (function () {\n    /**\n     * @param {?} _expressionParser\n     * @param {?} _interpolationConfig\n     */\n    function _I18nVisitor(_expressionParser, _interpolationConfig) {\n        this._expressionParser = _expressionParser;\n        this._interpolationConfig = _interpolationConfig;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    _I18nVisitor.prototype.toI18nMessage = function (nodes, meaning, description, id) {\n        this._isIcu = nodes.length == 1 && nodes[0] instanceof Expansion;\n        this._icuDepth = 0;\n        this._placeholderRegistry = new PlaceholderRegistry();\n        this._placeholderToContent = {};\n        this._placeholderToMessage = {};\n        var /** @type {?} */ i18nodes = visitAll(this, nodes, {});\n        return new Message(i18nodes, this._placeholderToContent, this._placeholderToMessage, meaning, description, id);\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitElement = function (el, context) {\n        var /** @type {?} */ children = visitAll(this, el.children);\n        var /** @type {?} */ attrs = {};\n        el.attrs.forEach(function (attr) {\n            // Do not visit the attributes, translatable ones are top-level ASTs\n            attrs[attr.name] = attr.value;\n        });\n        var /** @type {?} */ isVoid = getHtmlTagDefinition(el.name).isVoid;\n        var /** @type {?} */ startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n        this._placeholderToContent[startPhName] = ((el.sourceSpan)).toString();\n        var /** @type {?} */ closePhName = '';\n        if (!isVoid) {\n            closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n            this._placeholderToContent[closePhName] = \"</\" + el.name + \">\";\n        }\n        return new TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, /** @type {?} */ ((el.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitAttribute = function (attribute, context) {\n        return this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitText = function (text, context) {\n        return this._visitTextWithInterpolation(text.value, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitComment = function (comment, context) { return null; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansion = function (icu, context) {\n        var _this = this;\n        this._icuDepth++;\n        var /** @type {?} */ i18nIcuCases = {};\n        var /** @type {?} */ i18nIcu = new Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n        icu.cases.forEach(function (caze) {\n            i18nIcuCases[caze.value] = new Container(caze.expression.map(function (node) { return node.visit(_this, {}); }), caze.expSourceSpan);\n        });\n        this._icuDepth--;\n        if (this._isIcu || this._icuDepth > 0) {\n            // Returns an ICU node when:\n            // - the message (vs a part of the message) is an ICU message, or\n            // - the ICU message is nested.\n            var /** @type {?} */ expPh = this._placeholderRegistry.getUniquePlaceholder(\"VAR_\" + icu.type);\n            i18nIcu.expressionPlaceholder = expPh;\n            this._placeholderToContent[expPh] = icu.switchValue;\n            return i18nIcu;\n        }\n        // Else returns a placeholder\n        // ICU placeholders should not be replaced with their original content but with the their\n        // translations. We need to create a new visitor (they are not re-entrant) to compute the\n        // message id.\n        // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n        var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n        var /** @type {?} */ visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n        this._placeholderToMessage[phName] = visitor.toI18nMessage([icu], '', '', '');\n        return new IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansionCase = function (icuCase, context) {\n        throw new Error('Unreachable code');\n    };\n    /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _I18nVisitor.prototype._visitTextWithInterpolation = function (text, sourceSpan) {\n        var /** @type {?} */ splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n        if (!splitInterpolation) {\n            // No expression, return a single text\n            return new Text$1(text, sourceSpan);\n        }\n        // Return a group of text + expressions\n        var /** @type {?} */ nodes = [];\n        var /** @type {?} */ container = new Container(nodes, sourceSpan);\n        var _a = this._interpolationConfig, sDelimiter = _a.start, eDelimiter = _a.end;\n        for (var /** @type {?} */ i = 0; i < splitInterpolation.strings.length - 1; i++) {\n            var /** @type {?} */ expression = splitInterpolation.expressions[i];\n            var /** @type {?} */ baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n            var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n            if (splitInterpolation.strings[i].length) {\n                // No need to add empty strings\n                nodes.push(new Text$1(splitInterpolation.strings[i], sourceSpan));\n            }\n            nodes.push(new Placeholder(expression, phName, sourceSpan));\n            this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n        }\n        // The last index contains no expression\n        var /** @type {?} */ lastStringIdx = splitInterpolation.strings.length - 1;\n        if (splitInterpolation.strings[lastStringIdx].length) {\n            nodes.push(new Text$1(splitInterpolation.strings[lastStringIdx], sourceSpan));\n        }\n        return container;\n    };\n    return _I18nVisitor;\n}());\nvar _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*(\"|')([\\s\\S]*?)\\1[\\s\\S]*\\)/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction _extractPlaceholderName(input) {\n    return input.split(_CUSTOM_PH_EXP)[2];\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An i18n error.\n */\nvar I18nError = (function (_super) {\n    __extends(I18nError, _super);\n    /**\n     * @param {?} span\n     * @param {?} msg\n     */\n    function I18nError(span, msg) {\n        return _super.call(this, span, msg) || this;\n    }\n    return I18nError;\n}(ParseError));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _I18N_ATTR = 'i18n';\nvar _I18N_ATTR_PREFIX = 'i18n-';\nvar _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\nvar MEANING_SEPARATOR = '|';\nvar ID_SEPARATOR = '@@';\n/**\n * Extract translatable messages from an html AST\n * @param {?} nodes\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.extract(nodes, interpolationConfig);\n}\n/**\n * @param {?} nodes\n * @param {?} translations\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.merge(nodes, translations, interpolationConfig);\n}\nvar ExtractionResult = (function () {\n    /**\n     * @param {?} messages\n     * @param {?} errors\n     */\n    function ExtractionResult(messages, errors) {\n        this.messages = messages;\n        this.errors = errors;\n    }\n    return ExtractionResult;\n}());\nvar _VisitorMode = {};\n_VisitorMode.Extract = 0;\n_VisitorMode.Merge = 1;\n_VisitorMode[_VisitorMode.Extract] = \"Extract\";\n_VisitorMode[_VisitorMode.Merge] = \"Merge\";\n/**\n * This Visitor is used:\n * 1. to extract all the translatable strings from an html AST (see `extract()`),\n * 2. to replace the translatable strings with the actual translations (see `merge()`)\n *\n * \\@internal\n */\nvar _Visitor = (function () {\n    /**\n     * @param {?} _implicitTags\n     * @param {?} _implicitAttrs\n     */\n    function _Visitor(_implicitTags, _implicitAttrs) {\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n    }\n    /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.extract = function (nodes, interpolationConfig) {\n        var _this = this;\n        this._init(_VisitorMode.Extract, interpolationConfig);\n        nodes.forEach(function (node) { return node.visit(_this, null); });\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ExtractionResult(this._messages, this._errors);\n    };\n    /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.merge = function (nodes, translations, interpolationConfig) {\n        this._init(_VisitorMode.Merge, interpolationConfig);\n        this._translations = translations;\n        // Construct a single fake root element\n        var /** @type {?} */ wrapper = new Element('wrapper', [], nodes, /** @type {?} */ ((undefined)), undefined, undefined);\n        var /** @type {?} */ translatedNode = wrapper.visit(this, null);\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ParseTreeResult(translatedNode.children, this._errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansionCase = function (icuCase, context) {\n        // Parse cases for translatable html attributes\n        var /** @type {?} */ expression = visitAll(this, icuCase.expression, context);\n        if (this._mode === _VisitorMode.Merge) {\n            return new ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n        }\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansion = function (icu, context) {\n        this._mayBeAddBlockChildren(icu);\n        var /** @type {?} */ wasInIcu = this._inIcu;\n        if (!this._inIcu) {\n            // nested ICU messages should not be extracted but top-level translated as a whole\n            if (this._isInTranslatableSection) {\n                this._addMessage([icu]);\n            }\n            this._inIcu = true;\n        }\n        var /** @type {?} */ cases = visitAll(this, icu.cases, context);\n        if (this._mode === _VisitorMode.Merge) {\n            icu = new Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n        }\n        this._inIcu = wasInIcu;\n        return icu;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitComment = function (comment, context) {\n        var /** @type {?} */ isOpening = _isOpeningComment(comment);\n        if (isOpening && this._isInTranslatableSection) {\n            this._reportError(comment, 'Could not start a block inside a translatable section');\n            return;\n        }\n        var /** @type {?} */ isClosing = _isClosingComment(comment);\n        if (isClosing && !this._inI18nBlock) {\n            this._reportError(comment, 'Trying to close an unopened block');\n            return;\n        }\n        if (!this._inI18nNode && !this._inIcu) {\n            if (!this._inI18nBlock) {\n                if (isOpening) {\n                    this._inI18nBlock = true;\n                    this._blockStartDepth = this._depth;\n                    this._blockChildren = [];\n                    this._blockMeaningAndDesc = ((comment.value)).replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n                    this._openTranslatableSection(comment);\n                }\n            }\n            else {\n                if (isClosing) {\n                    if (this._depth == this._blockStartDepth) {\n                        this._closeTranslatableSection(comment, this._blockChildren);\n                        this._inI18nBlock = false;\n                        var /** @type {?} */ message = ((this._addMessage(this._blockChildren, this._blockMeaningAndDesc)));\n                        // merge attributes in sections\n                        var /** @type {?} */ nodes = this._translateMessage(comment, message);\n                        return visitAll(this, nodes);\n                    }\n                    else {\n                        this._reportError(comment, 'I18N blocks should not cross element boundaries');\n                        return;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = function (text, context) {\n        if (this._isInTranslatableSection) {\n            this._mayBeAddBlockChildren(text);\n        }\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitElement = function (el, context) {\n        var _this = this;\n        this._mayBeAddBlockChildren(el);\n        this._depth++;\n        var /** @type {?} */ wasInI18nNode = this._inI18nNode;\n        var /** @type {?} */ wasInImplicitNode = this._inImplicitNode;\n        var /** @type {?} */ childNodes = [];\n        var /** @type {?} */ translatedChildNodes = ((undefined));\n        // Extract:\n        // - top level nodes with the (implicit) \"i18n\" attribute if not already in a section\n        // - ICU messages\n        var /** @type {?} */ i18nAttr = _getI18nAttr(el);\n        var /** @type {?} */ i18nMeta = i18nAttr ? i18nAttr.value : '';\n        var /** @type {?} */ isImplicit = this._implicitTags.some(function (tag) { return el.name === tag; }) && !this._inIcu &&\n            !this._isInTranslatableSection;\n        var /** @type {?} */ isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n        this._inImplicitNode = wasInImplicitNode || isImplicit;\n        if (!this._isInTranslatableSection && !this._inIcu) {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._inI18nNode = true;\n                var /** @type {?} */ message = ((this._addMessage(el.children, i18nMeta)));\n                translatedChildNodes = this._translateMessage(el, message);\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                var /** @type {?} */ isTranslatable = i18nAttr || isTopLevelImplicit;\n                if (isTranslatable)\n                    this._openTranslatableSection(el);\n                visitAll(this, el.children);\n                if (isTranslatable)\n                    this._closeTranslatableSection(el, el.children);\n            }\n        }\n        else {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                // Descend into child nodes for extraction\n                visitAll(this, el.children);\n            }\n        }\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ visitNodes = translatedChildNodes || el.children;\n            visitNodes.forEach(function (child) {\n                var /** @type {?} */ visited = child.visit(_this, context);\n                if (visited && !_this._isInTranslatableSection) {\n                    // Do not add the children from translatable sections (= i18n blocks here)\n                    // They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)\n                    childNodes = childNodes.concat(visited);\n                }\n            });\n        }\n        this._visitAttributesOf(el);\n        this._depth--;\n        this._inI18nNode = wasInI18nNode;\n        this._inImplicitNode = wasInImplicitNode;\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ translatedAttrs = this._translateAttributes(el);\n            return new Element(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitAttribute = function (attribute, context) {\n        throw new Error('unreachable code');\n    };\n    /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype._init = function (mode, interpolationConfig) {\n        this._mode = mode;\n        this._inI18nBlock = false;\n        this._inI18nNode = false;\n        this._depth = 0;\n        this._inIcu = false;\n        this._msgCountAtSectionStart = undefined;\n        this._errors = [];\n        this._messages = [];\n        this._inImplicitNode = false;\n        this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._visitAttributesOf = function (el) {\n        var _this = this;\n        var /** @type {?} */ explicitAttrNameToValue = {};\n        var /** @type {?} */ implicitAttrNames = this._implicitAttrs[el.name] || [];\n        el.attrs.filter(function (attr) { return attr.name.startsWith(_I18N_ATTR_PREFIX); })\n            .forEach(function (attr) { return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n            attr.value; });\n        el.attrs.forEach(function (attr) {\n            if (attr.name in explicitAttrNameToValue) {\n                _this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n            }\n            else if (implicitAttrNames.some(function (name) { return attr.name === name; })) {\n                _this._addMessage([attr]);\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    _Visitor.prototype._addMessage = function (ast, msgMeta) {\n        if (ast.length == 0 ||\n            ast.length == 1 && ast[0] instanceof Attribute$1 && !((ast[0])).value) {\n            // Do not create empty messages\n            return null;\n        }\n        var _a = _parseMessageMeta(msgMeta), meaning = _a.meaning, description = _a.description, id = _a.id;\n        var /** @type {?} */ message = this._createI18nMessage(ast, meaning, description, id);\n        this._messages.push(message);\n        return message;\n    };\n    /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    _Visitor.prototype._translateMessage = function (el, message) {\n        if (message && this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ nodes = this._translations.get(message);\n            if (nodes) {\n                return nodes;\n            }\n            this._reportError(el, \"Translation unavailable for message id=\\\"\" + this._translations.digest(message) + \"\\\"\");\n        }\n        return [];\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._translateAttributes = function (el) {\n        var _this = this;\n        var /** @type {?} */ attributes = el.attrs;\n        var /** @type {?} */ i18nParsedMessageMeta = {};\n        attributes.forEach(function (attr) {\n            if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                    _parseMessageMeta(attr.value);\n            }\n        });\n        var /** @type {?} */ translatedAttributes = [];\n        attributes.forEach(function (attr) {\n            if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                // strip i18n specific attributes\n                return;\n            }\n            if (attr.value && attr.value != '' && i18nParsedMessageMeta.hasOwnProperty(attr.name)) {\n                var _a = i18nParsedMessageMeta[attr.name], meaning = _a.meaning, description = _a.description, id = _a.id;\n                var /** @type {?} */ message = _this._createI18nMessage([attr], meaning, description, id);\n                var /** @type {?} */ nodes = _this._translations.get(message);\n                if (nodes) {\n                    if (nodes.length == 0) {\n                        translatedAttributes.push(new Attribute$1(attr.name, '', attr.sourceSpan));\n                    }\n                    else if (nodes[0] instanceof Text) {\n                        var /** @type {?} */ value = ((nodes[0])).value;\n                        translatedAttributes.push(new Attribute$1(attr.name, value, attr.sourceSpan));\n                    }\n                    else {\n                        _this._reportError(el, \"Unexpected translation for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                    }\n                }\n                else {\n                    _this._reportError(el, \"Translation unavailable for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                }\n            }\n            else {\n                translatedAttributes.push(attr);\n            }\n        });\n        return translatedAttributes;\n    };\n    /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._mayBeAddBlockChildren = function (node) {\n        if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n            this._blockChildren.push(node);\n        }\n    };\n    /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._openTranslatableSection = function (node) {\n        if (this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section start');\n        }\n        else {\n            this._msgCountAtSectionStart = this._messages.length;\n        }\n    };\n    Object.defineProperty(_Visitor.prototype, \"_isInTranslatableSection\", {\n        /**\n         * A translatable section could be:\n         * - the content of translatable element,\n         * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n         * @return {?}\n         */\n        get: function () {\n            return this._msgCountAtSectionStart !== void 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    _Visitor.prototype._closeTranslatableSection = function (node, directChildren) {\n        if (!this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section end');\n            return;\n        }\n        var /** @type {?} */ startIndex = this._msgCountAtSectionStart;\n        var /** @type {?} */ significantChildren = directChildren.reduce(function (count, node) { return count + (node instanceof Comment ? 0 : 1); }, 0);\n        if (significantChildren == 1) {\n            for (var /** @type {?} */ i = this._messages.length - 1; i >= ((startIndex)); i--) {\n                var /** @type {?} */ ast = this._messages[i].nodes;\n                if (!(ast.length == 1 && ast[0] instanceof Text$1)) {\n                    this._messages.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this._msgCountAtSectionStart = undefined;\n    };\n    /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    _Visitor.prototype._reportError = function (node, msg) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), msg));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isOpeningComment(n) {\n    return !!(n instanceof Comment && n.value && n.value.startsWith('i18n'));\n}\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isClosingComment(n) {\n    return !!(n instanceof Comment && n.value && n.value === '/i18n');\n}\n/**\n * @param {?} p\n * @return {?}\n */\nfunction _getI18nAttr(p) {\n    return p.attrs.find(function (attr) { return attr.name === _I18N_ATTR; }) || null;\n}\n/**\n * @param {?=} i18n\n * @return {?}\n */\nfunction _parseMessageMeta(i18n) {\n    if (!i18n)\n        return { meaning: '', description: '', id: '' };\n    var /** @type {?} */ idIndex = i18n.indexOf(ID_SEPARATOR);\n    var /** @type {?} */ descIndex = i18n.indexOf(MEANING_SEPARATOR);\n    var _a = (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''], meaningAndDesc = _a[0], id = _a[1];\n    var _b = (descIndex > -1) ?\n        [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n        ['', meaningAndDesc], meaning = _b[0], description = _b[1];\n    return { meaning: meaning, description: description, id: id };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlTagDefinition = (function () {\n    function XmlTagDefinition() {\n        this.closedByParent = false;\n        this.contentType = TagContentType.PARSABLE_DATA;\n        this.isVoid = false;\n        this.ignoreFirstLf = false;\n        this.canSelfClose = true;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.requireExtraParent = function (currentParent) { return false; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.isClosedByChild = function (name) { return false; };\n    return XmlTagDefinition;\n}());\nvar _TAG_DEFINITION = new XmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getXmlTagDefinition(tagName) {\n    return _TAG_DEFINITION;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlParser = (function (_super) {\n    __extends(XmlParser, _super);\n    function XmlParser() {\n        return _super.call(this, getXmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    XmlParser.prototype.parse = function (source, url, parseExpansionForms) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms);\n    };\n    return XmlParser;\n}(Parser$1));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest(message) {\n    return message.id || sha1(serializeNodes(message.nodes).join('') + (\"[\" + message.meaning + \"]\"));\n}\n/**\n * @param {?} message\n * @return {?}\n */\nfunction decimalDigest(message) {\n    if (message.id) {\n        return message.id;\n    }\n    var /** @type {?} */ visitor = new _SerializerIgnoreIcuExpVisitor();\n    var /** @type {?} */ parts = message.nodes.map(function (a) { return a.visit(visitor, null); });\n    return computeMsgId(parts.join(''), message.meaning);\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * \\@internal\n */\nvar _SerializerVisitor = (function () {\n    function _SerializerVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitText = function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        return \"[\" + container.children.map(function (child) { return child.visit(_this); }).join(', ') + \"]\";\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        return \"{\" + icu.expression + \", \" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        return ph.isVoid ?\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\"/>\" :\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\">\" + ph.children.map(function (child) { return child.visit(_this); }).join(', ') + \"</ph name=\\\"\" + ph.closeName + \"\\\">\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitPlaceholder = function (ph, context) {\n        return ph.value ? \"<ph name=\\\"\" + ph.name + \"\\\">\" + ph.value + \"</ph>\" : \"<ph name=\\\"\" + ph.name + \"\\\"/>\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        return \"<ph icu name=\\\"\" + ph.name + \"\\\">\" + ph.value.visit(this) + \"</ph>\";\n    };\n    return _SerializerVisitor;\n}());\nvar serializerVisitor = new _SerializerVisitor();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serializeNodes(nodes) {\n    return nodes.map(function (a) { return a.visit(serializerVisitor, null); });\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n *\n * \\@internal\n */\nvar _SerializerIgnoreIcuExpVisitor = (function (_super) {\n    __extends(_SerializerIgnoreIcuExpVisitor, _super);\n    function _SerializerIgnoreIcuExpVisitor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerIgnoreIcuExpVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // Do not take the expression into account\n        return \"{\" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    return _SerializerIgnoreIcuExpVisitor;\n}(_SerializerVisitor));\n/**\n * Compute the SHA1 of the given string\n *\n * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n * @param {?} str\n * @return {?}\n */\nfunction sha1(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var /** @type {?} */ words32 = stringToWords32(utf8, Endian.Big);\n    var /** @type {?} */ len = utf8.length * 8;\n    var /** @type {?} */ w = new Array(80);\n    var _a = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], a = _a[0], b = _a[1], c = _a[2], d = _a[3], e = _a[4];\n    words32[len >> 5] |= 0x80 << (24 - len % 32);\n    words32[((len + 64 >> 9) << 4) + 15] = len;\n    for (var /** @type {?} */ i = 0; i < words32.length; i += 16) {\n        var _b = [a, b, c, d, e], h0 = _b[0], h1 = _b[1], h2 = _b[2], h3 = _b[3], h4 = _b[4];\n        for (var /** @type {?} */ j = 0; j < 80; j++) {\n            if (j < 16) {\n                w[j] = words32[i + j];\n            }\n            else {\n                w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            }\n            var _c = fk(j, b, c, d), f = _c[0], k = _c[1];\n            var /** @type {?} */ temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n            _d = [d, c, rol32(b, 30), a, temp], e = _d[0], d = _d[1], c = _d[2], b = _d[3], a = _d[4];\n        }\n        _e = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)], a = _e[0], b = _e[1], c = _e[2], d = _e[3], e = _e[4];\n    }\n    return byteStringToHexString(words32ToByteString([a, b, c, d, e]));\n    var _d, _e;\n}\n/**\n * @param {?} index\n * @param {?} b\n * @param {?} c\n * @param {?} d\n * @return {?}\n */\nfunction fk(index, b, c, d) {\n    if (index < 20) {\n        return [(b & c) | (~b & d), 0x5a827999];\n    }\n    if (index < 40) {\n        return [b ^ c ^ d, 0x6ed9eba1];\n    }\n    if (index < 60) {\n        return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n    }\n    return [b ^ c ^ d, 0xca62c1d6];\n}\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n * @param {?} str\n * @return {?}\n */\nfunction fingerprint(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var _a = [hash32(utf8, 0), hash32(utf8, 102072)], hi = _a[0], lo = _a[1];\n    if (hi == 0 && (lo == 0 || lo == 1)) {\n        hi = hi ^ 0x130f9bef;\n        lo = lo ^ -0x6b5f56d8;\n    }\n    return [hi, lo];\n}\n/**\n * @param {?} msg\n * @param {?} meaning\n * @return {?}\n */\nfunction computeMsgId(msg, meaning) {\n    var _a = fingerprint(msg), hi = _a[0], lo = _a[1];\n    if (meaning) {\n        var _b = fingerprint(meaning), him = _b[0], lom = _b[1];\n        _c = add64(rol64([hi, lo], 1), [him, lom]), hi = _c[0], lo = _c[1];\n    }\n    return byteStringToDecString(words32ToByteString([hi & 0x7fffffff, lo]));\n    var _c;\n}\n/**\n * @param {?} str\n * @param {?} c\n * @return {?}\n */\nfunction hash32(str, c) {\n    var _a = [0x9e3779b9, 0x9e3779b9], a = _a[0], b = _a[1];\n    var /** @type {?} */ i;\n    var /** @type {?} */ len = str.length;\n    for (i = 0; i + 12 <= len; i += 12) {\n        a = add32(a, wordAt(str, i, Endian.Little));\n        b = add32(b, wordAt(str, i + 4, Endian.Little));\n        c = add32(c, wordAt(str, i + 8, Endian.Little));\n        _b = mix([a, b, c]), a = _b[0], b = _b[1], c = _b[2];\n    }\n    a = add32(a, wordAt(str, i, Endian.Little));\n    b = add32(b, wordAt(str, i + 4, Endian.Little));\n    // the first byte of c is reserved for the length\n    c = add32(c, len);\n    c = add32(c, wordAt(str, i + 8, Endian.Little) << 8);\n    return mix([a, b, c])[2];\n    var _b;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction mix(_a) {\n    var a = _a[0], b = _a[1], c = _a[2];\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 13;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 8;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 13;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 12;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 16;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 5;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 3;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 10;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 15;\n    return [a, b, c];\n}\nvar Endian = {};\nEndian.Little = 0;\nEndian.Big = 1;\nEndian[Endian.Little] = \"Little\";\nEndian[Endian.Big] = \"Big\";\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32(a, b) {\n    return add32to64(a, b)[1];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32to64(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) + (b & 0xffff);\n    var /** @type {?} */ high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n    return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\n/**\n * @param {?} __0\n * @param {?} __1\n * @return {?}\n */\nfunction add64(_a, _b) {\n    var ah = _a[0], al = _a[1];\n    var bh = _b[0], bl = _b[1];\n    var _c = add32to64(al, bl), carry = _c[0], l = _c[1];\n    var /** @type {?} */ h = add32(add32(ah, bh), carry);\n    return [h, l];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction sub32(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) - (b & 0xffff);\n    var /** @type {?} */ high = (a >> 16) - (b >> 16) + (low >> 16);\n    return (high << 16) | (low & 0xffff);\n}\n/**\n * @param {?} a\n * @param {?} count\n * @return {?}\n */\nfunction rol32(a, count) {\n    return (a << count) | (a >>> (32 - count));\n}\n/**\n * @param {?} __0\n * @param {?} count\n * @return {?}\n */\nfunction rol64(_a, count) {\n    var hi = _a[0], lo = _a[1];\n    var /** @type {?} */ h = (hi << count) | (lo >>> (32 - count));\n    var /** @type {?} */ l = (lo << count) | (hi >>> (32 - count));\n    return [h, l];\n}\n/**\n * @param {?} str\n * @param {?} endian\n * @return {?}\n */\nfunction stringToWords32(str, endian) {\n    var /** @type {?} */ words32 = Array((str.length + 3) >>> 2);\n    for (var /** @type {?} */ i = 0; i < words32.length; i++) {\n        words32[i] = wordAt(str, i * 4, endian);\n    }\n    return words32;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @return {?}\n */\nfunction byteAt(str, index) {\n    return index >= str.length ? 0 : str.charCodeAt(index) & 0xff;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @param {?} endian\n * @return {?}\n */\nfunction wordAt(str, index, endian) {\n    var /** @type {?} */ word = 0;\n    if (endian === Endian.Big) {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << (24 - 8 * i);\n        }\n    }\n    else {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << 8 * i;\n        }\n    }\n    return word;\n}\n/**\n * @param {?} words32\n * @return {?}\n */\nfunction words32ToByteString(words32) {\n    return words32.reduce(function (str, word) { return str + word32ToByteString(word); }, '');\n}\n/**\n * @param {?} word\n * @return {?}\n */\nfunction word32ToByteString(word) {\n    var /** @type {?} */ str = '';\n    for (var /** @type {?} */ i = 0; i < 4; i++) {\n        str += String.fromCharCode((word >>> 8 * (3 - i)) & 0xff);\n    }\n    return str;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToHexString(str) {\n    var /** @type {?} */ hex = '';\n    for (var /** @type {?} */ i = 0; i < str.length; i++) {\n        var /** @type {?} */ b = byteAt(str, i);\n        hex += (b >>> 4).toString(16) + (b & 0x0f).toString(16);\n    }\n    return hex.toLowerCase();\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToDecString(str) {\n    var /** @type {?} */ decimal = '';\n    var /** @type {?} */ toThePower = '1';\n    for (var /** @type {?} */ i = str.length - 1; i >= 0; i--) {\n        decimal = addBigInt(decimal, numberTimesBigInt(byteAt(str, i), toThePower));\n        toThePower = numberTimesBigInt(256, toThePower);\n    }\n    return decimal.split('').reverse().join('');\n}\n/**\n * @param {?} x\n * @param {?} y\n * @return {?}\n */\nfunction addBigInt(x, y) {\n    var /** @type {?} */ sum = '';\n    var /** @type {?} */ len = Math.max(x.length, y.length);\n    for (var /** @type {?} */ i = 0, /** @type {?} */ carry = 0; i < len || carry; i++) {\n        var /** @type {?} */ tmpSum = carry + +(x[i] || 0) + +(y[i] || 0);\n        if (tmpSum >= 10) {\n            carry = 1;\n            sum += tmpSum - 10;\n        }\n        else {\n            carry = 0;\n            sum += tmpSum;\n        }\n    }\n    return sum;\n}\n/**\n * @param {?} num\n * @param {?} b\n * @return {?}\n */\nfunction numberTimesBigInt(num, b) {\n    var /** @type {?} */ product = '';\n    var /** @type {?} */ bToThePower = b;\n    for (; num !== 0; num = num >>> 1) {\n        if (num & 1)\n            product = addBigInt(product, bToThePower);\n        bToThePower = addBigInt(bToThePower, bToThePower);\n    }\n    return product;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar Serializer = (function () {\n    function Serializer() {\n    }\n    /**\n     * @abstract\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Serializer.prototype.write = function (messages, locale) { };\n    /**\n     * @abstract\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Serializer.prototype.load = function (content, url) { };\n    /**\n     * @abstract\n     * @param {?} message\n     * @return {?}\n     */\n    Serializer.prototype.digest = function (message) { };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Serializer.prototype.createNameMapper = function (message) { return null; };\n    return Serializer;\n}());\n/**\n * A simple mapper that take a function to transform an internal name to a public name\n */\nvar SimplePlaceholderMapper = (function (_super) {\n    __extends(SimplePlaceholderMapper, _super);\n    /**\n     * @param {?} message\n     * @param {?} mapName\n     */\n    function SimplePlaceholderMapper(message, mapName) {\n        var _this = _super.call(this) || this;\n        _this.mapName = mapName;\n        _this.internalToPublic = {};\n        _this.publicToNextId = {};\n        _this.publicToInternal = {};\n        message.nodes.forEach(function (node) { return node.visit(_this); });\n        return _this;\n    }\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toPublicName = function (internalName) {\n        return this.internalToPublic.hasOwnProperty(internalName) ?\n            this.internalToPublic[internalName] :\n            null;\n    };\n    /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toInternalName = function (publicName) {\n        return this.publicToInternal.hasOwnProperty(publicName) ? this.publicToInternal[publicName] :\n            null;\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitText = function (text, context) { return null; };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitTagPlaceholder = function (ph, context) {\n        this.visitPlaceholderName(ph.startName);\n        _super.prototype.visitTagPlaceholder.call(this, ph, context);\n        this.visitPlaceholderName(ph.closeName);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholder = function (ph, context) { this.visitPlaceholderName(ph.name); };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitIcuPlaceholder = function (ph, context) {\n        this.visitPlaceholderName(ph.name);\n    };\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholderName = function (internalName) {\n        if (!internalName || this.internalToPublic.hasOwnProperty(internalName)) {\n            return;\n        }\n        var /** @type {?} */ publicName = this.mapName(internalName);\n        if (this.publicToInternal.hasOwnProperty(publicName)) {\n            // Create a new XMB when it has already been used\n            var /** @type {?} */ nextId = this.publicToNextId[publicName];\n            this.publicToNextId[publicName] = nextId + 1;\n            publicName = publicName + \"_\" + nextId;\n        }\n        else {\n            this.publicToNextId[publicName] = 1;\n        }\n        this.internalToPublic[internalName] = publicName;\n        this.publicToInternal[publicName] = internalName;\n    };\n    return SimplePlaceholderMapper;\n}(RecurseVisitor));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _Visitor$1 = (function () {\n    function _Visitor$1() {\n    }\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    _Visitor$1.prototype.visitTag = function (tag) {\n        var _this = this;\n        var /** @type {?} */ strAttrs = this._serializeAttributes(tag.attrs);\n        if (tag.children.length == 0) {\n            return \"<\" + tag.name + strAttrs + \"/>\";\n        }\n        var /** @type {?} */ strChildren = tag.children.map(function (node) { return node.visit(_this); });\n        return \"<\" + tag.name + strAttrs + \">\" + strChildren.join('') + \"</\" + tag.name + \">\";\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    _Visitor$1.prototype.visitText = function (text) { return text.value; };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    _Visitor$1.prototype.visitDeclaration = function (decl) {\n        return \"<?xml\" + this._serializeAttributes(decl.attrs) + \" ?>\";\n    };\n    /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    _Visitor$1.prototype._serializeAttributes = function (attrs) {\n        var /** @type {?} */ strAttrs = Object.keys(attrs).map(function (name) { return name + \"=\\\"\" + attrs[name] + \"\\\"\"; }).join(' ');\n        return strAttrs.length > 0 ? ' ' + strAttrs : '';\n    };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    _Visitor$1.prototype.visitDoctype = function (doctype) {\n        return \"<!DOCTYPE \" + doctype.rootTag + \" [\\n\" + doctype.dtd + \"\\n]>\";\n    };\n    return _Visitor$1;\n}());\nvar _visitor = new _Visitor$1();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serialize(nodes) {\n    return nodes.map(function (node) { return node.visit(_visitor); }).join('');\n}\nvar Declaration = (function () {\n    /**\n     * @param {?} unescapedAttrs\n     */\n    function Declaration(unescapedAttrs) {\n        var _this = this;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Declaration.prototype.visit = function (visitor) { return visitor.visitDeclaration(this); };\n    return Declaration;\n}());\nvar Doctype = (function () {\n    /**\n     * @param {?} rootTag\n     * @param {?} dtd\n     */\n    function Doctype(rootTag, dtd) {\n        this.rootTag = rootTag;\n        this.dtd = dtd;\n    }\n    \n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Doctype.prototype.visit = function (visitor) { return visitor.visitDoctype(this); };\n    return Doctype;\n}());\nvar Tag = (function () {\n    /**\n     * @param {?} name\n     * @param {?=} unescapedAttrs\n     * @param {?=} children\n     */\n    function Tag(name, unescapedAttrs, children) {\n        if (unescapedAttrs === void 0) { unescapedAttrs = {}; }\n        if (children === void 0) { children = []; }\n        var _this = this;\n        this.name = name;\n        this.children = children;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Tag.prototype.visit = function (visitor) { return visitor.visitTag(this); };\n    return Tag;\n}());\nvar Text$2 = (function () {\n    /**\n     * @param {?} unescapedValue\n     */\n    function Text$2(unescapedValue) {\n        this.value = _escapeXml(unescapedValue);\n    }\n    \n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Text$2.prototype.visit = function (visitor) { return visitor.visitText(this); };\n    return Text$2;\n}());\nvar CR = (function (_super) {\n    __extends(CR, _super);\n    /**\n     * @param {?=} ws\n     */\n    function CR(ws) {\n        if (ws === void 0) { ws = 0; }\n        return _super.call(this, \"\\n\" + new Array(ws + 1).join(' ')) || this;\n    }\n    return CR;\n}(Text$2));\nvar _ESCAPED_CHARS = [\n    [/&/g, '&amp;'],\n    [/\"/g, '&quot;'],\n    [/'/g, '&apos;'],\n    [/</g, '&lt;'],\n    [/>/g, '&gt;'],\n];\n/**\n * @param {?} text\n * @return {?}\n */\nfunction _escapeXml(text) {\n    return _ESCAPED_CHARS.reduce(function (text, entry) { return text.replace(entry[0], entry[1]); }, text);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION = '1.2';\nvar _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG = 'en';\nvar _PLACEHOLDER_TAG = 'x';\nvar _FILE_TAG = 'file';\nvar _SOURCE_TAG = 'source';\nvar _TARGET_TAG = 'target';\nvar _UNIT_TAG = 'trans-unit';\nvar _CONTEXT_GROUP_TAG = 'context-group';\nvar _CONTEXT_TAG = 'context';\nvar Xliff = (function (_super) {\n    __extends(Xliff, _super);\n    function Xliff() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff.prototype.write = function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor();\n        var /** @type {?} */ transUnits = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ contextTags = [];\n            message.sources.forEach(function (source) {\n                var /** @type {?} */ contextGroupTag = new Tag(_CONTEXT_GROUP_TAG, { purpose: 'location' });\n                contextGroupTag.children.push(new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'sourcefile' }, [new Text$2(source.filePath)]), new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'linenumber' }, [new Text$2(\"\" + source.startLine)]), new CR(8));\n                contextTags.push(new CR(8), contextGroupTag);\n            });\n            var /** @type {?} */ transUnit = new Tag(_UNIT_TAG, { id: message.id, datatype: 'html' });\n            (_a = transUnit.children).push.apply(_a, [new CR(8), new Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes)), new CR(8), new Tag(_TARGET_TAG)].concat(contextTags));\n            if (message.description) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'description' }, [new Text$2(message.description)]));\n            }\n            if (message.meaning) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'meaning' }, [new Text$2(message.meaning)]));\n            }\n            transUnit.children.push(new CR(6));\n            transUnits.push(new CR(6), transUnit);\n            var _a;\n        });\n        var /** @type {?} */ body = new Tag('body', {}, transUnits.concat([new CR(4)]));\n        var /** @type {?} */ file = new Tag('file', {\n            'source-language': locale || _DEFAULT_SOURCE_LANG,\n            datatype: 'plaintext',\n            original: 'ng2.template',\n        }, [new CR(4), body, new CR(2)]);\n        var /** @type {?} */ xliff = new Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff.prototype.load = function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliffParser = new XliffParser();\n        var _a = xliffParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff.prototype.digest = function (message) { return digest(message); };\n    return Xliff;\n}(Serializer));\nvar _WriteVisitor = (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var /** @type {?} */ ctype = getCtypeForTag(ph.tag);\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype });\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.closeName, ctype: ctype });\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar XliffParser = (function () {\n    function XliffParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    XliffParser.prototype.parse = function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitElement = function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG:\n                this._unitMlString = ((null));\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG:\n                // ignore source message\n                break;\n            case _TARGET_TAG:\n                var /** @type {?} */ innerTextStart = ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _FILE_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'target-language'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                visitAll(this, element.children, null);\n                break;\n            default:\n                // TODO(vicb): assert file structure, xliff version\n                // For now only recurse on unhandled nodes\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitText = function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansion = function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansionCase = function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XliffParser.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XliffParser;\n}());\nvar XmlToI18n = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'id'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"id\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getCtypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n            return 'lb';\n        case 'img':\n            return 'image';\n        default:\n            return \"x-\" + tag;\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION$1 = '2.0';\nvar _XMLNS$1 = 'urn:oasis:names:tc:xliff:document:2.0';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG$1 = 'en';\nvar _PLACEHOLDER_TAG$1 = 'ph';\nvar _PLACEHOLDER_SPANNING_TAG = 'pc';\nvar _XLIFF_TAG = 'xliff';\nvar _SOURCE_TAG$1 = 'source';\nvar _TARGET_TAG$1 = 'target';\nvar _UNIT_TAG$1 = 'unit';\nvar Xliff2 = (function (_super) {\n    __extends(Xliff2, _super);\n    function Xliff2() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff2.prototype.write = function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor$1();\n        var /** @type {?} */ units = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ unit = new Tag(_UNIT_TAG$1, { id: message.id });\n            var /** @type {?} */ notes = new Tag('notes');\n            if (message.description || message.meaning) {\n                if (message.description) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'description' }, [new Text$2(message.description)]));\n                }\n                if (message.meaning) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'meaning' }, [new Text$2(message.meaning)]));\n                }\n            }\n            message.sources.forEach(function (source) {\n                notes.children.push(new CR(8), new Tag('note', { category: 'location' }, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            notes.children.push(new CR(6));\n            unit.children.push(new CR(6), notes);\n            var /** @type {?} */ segment = new Tag('segment');\n            segment.children.push(new CR(8), new Tag(_SOURCE_TAG$1, {}, visitor.serialize(message.nodes)), new CR(6));\n            unit.children.push(new CR(6), segment, new CR(4));\n            units.push(new CR(4), unit);\n        });\n        var /** @type {?} */ file = new Tag('file', { 'original': 'ng.template', id: 'ngi18n' }, units.concat([new CR(2)]));\n        var /** @type {?} */ xliff = new Tag(_XLIFF_TAG, { version: _VERSION$1, xmlns: _XMLNS$1, srcLang: locale || _DEFAULT_SOURCE_LANG$1 }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2.prototype.load = function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliff2Parser = new Xliff2Parser();\n        var _a = xliff2Parser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$1();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff2 parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2.prototype.digest = function (message) { return decimalDigest(message); };\n    return Xliff2;\n}(Serializer));\nvar _WriteVisitor$1 = (function () {\n    function _WriteVisitor$1() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitText = function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ type = getTypeForTag(ph.tag);\n        if (ph.isVoid) {\n            var /** @type {?} */ tagPh = new Tag(_PLACEHOLDER_TAG$1, {\n                id: (this._nextPlaceholderId++).toString(),\n                equiv: ph.startName,\n                type: type,\n                disp: \"<\" + ph.tag + \"/>\",\n            });\n            return [tagPh];\n        }\n        var /** @type {?} */ tagPc = new Tag(_PLACEHOLDER_SPANNING_TAG, {\n            id: (this._nextPlaceholderId++).toString(),\n            equivStart: ph.startName,\n            equivEnd: ph.closeName,\n            type: type,\n            dispStart: \"<\" + ph.tag + \">\",\n            dispEnd: \"</\" + ph.tag + \">\",\n        });\n        var /** @type {?} */ nodes = [].concat.apply([], ph.children.map(function (node) { return node.visit(_this); }));\n        if (nodes.length) {\n            nodes.forEach(function (node) { return tagPc.children.push(node); });\n        }\n        else {\n            tagPc.children.push(new Text$2(''));\n        }\n        return [tagPc];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG$1, {\n                id: (this._nextPlaceholderId++).toString(),\n                equiv: ph.name,\n                disp: \"{{\" + ph.value + \"}}\",\n            })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitIcuPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG$1, { id: (this._nextPlaceholderId++).toString() })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.serialize = function (nodes) {\n        var _this = this;\n        this._nextPlaceholderId = 0;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor$1;\n}());\nvar Xliff2Parser = (function () {\n    function Xliff2Parser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2Parser.prototype.parse = function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitElement = function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG$1:\n                this._unitMlString = null;\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG$1 + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG$1:\n                // ignore source message\n                break;\n            case _TARGET_TAG$1:\n                var /** @type {?} */ innerTextStart = ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _XLIFF_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'trgLang'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                var /** @type {?} */ versionAttr = element.attrs.find(function (attr) { return attr.name === 'version'; });\n                if (versionAttr) {\n                    var /** @type {?} */ version = versionAttr.value;\n                    if (version !== '2.0') {\n                        this._addError(element, \"The XLIFF file version \" + version + \" is not compatible with XLIFF 2.0 serializer\");\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                    }\n                }\n                break;\n            default:\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitText = function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansion = function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansionCase = function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2Parser.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return Xliff2Parser;\n}());\nvar XmlToI18n$1 = (function () {\n    function XmlToI18n$1() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.convert = function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] : [].concat.apply([], visitAll(this, xmlIcu.rootNodes));\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitText = function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitElement = function (el, context) {\n        var _this = this;\n        switch (el.name) {\n            case _PLACEHOLDER_TAG$1:\n                var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'equiv'; });\n                if (nameAttr) {\n                    return [new Placeholder('', nameAttr.value, el.sourceSpan)];\n                }\n                this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equiv\\\" attribute\");\n                break;\n            case _PLACEHOLDER_SPANNING_TAG:\n                var /** @type {?} */ startAttr = el.attrs.find(function (attr) { return attr.name === 'equivStart'; });\n                var /** @type {?} */ endAttr = el.attrs.find(function (attr) { return attr.name === 'equivEnd'; });\n                if (!startAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivStart\\\" attribute\");\n                }\n                else if (!endAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivEnd\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ startId = startAttr.value;\n                    var /** @type {?} */ endId = endAttr.value;\n                    var /** @type {?} */ nodes = [];\n                    return nodes.concat.apply(nodes, [new Placeholder('', startId, el.sourceSpan)].concat(el.children.map(function (node) { return node.visit(_this, null); }), [new Placeholder('', endId, el.sourceSpan)]));\n                }\n                break;\n            default:\n                this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitExpansion = function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitExpansionCase = function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: [].concat.apply([], visitAll(this, icuCase.expression)),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n$1.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XmlToI18n$1;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getTypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n        case 'b':\n        case 'i':\n        case 'u':\n            return 'fmt';\n        case 'img':\n            return 'image';\n        case 'a':\n            return 'link';\n        default:\n            return 'other';\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _MESSAGES_TAG = 'messagebundle';\nvar _MESSAGE_TAG = 'msg';\nvar _PLACEHOLDER_TAG$2 = 'ph';\nvar _EXEMPLE_TAG = 'ex';\nvar _SOURCE_TAG$2 = 'source';\nvar _DOCTYPE = \"<!ELEMENT messagebundle (msg)*>\\n<!ATTLIST messagebundle class CDATA #IMPLIED>\\n\\n<!ELEMENT msg (#PCDATA|ph|source)*>\\n<!ATTLIST msg id CDATA #IMPLIED>\\n<!ATTLIST msg seq CDATA #IMPLIED>\\n<!ATTLIST msg name CDATA #IMPLIED>\\n<!ATTLIST msg desc CDATA #IMPLIED>\\n<!ATTLIST msg meaning CDATA #IMPLIED>\\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\\n<!ATTLIST msg xml:space (default|preserve) \\\"default\\\">\\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\\n\\n<!ELEMENT source (#PCDATA)>\\n\\n<!ELEMENT ph (#PCDATA|ex)*>\\n<!ATTLIST ph name CDATA #REQUIRED>\\n\\n<!ELEMENT ex (#PCDATA)>\";\nvar Xmb = (function (_super) {\n    __extends(Xmb, _super);\n    function Xmb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xmb.prototype.write = function (messages, locale) {\n        var /** @type {?} */ exampleVisitor = new ExampleVisitor();\n        var /** @type {?} */ visitor = new _Visitor$2();\n        var /** @type {?} */ rootNode = new Tag(_MESSAGES_TAG);\n        messages.forEach(function (message) {\n            var /** @type {?} */ attrs = { id: message.id };\n            if (message.description) {\n                attrs['desc'] = message.description;\n            }\n            if (message.meaning) {\n                attrs['meaning'] = message.meaning;\n            }\n            var /** @type {?} */ sourceTags = [];\n            message.sources.forEach(function (source) {\n                sourceTags.push(new Tag(_SOURCE_TAG$2, {}, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            rootNode.children.push(new CR(2), new Tag(_MESSAGE_TAG, attrs, sourceTags.concat(visitor.serialize(message.nodes))));\n        });\n        rootNode.children.push(new CR());\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }),\n            new CR(),\n            new Doctype(_MESSAGES_TAG, _DOCTYPE),\n            new CR(),\n            exampleVisitor.addDefaultExamples(rootNode),\n            new CR(),\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xmb.prototype.load = function (content, url) {\n        throw new Error('Unsupported');\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.digest = function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.createNameMapper = function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xmb;\n}(Serializer));\nvar _Visitor$2 = (function () {\n    function _Visitor$2() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitText = function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitTagPlaceholder = function (ph, context) {\n        var /** @type {?} */ startEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"<\" + ph.tag + \">\")]);\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.startName }, [startEx]);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        var /** @type {?} */ closeEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"</\" + ph.tag + \">\")]);\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.closeName }, [closeEx]);\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitIcuPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _Visitor$2.prototype.serialize = function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _Visitor$2;\n}());\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest$1(message) {\n    return decimalDigest(message);\n}\nvar ExampleVisitor = (function () {\n    function ExampleVisitor() {\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    ExampleVisitor.prototype.addDefaultExamples = function (node) {\n        node.visit(this);\n        return node;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitTag = function (tag) {\n        var _this = this;\n        if (tag.name === _PLACEHOLDER_TAG$2) {\n            if (!tag.children || tag.children.length == 0) {\n                var /** @type {?} */ exText = new Text$2(tag.attrs['name'] || '...');\n                tag.children = [new Tag(_EXEMPLE_TAG, {}, [exText])];\n            }\n        }\n        else if (tag.children) {\n            tag.children.forEach(function (node) { return node.visit(_this); });\n        }\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitText = function (text) { };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDeclaration = function (decl) { };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDoctype = function (doctype) { };\n    return ExampleVisitor;\n}());\n/**\n * @param {?} internalName\n * @return {?}\n */\nfunction toPublicName(internalName) {\n    return internalName.toUpperCase().replace(/[^A-Z0-9_]/g, '_');\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _TRANSLATIONS_TAG = 'translationbundle';\nvar _TRANSLATION_TAG = 'translation';\nvar _PLACEHOLDER_TAG$3 = 'ph';\nvar Xtb = (function (_super) {\n    __extends(Xtb, _super);\n    function Xtb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xtb.prototype.write = function (messages, locale) { throw new Error('Unsupported'); };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xtb.prototype.load = function (content, url) {\n        // xtb to xml nodes\n        var /** @type {?} */ xtbParser = new XtbParser();\n        var _a = xtbParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$2();\n        // Because we should be able to load xtb files that rely on features not supported by angular,\n        // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n        // converted\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var /** @type {?} */ valueFn = function () {\n                var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, errors = _a.errors;\n                if (errors.length) {\n                    throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n                }\n                return i18nNodes;\n            };\n            createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n        });\n        if (errors.length) {\n            throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.digest = function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.createNameMapper = function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xtb;\n}(Serializer));\n/**\n * @param {?} messages\n * @param {?} id\n * @param {?} valueFn\n * @return {?}\n */\nfunction createLazyProperty(messages, id, valueFn) {\n    Object.defineProperty(messages, id, {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n            var /** @type {?} */ value = valueFn();\n            Object.defineProperty(messages, id, { enumerable: true, value: value });\n            return value;\n        },\n        set: function (_) { throw new Error('Could not overwrite an XTB translation'); },\n    });\n}\nvar XtbParser = (function () {\n    function XtbParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    XtbParser.prototype.parse = function (xtb, url) {\n        this._bundleDepth = 0;\n        this._msgIdToHtml = {};\n        // We can not parse the ICU messages at this point as some messages might not originate\n        // from Angular that could not be lex'd.\n        var /** @type {?} */ xml = new XmlParser().parse(xtb, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitElement = function (element, context) {\n        switch (element.name) {\n            case _TRANSLATIONS_TAG:\n                this._bundleDepth++;\n                if (this._bundleDepth > 1) {\n                    this._addError(element, \"<\" + _TRANSLATIONS_TAG + \"> elements can not be nested\");\n                }\n                var /** @type {?} */ langAttr = element.attrs.find(function (attr) { return attr.name === 'lang'; });\n                if (langAttr) {\n                    this._locale = langAttr.value;\n                }\n                visitAll(this, element.children, null);\n                this._bundleDepth--;\n                break;\n            case _TRANSLATION_TAG:\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _TRANSLATION_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        var /** @type {?} */ innerTextStart = ((element.startSourceSpan)).end.offset;\n                        var /** @type {?} */ innerTextEnd = ((element.endSourceSpan)).start.offset;\n                        var /** @type {?} */ content = ((element.startSourceSpan)).start.file.content;\n                        var /** @type {?} */ innerText = content.slice(/** @type {?} */ ((innerTextStart)), /** @type {?} */ ((innerTextEnd)));\n                        this._msgIdToHtml[id] = innerText;\n                    }\n                }\n                break;\n            default:\n                this._addError(element, 'Unexpected tag');\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitText = function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansion = function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansionCase = function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XtbParser.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XtbParser;\n}());\nvar XmlToI18n$2 = (function () {\n    function XmlToI18n$2() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.convert = function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitText = function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitExpansion = function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitExpansionCase = function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitElement = function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG$3) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'name'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG$3 + \"> misses the \\\"name\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n$2.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n$2;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlParser = (function (_super) {\n    __extends(HtmlParser, _super);\n    function HtmlParser() {\n        return _super.call(this, getHtmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    HtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms, interpolationConfig);\n    };\n    return HtmlParser;\n}(Parser$1));\nHtmlParser.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nHtmlParser.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for translated messages\n */\nvar TranslationBundle = (function () {\n    /**\n     * @param {?=} _i18nNodesByMsgId\n     * @param {?=} locale\n     * @param {?=} digest\n     * @param {?=} mapperFactory\n     * @param {?=} missingTranslationStrategy\n     * @param {?=} console\n     */\n    function TranslationBundle(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        if (missingTranslationStrategy === void 0) { missingTranslationStrategy = _angular_core.MissingTranslationStrategy.Warning; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this.digest = digest;\n        this.mapperFactory = mapperFactory;\n        this._i18nToHtml = new I18nToHtmlVisitor(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console);\n    }\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    TranslationBundle.load = function (content, url, serializer, missingTranslationStrategy, console) {\n        var _a = serializer.load(content, url), locale = _a.locale, i18nNodesByMsgId = _a.i18nNodesByMsgId;\n        var /** @type {?} */ digestFn = function (m) { return serializer.digest(m); };\n        var /** @type {?} */ mapperFactory = function (m) { return ((serializer.createNameMapper(m))); };\n        return new TranslationBundle(i18nNodesByMsgId, locale, digestFn, mapperFactory, missingTranslationStrategy, console);\n    };\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.get = function (srcMsg) {\n        var /** @type {?} */ html = this._i18nToHtml.convert(srcMsg);\n        if (html.errors.length) {\n            throw new Error(html.errors.join('\\n'));\n        }\n        return html.nodes;\n    };\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.has = function (srcMsg) { return this.digest(srcMsg) in this._i18nNodesByMsgId; };\n    return TranslationBundle;\n}());\nvar I18nToHtmlVisitor = (function () {\n    /**\n     * @param {?=} _i18nNodesByMsgId\n     * @param {?=} _locale\n     * @param {?=} _digest\n     * @param {?=} _mapperFactory\n     * @param {?=} _missingTranslationStrategy\n     * @param {?=} _console\n     */\n    function I18nToHtmlVisitor(_i18nNodesByMsgId, _locale, _digest, _mapperFactory, _missingTranslationStrategy, _console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this._locale = _locale;\n        this._digest = _digest;\n        this._mapperFactory = _mapperFactory;\n        this._missingTranslationStrategy = _missingTranslationStrategy;\n        this._console = _console;\n        this._contextStack = [];\n        this._errors = [];\n    }\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.convert = function (srcMsg) {\n        this._contextStack.length = 0;\n        this._errors.length = 0;\n        // i18n to text\n        var /** @type {?} */ text = this._convertToText(srcMsg);\n        // text to html\n        var /** @type {?} */ url = srcMsg.nodes[0].sourceSpan.start.file.url;\n        var /** @type {?} */ html = new HtmlParser().parse(text, url, true);\n        return {\n            nodes: html.rootNodes,\n            errors: this._errors.concat(html.errors),\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitText = function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        return container.children.map(function (n) { return n.visit(_this); }).join('');\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // TODO(vicb): Once all format switch to using expression placeholders\n        // we should throw when the placeholder is not in the source message\n        var /** @type {?} */ exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n            this._srcMsg.placeholders[icu.expression] :\n            icu.expression;\n        return \"{\" + exp + \", \" + icu.type + \", \" + cases.join(' ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitPlaceholder = function (ph, context) {\n        var /** @type {?} */ phName = this._mapper(ph.name);\n        if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n            return this._srcMsg.placeholders[phName];\n        }\n        if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n            return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n        }\n        this._addError(ph, \"Unknown placeholder \\\"\" + ph.name + \"\\\"\");\n        return '';\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ tag = \"\" + ph.tag;\n        var /** @type {?} */ attrs = Object.keys(ph.attrs).map(function (name) { return name + \"=\\\"\" + ph.attrs[name] + \"\\\"\"; }).join(' ');\n        if (ph.isVoid) {\n            return \"<\" + tag + \" \" + attrs + \"/>\";\n        }\n        var /** @type {?} */ children = ph.children.map(function (c) { return c.visit(_this); }).join('');\n        return \"<\" + tag + \" \" + attrs + \">\" + children + \"</\" + tag + \">\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        // An ICU placeholder references the source message to be serialized\n        return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n    };\n    /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._convertToText = function (srcMsg) {\n        var _this = this;\n        var /** @type {?} */ id = this._digest(srcMsg);\n        var /** @type {?} */ mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n        var /** @type {?} */ nodes;\n        this._contextStack.push({ msg: this._srcMsg, mapper: this._mapper });\n        this._srcMsg = srcMsg;\n        if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n            // When there is a translation use its nodes as the source\n            // And create a mapper to convert serialized placeholder names to internal names\n            nodes = this._i18nNodesByMsgId[id];\n            this._mapper = function (name) { return mapper ? ((mapper.toInternalName(name))) : name; };\n        }\n        else {\n            // When no translation has been found\n            // - report an error / a warning / nothing,\n            // - use the nodes from the original message\n            // - placeholders are already internal and need no mapper\n            if (this._missingTranslationStrategy === _angular_core.MissingTranslationStrategy.Error) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._addError(srcMsg.nodes[0], \"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            else if (this._console &&\n                this._missingTranslationStrategy === _angular_core.MissingTranslationStrategy.Warning) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._console.warn(\"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            nodes = srcMsg.nodes;\n            this._mapper = function (name) { return name; };\n        }\n        var /** @type {?} */ text = nodes.map(function (node) { return node.visit(_this); }).join('');\n        var /** @type {?} */ context = ((this._contextStack.pop()));\n        this._srcMsg = context.msg;\n        this._mapper = context.mapper;\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._addError = function (el, msg) {\n        this._errors.push(new I18nError(el.sourceSpan, msg));\n    };\n    return I18nToHtmlVisitor;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar I18NHtmlParser = (function () {\n    /**\n     * @param {?} _htmlParser\n     * @param {?=} translations\n     * @param {?=} translationsFormat\n     * @param {?=} missingTranslation\n     * @param {?=} console\n     */\n    function I18NHtmlParser(_htmlParser, translations, translationsFormat, missingTranslation, console) {\n        if (missingTranslation === void 0) { missingTranslation = _angular_core.MissingTranslationStrategy.Warning; }\n        this._htmlParser = _htmlParser;\n        if (translations) {\n            var serializer = createSerializer(translationsFormat);\n            this._translationBundle =\n                TranslationBundle.load(translations, 'i18n', serializer, missingTranslation, console);\n        }\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    I18NHtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n        if (!this._translationBundle) {\n            // Do not enable i18n when no translation bundle is provided\n            return parseResult;\n        }\n        if (parseResult.errors.length) {\n            return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n        }\n        return mergeTranslations(parseResult.rootNodes, this._translationBundle, interpolationConfig, [], {});\n    };\n    return I18NHtmlParser;\n}());\n/**\n * @param {?=} format\n * @return {?}\n */\nfunction createSerializer(format) {\n    format = (format || 'xlf').toLowerCase();\n    switch (format) {\n        case 'xmb':\n            return new Xmb();\n        case 'xtb':\n            return new Xtb();\n        case 'xliff2':\n        case 'xlf2':\n            return new Xliff2();\n        case 'xliff':\n        case 'xlf':\n        default:\n            return new Xliff();\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CORE = '@angular/core';\nvar Identifiers = (function () {\n    function Identifiers() {\n    }\n    return Identifiers;\n}());\nIdentifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n    name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n    moduleName: CORE,\n    runtime: _angular_core.ANALYZE_FOR_ENTRY_COMPONENTS\n};\nIdentifiers.ElementRef = { name: 'ElementRef', moduleName: CORE, runtime: _angular_core.ElementRef };\nIdentifiers.NgModuleRef = { name: 'NgModuleRef', moduleName: CORE, runtime: _angular_core.NgModuleRef };\nIdentifiers.ViewContainerRef = { name: 'ViewContainerRef', moduleName: CORE, runtime: _angular_core.ViewContainerRef };\nIdentifiers.ChangeDetectorRef = {\n    name: 'ChangeDetectorRef',\n    moduleName: CORE,\n    runtime: _angular_core.ChangeDetectorRef\n};\nIdentifiers.QueryList = { name: 'QueryList', moduleName: CORE, runtime: _angular_core.QueryList };\nIdentifiers.TemplateRef = { name: 'TemplateRef', moduleName: CORE, runtime: _angular_core.TemplateRef };\nIdentifiers.CodegenComponentFactoryResolver = {\n    name: 'ÉµCodegenComponentFactoryResolver',\n    moduleName: CORE,\n    runtime: _angular_core.ÉµCodegenComponentFactoryResolver\n};\nIdentifiers.ComponentFactoryResolver = {\n    name: 'ComponentFactoryResolver',\n    moduleName: CORE,\n    runtime: _angular_core.ComponentFactoryResolver\n};\nIdentifiers.ComponentFactory = { name: 'ComponentFactory', moduleName: CORE, runtime: _angular_core.ComponentFactory };\nIdentifiers.ComponentRef = { name: 'ComponentRef', moduleName: CORE, runtime: _angular_core.ComponentRef };\nIdentifiers.NgModuleFactory = { name: 'NgModuleFactory', moduleName: CORE, runtime: _angular_core.NgModuleFactory };\nIdentifiers.createModuleFactory = {\n    name: 'Éµcmf',\n    moduleName: CORE,\n    runtime: _angular_core.Éµcmf,\n};\nIdentifiers.moduleDef = {\n    name: 'Éµmod',\n    moduleName: CORE,\n    runtime: _angular_core.Éµmod,\n};\nIdentifiers.moduleProviderDef = {\n    name: 'Éµmpd',\n    moduleName: CORE,\n    runtime: _angular_core.Éµmpd,\n};\nIdentifiers.RegisterModuleFactoryFn = {\n    name: 'ÉµregisterModuleFactory',\n    moduleName: CORE,\n    runtime: _angular_core.ÉµregisterModuleFactory,\n};\nIdentifiers.Injector = { name: 'Injector', moduleName: CORE, runtime: _angular_core.Injector };\nIdentifiers.ViewEncapsulation = {\n    name: 'ViewEncapsulation',\n    moduleName: CORE,\n    runtime: _angular_core.ViewEncapsulation\n};\nIdentifiers.ChangeDetectionStrategy = {\n    name: 'ChangeDetectionStrategy',\n    moduleName: CORE,\n    runtime: _angular_core.ChangeDetectionStrategy\n};\nIdentifiers.SecurityContext = {\n    name: 'SecurityContext',\n    moduleName: CORE,\n    runtime: _angular_core.SecurityContext,\n};\nIdentifiers.LOCALE_ID = { name: 'LOCALE_ID', moduleName: CORE, runtime: _angular_core.LOCALE_ID };\nIdentifiers.TRANSLATIONS_FORMAT = {\n    name: 'TRANSLATIONS_FORMAT',\n    moduleName: CORE,\n    runtime: _angular_core.TRANSLATIONS_FORMAT\n};\nIdentifiers.inlineInterpolate = {\n    name: 'ÉµinlineInterpolate',\n    moduleName: CORE,\n    runtime: _angular_core.ÉµinlineInterpolate\n};\nIdentifiers.interpolate = { name: 'Éµinterpolate', moduleName: CORE, runtime: _angular_core.Éµinterpolate };\nIdentifiers.EMPTY_ARRAY = { name: 'ÉµEMPTY_ARRAY', moduleName: CORE, runtime: _angular_core.ÉµEMPTY_ARRAY };\nIdentifiers.EMPTY_MAP = { name: 'ÉµEMPTY_MAP', moduleName: CORE, runtime: _angular_core.ÉµEMPTY_MAP };\nIdentifiers.Renderer = { name: 'Renderer', moduleName: CORE, runtime: _angular_core.Renderer };\nIdentifiers.viewDef = { name: 'Éµvid', moduleName: CORE, runtime: _angular_core.Éµvid };\nIdentifiers.elementDef = { name: 'Éµeld', moduleName: CORE, runtime: _angular_core.Éµeld };\nIdentifiers.anchorDef = { name: 'Éµand', moduleName: CORE, runtime: _angular_core.Éµand };\nIdentifiers.textDef = { name: 'Éµted', moduleName: CORE, runtime: _angular_core.Éµted };\nIdentifiers.directiveDef = { name: 'Éµdid', moduleName: CORE, runtime: _angular_core.Éµdid };\nIdentifiers.providerDef = { name: 'Éµprd', moduleName: CORE, runtime: _angular_core.Éµprd };\nIdentifiers.queryDef = { name: 'Éµqud', moduleName: CORE, runtime: _angular_core.Éµqud };\nIdentifiers.pureArrayDef = { name: 'Éµpad', moduleName: CORE, runtime: _angular_core.Éµpad };\nIdentifiers.pureObjectDef = { name: 'Éµpod', moduleName: CORE, runtime: _angular_core.Éµpod };\nIdentifiers.purePipeDef = { name: 'Éµppd', moduleName: CORE, runtime: _angular_core.Éµppd };\nIdentifiers.pipeDef = { name: 'Éµpid', moduleName: CORE, runtime: _angular_core.Éµpid };\nIdentifiers.nodeValue = { name: 'Éµnov', moduleName: CORE, runtime: _angular_core.Éµnov };\nIdentifiers.ngContentDef = { name: 'Éµncd', moduleName: CORE, runtime: _angular_core.Éµncd };\nIdentifiers.unwrapValue = { name: 'Éµunv', moduleName: CORE, runtime: _angular_core.Éµunv };\nIdentifiers.createRendererType2 = { name: 'Éµcrt', moduleName: CORE, runtime: _angular_core.Éµcrt };\nIdentifiers.RendererType2 = {\n    name: 'RendererType2',\n    moduleName: CORE,\n    // type only\n    runtime: null\n};\nIdentifiers.ViewDefinition = {\n    name: 'ÉµViewDefinition',\n    moduleName: CORE,\n    // type only\n    runtime: null\n};\nIdentifiers.createComponentFactory = { name: 'Éµccf', moduleName: CORE, runtime: _angular_core.Éµccf };\n/**\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForReference(reference) {\n    return { identifier: { reference: reference } };\n}\n/**\n * @param {?} reflector\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForExternalReference(reflector, reference) {\n    return createTokenForReference(reflector.resolveExternalReference(reference));\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// http://cldr.unicode.org/index/cldr-spec/plural-rules\nvar PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n/**\n * Expands special forms into elements.\n *\n * For example,\n *\n * ```\n * { messages.length, plural,\n *   =0 {zero}\n *   =1 {one}\n *   other {more than one}\n * }\n * ```\n *\n * will be expanded into\n *\n * ```\n * <ng-container [ngPlural]=\"messages.length\">\n *   <ng-template ngPluralCase=\"=0\">zero</ng-template>\n *   <ng-template ngPluralCase=\"=1\">one</ng-template>\n *   <ng-template ngPluralCase=\"other\">more than one</ng-template>\n * </ng-container>\n * ```\n * @param {?} nodes\n * @return {?}\n */\nfunction expandNodes(nodes) {\n    var /** @type {?} */ expander = new _Expander();\n    return new ExpansionResult(visitAll(expander, nodes), expander.isExpanded, expander.errors);\n}\nvar ExpansionResult = (function () {\n    /**\n     * @param {?} nodes\n     * @param {?} expanded\n     * @param {?} errors\n     */\n    function ExpansionResult(nodes, expanded, errors) {\n        this.nodes = nodes;\n        this.expanded = expanded;\n        this.errors = errors;\n    }\n    return ExpansionResult;\n}());\nvar ExpansionError = (function (_super) {\n    __extends(ExpansionError, _super);\n    /**\n     * @param {?} span\n     * @param {?} errorMsg\n     */\n    function ExpansionError(span, errorMsg) {\n        return _super.call(this, span, errorMsg) || this;\n    }\n    return ExpansionError;\n}(ParseError));\n/**\n * Expand expansion forms (plural, select) to directives\n *\n * \\@internal\n */\nvar _Expander = (function () {\n    function _Expander() {\n        this.isExpanded = false;\n        this.errors = [];\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitElement = function (element, context) {\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitAttribute = function (attribute, context) { return attribute; };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitText = function (text, context) { return text; };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitComment = function (comment, context) { return comment; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansion = function (icu, context) {\n        this.isExpanded = true;\n        return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n            _expandDefaultForm(icu, this.errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansionCase = function (icuCase, context) {\n        throw new Error('Should not be reached');\n    };\n    return _Expander;\n}());\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandPluralForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n            errors.push(new ExpansionError(c.valueSourceSpan, \"Plural cases should be \\\"=<number>\\\" or one of \" + PLURAL_CASES.join(\", \")));\n        }\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        return new Element(\"ng-template\", [new Attribute$1('ngPluralCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandDefaultForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        if (c.value === 'other') {\n            // other is the default case when no values match\n            return new Element(\"ng-template\", [new Attribute$1('ngSwitchDefault', '', c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n        }\n        return new Element(\"ng-template\", [new Attribute$1('ngSwitchCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ProviderError = (function (_super) {\n    __extends(ProviderError, _super);\n    /**\n     * @param {?} message\n     * @param {?} span\n     */\n    function ProviderError(message, span) {\n        return _super.call(this, span, message) || this;\n    }\n    return ProviderError;\n}(ParseError));\nvar ProviderViewContext = (function () {\n    /**\n     * @param {?} reflector\n     * @param {?} component\n     */\n    function ProviderViewContext(reflector, component) {\n        var _this = this;\n        this.reflector = reflector;\n        this.component = component;\n        this.errors = [];\n        this.viewQueries = _getViewQueries(component);\n        this.viewProviders = new Map();\n        component.viewProviders.forEach(function (provider) {\n            if (_this.viewProviders.get(tokenReference(provider.token)) == null) {\n                _this.viewProviders.set(tokenReference(provider.token), true);\n            }\n        });\n    }\n    return ProviderViewContext;\n}());\nvar ProviderElementContext = (function () {\n    /**\n     * @param {?} viewContext\n     * @param {?} _parent\n     * @param {?} _isViewRoot\n     * @param {?} _directiveAsts\n     * @param {?} attrs\n     * @param {?} refs\n     * @param {?} isTemplate\n     * @param {?} contentQueryStartId\n     * @param {?} _sourceSpan\n     */\n    function ProviderElementContext(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, isTemplate, contentQueryStartId, _sourceSpan) {\n        var _this = this;\n        this.viewContext = viewContext;\n        this._parent = _parent;\n        this._isViewRoot = _isViewRoot;\n        this._directiveAsts = _directiveAsts;\n        this._sourceSpan = _sourceSpan;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._hasViewContainer = false;\n        this._queriedTokens = new Map();\n        this._attrs = {};\n        attrs.forEach(function (attrAst) { return _this._attrs[attrAst.name] = attrAst.value; });\n        var directivesMeta = _directiveAsts.map(function (directiveAst) { return directiveAst.directive; });\n        this._allProviders =\n            _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n        this._contentQueries = _getContentQueries(contentQueryStartId, directivesMeta);\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._addQueryReadsTo(provider.token, provider.token, _this._queriedTokens);\n        });\n        if (isTemplate) {\n            var templateRefId = createTokenForExternalReference(this.viewContext.reflector, Identifiers.TemplateRef);\n            this._addQueryReadsTo(templateRefId, templateRefId, this._queriedTokens);\n        }\n        refs.forEach(function (refAst) {\n            var defaultQueryValue = refAst.value ||\n                createTokenForExternalReference(_this.viewContext.reflector, Identifiers.ElementRef);\n            _this._addQueryReadsTo({ value: refAst.name }, defaultQueryValue, _this._queriedTokens);\n        });\n        if (this._queriedTokens.get(this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef))) {\n            this._hasViewContainer = true;\n        }\n        // create the providers that we know are eager first\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            var eager = provider.eager || _this._queriedTokens.get(tokenReference(provider.token));\n            if (eager) {\n                _this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ProviderElementContext.prototype.afterElement = function () {\n        var _this = this;\n        // collect lazy providers\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n        });\n    };\n    Object.defineProperty(ProviderElementContext.prototype, \"transformProviders\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            // Note: Maps keep their insertion order.\n            var /** @type {?} */ lazyProviders = [];\n            var /** @type {?} */ eagerProviders = [];\n            this._transformedProviders.forEach(function (provider) {\n                if (provider.eager) {\n                    eagerProviders.push(provider);\n                }\n                else {\n                    lazyProviders.push(provider);\n                }\n            });\n            return lazyProviders.concat(eagerProviders);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedDirectiveAsts\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ sortedProviderTypes = this.transformProviders.map(function (provider) { return provider.token.identifier; });\n            var /** @type {?} */ sortedDirectives = this._directiveAsts.slice();\n            sortedDirectives.sort(function (dir1, dir2) { return sortedProviderTypes.indexOf(dir1.directive.type) -\n                sortedProviderTypes.indexOf(dir2.directive.type); });\n            return sortedDirectives;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedHasViewContainer\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._hasViewContainer; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"queryMatches\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ allMatches = [];\n            this._queriedTokens.forEach(function (matches) { allMatches.push.apply(allMatches, matches); });\n            return allMatches;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    ProviderElementContext.prototype._addQueryReadsTo = function (token, defaultValue, queryReadTokens) {\n        this._getQueriesFor(token).forEach(function (query) {\n            var /** @type {?} */ queryValue = query.meta.read || defaultValue;\n            var /** @type {?} */ tokenRef = tokenReference(queryValue);\n            var /** @type {?} */ queryMatches = queryReadTokens.get(tokenRef);\n            if (!queryMatches) {\n                queryMatches = [];\n                queryReadTokens.set(tokenRef, queryMatches);\n            }\n            queryMatches.push({ queryId: query.queryId, value: queryValue });\n        });\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getQueriesFor = function (token) {\n        var /** @type {?} */ result = [];\n        var /** @type {?} */ currentEl = this;\n        var /** @type {?} */ distance = 0;\n        var /** @type {?} */ queries;\n        while (currentEl !== null) {\n            queries = currentEl._contentQueries.get(tokenReference(token));\n            if (queries) {\n                result.push.apply(result, queries.filter(function (query) { return query.meta.descendants || distance <= 1; }));\n            }\n            if (currentEl._directiveAsts.length > 0) {\n                distance++;\n            }\n            currentEl = currentEl._parent;\n        }\n        queries = this.viewContext.viewQueries.get(tokenReference(token));\n        if (queries) {\n            result.push.apply(result, queries);\n        }\n        return result;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getOrCreateLocalProvider = function (requestingProviderType, token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider || ((requestingProviderType === ProviderAstType.Directive ||\n            requestingProviderType === ProviderAstType.PublicService) &&\n            resolvedProvider.providerType === ProviderAstType.PrivateService) ||\n            ((requestingProviderType === ProviderAstType.PrivateService ||\n                requestingProviderType === ProviderAstType.PublicService) &&\n                resolvedProvider.providerType === ProviderAstType.Builtin)) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this.viewContext.errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), this._sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = ((_this._getDependency(resolvedProvider.providerType, { token: provider.useExisting }, eager)));\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getLocalDependency = function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        if (dep.isAttribute) {\n            var /** @type {?} */ attrValue = this._attrs[((dep.token)).value];\n            return { isValue: true, value: attrValue == null ? null : attrValue };\n        }\n        if (dep.token != null) {\n            // access builtints\n            if ((requestingProviderType === ProviderAstType.Directive ||\n                requestingProviderType === ProviderAstType.Component)) {\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.Renderer) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ElementRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ChangeDetectorRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                    return dep;\n                }\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                    this._hasViewContainer = true;\n                }\n            }\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.viewContext.reflector.resolveExternalReference(Identifiers.Injector)) {\n                return dep;\n            }\n            // access providers\n            if (this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager) != null) {\n                return dep;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getDependency = function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ currElement = this;\n        var /** @type {?} */ currEager = eager;\n        var /** @type {?} */ result = null;\n        if (!dep.isSkipSelf) {\n            result = this._getLocalDependency(requestingProviderType, dep, eager);\n        }\n        if (dep.isSelf) {\n            if (!result && dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n        }\n        else {\n            // check parent elements\n            while (!result && currElement._parent) {\n                var /** @type {?} */ prevElement = currElement;\n                currElement = currElement._parent;\n                if (prevElement._isViewRoot) {\n                    currEager = false;\n                }\n                result = currElement._getLocalDependency(ProviderAstType.PublicService, dep, currEager);\n            }\n            // check @Host restriction\n            if (!result) {\n                if (!dep.isHost || this.viewContext.component.isHost ||\n                    this.viewContext.component.type.reference === tokenReference(/** @type {?} */ ((dep.token))) ||\n                    this.viewContext.viewProviders.get(tokenReference(/** @type {?} */ ((dep.token)))) != null) {\n                    result = dep;\n                }\n                else {\n                    result = dep.isOptional ? result = { isValue: true, value: null } : null;\n                }\n            }\n        }\n        if (!result) {\n            this.viewContext.errors.push(new ProviderError(\"No provider for \" + tokenName(/** @type {?} */ ((dep.token))), this._sourceSpan));\n        }\n        return result;\n    };\n    return ProviderElementContext;\n}());\nvar NgModuleProviderAnalyzer = (function () {\n    /**\n     * @param {?} reflector\n     * @param {?} ngModule\n     * @param {?} extraProviders\n     * @param {?} sourceSpan\n     */\n    function NgModuleProviderAnalyzer(reflector, ngModule, extraProviders, sourceSpan) {\n        var _this = this;\n        this.reflector = reflector;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._errors = [];\n        this._allProviders = new Map();\n        ngModule.transitiveModule.modules.forEach(function (ngModuleType) {\n            var ngModuleProvider = { token: { identifier: ngModuleType }, useClass: ngModuleType };\n            _resolveProviders([ngModuleProvider], ProviderAstType.PublicService, true, sourceSpan, _this._errors, _this._allProviders);\n        });\n        _resolveProviders(ngModule.transitiveModule.providers.map(function (entry) { return entry.provider; }).concat(extraProviders), ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders);\n    }\n    /**\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype.parse = function () {\n        var _this = this;\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.token, provider.eager);\n        });\n        if (this._errors.length > 0) {\n            var /** @type {?} */ errorString = this._errors.join('\\n');\n            throw new Error(\"Provider parse errors:\\n\" + errorString);\n        }\n        // Note: Maps keep their insertion order.\n        var /** @type {?} */ lazyProviders = [];\n        var /** @type {?} */ eagerProviders = [];\n        this._transformedProviders.forEach(function (provider) {\n            if (provider.eager) {\n                eagerProviders.push(provider);\n            }\n            else {\n                lazyProviders.push(provider);\n            }\n        });\n        return lazyProviders.concat(eagerProviders);\n    };\n    /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider = function (token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this._errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), resolvedProvider.sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = _this._getDependency({ token: provider.useExisting }, eager, resolvedProvider.sourceSpan);\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getDependency = function (dep, eager, requestorSourceSpan) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ foundLocal = false;\n        if (!dep.isSkipSelf && dep.token != null) {\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.reflector.resolveExternalReference(Identifiers.Injector) ||\n                tokenReference(dep.token) ===\n                    this.reflector.resolveExternalReference(Identifiers.ComponentFactoryResolver)) {\n                foundLocal = true;\n                // access providers\n            }\n            else if (this._getOrCreateLocalProvider(dep.token, eager) != null) {\n                foundLocal = true;\n            }\n        }\n        var /** @type {?} */ result = dep;\n        if (dep.isSelf && !foundLocal) {\n            if (dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n            else {\n                this._errors.push(new ProviderError(\"No provider for \" + tokenName(/** @type {?} */ ((dep.token))), requestorSourceSpan));\n            }\n        }\n        return result;\n    };\n    return NgModuleProviderAnalyzer;\n}());\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProvider(provider, _a) {\n    var useExisting = _a.useExisting, useValue = _a.useValue, deps = _a.deps;\n    return {\n        token: provider.token,\n        useClass: provider.useClass,\n        useExisting: useExisting,\n        useFactory: provider.useFactory,\n        useValue: useValue,\n        deps: deps,\n        multi: provider.multi\n    };\n}\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProviderAst(provider, _a) {\n    var eager = _a.eager, providers = _a.providers;\n    return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan);\n}\n/**\n * @param {?} directives\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @return {?}\n */\nfunction _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n    var /** @type {?} */ providersByToken = new Map();\n    directives.forEach(function (directive) {\n        var /** @type {?} */ dirProvider = { token: { identifier: directive.type }, useClass: directive.type };\n        _resolveProviders([dirProvider], directive.isComponent ? ProviderAstType.Component : ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken);\n    });\n    // Note: directives need to be able to overwrite providers of a component!\n    var /** @type {?} */ directivesWithComponentFirst = directives.filter(function (dir) { return dir.isComponent; }).concat(directives.filter(function (dir) { return !dir.isComponent; }));\n    directivesWithComponentFirst.forEach(function (directive) {\n        _resolveProviders(directive.providers, ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken);\n        _resolveProviders(directive.viewProviders, ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken);\n    });\n    return providersByToken;\n}\n/**\n * @param {?} providers\n * @param {?} providerType\n * @param {?} eager\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @param {?} targetProvidersByToken\n * @return {?}\n */\nfunction _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken) {\n    providers.forEach(function (provider) {\n        var /** @type {?} */ resolvedProvider = targetProvidersByToken.get(tokenReference(provider.token));\n        if (resolvedProvider != null && !!resolvedProvider.multiProvider !== !!provider.multi) {\n            targetErrors.push(new ProviderError(\"Mixing multi and non multi provider is not possible for token \" + tokenName(resolvedProvider.token), sourceSpan));\n        }\n        if (!resolvedProvider) {\n            var /** @type {?} */ lifecycleHooks = provider.token.identifier &&\n                ((provider.token.identifier)).lifecycleHooks ?\n                ((provider.token.identifier)).lifecycleHooks :\n                [];\n            var /** @type {?} */ isUseValue = !(provider.useClass || provider.useExisting || provider.useFactory);\n            resolvedProvider = new ProviderAst(provider.token, !!provider.multi, eager || isUseValue, [provider], providerType, lifecycleHooks, sourceSpan);\n            targetProvidersByToken.set(tokenReference(provider.token), resolvedProvider);\n        }\n        else {\n            if (!provider.multi) {\n                resolvedProvider.providers.length = 0;\n            }\n            resolvedProvider.providers.push(provider);\n        }\n    });\n}\n/**\n * @param {?} component\n * @return {?}\n */\nfunction _getViewQueries(component) {\n    // Note: queries start with id 1 so we can use the number in a Bloom filter!\n    var /** @type {?} */ viewQueryId = 1;\n    var /** @type {?} */ viewQueries = new Map();\n    if (component.viewQueries) {\n        component.viewQueries.forEach(function (query) { return _addQueryToTokenMap(viewQueries, { meta: query, queryId: viewQueryId++ }); });\n    }\n    return viewQueries;\n}\n/**\n * @param {?} contentQueryStartId\n * @param {?} directives\n * @return {?}\n */\nfunction _getContentQueries(contentQueryStartId, directives) {\n    var /** @type {?} */ contentQueryId = contentQueryStartId;\n    var /** @type {?} */ contentQueries = new Map();\n    directives.forEach(function (directive, directiveIndex) {\n        if (directive.queries) {\n            directive.queries.forEach(function (query) { return _addQueryToTokenMap(contentQueries, { meta: query, queryId: contentQueryId++ }); });\n        }\n    });\n    return contentQueries;\n}\n/**\n * @param {?} map\n * @param {?} query\n * @return {?}\n */\nfunction _addQueryToTokenMap(map, query) {\n    query.meta.selectors.forEach(function (token) {\n        var /** @type {?} */ entry = map.get(tokenReference(token));\n        if (!entry) {\n            entry = [];\n            map.set(tokenReference(token), entry);\n        }\n        entry.push(query);\n    });\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar ElementSchemaRegistry = (function () {\n    function ElementSchemaRegistry() {\n    }\n    /**\n     * @abstract\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.hasProperty = function (tagName, propName, schemaMetas) { };\n    /**\n     * @abstract\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.hasElement = function (tagName, schemaMetas) { };\n    /**\n     * @abstract\n     * @param {?} elementName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.securityContext = function (elementName, propName, isAttribute) { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.allKnownElementNames = function () { };\n    /**\n     * @abstract\n     * @param {?} propName\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.getMappedPropName = function (propName) { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.getDefaultComponentElementName = function () { };\n    /**\n     * @abstract\n     * @param {?} name\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.validateProperty = function (name) { };\n    /**\n     * @abstract\n     * @param {?} name\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.validateAttribute = function (name) { };\n    /**\n     * @abstract\n     * @param {?} propName\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = function (propName) { };\n    /**\n     * @abstract\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.normalizeAnimationStyleValue = function (camelCaseProp, userProvidedProp, val) { };\n    return ElementSchemaRegistry;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar StyleWithImports = (function () {\n    /**\n     * @param {?} style\n     * @param {?} styleUrls\n     */\n    function StyleWithImports(style$$1, styleUrls) {\n        this.style = style$$1;\n        this.styleUrls = styleUrls;\n    }\n    return StyleWithImports;\n}());\n/**\n * @param {?} url\n * @return {?}\n */\nfunction isStyleUrlResolvable(url) {\n    if (url == null || url.length === 0 || url[0] == '/')\n        return false;\n    var /** @type {?} */ schemeMatch = url.match(URL_WITH_SCHEMA_REGEXP);\n    return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n}\n/**\n * Rewrites stylesheets by resolving and removing the \\@import urls that\n * are either relative or don't have a `package:` scheme\n * @param {?} resolver\n * @param {?} baseUrl\n * @param {?} cssText\n * @return {?}\n */\nfunction extractStyleUrls(resolver, baseUrl, cssText) {\n    var /** @type {?} */ foundUrls = [];\n    var /** @type {?} */ modifiedCssText = cssText.replace(CSS_COMMENT_REGEXP, '').replace(CSS_IMPORT_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ url = m[1] || m[2];\n        if (!isStyleUrlResolvable(url)) {\n            // Do not attempt to resolve non-package absolute URLs with URI scheme\n            return m[0];\n        }\n        foundUrls.push(resolver.resolve(baseUrl, url));\n        return '';\n    });\n    return new StyleWithImports(modifiedCssText, foundUrls);\n}\nvar CSS_IMPORT_REGEXP = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\nvar CSS_COMMENT_REGEXP = /\\/\\*.+?\\*\\//g;\nvar URL_WITH_SCHEMA_REGEXP = /^([^:/?#]+):/;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PROPERTY_PARTS_SEPARATOR = '.';\nvar ATTRIBUTE_PREFIX = 'attr';\nvar CLASS_PREFIX = 'class';\nvar STYLE_PREFIX = 'style';\nvar ANIMATE_PROP_PREFIX = 'animate-';\nvar BoundPropertyType = {};\nBoundPropertyType.DEFAULT = 0;\nBoundPropertyType.LITERAL_ATTR = 1;\nBoundPropertyType.ANIMATION = 2;\nBoundPropertyType[BoundPropertyType.DEFAULT] = \"DEFAULT\";\nBoundPropertyType[BoundPropertyType.LITERAL_ATTR] = \"LITERAL_ATTR\";\nBoundPropertyType[BoundPropertyType.ANIMATION] = \"ANIMATION\";\n/**\n * Represents a parsed property.\n */\nvar BoundProperty = (function () {\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} type\n     * @param {?} sourceSpan\n     */\n    function BoundProperty(name, expression, type, sourceSpan) {\n        this.name = name;\n        this.expression = expression;\n        this.type = type;\n        this.sourceSpan = sourceSpan;\n    }\n    Object.defineProperty(BoundProperty.prototype, \"isLiteral\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.type === BoundPropertyType.LITERAL_ATTR; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BoundProperty.prototype, \"isAnimation\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.type === BoundPropertyType.ANIMATION; },\n        enumerable: true,\n        configurable: true\n    });\n    return BoundProperty;\n}());\n/**\n * Parses bindings in templates and in the directive host area.\n */\nvar BindingParser = (function () {\n    /**\n     * @param {?} _exprParser\n     * @param {?} _interpolationConfig\n     * @param {?} _schemaRegistry\n     * @param {?} pipes\n     * @param {?} _targetErrors\n     */\n    function BindingParser(_exprParser, _interpolationConfig, _schemaRegistry, pipes, _targetErrors) {\n        var _this = this;\n        this._exprParser = _exprParser;\n        this._interpolationConfig = _interpolationConfig;\n        this._schemaRegistry = _schemaRegistry;\n        this._targetErrors = _targetErrors;\n        this.pipesByName = new Map();\n        this._usedPipes = new Map();\n        pipes.forEach(function (pipe) { return _this.pipesByName.set(pipe.name, pipe); });\n    }\n    /**\n     * @return {?}\n     */\n    BindingParser.prototype.getUsedPipes = function () { return Array.from(this._usedPipes.values()); };\n    /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostPropertyAsts = function (dirMeta, elementSelector, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostProperties) {\n            var /** @type {?} */ boundProps_1 = [];\n            Object.keys(dirMeta.hostProperties).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostProperties[propName];\n                if (typeof expression === 'string') {\n                    _this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host property binding \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return boundProps_1.map(function (prop) { return _this.createElementPropertyAst(elementSelector, prop); });\n        }\n        return null;\n    };\n    /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostEventAsts = function (dirMeta, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostListeners) {\n            var /** @type {?} */ targetEventAsts_1 = [];\n            Object.keys(dirMeta.hostListeners).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostListeners[propName];\n                if (typeof expression === 'string') {\n                    _this.parseEvent(propName, expression, sourceSpan, [], targetEventAsts_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host listener \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return targetEventAsts_1;\n        }\n        return null;\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.parseInterpolation = function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = ((this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig)));\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    BindingParser.prototype.parseInlineTemplateBinding = function (prefixToken, value, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n        var /** @type {?} */ bindings = this._parseTemplateBindings(prefixToken, value, sourceSpan);\n        for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n            var /** @type {?} */ binding = bindings[i];\n            if (binding.keyIsVar) {\n                targetVars.push(new VariableAst(binding.key, binding.name, sourceSpan));\n            }\n            else if (binding.expression) {\n                this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n            else {\n                targetMatchableAttrs.push([binding.key, '']);\n                this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseTemplateBindings = function (prefixToken, value, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ bindingsResult = this._exprParser.parseTemplateBindings(prefixToken, value, sourceInfo);\n            this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n            bindingsResult.templateBindings.forEach(function (binding) {\n                if (binding.expression) {\n                    _this._checkPipes(binding.expression, sourceSpan);\n                }\n            });\n            bindingsResult.warnings.forEach(function (warning) { _this._reportError(warning, sourceSpan, ParseErrorLevel.WARNING); });\n            return bindingsResult.templateBindings;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return [];\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parseLiteralAttr = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        if (_isAnimationLabel(name)) {\n            name = name.substring(1);\n            if (value) {\n                this._reportError(\"Assigning animation triggers via @prop=\\\"exp\\\" attributes with an expression is invalid.\" +\n                    \" Use property bindings (e.g. [@prop]=\\\"exp\\\") or use an attribute without a value (e.g. @prop) instead.\", sourceSpan, ParseErrorLevel.ERROR);\n            }\n            this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            targetProps.push(new BoundProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), BoundPropertyType.LITERAL_ATTR, sourceSpan));\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyBinding = function (name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ isAnimationProp = false;\n        if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n            isAnimationProp = true;\n            name = name.substring(ANIMATE_PROP_PREFIX.length);\n        }\n        else if (_isAnimationLabel(name)) {\n            isAnimationProp = true;\n            name = name.substring(1);\n        }\n        if (isAnimationProp) {\n            this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyInterpolation = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ expr = this.parseInterpolation(value, sourceSpan);\n        if (expr) {\n            this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parsePropertyAst = function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.DEFAULT, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimation = function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n        // This will occur when a @trigger is not paired with an expression.\n        // For animations it is valid to not have an expression since */void\n        // states will be applied by angular when the element is attached/detached\n        var /** @type {?} */ ast = this._parseBinding(expression || 'null', false, sourceSpan);\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.ANIMATION, sourceSpan));\n    };\n    /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseBinding = function (value, isHostBinding, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = isHostBinding ?\n                this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n                this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    BindingParser.prototype.createElementPropertyAst = function (elementSelector, boundProp) {\n        if (boundProp.isAnimation) {\n            return new BoundElementPropertyAst(boundProp.name, PropertyBindingType.Animation, _angular_core.SecurityContext.NONE, boundProp.expression, null, boundProp.sourceSpan);\n        }\n        var /** @type {?} */ unit = null;\n        var /** @type {?} */ bindingType = ((undefined));\n        var /** @type {?} */ boundPropertyName = null;\n        var /** @type {?} */ parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n        var /** @type {?} */ securityContexts = ((undefined));\n        // Check check for special cases (prefix style, attr, class)\n        if (parts.length > 1) {\n            if (parts[0] == ATTRIBUTE_PREFIX) {\n                boundPropertyName = parts[1];\n                this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n                securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n                var /** @type {?} */ nsSeparatorIdx = boundPropertyName.indexOf(':');\n                if (nsSeparatorIdx > -1) {\n                    var /** @type {?} */ ns = boundPropertyName.substring(0, nsSeparatorIdx);\n                    var /** @type {?} */ name = boundPropertyName.substring(nsSeparatorIdx + 1);\n                    boundPropertyName = mergeNsAndName(ns, name);\n                }\n                bindingType = PropertyBindingType.Attribute;\n            }\n            else if (parts[0] == CLASS_PREFIX) {\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Class;\n                securityContexts = [_angular_core.SecurityContext.NONE];\n            }\n            else if (parts[0] == STYLE_PREFIX) {\n                unit = parts.length > 2 ? parts[2] : null;\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Style;\n                securityContexts = [_angular_core.SecurityContext.STYLE];\n            }\n        }\n        // If not a special case, use the full property name\n        if (boundPropertyName === null) {\n            boundPropertyName = this._schemaRegistry.getMappedPropName(boundProp.name);\n            securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n            bindingType = PropertyBindingType.Property;\n            this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n        }\n        return new BoundElementPropertyAst(boundPropertyName, bindingType, securityContexts[0], boundProp.expression, unit, boundProp.sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype.parseEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        if (_isAnimationLabel(name)) {\n            name = name.substr(1);\n            this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n        }\n        else {\n            this._parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimationEvent = function (name, expression, sourceSpan, targetEvents) {\n        var /** @type {?} */ matches = splitAtPeriod(name, [name, '']);\n        var /** @type {?} */ eventName = matches[0];\n        var /** @type {?} */ phase = matches[1].toLowerCase();\n        if (phase) {\n            switch (phase) {\n                case 'start':\n                case 'done':\n                    var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n                    targetEvents.push(new BoundEventAst(eventName, null, phase, ast, sourceSpan));\n                    break;\n                default:\n                    this._reportError(\"The provided animation output phase value \\\"\" + phase + \"\\\" for \\\"@\" + eventName + \"\\\" is not supported (use start or done)\", sourceSpan);\n                    break;\n            }\n        }\n        else {\n            this._reportError(\"The animation trigger output event (@\" + eventName + \") is missing its phase value name (start or done are currently supported)\", sourceSpan);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        // long format: 'target: eventName'\n        var _a = splitAtColon(name, [/** @type {?} */ ((null)), name]), target = _a[0], eventName = _a[1];\n        var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n        targetMatchableAttrs.push([/** @type {?} */ ((name)), /** @type {?} */ ((ast.source))]);\n        targetEvents.push(new BoundEventAst(eventName, target, null, ast, sourceSpan));\n        // Don't detect directives for event names for now,\n        // so don't add the event name to the matchableAttrs\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseAction = function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n            if (ast) {\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            }\n            if (!ast || ast.ast instanceof EmptyExpr) {\n                this._reportError(\"Empty expressions are not allowed\", sourceSpan);\n                return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n            }\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    BindingParser.prototype._reportError = function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._reportExpressionParserErrors = function (errors, sourceSpan) {\n        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n            var error = errors_1[_i];\n            this._reportError(error.message, sourceSpan);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._checkPipes = function (ast, sourceSpan) {\n        var _this = this;\n        if (ast) {\n            var /** @type {?} */ collector = new PipeCollector();\n            ast.visit(collector);\n            collector.pipes.forEach(function (ast, pipeName) {\n                var /** @type {?} */ pipeMeta = _this.pipesByName.get(pipeName);\n                if (!pipeMeta) {\n                    _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", new ParseSourceSpan(sourceSpan.start.moveBy(ast.span.start), sourceSpan.start.moveBy(ast.span.end)));\n                }\n                else {\n                    _this._usedPipes.set(pipeName, pipeMeta);\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    BindingParser.prototype._validatePropertyOrAttributeName = function (propName, sourceSpan, isAttr) {\n        var /** @type {?} */ report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n            this._schemaRegistry.validateProperty(propName);\n        if (report.error) {\n            this._reportError(/** @type {?} */ ((report.msg)), sourceSpan, ParseErrorLevel.ERROR);\n        }\n    };\n    return BindingParser;\n}());\nvar PipeCollector = (function (_super) {\n    __extends(PipeCollector, _super);\n    function PipeCollector() {\n        var _this = _super.apply(this, arguments) || this;\n        _this.pipes = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    PipeCollector.prototype.visitPipe = function (ast, context) {\n        this.pipes.set(ast.name, ast);\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    return PipeCollector;\n}(RecursiveAstVisitor));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _isAnimationLabel(name) {\n    return name[0] == '@';\n}\n/**\n * @param {?} registry\n * @param {?} selector\n * @param {?} propName\n * @param {?} isAttribute\n * @return {?}\n */\nfunction calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n    var /** @type {?} */ ctxs = [];\n    CssSelector.parse(selector).forEach(function (selector) {\n        var /** @type {?} */ elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n        var /** @type {?} */ notElementNames = new Set(selector.notSelectors.filter(function (selector) { return selector.isElementSelector(); })\n            .map(function (selector) { return selector.element; }));\n        var /** @type {?} */ possibleElementNames = elementNames.filter(function (elementName) { return !notElementNames.has(elementName); });\n        ctxs.push.apply(ctxs, possibleElementNames.map(function (elementName) { return registry.securityContext(elementName, propName, isAttribute); }));\n    });\n    return ctxs.length === 0 ? [_angular_core.SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NG_CONTENT_SELECT_ATTR = 'select';\nvar LINK_ELEMENT = 'link';\nvar LINK_STYLE_REL_ATTR = 'rel';\nvar LINK_STYLE_HREF_ATTR = 'href';\nvar LINK_STYLE_REL_VALUE = 'stylesheet';\nvar STYLE_ELEMENT = 'style';\nvar SCRIPT_ELEMENT = 'script';\nvar NG_NON_BINDABLE_ATTR = 'ngNonBindable';\nvar NG_PROJECT_AS = 'ngProjectAs';\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction preparseElement(ast) {\n    var /** @type {?} */ selectAttr = ((null));\n    var /** @type {?} */ hrefAttr = ((null));\n    var /** @type {?} */ relAttr = ((null));\n    var /** @type {?} */ nonBindable = false;\n    var /** @type {?} */ projectAs = ((null));\n    ast.attrs.forEach(function (attr) {\n        var /** @type {?} */ lcAttrName = attr.name.toLowerCase();\n        if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n            selectAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n            hrefAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n            relAttr = attr.value;\n        }\n        else if (attr.name == NG_NON_BINDABLE_ATTR) {\n            nonBindable = true;\n        }\n        else if (attr.name == NG_PROJECT_AS) {\n            if (attr.value.length > 0) {\n                projectAs = attr.value;\n            }\n        }\n    });\n    selectAttr = normalizeNgContentSelect(selectAttr);\n    var /** @type {?} */ nodeName = ast.name.toLowerCase();\n    var /** @type {?} */ type = PreparsedElementType.OTHER;\n    if (isNgContent(nodeName)) {\n        type = PreparsedElementType.NG_CONTENT;\n    }\n    else if (nodeName == STYLE_ELEMENT) {\n        type = PreparsedElementType.STYLE;\n    }\n    else if (nodeName == SCRIPT_ELEMENT) {\n        type = PreparsedElementType.SCRIPT;\n    }\n    else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n        type = PreparsedElementType.STYLESHEET;\n    }\n    return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n}\nvar PreparsedElementType = {};\nPreparsedElementType.NG_CONTENT = 0;\nPreparsedElementType.STYLE = 1;\nPreparsedElementType.STYLESHEET = 2;\nPreparsedElementType.SCRIPT = 3;\nPreparsedElementType.OTHER = 4;\nPreparsedElementType[PreparsedElementType.NG_CONTENT] = \"NG_CONTENT\";\nPreparsedElementType[PreparsedElementType.STYLE] = \"STYLE\";\nPreparsedElementType[PreparsedElementType.STYLESHEET] = \"STYLESHEET\";\nPreparsedElementType[PreparsedElementType.SCRIPT] = \"SCRIPT\";\nPreparsedElementType[PreparsedElementType.OTHER] = \"OTHER\";\nvar PreparsedElement = (function () {\n    /**\n     * @param {?} type\n     * @param {?} selectAttr\n     * @param {?} hrefAttr\n     * @param {?} nonBindable\n     * @param {?} projectAs\n     */\n    function PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n        this.type = type;\n        this.selectAttr = selectAttr;\n        this.hrefAttr = hrefAttr;\n        this.nonBindable = nonBindable;\n        this.projectAs = projectAs;\n    }\n    return PreparsedElement;\n}());\n/**\n * @param {?} selectAttr\n * @return {?}\n */\nfunction normalizeNgContentSelect(selectAttr) {\n    if (selectAttr === null || selectAttr.length === 0) {\n        return '*';\n    }\n    return selectAttr;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n// Group 1 = \"bind-\"\nvar KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nvar KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nvar KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nvar KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nvar KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nvar KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nvar IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nvar IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nvar IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nvar IDENT_EVENT_IDX = 10;\n// deprecated in 4.x\nvar TEMPLATE_ELEMENT = 'template';\n// deprecated in 4.x\nvar TEMPLATE_ATTR = 'template';\nvar TEMPLATE_ATTR_PREFIX = '*';\nvar CLASS_ATTR = 'class';\nvar TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\nvar TEMPLATE_ELEMENT_DEPRECATION_WARNING = 'The <template> element is deprecated. Use <ng-template> instead';\nvar TEMPLATE_ATTR_DEPRECATION_WARNING = 'The template attribute is deprecated. Use an ng-template element instead.';\nvar warningCounts = {};\n/**\n * @param {?} warnings\n * @return {?}\n */\nfunction warnOnlyOnce(warnings) {\n    return function (error) {\n        if (warnings.indexOf(error.msg) !== -1) {\n            warningCounts[error.msg] = (warningCounts[error.msg] || 0) + 1;\n            return warningCounts[error.msg] <= 1;\n        }\n        return true;\n    };\n}\n/**\n * Provides an array of {\\@link TemplateAstVisitor}s which will be used to transform\n * parsed templates before compilation is invoked, allowing custom expression syntax\n * and other advanced transformations.\n *\n * This is currently an internal-only feature and not meant for general use.\n */\nvar TEMPLATE_TRANSFORMS = new _angular_core.InjectionToken('TemplateTransforms');\nvar TemplateParseError = (function (_super) {\n    __extends(TemplateParseError, _super);\n    /**\n     * @param {?} message\n     * @param {?} span\n     * @param {?} level\n     */\n    function TemplateParseError(message, span, level) {\n        return _super.call(this, span, message, level) || this;\n    }\n    return TemplateParseError;\n}(ParseError));\nvar TemplateParseResult = (function () {\n    /**\n     * @param {?=} templateAst\n     * @param {?=} usedPipes\n     * @param {?=} errors\n     */\n    function TemplateParseResult(templateAst, usedPipes, errors) {\n        this.templateAst = templateAst;\n        this.usedPipes = usedPipes;\n        this.errors = errors;\n    }\n    return TemplateParseResult;\n}());\nvar TemplateParser = (function () {\n    /**\n     * @param {?} _config\n     * @param {?} _reflector\n     * @param {?} _exprParser\n     * @param {?} _schemaRegistry\n     * @param {?} _htmlParser\n     * @param {?} _console\n     * @param {?} transforms\n     */\n    function TemplateParser(_config, _reflector, _exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n        this._config = _config;\n        this._reflector = _reflector;\n        this._exprParser = _exprParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._htmlParser = _htmlParser;\n        this._console = _console;\n        this.transforms = transforms;\n    }\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @return {?}\n     */\n    TemplateParser.prototype.parse = function (component, template, directives, pipes, schemas, templateUrl) {\n        var /** @type {?} */ result = this.tryParse(component, template, directives, pipes, schemas, templateUrl);\n        var /** @type {?} */ warnings = ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.WARNING; })\n            .filter(warnOnlyOnce([TEMPLATE_ATTR_DEPRECATION_WARNING, TEMPLATE_ELEMENT_DEPRECATION_WARNING]));\n        var /** @type {?} */ errors = ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.ERROR; });\n        if (warnings.length > 0) {\n            this._console.warn(\"Template parse warnings:\\n\" + warnings.join('\\n'));\n        }\n        if (errors.length > 0) {\n            var /** @type {?} */ errorString = errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString);\n        }\n        return { template: /** @type {?} */ ((result.templateAst)), pipes: /** @type {?} */ ((result.usedPipes)) };\n    };\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParse = function (component, template, directives, pipes, schemas, templateUrl) {\n        return this.tryParseHtml(this.expandHtml(/** @type {?} */ ((this._htmlParser)).parse(template, templateUrl, true, this.getInterpolationConfig(component))), component, directives, pipes, schemas);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParseHtml = function (htmlAstWithErrors, component, directives, pipes, schemas) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        var /** @type {?} */ usedPipes = [];\n        if (htmlAstWithErrors.rootNodes.length > 0) {\n            var /** @type {?} */ uniqDirectives = removeSummaryDuplicates(directives);\n            var /** @type {?} */ uniqPipes = removeSummaryDuplicates(pipes);\n            var /** @type {?} */ providerViewContext = new ProviderViewContext(this._reflector, component);\n            var /** @type {?} */ interpolationConfig = ((undefined));\n            if (component.template && component.template.interpolation) {\n                interpolationConfig = {\n                    start: component.template.interpolation[0],\n                    end: component.template.interpolation[1]\n                };\n            }\n            var /** @type {?} */ bindingParser = new BindingParser(this._exprParser, /** @type {?} */ ((interpolationConfig)), this._schemaRegistry, uniqPipes, errors);\n            var /** @type {?} */ parseVisitor = new TemplateParseVisitor(this._reflector, this._config, providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n            result = visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n            errors.push.apply(errors, providerViewContext.errors);\n            usedPipes.push.apply(usedPipes, bindingParser.getUsedPipes());\n        }\n        else {\n            result = [];\n        }\n        this._assertNoReferenceDuplicationOnTemplate(result, errors);\n        if (errors.length > 0) {\n            return new TemplateParseResult(result, usedPipes, errors);\n        }\n        if (this.transforms) {\n            this.transforms.forEach(function (transform) { result = templateVisitAll(transform, result); });\n        }\n        return new TemplateParseResult(result, usedPipes, errors);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    TemplateParser.prototype.expandHtml = function (htmlAstWithErrors, forced) {\n        if (forced === void 0) { forced = false; }\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        if (errors.length == 0 || forced) {\n            // Transform ICU messages to angular directives\n            var /** @type {?} */ expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n            errors.push.apply(errors, expandedHtmlAst.errors);\n            htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n        }\n        return htmlAstWithErrors;\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    TemplateParser.prototype.getInterpolationConfig = function (component) {\n        if (component.template) {\n            return InterpolationConfig.fromArray(component.template.interpolation);\n        }\n        return undefined;\n    };\n    /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate = function (result, errors) {\n        var /** @type {?} */ existingReferences = [];\n        result.filter(function (element) { return !!((element)).references; })\n            .forEach(function (element) { return ((element)).references.forEach(function (reference) {\n            var /** @type {?} */ name = reference.name;\n            if (existingReferences.indexOf(name) < 0) {\n                existingReferences.push(name);\n            }\n            else {\n                var /** @type {?} */ error = new TemplateParseError(\"Reference \\\"#\" + name + \"\\\" is defined several times\", reference.sourceSpan, ParseErrorLevel.ERROR);\n                errors.push(error);\n            }\n        }); });\n    };\n    return TemplateParser;\n}());\nTemplateParser.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nTemplateParser.ctorParameters = function () { return [\n    { type: CompilerConfig, },\n    { type: CompileReflector, },\n    { type: Parser, },\n    { type: ElementSchemaRegistry, },\n    { type: I18NHtmlParser, },\n    { type: _angular_core.ÉµConsole, },\n    { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [TEMPLATE_TRANSFORMS,] },] },\n]; };\nvar TemplateParseVisitor = (function () {\n    /**\n     * @param {?} reflector\n     * @param {?} config\n     * @param {?} providerViewContext\n     * @param {?} directives\n     * @param {?} _bindingParser\n     * @param {?} _schemaRegistry\n     * @param {?} _schemas\n     * @param {?} _targetErrors\n     */\n    function TemplateParseVisitor(reflector, config, providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n        var _this = this;\n        this.reflector = reflector;\n        this.config = config;\n        this.providerViewContext = providerViewContext;\n        this._bindingParser = _bindingParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._schemas = _schemas;\n        this._targetErrors = _targetErrors;\n        this.selectorMatcher = new SelectorMatcher();\n        this.directivesIndex = new Map();\n        this.ngContentCount = 0;\n        // Note: queries start with id 1 so we can use the number in a Bloom filter!\n        this.contentQueryStartId = providerViewContext.component.viewQueries.length + 1;\n        directives.forEach(function (directive, index) {\n            var selector = CssSelector.parse(directive.selector);\n            _this.selectorMatcher.addSelectables(selector, directive);\n            _this.directivesIndex.set(directive, index);\n        });\n    }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansion = function (expansion, context) { return null; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return null; };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitText = function (text, parent) {\n        var /** @type {?} */ ngContentIndex = ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        var /** @type {?} */ expr = this._bindingParser.parseInterpolation(text.value, /** @type {?} */ ((text.sourceSpan)));\n        return expr ? new BoundTextAst(expr, ngContentIndex, /** @type {?} */ ((text.sourceSpan))) :\n            new TextAst(text.value, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitAttribute = function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitComment = function (comment, context) { return null; };\n    /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitElement = function (element, parent) {\n        var _this = this;\n        var /** @type {?} */ queryStartIndex = this.contentQueryStartId;\n        var /** @type {?} */ nodeName = element.name;\n        var /** @type {?} */ preparsedElement = preparseElement(element);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE) {\n            // Skipping <script> for security reasons\n            // Skipping <style> as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n            isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n            // Skipping stylesheets with either relative urls or package scheme as we already processed\n            // them in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ matchableAttrs = [];\n        var /** @type {?} */ elementOrDirectiveProps = [];\n        var /** @type {?} */ elementOrDirectiveRefs = [];\n        var /** @type {?} */ elementVars = [];\n        var /** @type {?} */ events = [];\n        var /** @type {?} */ templateElementOrDirectiveProps = [];\n        var /** @type {?} */ templateMatchableAttrs = [];\n        var /** @type {?} */ templateElementVars = [];\n        var /** @type {?} */ hasInlineTemplates = false;\n        var /** @type {?} */ attrs = [];\n        var /** @type {?} */ isTemplateElement = isTemplate(element, this.config.enableLegacyTemplate, function (m, span) { return _this._reportError(m, span, ParseErrorLevel.WARNING); });\n        element.attrs.forEach(function (attr) {\n            var /** @type {?} */ hasBinding = _this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n            var /** @type {?} */ templateBindingsSource;\n            var /** @type {?} */ prefixToken;\n            var /** @type {?} */ normalizedName = _this._normalizeAttributeName(attr.name);\n            if (_this.config.enableLegacyTemplate && normalizedName == TEMPLATE_ATTR) {\n                _this._reportError(TEMPLATE_ATTR_DEPRECATION_WARNING, attr.sourceSpan, ParseErrorLevel.WARNING);\n                templateBindingsSource = attr.value;\n            }\n            else if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n                templateBindingsSource = attr.value;\n                prefixToken = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length) + ':';\n            }\n            var /** @type {?} */ hasTemplateBinding = templateBindingsSource != null;\n            if (hasTemplateBinding) {\n                if (hasInlineTemplates) {\n                    _this._reportError(\"Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *\", attr.sourceSpan);\n                }\n                hasInlineTemplates = true;\n                _this._bindingParser.parseInlineTemplateBinding(/** @type {?} */ ((prefixToken)), /** @type {?} */ ((templateBindingsSource)), attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, templateElementVars);\n            }\n            if (!hasBinding && !hasTemplateBinding) {\n                // don't include the bindings as attributes as well in the AST\n                attrs.push(_this.visitAttribute(attr, null));\n                matchableAttrs.push([attr.name, attr.value]);\n            }\n        });\n        var /** @type {?} */ elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);\n        var _a = this._parseDirectives(this.selectorMatcher, elementCssSelector), directiveMetas = _a.directives, matchElement = _a.matchElement;\n        var /** @type {?} */ references = [];\n        var /** @type {?} */ boundDirectivePropNames = new Set();\n        var /** @type {?} */ directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, /** @type {?} */ ((element.sourceSpan)), references, boundDirectivePropNames);\n        var /** @type {?} */ elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, boundDirectivePropNames);\n        var /** @type {?} */ isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n        var /** @type {?} */ providerContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), isViewRoot, directiveAsts, attrs, references, isTemplateElement, queryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n        var /** @type {?} */ children = visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? ((parent.providerContext)) : providerContext));\n        providerContext.afterElement();\n        // Override the actual selector when the `ngProjectAs` attribute is provided\n        var /** @type {?} */ projectionSelector = preparsedElement.projectAs != null ?\n            CssSelector.parse(preparsedElement.projectAs)[0] :\n            elementCssSelector;\n        var /** @type {?} */ ngContentIndex = ((parent.findNgContentIndex(projectionSelector)));\n        var /** @type {?} */ parsedElement;\n        if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n            if (element.children && !element.children.every(_isEmptyTextNode)) {\n                this._reportError(\"<ng-content> element cannot have content.\", /** @type {?} */ ((element.sourceSpan)));\n            }\n            parsedElement = new NgContentAst(this.ngContentCount++, hasInlineTemplates ? ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else if (isTemplateElement) {\n            this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n            this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, /** @type {?} */ ((element.sourceSpan)));\n            parsedElement = new EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else {\n            this._assertElementExists(matchElement, element);\n            this._assertOnlyOneComponent(directiveAsts, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ ngContentIndex_1 = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n            parsedElement = new ElementAst(nodeName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex_1, element.sourceSpan, element.endSourceSpan || null);\n        }\n        if (hasInlineTemplates) {\n            var /** @type {?} */ templateQueryStartIndex = this.contentQueryStartId;\n            var /** @type {?} */ templateSelector = createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);\n            var templateDirectiveMetas = this._parseDirectives(this.selectorMatcher, templateSelector).directives;\n            var /** @type {?} */ templateBoundDirectivePropNames = new Set();\n            var /** @type {?} */ templateDirectiveAsts = this._createDirectiveAsts(true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [], /** @type {?} */ ((element.sourceSpan)), [], templateBoundDirectivePropNames);\n            var /** @type {?} */ templateElementProps = this._createElementPropertyAsts(element.name, templateElementOrDirectiveProps, templateBoundDirectivePropNames);\n            this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ templateProviderContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), parent.isTemplateElement, templateDirectiveAsts, [], [], true, templateQueryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n            templateProviderContext.afterElement();\n            parsedElement = new EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches, [parsedElement], ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        return parsedElement;\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAttr = function (isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n        var /** @type {?} */ name = this._normalizeAttributeName(attr.name);\n        var /** @type {?} */ value = attr.value;\n        var /** @type {?} */ srcSpan = attr.sourceSpan;\n        var /** @type {?} */ bindParts = name.match(BIND_NAME_REGEXP);\n        var /** @type {?} */ hasBinding = false;\n        if (bindParts !== null) {\n            hasBinding = true;\n            if (bindParts[KW_BIND_IDX] != null) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[KW_LET_IDX]) {\n                if (isTemplateElement) {\n                    var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                    this._parseVariable(identifier, value, srcSpan, targetVars);\n                }\n                else {\n                    this._reportError(\"\\\"let-\\\" is only supported on template elements.\", srcSpan);\n                }\n            }\n            else if (bindParts[KW_REF_IDX]) {\n                var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                this._parseReference(identifier, value, srcSpan, targetRefs);\n            }\n            else if (bindParts[KW_ON_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_BINDON_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_AT_IDX]) {\n                this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[IDENT_PROPERTY_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_EVENT_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n        }\n        else {\n            hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        if (!hasBinding) {\n            this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        return hasBinding;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._normalizeAttributeName = function (attrName) {\n        return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseVariable = function (identifier, value, sourceSpan, targetVars) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n        }\n        targetVars.push(new VariableAst(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseReference = function (identifier, value, sourceSpan, targetRefs) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n        }\n        targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAssignmentEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        this._bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\n    };\n    /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseDirectives = function (selectorMatcher, elementCssSelector) {\n        var _this = this;\n        // Need to sort the directives so that we get consistent results throughout,\n        // as selectorMatcher uses Maps inside.\n        // Also deduplicate directives as they might match more than one time!\n        var /** @type {?} */ directives = new Array(this.directivesIndex.size);\n        // Whether any directive selector matches on the element name\n        var /** @type {?} */ matchElement = false;\n        selectorMatcher.match(elementCssSelector, function (selector, directive) {\n            directives[((_this.directivesIndex.get(directive)))] = directive;\n            matchElement = matchElement || selector.hasElementSelector();\n        });\n        return {\n            directives: directives.filter(function (dir) { return !!dir; }),\n            matchElement: matchElement,\n        };\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectiveAsts = function (isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences, targetBoundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ matchedReferences = new Set();\n        var /** @type {?} */ component = ((null));\n        var /** @type {?} */ directiveAsts = directives.map(function (directive) {\n            var /** @type {?} */ sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, \"Directive \" + identifierName(directive.type));\n            if (directive.isComponent) {\n                component = directive;\n            }\n            var /** @type {?} */ directiveProperties = [];\n            var /** @type {?} */ hostProperties = ((_this._bindingParser.createDirectiveHostPropertyAsts(directive, elementName, sourceSpan)));\n            // Note: We need to check the host properties here as well,\n            // as we don't know the element name in the DirectiveWrapperCompiler yet.\n            hostProperties = _this._checkPropertiesInSchema(elementName, hostProperties);\n            var /** @type {?} */ hostEvents = ((_this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan)));\n            _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties, targetBoundDirectivePropNames);\n            elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n                if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n                    (directive.exportAs == elOrDirRef.value)) {\n                    targetReferences.push(new ReferenceAst(elOrDirRef.name, createTokenForReference(directive.type.reference), elOrDirRef.sourceSpan));\n                    matchedReferences.add(elOrDirRef.name);\n                }\n            });\n            var /** @type {?} */ contentQueryStartId = _this.contentQueryStartId;\n            _this.contentQueryStartId += directive.queries.length;\n            return new DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, contentQueryStartId, sourceSpan);\n        });\n        elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n            if (elOrDirRef.value.length > 0) {\n                if (!matchedReferences.has(elOrDirRef.name)) {\n                    _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + elOrDirRef.value + \"\\\"\", elOrDirRef.sourceSpan);\n                }\n            }\n            else if (!component) {\n                var /** @type {?} */ refToken = ((null));\n                if (isTemplateElement) {\n                    refToken = createTokenForExternalReference(_this.reflector, Identifiers.TemplateRef);\n                }\n                targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.sourceSpan));\n            }\n        });\n        return directiveAsts;\n    };\n    /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectivePropertyAsts = function (directiveProperties, boundProps, targetBoundDirectiveProps, targetBoundDirectivePropNames) {\n        if (directiveProperties) {\n            var /** @type {?} */ boundPropsByName_1 = new Map();\n            boundProps.forEach(function (boundProp) {\n                var /** @type {?} */ prevValue = boundPropsByName_1.get(boundProp.name);\n                if (!prevValue || prevValue.isLiteral) {\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    boundPropsByName_1.set(boundProp.name, boundProp);\n                }\n            });\n            Object.keys(directiveProperties).forEach(function (dirProp) {\n                var /** @type {?} */ elProp = directiveProperties[dirProp];\n                var /** @type {?} */ boundProp = boundPropsByName_1.get(elProp);\n                // Bindings are optional, so this binding only needs to be set up if an expression is given.\n                if (boundProp) {\n                    targetBoundDirectivePropNames.add(boundProp.name);\n                    if (!isEmptyExpression(boundProp.expression)) {\n                        targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createElementPropertyAsts = function (elementName, props, boundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ boundElementProps = [];\n        props.forEach(function (prop) {\n            if (!prop.isLiteral && !boundDirectivePropNames.has(prop.name)) {\n                boundElementProps.push(_this._bindingParser.createElementPropertyAst(elementName, prop));\n            }\n        });\n        return this._checkPropertiesInSchema(elementName, boundElementProps);\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectives = function (directives) {\n        return directives.filter(function (directive) { return directive.directive.isComponent; });\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectiveNames = function (directives) {\n        return this._findComponentDirectives(directives)\n            .map(function (directive) { return ((identifierName(directive.directive.type))); });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertOnlyOneComponent = function (directives, sourceSpan) {\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 1) {\n            this._reportError(\"More than one component matched on this element.\\n\" +\n                \"Make sure that only one component's selector can match a given element.\\n\" +\n                (\"Conflicting components: \" + componentTypeNames.join(',')), sourceSpan);\n        }\n    };\n    /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertElementExists = function (matchElement, element) {\n        var /** @type {?} */ elName = element.name.replace(/^:xhtml:/, '');\n        if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n            var /** @type {?} */ errorMsg = \"'\" + elName + \"' is not a known element:\\n\";\n            errorMsg +=\n                \"1. If '\" + elName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n            if (elName.indexOf('-') > -1) {\n                errorMsg +=\n                    \"2. If '\" + elName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n            }\n            else {\n                errorMsg +=\n                    \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n            }\n            this._reportError(errorMsg, /** @type {?} */ ((element.sourceSpan)));\n        }\n    };\n    /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = function (directives, elementProps, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 0) {\n            this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\n        }\n        elementProps.forEach(function (prop) {\n            _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", sourceSpan);\n        });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = function (directives, events) {\n        var _this = this;\n        var /** @type {?} */ allDirectiveEvents = new Set();\n        directives.forEach(function (directive) {\n            Object.keys(directive.directive.outputs).forEach(function (k) {\n                var /** @type {?} */ eventName = directive.directive.outputs[k];\n                allDirectiveEvents.add(eventName);\n            });\n        });\n        events.forEach(function (event) {\n            if (event.target != null || !allDirectiveEvents.has(event.name)) {\n                _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", event.sourceSpan);\n            }\n        });\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._checkPropertiesInSchema = function (elementName, boundProps) {\n        var _this = this;\n        // Note: We can't filter out empty expressions before this method,\n        // as we still want to validate them!\n        return boundProps.filter(function (boundProp) {\n            if (boundProp.type === PropertyBindingType.Property &&\n                !_this._schemaRegistry.hasProperty(elementName, boundProp.name, _this._schemas)) {\n                var /** @type {?} */ errorMsg = \"Can't bind to '\" + boundProp.name + \"' since it isn't a known property of '\" + elementName + \"'.\";\n                if (elementName.startsWith('ng-')) {\n                    errorMsg +=\n                        \"\\n1. If '\" + boundProp.name + \"' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.\" +\n                            \"\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                else if (elementName.indexOf('-') > -1) {\n                    errorMsg +=\n                        \"\\n1. If '\" + elementName + \"' is an Angular component and it has '\" + boundProp.name + \"' input, then verify that it is part of this module.\" +\n                            (\"\\n2. If '\" + elementName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\") +\n                            \"\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                _this._reportError(errorMsg, boundProp.sourceSpan);\n            }\n            return !isEmptyExpression(boundProp.value);\n        });\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._reportError = function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    return TemplateParseVisitor;\n}());\nvar NonBindableVisitor = (function () {\n    function NonBindableVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitElement = function (ast, parent) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE ||\n            preparsedElement.type === PreparsedElementType.STYLESHEET) {\n            // Skipping <script> for security reasons\n            // Skipping <style> and stylesheets as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ attrNameAndValues = ast.attrs.map(function (attr) { return [attr.name, attr.value]; });\n        var /** @type {?} */ selector = createElementCssSelector(ast.name, attrNameAndValues);\n        var /** @type {?} */ ngContentIndex = parent.findNgContentIndex(selector);\n        var /** @type {?} */ children = visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n        return new ElementAst(ast.name, visitAll(this, ast.attrs), [], [], [], [], [], false, [], children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitComment = function (comment, context) { return null; };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitAttribute = function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitText = function (text, parent) {\n        var /** @type {?} */ ngContentIndex = ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        return new TextAst(text.value, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansion = function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return expansionCase; };\n    return NonBindableVisitor;\n}());\nvar ElementOrDirectiveRef = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function ElementOrDirectiveRef(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    return ElementOrDirectiveRef;\n}());\n/**\n * @param {?} classAttrValue\n * @return {?}\n */\nfunction splitClasses(classAttrValue) {\n    return classAttrValue.trim().split(/\\s+/g);\n}\nvar ElementContext = (function () {\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} _ngContentIndexMatcher\n     * @param {?} _wildcardNgContentIndex\n     * @param {?} providerContext\n     */\n    function ElementContext(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n        this.isTemplateElement = isTemplateElement;\n        this._ngContentIndexMatcher = _ngContentIndexMatcher;\n        this._wildcardNgContentIndex = _wildcardNgContentIndex;\n        this.providerContext = providerContext;\n    }\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    ElementContext.create = function (isTemplateElement, directives, providerContext) {\n        var /** @type {?} */ matcher = new SelectorMatcher();\n        var /** @type {?} */ wildcardNgContentIndex = ((null));\n        var /** @type {?} */ component = directives.find(function (directive) { return directive.directive.isComponent; });\n        if (component) {\n            var /** @type {?} */ ngContentSelectors = ((component.directive.template)).ngContentSelectors;\n            for (var /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n                var /** @type {?} */ selector = ngContentSelectors[i];\n                if (selector === '*') {\n                    wildcardNgContentIndex = i;\n                }\n                else {\n                    matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n                }\n            }\n        }\n        return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ElementContext.prototype.findNgContentIndex = function (selector) {\n        var /** @type {?} */ ngContentIndices = [];\n        this._ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\n        ngContentIndices.sort();\n        if (this._wildcardNgContentIndex != null) {\n            ngContentIndices.push(this._wildcardNgContentIndex);\n        }\n        return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n    };\n    return ElementContext;\n}());\n/**\n * @param {?} elementName\n * @param {?} attributes\n * @return {?}\n */\nfunction createElementCssSelector(elementName, attributes) {\n    var /** @type {?} */ cssSelector = new CssSelector();\n    var /** @type {?} */ elNameNoNs = splitNsName(elementName)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (var /** @type {?} */ i = 0; i < attributes.length; i++) {\n        var /** @type {?} */ attrName = attributes[i][0];\n        var /** @type {?} */ attrNameNoNs = splitNsName(attrName)[1];\n        var /** @type {?} */ attrValue = attributes[i][1];\n        cssSelector.addAttribute(attrNameNoNs, attrValue);\n        if (attrName.toLowerCase() == CLASS_ATTR) {\n            var /** @type {?} */ classes = splitClasses(attrValue);\n            classes.forEach(function (className) { return cssSelector.addClassName(className); });\n        }\n    }\n    return cssSelector;\n}\nvar EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nvar NON_BINDABLE_VISITOR = new NonBindableVisitor();\n/**\n * @param {?} node\n * @return {?}\n */\nfunction _isEmptyTextNode(node) {\n    return node instanceof Text && node.value.trim().length == 0;\n}\n/**\n * @template T\n * @param {?} items\n * @return {?}\n */\nfunction removeSummaryDuplicates(items) {\n    var /** @type {?} */ map = new Map();\n    items.forEach(function (item) {\n        if (!map.get(item.type.reference)) {\n            map.set(item.type.reference, item);\n        }\n    });\n    return Array.from(map.values());\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction isEmptyExpression(ast) {\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    return ast instanceof EmptyExpr;\n}\n/**\n * @param {?} el\n * @param {?} enableLegacyTemplate\n * @param {?} reportDeprecation\n * @return {?}\n */\nfunction isTemplate(el, enableLegacyTemplate, reportDeprecation) {\n    if (isNgTemplate(el.name))\n        return true;\n    var /** @type {?} */ tagNoNs = splitNsName(el.name)[1];\n    // `<template>` is HTML and case insensitive\n    if (tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n        if (enableLegacyTemplate && tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n            reportDeprecation(TEMPLATE_ELEMENT_DEPRECATION_WARNING, /** @type {?} */ ((el.sourceSpan)));\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * An interface for retrieving documents by URL that the compiler uses\n * to load templates.\n */\nvar ResourceLoader = (function () {\n    function ResourceLoader() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    ResourceLoader.prototype.get = function (url) { return ''; };\n    return ResourceLoader;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a {\\@link UrlResolver} with no package prefix.\n * @return {?}\n */\nfunction createUrlResolverWithoutPackagePrefix() {\n    return new UrlResolver();\n}\n/**\n * @return {?}\n */\nfunction createOfflineCompileUrlResolver() {\n    return new UrlResolver('.');\n}\n/**\n * A default provider for {\\@link PACKAGE_ROOT_URL} that maps to '/'.\n */\nvar DEFAULT_PACKAGE_URL_PROVIDER = {\n    provide: _angular_core.PACKAGE_ROOT_URL,\n    useValue: '/'\n};\n/**\n * Used by the {\\@link Compiler} when resolving HTML and CSS template URLs.\n *\n * This class can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n *\n * ## Example\n *\n * {\\@example compiler/ts/url_resolver/url_resolver.ts region='url_resolver'}\n *\n * \\@security When compiling templates at runtime, you must\n * ensure that the entire template comes from a trusted source.\n * Attacker-controlled data introduced by a template could expose your\n * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar UrlResolver = (function () {\n    /**\n     * @param {?=} _packagePrefix\n     */\n    function UrlResolver(_packagePrefix) {\n        if (_packagePrefix === void 0) { _packagePrefix = null; }\n        this._packagePrefix = _packagePrefix;\n    }\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    UrlResolver.prototype.resolve = function (baseUrl, url) {\n        var /** @type {?} */ resolvedUrl = url;\n        if (baseUrl != null && baseUrl.length > 0) {\n            resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n        }\n        var /** @type {?} */ resolvedParts = _split(resolvedUrl);\n        var /** @type {?} */ prefix = this._packagePrefix;\n        if (prefix != null && resolvedParts != null &&\n            resolvedParts[_ComponentIndex.Scheme] == 'package') {\n            var /** @type {?} */ path = resolvedParts[_ComponentIndex.Path];\n            prefix = prefix.replace(/\\/+$/, '');\n            path = path.replace(/^\\/+/, '');\n            return prefix + \"/\" + path;\n        }\n        return resolvedUrl;\n    };\n    return UrlResolver;\n}());\nUrlResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nUrlResolver.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.PACKAGE_ROOT_URL,] },] },\n]; };\n/**\n * Extract the scheme of a URL.\n * @param {?} url\n * @return {?}\n */\nfunction getUrlScheme(url) {\n    var /** @type {?} */ match = _split(url);\n    return (match && match[_ComponentIndex.Scheme]) || '';\n}\n/**\n * Builds a URI string from already-encoded parts.\n *\n * No encoding is performed.  Any component may be omitted as either null or\n * undefined.\n *\n * @param {?=} opt_scheme The scheme such as 'http'.\n * @param {?=} opt_userInfo The user name before the '\\@'.\n * @param {?=} opt_domain The domain such as 'www.google.com', already\n *     URI-encoded.\n * @param {?=} opt_port The port number.\n * @param {?=} opt_path The path, already URI-encoded.  If it is not\n *     empty, it must begin with a slash.\n * @param {?=} opt_queryData The URI-encoded query data.\n * @param {?=} opt_fragment The URI-encoded fragment identifier.\n * @return {?} The fully combined URI.\n */\nfunction _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n    var /** @type {?} */ out = [];\n    if (opt_scheme != null) {\n        out.push(opt_scheme + ':');\n    }\n    if (opt_domain != null) {\n        out.push('//');\n        if (opt_userInfo != null) {\n            out.push(opt_userInfo + '@');\n        }\n        out.push(opt_domain);\n        if (opt_port != null) {\n            out.push(':' + opt_port);\n        }\n    }\n    if (opt_path != null) {\n        out.push(opt_path);\n    }\n    if (opt_queryData != null) {\n        out.push('?' + opt_queryData);\n    }\n    if (opt_fragment != null) {\n        out.push('#' + opt_fragment);\n    }\n    return out.join('');\n}\n/**\n * A regular expression for breaking a URI into its component parts.\n *\n * {\\@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n * \\@internal\n */\nvar _splitRe = new RegExp('^' +\n    '(?:' +\n    '([^:/?#.]+)' +\n    // used by other URL parts such as :,\n    // ?, /, #, and .\n    ':)?' +\n    '(?://' +\n    '(?:([^/?#]*)@)?' +\n    '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' +\n    // digits, dashes, dots, percent\n    // escapes, and unicode characters.\n    '(?::([0-9]+))?' +\n    ')?' +\n    '([^?#]+)?' +\n    '(?:\\\\?([^#]*))?' +\n    '(?:#(.*))?' +\n    '$');\nvar _ComponentIndex = {};\n_ComponentIndex.Scheme = 1;\n_ComponentIndex.UserInfo = 2;\n_ComponentIndex.Domain = 3;\n_ComponentIndex.Port = 4;\n_ComponentIndex.Path = 5;\n_ComponentIndex.QueryData = 6;\n_ComponentIndex.Fragment = 7;\n_ComponentIndex[_ComponentIndex.Scheme] = \"Scheme\";\n_ComponentIndex[_ComponentIndex.UserInfo] = \"UserInfo\";\n_ComponentIndex[_ComponentIndex.Domain] = \"Domain\";\n_ComponentIndex[_ComponentIndex.Port] = \"Port\";\n_ComponentIndex[_ComponentIndex.Path] = \"Path\";\n_ComponentIndex[_ComponentIndex.QueryData] = \"QueryData\";\n_ComponentIndex[_ComponentIndex.Fragment] = \"Fragment\";\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n * </pre>\n *\n * @param {?} uri The URI string to examine.\n * @return {?} Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\nfunction _split(uri) {\n    return ((uri.match(_splitRe)));\n}\n/**\n * Removes dot segments in given path component, as described in\n * RFC 3986, section 5.2.4.\n *\n * @param {?} path A non-empty path component.\n * @return {?} Path component with removed dot segments.\n */\nfunction _removeDotSegments(path) {\n    if (path == '/')\n        return '/';\n    var /** @type {?} */ leadingSlash = path[0] == '/' ? '/' : '';\n    var /** @type {?} */ trailingSlash = path[path.length - 1] === '/' ? '/' : '';\n    var /** @type {?} */ segments = path.split('/');\n    var /** @type {?} */ out = [];\n    var /** @type {?} */ up = 0;\n    for (var /** @type {?} */ pos = 0; pos < segments.length; pos++) {\n        var /** @type {?} */ segment = segments[pos];\n        switch (segment) {\n            case '':\n            case '.':\n                break;\n            case '..':\n                if (out.length > 0) {\n                    out.pop();\n                }\n                else {\n                    up++;\n                }\n                break;\n            default:\n                out.push(segment);\n        }\n    }\n    if (leadingSlash == '') {\n        while (up-- > 0) {\n            out.unshift('..');\n        }\n        if (out.length === 0)\n            out.push('.');\n    }\n    return leadingSlash + out.join('/') + trailingSlash;\n}\n/**\n * Takes an array of the parts from split and canonicalizes the path part\n * and then joins all the parts.\n * @param {?} parts\n * @return {?}\n */\nfunction _joinAndCanonicalizePath(parts) {\n    var /** @type {?} */ path = parts[_ComponentIndex.Path];\n    path = path == null ? '' : _removeDotSegments(path);\n    parts[_ComponentIndex.Path] = path;\n    return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n}\n/**\n * Resolves a URL.\n * @param {?} base The URL acting as the base URL.\n * @param {?} url\n * @return {?}\n */\nfunction _resolveUrl(base, url) {\n    var /** @type {?} */ parts = _split(encodeURI(url));\n    var /** @type {?} */ baseParts = _split(base);\n    if (parts[_ComponentIndex.Scheme] != null) {\n        return _joinAndCanonicalizePath(parts);\n    }\n    else {\n        parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n    }\n    for (var /** @type {?} */ i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n        if (parts[i] == null) {\n            parts[i] = baseParts[i];\n        }\n    }\n    if (parts[_ComponentIndex.Path][0] == '/') {\n        return _joinAndCanonicalizePath(parts);\n    }\n    var /** @type {?} */ path = baseParts[_ComponentIndex.Path];\n    if (path == null)\n        path = '/';\n    var /** @type {?} */ index = path.lastIndexOf('/');\n    path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];\n    parts[_ComponentIndex.Path] = path;\n    return _joinAndCanonicalizePath(parts);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DirectiveNormalizer = (function () {\n    /**\n     * @param {?} _resourceLoader\n     * @param {?} _urlResolver\n     * @param {?} _htmlParser\n     * @param {?} _config\n     */\n    function DirectiveNormalizer(_resourceLoader, _urlResolver, _htmlParser, _config) {\n        this._resourceLoader = _resourceLoader;\n        this._urlResolver = _urlResolver;\n        this._htmlParser = _htmlParser;\n        this._config = _config;\n        this._resourceLoaderCache = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCache = function () { this._resourceLoaderCache.clear(); };\n    /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCacheFor = function (normalizedDirective) {\n        var _this = this;\n        if (!normalizedDirective.isComponent) {\n            return;\n        }\n        var /** @type {?} */ template = ((normalizedDirective.template));\n        this._resourceLoaderCache.delete(/** @type {?} */ ((template.templateUrl)));\n        template.externalStylesheets.forEach(function (stylesheet) { _this._resourceLoaderCache.delete(/** @type {?} */ ((stylesheet.moduleUrl))); });\n    };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._fetch = function (url) {\n        var /** @type {?} */ result = this._resourceLoaderCache.get(url);\n        if (!result) {\n            result = this._resourceLoader.get(url);\n            this._resourceLoaderCache.set(url, result);\n        }\n        return result;\n    };\n    /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplate = function (prenormData) {\n        var _this = this;\n        if (isDefined(prenormData.template)) {\n            if (isDefined(prenormData.templateUrl)) {\n                throw syntaxError(\"'\" + _angular_core.Éµstringify(prenormData.componentType) + \"' component cannot define both template and templateUrl\");\n            }\n            if (typeof prenormData.template !== 'string') {\n                throw syntaxError(\"The template specified for component \" + _angular_core.Éµstringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else if (isDefined(prenormData.templateUrl)) {\n            if (typeof prenormData.templateUrl !== 'string') {\n                throw syntaxError(\"The templateUrl specified for component \" + _angular_core.Éµstringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else {\n            throw syntaxError(\"No template specified for component \" + _angular_core.Éµstringify(prenormData.componentType));\n        }\n        return SyncAsync.then(this.normalizeTemplateOnly(prenormData), function (result) { return _this.normalizeExternalStylesheets(result); });\n    };\n    /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplateOnly = function (prenomData) {\n        var _this = this;\n        var /** @type {?} */ template;\n        var /** @type {?} */ templateUrl;\n        if (prenomData.template != null) {\n            template = prenomData.template;\n            templateUrl = prenomData.moduleUrl;\n        }\n        else {\n            templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, /** @type {?} */ ((prenomData.templateUrl)));\n            template = this._fetch(templateUrl);\n        }\n        return SyncAsync.then(template, function (template) { return _this.normalizeLoadedTemplate(prenomData, template, templateUrl); });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeLoadedTemplate = function (prenormData, template, templateAbsUrl) {\n        var /** @type {?} */ isInline = !!prenormData.template;\n        var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((prenormData.interpolation)));\n        var /** @type {?} */ rootNodesAndErrors = this._htmlParser.parse(template, templateSourceUrl({ reference: prenormData.ngModuleType }, { type: { reference: prenormData.componentType } }, { isInline: isInline, templateUrl: templateAbsUrl }), true, interpolationConfig);\n        if (rootNodesAndErrors.errors.length > 0) {\n            var /** @type {?} */ errorString = rootNodesAndErrors.errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString);\n        }\n        var /** @type {?} */ templateMetadataStyles = this.normalizeStylesheet(new CompileStylesheetMetadata({\n            styles: prenormData.styles,\n            styleUrls: prenormData.styleUrls,\n            moduleUrl: prenormData.moduleUrl\n        }));\n        var /** @type {?} */ visitor = new TemplatePreparseVisitor();\n        visitAll(visitor, rootNodesAndErrors.rootNodes);\n        var /** @type {?} */ templateStyles = this.normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n        var /** @type {?} */ encapsulation = prenormData.encapsulation;\n        if (encapsulation == null) {\n            encapsulation = this._config.defaultEncapsulation;\n        }\n        var /** @type {?} */ styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n        var /** @type {?} */ styleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n        if (encapsulation === _angular_core.ViewEncapsulation.Emulated && styles.length === 0 &&\n            styleUrls.length === 0) {\n            encapsulation = _angular_core.ViewEncapsulation.None;\n        }\n        return new CompileTemplateMetadata({\n            encapsulation: encapsulation,\n            template: template,\n            templateUrl: templateAbsUrl, styles: styles, styleUrls: styleUrls,\n            ngContentSelectors: visitor.ngContentSelectors,\n            animations: prenormData.animations,\n            interpolation: prenormData.interpolation, isInline: isInline,\n            externalStylesheets: []\n        });\n    };\n    /**\n     * @param {?} templateMeta\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeExternalStylesheets = function (templateMeta) {\n        return SyncAsync.then(this._loadMissingExternalStylesheets(templateMeta.styleUrls), function (externalStylesheets) { return new CompileTemplateMetadata({\n            encapsulation: templateMeta.encapsulation,\n            template: templateMeta.template,\n            templateUrl: templateMeta.templateUrl,\n            styles: templateMeta.styles,\n            styleUrls: templateMeta.styleUrls,\n            externalStylesheets: externalStylesheets,\n            ngContentSelectors: templateMeta.ngContentSelectors,\n            animations: templateMeta.animations,\n            interpolation: templateMeta.interpolation,\n            isInline: templateMeta.isInline,\n        }); });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._loadMissingExternalStylesheets = function (styleUrls, loadedStylesheets) {\n        var _this = this;\n        if (loadedStylesheets === void 0) { loadedStylesheets = new Map(); }\n        return SyncAsync.then(SyncAsync.all(styleUrls.filter(function (styleUrl) { return !loadedStylesheets.has(styleUrl); })\n            .map(function (styleUrl) { return SyncAsync.then(_this._fetch(styleUrl), function (loadedStyle) {\n            var /** @type {?} */ stylesheet = _this.normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n            loadedStylesheets.set(styleUrl, stylesheet);\n            return _this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n        }); })), function (_) { return Array.from(loadedStylesheets.values()); });\n    };\n    /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeStylesheet = function (stylesheet) {\n        var _this = this;\n        var /** @type {?} */ moduleUrl = ((stylesheet.moduleUrl));\n        var /** @type {?} */ allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n            .map(function (url) { return _this._urlResolver.resolve(moduleUrl, url); });\n        var /** @type {?} */ allStyles = stylesheet.styles.map(function (style$$1) {\n            var /** @type {?} */ styleWithImports = extractStyleUrls(_this._urlResolver, moduleUrl, style$$1);\n            allStyleUrls.push.apply(allStyleUrls, styleWithImports.styleUrls);\n            return styleWithImports.style;\n        });\n        return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: moduleUrl });\n    };\n    return DirectiveNormalizer;\n}());\nDirectiveNormalizer.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nDirectiveNormalizer.ctorParameters = function () { return [\n    { type: ResourceLoader, },\n    { type: UrlResolver, },\n    { type: HtmlParser, },\n    { type: CompilerConfig, },\n]; };\nvar TemplatePreparseVisitor = (function () {\n    function TemplatePreparseVisitor() {\n        this.ngContentSelectors = [];\n        this.styles = [];\n        this.styleUrls = [];\n        this.ngNonBindableStackCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitElement = function (ast, context) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        switch (preparsedElement.type) {\n            case PreparsedElementType.NG_CONTENT:\n                if (this.ngNonBindableStackCount === 0) {\n                    this.ngContentSelectors.push(preparsedElement.selectAttr);\n                }\n                break;\n            case PreparsedElementType.STYLE:\n                var /** @type {?} */ textContent_1 = '';\n                ast.children.forEach(function (child) {\n                    if (child instanceof Text) {\n                        textContent_1 += child.value;\n                    }\n                });\n                this.styles.push(textContent_1);\n                break;\n            case PreparsedElementType.STYLESHEET:\n                this.styleUrls.push(preparsedElement.hrefAttr);\n                break;\n            default:\n                break;\n        }\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount++;\n        }\n        visitAll(this, ast.children);\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount--;\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansion = function (ast, context) { visitAll(this, ast.cases); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansionCase = function (ast, context) {\n        visitAll(this, ast.expression);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitComment = function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitAttribute = function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitText = function (ast, context) { return null; };\n    return TemplatePreparseVisitor;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DirectiveResolver = (function () {\n    /**\n     * @param {?} _reflector\n     */\n    function DirectiveResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    DirectiveResolver.prototype.isDirective = function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    DirectiveResolver.prototype.resolve = function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n        if (typeMetadata) {\n            var /** @type {?} */ metadata = findLast(typeMetadata, isDirectiveMetadata);\n            if (metadata) {\n                var /** @type {?} */ propertyMetadata = this._reflector.propMetadata(type);\n                return this._mergeWithPropertyMetadata(metadata, propertyMetadata, type);\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Directive annotation found on \" + _angular_core.Éµstringify(type));\n        }\n        return null;\n    };\n    /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._mergeWithPropertyMetadata = function (dm, propertyMetadata, directiveType) {\n        var /** @type {?} */ inputs = [];\n        var /** @type {?} */ outputs = [];\n        var /** @type {?} */ host = {};\n        var /** @type {?} */ queries = {};\n        Object.keys(propertyMetadata).forEach(function (propName) {\n            var /** @type {?} */ input = findLast(propertyMetadata[propName], function (a) { return a instanceof _angular_core.Input; });\n            if (input) {\n                if (input.bindingPropertyName) {\n                    inputs.push(propName + \": \" + input.bindingPropertyName);\n                }\n                else {\n                    inputs.push(propName);\n                }\n            }\n            var /** @type {?} */ output = findLast(propertyMetadata[propName], function (a) { return a instanceof _angular_core.Output; });\n            if (output) {\n                if (output.bindingPropertyName) {\n                    outputs.push(propName + \": \" + output.bindingPropertyName);\n                }\n                else {\n                    outputs.push(propName);\n                }\n            }\n            var /** @type {?} */ hostBindings = propertyMetadata[propName].filter(function (a) { return a && a instanceof _angular_core.HostBinding; });\n            hostBindings.forEach(function (hostBinding) {\n                if (hostBinding.hostPropertyName) {\n                    var /** @type {?} */ startWith = hostBinding.hostPropertyName[0];\n                    if (startWith === '(') {\n                        throw new Error(\"@HostBinding can not bind to events. Use @HostListener instead.\");\n                    }\n                    else if (startWith === '[') {\n                        throw new Error(\"@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.\");\n                    }\n                    host[\"[\" + hostBinding.hostPropertyName + \"]\"] = propName;\n                }\n                else {\n                    host[\"[\" + propName + \"]\"] = propName;\n                }\n            });\n            var /** @type {?} */ hostListeners = propertyMetadata[propName].filter(function (a) { return a && a instanceof _angular_core.HostListener; });\n            hostListeners.forEach(function (hostListener) {\n                var /** @type {?} */ args = hostListener.args || [];\n                host[\"(\" + hostListener.eventName + \")\"] = propName + \"(\" + args.join(',') + \")\";\n            });\n            var /** @type {?} */ query = findLast(propertyMetadata[propName], function (a) { return a instanceof _angular_core.Query; });\n            if (query) {\n                queries[propName] = query;\n            }\n        });\n        return this._merge(dm, inputs, outputs, host, queries, directiveType);\n    };\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    DirectiveResolver.prototype._extractPublicName = function (def) { return splitAtColon(def, [/** @type {?} */ ((null)), def])[1].trim(); };\n    /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    DirectiveResolver.prototype._dedupeBindings = function (bindings) {\n        var /** @type {?} */ names = new Set();\n        var /** @type {?} */ reversedResult = [];\n        // go last to first to allow later entries to overwrite previous entries\n        for (var /** @type {?} */ i = bindings.length - 1; i >= 0; i--) {\n            var /** @type {?} */ binding = bindings[i];\n            var /** @type {?} */ name = this._extractPublicName(binding);\n            if (!names.has(name)) {\n                names.add(name);\n                reversedResult.push(binding);\n            }\n        }\n        return reversedResult.reverse();\n    };\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._merge = function (directive, inputs, outputs, host, queries, directiveType) {\n        var /** @type {?} */ mergedInputs = this._dedupeBindings(directive.inputs ? directive.inputs.concat(inputs) : inputs);\n        var /** @type {?} */ mergedOutputs = this._dedupeBindings(directive.outputs ? directive.outputs.concat(outputs) : outputs);\n        var /** @type {?} */ mergedHost = directive.host ? Object.assign({}, directive.host, host) : host;\n        var /** @type {?} */ mergedQueries = directive.queries ? Object.assign({}, directive.queries, queries) : queries;\n        if (directive instanceof _angular_core.Component) {\n            return new _angular_core.Component({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                moduleId: directive.moduleId,\n                queries: mergedQueries,\n                changeDetection: directive.changeDetection,\n                providers: directive.providers,\n                viewProviders: directive.viewProviders,\n                entryComponents: directive.entryComponents,\n                template: directive.template,\n                templateUrl: directive.templateUrl,\n                styles: directive.styles,\n                styleUrls: directive.styleUrls,\n                encapsulation: directive.encapsulation,\n                animations: directive.animations,\n                interpolation: directive.interpolation\n            });\n        }\n        else {\n            return new _angular_core.Directive({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                queries: mergedQueries,\n                providers: directive.providers\n            });\n        }\n    };\n    return DirectiveResolver;\n}());\nDirectiveResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nDirectiveResolver.ctorParameters = function () { return [\n    { type: CompileReflector, },\n]; };\n/**\n * @param {?} type\n * @return {?}\n */\nfunction isDirectiveMetadata(type) {\n    return type instanceof _angular_core.Directive;\n}\n/**\n * @template T\n * @param {?} arr\n * @param {?} condition\n * @return {?}\n */\nfunction findLast(arr, condition) {\n    for (var /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n        if (condition(arr[i])) {\n            return arr[i];\n        }\n    }\n    return null;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nvar GENERATED_FILE = /\\.ngfactory\\.|\\.ngsummary\\./;\nvar JIT_SUMMARY_FILE = /\\.ngsummary\\./;\nvar JIT_SUMMARY_NAME = /NgSummary$/;\n/**\n * @param {?} filePath\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction ngfactoryFilePath(filePath, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(filePath, forceSourceFile);\n    return urlWithSuffix[0] + \".ngfactory\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripGeneratedFileSuffix(filePath) {\n    return filePath.replace(GENERATED_FILE, '.');\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction isGeneratedFile(filePath) {\n    return GENERATED_FILE.test(filePath);\n}\n/**\n * @param {?} path\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction splitTypescriptSuffix(path, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    if (path.endsWith('.d.ts')) {\n        return [path.slice(0, -5), forceSourceFile ? '.ts' : '.d.ts'];\n    }\n    var /** @type {?} */ lastDot = path.lastIndexOf('.');\n    if (lastDot !== -1) {\n        return [path.substring(0, lastDot), path.substring(lastDot)];\n    }\n    return [path, ''];\n}\n/**\n * @param {?} fileName\n * @return {?}\n */\nfunction summaryFileName(fileName) {\n    var /** @type {?} */ fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n    return fileNameWithoutSuffix + \".ngsummary.json\";\n}\n/**\n * @param {?} fileName\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction summaryForJitFileName(fileName, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(stripGeneratedFileSuffix(fileName), forceSourceFile);\n    return urlWithSuffix[0] + \".ngsummary\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripSummaryForJitFileSuffix(filePath) {\n    return filePath.replace(JIT_SUMMARY_FILE, '.');\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction summaryForJitName(symbolName) {\n    return symbolName + \"NgSummary\";\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction stripSummaryForJitNameSuffix(symbolName) {\n    return symbolName.replace(JIT_SUMMARY_NAME, '');\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar LifecycleHooks = {};\nLifecycleHooks.OnInit = 0;\nLifecycleHooks.OnDestroy = 1;\nLifecycleHooks.DoCheck = 2;\nLifecycleHooks.OnChanges = 3;\nLifecycleHooks.AfterContentInit = 4;\nLifecycleHooks.AfterContentChecked = 5;\nLifecycleHooks.AfterViewInit = 6;\nLifecycleHooks.AfterViewChecked = 7;\nLifecycleHooks[LifecycleHooks.OnInit] = \"OnInit\";\nLifecycleHooks[LifecycleHooks.OnDestroy] = \"OnDestroy\";\nLifecycleHooks[LifecycleHooks.DoCheck] = \"DoCheck\";\nLifecycleHooks[LifecycleHooks.OnChanges] = \"OnChanges\";\nLifecycleHooks[LifecycleHooks.AfterContentInit] = \"AfterContentInit\";\nLifecycleHooks[LifecycleHooks.AfterContentChecked] = \"AfterContentChecked\";\nLifecycleHooks[LifecycleHooks.AfterViewInit] = \"AfterViewInit\";\nLifecycleHooks[LifecycleHooks.AfterViewChecked] = \"AfterViewChecked\";\nvar LIFECYCLE_HOOKS_VALUES = [\n    LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n    LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n    LifecycleHooks.AfterViewChecked\n];\n/**\n * @param {?} reflector\n * @param {?} hook\n * @param {?} token\n * @return {?}\n */\nfunction hasLifecycleHook(reflector, hook, token) {\n    return reflector.hasLifecycleHook(token, getHookName(hook));\n}\n/**\n * @param {?} reflector\n * @param {?} token\n * @return {?}\n */\nfunction getAllLifecycleHooks(reflector, token) {\n    return LIFECYCLE_HOOKS_VALUES.filter(function (hook) { return hasLifecycleHook(reflector, hook, token); });\n}\n/**\n * @param {?} hook\n * @return {?}\n */\nfunction getHookName(hook) {\n    switch (hook) {\n        case LifecycleHooks.OnInit:\n            return 'ngOnInit';\n        case LifecycleHooks.OnDestroy:\n            return 'ngOnDestroy';\n        case LifecycleHooks.DoCheck:\n            return 'ngDoCheck';\n        case LifecycleHooks.OnChanges:\n            return 'ngOnChanges';\n        case LifecycleHooks.AfterContentInit:\n            return 'ngAfterContentInit';\n        case LifecycleHooks.AfterContentChecked:\n            return 'ngAfterContentChecked';\n        case LifecycleHooks.AfterViewInit:\n            return 'ngAfterViewInit';\n        case LifecycleHooks.AfterViewChecked:\n            return 'ngAfterViewChecked';\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _isNgModuleMetadata(obj) {\n    return obj instanceof _angular_core.NgModule;\n}\n/**\n * Resolves types to {\\@link NgModule}.\n */\nvar NgModuleResolver = (function () {\n    /**\n     * @param {?} _reflector\n     */\n    function NgModuleResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    NgModuleResolver.prototype.isNgModule = function (type) { return this._reflector.annotations(type).some(_isNgModuleMetadata); };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    NgModuleResolver.prototype.resolve = function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModuleMeta = findLast(this._reflector.annotations(type), _isNgModuleMetadata);\n        if (ngModuleMeta) {\n            return ngModuleMeta;\n        }\n        else {\n            if (throwIfNotFound) {\n                throw new Error(\"No NgModule metadata found for '\" + _angular_core.Éµstringify(type) + \"'.\");\n            }\n            return null;\n        }\n    };\n    return NgModuleResolver;\n}());\nNgModuleResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nNgModuleResolver.ctorParameters = function () { return [\n    { type: CompileReflector, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} type\n * @return {?}\n */\nfunction _isPipeMetadata(type) {\n    return type instanceof _angular_core.Pipe;\n}\n/**\n * Resolve a `Type` for {\\@link Pipe}.\n *\n * This interface can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n */\nvar PipeResolver = (function () {\n    /**\n     * @param {?} _reflector\n     */\n    function PipeResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    PipeResolver.prototype.isPipe = function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(_isPipeMetadata);\n    };\n    /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    PipeResolver.prototype.resolve = function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ metas = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n        if (metas) {\n            var /** @type {?} */ annotation = findLast(metas, _isPipeMetadata);\n            if (annotation) {\n                return annotation;\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Pipe decorator found on \" + _angular_core.Éµstringify(type));\n        }\n        return null;\n    };\n    return PipeResolver;\n}());\nPipeResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nPipeResolver.ctorParameters = function () { return [\n    { type: CompileReflector, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar SummaryResolver = (function () {\n    function SummaryResolver() {\n    }\n    /**\n     * @abstract\n     * @param {?} fileName\n     * @return {?}\n     */\n    SummaryResolver.prototype.isLibraryFile = function (fileName) { };\n    /**\n     * @abstract\n     * @param {?} fileName\n     * @return {?}\n     */\n    SummaryResolver.prototype.getLibraryFileName = function (fileName) { };\n    /**\n     * @abstract\n     * @param {?} reference\n     * @return {?}\n     */\n    SummaryResolver.prototype.resolveSummary = function (reference) { };\n    /**\n     * @abstract\n     * @param {?} filePath\n     * @return {?}\n     */\n    SummaryResolver.prototype.getSymbolsOf = function (filePath) { };\n    /**\n     * @abstract\n     * @param {?} reference\n     * @return {?}\n     */\n    SummaryResolver.prototype.getImportAs = function (reference) { };\n    /**\n     * @abstract\n     * @param {?} summary\n     * @return {?}\n     */\n    SummaryResolver.prototype.addSummary = function (summary) { };\n    return SummaryResolver;\n}());\nvar JitSummaryResolver = (function () {\n    function JitSummaryResolver() {\n        this._summaries = new Map();\n    }\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.isLibraryFile = function (fileName) { return false; };\n    \n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getLibraryFileName = function (fileName) { return null; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.resolveSummary = function (reference) {\n        return this._summaries.get(reference) || null;\n    };\n    \n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getSymbolsOf = function (filePath) { return []; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getImportAs = function (reference) { return reference; };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.addSummary = function (summary) { this._summaries.set(summary.symbol, summary); };\n    \n    return JitSummaryResolver;\n}());\nJitSummaryResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nJitSummaryResolver.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ERROR_COLLECTOR_TOKEN = new _angular_core.InjectionToken('ErrorCollector');\nvar CompileMetadataResolver = (function () {\n    /**\n     * @param {?} _config\n     * @param {?} _ngModuleResolver\n     * @param {?} _directiveResolver\n     * @param {?} _pipeResolver\n     * @param {?} _summaryResolver\n     * @param {?} _schemaRegistry\n     * @param {?} _directiveNormalizer\n     * @param {?} _console\n     * @param {?} _staticSymbolCache\n     * @param {?} _reflector\n     * @param {?=} _errorCollector\n     */\n    function CompileMetadataResolver(_config, _ngModuleResolver, _directiveResolver, _pipeResolver, _summaryResolver, _schemaRegistry, _directiveNormalizer, _console, _staticSymbolCache, _reflector, _errorCollector) {\n        this._config = _config;\n        this._ngModuleResolver = _ngModuleResolver;\n        this._directiveResolver = _directiveResolver;\n        this._pipeResolver = _pipeResolver;\n        this._summaryResolver = _summaryResolver;\n        this._schemaRegistry = _schemaRegistry;\n        this._directiveNormalizer = _directiveNormalizer;\n        this._console = _console;\n        this._staticSymbolCache = _staticSymbolCache;\n        this._reflector = _reflector;\n        this._errorCollector = _errorCollector;\n        this._nonNormalizedDirectiveCache = new Map();\n        this._directiveCache = new Map();\n        this._summaryCache = new Map();\n        this._pipeCache = new Map();\n        this._ngModuleCache = new Map();\n        this._ngModuleOfTypes = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getReflector = function () { return this._reflector; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCacheFor = function (type) {\n        var /** @type {?} */ dirMeta = this._directiveCache.get(type);\n        this._directiveCache.delete(type);\n        this._nonNormalizedDirectiveCache.delete(type);\n        this._summaryCache.delete(type);\n        this._pipeCache.delete(type);\n        this._ngModuleOfTypes.delete(type);\n        // Clear all of the NgModule as they contain transitive information!\n        this._ngModuleCache.clear();\n        if (dirMeta) {\n            this._directiveNormalizer.clearCacheFor(dirMeta);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCache = function () {\n        this._directiveCache.clear();\n        this._nonNormalizedDirectiveCache.clear();\n        this._summaryCache.clear();\n        this._pipeCache.clear();\n        this._ngModuleCache.clear();\n        this._ngModuleOfTypes.clear();\n        this._directiveNormalizer.clearCache();\n    };\n    /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._createProxyClass = function (baseType, name) {\n        var /** @type {?} */ delegate = null;\n        var /** @type {?} */ proxyClass = (function () {\n            if (!delegate) {\n                throw new Error(\"Illegal state: Class \" + name + \" for type \" + _angular_core.Éµstringify(baseType) + \" is not compiled yet!\");\n            }\n            return delegate.apply(this, arguments);\n        });\n        proxyClass.setDelegate = function (d) {\n            delegate = d;\n            ((proxyClass)).prototype = d.prototype;\n        };\n        // Make stringify work correctly\n        ((proxyClass)).overriddenName = name;\n        return proxyClass;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getGeneratedClass = function (dirType, name) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n        }\n        else {\n            return this._createProxyClass(dirType, name);\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentViewClass = function (dirType) {\n        return this.getGeneratedClass(dirType, viewClassName(dirType, 0));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentViewClass = function (dirType) {\n        return this.getGeneratedClass(dirType, hostViewClassName(dirType));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentType = function (dirType) {\n        var /** @type {?} */ name = identifierName({ reference: dirType }) + \"_Host\";\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(dirType.filePath, name);\n        }\n        else {\n            var /** @type {?} */ HostClass = (function HostClass() { });\n            HostClass.overriddenName = name;\n            return HostClass;\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getRendererType = function (dirType) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), rendererTypeName(dirType));\n        }\n        else {\n            // returning an object as proxy,\n            // that we fill later during runtime compilation.\n            return ({});\n        }\n    };\n    /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentFactory = function (selector, dirType, inputs, outputs) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), componentFactoryName(dirType));\n        }\n        else {\n            var /** @type {?} */ hostView = this.getHostComponentViewClass(dirType);\n            // Note: ngContentSelectors will be filled later once the template is\n            // loaded.\n            return _angular_core.Éµccf(selector, dirType, /** @type {?} */ (hostView), inputs, outputs, []);\n        }\n    };\n    /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.initComponentFactory = function (factory, ngContentSelectors) {\n        if (!(factory instanceof StaticSymbol)) {\n            (_a = factory.ngContentSelectors).push.apply(_a, ngContentSelectors);\n        }\n        var _a;\n    };\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadSummary = function (type, kind) {\n        var /** @type {?} */ typeSummary = this._summaryCache.get(type);\n        if (!typeSummary) {\n            var /** @type {?} */ summary = this._summaryResolver.resolveSummary(type);\n            typeSummary = summary ? summary.type : null;\n            this._summaryCache.set(type, typeSummary || null);\n        }\n        return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n    };\n    /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadDirectiveMetadata = function (ngModuleType, directiveType, isSync) {\n        var _this = this;\n        if (this._directiveCache.has(directiveType)) {\n            return null;\n        }\n        directiveType = _angular_core.resolveForwardRef(directiveType);\n        var _a = ((this.getNonNormalizedDirectiveMetadata(directiveType))), annotation = _a.annotation, metadata = _a.metadata;\n        var /** @type {?} */ createDirectiveMetadata = function (templateMetadata) {\n            var /** @type {?} */ normalizedDirMeta = new CompileDirectiveMetadata({\n                isHost: false,\n                type: metadata.type,\n                isComponent: metadata.isComponent,\n                selector: metadata.selector,\n                exportAs: metadata.exportAs,\n                changeDetection: metadata.changeDetection,\n                inputs: metadata.inputs,\n                outputs: metadata.outputs,\n                hostListeners: metadata.hostListeners,\n                hostProperties: metadata.hostProperties,\n                hostAttributes: metadata.hostAttributes,\n                providers: metadata.providers,\n                viewProviders: metadata.viewProviders,\n                queries: metadata.queries,\n                viewQueries: metadata.viewQueries,\n                entryComponents: metadata.entryComponents,\n                componentViewType: metadata.componentViewType,\n                rendererType: metadata.rendererType,\n                componentFactory: metadata.componentFactory,\n                template: templateMetadata\n            });\n            if (templateMetadata) {\n                _this.initComponentFactory(/** @type {?} */ ((metadata.componentFactory)), templateMetadata.ngContentSelectors);\n            }\n            _this._directiveCache.set(directiveType, normalizedDirMeta);\n            _this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n            return null;\n        };\n        if (metadata.isComponent) {\n            var /** @type {?} */ template = ((metadata.template));\n            var /** @type {?} */ templateMeta = this._directiveNormalizer.normalizeTemplate({\n                ngModuleType: ngModuleType,\n                componentType: directiveType,\n                moduleUrl: this._reflector.componentModuleUrl(directiveType, annotation),\n                encapsulation: template.encapsulation,\n                template: template.template,\n                templateUrl: template.templateUrl,\n                styles: template.styles,\n                styleUrls: template.styleUrls,\n                animations: template.animations,\n                interpolation: template.interpolation\n            });\n            if (_angular_core.ÉµisPromise(templateMeta) && isSync) {\n                this._reportError(componentStillLoadingError(directiveType), directiveType);\n                return null;\n            }\n            return SyncAsync.then(templateMeta, createDirectiveMetadata);\n        }\n        else {\n            // directive\n            createDirectiveMetadata(null);\n            return null;\n        }\n    };\n    /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNonNormalizedDirectiveMetadata = function (directiveType) {\n        var _this = this;\n        directiveType = _angular_core.resolveForwardRef(directiveType);\n        if (!directiveType) {\n            return null;\n        }\n        var /** @type {?} */ cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n        if (cacheEntry) {\n            return cacheEntry;\n        }\n        var /** @type {?} */ dirMeta = this._directiveResolver.resolve(directiveType, false);\n        if (!dirMeta) {\n            return null;\n        }\n        var /** @type {?} */ nonNormalizedTemplateMetadata = ((undefined));\n        if (dirMeta instanceof _angular_core.Component) {\n            // component\n            assertArrayOfStrings('styles', dirMeta.styles);\n            assertArrayOfStrings('styleUrls', dirMeta.styleUrls);\n            assertInterpolationSymbols('interpolation', dirMeta.interpolation);\n            var /** @type {?} */ animations = dirMeta.animations;\n            nonNormalizedTemplateMetadata = new CompileTemplateMetadata({\n                encapsulation: noUndefined(dirMeta.encapsulation),\n                template: noUndefined(dirMeta.template),\n                templateUrl: noUndefined(dirMeta.templateUrl),\n                styles: dirMeta.styles || [],\n                styleUrls: dirMeta.styleUrls || [],\n                animations: animations || [],\n                interpolation: noUndefined(dirMeta.interpolation),\n                isInline: !!dirMeta.template,\n                externalStylesheets: [],\n                ngContentSelectors: []\n            });\n        }\n        var /** @type {?} */ changeDetectionStrategy = ((null));\n        var /** @type {?} */ viewProviders = [];\n        var /** @type {?} */ entryComponentMetadata = [];\n        var /** @type {?} */ selector = dirMeta.selector;\n        if (dirMeta instanceof _angular_core.Component) {\n            // Component\n            changeDetectionStrategy = ((dirMeta.changeDetection));\n            if (dirMeta.viewProviders) {\n                viewProviders = this._getProvidersMetadata(dirMeta.viewProviders, entryComponentMetadata, \"viewProviders for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n            }\n            if (dirMeta.entryComponents) {\n                entryComponentMetadata = flattenAndDedupeArray(dirMeta.entryComponents)\n                    .map(function (type) { return ((_this._getEntryComponentMetadata(type))); })\n                    .concat(entryComponentMetadata);\n            }\n            if (!selector) {\n                selector = this._schemaRegistry.getDefaultComponentElementName();\n            }\n        }\n        else {\n            // Directive\n            if (!selector) {\n                this._reportError(syntaxError(\"Directive \" + stringifyType(directiveType) + \" has no selector, please add it!\"), directiveType);\n                selector = 'error';\n            }\n        }\n        var /** @type {?} */ providers = [];\n        if (dirMeta.providers != null) {\n            providers = this._getProvidersMetadata(dirMeta.providers, entryComponentMetadata, \"providers for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n        }\n        var /** @type {?} */ queries = [];\n        var /** @type {?} */ viewQueries = [];\n        if (dirMeta.queries != null) {\n            queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n            viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n        }\n        var /** @type {?} */ metadata = CompileDirectiveMetadata.create({\n            isHost: false,\n            selector: selector,\n            exportAs: noUndefined(dirMeta.exportAs),\n            isComponent: !!nonNormalizedTemplateMetadata,\n            type: this._getTypeMetadata(directiveType),\n            template: nonNormalizedTemplateMetadata,\n            changeDetection: changeDetectionStrategy,\n            inputs: dirMeta.inputs || [],\n            outputs: dirMeta.outputs || [],\n            host: dirMeta.host || {},\n            providers: providers || [],\n            viewProviders: viewProviders || [],\n            queries: queries || [],\n            viewQueries: viewQueries || [],\n            entryComponents: entryComponentMetadata,\n            componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                null,\n            rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : null,\n            componentFactory: null\n        });\n        if (nonNormalizedTemplateMetadata) {\n            metadata.componentFactory =\n                this.getComponentFactory(selector, directiveType, metadata.inputs, metadata.outputs);\n        }\n        cacheEntry = { metadata: metadata, annotation: dirMeta };\n        this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n        return cacheEntry;\n    };\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveMetadata = function (directiveType) {\n        var /** @type {?} */ dirMeta = ((this._directiveCache.get(directiveType)));\n        if (!dirMeta) {\n            this._reportError(syntaxError(\"Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive \" + stringifyType(directiveType) + \".\"), directiveType);\n        }\n        return dirMeta;\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveSummary = function (dirType) {\n        var /** @type {?} */ dirSummary = (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (!dirSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for directive \" + stringifyType(dirType) + \".\"), dirType);\n        }\n        return dirSummary;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isDirective = function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Directive) ||\n            this._directiveResolver.isDirective(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isPipe = function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Pipe) ||\n            this._pipeResolver.isPipe(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isNgModule = function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.NgModule) ||\n            this._ngModuleResolver.isNgModule(type);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleSummary = function (moduleType) {\n        var /** @type {?} */ moduleSummary = (this._loadSummary(moduleType, CompileSummaryKind.NgModule));\n        if (!moduleSummary) {\n            var /** @type {?} */ moduleMeta = this.getNgModuleMetadata(moduleType, false);\n            moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n            if (moduleSummary) {\n                this._summaryCache.set(moduleType, moduleSummary);\n            }\n        }\n        return moduleSummary;\n    };\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadNgModuleDirectiveAndPipeMetadata = function (moduleType, isSync, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n        var /** @type {?} */ loading = [];\n        if (ngModule) {\n            ngModule.declaredDirectives.forEach(function (id) {\n                var /** @type {?} */ promise = _this.loadDirectiveMetadata(moduleType, id.reference, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            ngModule.declaredPipes.forEach(function (id) { return _this._loadPipeMetadata(id.reference); });\n        }\n        return Promise.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleMetadata = function (moduleType, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        moduleType = _angular_core.resolveForwardRef(moduleType);\n        var /** @type {?} */ compileMeta = this._ngModuleCache.get(moduleType);\n        if (compileMeta) {\n            return compileMeta;\n        }\n        var /** @type {?} */ meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n        if (!meta) {\n            return null;\n        }\n        var /** @type {?} */ declaredDirectives = [];\n        var /** @type {?} */ exportedNonModuleIdentifiers = [];\n        var /** @type {?} */ declaredPipes = [];\n        var /** @type {?} */ importedModules = [];\n        var /** @type {?} */ exportedModules = [];\n        var /** @type {?} */ providers = [];\n        var /** @type {?} */ entryComponents = [];\n        var /** @type {?} */ bootstrapComponents = [];\n        var /** @type {?} */ schemas = [];\n        if (meta.imports) {\n            flattenAndDedupeArray(meta.imports).forEach(function (importedType) {\n                var /** @type {?} */ importedModuleType = ((undefined));\n                if (isValidType(importedType)) {\n                    importedModuleType = importedType;\n                }\n                else if (importedType && importedType.ngModule) {\n                    var /** @type {?} */ moduleWithProviders = importedType;\n                    importedModuleType = moduleWithProviders.ngModule;\n                    if (moduleWithProviders.providers) {\n                        providers.push.apply(providers, _this._getProvidersMetadata(moduleWithProviders.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(importedModuleType) + \"'\", [], importedType));\n                    }\n                }\n                if (importedModuleType) {\n                    if (_this._checkSelfImport(moduleType, importedModuleType))\n                        return;\n                    var /** @type {?} */ importedModuleSummary = _this.getNgModuleSummary(importedModuleType);\n                    if (!importedModuleSummary) {\n                        _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(importedType) + \" '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'. Please add a @NgModule annotation.\"), moduleType);\n                        return;\n                    }\n                    importedModules.push(importedModuleSummary);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n            });\n        }\n        if (meta.exports) {\n            flattenAndDedupeArray(meta.exports).forEach(function (exportedType) {\n                if (!isValidType(exportedType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(exportedType) + \"' exported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ exportedModuleSummary = _this.getNgModuleSummary(exportedType);\n                if (exportedModuleSummary) {\n                    exportedModules.push(exportedModuleSummary);\n                }\n                else {\n                    exportedNonModuleIdentifiers.push(_this._getIdentifierMetadata(exportedType));\n                }\n            });\n        }\n        // Note: This will be modified later, so we rely on\n        // getting a new instance every time!\n        var /** @type {?} */ transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n        if (meta.declarations) {\n            flattenAndDedupeArray(meta.declarations).forEach(function (declaredType) {\n                if (!isValidType(declaredType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ declaredIdentifier = _this._getIdentifierMetadata(declaredType);\n                if (_this.isDirective(declaredType)) {\n                    transitiveModule.addDirective(declaredIdentifier);\n                    declaredDirectives.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else if (_this.isPipe(declaredType)) {\n                    transitiveModule.addPipe(declaredIdentifier);\n                    transitiveModule.pipes.push(declaredIdentifier);\n                    declaredPipes.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(declaredType) + \" '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\"), moduleType);\n                    return;\n                }\n            });\n        }\n        var /** @type {?} */ exportedDirectives = [];\n        var /** @type {?} */ exportedPipes = [];\n        exportedNonModuleIdentifiers.forEach(function (exportedId) {\n            if (transitiveModule.directivesSet.has(exportedId.reference)) {\n                exportedDirectives.push(exportedId);\n                transitiveModule.addExportedDirective(exportedId);\n            }\n            else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n                exportedPipes.push(exportedId);\n                transitiveModule.addExportedPipe(exportedId);\n            }\n            else {\n                _this._reportError(syntaxError(\"Can't export \" + _this._getTypeDescriptor(exportedId.reference) + \" \" + stringifyType(exportedId.reference) + \" from \" + stringifyType(moduleType) + \" as it was neither declared nor imported!\"), moduleType);\n                return;\n            }\n        });\n        // The providers of the module have to go last\n        // so that they overwrite any other provider we already added.\n        if (meta.providers) {\n            providers.push.apply(providers, this._getProvidersMetadata(meta.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(moduleType) + \"'\", [], moduleType));\n        }\n        if (meta.entryComponents) {\n            entryComponents.push.apply(entryComponents, flattenAndDedupeArray(meta.entryComponents)\n                .map(function (type) { return ((_this._getEntryComponentMetadata(type))); }));\n        }\n        if (meta.bootstrap) {\n            flattenAndDedupeArray(meta.bootstrap).forEach(function (type) {\n                if (!isValidType(type)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(type) + \"' used in the bootstrap property of module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                bootstrapComponents.push(_this._getIdentifierMetadata(type));\n            });\n        }\n        entryComponents.push.apply(entryComponents, bootstrapComponents.map(function (type) { return ((_this._getEntryComponentMetadata(type.reference))); }));\n        if (meta.schemas) {\n            schemas.push.apply(schemas, flattenAndDedupeArray(meta.schemas));\n        }\n        compileMeta = new CompileNgModuleMetadata({\n            type: this._getTypeMetadata(moduleType),\n            providers: providers,\n            entryComponents: entryComponents,\n            bootstrapComponents: bootstrapComponents,\n            schemas: schemas,\n            declaredDirectives: declaredDirectives,\n            exportedDirectives: exportedDirectives,\n            declaredPipes: declaredPipes,\n            exportedPipes: exportedPipes,\n            importedModules: importedModules,\n            exportedModules: exportedModules,\n            transitiveModule: transitiveModule,\n            id: meta.id || null,\n        });\n        entryComponents.forEach(function (id) { return transitiveModule.addEntryComponent(id); });\n        providers.forEach(function (provider) { return transitiveModule.addProvider(provider, /** @type {?} */ ((compileMeta)).type); });\n        transitiveModule.addModule(compileMeta.type);\n        this._ngModuleCache.set(moduleType, compileMeta);\n        return compileMeta;\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._checkSelfImport = function (moduleType, importedModuleType) {\n        if (moduleType === importedModuleType) {\n            this._reportError(syntaxError(\"'\" + stringifyType(moduleType) + \"' module can't import itself\"), moduleType);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeDescriptor = function (type) {\n        if (this.isDirective(type)) {\n            return 'directive';\n        }\n        if (this.isPipe(type)) {\n            return 'pipe';\n        }\n        if (this.isNgModule(type)) {\n            return 'module';\n        }\n        if (((type)).provide) {\n            return 'provider';\n        }\n        return 'value';\n    };\n    /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._addTypeToModule = function (type, moduleType) {\n        var /** @type {?} */ oldModule = this._ngModuleOfTypes.get(type);\n        if (oldModule && oldModule !== moduleType) {\n            this._reportError(syntaxError(\"Type \" + stringifyType(type) + \" is part of the declarations of 2 modules: \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \"! \" +\n                (\"Please consider moving \" + stringifyType(type) + \" to a higher module that imports \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \". \") +\n                (\"You can also create a new NgModule that exports and includes \" + stringifyType(type) + \" then import that NgModule in \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \".\")), moduleType);\n            return;\n        }\n        this._ngModuleOfTypes.set(type, moduleType);\n    };\n    /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata = function (importedModules, exportedModules) {\n        // collect `providers` / `entryComponents` from all imported and all exported modules\n        var /** @type {?} */ result = new TransitiveCompileNgModuleMetadata();\n        var /** @type {?} */ modulesByToken = new Map();\n        importedModules.concat(exportedModules).forEach(function (modSummary) {\n            modSummary.modules.forEach(function (mod) { return result.addModule(mod); });\n            modSummary.entryComponents.forEach(function (comp) { return result.addEntryComponent(comp); });\n            var /** @type {?} */ addedTokens = new Set();\n            modSummary.providers.forEach(function (entry) {\n                var /** @type {?} */ tokenRef = tokenReference(entry.provider.token);\n                var /** @type {?} */ prevModules = modulesByToken.get(tokenRef);\n                if (!prevModules) {\n                    prevModules = new Set();\n                    modulesByToken.set(tokenRef, prevModules);\n                }\n                var /** @type {?} */ moduleRef = entry.module.reference;\n                // Note: the providers of one module may still contain multiple providers\n                // per token (e.g. for multi providers), and we need to preserve these.\n                if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n                    prevModules.add(moduleRef);\n                    addedTokens.add(tokenRef);\n                    result.addProvider(entry.provider, entry.module);\n                }\n            });\n        });\n        exportedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addExportedDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addExportedPipe(id); });\n        });\n        importedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addPipe(id); });\n        });\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getIdentifierMetadata = function (type) {\n        type = _angular_core.resolveForwardRef(type);\n        return { reference: type };\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isInjectable = function (type) {\n        var /** @type {?} */ annotations = this._reflector.annotations(type);\n        // Note: We need an exact check here as @Component / @Directive / ... inherit\n        // from @CompilerInjectable!\n        return annotations.some(function (ann) { return ann.constructor === _angular_core.Injectable; });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getInjectableSummary = function (type) {\n        return {\n            summaryKind: CompileSummaryKind.Injectable,\n            type: this._getTypeMetadata(type, null, false)\n        };\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getInjectableMetadata = function (type, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        var /** @type {?} */ typeSummary = this._loadSummary(type, CompileSummaryKind.Injectable);\n        if (typeSummary) {\n            return typeSummary.type;\n        }\n        return this._getTypeMetadata(type, dependencies);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeMetadata = function (type, dependencies, throwOnUnknownDeps) {\n        if (dependencies === void 0) { dependencies = null; }\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ identifier = this._getIdentifierMetadata(type);\n        return {\n            reference: identifier.reference,\n            diDeps: this._getDependenciesMetadata(identifier.reference, dependencies, throwOnUnknownDeps),\n            lifecycleHooks: getAllLifecycleHooks(this._reflector, identifier.reference),\n        };\n    };\n    /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getFactoryMetadata = function (factory, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        factory = _angular_core.resolveForwardRef(factory);\n        return { reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies) };\n    };\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeMetadata = function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            this._reportError(syntaxError(\"Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeMeta || null;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeSummary = function (pipeType) {\n        var /** @type {?} */ pipeSummary = (this._loadSummary(pipeType, CompileSummaryKind.Pipe));\n        if (!pipeSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeSummary;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getOrLoadPipeMetadata = function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            pipeMeta = this._loadPipeMetadata(pipeType);\n        }\n        return pipeMeta;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadPipeMetadata = function (pipeType) {\n        pipeType = _angular_core.resolveForwardRef(pipeType);\n        var /** @type {?} */ pipeAnnotation = ((this._pipeResolver.resolve(pipeType)));\n        var /** @type {?} */ pipeMeta = new CompilePipeMetadata({\n            type: this._getTypeMetadata(pipeType),\n            name: pipeAnnotation.name,\n            pure: !!pipeAnnotation.pure\n        });\n        this._pipeCache.set(pipeType, pipeMeta);\n        this._summaryCache.set(pipeType, pipeMeta.toSummary());\n        return pipeMeta;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getDependenciesMetadata = function (typeOrFunc, dependencies, throwOnUnknownDeps) {\n        var _this = this;\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ hasUnknownDeps = false;\n        var /** @type {?} */ params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n        var /** @type {?} */ dependenciesMetadata = params.map(function (param) {\n            var /** @type {?} */ isAttribute = false;\n            var /** @type {?} */ isHost = false;\n            var /** @type {?} */ isSelf = false;\n            var /** @type {?} */ isSkipSelf = false;\n            var /** @type {?} */ isOptional = false;\n            var /** @type {?} */ token = null;\n            if (Array.isArray(param)) {\n                param.forEach(function (paramEntry) {\n                    if (paramEntry instanceof _angular_core.Host) {\n                        isHost = true;\n                    }\n                    else if (paramEntry instanceof _angular_core.Self) {\n                        isSelf = true;\n                    }\n                    else if (paramEntry instanceof _angular_core.SkipSelf) {\n                        isSkipSelf = true;\n                    }\n                    else if (paramEntry instanceof _angular_core.Optional) {\n                        isOptional = true;\n                    }\n                    else if (paramEntry instanceof _angular_core.Attribute) {\n                        isAttribute = true;\n                        token = paramEntry.attributeName;\n                    }\n                    else if (paramEntry instanceof _angular_core.Inject) {\n                        token = paramEntry.token;\n                    }\n                    else if (paramEntry instanceof _angular_core.InjectionToken) {\n                        token = paramEntry;\n                    }\n                    else if (isValidType(paramEntry) && token == null) {\n                        token = paramEntry;\n                    }\n                });\n            }\n            else {\n                token = param;\n            }\n            if (token == null) {\n                hasUnknownDeps = true;\n                return ((null));\n            }\n            return {\n                isAttribute: isAttribute,\n                isHost: isHost,\n                isSelf: isSelf,\n                isSkipSelf: isSkipSelf,\n                isOptional: isOptional,\n                token: _this._getTokenMetadata(token)\n            };\n        });\n        if (hasUnknownDeps) {\n            var /** @type {?} */ depsTokens = dependenciesMetadata.map(function (dep) { return dep ? stringifyType(dep.token) : '?'; }).join(', ');\n            var /** @type {?} */ message = \"Can't resolve all parameters for \" + stringifyType(typeOrFunc) + \": (\" + depsTokens + \").\";\n            if (throwOnUnknownDeps) {\n                this._reportError(syntaxError(message), typeOrFunc);\n            }\n            else {\n                this._console.warn(\"Warning: \" + message + \" This will become an error in Angular v5.x\");\n            }\n        }\n        return dependenciesMetadata;\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTokenMetadata = function (token) {\n        token = _angular_core.resolveForwardRef(token);\n        var /** @type {?} */ compileToken;\n        if (typeof token === 'string') {\n            compileToken = { value: token };\n        }\n        else {\n            compileToken = { identifier: { reference: token } };\n        }\n        return compileToken;\n    };\n    /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getProvidersMetadata = function (providers, targetEntryComponents, debugInfo, compileProviders, type) {\n        var _this = this;\n        if (compileProviders === void 0) { compileProviders = []; }\n        providers.forEach(function (provider, providerIdx) {\n            if (Array.isArray(provider)) {\n                _this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n            }\n            else {\n                provider = _angular_core.resolveForwardRef(provider);\n                var /** @type {?} */ providerMeta = ((undefined));\n                if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n                    _this._validateProvider(provider);\n                    providerMeta = new ProviderMeta(provider.provide, provider);\n                }\n                else if (isValidType(provider)) {\n                    providerMeta = new ProviderMeta(provider, { useClass: provider });\n                }\n                else if (provider === void 0) {\n                    _this._reportError(syntaxError(\"Encountered undefined provider! Usually this means you have a circular dependencies (might be caused by using 'barrel' index.ts files.\"));\n                    return;\n                }\n                else {\n                    var /** @type {?} */ providersInfo = ((providers.reduce(function (soFar, seenProvider, seenProviderIdx) {\n                        if (seenProviderIdx < providerIdx) {\n                            soFar.push(\"\" + stringifyType(seenProvider));\n                        }\n                        else if (seenProviderIdx == providerIdx) {\n                            soFar.push(\"?\" + stringifyType(seenProvider) + \"?\");\n                        }\n                        else if (seenProviderIdx == providerIdx + 1) {\n                            soFar.push('...');\n                        }\n                        return soFar;\n                    }, [])))\n                        .join(', ');\n                    _this._reportError(syntaxError(\"Invalid \" + (debugInfo ? debugInfo : 'provider') + \" - only instances of Provider and Type are allowed, got: [\" + providersInfo + \"]\"), type);\n                    return;\n                }\n                if (providerMeta.token ===\n                    _this._reflector.resolveExternalReference(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n                    targetEntryComponents.push.apply(targetEntryComponents, _this._getEntryComponentsFromProvider(providerMeta, type));\n                }\n                else {\n                    compileProviders.push(_this.getProviderMetadata(providerMeta));\n                }\n            }\n        });\n        return compileProviders;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._validateProvider = function (provider) {\n        if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n            this._reportError(syntaxError(\"Invalid provider for \" + stringifyType(provider.provide) + \". useClass cannot be \" + provider.useClass + \".\\n           Usually it happens when:\\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\\n           2. Class was used before it was declared. Use forwardRef in this case.\"));\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentsFromProvider = function (provider, type) {\n        var _this = this;\n        var /** @type {?} */ components = [];\n        var /** @type {?} */ collectedIdentifiers = [];\n        if (provider.useFactory || provider.useExisting || provider.useClass) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!\"), type);\n            return [];\n        }\n        if (!provider.multi) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!\"), type);\n            return [];\n        }\n        extractIdentifiers(provider.useValue, collectedIdentifiers);\n        collectedIdentifiers.forEach(function (identifier) {\n            var /** @type {?} */ entry = _this._getEntryComponentMetadata(identifier.reference, false);\n            if (entry) {\n                components.push(entry);\n            }\n        });\n        return components;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentMetadata = function (dirType, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n        if (dirMeta && dirMeta.metadata.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirMeta.metadata.componentFactory)) };\n        }\n        var /** @type {?} */ dirSummary = (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (dirSummary && dirSummary.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirSummary.componentFactory)) };\n        }\n        if (throwIfNotFound) {\n            throw syntaxError(dirType.name + \" cannot be used as an entry component.\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getProviderMetadata = function (provider) {\n        var /** @type {?} */ compileDeps = ((undefined));\n        var /** @type {?} */ compileTypeMetadata = ((null));\n        var /** @type {?} */ compileFactoryMetadata = ((null));\n        var /** @type {?} */ token = this._getTokenMetadata(provider.token);\n        if (provider.useClass) {\n            compileTypeMetadata = this._getInjectableMetadata(provider.useClass, provider.dependencies);\n            compileDeps = compileTypeMetadata.diDeps;\n            if (provider.token === provider.useClass) {\n                // use the compileTypeMetadata as it contains information about lifecycleHooks...\n                token = { identifier: compileTypeMetadata };\n            }\n        }\n        else if (provider.useFactory) {\n            compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n            compileDeps = compileFactoryMetadata.diDeps;\n        }\n        return {\n            token: token,\n            useClass: compileTypeMetadata,\n            useValue: provider.useValue,\n            useFactory: compileFactoryMetadata,\n            useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : undefined,\n            deps: compileDeps,\n            multi: provider.multi\n        };\n    };\n    /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueriesMetadata = function (queries, isViewQuery, directiveType) {\n        var _this = this;\n        var /** @type {?} */ res = [];\n        Object.keys(queries).forEach(function (propertyName) {\n            var /** @type {?} */ query = queries[propertyName];\n            if (query.isViewQuery === isViewQuery) {\n                res.push(_this._getQueryMetadata(query, propertyName, directiveType));\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._queryVarBindings = function (selector) { return selector.split(/\\s*,\\s*/); };\n    /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueryMetadata = function (q, propertyName, typeOrFunc) {\n        var _this = this;\n        var /** @type {?} */ selectors;\n        if (typeof q.selector === 'string') {\n            selectors =\n                this._queryVarBindings(q.selector).map(function (varName) { return _this._getTokenMetadata(varName); });\n        }\n        else {\n            if (!q.selector) {\n                this._reportError(syntaxError(\"Can't construct a query for the property \\\"\" + propertyName + \"\\\" of \\\"\" + stringifyType(typeOrFunc) + \"\\\" since the query selector wasn't defined.\"), typeOrFunc);\n                selectors = [];\n            }\n            else {\n                selectors = [this._getTokenMetadata(q.selector)];\n            }\n        }\n        return {\n            selectors: selectors,\n            first: q.first,\n            descendants: q.descendants, propertyName: propertyName,\n            read: q.read ? this._getTokenMetadata(q.read) : ((null))\n        };\n    };\n    /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._reportError = function (error, type, otherType) {\n        if (this._errorCollector) {\n            this._errorCollector(error, type);\n            if (otherType) {\n                this._errorCollector(error, otherType);\n            }\n        }\n        else {\n            throw error;\n        }\n    };\n    return CompileMetadataResolver;\n}());\nCompileMetadataResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nCompileMetadataResolver.ctorParameters = function () { return [\n    { type: CompilerConfig, },\n    { type: NgModuleResolver, },\n    { type: DirectiveResolver, },\n    { type: PipeResolver, },\n    { type: SummaryResolver, },\n    { type: ElementSchemaRegistry, },\n    { type: DirectiveNormalizer, },\n    { type: _angular_core.ÉµConsole, },\n    { type: StaticSymbolCache, decorators: [{ type: _angular_core.Optional },] },\n    { type: CompileReflector, },\n    { type: undefined, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [ERROR_COLLECTOR_TOKEN,] },] },\n]; };\n/**\n * @param {?} tree\n * @param {?=} out\n * @return {?}\n */\nfunction flattenArray(tree, out) {\n    if (out === void 0) { out = []; }\n    if (tree) {\n        for (var /** @type {?} */ i = 0; i < tree.length; i++) {\n            var /** @type {?} */ item = _angular_core.resolveForwardRef(tree[i]);\n            if (Array.isArray(item)) {\n                flattenArray(item, out);\n            }\n            else {\n                out.push(item);\n            }\n        }\n    }\n    return out;\n}\n/**\n * @param {?} array\n * @return {?}\n */\nfunction dedupeArray(array) {\n    if (array) {\n        return Array.from(new Set(array));\n    }\n    return [];\n}\n/**\n * @param {?} tree\n * @return {?}\n */\nfunction flattenAndDedupeArray(tree) {\n    return dedupeArray(flattenArray(tree));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValidType(value) {\n    return (value instanceof StaticSymbol) || (value instanceof _angular_core.Type);\n}\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nfunction extractIdentifiers(value, targetIdentifiers) {\n    visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\nvar _CompileValueConverter = (function (_super) {\n    __extends(_CompileValueConverter, _super);\n    function _CompileValueConverter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    _CompileValueConverter.prototype.visitOther = function (value, targetIdentifiers) {\n        targetIdentifiers.push({ reference: value });\n    };\n    return _CompileValueConverter;\n}(ValueTransformer));\n/**\n * @param {?} type\n * @return {?}\n */\nfunction stringifyType(type) {\n    if (type instanceof StaticSymbol) {\n        return type.name + \" in \" + type.filePath;\n    }\n    else {\n        return _angular_core.Éµstringify(type);\n    }\n}\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n * @param {?} compType\n * @return {?}\n */\nfunction componentStillLoadingError(compType) {\n    var /** @type {?} */ error = Error(\"Can't compile synchronously as \" + _angular_core.Éµstringify(compType) + \" is still being loaded!\");\n    ((error))[_angular_core.ÉµERROR_COMPONENT_TYPE] = compType;\n    return error;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TypeModifier = {};\nTypeModifier.Const = 0;\nTypeModifier[TypeModifier.Const] = \"Const\";\n/**\n * @abstract\n */\nvar Type$1 = (function () {\n    /**\n     * @param {?=} modifiers\n     */\n    function Type$1(modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n    }\n    /**\n     * @abstract\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Type$1.prototype.visitType = function (visitor, context) { };\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Type$1.prototype.hasModifier = function (modifier) { return ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Type$1;\n}());\nvar BuiltinTypeName = {};\nBuiltinTypeName.Dynamic = 0;\nBuiltinTypeName.Bool = 1;\nBuiltinTypeName.String = 2;\nBuiltinTypeName.Int = 3;\nBuiltinTypeName.Number = 4;\nBuiltinTypeName.Function = 5;\nBuiltinTypeName.Inferred = 6;\nBuiltinTypeName[BuiltinTypeName.Dynamic] = \"Dynamic\";\nBuiltinTypeName[BuiltinTypeName.Bool] = \"Bool\";\nBuiltinTypeName[BuiltinTypeName.String] = \"String\";\nBuiltinTypeName[BuiltinTypeName.Int] = \"Int\";\nBuiltinTypeName[BuiltinTypeName.Number] = \"Number\";\nBuiltinTypeName[BuiltinTypeName.Function] = \"Function\";\nBuiltinTypeName[BuiltinTypeName.Inferred] = \"Inferred\";\nvar BuiltinType = (function (_super) {\n    __extends(BuiltinType, _super);\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     */\n    function BuiltinType(name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BuiltinType.prototype.visitType = function (visitor, context) {\n        return visitor.visitBuiltintType(this, context);\n    };\n    return BuiltinType;\n}(Type$1));\nvar ExpressionType = (function (_super) {\n    __extends(ExpressionType, _super);\n    /**\n     * @param {?} value\n     * @param {?=} modifiers\n     */\n    function ExpressionType(value, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionType.prototype.visitType = function (visitor, context) {\n        return visitor.visitExpressionType(this, context);\n    };\n    return ExpressionType;\n}(Type$1));\nvar ArrayType = (function (_super) {\n    __extends(ArrayType, _super);\n    /**\n     * @param {?} of\n     * @param {?=} modifiers\n     */\n    function ArrayType(of, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.of = of;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ArrayType.prototype.visitType = function (visitor, context) {\n        return visitor.visitArrayType(this, context);\n    };\n    return ArrayType;\n}(Type$1));\nvar MapType = (function (_super) {\n    __extends(MapType, _super);\n    /**\n     * @param {?} valueType\n     * @param {?=} modifiers\n     */\n    function MapType(valueType, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.valueType = valueType || null;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    MapType.prototype.visitType = function (visitor, context) { return visitor.visitMapType(this, context); };\n    return MapType;\n}(Type$1));\nvar DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\nvar INFERRED_TYPE = new BuiltinType(BuiltinTypeName.Inferred);\nvar BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\nvar INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\nvar NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\nvar STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\nvar FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\nvar BinaryOperator = {};\nBinaryOperator.Equals = 0;\nBinaryOperator.NotEquals = 1;\nBinaryOperator.Identical = 2;\nBinaryOperator.NotIdentical = 3;\nBinaryOperator.Minus = 4;\nBinaryOperator.Plus = 5;\nBinaryOperator.Divide = 6;\nBinaryOperator.Multiply = 7;\nBinaryOperator.Modulo = 8;\nBinaryOperator.And = 9;\nBinaryOperator.Or = 10;\nBinaryOperator.Lower = 11;\nBinaryOperator.LowerEquals = 12;\nBinaryOperator.Bigger = 13;\nBinaryOperator.BiggerEquals = 14;\nBinaryOperator[BinaryOperator.Equals] = \"Equals\";\nBinaryOperator[BinaryOperator.NotEquals] = \"NotEquals\";\nBinaryOperator[BinaryOperator.Identical] = \"Identical\";\nBinaryOperator[BinaryOperator.NotIdentical] = \"NotIdentical\";\nBinaryOperator[BinaryOperator.Minus] = \"Minus\";\nBinaryOperator[BinaryOperator.Plus] = \"Plus\";\nBinaryOperator[BinaryOperator.Divide] = \"Divide\";\nBinaryOperator[BinaryOperator.Multiply] = \"Multiply\";\nBinaryOperator[BinaryOperator.Modulo] = \"Modulo\";\nBinaryOperator[BinaryOperator.And] = \"And\";\nBinaryOperator[BinaryOperator.Or] = \"Or\";\nBinaryOperator[BinaryOperator.Lower] = \"Lower\";\nBinaryOperator[BinaryOperator.LowerEquals] = \"LowerEquals\";\nBinaryOperator[BinaryOperator.Bigger] = \"Bigger\";\nBinaryOperator[BinaryOperator.BiggerEquals] = \"BiggerEquals\";\n/**\n * @abstract\n */\nvar Expression = (function () {\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     */\n    function Expression(type, sourceSpan) {\n        this.type = type || null;\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @abstract\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Expression.prototype.visitExpression = function (visitor, context) { };\n    /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.prop = function (name, sourceSpan) {\n        return new ReadPropExpr(this, name, null, sourceSpan);\n    };\n    /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.key = function (index, type, sourceSpan) {\n        return new ReadKeyExpr(this, index, type, sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callMethod = function (name, params, sourceSpan) {\n        return new InvokeMethodExpr(this, name, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callFn = function (params, sourceSpan) {\n        return new InvokeFunctionExpr(this, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.instantiate = function (params, type, sourceSpan) {\n        return new InstantiateExpr(this, params, type, sourceSpan);\n    };\n    /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.conditional = function (trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        return new ConditionalExpr(this, trueCase, falseCase, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.equals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notEquals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.identical = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notIdentical = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.minus = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.plus = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.divide = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.multiply = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.modulo = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.and = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.And, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.or = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lower = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lowerEquals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.bigger = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.biggerEquals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.isBlank = function (sourceSpan) {\n        // Note: We use equals by purpose here to compare to null and undefined in JS.\n        // We use the typed null to allow strictNullChecks to narrow types.\n        return this.equals(TYPED_NULL_EXPR, sourceSpan);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.cast = function (type, sourceSpan) {\n        return new CastExpr(this, type, sourceSpan);\n    };\n    /**\n     * @return {?}\n     */\n    Expression.prototype.toStmt = function () { return new ExpressionStatement(this, null); };\n    return Expression;\n}());\nvar BuiltinVar = {};\nBuiltinVar.This = 0;\nBuiltinVar.Super = 1;\nBuiltinVar.CatchError = 2;\nBuiltinVar.CatchStack = 3;\nBuiltinVar[BuiltinVar.This] = \"This\";\nBuiltinVar[BuiltinVar.Super] = \"Super\";\nBuiltinVar[BuiltinVar.CatchError] = \"CatchError\";\nBuiltinVar[BuiltinVar.CatchStack] = \"CatchStack\";\nvar ReadVarExpr = (function (_super) {\n    __extends(ReadVarExpr, _super);\n    /**\n     * @param {?} name\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function ReadVarExpr(name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        if (typeof name === 'string') {\n            _this.name = name;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = name;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadVarExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitReadVarExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadVarExpr.prototype.set = function (value) {\n        if (!this.name) {\n            throw new Error(\"Built in variable \" + this.builtin + \" can not be assigned to.\");\n        }\n        return new WriteVarExpr(this.name, value, null, this.sourceSpan);\n    };\n    return ReadVarExpr;\n}(Expression));\nvar WriteVarExpr = (function (_super) {\n    __extends(WriteVarExpr, _super);\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function WriteVarExpr(name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteVarExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWriteVarExpr(this, context);\n    };\n    /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    WriteVarExpr.prototype.toDeclStmt = function (type, modifiers) {\n        return new DeclareVarStmt(this.name, this.value, type, modifiers, this.sourceSpan);\n    };\n    return WriteVarExpr;\n}(Expression));\nvar WriteKeyExpr = (function (_super) {\n    __extends(WriteKeyExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} index\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function WriteKeyExpr(receiver, index, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWriteKeyExpr(this, context);\n    };\n    return WriteKeyExpr;\n}(Expression));\nvar WritePropExpr = (function (_super) {\n    __extends(WritePropExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function WritePropExpr(receiver, name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WritePropExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWritePropExpr(this, context);\n    };\n    return WritePropExpr;\n}(Expression));\nvar BuiltinMethod = {};\nBuiltinMethod.ConcatArray = 0;\nBuiltinMethod.SubscribeObservable = 1;\nBuiltinMethod.Bind = 2;\nBuiltinMethod[BuiltinMethod.ConcatArray] = \"ConcatArray\";\nBuiltinMethod[BuiltinMethod.SubscribeObservable] = \"SubscribeObservable\";\nBuiltinMethod[BuiltinMethod.Bind] = \"Bind\";\nvar InvokeMethodExpr = (function (_super) {\n    __extends(InvokeMethodExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} method\n     * @param {?} args\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function InvokeMethodExpr(receiver, method, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.args = args;\n        if (typeof method === 'string') {\n            _this.name = method;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = method;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitInvokeMethodExpr(this, context);\n    };\n    return InvokeMethodExpr;\n}(Expression));\nvar InvokeFunctionExpr = (function (_super) {\n    __extends(InvokeFunctionExpr, _super);\n    /**\n     * @param {?} fn\n     * @param {?} args\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function InvokeFunctionExpr(fn, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.fn = fn;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitInvokeFunctionExpr(this, context);\n    };\n    return InvokeFunctionExpr;\n}(Expression));\nvar InstantiateExpr = (function (_super) {\n    __extends(InstantiateExpr, _super);\n    /**\n     * @param {?} classExpr\n     * @param {?} args\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function InstantiateExpr(classExpr, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.classExpr = classExpr;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InstantiateExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitInstantiateExpr(this, context);\n    };\n    return InstantiateExpr;\n}(Expression));\nvar LiteralExpr = (function (_super) {\n    __extends(LiteralExpr, _super);\n    /**\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function LiteralExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitLiteralExpr(this, context);\n    };\n    return LiteralExpr;\n}(Expression));\nvar ExternalExpr = (function (_super) {\n    __extends(ExternalExpr, _super);\n    /**\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} typeParams\n     * @param {?=} sourceSpan\n     */\n    function ExternalExpr(value, type, typeParams, sourceSpan) {\n        if (typeParams === void 0) { typeParams = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        _this.typeParams = typeParams;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExternalExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitExternalExpr(this, context);\n    };\n    return ExternalExpr;\n}(Expression));\nvar ExternalReference = (function () {\n    /**\n     * @param {?} moduleName\n     * @param {?} name\n     * @param {?} runtime\n     */\n    function ExternalReference(moduleName, name, runtime) {\n        this.moduleName = moduleName;\n        this.name = name;\n        this.runtime = runtime;\n    }\n    return ExternalReference;\n}());\nvar ConditionalExpr = (function (_super) {\n    __extends(ConditionalExpr, _super);\n    /**\n     * @param {?} condition\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function ConditionalExpr(condition, trueCase, falseCase, type, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        var _this = _super.call(this, type || trueCase.type, sourceSpan) || this;\n        _this.condition = condition;\n        _this.falseCase = falseCase;\n        _this.trueCase = trueCase;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ConditionalExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitConditionalExpr(this, context);\n    };\n    return ConditionalExpr;\n}(Expression));\nvar NotExpr = (function (_super) {\n    __extends(NotExpr, _super);\n    /**\n     * @param {?} condition\n     * @param {?=} sourceSpan\n     */\n    function NotExpr(condition, sourceSpan) {\n        var _this = _super.call(this, BOOL_TYPE, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NotExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitNotExpr(this, context);\n    };\n    return NotExpr;\n}(Expression));\nvar AssertNotNull = (function (_super) {\n    __extends(AssertNotNull, _super);\n    /**\n     * @param {?} condition\n     * @param {?=} sourceSpan\n     */\n    function AssertNotNull(condition, sourceSpan) {\n        var _this = _super.call(this, condition.type, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AssertNotNull.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitAssertNotNullExpr(this, context);\n    };\n    return AssertNotNull;\n}(Expression));\nvar CastExpr = (function (_super) {\n    __extends(CastExpr, _super);\n    /**\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function CastExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CastExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitCastExpr(this, context);\n    };\n    return CastExpr;\n}(Expression));\nvar FnParam = (function () {\n    /**\n     * @param {?} name\n     * @param {?=} type\n     */\n    function FnParam(name, type) {\n        if (type === void 0) { type = null; }\n        this.name = name;\n        this.type = type;\n    }\n    return FnParam;\n}());\nvar FunctionExpr = (function (_super) {\n    __extends(FunctionExpr, _super);\n    /**\n     * @param {?} params\n     * @param {?} statements\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function FunctionExpr(params, statements, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.params = params;\n        _this.statements = statements;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    FunctionExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitFunctionExpr(this, context);\n    };\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    FunctionExpr.prototype.toDeclStmt = function (name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers, this.sourceSpan);\n    };\n    return FunctionExpr;\n}(Expression));\nvar BinaryOperatorExpr = (function (_super) {\n    __extends(BinaryOperatorExpr, _super);\n    /**\n     * @param {?} operator\n     * @param {?} lhs\n     * @param {?} rhs\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function BinaryOperatorExpr(operator, lhs, rhs, type, sourceSpan) {\n        var _this = _super.call(this, type || lhs.type, sourceSpan) || this;\n        _this.operator = operator;\n        _this.rhs = rhs;\n        _this.lhs = lhs;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitBinaryOperatorExpr(this, context);\n    };\n    return BinaryOperatorExpr;\n}(Expression));\nvar ReadPropExpr = (function (_super) {\n    __extends(ReadPropExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function ReadPropExpr(receiver, name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadPropExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitReadPropExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadPropExpr.prototype.set = function (value) {\n        return new WritePropExpr(this.receiver, this.name, value, null, this.sourceSpan);\n    };\n    return ReadPropExpr;\n}(Expression));\nvar ReadKeyExpr = (function (_super) {\n    __extends(ReadKeyExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function ReadKeyExpr(receiver, index, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitReadKeyExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.set = function (value) {\n        return new WriteKeyExpr(this.receiver, this.index, value, null, this.sourceSpan);\n    };\n    return ReadKeyExpr;\n}(Expression));\nvar LiteralArrayExpr = (function (_super) {\n    __extends(LiteralArrayExpr, _super);\n    /**\n     * @param {?} entries\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function LiteralArrayExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitLiteralArrayExpr(this, context);\n    };\n    return LiteralArrayExpr;\n}(Expression));\nvar LiteralMapEntry = (function () {\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @param {?=} quoted\n     */\n    function LiteralMapEntry(key, value, quoted) {\n        if (quoted === void 0) { quoted = false; }\n        this.key = key;\n        this.value = value;\n        this.quoted = quoted;\n    }\n    return LiteralMapEntry;\n}());\nvar LiteralMapExpr = (function (_super) {\n    __extends(LiteralMapExpr, _super);\n    /**\n     * @param {?} entries\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function LiteralMapExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        _this.valueType = null;\n        if (type) {\n            _this.valueType = type.valueType;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitLiteralMapExpr(this, context);\n    };\n    return LiteralMapExpr;\n}(Expression));\nvar CommaExpr = (function (_super) {\n    __extends(CommaExpr, _super);\n    /**\n     * @param {?} parts\n     * @param {?=} sourceSpan\n     */\n    function CommaExpr(parts, sourceSpan) {\n        var _this = _super.call(this, parts[parts.length - 1].type, sourceSpan) || this;\n        _this.parts = parts;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommaExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitCommaExpr(this, context);\n    };\n    return CommaExpr;\n}(Expression));\nvar THIS_EXPR = new ReadVarExpr(BuiltinVar.This, null, null);\nvar SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super, null, null);\nvar CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError, null, null);\nvar CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack, null, null);\nvar NULL_EXPR = new LiteralExpr(null, null, null);\nvar TYPED_NULL_EXPR = new LiteralExpr(null, INFERRED_TYPE, null);\nvar StmtModifier = {};\nStmtModifier.Final = 0;\nStmtModifier.Private = 1;\nStmtModifier.Exported = 2;\nStmtModifier[StmtModifier.Final] = \"Final\";\nStmtModifier[StmtModifier.Private] = \"Private\";\nStmtModifier[StmtModifier.Exported] = \"Exported\";\n/**\n * @abstract\n */\nvar Statement = (function () {\n    /**\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    function Statement(modifiers, sourceSpan) {\n        this.modifiers = modifiers || [];\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @abstract\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Statement.prototype.visitStatement = function (visitor, context) { };\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Statement.prototype.hasModifier = function (modifier) { return ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Statement;\n}());\nvar DeclareVarStmt = (function (_super) {\n    __extends(DeclareVarStmt, _super);\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    function DeclareVarStmt(name, value, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        _this.type = type || value.type;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitDeclareVarStmt(this, context);\n    };\n    return DeclareVarStmt;\n}(Statement));\nvar DeclareFunctionStmt = (function (_super) {\n    __extends(DeclareFunctionStmt, _super);\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?} statements\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    function DeclareFunctionStmt(name, params, statements, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.statements = statements;\n        _this.type = type || null;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitDeclareFunctionStmt(this, context);\n    };\n    return DeclareFunctionStmt;\n}(Statement));\nvar ExpressionStatement = (function (_super) {\n    __extends(ExpressionStatement, _super);\n    /**\n     * @param {?} expr\n     * @param {?=} sourceSpan\n     */\n    function ExpressionStatement(expr, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.expr = expr;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionStatement.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitExpressionStmt(this, context);\n    };\n    return ExpressionStatement;\n}(Statement));\nvar ReturnStatement = (function (_super) {\n    __extends(ReturnStatement, _super);\n    /**\n     * @param {?} value\n     * @param {?=} sourceSpan\n     */\n    function ReturnStatement(value, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReturnStatement.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitReturnStmt(this, context);\n    };\n    return ReturnStatement;\n}(Statement));\nvar AbstractClassPart = (function () {\n    /**\n     * @param {?} type\n     * @param {?} modifiers\n     */\n    function AbstractClassPart(type, modifiers) {\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n        this.type = type || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    AbstractClassPart.prototype.hasModifier = function (modifier) { return ((this.modifiers)).indexOf(modifier) !== -1; };\n    return AbstractClassPart;\n}());\nvar ClassMethod = (function (_super) {\n    __extends(ClassMethod, _super);\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?} body\n     * @param {?=} type\n     * @param {?=} modifiers\n     */\n    function ClassMethod(name, params, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.body = body;\n        return _this;\n    }\n    return ClassMethod;\n}(AbstractClassPart));\nvar ClassGetter = (function (_super) {\n    __extends(ClassGetter, _super);\n    /**\n     * @param {?} name\n     * @param {?} body\n     * @param {?=} type\n     * @param {?=} modifiers\n     */\n    function ClassGetter(name, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.body = body;\n        return _this;\n    }\n    return ClassGetter;\n}(AbstractClassPart));\nvar ClassStmt = (function (_super) {\n    __extends(ClassStmt, _super);\n    /**\n     * @param {?} name\n     * @param {?} parent\n     * @param {?} fields\n     * @param {?} getters\n     * @param {?} constructorMethod\n     * @param {?} methods\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    function ClassStmt(name, parent, fields, getters, constructorMethod, methods, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.parent = parent;\n        _this.fields = fields;\n        _this.getters = getters;\n        _this.constructorMethod = constructorMethod;\n        _this.methods = methods;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ClassStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitDeclareClassStmt(this, context);\n    };\n    return ClassStmt;\n}(Statement));\nvar IfStmt = (function (_super) {\n    __extends(IfStmt, _super);\n    /**\n     * @param {?} condition\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     */\n    function IfStmt(condition, trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = []; }\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.condition = condition;\n        _this.trueCase = trueCase;\n        _this.falseCase = falseCase;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    IfStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitIfStmt(this, context);\n    };\n    return IfStmt;\n}(Statement));\nvar TryCatchStmt = (function (_super) {\n    __extends(TryCatchStmt, _super);\n    /**\n     * @param {?} bodyStmts\n     * @param {?} catchStmts\n     * @param {?=} sourceSpan\n     */\n    function TryCatchStmt(bodyStmts, catchStmts, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.bodyStmts = bodyStmts;\n        _this.catchStmts = catchStmts;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TryCatchStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitTryCatchStmt(this, context);\n    };\n    return TryCatchStmt;\n}(Statement));\nvar ThrowStmt = (function (_super) {\n    __extends(ThrowStmt, _super);\n    /**\n     * @param {?} error\n     * @param {?=} sourceSpan\n     */\n    function ThrowStmt(error, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.error = error;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ThrowStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitThrowStmt(this, context);\n    };\n    return ThrowStmt;\n}(Statement));\nvar AstTransformer$1 = (function () {\n    function AstTransformer$1() {\n    }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.transformExpr = function (expr, context) { return expr; };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.transformStmt = function (stmt, context) { return stmt; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitReadVarExpr = function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitWriteVarExpr = function (expr, context) {\n        return this.transformExpr(new WriteVarExpr(expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitWriteKeyExpr = function (expr, context) {\n        return this.transformExpr(new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitWritePropExpr = function (expr, context) {\n        return this.transformExpr(new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitInvokeMethodExpr = function (ast, context) {\n        var /** @type {?} */ method = ast.builtin || ast.name;\n        return this.transformExpr(new InvokeMethodExpr(ast.receiver.visitExpression(this, context), /** @type {?} */ ((method)), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitInvokeFunctionExpr = function (ast, context) {\n        return this.transformExpr(new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitInstantiateExpr = function (ast, context) {\n        return this.transformExpr(new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitLiteralExpr = function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitExternalExpr = function (ast, context) {\n        return this.transformExpr(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitConditionalExpr = function (ast, context) {\n        return this.transformExpr(new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), /** @type {?} */ ((ast.falseCase)).visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitNotExpr = function (ast, context) {\n        return this.transformExpr(new NotExpr(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitAssertNotNullExpr = function (ast, context) {\n        return this.transformExpr(new AssertNotNull(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitCastExpr = function (ast, context) {\n        return this.transformExpr(new CastExpr(ast.value.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitFunctionExpr = function (ast, context) {\n        return this.transformExpr(new FunctionExpr(ast.params, this.visitAllStatements(ast.statements, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitBinaryOperatorExpr = function (ast, context) {\n        return this.transformExpr(new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitReadPropExpr = function (ast, context) {\n        return this.transformExpr(new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitReadKeyExpr = function (ast, context) {\n        return this.transformExpr(new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitLiteralArrayExpr = function (ast, context) {\n        return this.transformExpr(new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitLiteralMapExpr = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ entries = ast.entries.map(function (entry) { return new LiteralMapEntry(entry.key, entry.value.visitExpression(_this, context), entry.quoted); });\n        var /** @type {?} */ mapType = new MapType(ast.valueType, null);\n        return this.transformExpr(new LiteralMapExpr(entries, mapType, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitCommaExpr = function (ast, context) {\n        return this.transformExpr(new CommaExpr(this.visitAllExpressions(ast.parts, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitAllExpressions = function (exprs, context) {\n        var _this = this;\n        return exprs.map(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitDeclareVarStmt = function (stmt, context) {\n        return this.transformStmt(new DeclareVarStmt(stmt.name, stmt.value.visitExpression(this, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n        return this.transformStmt(new DeclareFunctionStmt(stmt.name, stmt.params, this.visitAllStatements(stmt.statements, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitExpressionStmt = function (stmt, context) {\n        return this.transformStmt(new ExpressionStatement(stmt.expr.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitReturnStmt = function (stmt, context) {\n        return this.transformStmt(new ReturnStatement(stmt.value.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitDeclareClassStmt = function (stmt, context) {\n        var _this = this;\n        var /** @type {?} */ parent = ((stmt.parent)).visitExpression(this, context);\n        var /** @type {?} */ getters = stmt.getters.map(function (getter) { return new ClassGetter(getter.name, _this.visitAllStatements(getter.body, context), getter.type, getter.modifiers); });\n        var /** @type {?} */ ctorMethod = stmt.constructorMethod &&\n            new ClassMethod(stmt.constructorMethod.name, stmt.constructorMethod.params, this.visitAllStatements(stmt.constructorMethod.body, context), stmt.constructorMethod.type, stmt.constructorMethod.modifiers);\n        var /** @type {?} */ methods = stmt.methods.map(function (method) { return new ClassMethod(method.name, method.params, _this.visitAllStatements(method.body, context), method.type, method.modifiers); });\n        return this.transformStmt(new ClassStmt(stmt.name, parent, stmt.fields, getters, ctorMethod, methods, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitIfStmt = function (stmt, context) {\n        return this.transformStmt(new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitTryCatchStmt = function (stmt, context) {\n        return this.transformStmt(new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitThrowStmt = function (stmt, context) {\n        return this.transformStmt(new ThrowStmt(stmt.error.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitCommentStmt = function (stmt, context) {\n        return this.transformStmt(stmt, context);\n    };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitAllStatements = function (stmts, context) {\n        var _this = this;\n        return stmts.map(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return AstTransformer$1;\n}());\nvar RecursiveAstVisitor$1 = (function () {\n    function RecursiveAstVisitor$1() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitReadVarExpr = function (ast, context) { return ast; };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitWriteVarExpr = function (expr, context) {\n        expr.value.visitExpression(this, context);\n        return expr;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitWriteKeyExpr = function (expr, context) {\n        expr.receiver.visitExpression(this, context);\n        expr.index.visitExpression(this, context);\n        expr.value.visitExpression(this, context);\n        return expr;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitWritePropExpr = function (expr, context) {\n        expr.receiver.visitExpression(this, context);\n        expr.value.visitExpression(this, context);\n        return expr;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitInvokeMethodExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitInvokeFunctionExpr = function (ast, context) {\n        ast.fn.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitInstantiateExpr = function (ast, context) {\n        ast.classExpr.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitLiteralExpr = function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitExternalExpr = function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitConditionalExpr = function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        ast.trueCase.visitExpression(this, context); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitNotExpr = function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitAssertNotNullExpr = function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitCastExpr = function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitFunctionExpr = function (ast, context) {\n        this.visitAllStatements(ast.statements, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitBinaryOperatorExpr = function (ast, context) {\n        ast.lhs.visitExpression(this, context);\n        ast.rhs.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitReadPropExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitReadKeyExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitLiteralArrayExpr = function (ast, context) {\n        this.visitAllExpressions(ast.entries, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitLiteralMapExpr = function (ast, context) {\n        var _this = this;\n        ast.entries.forEach(function (entry) { return entry.value.visitExpression(_this, context); });\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitCommaExpr = function (ast, context) {\n        this.visitAllExpressions(ast.parts, context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitAllExpressions = function (exprs, context) {\n        var _this = this;\n        exprs.forEach(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitDeclareVarStmt = function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n        this.visitAllStatements(stmt.statements, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitExpressionStmt = function (stmt, context) {\n        stmt.expr.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitReturnStmt = function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitDeclareClassStmt = function (stmt, context) {\n        var _this = this;\n        ((stmt.parent)).visitExpression(this, context);\n        stmt.getters.forEach(function (getter) { return _this.visitAllStatements(getter.body, context); });\n        if (stmt.constructorMethod) {\n            this.visitAllStatements(stmt.constructorMethod.body, context);\n        }\n        stmt.methods.forEach(function (method) { return _this.visitAllStatements(method.body, context); });\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitIfStmt = function (stmt, context) {\n        stmt.condition.visitExpression(this, context);\n        this.visitAllStatements(stmt.trueCase, context);\n        this.visitAllStatements(stmt.falseCase, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitTryCatchStmt = function (stmt, context) {\n        this.visitAllStatements(stmt.bodyStmts, context);\n        this.visitAllStatements(stmt.catchStmts, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitThrowStmt = function (stmt, context) {\n        stmt.error.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitCommentStmt = function (stmt, context) { return stmt; };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitAllStatements = function (stmts, context) {\n        var _this = this;\n        stmts.forEach(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return RecursiveAstVisitor$1;\n}());\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction findReadVarNames(stmts) {\n    var /** @type {?} */ visitor = new _ReadVarVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.varNames;\n}\nvar _ReadVarVisitor = (function (_super) {\n    __extends(_ReadVarVisitor, _super);\n    function _ReadVarVisitor() {\n        var _this = _super.apply(this, arguments) || this;\n        _this.varNames = new Set();\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n        // Don't descend into nested functions\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareClassStmt = function (stmt, context) {\n        // Don't descend into nested classes\n        return stmt;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitReadVarExpr = function (ast, context) {\n        if (ast.name) {\n            this.varNames.add(ast.name);\n        }\n        return null;\n    };\n    return _ReadVarVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmt\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToStatementIfNeeded(stmt, sourceSpan) {\n    if (!sourceSpan) {\n        return stmt;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return stmt.visitStatement(transformer, null);\n}\n/**\n * @param {?} expr\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToExpressionIfNeeded(expr, sourceSpan) {\n    if (!sourceSpan) {\n        return expr;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return expr.visitExpression(transformer, null);\n}\nvar _ApplySourceSpanTransformer = (function (_super) {\n    __extends(_ApplySourceSpanTransformer, _super);\n    /**\n     * @param {?} sourceSpan\n     */\n    function _ApplySourceSpanTransformer(sourceSpan) {\n        var _this = _super.call(this) || this;\n        _this.sourceSpan = sourceSpan;\n        return _this;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype._clone = function (obj) {\n        var /** @type {?} */ clone = Object.create(obj.constructor.prototype);\n        for (var /** @type {?} */ prop in obj) {\n            clone[prop] = obj[prop];\n        }\n        return clone;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformExpr = function (expr, context) {\n        if (!expr.sourceSpan) {\n            expr = this._clone(expr);\n            expr.sourceSpan = this.sourceSpan;\n        }\n        return expr;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformStmt = function (stmt, context) {\n        if (!stmt.sourceSpan) {\n            stmt = this._clone(stmt);\n            stmt.sourceSpan = this.sourceSpan;\n        }\n        return stmt;\n    };\n    return _ApplySourceSpanTransformer;\n}(AstTransformer$1));\n/**\n * @param {?} name\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction variable(name, type, sourceSpan) {\n    return new ReadVarExpr(name, type, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction importExpr(id, typeParams, sourceSpan) {\n    if (typeParams === void 0) { typeParams = null; }\n    return new ExternalExpr(id, null, typeParams, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction importType(id, typeParams, typeModifiers) {\n    if (typeParams === void 0) { typeParams = null; }\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return id != null ? expressionType(importExpr(id, typeParams, null), typeModifiers) : null;\n}\n/**\n * @param {?} expr\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction expressionType(expr, typeModifiers) {\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return expr != null ? ((new ExpressionType(expr, typeModifiers))) : null;\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literalArr(values, type, sourceSpan) {\n    return new LiteralArrayExpr(values, type, sourceSpan);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @param {?=} quoted\n * @return {?}\n */\nfunction literalMap(values, type, quoted) {\n    if (type === void 0) { type = null; }\n    if (quoted === void 0) { quoted = false; }\n    return new LiteralMapExpr(values.map(function (entry) { return new LiteralMapEntry(entry[0], entry[1], quoted); }), type, null);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction not(expr, sourceSpan) {\n    return new NotExpr(expr, sourceSpan);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction assertNotNull(expr, sourceSpan) {\n    return new AssertNotNull(expr, sourceSpan);\n}\n/**\n * @param {?} params\n * @param {?} body\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction fn(params, body, type, sourceSpan) {\n    return new FunctionExpr(params, body, type, sourceSpan);\n}\n/**\n * @param {?} value\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literal(value, type, sourceSpan) {\n    return new LiteralExpr(value, type, sourceSpan);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUOTED_KEYS = '$quoted$';\n/**\n * @param {?} ctx\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nfunction convertValueToOutputAst(ctx, value, type) {\n    if (type === void 0) { type = null; }\n    return visitValue(value, new _ValueOutputAstTransformer(ctx), type);\n}\nvar _ValueOutputAstTransformer = (function () {\n    /**\n     * @param {?} ctx\n     */\n    function _ValueOutputAstTransformer(ctx) {\n        this.ctx = ctx;\n    }\n    /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitArray = function (arr, type) {\n        var _this = this;\n        return literalArr(arr.map(function (value) { return visitValue(value, _this, null); }), type);\n    };\n    /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitStringMap = function (map, type) {\n        var _this = this;\n        var /** @type {?} */ entries = [];\n        var /** @type {?} */ quotedSet = new Set(map && map[QUOTED_KEYS]);\n        Object.keys(map).forEach(function (key) {\n            entries.push(new LiteralMapEntry(key, visitValue(map[key], _this, null), quotedSet.has(key)));\n        });\n        return new LiteralMapExpr(entries, type);\n    };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitPrimitive = function (value, type) { return literal(value, type); };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitOther = function (value, type) {\n        if (value instanceof Expression) {\n            return value;\n        }\n        else {\n            return this.ctx.importExpr(value);\n        }\n    };\n    return _ValueOutputAstTransformer;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} ctx\n * @param {?} providerAst\n * @return {?}\n */\nfunction providerDef(ctx, providerAst) {\n    var /** @type {?} */ flags = 0;\n    if (!providerAst.eager) {\n        flags |= 4096 /* LazyProvider */;\n    }\n    if (providerAst.providerType === ProviderAstType.PrivateService) {\n        flags |= 8192 /* PrivateProvider */;\n    }\n    providerAst.lifecycleHooks.forEach(function (lifecycleHook) {\n        // for regular providers, we only support ngOnDestroy\n        if (lifecycleHook === LifecycleHooks.OnDestroy ||\n            providerAst.providerType === ProviderAstType.Directive ||\n            providerAst.providerType === ProviderAstType.Component) {\n            flags |= lifecycleHookToNodeFlag(lifecycleHook);\n        }\n    });\n    var _a = providerAst.multiProvider ?\n        multiProviderDef(ctx, flags, providerAst.providers) :\n        singleProviderDef(ctx, flags, providerAst.providerType, providerAst.providers[0]), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return {\n        providerExpr: providerExpr,\n        flags: providerFlags, depsExpr: depsExpr,\n        tokenExpr: tokenExpr(ctx, providerAst.token),\n    };\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providers\n * @return {?}\n */\nfunction multiProviderDef(ctx, flags, providers) {\n    var /** @type {?} */ allDepDefs = [];\n    var /** @type {?} */ allParams = [];\n    var /** @type {?} */ exprs = providers.map(function (provider, providerIndex) {\n        var /** @type {?} */ expr;\n        if (provider.useClass) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useClass.diDeps);\n            expr = ctx.importExpr(provider.useClass.reference).instantiate(depExprs);\n        }\n        else if (provider.useFactory) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useFactory.diDeps);\n            expr = ctx.importExpr(provider.useFactory.reference).callFn(depExprs);\n        }\n        else if (provider.useExisting) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, [{ token: provider.useExisting }]);\n            expr = depExprs[0];\n        }\n        else {\n            expr = convertValueToOutputAst(ctx, provider.useValue);\n        }\n        return expr;\n    });\n    var /** @type {?} */ providerExpr = fn(allParams, [new ReturnStatement(literalArr(exprs))], INFERRED_TYPE);\n    return {\n        providerExpr: providerExpr,\n        flags: flags | 1024 /* TypeFactoryProvider */,\n        depsExpr: literalArr(allDepDefs)\n    };\n    /**\n     * @param {?} providerIndex\n     * @param {?} deps\n     * @return {?}\n     */\n    function convertDeps(providerIndex, deps) {\n        return deps.map(function (dep, depIndex) {\n            var /** @type {?} */ paramName = \"p\" + providerIndex + \"_\" + depIndex;\n            allParams.push(new FnParam(paramName, DYNAMIC_TYPE));\n            allDepDefs.push(depDef(ctx, dep));\n            return variable(paramName);\n        });\n    }\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providerType\n * @param {?} providerMeta\n * @return {?}\n */\nfunction singleProviderDef(ctx, flags, providerType, providerMeta) {\n    var /** @type {?} */ providerExpr;\n    var /** @type {?} */ deps;\n    if (providerType === ProviderAstType.Directive || providerType === ProviderAstType.Component) {\n        providerExpr = ctx.importExpr(/** @type {?} */ ((providerMeta.useClass)).reference);\n        flags |= 16384 /* TypeDirective */;\n        deps = providerMeta.deps || ((providerMeta.useClass)).diDeps;\n    }\n    else {\n        if (providerMeta.useClass) {\n            providerExpr = ctx.importExpr(providerMeta.useClass.reference);\n            flags |= 512 /* TypeClassProvider */;\n            deps = providerMeta.deps || providerMeta.useClass.diDeps;\n        }\n        else if (providerMeta.useFactory) {\n            providerExpr = ctx.importExpr(providerMeta.useFactory.reference);\n            flags |= 1024 /* TypeFactoryProvider */;\n            deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n        }\n        else if (providerMeta.useExisting) {\n            providerExpr = NULL_EXPR;\n            flags |= 2048 /* TypeUseExistingProvider */;\n            deps = [{ token: providerMeta.useExisting }];\n        }\n        else {\n            providerExpr = convertValueToOutputAst(ctx, providerMeta.useValue);\n            flags |= 256 /* TypeValueProvider */;\n            deps = [];\n        }\n    }\n    var /** @type {?} */ depsExpr = literalArr(deps.map(function (dep) { return depDef(ctx, dep); }));\n    return { providerExpr: providerExpr, flags: flags, depsExpr: depsExpr };\n}\n/**\n * @param {?} ctx\n * @param {?} tokenMeta\n * @return {?}\n */\nfunction tokenExpr(ctx, tokenMeta) {\n    return tokenMeta.identifier ? ctx.importExpr(tokenMeta.identifier.reference) :\n        literal(tokenMeta.value);\n}\n/**\n * @param {?} ctx\n * @param {?} dep\n * @return {?}\n */\nfunction depDef(ctx, dep) {\n    // Note: the following fields have already been normalized out by provider_analyzer:\n    // - isAttribute, isSelf, isHost\n    var /** @type {?} */ expr = dep.isValue ? convertValueToOutputAst(ctx, dep.value) : tokenExpr(ctx, /** @type {?} */ ((dep.token)));\n    var /** @type {?} */ flags = 0;\n    if (dep.isSkipSelf) {\n        flags |= 1 /* SkipSelf */;\n    }\n    if (dep.isOptional) {\n        flags |= 2 /* Optional */;\n    }\n    if (dep.isValue) {\n        flags |= 8 /* Value */;\n    }\n    return flags === 0 /* None */ ? expr : literalArr([literal(flags), expr]);\n}\n/**\n * @param {?} lifecycleHook\n * @return {?}\n */\nfunction lifecycleHookToNodeFlag(lifecycleHook) {\n    var /** @type {?} */ nodeFlag = 0;\n    switch (lifecycleHook) {\n        case LifecycleHooks.AfterContentChecked:\n            nodeFlag = 2097152 /* AfterContentChecked */;\n            break;\n        case LifecycleHooks.AfterContentInit:\n            nodeFlag = 1048576 /* AfterContentInit */;\n            break;\n        case LifecycleHooks.AfterViewChecked:\n            nodeFlag = 8388608 /* AfterViewChecked */;\n            break;\n        case LifecycleHooks.AfterViewInit:\n            nodeFlag = 4194304 /* AfterViewInit */;\n            break;\n        case LifecycleHooks.DoCheck:\n            nodeFlag = 262144 /* DoCheck */;\n            break;\n        case LifecycleHooks.OnChanges:\n            nodeFlag = 524288 /* OnChanges */;\n            break;\n        case LifecycleHooks.OnDestroy:\n            nodeFlag = 131072 /* OnDestroy */;\n            break;\n        case LifecycleHooks.OnInit:\n            nodeFlag = 65536 /* OnInit */;\n            break;\n    }\n    return nodeFlag;\n}\n/**\n * @param {?} reflector\n * @param {?} ctx\n * @param {?} flags\n * @param {?} entryComponents\n * @return {?}\n */\nfunction componentFactoryResolverProviderDef(reflector, ctx, flags, entryComponents) {\n    var /** @type {?} */ entryComponentFactories = entryComponents.map(function (entryComponent) { return ctx.importExpr(entryComponent.componentFactory); });\n    var /** @type {?} */ token = createTokenForExternalReference(reflector, Identifiers.ComponentFactoryResolver);\n    var /** @type {?} */ classMeta = {\n        diDeps: [\n            { isValue: true, value: literalArr(entryComponentFactories) },\n            { token: token, isSkipSelf: true, isOptional: true },\n            { token: createTokenForExternalReference(reflector, Identifiers.NgModuleRef) },\n        ],\n        lifecycleHooks: [],\n        reference: reflector.resolveExternalReference(Identifiers.CodegenComponentFactoryResolver)\n    };\n    var _a = singleProviderDef(ctx, flags, ProviderAstType.PrivateService, {\n        token: token,\n        multi: false,\n        useClass: classMeta,\n    }), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return { providerExpr: providerExpr, flags: providerFlags, depsExpr: depsExpr, tokenExpr: tokenExpr(ctx, token) };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NgModuleCompileResult = (function () {\n    /**\n     * @param {?} ngModuleFactoryVar\n     */\n    function NgModuleCompileResult(ngModuleFactoryVar) {\n        this.ngModuleFactoryVar = ngModuleFactoryVar;\n    }\n    return NgModuleCompileResult;\n}());\nvar LOG_VAR = variable('_l');\nvar NgModuleCompiler = (function () {\n    /**\n     * @param {?} reflector\n     */\n    function NgModuleCompiler(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.compile = function (ctx, ngModuleMeta, extraProviders) {\n        var /** @type {?} */ sourceSpan = typeSourceSpan('NgModule', ngModuleMeta.type);\n        var /** @type {?} */ entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents;\n        var /** @type {?} */ bootstrapComponents = ngModuleMeta.bootstrapComponents;\n        var /** @type {?} */ providerParser = new NgModuleProviderAnalyzer(this.reflector, ngModuleMeta, extraProviders, sourceSpan);\n        var /** @type {?} */ providerDefs = [componentFactoryResolverProviderDef(this.reflector, ctx, 0 /* None */, entryComponentFactories)]\n            .concat(providerParser.parse().map(function (provider) { return providerDef(ctx, provider); }))\n            .map(function (_a) {\n            var providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            return importExpr(Identifiers.moduleProviderDef).callFn([\n                literal(flags), tokenExpr, providerExpr, depsExpr\n            ]);\n        });\n        var /** @type {?} */ ngModuleDef = importExpr(Identifiers.moduleDef).callFn([literalArr(providerDefs)]);\n        var /** @type {?} */ ngModuleDefFactory = fn([new FnParam(/** @type {?} */ ((LOG_VAR.name)))], [new ReturnStatement(ngModuleDef)], INFERRED_TYPE);\n        var /** @type {?} */ ngModuleFactoryVar = identifierName(ngModuleMeta.type) + \"NgFactory\";\n        var /** @type {?} */ ngModuleFactoryStmt = variable(ngModuleFactoryVar)\n            .set(importExpr(Identifiers.createModuleFactory).callFn([\n            ctx.importExpr(ngModuleMeta.type.reference),\n            literalArr(bootstrapComponents.map(function (id) { return ctx.importExpr(id.reference); })),\n            ngModuleDefFactory\n        ]))\n            .toDeclStmt(importType(Identifiers.NgModuleFactory, [/** @type {?} */ ((expressionType(ctx.importExpr(ngModuleMeta.type.reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]);\n        ctx.statements.push(ngModuleFactoryStmt);\n        if (ngModuleMeta.id) {\n            var /** @type {?} */ registerFactoryStmt = importExpr(Identifiers.RegisterModuleFactoryFn)\n                .callFn([literal(ngModuleMeta.id), variable(ngModuleFactoryVar)])\n                .toStmt();\n            ctx.statements.push(registerFactoryStmt);\n        }\n        return new NgModuleCompileResult(ngModuleFactoryVar);\n    };\n    return NgModuleCompiler;\n}());\nNgModuleCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nNgModuleCompiler.ctorParameters = function () { return [\n    { type: CompileReflector, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\nvar VERSION$1 = 3;\nvar JS_B64_PREFIX = '# sourceMappingURL=data:application/json;base64,';\nvar SourceMapGenerator = (function () {\n    /**\n     * @param {?=} file\n     */\n    function SourceMapGenerator(file) {\n        if (file === void 0) { file = null; }\n        this.file = file;\n        this.sourcesContent = new Map();\n        this.lines = [];\n        this.lastCol0 = 0;\n        this.hasMappings = false;\n    }\n    /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addSource = function (url, content) {\n        if (content === void 0) { content = null; }\n        if (!this.sourcesContent.has(url)) {\n            this.sourcesContent.set(url, content);\n        }\n        return this;\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addLine = function () {\n        this.lines.push([]);\n        this.lastCol0 = 0;\n        return this;\n    };\n    /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addMapping = function (col0, sourceUrl, sourceLine0, sourceCol0) {\n        if (!this.currentLine) {\n            throw new Error(\"A line must be added before mappings can be added\");\n        }\n        if (sourceUrl != null && !this.sourcesContent.has(sourceUrl)) {\n            throw new Error(\"Unknown source file \\\"\" + sourceUrl + \"\\\"\");\n        }\n        if (col0 == null) {\n            throw new Error(\"The column in the generated code must be provided\");\n        }\n        if (col0 < this.lastCol0) {\n            throw new Error(\"Mapping should be added in output order\");\n        }\n        if (sourceUrl && (sourceLine0 == null || sourceCol0 == null)) {\n            throw new Error(\"The source location must be provided when a source url is provided\");\n        }\n        this.hasMappings = true;\n        this.lastCol0 = col0;\n        this.currentLine.push({ col0: col0, sourceUrl: sourceUrl, sourceLine0: sourceLine0, sourceCol0: sourceCol0 });\n        return this;\n    };\n    Object.defineProperty(SourceMapGenerator.prototype, \"currentLine\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.lines.slice(-1)[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJSON = function () {\n        var _this = this;\n        if (!this.hasMappings) {\n            return null;\n        }\n        var /** @type {?} */ sourcesIndex = new Map();\n        var /** @type {?} */ sources = [];\n        var /** @type {?} */ sourcesContent = [];\n        Array.from(this.sourcesContent.keys()).forEach(function (url, i) {\n            sourcesIndex.set(url, i);\n            sources.push(url);\n            sourcesContent.push(_this.sourcesContent.get(url) || null);\n        });\n        var /** @type {?} */ mappings = '';\n        var /** @type {?} */ lastCol0 = 0;\n        var /** @type {?} */ lastSourceIndex = 0;\n        var /** @type {?} */ lastSourceLine0 = 0;\n        var /** @type {?} */ lastSourceCol0 = 0;\n        this.lines.forEach(function (segments) {\n            lastCol0 = 0;\n            mappings += segments\n                .map(function (segment) {\n                // zero-based starting column of the line in the generated code\n                var /** @type {?} */ segAsStr = toBase64VLQ(segment.col0 - lastCol0);\n                lastCol0 = segment.col0;\n                if (segment.sourceUrl != null) {\n                    // zero-based index into the âsourcesâ list\n                    segAsStr +=\n                        toBase64VLQ(/** @type {?} */ ((sourcesIndex.get(segment.sourceUrl))) - lastSourceIndex);\n                    lastSourceIndex = ((sourcesIndex.get(segment.sourceUrl)));\n                    // the zero-based starting line in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceLine0)) - lastSourceLine0);\n                    lastSourceLine0 = ((segment.sourceLine0));\n                    // the zero-based starting column in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceCol0)) - lastSourceCol0);\n                    lastSourceCol0 = ((segment.sourceCol0));\n                }\n                return segAsStr;\n            })\n                .join(',');\n            mappings += ';';\n        });\n        mappings = mappings.slice(0, -1);\n        return {\n            'file': this.file || '',\n            'version': VERSION$1,\n            'sourceRoot': '',\n            'sources': sources,\n            'sourcesContent': sourcesContent,\n            'mappings': mappings,\n        };\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJsComment = function () {\n        return this.hasMappings ? '//' + JS_B64_PREFIX + toBase64String(JSON.stringify(this, null, 0)) :\n            '';\n    };\n    return SourceMapGenerator;\n}());\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64String(value) {\n    var /** @type {?} */ b64 = '';\n    value = utf8Encode(value);\n    for (var /** @type {?} */ i = 0; i < value.length;) {\n        var /** @type {?} */ i1 = value.charCodeAt(i++);\n        var /** @type {?} */ i2 = value.charCodeAt(i++);\n        var /** @type {?} */ i3 = value.charCodeAt(i++);\n        b64 += toBase64Digit(i1 >> 2);\n        b64 += toBase64Digit(((i1 & 3) << 4) | (isNaN(i2) ? 0 : i2 >> 4));\n        b64 += isNaN(i2) ? '=' : toBase64Digit(((i2 & 15) << 2) | (i3 >> 6));\n        b64 += isNaN(i2) || isNaN(i3) ? '=' : toBase64Digit(i3 & 63);\n    }\n    return b64;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64VLQ(value) {\n    value = value < 0 ? ((-value) << 1) + 1 : value << 1;\n    var /** @type {?} */ out = '';\n    do {\n        var /** @type {?} */ digit = value & 31;\n        value = value >> 5;\n        if (value > 0) {\n            digit = digit | 32;\n        }\n        out += toBase64Digit(digit);\n    } while (value > 0);\n    return out;\n}\nvar B64_DIGITS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64Digit(value) {\n    if (value < 0 || value >= 64) {\n        throw new Error(\"Can only encode value in the range [0, 63]\");\n    }\n    return B64_DIGITS[value];\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\nvar _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\nvar _INDENT_WITH = '  ';\nvar CATCH_ERROR_VAR$1 = variable('error', null, null);\nvar CATCH_STACK_VAR$1 = variable('stack', null, null);\n/**\n * @abstract\n */\nvar _EmittedLine = (function () {\n    /**\n     * @param {?} indent\n     */\n    function _EmittedLine(indent) {\n        this.indent = indent;\n        this.partsLength = 0;\n        this.parts = [];\n        this.srcSpans = [];\n    }\n    return _EmittedLine;\n}());\nvar EmitterVisitorContext = (function () {\n    /**\n     * @param {?} _indent\n     */\n    function EmitterVisitorContext(_indent) {\n        this._indent = _indent;\n        this._classes = [];\n        this._lines = [new _EmittedLine(_indent)];\n    }\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.createRoot = function () { return new EmitterVisitorContext(0); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"_currentLine\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._lines[this._lines.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.println = function (from, lastPart) {\n        if (lastPart === void 0) { lastPart = ''; }\n        this.print(from || null, lastPart, true);\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineIsEmpty = function () { return this._currentLine.parts.length === 0; };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineLength = function () {\n        return this._currentLine.indent * _INDENT_WITH.length + this._currentLine.partsLength;\n    };\n    /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.print = function (from, part, newLine) {\n        if (newLine === void 0) { newLine = false; }\n        if (part.length > 0) {\n            this._currentLine.parts.push(part);\n            this._currentLine.partsLength += part.length;\n            this._currentLine.srcSpans.push(from && from.sourceSpan || null);\n        }\n        if (newLine) {\n            this._lines.push(new _EmittedLine(this._indent));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.removeEmptyLastLine = function () {\n        if (this.lineIsEmpty()) {\n            this._lines.pop();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.incIndent = function () {\n        this._indent++;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.decIndent = function () {\n        this._indent--;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.pushClass = function (clazz) { this._classes.push(clazz); };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.popClass = function () { return ((this._classes.pop())); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"currentClass\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSource = function () {\n        return this.sourceLines\n            .map(function (l) { return l.parts.length > 0 ? _createIndent(l.indent) + l.parts.join('') : ''; })\n            .join('\\n');\n    };\n    /**\n     * @param {?} sourceFilePath\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSourceMapGenerator = function (sourceFilePath, genFilePath, startsAtLine) {\n        if (startsAtLine === void 0) { startsAtLine = 0; }\n        var /** @type {?} */ map = new SourceMapGenerator(genFilePath);\n        var /** @type {?} */ firstOffsetMapped = false;\n        var /** @type {?} */ mapFirstOffsetIfNeeded = function () {\n            if (!firstOffsetMapped) {\n                // Add a single space so that tools won't try to load the file from disk.\n                // Note: We are using virtual urls like `ng:///`, so we have to\n                // provide a content here.\n                map.addSource(sourceFilePath, ' ').addMapping(0, sourceFilePath, 0, 0);\n                firstOffsetMapped = true;\n            }\n        };\n        for (var /** @type {?} */ i = 0; i < startsAtLine; i++) {\n            map.addLine();\n            mapFirstOffsetIfNeeded();\n        }\n        this.sourceLines.forEach(function (line, lineIdx) {\n            map.addLine();\n            var /** @type {?} */ spans = line.srcSpans;\n            var /** @type {?} */ parts = line.parts;\n            var /** @type {?} */ col0 = line.indent * _INDENT_WITH.length;\n            var /** @type {?} */ spanIdx = 0;\n            // skip leading parts without source spans\n            while (spanIdx < spans.length && !spans[spanIdx]) {\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n            }\n            if (spanIdx < spans.length && lineIdx === 0 && col0 === 0) {\n                firstOffsetMapped = true;\n            }\n            else {\n                mapFirstOffsetIfNeeded();\n            }\n            while (spanIdx < spans.length) {\n                var /** @type {?} */ span = ((spans[spanIdx]));\n                var /** @type {?} */ source = span.start.file;\n                var /** @type {?} */ sourceLine = span.start.line;\n                var /** @type {?} */ sourceCol = span.start.col;\n                map.addSource(source.url, source.content)\n                    .addMapping(col0, source.url, sourceLine, sourceCol);\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n                // assign parts without span or the same span to the previous segment\n                while (spanIdx < spans.length && (span === spans[spanIdx] || !spans[spanIdx])) {\n                    col0 += parts[spanIdx].length;\n                    spanIdx++;\n                }\n            }\n        });\n        return map;\n    };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"sourceLines\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (this._lines.length && this._lines[this._lines.length - 1].parts.length === 0) {\n                return this._lines.slice(0, -1);\n            }\n            return this._lines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EmitterVisitorContext;\n}());\n/**\n * @abstract\n */\nvar AbstractEmitterVisitor = (function () {\n    /**\n     * @param {?} _escapeDollarInStrings\n     */\n    function AbstractEmitterVisitor(_escapeDollarInStrings) {\n        this._escapeDollarInStrings = _escapeDollarInStrings;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitExpressionStmt = function (stmt, ctx) {\n        stmt.expr.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReturnStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"return \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCastExpr = function (ast, context) { };\n    /**\n     * @abstract\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) { };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitIfStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"if (\");\n        stmt.condition.visitExpression(this, ctx);\n        ctx.print(stmt, \") {\");\n        var /** @type {?} */ hasElseCase = stmt.falseCase != null && stmt.falseCase.length > 0;\n        if (stmt.trueCase.length <= 1 && !hasElseCase) {\n            ctx.print(stmt, \" \");\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.removeEmptyLastLine();\n            ctx.print(stmt, \" \");\n        }\n        else {\n            ctx.println();\n            ctx.incIndent();\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.decIndent();\n            if (hasElseCase) {\n                ctx.println(stmt, \"} else {\");\n                ctx.incIndent();\n                this.visitAllStatements(stmt.falseCase, ctx);\n                ctx.decIndent();\n            }\n        }\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) { };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitThrowStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"throw \");\n        stmt.error.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommentStmt = function (stmt, ctx) {\n        var /** @type {?} */ lines = stmt.comment.split('\\n');\n        lines.forEach(function (line) { ctx.println(stmt, \"// \" + line); });\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) { };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteVarExpr = function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        ctx.print(expr, expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteKeyExpr = function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \"[\");\n        expr.index.visitExpression(this, ctx);\n        ctx.print(expr, \"] = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWritePropExpr = function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \".\" + expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeMethodExpr = function (expr, ctx) {\n        expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ name = expr.name;\n        if (expr.builtin != null) {\n            name = this.getBuiltinMethodName(expr.builtin);\n            if (name == null) {\n                // some builtins just mean to skip the call.\n                return null;\n            }\n        }\n        ctx.print(expr, \".\" + name + \"(\");\n        this.visitAllExpressions(expr.args, ctx, \",\");\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} method\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.getBuiltinMethodName = function (method) { };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {\n        expr.fn.visitExpression(this, ctx);\n        ctx.print(expr, \"(\");\n        this.visitAllExpressions(expr.args, ctx, ',');\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {\n        var /** @type {?} */ varName = ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    varName = 'super';\n                    break;\n                case BuiltinVar.This:\n                    varName = 'this';\n                    break;\n                case BuiltinVar.CatchError:\n                    varName = ((CATCH_ERROR_VAR$1.name));\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = ((CATCH_STACK_VAR$1.name));\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        ctx.print(ast, varName);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInstantiateExpr = function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        ast.classExpr.visitExpression(this, ctx);\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralExpr = function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (typeof value === 'string') {\n            ctx.print(ast, escapeIdentifier(value, this._escapeDollarInStrings));\n        }\n        else {\n            ctx.print(ast, \"\" + value);\n        }\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) { };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitConditionalExpr = function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        ast.condition.visitExpression(this, ctx);\n        ctx.print(ast, '? ');\n        ast.trueCase.visitExpression(this, ctx);\n        ctx.print(ast, ': '); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitNotExpr = function (ast, ctx) {\n        ctx.print(ast, '!');\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAssertNotNullExpr = function (ast, ctx) {\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) { };\n    /**\n     * @abstract\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr = function (ast, ctx) {\n        var /** @type {?} */ opStr;\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                opStr = '==';\n                break;\n            case BinaryOperator.Identical:\n                opStr = '===';\n                break;\n            case BinaryOperator.NotEquals:\n                opStr = '!=';\n                break;\n            case BinaryOperator.NotIdentical:\n                opStr = '!==';\n                break;\n            case BinaryOperator.And:\n                opStr = '&&';\n                break;\n            case BinaryOperator.Or:\n                opStr = '||';\n                break;\n            case BinaryOperator.Plus:\n                opStr = '+';\n                break;\n            case BinaryOperator.Minus:\n                opStr = '-';\n                break;\n            case BinaryOperator.Divide:\n                opStr = '/';\n                break;\n            case BinaryOperator.Multiply:\n                opStr = '*';\n                break;\n            case BinaryOperator.Modulo:\n                opStr = '%';\n                break;\n            case BinaryOperator.Lower:\n                opStr = '<';\n                break;\n            case BinaryOperator.LowerEquals:\n                opStr = '<=';\n                break;\n            case BinaryOperator.Bigger:\n                opStr = '>';\n                break;\n            case BinaryOperator.BiggerEquals:\n                opStr = '>=';\n                break;\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n        ctx.print(ast, \"(\");\n        ast.lhs.visitExpression(this, ctx);\n        ctx.print(ast, \" \" + opStr + \" \");\n        ast.rhs.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadPropExpr = function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \".\");\n        ctx.print(ast, ast.name);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadKeyExpr = function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \"[\");\n        ast.index.visitExpression(this, ctx);\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n        ctx.print(ast, \"[\");\n        this.visitAllExpressions(ast.entries, ctx, ',');\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralMapExpr = function (ast, ctx) {\n        var _this = this;\n        ctx.print(ast, \"{\");\n        this.visitAllObjects(function (entry) {\n            ctx.print(ast, escapeIdentifier(entry.key, _this._escapeDollarInStrings, entry.quoted) + \":\");\n            entry.value.visitExpression(_this, ctx);\n        }, ast.entries, ctx, ',');\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommaExpr = function (ast, ctx) {\n        ctx.print(ast, '(');\n        this.visitAllExpressions(ast.parts, ctx, ',');\n        ctx.print(ast, ')');\n        return null;\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllExpressions = function (expressions, ctx, separator) {\n        var _this = this;\n        this.visitAllObjects(function (expr) { return expr.visitExpression(_this, ctx); }, expressions, ctx, separator);\n    };\n    /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllObjects = function (handler, expressions, ctx, separator) {\n        var /** @type {?} */ incrementedIndent = false;\n        for (var /** @type {?} */ i = 0; i < expressions.length; i++) {\n            if (i > 0) {\n                if (ctx.lineLength() > 80) {\n                    ctx.print(null, separator, true);\n                    if (!incrementedIndent) {\n                        // continuation are marked with double indent.\n                        ctx.incIndent();\n                        ctx.incIndent();\n                        incrementedIndent = true;\n                    }\n                }\n                else {\n                    ctx.print(null, separator, false);\n                }\n            }\n            handler(expressions[i]);\n        }\n        if (incrementedIndent) {\n            // continuation are marked with double indent.\n            ctx.decIndent();\n            ctx.decIndent();\n        }\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllStatements = function (statements, ctx) {\n        var _this = this;\n        statements.forEach(function (stmt) { return stmt.visitStatement(_this, ctx); });\n    };\n    return AbstractEmitterVisitor;\n}());\n/**\n * @param {?} input\n * @param {?} escapeDollar\n * @param {?=} alwaysQuote\n * @return {?}\n */\nfunction escapeIdentifier(input, escapeDollar, alwaysQuote) {\n    if (alwaysQuote === void 0) { alwaysQuote = true; }\n    if (input == null) {\n        return null;\n    }\n    var /** @type {?} */ body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, function () {\n        var match = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            match[_i] = arguments[_i];\n        }\n        if (match[0] == '$') {\n            return escapeDollar ? '\\\\$' : '$';\n        }\n        else if (match[0] == '\\n') {\n            return '\\\\n';\n        }\n        else if (match[0] == '\\r') {\n            return '\\\\r';\n        }\n        else {\n            return \"\\\\\" + match[0];\n        }\n    });\n    var /** @type {?} */ requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n    return requiresQuotes ? \"'\" + body + \"'\" : body;\n}\n/**\n * @param {?} count\n * @return {?}\n */\nfunction _createIndent(count) {\n    var /** @type {?} */ res = '';\n    for (var /** @type {?} */ i = 0; i < count; i++) {\n        res += _INDENT_WITH;\n    }\n    return res;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction debugOutputAstAsTypeScript(ast) {\n    var /** @type {?} */ converter = new _TsEmitterVisitor();\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    var /** @type {?} */ asts = Array.isArray(ast) ? ast : [ast];\n    asts.forEach(function (ast) {\n        if (ast instanceof Statement) {\n            ast.visitStatement(converter, ctx);\n        }\n        else if (ast instanceof Expression) {\n            ast.visitExpression(converter, ctx);\n        }\n        else if (ast instanceof Type$1) {\n            ast.visitType(converter, ctx);\n        }\n        else {\n            throw new Error(\"Don't know how to print debug info for \" + ast);\n        }\n    });\n    return ctx.toSource();\n}\nvar TypeScriptEmitter = (function () {\n    function TypeScriptEmitter() {\n    }\n    /**\n     * @param {?} srcFilePath\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatements = function (srcFilePath, genFilePath, stmts, preamble) {\n        if (preamble === void 0) { preamble = ''; }\n        var /** @type {?} */ converter = new _TsEmitterVisitor();\n        var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n        converter.visitAllStatements(stmts, ctx);\n        var /** @type {?} */ preambleLines = preamble ? preamble.split('\\n') : [];\n        converter.reexports.forEach(function (reexports, exportedModuleName) {\n            var /** @type {?} */ reexportsCode = reexports.map(function (reexport) { return reexport.name + \" as \" + reexport.as; }).join(',');\n            preambleLines.push(\"export {\" + reexportsCode + \"} from '\" + exportedModuleName + \"';\");\n        });\n        converter.importsWithPrefixes.forEach(function (prefix, importedModuleName) {\n            // Note: can't write the real word for import as it screws up system.js auto detection...\n            preambleLines.push(\"imp\" +\n                (\"ort * as \" + prefix + \" from '\" + importedModuleName + \"';\"));\n        });\n        var /** @type {?} */ sm = ctx.toSourceMapGenerator(srcFilePath, genFilePath, preambleLines.length).toJsComment();\n        var /** @type {?} */ lines = preambleLines.concat([ctx.toSource(), sm]);\n        if (sm) {\n            // always add a newline at the end, as some tools have bugs without it.\n            lines.push('');\n        }\n        return lines.join('\\n');\n    };\n    return TypeScriptEmitter;\n}());\nvar _TsEmitterVisitor = (function (_super) {\n    __extends(_TsEmitterVisitor, _super);\n    function _TsEmitterVisitor() {\n        var _this = _super.call(this, false) || this;\n        _this.typeExpression = 0;\n        _this.importsWithPrefixes = new Map();\n        _this.reexports = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitType = function (t, ctx, defaultType) {\n        if (defaultType === void 0) { defaultType = 'any'; }\n        if (t) {\n            this.typeExpression++;\n            t.visitType(this, ctx);\n            this.typeExpression--;\n        }\n        else {\n            ctx.print(null, defaultType);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralExpr = function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (value == null && ast.type != INFERRED_TYPE) {\n            ctx.print(ast, \"(\" + value + \" as any)\");\n            return null;\n        }\n        return _super.prototype.visitLiteralExpr.call(this, ast, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n        if (ast.entries.length === 0) {\n            ctx.print(ast, '(');\n        }\n        var /** @type {?} */ result = _super.prototype.visitLiteralArrayExpr.call(this, ast, ctx);\n        if (ast.entries.length === 0) {\n            ctx.print(ast, ' as any[])');\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {\n        this._visitIdentifier(ast.value, ast.typeParams, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitAssertNotNullExpr = function (ast, ctx) {\n        var /** @type {?} */ result = _super.prototype.visitAssertNotNullExpr.call(this, ast, ctx);\n        ctx.print(ast, '!');\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported) && stmt.value instanceof ExternalExpr &&\n            !stmt.type) {\n            // check for a reexport\n            var _a = stmt.value.value, name = _a.name, moduleName = _a.moduleName;\n            if (moduleName) {\n                var /** @type {?} */ reexports = this.reexports.get(moduleName);\n                if (!reexports) {\n                    reexports = [];\n                    this.reexports.set(moduleName, reexports);\n                }\n                reexports.push({ name: /** @type {?} */ ((name)), as: stmt.name });\n                return null;\n            }\n        }\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        if (stmt.hasModifier(StmtModifier.Final)) {\n            ctx.print(stmt, \"const\");\n        }\n        else {\n            ctx.print(stmt, \"var\");\n        }\n        ctx.print(stmt, \" \" + stmt.name);\n        this._printColonType(stmt.type, ctx);\n        ctx.print(stmt, \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {\n        ctx.print(ast, \"(<\"); /** @type {?} */\n        ((ast.type)).visitType(this, ctx);\n        ctx.print(ast, \">\");\n        ast.value.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitInstantiateExpr = function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        this.typeExpression++;\n        ast.classExpr.visitExpression(this, ctx);\n        this.typeExpression--;\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"class \" + stmt.name);\n        if (stmt.parent != null) {\n            ctx.print(stmt, \" extends \");\n            this.typeExpression++;\n            stmt.parent.visitExpression(this, ctx);\n            this.typeExpression--;\n        }\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        stmt.fields.forEach(function (field) { return _this._visitClassField(field, ctx); });\n        if (stmt.constructorMethod != null) {\n            this._visitClassConstructor(stmt, ctx);\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(method, ctx); });\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassField = function (field, ctx) {\n        if (field.hasModifier(StmtModifier.Private)) {\n            // comment out as a workaround for #10967\n            ctx.print(null, \"/*private*/ \");\n        }\n        ctx.print(null, field.name);\n        this._printColonType(field.type, ctx);\n        ctx.println(null, \";\");\n    };\n    /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassGetter = function (getter, ctx) {\n        if (getter.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, \"get \" + getter.name + \"()\");\n        this._printColonType(getter.type, ctx);\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(getter.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {\n        ctx.print(stmt, \"constructor(\");\n        this._visitParams(stmt.constructorMethod.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.constructorMethod.body, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassMethod = function (method, ctx) {\n        if (method.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, method.name + \"(\");\n        this._visitParams(method.params, ctx);\n        ctx.print(null, \")\");\n        this._printColonType(method.type, ctx, 'void');\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(method.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        this._visitParams(ast.params, ctx);\n        ctx.print(ast, \")\");\n        this._printColonType(ast.type, ctx, 'void');\n        ctx.println(ast, \" => {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.print(stmt, \")\");\n        this._printColonType(stmt.type, ctx, 'void');\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack', null)).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitBuiltintType = function (type, ctx) {\n        var /** @type {?} */ typeStr;\n        switch (type.name) {\n            case BuiltinTypeName.Bool:\n                typeStr = 'boolean';\n                break;\n            case BuiltinTypeName.Dynamic:\n                typeStr = 'any';\n                break;\n            case BuiltinTypeName.Function:\n                typeStr = 'Function';\n                break;\n            case BuiltinTypeName.Number:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.Int:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.String:\n                typeStr = 'string';\n                break;\n            default:\n                throw new Error(\"Unsupported builtin type \" + type.name);\n        }\n        ctx.print(null, typeStr);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExpressionType = function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitArrayType = function (type, ctx) {\n        this.visitType(type.of, ctx);\n        ctx.print(null, \"[]\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitMapType = function (type, ctx) {\n        ctx.print(null, \"{[key: string]:\");\n        this.visitType(type.valueType, ctx);\n        ctx.print(null, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitParams = function (params, ctx) {\n        var _this = this;\n        this.visitAllObjects(function (param) {\n            ctx.print(null, param.name);\n            _this._printColonType(param.type, ctx);\n        }, params, ctx, ',');\n    };\n    /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitIdentifier = function (value, typeParams, ctx) {\n        var _this = this;\n        var name = value.name, moduleName = value.moduleName;\n        if (moduleName) {\n            var /** @type {?} */ prefix = this.importsWithPrefixes.get(moduleName);\n            if (prefix == null) {\n                prefix = \"i\" + this.importsWithPrefixes.size;\n                this.importsWithPrefixes.set(moduleName, prefix);\n            }\n            ctx.print(null, prefix + \".\");\n        }\n        ctx.print(null, /** @type {?} */ ((name)));\n        if (this.typeExpression > 0) {\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedParameters = typeParams || [];\n            if (suppliedParameters.length > 0) {\n                ctx.print(null, \"<\");\n                this.visitAllObjects(function (type) { return type.visitType(_this, ctx); }, /** @type {?} */ ((typeParams)), ctx, ',');\n                ctx.print(null, \">\");\n            }\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._printColonType = function (type, ctx, defaultType) {\n        if (type !== INFERRED_TYPE) {\n            ctx.print(null, ':');\n            this.visitType(type, ctx, defaultType);\n        }\n    };\n    return _TsEmitterVisitor;\n}(AbstractEmitterVisitor));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'.\n */\nvar SECURITY_SCHEMA = {};\n/**\n * @param {?} ctx\n * @param {?} specs\n * @return {?}\n */\nfunction registerContext(ctx, specs) {\n    for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n        var spec = specs_1[_i];\n        SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n    }\n}\n// Case is insignificant below, all element and attribute names are lower-cased for lookup.\nregisterContext(_angular_core.SecurityContext.HTML, [\n    'iframe|srcdoc',\n    '*|innerHTML',\n    '*|outerHTML',\n]);\nregisterContext(_angular_core.SecurityContext.STYLE, ['*|style']);\n// NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\nregisterContext(_angular_core.SecurityContext.URL, [\n    '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n    'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n    'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n    'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n]);\nregisterContext(_angular_core.SecurityContext.RESOURCE_URL, [\n    'applet|code',\n    'applet|codebase',\n    'base|href',\n    'embed|src',\n    'frame|src',\n    'head|profile',\n    'html|manifest',\n    'iframe|src',\n    'link|href',\n    'media|src',\n    'object|codebase',\n    'object|data',\n    'script|src',\n]);\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BOOLEAN = 'boolean';\nvar NUMBER = 'number';\nvar STRING = 'string';\nvar OBJECT = 'object';\n/**\n * This array represents the DOM schema. It encodes inheritance, properties, and events.\n *\n * ## Overview\n *\n * Each line represents one kind of element. The `element_inheritance` and properties are joined\n * using `element_inheritance|properties` syntax.\n *\n * ## Element Inheritance\n *\n * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n * Here the individual elements are separated by `,` (commas). Every element in the list\n * has identical properties.\n *\n * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n * specified then `\"\"` (blank) element is assumed.\n *\n * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n * elements.\n *\n * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n *\n * ## Properties\n *\n * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n * by a special character designating its type:\n *\n * - (no prefix): property is a string.\n * - `*`: property represents an event.\n * - `!`: property is a boolean.\n * - `#`: property is a number.\n * - `%`: property is an object.\n *\n * ## Query\n *\n * The class creates an internal squas representation which allows to easily answer the query of\n * if a given property exist on a given element.\n *\n * NOTE: We don't yet support querying for types or events.\n * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n *       see dom_element_schema_registry_spec.ts\n */\n// =================================================================================================\n// =================================================================================================\n// =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========\n// =================================================================================================\n// =================================================================================================\n//\n//                       DO NOT EDIT THIS DOM SCHEMA WITHOUT A SECURITY REVIEW!\n//\n// Newly added properties must be security reviewed and assigned an appropriate SecurityContext in\n// dom_security_schema.ts. Reach out to mprobst & rjamet for details.\n//\n// =================================================================================================\nvar SCHEMA = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*beforecopy,*beforecut,*beforepaste,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*copy,*cuechange,*cut,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*message,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*paste,*pause,*play,*playing,*progress,*ratechange,*reset,*resize,*scroll,*search,*seeked,*seeking,*select,*selectstart,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*beforecopy,*beforecut,*beforepaste,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*copy,*cuechange,*cut,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*message,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*paste,*pause,*play,*playing,*progress,*ratechange,*reset,*resize,*scroll,*search,*seeked,*seeking,*select,*selectstart,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,keytype,name',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:cursor^:svg:|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n];\nvar _ATTR_TO_PROP = {\n    'class': 'className',\n    'for': 'htmlFor',\n    'formaction': 'formAction',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\nvar DomElementSchemaRegistry = (function (_super) {\n    __extends(DomElementSchemaRegistry, _super);\n    function DomElementSchemaRegistry() {\n        var _this = _super.call(this) || this;\n        _this._schema = {};\n        SCHEMA.forEach(function (encodedType) {\n            var type = {};\n            var _a = encodedType.split('|'), strType = _a[0], strProperties = _a[1];\n            var properties = strProperties.split(',');\n            var _b = strType.split('^'), typeNames = _b[0], superName = _b[1];\n            typeNames.split(',').forEach(function (tag) { return _this._schema[tag.toLowerCase()] = type; });\n            var superType = superName && _this._schema[superName.toLowerCase()];\n            if (superType) {\n                Object.keys(superType).forEach(function (prop) { type[prop] = superType[prop]; });\n            }\n            properties.forEach(function (property) {\n                if (property.length > 0) {\n                    switch (property[0]) {\n                        case '*':\n                            // We don't yet support events.\n                            // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                            // will\n                            // almost certainly introduce bad XSS vulnerabilities.\n                            // type[property.substring(1)] = EVENT;\n                            break;\n                        case '!':\n                            type[property.substring(1)] = BOOLEAN;\n                            break;\n                        case '#':\n                            type[property.substring(1)] = NUMBER;\n                            break;\n                        case '%':\n                            type[property.substring(1)] = OBJECT;\n                            break;\n                        default:\n                            type[property] = STRING;\n                    }\n                }\n            });\n        });\n        return _this;\n    }\n    /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasProperty = function (tagName, propName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === _angular_core.NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return false;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === _angular_core.CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Can't tell now as we don't know which properties a custom element will get\n                // once it is instantiated\n                return true;\n            }\n        }\n        var /** @type {?} */ elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n        return !!elementProperties[propName];\n    };\n    /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasElement = function (tagName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === _angular_core.NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return true;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === _angular_core.CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Allow any custom elements\n                return true;\n            }\n        }\n        return !!this._schema[tagName.toLowerCase()];\n    };\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.securityContext = function (tagName, propName, isAttribute) {\n        if (isAttribute) {\n            // NB: For security purposes, use the mapped property name, not the attribute name.\n            propName = this.getMappedPropName(propName);\n        }\n        // Make sure comparisons are case insensitive, so that case differences between attribute and\n        // property names do not have a security impact.\n        tagName = tagName.toLowerCase();\n        propName = propName.toLowerCase();\n        var /** @type {?} */ ctx = SECURITY_SCHEMA[tagName + '|' + propName];\n        if (ctx) {\n            return ctx;\n        }\n        ctx = SECURITY_SCHEMA['*|' + propName];\n        return ctx ? ctx : _angular_core.SecurityContext.NONE;\n    };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getMappedPropName = function (propName) { return _ATTR_TO_PROP[propName] || propName; };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getDefaultComponentElementName = function () { return 'ng-component'; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateProperty = function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateAttribute = function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.allKnownElementNames = function () { return Object.keys(this._schema); };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = function (propName) {\n        return dashCaseToCamelCase(propName);\n    };\n    /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue = function (camelCaseProp, userProvidedProp, val) {\n        var /** @type {?} */ unit = '';\n        var /** @type {?} */ strVal = val.toString().trim();\n        var /** @type {?} */ errorMsg = ((null));\n        if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n            if (typeof val === 'number') {\n                unit = 'px';\n            }\n            else {\n                var /** @type {?} */ valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errorMsg = \"Please provide a CSS unit value for \" + userProvidedProp + \":\" + val;\n                }\n            }\n        }\n        return { error: errorMsg, value: strVal + unit };\n    };\n    return DomElementSchemaRegistry;\n}(ElementSchemaRegistry));\nDomElementSchemaRegistry.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nDomElementSchemaRegistry.ctorParameters = function () { return []; };\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction _isPixelDimensionStyle(prop) {\n    switch (prop) {\n        case 'width':\n        case 'height':\n        case 'minWidth':\n        case 'minHeight':\n        case 'maxWidth':\n        case 'maxHeight':\n        case 'left':\n        case 'top':\n        case 'bottom':\n        case 'right':\n        case 'fontSize':\n        case 'outlineWidth':\n        case 'outlineOffset':\n        case 'paddingTop':\n        case 'paddingLeft':\n        case 'paddingBottom':\n        case 'paddingRight':\n        case 'marginTop':\n        case 'marginLeft':\n        case 'marginBottom':\n        case 'marginRight':\n        case 'borderRadius':\n        case 'borderWidth':\n        case 'borderTopWidth':\n        case 'borderLeftWidth':\n        case 'borderRightWidth':\n        case 'borderBottomWidth':\n        case 'textIndent':\n            return true;\n        default:\n            return false;\n    }\n}\nvar ShadowCss = (function () {\n    function ShadowCss() {\n        this.strictStyling = true;\n    }\n    /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype.shimCssText = function (cssText, selector, hostSelector) {\n        if (hostSelector === void 0) { hostSelector = ''; }\n        var /** @type {?} */ sourceMappingUrl = extractSourceMappingUrl(cssText);\n        cssText = stripComments(cssText);\n        cssText = this._insertDirectives(cssText);\n        return this._scopeCssText(cssText, selector, hostSelector) + sourceMappingUrl;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertDirectives = function (cssText) {\n        cssText = this._insertPolyfillDirectivesInCssText(cssText);\n        return this._insertPolyfillRulesInCssText(cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillDirectivesInCssText = function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentNextSelectorRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return m[2] + '{';\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillRulesInCssText = function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentRuleRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            var /** @type {?} */ rule = m[0].replace(m[1], '').replace(m[2], '');\n            return m[4] + rule;\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeCssText = function (cssText, scopeSelector, hostSelector) {\n        var /** @type {?} */ unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n        // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n        cssText = this._insertPolyfillHostInCssText(cssText);\n        cssText = this._convertColonHost(cssText);\n        cssText = this._convertColonHostContext(cssText);\n        cssText = this._convertShadowDOMSelectors(cssText);\n        if (scopeSelector) {\n            cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n        }\n        cssText = cssText + '\\n' + unscopedRules;\n        return cssText.trim();\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._extractUnscopedRulesFromCssText = function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        var /** @type {?} */ r = '';\n        var /** @type {?} */ m;\n        _cssContentUnscopedRuleRe.lastIndex = 0;\n        while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n            var /** @type {?} */ rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n            r += rule + '\\n\\n';\n        }\n        return r;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHost = function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHostContext = function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonRule = function (cssText, regExp, partReplacer) {\n        // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n        return cssText.replace(regExp, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            if (m[2]) {\n                var /** @type {?} */ parts = m[2].split(',');\n                var /** @type {?} */ r = [];\n                for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n                    var /** @type {?} */ p = parts[i].trim();\n                    if (!p)\n                        break;\n                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                }\n                return r.join(',');\n            }\n            else {\n                return _polyfillHostNoCombinator + m[3];\n            }\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostContextPartReplacer = function (host, part, suffix) {\n        if (part.indexOf(_polyfillHost) > -1) {\n            return this._colonHostPartReplacer(host, part, suffix);\n        }\n        else {\n            return host + part + suffix + ', ' + part + ' ' + host + suffix;\n        }\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostPartReplacer = function (host, part, suffix) {\n        return host + part.replace(_polyfillHost, '') + suffix;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertShadowDOMSelectors = function (cssText) {\n        return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelectors = function (cssText, scopeSelector, hostSelector) {\n        var _this = this;\n        return processRules(cssText, function (rule) {\n            var /** @type {?} */ selector = rule.selector;\n            var /** @type {?} */ content = rule.content;\n            if (rule.selector[0] != '@') {\n                selector =\n                    _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n            }\n            return new CssRule(selector, content);\n        });\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelector = function (selector, scopeSelector, hostSelector, strict) {\n        var _this = this;\n        return selector.split(',')\n            .map(function (part) { return part.trim().split(_shadowDeepSelectors); })\n            .map(function (deepParts) {\n            var shallowPart = deepParts[0], otherParts = deepParts.slice(1);\n            var /** @type {?} */ applyScope = function (shallowPart) {\n                if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                    return strict ?\n                        _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                        _this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n                }\n                else {\n                    return shallowPart;\n                }\n            };\n            return [applyScope(shallowPart)].concat(otherParts).join(' ');\n        })\n            .join(', ');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._selectorNeedsScoping = function (selector, scopeSelector) {\n        var /** @type {?} */ re = this._makeScopeMatcher(scopeSelector);\n        return !re.test(selector);\n    };\n    /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._makeScopeMatcher = function (scopeSelector) {\n        var /** @type {?} */ lre = /\\[/g;\n        var /** @type {?} */ rre = /\\]/g;\n        scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n        return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySelectorScope = function (selector, scopeSelector, hostSelector) {\n        // Difference from webcomponents.js: scopeSelector could not be an array\n        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {\n        // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n        _polyfillHostRe.lastIndex = 0;\n        if (_polyfillHostRe.test(selector)) {\n            var /** @type {?} */ replaceBy_1 = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\n            return selector\n                .replace(_polyfillHostNoCombinatorRe, function (hnc, selector) {\n                return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                    return before + replaceBy_1 + colon + after;\n                });\n            })\n                .replace(_polyfillHostRe, replaceBy_1 + ' ');\n        }\n        return scopeSelector + ' ' + selector;\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applyStrictSelectorScope = function (selector, scopeSelector, hostSelector) {\n        var _this = this;\n        var /** @type {?} */ isRe = /\\[is=([^\\]]*)\\]/g;\n        scopeSelector = scopeSelector.replace(isRe, function (_) {\n            var parts = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                parts[_i - 1] = arguments[_i];\n            }\n            return parts[0];\n        });\n        var /** @type {?} */ attrName = '[' + scopeSelector + ']';\n        var /** @type {?} */ _scopeSelectorPart = function (p) {\n            var /** @type {?} */ scopedP = p.trim();\n            if (!scopedP) {\n                return '';\n            }\n            if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n            }\n            else {\n                // remove :host since it should be unnecessary\n                var /** @type {?} */ t = p.replace(_polyfillHostRe, '');\n                if (t.length > 0) {\n                    var /** @type {?} */ matches = t.match(/([^:]*)(:*)(.*)/);\n                    if (matches) {\n                        scopedP = matches[1] + attrName + matches[2] + matches[3];\n                    }\n                }\n            }\n            return scopedP;\n        };\n        var /** @type {?} */ safeContent = new SafeSelector(selector);\n        selector = safeContent.content();\n        var /** @type {?} */ scopedSelector = '';\n        var /** @type {?} */ startIndex = 0;\n        var /** @type {?} */ res;\n        var /** @type {?} */ sep = /( |>|\\+|~(?!=))\\s*/g;\n        var /** @type {?} */ scopeAfter = selector.indexOf(_polyfillHostNoCombinator);\n        while ((res = sep.exec(selector)) !== null) {\n            var /** @type {?} */ separator = res[1];\n            var /** @type {?} */ part = selector.slice(startIndex, res.index).trim();\n            // if a selector appears before :host-context it should not be shimmed as it\n            // matches on ancestor elements and not on elements in the host's shadow\n            var /** @type {?} */ scopedPart = startIndex >= scopeAfter ? _scopeSelectorPart(part) : part;\n            scopedSelector += scopedPart + \" \" + separator + \" \";\n            startIndex = sep.lastIndex;\n        }\n        scopedSelector += _scopeSelectorPart(selector.substring(startIndex));\n        // replace the placeholders with their original values\n        return safeContent.restore(scopedSelector);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillHostInCssText = function (selector) {\n        return selector.replace(_colonHostContextRe, _polyfillHostContext)\n            .replace(_colonHostRe, _polyfillHost);\n    };\n    return ShadowCss;\n}());\nvar SafeSelector = (function () {\n    /**\n     * @param {?} selector\n     */\n    function SafeSelector(selector) {\n        var _this = this;\n        this.placeholders = [];\n        this.index = 0;\n        // Replaces attribute selectors with placeholders.\n        // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n        selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n            var replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(keep);\n            _this.index++;\n            return replaceBy;\n        });\n        // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n        // WS and \"+\" would otherwise be interpreted as selector separators.\n        this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n            var replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(exp);\n            _this.index++;\n            return pseudo + replaceBy;\n        });\n    }\n    \n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    SafeSelector.prototype.restore = function (content) {\n        var _this = this;\n        return content.replace(/__ph-(\\d+)__/g, function (ph, index) { return _this.placeholders[+index]; });\n    };\n    /**\n     * @return {?}\n     */\n    SafeSelector.prototype.content = function () { return this._content; };\n    return SafeSelector;\n}());\nvar _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\nvar _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _polyfillHost = '-shadowcsshost';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g,\n    // Deprecated selectors\n    /\\/shadow-deep\\//g,\n    /\\/shadow\\//g,\n];\nvar _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)/g;\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stripComments(input) {\n    return input.replace(_commentRe, '');\n}\n// all comments except inline source mapping\nvar _sourceMappingUrlRe = /\\/\\*\\s*#\\s*sourceMappingURL=[\\s\\S]+?\\*\\//;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction extractSourceMappingUrl(input) {\n    var /** @type {?} */ matcher = input.match(_sourceMappingUrlRe);\n    return matcher ? matcher[0] : '';\n}\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar CssRule = (function () {\n    /**\n     * @param {?} selector\n     * @param {?} content\n     */\n    function CssRule(selector, content) {\n        this.selector = selector;\n        this.content = content;\n    }\n    return CssRule;\n}());\n/**\n * @param {?} input\n * @param {?} ruleCallback\n * @return {?}\n */\nfunction processRules(input, ruleCallback) {\n    var /** @type {?} */ inputWithEscapedBlocks = escapeBlocks(input);\n    var /** @type {?} */ nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ selector = m[2];\n        var /** @type {?} */ content = '';\n        var /** @type {?} */ suffix = m[4];\n        var /** @type {?} */ contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var /** @type {?} */ rule = ruleCallback(new CssRule(selector, content));\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n}\nvar StringWithEscapedBlocks = (function () {\n    /**\n     * @param {?} escapedString\n     * @param {?} blocks\n     */\n    function StringWithEscapedBlocks(escapedString, blocks) {\n        this.escapedString = escapedString;\n        this.blocks = blocks;\n    }\n    return StringWithEscapedBlocks;\n}());\n/**\n * @param {?} input\n * @return {?}\n */\nfunction escapeBlocks(input) {\n    var /** @type {?} */ inputParts = input.split(_curlyRe);\n    var /** @type {?} */ resultParts = [];\n    var /** @type {?} */ escapedBlocks = [];\n    var /** @type {?} */ bracketCount = 0;\n    var /** @type {?} */ currentBlockParts = [];\n    for (var /** @type {?} */ partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var /** @type {?} */ part = inputParts[partIndex];\n        if (part == CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part == OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\nvar CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\nvar StylesCompileDependency = (function () {\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} setValue\n     */\n    function StylesCompileDependency(name, moduleUrl, setValue) {\n        this.name = name;\n        this.moduleUrl = moduleUrl;\n        this.setValue = setValue;\n    }\n    return StylesCompileDependency;\n}());\nvar CompiledStylesheet = (function () {\n    /**\n     * @param {?} outputCtx\n     * @param {?} stylesVar\n     * @param {?} dependencies\n     * @param {?} isShimmed\n     * @param {?} meta\n     */\n    function CompiledStylesheet(outputCtx, stylesVar, dependencies, isShimmed, meta) {\n        this.outputCtx = outputCtx;\n        this.stylesVar = stylesVar;\n        this.dependencies = dependencies;\n        this.isShimmed = isShimmed;\n        this.meta = meta;\n    }\n    return CompiledStylesheet;\n}());\nvar StyleCompiler = (function () {\n    /**\n     * @param {?} _urlResolver\n     */\n    function StyleCompiler(_urlResolver) {\n        this._urlResolver = _urlResolver;\n        this._shadowCss = new ShadowCss();\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileComponent = function (outputCtx, comp) {\n        var /** @type {?} */ template = ((comp.template));\n        return this._compileStyles(outputCtx, comp, new CompileStylesheetMetadata({\n            styles: template.styles,\n            styleUrls: template.styleUrls,\n            moduleUrl: identifierModuleUrl(comp.type)\n        }), true);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileStyles = function (outputCtx, comp, stylesheet) {\n        return this._compileStyles(outputCtx, comp, stylesheet, false);\n    };\n    /**\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.needsStyleShim = function (comp) {\n        return ((comp.template)).encapsulation === _angular_core.ViewEncapsulation.Emulated;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    StyleCompiler.prototype._compileStyles = function (outputCtx, comp, stylesheet, isComponentStylesheet) {\n        var _this = this;\n        var /** @type {?} */ shim = this.needsStyleShim(comp);\n        var /** @type {?} */ styleExpressions = stylesheet.styles.map(function (plainStyle) { return literal(_this._shimIfNeeded(plainStyle, shim)); });\n        var /** @type {?} */ dependencies = [];\n        stylesheet.styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ exprIndex = styleExpressions.length;\n            // Note: This placeholder will be filled later.\n            styleExpressions.push(/** @type {?} */ ((null)));\n            dependencies.push(new StylesCompileDependency(getStylesVarName(null), styleUrl, function (value) { return styleExpressions[exprIndex] = outputCtx.importExpr(value); }));\n        });\n        // styles variable contains plain strings and arrays of other styles arrays (recursive),\n        // so we set its type to dynamic.\n        var /** @type {?} */ stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n        var /** @type {?} */ stmt = variable(stylesVar)\n            .set(literalArr(styleExpressions, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])))\n            .toDeclStmt(null, isComponentStylesheet ? [StmtModifier.Final] : [\n            StmtModifier.Final, StmtModifier.Exported\n        ]);\n        outputCtx.statements.push(stmt);\n        return new CompiledStylesheet(outputCtx, stylesVar, dependencies, shim, stylesheet);\n    };\n    /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype._shimIfNeeded = function (style$$1, shim) {\n        return shim ? this._shadowCss.shimCssText(style$$1, CONTENT_ATTR, HOST_ATTR) : style$$1;\n    };\n    return StyleCompiler;\n}());\nStyleCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nStyleCompiler.ctorParameters = function () { return [\n    { type: UrlResolver, },\n]; };\n/**\n * @param {?} component\n * @return {?}\n */\nfunction getStylesVarName(component) {\n    var /** @type {?} */ result = \"styles\";\n    if (component) {\n        result += \"_\" + identifierName(component.type);\n    }\n    return result;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventHandlerVars = (function () {\n    function EventHandlerVars() {\n    }\n    return EventHandlerVars;\n}());\nEventHandlerVars.event = variable('$event');\nvar ConvertActionBindingResult = (function () {\n    /**\n     * @param {?} stmts\n     * @param {?} allowDefault\n     */\n    function ConvertActionBindingResult(stmts, allowDefault) {\n        this.stmts = stmts;\n        this.allowDefault = allowDefault;\n    }\n    return ConvertActionBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression is\n * used in an action binding (e.g. an event handler).\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} action\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertActionBinding(localResolver, implicitReceiver, action, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ actionWithoutBuiltins = convertPropertyBindingBuiltins({\n        createLiteralArrayConverter: function (argCount) {\n            // Note: no caching for literal arrays in actions.\n            return function (args) { return literalArr(args); };\n        },\n        createLiteralMapConverter: function (keys) {\n            // Note: no caching for literal maps in actions.\n            return function (args) { return literalMap(/** @type {?} */ (keys.map(function (key, i) { return [key, args[i]]; }))); };\n        },\n        createPipeConverter: function (name) {\n            throw new Error(\"Illegal State: Actions are not allowed to contain pipes. Pipe: \" + name);\n        }\n    }, action);\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ actionStmts = [];\n    flattenStatements(actionWithoutBuiltins.visit(visitor, _Mode.Statement), actionStmts);\n    prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n    var /** @type {?} */ lastIndex = actionStmts.length - 1;\n    var /** @type {?} */ preventDefaultVar = ((null));\n    if (lastIndex >= 0) {\n        var /** @type {?} */ lastStatement = actionStmts[lastIndex];\n        var /** @type {?} */ returnExpr = convertStmtIntoExpression(lastStatement);\n        if (returnExpr) {\n            // Note: We need to cast the result of the method call to dynamic,\n            // as it might be a void method!\n            preventDefaultVar = createPreventDefaultVar(bindingId);\n            actionStmts[lastIndex] =\n                preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false)))\n                    .toDeclStmt(null, [StmtModifier.Final]);\n        }\n    }\n    return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertPropertyBindingBuiltins(converterFactory, ast) {\n    return convertBuiltins(converterFactory, ast);\n}\nvar ConvertPropertyBindingResult = (function () {\n    /**\n     * @param {?} stmts\n     * @param {?} currValExpr\n     */\n    function ConvertPropertyBindingResult(stmts, currValExpr) {\n        this.stmts = stmts;\n        this.currValExpr = currValExpr;\n    }\n    return ConvertPropertyBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression\n * is used in property binding. The expression has to be preprocessed via\n * `convertPropertyBindingBuiltins`.\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} expressionWithoutBuiltins\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertPropertyBinding(localResolver, implicitReceiver, expressionWithoutBuiltins, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ currValExpr = createCurrValueExpr(bindingId);\n    var /** @type {?} */ stmts = [];\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ outputExpr = expressionWithoutBuiltins.visit(visitor, _Mode.Expression);\n    if (visitor.temporaryCount) {\n        for (var /** @type {?} */ i = 0; i < visitor.temporaryCount; i++) {\n            stmts.push(temporaryDeclaration(bindingId, i));\n        }\n    }\n    stmts.push(currValExpr.set(outputExpr).toDeclStmt(null, [StmtModifier.Final]));\n    return new ConvertPropertyBindingResult(stmts, currValExpr);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertBuiltins(converterFactory, ast) {\n    var /** @type {?} */ visitor = new _BuiltinAstConverter(converterFactory);\n    return ast.visit(visitor);\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryName(bindingId, temporaryNumber) {\n    return \"tmp_\" + bindingId + \"_\" + temporaryNumber;\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryDeclaration(bindingId, temporaryNumber) {\n    return new DeclareVarStmt(temporaryName(bindingId, temporaryNumber), NULL_EXPR);\n}\n/**\n * @param {?} temporaryCount\n * @param {?} bindingId\n * @param {?} statements\n * @return {?}\n */\nfunction prependTemporaryDecls(temporaryCount, bindingId, statements) {\n    for (var /** @type {?} */ i = temporaryCount - 1; i >= 0; i--) {\n        statements.unshift(temporaryDeclaration(bindingId, i));\n    }\n}\nvar _Mode = {};\n_Mode.Statement = 0;\n_Mode.Expression = 1;\n_Mode[_Mode.Statement] = \"Statement\";\n_Mode[_Mode.Expression] = \"Expression\";\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureStatementMode(mode, ast) {\n    if (mode !== _Mode.Statement) {\n        throw new Error(\"Expected a statement, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureExpressionMode(mode, ast) {\n    if (mode !== _Mode.Expression) {\n        throw new Error(\"Expected an expression, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} expr\n * @return {?}\n */\nfunction convertToStatementIfNeeded(mode, expr) {\n    if (mode === _Mode.Statement) {\n        return expr.toStmt();\n    }\n    else {\n        return expr;\n    }\n}\nvar _BuiltinAstConverter = (function (_super) {\n    __extends(_BuiltinAstConverter, _super);\n    /**\n     * @param {?} _converterFactory\n     */\n    function _BuiltinAstConverter(_converterFactory) {\n        var _this = _super.call(this) || this;\n        _this._converterFactory = _converterFactory;\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitPipe = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = [ast.exp].concat(ast.args).map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createPipeConverter(ast.name, args.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralArray = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.expressions.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralArrayConverter(ast.expressions.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralMap = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.values.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralMapConverter(ast.keys));\n    };\n    return _BuiltinAstConverter;\n}(AstTransformer));\nvar _AstToIrVisitor = (function () {\n    /**\n     * @param {?} _localResolver\n     * @param {?} _implicitReceiver\n     * @param {?} bindingId\n     */\n    function _AstToIrVisitor(_localResolver, _implicitReceiver, bindingId) {\n        this._localResolver = _localResolver;\n        this._implicitReceiver = _implicitReceiver;\n        this.bindingId = bindingId;\n        this._nodeMap = new Map();\n        this._resultMap = new Map();\n        this._currentTemporary = 0;\n        this.temporaryCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitBinary = function (ast, mode) {\n        var /** @type {?} */ op;\n        switch (ast.operation) {\n            case '+':\n                op = BinaryOperator.Plus;\n                break;\n            case '-':\n                op = BinaryOperator.Minus;\n                break;\n            case '*':\n                op = BinaryOperator.Multiply;\n                break;\n            case '/':\n                op = BinaryOperator.Divide;\n                break;\n            case '%':\n                op = BinaryOperator.Modulo;\n                break;\n            case '&&':\n                op = BinaryOperator.And;\n                break;\n            case '||':\n                op = BinaryOperator.Or;\n                break;\n            case '==':\n                op = BinaryOperator.Equals;\n                break;\n            case '!=':\n                op = BinaryOperator.NotEquals;\n                break;\n            case '===':\n                op = BinaryOperator.Identical;\n                break;\n            case '!==':\n                op = BinaryOperator.NotIdentical;\n                break;\n            case '<':\n                op = BinaryOperator.Lower;\n                break;\n            case '>':\n                op = BinaryOperator.Bigger;\n                break;\n            case '<=':\n                op = BinaryOperator.LowerEquals;\n                break;\n            case '>=':\n                op = BinaryOperator.BiggerEquals;\n                break;\n            default:\n                throw new Error(\"Unsupported operation \" + ast.operation);\n        }\n        return convertToStatementIfNeeded(mode, new BinaryOperatorExpr(op, this._visit(ast.left, _Mode.Expression), this._visit(ast.right, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitChain = function (ast, mode) {\n        ensureStatementMode(mode, ast);\n        return this.visitAll(ast.expressions, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitConditional = function (ast, mode) {\n        var /** @type {?} */ value = this._visit(ast.condition, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, value.conditional(this._visit(ast.trueExp, _Mode.Expression), this._visit(ast.falseExp, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPipe = function (ast, mode) {\n        throw new Error(\"Illegal state: Pipes should have been converted into functions. Pipe: \" + ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitFunctionCall = function (ast, mode) {\n        var /** @type {?} */ convertedArgs = this.visitAll(ast.args, _Mode.Expression);\n        var /** @type {?} */ fnResult;\n        if (ast instanceof BuiltinFunctionCall) {\n            fnResult = ast.converter(convertedArgs);\n        }\n        else {\n            fnResult = this._visit(/** @type {?} */ ((ast.target)), _Mode.Expression).callFn(convertedArgs);\n        }\n        return convertToStatementIfNeeded(mode, fnResult);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitImplicitReceiver = function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        return this._implicitReceiver;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitInterpolation = function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        var /** @type {?} */ args = [literal(ast.expressions.length)];\n        for (var /** @type {?} */ i = 0; i < ast.strings.length - 1; i++) {\n            args.push(literal(ast.strings[i]));\n            args.push(this._visit(ast.expressions[i], _Mode.Expression));\n        }\n        args.push(literal(ast.strings[ast.strings.length - 1]));\n        return ast.expressions.length <= 9 ?\n            importExpr(Identifiers.inlineInterpolate).callFn(args) :\n            importExpr(Identifiers.interpolate).callFn([args[0], literalArr(args.slice(1))]);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedRead = function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            return convertToStatementIfNeeded(mode, this._visit(ast.obj, _Mode.Expression).key(this._visit(ast.key, _Mode.Expression)));\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedWrite = function (ast, mode) {\n        var /** @type {?} */ obj = this._visit(ast.obj, _Mode.Expression);\n        var /** @type {?} */ key = this._visit(ast.key, _Mode.Expression);\n        var /** @type {?} */ value = this._visit(ast.value, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralArray = function (ast, mode) {\n        throw new Error(\"Illegal State: literal arrays should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralMap = function (ast, mode) {\n        throw new Error(\"Illegal State: literal maps should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralPrimitive = function (ast, mode) {\n        return convertToStatementIfNeeded(mode, literal(ast.value));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._getLocal = function (name) { return this._localResolver.getLocal(name); };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitMethodCall = function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ args = this.visitAll(ast.args, _Mode.Expression);\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                var /** @type {?} */ varExpr = this._getLocal(ast.name);\n                if (varExpr) {\n                    result = varExpr.callFn(args);\n                }\n            }\n            if (result == null) {\n                result = receiver.callMethod(ast.name, args);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPrefixNot = function (ast, mode) {\n        return convertToStatementIfNeeded(mode, not(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitNonNullAssert = function (ast, mode) {\n        return convertToStatementIfNeeded(mode, assertNotNull(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyRead = function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                result = this._getLocal(ast.name);\n            }\n            if (result == null) {\n                result = receiver.prop(ast.name);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyWrite = function (ast, mode) {\n        var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n        if (receiver === this._implicitReceiver) {\n            var /** @type {?} */ varExpr = this._getLocal(ast.name);\n            if (varExpr) {\n                throw new Error('Cannot assign to a reference or variable!');\n            }\n        }\n        return convertToStatementIfNeeded(mode, receiver.prop(ast.name).set(this._visit(ast.value, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafePropertyRead = function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafeMethodCall = function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitAll = function (asts, mode) {\n        var _this = this;\n        return asts.map(function (ast) { return _this._visit(ast, mode); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitQuote = function (ast, mode) {\n        throw new Error(\"Quotes are not supported for evaluation!\\n        Statement: \" + ast.uninterpretedExpression + \" located at \" + ast.location);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._visit = function (ast, mode) {\n        var /** @type {?} */ result = this._resultMap.get(ast);\n        if (result)\n            return result;\n        return (this._nodeMap.get(ast) || ast).visit(this, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.convertSafeAccess = function (ast, leftMostSafe, mode) {\n        // If the expression contains a safe access node on the left it needs to be converted to\n        // an expression that guards the access to the member by checking the receiver for blank. As\n        // execution proceeds from left to right, the left most part of the expression must be guarded\n        // first but, because member access is left associative, the right side of the expression is at\n        // the top of the AST. The desired result requires lifting a copy of the the left part of the\n        // expression up to test it for blank before generating the unguarded version.\n        // Consider, for example the following expression: a?.b.c?.d.e\n        // This results in the ast:\n        //         .\n        //        / \\\n        //       ?.   e\n        //      /  \\\n        //     .    d\n        //    / \\\n        //   ?.  c\n        //  /  \\\n        // a    b\n        // The following tree should be generated:\n        //\n        //        /---- ? ----\\\n        //       /      |      \\\n        //     a   /--- ? ---\\  null\n        //        /     |     \\\n        //       .      .     null\n        //      / \\    / \\\n        //     .  c   .   e\n        //    / \\    / \\\n        //   a   b  ,   d\n        //         / \\\n        //        .   c\n        //       / \\\n        //      a   b\n        //\n        // Notice that the first guard condition is the left hand of the left most safe access node\n        // which comes in as leftMostSafe to this routine.\n        var /** @type {?} */ guardedExpression = this._visit(leftMostSafe.receiver, _Mode.Expression);\n        var /** @type {?} */ temporary = ((undefined));\n        if (this.needsTemporary(leftMostSafe.receiver)) {\n            // If the expression has method calls or pipes then we need to save the result into a\n            // temporary variable to avoid calling stateful or impure code more than once.\n            temporary = this.allocateTemporary();\n            // Preserve the result in the temporary variable\n            guardedExpression = temporary.set(guardedExpression);\n            // Ensure all further references to the guarded expression refer to the temporary instead.\n            this._resultMap.set(leftMostSafe.receiver, temporary);\n        }\n        var /** @type {?} */ condition = guardedExpression.isBlank();\n        // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n        // leftMostNode with its unguarded version in the call to `this.visit()`.\n        if (leftMostSafe instanceof SafeMethodCall) {\n            this._nodeMap.set(leftMostSafe, new MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n        }\n        else {\n            this._nodeMap.set(leftMostSafe, new PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n        }\n        // Recursively convert the node now without the guarded member access.\n        var /** @type {?} */ access = this._visit(ast, _Mode.Expression);\n        // Remove the mapping. This is not strictly required as the converter only traverses each node\n        // once but is safer if the conversion is changed to traverse the nodes more than once.\n        this._nodeMap.delete(leftMostSafe);\n        // If we allocated a temporary, release it.\n        if (temporary) {\n            this.releaseTemporary(temporary);\n        }\n        // Produce the conditional\n        return convertToStatementIfNeeded(mode, condition.conditional(literal(null), access));\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.leftMostSafeNode = function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        return ast.visit({\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitBinary: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitChain: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitConditional: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitFunctionCall: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitImplicitReceiver: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitInterpolation: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedRead: function (ast) { return visit(this, ast.obj); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedWrite: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralArray: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralMap: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralPrimitive: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitMethodCall: function (ast) { return visit(this, ast.receiver); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPipe: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPrefixNot: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitNonNullAssert: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyRead: function (ast) { return visit(this, ast.receiver); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyWrite: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitQuote: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafeMethodCall: function (ast) { return visit(this, ast.receiver) || ast; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafePropertyRead: function (ast) {\n                return visit(this, ast.receiver) || ast;\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.needsTemporary = function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return ast && (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        var /** @type {?} */ visitSome = function (visitor, ast) {\n            return ast.some(function (ast) { return visit(visitor, ast); });\n        };\n        return ast.visit({\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitBinary: function (ast) { return visit(this, ast.left) || visit(this, ast.right); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitChain: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitConditional: function (ast) {\n                return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                    visit(this, ast.falseExp);\n            },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitFunctionCall: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitImplicitReceiver: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitInterpolation: function (ast) { return visitSome(this, ast.expressions); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedRead: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedWrite: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralArray: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralMap: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralPrimitive: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitMethodCall: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPipe: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPrefixNot: function (ast) { return visit(this, ast.expression); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitNonNullAssert: function (ast) { return visit(this, ast.expression); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyRead: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyWrite: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitQuote: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafeMethodCall: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafePropertyRead: function (ast) { return false; }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.allocateTemporary = function () {\n        var /** @type {?} */ tempNumber = this._currentTemporary++;\n        this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n        return new ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n    };\n    /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.releaseTemporary = function (temporary) {\n        this._currentTemporary--;\n        if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n            throw new Error(\"Temporary \" + temporary.name + \" released out of order\");\n        }\n    };\n    return _AstToIrVisitor;\n}());\n/**\n * @param {?} arg\n * @param {?} output\n * @return {?}\n */\nfunction flattenStatements(arg, output) {\n    if (Array.isArray(arg)) {\n        ((arg)).forEach(function (entry) { return flattenStatements(entry, output); });\n    }\n    else {\n        output.push(arg);\n    }\n}\nvar DefaultLocalResolver = (function () {\n    function DefaultLocalResolver() {\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DefaultLocalResolver.prototype.getLocal = function (name) {\n        if (name === EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        return null;\n    };\n    return DefaultLocalResolver;\n}());\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createCurrValueExpr(bindingId) {\n    return variable(\"currVal_\" + bindingId); // fix syntax highlighting: `\n}\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createPreventDefaultVar(bindingId) {\n    return variable(\"pd_\" + bindingId);\n}\n/**\n * @param {?} stmt\n * @return {?}\n */\nfunction convertStmtIntoExpression(stmt) {\n    if (stmt instanceof ExpressionStatement) {\n        return stmt.expr;\n    }\n    else if (stmt instanceof ReturnStatement) {\n        return stmt.value;\n    }\n    return null;\n}\nvar BuiltinFunctionCall = (function (_super) {\n    __extends(BuiltinFunctionCall, _super);\n    /**\n     * @param {?} span\n     * @param {?} args\n     * @param {?} converter\n     */\n    function BuiltinFunctionCall(span, args, converter) {\n        var _this = _super.call(this, span, null, args) || this;\n        _this.args = args;\n        _this.converter = converter;\n        return _this;\n    }\n    return BuiltinFunctionCall;\n}(FunctionCall));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CLASS_ATTR$1 = 'class';\nvar STYLE_ATTR = 'style';\nvar IMPLICIT_TEMPLATE_VAR = '\\$implicit';\nvar ViewCompileResult = (function () {\n    /**\n     * @param {?} viewClassVar\n     * @param {?} rendererTypeVar\n     */\n    function ViewCompileResult(viewClassVar, rendererTypeVar) {\n        this.viewClassVar = viewClassVar;\n        this.rendererTypeVar = rendererTypeVar;\n    }\n    return ViewCompileResult;\n}());\nvar ViewCompiler = (function () {\n    /**\n     * @param {?} _config\n     * @param {?} _reflector\n     * @param {?} _schemaRegistry\n     */\n    function ViewCompiler(_config, _reflector, _schemaRegistry) {\n        this._config = _config;\n        this._reflector = _reflector;\n        this._schemaRegistry = _schemaRegistry;\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    ViewCompiler.prototype.compileComponent = function (outputCtx, component, template, styles, usedPipes) {\n        var _this = this;\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ staticQueryIds = findStaticQueryIds(template);\n        var /** @type {?} */ renderComponentVarName = ((undefined));\n        if (!component.isHost) {\n            var /** @type {?} */ template_1 = ((component.template));\n            var /** @type {?} */ customRenderData = [];\n            if (template_1.animations && template_1.animations.length) {\n                customRenderData.push(new LiteralMapEntry('animation', convertValueToOutputAst(outputCtx, template_1.animations), true));\n            }\n            var /** @type {?} */ renderComponentVar = variable(rendererTypeName(component.type.reference));\n            renderComponentVarName = ((renderComponentVar.name));\n            outputCtx.statements.push(renderComponentVar\n                .set(importExpr(Identifiers.createRendererType2).callFn([new LiteralMapExpr([\n                    new LiteralMapEntry('encapsulation', literal(template_1.encapsulation)),\n                    new LiteralMapEntry('styles', styles),\n                    new LiteralMapEntry('data', new LiteralMapExpr(customRenderData))\n                ])]))\n                .toDeclStmt(importType(Identifiers.RendererType2), [StmtModifier.Final, StmtModifier.Exported]));\n        }\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder(_this._reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        (_a = outputCtx.statements).push.apply(_a, visitor.build());\n        return new ViewCompileResult(visitor.viewName, renderComponentVarName);\n        var _a;\n    };\n    return ViewCompiler;\n}());\nViewCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nViewCompiler.ctorParameters = function () { return [\n    { type: CompilerConfig, },\n    { type: CompileReflector, },\n    { type: ElementSchemaRegistry, },\n]; };\nvar LOG_VAR$1 = variable('_l');\nvar VIEW_VAR = variable('_v');\nvar CHECK_VAR = variable('_ck');\nvar COMP_VAR = variable('_co');\nvar EVENT_NAME_VAR = variable('en');\nvar ALLOW_DEFAULT_VAR = variable(\"ad\");\nvar ViewBuilder = (function () {\n    /**\n     * @param {?} reflector\n     * @param {?} outputCtx\n     * @param {?} parent\n     * @param {?} component\n     * @param {?} embeddedViewIndex\n     * @param {?} usedPipes\n     * @param {?} staticQueryIds\n     * @param {?} viewBuilderFactory\n     */\n    function ViewBuilder(reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory) {\n        this.reflector = reflector;\n        this.outputCtx = outputCtx;\n        this.parent = parent;\n        this.component = component;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.usedPipes = usedPipes;\n        this.staticQueryIds = staticQueryIds;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.nodes = [];\n        this.purePipeNodeIndices = Object.create(null);\n        this.refNodeIndices = Object.create(null);\n        this.variables = [];\n        this.children = [];\n        // TODO(tbosch): The old view compiler used to use an `any` type\n        // for the context in any embedded view. We keep this behaivor for now\n        // to be able to introduce the new view compiler without too many errors.\n        this.compType = this.embeddedViewIndex > 0 ?\n            DYNAMIC_TYPE :\n            expressionType(outputCtx.importExpr(this.component.type.reference));\n    }\n    Object.defineProperty(ViewBuilder.prototype, \"viewName\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return viewClassName(this.component.type.reference, this.embeddedViewIndex);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = function (variables, astNodes) {\n        var _this = this;\n        this.variables = variables;\n        // create the pipes for the pure pipes immediately, so that we know their indices.\n        if (!this.parent) {\n            this.usedPipes.forEach(function (pipe) {\n                if (pipe.pure) {\n                    _this.purePipeNodeIndices[pipe.name] = _this._createPipe(null, pipe);\n                }\n            });\n        }\n        if (!this.parent) {\n            var /** @type {?} */ queryIds_1 = staticViewQueryIds(this.staticQueryIds);\n            this.component.viewQueries.forEach(function (query, queryIndex) {\n                // Note: queries start with id 1 so we can use the number in a Bloom filter!\n                var /** @type {?} */ queryId = queryIndex + 1;\n                var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n                var /** @type {?} */ flags = 134217728 /* TypeViewQuery */ | calcStaticDynamicQueryFlags(queryIds_1, queryId, query.first);\n                _this.nodes.push(function () { return ({\n                    sourceSpan: null,\n                    nodeFlags: flags,\n                    nodeDef: importExpr(Identifiers.queryDef).callFn([\n                        literal(flags), literal(queryId),\n                        new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType))])\n                    ])\n                }); });\n            });\n        }\n        templateVisitAll(this, astNodes);\n        if (this.parent && (astNodes.length === 0 || needsAdditionalRootNode(astNodes))) {\n            // if the view is an embedded view, then we need to add an additional root node in some cases\n            this.nodes.push(function () { return ({\n                sourceSpan: null,\n                nodeFlags: 1 /* TypeElement */,\n                nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                    literal(0 /* None */), NULL_EXPR, NULL_EXPR, literal(0)\n                ])\n            }); });\n        }\n    };\n    /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = function (targetStatements) {\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(targetStatements); });\n        var _a = this._createNodeExpressions(), updateRendererStmts = _a.updateRendererStmts, updateDirectivesStmts = _a.updateDirectivesStmts, nodeDefExprs = _a.nodeDefExprs;\n        var /** @type {?} */ updateRendererFn = this._createUpdateFn(updateRendererStmts);\n        var /** @type {?} */ updateDirectivesFn = this._createUpdateFn(updateDirectivesStmts);\n        var /** @type {?} */ viewFlags = 0;\n        if (!this.parent && this.component.changeDetection === _angular_core.ChangeDetectionStrategy.OnPush) {\n            viewFlags |= 2 /* OnPush */;\n        }\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(this.viewName, [new FnParam(/** @type {?} */ ((LOG_VAR$1.name)))], [new ReturnStatement(importExpr(Identifiers.viewDef).callFn([\n                literal(viewFlags),\n                literalArr(nodeDefExprs),\n                updateDirectivesFn,\n                updateRendererFn,\n            ]))], importType(Identifiers.ViewDefinition), this.embeddedViewIndex === 0 ? [StmtModifier.Exported] : []);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    ViewBuilder.prototype._createUpdateFn = function (updateStmts) {\n        var /** @type {?} */ updateFn;\n        if (updateStmts.length > 0) {\n            var /** @type {?} */ preStmts = [];\n            if (!this.component.isHost && findReadVarNames(updateStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            updateFn = fn([\n                new FnParam(/** @type {?} */ ((CHECK_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE)\n            ], preStmts.concat(updateStmts), INFERRED_TYPE);\n        }\n        else {\n            updateFn = NULL_EXPR;\n        }\n        return updateFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = function (ast, context) {\n        // ngContentDef(ngContentIndex: number, index: number): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 8 /* TypeNgContent */,\n            nodeDef: importExpr(Identifiers.ngContentDef).callFn([\n                literal(ast.ngContentIndex), literal(ast.index)\n            ])\n        }); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = function (ast, context) {\n        // textDef(ngContentIndex: number, constants: string[]): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 2 /* TypeText */,\n            nodeDef: importExpr(Identifiers.textDef).callFn([\n                literal(ast.ngContentIndex), literalArr([literal(ast.value)])\n            ])\n        }); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var /** @type {?} */ astWithSource = (ast.value);\n        var /** @type {?} */ inter = (astWithSource.ast);\n        var /** @type {?} */ updateRendererExpressions = inter.expressions.map(function (expr, bindingIndex) { return _this._preprocessUpdateExpression({ nodeIndex: nodeIndex, bindingIndex: bindingIndex, sourceSpan: ast.sourceSpan, context: COMP_VAR, value: expr }); });\n        // textDef(ngContentIndex: number, constants: string[]): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 2 /* TypeText */,\n            nodeDef: importExpr(Identifiers.textDef).callFn([\n                literal(ast.ngContentIndex), literalArr(inter.strings.map(function (s) { return literal(s); }))\n            ]),\n            updateRenderer: updateRendererExpressions\n        }); };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, queryMatchesExpr = _a.queryMatchesExpr, hostEvents = _a.hostEvents;\n        var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n        this.children.push(childVisitor);\n        childVisitor.visitAll(ast.variables, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        // anchorDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n        //   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:\n        //   ViewDefinitionFactory): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 1 /* TypeElement */ | flags,\n            nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                literal(flags),\n                queryMatchesExpr,\n                literal(ast.ngContentIndex),\n                literal(childCount),\n                _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                variable(childVisitor.viewName),\n            ])\n        }); };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        // Using a null element name creates an anchor.\n        var /** @type {?} */ elName = isNgContainer(ast.name) ? null : ast.name;\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, usedEvents = _a.usedEvents, queryMatchesExpr = _a.queryMatchesExpr, dirHostBindings = _a.hostBindings, hostEvents = _a.hostEvents;\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        if (elName) {\n            var /** @type {?} */ hostBindings = ast.inputs\n                .map(function (inputAst) { return ({\n                context: /** @type {?} */ (COMP_VAR),\n                inputAst: inputAst,\n                dirAst: /** @type {?} */ (null),\n            }); })\n                .concat(dirHostBindings);\n            if (hostBindings.length) {\n                updateRendererExpressions =\n                    hostBindings.map(function (hostBinding, bindingIndex) { return _this._preprocessUpdateExpression({\n                        context: hostBinding.context,\n                        nodeIndex: nodeIndex,\n                        bindingIndex: bindingIndex,\n                        sourceSpan: hostBinding.inputAst.sourceSpan,\n                        value: hostBinding.inputAst.value\n                    }); });\n                inputDefs = hostBindings.map(function (hostBinding) { return elementBindingDef(hostBinding.inputAst, hostBinding.dirAst); });\n            }\n            outputDefs = usedEvents.map(function (_a) {\n                var target = _a[0], eventName = _a[1];\n                return literalArr([literal(target), literal(eventName)]);\n            });\n        }\n        templateVisitAll(this, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var /** @type {?} */ compAst = ast.directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        var /** @type {?} */ compRendererType = (NULL_EXPR);\n        var /** @type {?} */ compView = (NULL_EXPR);\n        if (compAst) {\n            compView = this.outputCtx.importExpr(compAst.directive.componentViewType);\n            compRendererType = this.outputCtx.importExpr(compAst.directive.rendererType);\n        }\n        // elementDef(\n        //   flags: NodeFlags, matchedQueriesDsl: [string | number, QueryValueType][],\n        //   ngContentIndex: number, childCount: number, namespaceAndName: string,\n        //   fixedAttrs: [string, string][] = [],\n        //   bindings?: [BindingFlags, string, string | SecurityContext][],\n        //   outputs?: ([OutputType.ElementOutput | OutputType.DirectiveHostOutput, string, string])[],\n        //   handleEvent?: ElementHandleEventFn,\n        //   componentView?: () => ViewDefinition, componentRendererType?: RendererType2): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 1 /* TypeElement */ | flags,\n            nodeDef: importExpr(Identifiers.elementDef).callFn([\n                literal(flags),\n                queryMatchesExpr,\n                literal(ast.ngContentIndex),\n                literal(childCount),\n                literal(elName),\n                elName ? fixedAttrsDef(ast) : NULL_EXPR,\n                inputDefs.length ? literalArr(inputDefs) : NULL_EXPR,\n                outputDefs.length ? literalArr(outputDefs) : NULL_EXPR,\n                _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                compView,\n                compRendererType,\n            ]),\n            updateRenderer: updateRendererExpressions\n        }); };\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitElementOrTemplate = function (nodeIndex, ast) {\n        var _this = this;\n        var /** @type {?} */ flags = 0;\n        if (ast.hasViewContainer) {\n            flags |= 16777216 /* EmbeddedViews */;\n        }\n        var /** @type {?} */ usedEvents = new Map();\n        ast.outputs.forEach(function (event) {\n            var _a = elementEventNameAndTarget(event, null), name = _a.name, target = _a.target;\n            usedEvents.set(_angular_core.ÉµelementEventFullName(target, name), [target, name]);\n        });\n        ast.directives.forEach(function (dirAst) {\n            dirAst.hostEvents.forEach(function (event) {\n                var _a = elementEventNameAndTarget(event, dirAst), name = _a.name, target = _a.target;\n                usedEvents.set(_angular_core.ÉµelementEventFullName(target, name), [target, name]);\n            });\n        });\n        var /** @type {?} */ hostBindings = [];\n        var /** @type {?} */ hostEvents = [];\n        this._visitComponentFactoryResolverProvider(ast.directives);\n        ast.providers.forEach(function (providerAst, providerIndex) {\n            var /** @type {?} */ dirAst = ((undefined));\n            var /** @type {?} */ dirIndex = ((undefined));\n            ast.directives.forEach(function (localDirAst, i) {\n                if (localDirAst.directive.type.reference === tokenReference(providerAst.token)) {\n                    dirAst = localDirAst;\n                    dirIndex = i;\n                }\n            });\n            if (dirAst) {\n                var _a = _this._visitDirective(providerAst, dirAst, dirIndex, nodeIndex, ast.references, ast.queryMatches, usedEvents, /** @type {?} */ ((_this.staticQueryIds.get(/** @type {?} */ (ast))))), dirHostBindings = _a.hostBindings, dirHostEvents = _a.hostEvents;\n                hostBindings.push.apply(hostBindings, dirHostBindings);\n                hostEvents.push.apply(hostEvents, dirHostEvents);\n            }\n            else {\n                _this._visitProvider(providerAst, ast.queryMatches);\n            }\n        });\n        var /** @type {?} */ queryMatchExprs = [];\n        ast.queryMatches.forEach(function (match) {\n            var /** @type {?} */ valueType = ((undefined));\n            if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ElementRef)) {\n                valueType = 0 /* ElementRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                valueType = 3 /* ViewContainerRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(valueType)]));\n            }\n        });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ valueType = ((undefined));\n            if (!ref.value) {\n                valueType = 1 /* RenderElement */;\n            }\n            else if (tokenReference(ref.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(valueType)]));\n            }\n        });\n        ast.outputs.forEach(function (outputAst) {\n            hostEvents.push({ context: COMP_VAR, eventAst: outputAst, dirAst: /** @type {?} */ ((null)) });\n        });\n        return {\n            flags: flags,\n            usedEvents: Array.from(usedEvents.values()),\n            queryMatchesExpr: queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n            hostBindings: hostBindings,\n            hostEvents: hostEvents\n        };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitDirective = function (providerAst, dirAst, directiveIndex, elementNodeIndex, refs, queryMatches, usedEvents, queryIds) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        dirAst.directive.queries.forEach(function (query, queryIndex) {\n            var /** @type {?} */ queryId = dirAst.contentQueryStartId + queryIndex;\n            var /** @type {?} */ flags = 67108864 /* TypeContentQuery */ | calcStaticDynamicQueryFlags(queryIds, queryId, query.first);\n            var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n            _this.nodes.push(function () { return ({\n                sourceSpan: dirAst.sourceSpan,\n                nodeFlags: flags,\n                nodeDef: importExpr(Identifiers.queryDef).callFn([\n                    literal(flags), literal(queryId),\n                    new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType))])\n                ]),\n            }); });\n        });\n        // Note: the operation below might also create new nodeDefs,\n        // but we don't want them to be a child of a directive,\n        // as they might be a provider/pipe on their own.\n        // I.e. we only allow queries as children of directives nodes.\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var _a = this._visitProviderOrDirective(providerAst, queryMatches), flags = _a.flags, queryMatchExprs = _a.queryMatchExprs, providerExpr = _a.providerExpr, depsExpr = _a.depsExpr;\n        refs.forEach(function (ref) {\n            if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(4 /* Provider */)]));\n            }\n        });\n        if (dirAst.directive.isComponent) {\n            flags |= 32768 /* Component */;\n        }\n        var /** @type {?} */ inputDefs = dirAst.inputs.map(function (inputAst, inputIndex) {\n            var /** @type {?} */ mapValue = literalArr([literal(inputIndex), literal(inputAst.directiveName)]);\n            // Note: it's important to not quote the key so that we can capture renames by minifiers!\n            return new LiteralMapEntry(inputAst.directiveName, mapValue, false);\n        });\n        var /** @type {?} */ outputDefs = [];\n        var /** @type {?} */ dirMeta = dirAst.directive;\n        Object.keys(dirMeta.outputs).forEach(function (propName) {\n            var /** @type {?} */ eventName = dirMeta.outputs[propName];\n            if (usedEvents.has(eventName)) {\n                // Note: it's important to not quote the key so that we can capture renames by minifiers!\n                outputDefs.push(new LiteralMapEntry(propName, literal(eventName), false));\n            }\n        });\n        var /** @type {?} */ updateDirectiveExpressions = [];\n        if (dirAst.inputs.length || (flags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0) {\n            updateDirectiveExpressions =\n                dirAst.inputs.map(function (input, bindingIndex) { return _this._preprocessUpdateExpression({\n                    nodeIndex: nodeIndex,\n                    bindingIndex: bindingIndex,\n                    sourceSpan: input.sourceSpan,\n                    context: COMP_VAR,\n                    value: input.value\n                }); });\n        }\n        var /** @type {?} */ dirContextExpr = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n        var /** @type {?} */ hostBindings = dirAst.hostProperties.map(function (inputAst) { return ({\n            context: dirContextExpr,\n            dirAst: dirAst,\n            inputAst: inputAst,\n        }); });\n        var /** @type {?} */ hostEvents = dirAst.hostEvents.map(function (hostEventAst) { return ({\n            context: dirContextExpr,\n            eventAst: hostEventAst, dirAst: dirAst,\n        }); });\n        // directiveDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], childCount: number, ctor:\n        //   any,\n        //   deps: ([DepFlags, any] | any)[], props?: {[name: string]: [number, string]},\n        //   outputs?: {[name: string]: string}, component?: () => ViewDefinition): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: dirAst.sourceSpan,\n            nodeFlags: 16384 /* TypeDirective */ | flags,\n            nodeDef: importExpr(Identifiers.directiveDef).callFn([\n                literal(flags), queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n                literal(childCount), providerExpr, depsExpr,\n                inputDefs.length ? new LiteralMapExpr(inputDefs) : NULL_EXPR,\n                outputDefs.length ? new LiteralMapExpr(outputDefs) : NULL_EXPR\n            ]),\n            updateDirectives: updateDirectiveExpressions,\n            directive: dirAst.directive.type,\n        }); };\n        return { hostBindings: hostBindings, hostEvents: hostEvents };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProvider = function (providerAst, queryMatches) {\n        this._addProviderNode(this._visitProviderOrDirective(providerAst, queryMatches));\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitComponentFactoryResolverProvider = function (directives) {\n        var /** @type {?} */ componentDirMeta = directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        if (componentDirMeta && componentDirMeta.directive.entryComponents.length) {\n            var _a = componentFactoryResolverProviderDef(this.reflector, this.outputCtx, 8192 /* PrivateProvider */, componentDirMeta.directive.entryComponents), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr_1 = _a.tokenExpr;\n            this._addProviderNode({\n                providerExpr: providerExpr,\n                depsExpr: depsExpr,\n                flags: flags,\n                tokenExpr: tokenExpr_1,\n                queryMatchExprs: [],\n                sourceSpan: componentDirMeta.sourceSpan\n            });\n        }\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ViewBuilder.prototype._addProviderNode = function (data) {\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // providerDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,\n        //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: data.sourceSpan,\n            nodeFlags: data.flags,\n            nodeDef: importExpr(Identifiers.providerDef).callFn([\n                literal(data.flags),\n                data.queryMatchExprs.length ? literalArr(data.queryMatchExprs) : NULL_EXPR,\n                data.tokenExpr, data.providerExpr, data.depsExpr\n            ])\n        }); });\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProviderOrDirective = function (providerAst, queryMatches) {\n        var /** @type {?} */ flags = 0;\n        var /** @type {?} */ queryMatchExprs = [];\n        queryMatches.forEach(function (match) {\n            if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(4 /* Provider */)]));\n            }\n        });\n        var _a = providerDef(this.outputCtx, providerAst), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, providerFlags = _a.flags, tokenExpr = _a.tokenExpr;\n        return {\n            flags: flags | providerFlags,\n            queryMatchExprs: queryMatchExprs,\n            providerExpr: providerExpr,\n            depsExpr: depsExpr,\n            tokenExpr: tokenExpr,\n            sourceSpan: providerAst.sourceSpan\n        };\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        var /** @type {?} */ currViewExpr = VIEW_VAR;\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent,\n            currViewExpr = currViewExpr.prop('parent').cast(DYNAMIC_TYPE)) {\n            // check references\n            var /** @type {?} */ refNodeIndex = currBuilder.refNodeIndices[name];\n            if (refNodeIndex != null) {\n                return importExpr(Identifiers.nodeValue).callFn([currViewExpr, literal(refNodeIndex)]);\n            }\n            // check variables\n            var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n            if (varAst) {\n                var /** @type {?} */ varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n                return currViewExpr.prop('context').prop(varValue);\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype.createLiteralArrayConverter = function (sourceSpan, argCount) {\n        if (argCount === 0) {\n            var /** @type {?} */ valueExpr_1 = importExpr(Identifiers.EMPTY_ARRAY);\n            return function () { return valueExpr_1; };\n        }\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // pureArrayDef(argCount: number): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: sourceSpan,\n            nodeFlags: 32 /* TypePureArray */,\n            nodeDef: importExpr(Identifiers.pureArrayDef).callFn([literal(argCount)])\n        }); });\n        return function (args) { return callCheckStmt(nodeIndex, args); };\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    ViewBuilder.prototype.createLiteralMapConverter = function (sourceSpan, keys) {\n        if (keys.length === 0) {\n            var /** @type {?} */ valueExpr_2 = importExpr(Identifiers.EMPTY_MAP);\n            return function () { return valueExpr_2; };\n        }\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // function pureObjectDef(propertyNames: string[]): NodeDef\n        this.nodes.push(function () { return ({\n            sourceSpan: sourceSpan,\n            nodeFlags: 64 /* TypePureObject */,\n            nodeDef: importExpr(Identifiers.pureObjectDef).callFn([literalArr(keys.map(function (key) { return literal(key); }))])\n        }); });\n        return function (args) { return callCheckStmt(nodeIndex, args); };\n    };\n    /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype.createPipeConverter = function (expression, name, argCount) {\n        var /** @type {?} */ pipe = ((this.usedPipes.find(function (pipeSummary) { return pipeSummary.name === name; })));\n        if (pipe.pure) {\n            var /** @type {?} */ nodeIndex_1 = this.nodes.length;\n            // function purePipeDef(argCount: number): NodeDef;\n            this.nodes.push(function () { return ({\n                sourceSpan: expression.sourceSpan,\n                nodeFlags: 128 /* TypePurePipe */,\n                nodeDef: importExpr(Identifiers.purePipeDef).callFn([literal(argCount)])\n            }); });\n            // find underlying pipe in the component view\n            var /** @type {?} */ compViewExpr = VIEW_VAR;\n            var /** @type {?} */ compBuilder = this;\n            while (compBuilder.parent) {\n                compBuilder = compBuilder.parent;\n                compViewExpr = compViewExpr.prop('parent').cast(DYNAMIC_TYPE);\n            }\n            var /** @type {?} */ pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n            var /** @type {?} */ pipeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([compViewExpr, literal(pipeNodeIndex)]);\n            return function (args) { return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, callCheckStmt(nodeIndex_1, [pipeValueExpr_1].concat(args))); };\n        }\n        else {\n            var /** @type {?} */ nodeIndex = this._createPipe(expression.sourceSpan, pipe);\n            var /** @type {?} */ nodeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n            return function (args) { return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, nodeValueExpr_1.callMethod('transform', args)); };\n        }\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipe = function (sourceSpan, pipe) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        var /** @type {?} */ flags = 0;\n        pipe.type.lifecycleHooks.forEach(function (lifecycleHook) {\n            // for pipes, we only support ngOnDestroy\n            if (lifecycleHook === LifecycleHooks.OnDestroy) {\n                flags |= lifecycleHookToNodeFlag(lifecycleHook);\n            }\n        });\n        var /** @type {?} */ depExprs = pipe.type.diDeps.map(function (diDep) { return depDef(_this.outputCtx, diDep); });\n        // function pipeDef(\n        //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n        this.nodes.push(function () { return ({\n            sourceSpan: sourceSpan,\n            nodeFlags: 16 /* TypePipe */,\n            nodeDef: importExpr(Identifiers.pipeDef).callFn([\n                literal(flags), _this.outputCtx.importExpr(pipe.type.reference), literalArr(depExprs)\n            ])\n        }); });\n        return nodeIndex;\n    };\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype._preprocessUpdateExpression = function (expression) {\n        var _this = this;\n        return {\n            nodeIndex: expression.nodeIndex,\n            bindingIndex: expression.bindingIndex,\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) { return _this.createLiteralArrayConverter(expression.sourceSpan, argCount); },\n                createLiteralMapConverter: function (keys) { return _this.createLiteralMapConverter(expression.sourceSpan, keys); },\n                createPipeConverter: function (name, argCount) { return _this.createPipeConverter(expression, name, argCount); }\n            }, expression.value)\n        };\n    };\n    /**\n     * @return {?}\n     */\n    ViewBuilder.prototype._createNodeExpressions = function () {\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ updateBindingCount = 0;\n        var /** @type {?} */ updateRendererStmts = [];\n        var /** @type {?} */ updateDirectivesStmts = [];\n        var /** @type {?} */ nodeDefExprs = this.nodes.map(function (factory, nodeIndex) {\n            var _a = factory(), nodeDef = _a.nodeDef, nodeFlags = _a.nodeFlags, updateDirectives = _a.updateDirectives, updateRenderer = _a.updateRenderer, sourceSpan = _a.sourceSpan;\n            if (updateRenderer) {\n                updateRendererStmts.push.apply(updateRendererStmts, createUpdateStatements(nodeIndex, sourceSpan, updateRenderer, false));\n            }\n            if (updateDirectives) {\n                updateDirectivesStmts.push.apply(updateDirectivesStmts, createUpdateStatements(nodeIndex, sourceSpan, updateDirectives, (nodeFlags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0));\n            }\n            // We use a comma expression to call the log function before\n            // the nodeDef function, but still use the result of the nodeDef function\n            // as the value.\n            // Note: We only add the logger to elements / text nodes,\n            // so we don't generate too much code.\n            var /** @type {?} */ logWithNodeDef = nodeFlags & 3 /* CatRenderNode */ ?\n                new CommaExpr([LOG_VAR$1.callFn([]).callFn([]), nodeDef]) :\n                nodeDef;\n            return applySourceSpanToExpressionIfNeeded(logWithNodeDef, sourceSpan);\n        });\n        return { updateRendererStmts: updateRendererStmts, updateDirectivesStmts: updateDirectivesStmts, nodeDefExprs: nodeDefExprs };\n        /**\n         * @param {?} nodeIndex\n         * @param {?} sourceSpan\n         * @param {?} expressions\n         * @param {?} allowEmptyExprs\n         * @return {?}\n         */\n        function createUpdateStatements(nodeIndex, sourceSpan, expressions, allowEmptyExprs) {\n            var /** @type {?} */ updateStmts = [];\n            var /** @type {?} */ exprs = expressions.map(function (_a) {\n                var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n                var /** @type {?} */ bindingId = \"\" + updateBindingCount++;\n                var /** @type {?} */ nameResolver = context === COMP_VAR ? self : null;\n                var _b = convertPropertyBinding(nameResolver, context, value, bindingId), stmts = _b.stmts, currValExpr = _b.currValExpr;\n                updateStmts.push.apply(updateStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n                return applySourceSpanToExpressionIfNeeded(currValExpr, sourceSpan);\n            });\n            if (expressions.length || allowEmptyExprs) {\n                updateStmts.push(applySourceSpanToStatementIfNeeded(callCheckStmt(nodeIndex, exprs).toStmt(), sourceSpan));\n            }\n            return updateStmts;\n        }\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    ViewBuilder.prototype._createElementHandleEventFn = function (nodeIndex, handlers) {\n        var _this = this;\n        var /** @type {?} */ handleEventStmts = [];\n        var /** @type {?} */ handleEventBindingCount = 0;\n        handlers.forEach(function (_a) {\n            var context = _a.context, eventAst = _a.eventAst, dirAst = _a.dirAst;\n            var /** @type {?} */ bindingId = \"\" + handleEventBindingCount++;\n            var /** @type {?} */ nameResolver = context === COMP_VAR ? _this : null;\n            var _b = convertActionBinding(nameResolver, context, eventAst.handler, bindingId), stmts = _b.stmts, allowDefault = _b.allowDefault;\n            var /** @type {?} */ trueStmts = stmts;\n            if (allowDefault) {\n                trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n            }\n            var _c = elementEventNameAndTarget(eventAst, dirAst), eventTarget = _c.target, eventName = _c.name;\n            var /** @type {?} */ fullEventName = _angular_core.ÉµelementEventFullName(eventTarget, eventName);\n            handleEventStmts.push(applySourceSpanToStatementIfNeeded(new IfStmt(literal(fullEventName).identical(EVENT_NAME_VAR), trueStmts), eventAst.sourceSpan));\n        });\n        var /** @type {?} */ handleEventFn;\n        if (handleEventStmts.length > 0) {\n            var /** @type {?} */ preStmts = [ALLOW_DEFAULT_VAR.set(literal(true)).toDeclStmt(BOOL_TYPE)];\n            if (!this.component.isHost && findReadVarNames(handleEventStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            handleEventFn = fn([\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EVENT_NAME_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EventHandlerVars.event.name)), INFERRED_TYPE)\n            ], preStmts.concat(handleEventStmts, [new ReturnStatement(ALLOW_DEFAULT_VAR)]), INFERRED_TYPE);\n        }\n        else {\n            handleEventFn = NULL_EXPR;\n        }\n        return handleEventFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = function (ast, context) { };\n    return ViewBuilder;\n}());\n/**\n * @param {?} astNodes\n * @return {?}\n */\nfunction needsAdditionalRootNode(astNodes) {\n    var /** @type {?} */ lastAstNode = astNodes[astNodes.length - 1];\n    if (lastAstNode instanceof EmbeddedTemplateAst) {\n        return lastAstNode.hasViewContainer;\n    }\n    if (lastAstNode instanceof ElementAst) {\n        if (isNgContainer(lastAstNode.name) && lastAstNode.children.length) {\n            return needsAdditionalRootNode(lastAstNode.children);\n        }\n        return lastAstNode.hasViewContainer;\n    }\n    return lastAstNode instanceof NgContentAst;\n}\n/**\n * @param {?} inputAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementBindingDef(inputAst, dirAst) {\n    switch (inputAst.type) {\n        case PropertyBindingType.Attribute:\n            return literalArr([\n                literal(1 /* TypeElementAttribute */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Property:\n            return literalArr([\n                literal(8 /* TypeProperty */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Animation:\n            var /** @type {?} */ bindingType = 8 /* TypeProperty */ |\n                (dirAst && dirAst.directive.isComponent ? 32 /* SyntheticHostProperty */ :\n                    16 /* SyntheticProperty */);\n            return literalArr([\n                literal(bindingType), literal('@' + inputAst.name), literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Class:\n            return literalArr([literal(2 /* TypeElementClass */), literal(inputAst.name), NULL_EXPR]);\n        case PropertyBindingType.Style:\n            return literalArr([\n                literal(4 /* TypeElementStyle */), literal(inputAst.name), literal(inputAst.unit)\n            ]);\n    }\n}\n/**\n * @param {?} elementAst\n * @return {?}\n */\nfunction fixedAttrsDef(elementAst) {\n    var /** @type {?} */ mapResult = Object.create(null);\n    elementAst.attrs.forEach(function (attrAst) { mapResult[attrAst.name] = attrAst.value; });\n    elementAst.directives.forEach(function (dirAst) {\n        Object.keys(dirAst.directive.hostAttributes).forEach(function (name) {\n            var /** @type {?} */ value = dirAst.directive.hostAttributes[name];\n            var /** @type {?} */ prevValue = mapResult[name];\n            mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n        });\n    });\n    // Note: We need to sort to get a defined output order\n    // for tests and for caching generated artifacts...\n    return literalArr(Object.keys(mapResult).sort().map(function (attrName) { return literalArr([literal(attrName), literal(mapResult[attrName])]); }));\n}\n/**\n * @param {?} attrName\n * @param {?} attrValue1\n * @param {?} attrValue2\n * @return {?}\n */\nfunction mergeAttributeValue(attrName, attrValue1, attrValue2) {\n    if (attrName == CLASS_ATTR$1 || attrName == STYLE_ATTR) {\n        return attrValue1 + \" \" + attrValue2;\n    }\n    else {\n        return attrValue2;\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} exprs\n * @return {?}\n */\nfunction callCheckStmt(nodeIndex, exprs) {\n    if (exprs.length > 10) {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(1 /* Dynamic */), literalArr(exprs)]);\n    }\n    else {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(0 /* Inline */)].concat(exprs));\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} bindingIdx\n * @param {?} expr\n * @return {?}\n */\nfunction callUnwrapValue(nodeIndex, bindingIdx, expr) {\n    return importExpr(Identifiers.unwrapValue).callFn([\n        VIEW_VAR, literal(nodeIndex), literal(bindingIdx), expr\n    ]);\n}\n/**\n * @param {?} nodes\n * @param {?=} result\n * @return {?}\n */\nfunction findStaticQueryIds(nodes, result) {\n    if (result === void 0) { result = new Map(); }\n    nodes.forEach(function (node) {\n        var /** @type {?} */ staticQueryIds = new Set();\n        var /** @type {?} */ dynamicQueryIds = new Set();\n        var /** @type {?} */ queryMatches = ((undefined));\n        if (node instanceof ElementAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        else if (node instanceof EmbeddedTemplateAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        if (queryMatches) {\n            queryMatches.forEach(function (match) { return staticQueryIds.add(match.queryId); });\n        }\n        dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n        result.set(node, { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds });\n    });\n    return result;\n}\n/**\n * @param {?} nodeStaticQueryIds\n * @return {?}\n */\nfunction staticViewQueryIds(nodeStaticQueryIds) {\n    var /** @type {?} */ staticQueryIds = new Set();\n    var /** @type {?} */ dynamicQueryIds = new Set();\n    Array.from(nodeStaticQueryIds.values()).forEach(function (entry) {\n        entry.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n        entry.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n    });\n    dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n    return { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds };\n}\n/**\n * @param {?} eventAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementEventNameAndTarget(eventAst, dirAst) {\n    if (eventAst.isAnimation) {\n        return {\n            name: \"@\" + eventAst.name + \".\" + eventAst.phase,\n            target: dirAst && dirAst.directive.isComponent ? 'component' : null\n        };\n    }\n    else {\n        return eventAst;\n    }\n}\n/**\n * @param {?} queryIds\n * @param {?} queryId\n * @param {?} isFirst\n * @return {?}\n */\nfunction calcStaticDynamicQueryFlags(queryIds, queryId, isFirst) {\n    var /** @type {?} */ flags = 0;\n    // Note: We only make queries static that query for a single item.\n    // This is because of backwards compatibility with the old view compiler...\n    if (isFirst && (queryIds.staticQueryIds.has(queryId) || !queryIds.dynamicQueryIds.has(queryId))) {\n        flags |= 268435456 /* StaticQuery */;\n    }\n    else {\n        flags |= 536870912 /* DynamicQuery */;\n    }\n    return flags;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar GeneratedFile = (function () {\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} genFileUrl\n     * @param {?} sourceOrStmts\n     */\n    function GeneratedFile(srcFileUrl, genFileUrl, sourceOrStmts) {\n        this.srcFileUrl = srcFileUrl;\n        this.genFileUrl = genFileUrl;\n        if (typeof sourceOrStmts === 'string') {\n            this.source = sourceOrStmts;\n            this.stmts = null;\n        }\n        else {\n            this.source = null;\n            this.stmts = sourceOrStmts;\n        }\n    }\n    return GeneratedFile;\n}());\n/**\n * @param {?} file\n * @param {?=} preamble\n * @return {?}\n */\nfunction toTypeScript(file, preamble) {\n    if (preamble === void 0) { preamble = ''; }\n    if (!file.stmts) {\n        throw new Error(\"Illegal state: No stmts present on GeneratedFile \" + file.genFileUrl);\n    }\n    return new TypeScriptEmitter().emitStatements(sourceUrl(file.srcFileUrl), file.genFileUrl, file.stmts, preamble);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} forJitCtx\n * @param {?} summaryResolver\n * @param {?} symbolResolver\n * @param {?} symbols\n * @param {?} types\n * @return {?}\n */\nfunction serializeSummaries(forJitCtx, summaryResolver, symbolResolver, symbols, types) {\n    var /** @type {?} */ toJsonSerializer = new ToJsonSerializer(symbolResolver, summaryResolver);\n    var /** @type {?} */ forJitSerializer = new ForJitSerializer(forJitCtx, symbolResolver);\n    // for symbols, we use everything except for the class metadata itself\n    // (we keep the statics though), as the class metadata is contained in the\n    // CompileTypeSummary.\n    symbols.forEach(function (resolvedSymbol) { return toJsonSerializer.addOrMergeSummary({ symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata }); });\n    // Add summaries that are referenced by the given symbols (transitively)\n    // Note: the serializer.symbols array might be growing while\n    // we execute the loop!\n    for (var /** @type {?} */ processedIndex = 0; processedIndex < toJsonSerializer.symbols.length; processedIndex++) {\n        var /** @type {?} */ symbol = toJsonSerializer.symbols[processedIndex];\n        if (summaryResolver.isLibraryFile(symbol.filePath)) {\n            var /** @type {?} */ summary = summaryResolver.resolveSummary(symbol);\n            if (!summary) {\n                // some symbols might originate from a plain typescript library\n                // that just exported .d.ts and .metadata.json files, i.e. where no summary\n                // files were created.\n                var /** @type {?} */ resolvedSymbol = symbolResolver.resolveSymbol(symbol);\n                if (resolvedSymbol) {\n                    summary = { symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata };\n                }\n            }\n            if (summary) {\n                if (summary.type) {\n                    forJitSerializer.addLibType(summary.type);\n                }\n                toJsonSerializer.addOrMergeSummary(summary);\n            }\n        }\n    }\n    // Add type summaries.\n    // Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,\n    // as the type summaries already contain the transitive data that they require\n    // (in a minimal way).\n    types.forEach(function (_a) {\n        var summary = _a.summary, metadata = _a.metadata;\n        forJitSerializer.addSourceType(summary, metadata);\n        toJsonSerializer.addOrMergeSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n        if (summary.summaryKind === CompileSummaryKind.NgModule) {\n            var /** @type {?} */ ngModuleSummary = (summary);\n            ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach(function (id) {\n                var /** @type {?} */ symbol = id.reference;\n                if (summaryResolver.isLibraryFile(symbol.filePath)) {\n                    var /** @type {?} */ summary_1 = summaryResolver.resolveSummary(symbol);\n                    if (summary_1) {\n                        toJsonSerializer.addOrMergeSummary(summary_1);\n                    }\n                }\n            });\n        }\n    });\n    var _a = toJsonSerializer.serialize(), json = _a.json, exportAs = _a.exportAs;\n    forJitSerializer.serialize(exportAs);\n    return { json: json, exportAs: exportAs };\n}\n/**\n * @param {?} symbolCache\n * @param {?} json\n * @return {?}\n */\nfunction deserializeSummaries(symbolCache, json) {\n    var /** @type {?} */ deserializer = new FromJsonDeserializer(symbolCache);\n    return deserializer.deserialize(json);\n}\nvar ToJsonSerializer = (function (_super) {\n    __extends(ToJsonSerializer, _super);\n    /**\n     * @param {?} symbolResolver\n     * @param {?} summaryResolver\n     */\n    function ToJsonSerializer(symbolResolver, summaryResolver) {\n        var _this = _super.call(this) || this;\n        _this.symbolResolver = symbolResolver;\n        _this.summaryResolver = summaryResolver;\n        // Note: This only contains symbols without members.\n        _this.symbols = [];\n        _this.indexBySymbol = new Map();\n        _this.processedSummaryBySymbol = new Map();\n        _this.processedSummaries = [];\n        return _this;\n    }\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.addOrMergeSummary = function (summary) {\n        var /** @type {?} */ symbolMeta = summary.metadata;\n        if (symbolMeta && symbolMeta.__symbolic === 'class') {\n            // For classes, we keep everything except their class decorators.\n            // We need to keep e.g. the ctor args, method names, method decorators\n            // so that the class can be extended in another compilation unit.\n            // We don't keep the class decorators as\n            // 1) they refer to data\n            //   that should not cause a rebuild of downstream compilation units\n            //   (e.g. inline templates of @Component, or @NgModule.declarations)\n            // 2) their data is already captured in TypeSummaries, e.g. DirectiveSummary.\n            var /** @type {?} */ clone_1 = {};\n            Object.keys(symbolMeta).forEach(function (propName) {\n                if (propName !== 'decorators') {\n                    clone_1[propName] = symbolMeta[propName];\n                }\n            });\n            symbolMeta = clone_1;\n        }\n        var /** @type {?} */ processedSummary = this.processedSummaryBySymbol.get(summary.symbol);\n        if (!processedSummary) {\n            processedSummary = this.processValue({ symbol: summary.symbol });\n            this.processedSummaries.push(processedSummary);\n            this.processedSummaryBySymbol.set(summary.symbol, processedSummary);\n        }\n        // Note: == on purpose to compare with undefined!\n        if (processedSummary.metadata == null && symbolMeta != null) {\n            processedSummary.metadata = this.processValue(symbolMeta);\n        }\n        // Note: == on purpose to compare with undefined!\n        if (processedSummary.type == null && summary.type != null) {\n            processedSummary.type = this.processValue(summary.type);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.serialize = function () {\n        var _this = this;\n        var /** @type {?} */ exportAs = [];\n        var /** @type {?} */ json = JSON.stringify({\n            summaries: this.processedSummaries,\n            symbols: this.symbols.map(function (symbol, index) {\n                symbol.assertNoMembers();\n                var /** @type {?} */ importAs = ((undefined));\n                if (_this.summaryResolver.isLibraryFile(symbol.filePath)) {\n                    importAs = symbol.name + \"_\" + index;\n                    exportAs.push({ symbol: symbol, exportAs: importAs });\n                }\n                return {\n                    __symbol: index,\n                    name: symbol.name,\n                    // We convert the source filenames tinto output filenames,\n                    // as the generated summary file will be used when teh current\n                    // compilation unit is used as a library\n                    filePath: _this.summaryResolver.getLibraryFileName(symbol.filePath),\n                    importAs: importAs\n                };\n            })\n        });\n        return { json: json, exportAs: exportAs };\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.processValue = function (value) { return visitValue(value, this, null); };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitOther = function (value, context) {\n        if (value instanceof StaticSymbol) {\n            var /** @type {?} */ baseSymbol = this.symbolResolver.getStaticSymbol(value.filePath, value.name);\n            var /** @type {?} */ index = this.indexBySymbol.get(baseSymbol);\n            // Note: == on purpose to compare with undefined!\n            if (index == null) {\n                index = this.indexBySymbol.size;\n                this.indexBySymbol.set(baseSymbol, index);\n                this.symbols.push(baseSymbol);\n            }\n            return { __symbol: index, members: value.members };\n        }\n    };\n    return ToJsonSerializer;\n}(ValueTransformer));\nvar ForJitSerializer = (function () {\n    /**\n     * @param {?} outputCtx\n     * @param {?} symbolResolver\n     */\n    function ForJitSerializer(outputCtx, symbolResolver) {\n        this.outputCtx = outputCtx;\n        this.symbolResolver = symbolResolver;\n        this.data = new Map();\n    }\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addSourceType = function (summary, metadata) {\n        this.data.set(summary.type.reference, { summary: summary, metadata: metadata, isLibrary: false });\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addLibType = function (summary) {\n        this.data.set(summary.type.reference, { summary: summary, metadata: null, isLibrary: true });\n    };\n    /**\n     * @param {?} exportAs\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serialize = function (exportAs) {\n        var _this = this;\n        var /** @type {?} */ ngModuleSymbols = new Set();\n        Array.from(this.data.values()).forEach(function (_a) {\n            var summary = _a.summary, metadata = _a.metadata, isLibrary = _a.isLibrary;\n            if (summary.summaryKind === CompileSummaryKind.NgModule) {\n                // collect the symbols that refer to NgModule classes.\n                // Note: we can't just rely on `summary.type.summaryKind` to determine this as\n                // we don't add the summaries of all referenced symbols when we serialize type summaries.\n                // See serializeSummaries for details.\n                ngModuleSymbols.add(summary.type.reference);\n                var /** @type {?} */ modSummary = (summary);\n                modSummary.modules.forEach(function (mod) { ngModuleSymbols.add(mod.reference); });\n            }\n            if (!isLibrary) {\n                var /** @type {?} */ fnName = summaryForJitName(summary.type.reference.name);\n                _this.outputCtx.statements.push(fn([], [new ReturnStatement(_this.serializeSummaryWithDeps(summary, /** @type {?} */ ((metadata))))], new ArrayType(DYNAMIC_TYPE))\n                    .toDeclStmt(fnName, [StmtModifier.Final, StmtModifier.Exported]));\n            }\n        });\n        exportAs.forEach(function (entry) {\n            var /** @type {?} */ symbol = entry.symbol;\n            if (ngModuleSymbols.has(symbol)) {\n                var /** @type {?} */ jitExportAsName = summaryForJitName(entry.exportAs);\n                _this.outputCtx.statements.push(variable(jitExportAsName).set(_this.serializeSummaryRef(symbol)).toDeclStmt(null, [\n                    StmtModifier.Exported\n                ]));\n            }\n        });\n    };\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryWithDeps = function (summary, metadata) {\n        var _this = this;\n        var /** @type {?} */ expressions = [this.serializeSummary(summary)];\n        var /** @type {?} */ providers = [];\n        if (metadata instanceof CompileNgModuleMetadata) {\n            expressions.push.apply(expressions, \n            // For directives / pipes, we only add the declared ones,\n            // and rely on transitively importing NgModules to get the transitive\n            // summaries.\n            metadata.declaredDirectives.concat(metadata.declaredPipes)\n                .map(function (type) { return type.reference; })\n                .concat(metadata.transitiveModule.modules.map(function (type) { return type.reference; })\n                .filter(function (ref) { return ref !== metadata.type.reference; }))\n                .map(function (ref) { return _this.serializeSummaryRef(ref); }));\n            // Note: We don't use `NgModuleSummary.providers`, as that one is transitive,\n            // and we already have transitive modules.\n            providers = metadata.providers;\n        }\n        else if (summary.summaryKind === CompileSummaryKind.Directive) {\n            var /** @type {?} */ dirSummary = (summary);\n            providers = dirSummary.providers.concat(dirSummary.viewProviders);\n        }\n        // Note: We can't just refer to the `ngsummary.ts` files for `useClass` providers (as we do for\n        // declaredDirectives / declaredPipes), as we allow\n        // providers without ctor arguments to skip the `@Injectable` decorator,\n        // i.e. we didn't generate .ngsummary.ts files for these.\n        expressions.push.apply(expressions, providers.filter(function (provider) { return !!provider.useClass; }).map(function (provider) { return _this.serializeSummary(/** @type {?} */ ({\n            summaryKind: CompileSummaryKind.Injectable, type: provider.useClass\n        })); }));\n        return literalArr(expressions);\n    };\n    /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryRef = function (typeSymbol) {\n        var /** @type {?} */ jitImportedSymbol = this.symbolResolver.getStaticSymbol(summaryForJitFileName(typeSymbol.filePath), summaryForJitName(typeSymbol.name));\n        return this.outputCtx.importExpr(jitImportedSymbol);\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummary = function (data) {\n        var /** @type {?} */ outputCtx = this.outputCtx;\n        var Transformer = (function () {\n            function Transformer() {\n            }\n            /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitArray = function (arr, context) {\n                var _this = this;\n                return literalArr(arr.map(function (entry) { return visitValue(entry, _this, context); }));\n            };\n            /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitStringMap = function (map, context) {\n                var _this = this;\n                return new LiteralMapExpr(Object.keys(map).map(function (key) { return new LiteralMapEntry(key, visitValue(map[key], _this, context)); }));\n            };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitPrimitive = function (value, context) { return literal(value); };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitOther = function (value, context) {\n                if (value instanceof StaticSymbol) {\n                    return outputCtx.importExpr(value);\n                }\n                else {\n                    throw new Error(\"Illegal State: Encountered value \" + value);\n                }\n            };\n            return Transformer;\n        }());\n        return visitValue(data, new Transformer(), null);\n    };\n    return ForJitSerializer;\n}());\nvar FromJsonDeserializer = (function (_super) {\n    __extends(FromJsonDeserializer, _super);\n    /**\n     * @param {?} symbolCache\n     */\n    function FromJsonDeserializer(symbolCache) {\n        var _this = _super.call(this) || this;\n        _this.symbolCache = symbolCache;\n        return _this;\n    }\n    /**\n     * @param {?} json\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.deserialize = function (json) {\n        var _this = this;\n        var /** @type {?} */ data = JSON.parse(json);\n        var /** @type {?} */ importAs = [];\n        this.symbols = [];\n        data.symbols.forEach(function (serializedSymbol) {\n            var /** @type {?} */ symbol = _this.symbolCache.get(serializedSymbol.filePath, serializedSymbol.name);\n            _this.symbols.push(symbol);\n            if (serializedSymbol.importAs) {\n                importAs.push({ symbol: symbol, importAs: serializedSymbol.importAs });\n            }\n        });\n        var /** @type {?} */ summaries = visitValue(data.summaries, this, null);\n        return { summaries: summaries, importAs: importAs };\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.visitStringMap = function (map, context) {\n        if ('__symbol' in map) {\n            var /** @type {?} */ baseSymbol = this.symbols[map['__symbol']];\n            var /** @type {?} */ members = map['members'];\n            return members.length ? this.symbolCache.get(baseSymbol.filePath, baseSymbol.name, members) :\n                baseSymbol;\n        }\n        else {\n            return _super.prototype.visitStringMap.call(this, map, context);\n        }\n    };\n    return FromJsonDeserializer;\n}(ValueTransformer));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AotCompiler = (function () {\n    /**\n     * @param {?} _config\n     * @param {?} _host\n     * @param {?} _reflector\n     * @param {?} _metadataResolver\n     * @param {?} _templateParser\n     * @param {?} _styleCompiler\n     * @param {?} _viewCompiler\n     * @param {?} _ngModuleCompiler\n     * @param {?} _outputEmitter\n     * @param {?} _summaryResolver\n     * @param {?} _localeId\n     * @param {?} _translationFormat\n     * @param {?} _symbolResolver\n     */\n    function AotCompiler(_config, _host, _reflector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _outputEmitter, _summaryResolver, _localeId, _translationFormat, _symbolResolver) {\n        this._config = _config;\n        this._host = _host;\n        this._reflector = _reflector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._outputEmitter = _outputEmitter;\n        this._summaryResolver = _summaryResolver;\n        this._localeId = _localeId;\n        this._translationFormat = _translationFormat;\n        this._symbolResolver = _symbolResolver;\n    }\n    /**\n     * @return {?}\n     */\n    AotCompiler.prototype.clearCache = function () { this._metadataResolver.clearCache(); };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.compileAllAsync = function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ programSymbols = extractProgramSymbols(this._symbolResolver, rootFiles, this._host);\n        var _a = analyzeAndValidateNgModules(programSymbols, this._host, this._metadataResolver), ngModuleByPipeOrDirective = _a.ngModuleByPipeOrDirective, files = _a.files, ngModules = _a.ngModules;\n        return Promise\n            .all(ngModules.map(function (ngModule) { return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false); }))\n            .then(function () {\n            var /** @type {?} */ sourceModules = files.map(function (file) { return _this._compileSrcFile(file.srcUrl, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables); });\n            return flatten(sourceModules);\n        });\n    };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.compileAllSync = function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ programSymbols = extractProgramSymbols(this._symbolResolver, rootFiles, this._host);\n        var _a = analyzeAndValidateNgModules(programSymbols, this._host, this._metadataResolver), ngModuleByPipeOrDirective = _a.ngModuleByPipeOrDirective, files = _a.files, ngModules = _a.ngModules;\n        ngModules.forEach(function (ngModule) { return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true); });\n        var /** @type {?} */ sourceModules = files.map(function (file) { return _this._compileSrcFile(file.srcUrl, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables); });\n        return flatten(sourceModules);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    AotCompiler.prototype._compileSrcFile = function (srcFileUrl, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n        var _this = this;\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(srcFileUrl, true)[1];\n        var /** @type {?} */ generatedFiles = [];\n        var /** @type {?} */ outputCtx = this._createOutputContext(ngfactoryFilePath(srcFileUrl, true));\n        generatedFiles.push.apply(generatedFiles, this._createSummary(srcFileUrl, directives, pipes, ngModules, injectables, outputCtx));\n        // compile all ng modules\n        ngModules.forEach(function (ngModuleType) { return _this._compileModule(outputCtx, ngModuleType); });\n        // compile components\n        directives.forEach(function (dirType) {\n            var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(/** @type {?} */ (dirType));\n            if (!compMeta.isComponent) {\n                return Promise.resolve(null);\n            }\n            var /** @type {?} */ ngModule = ngModuleByPipeOrDirective.get(dirType);\n            if (!ngModule) {\n                throw new Error(\"Internal Error: cannot determine the module for component \" + identifierName(compMeta.type) + \"!\");\n            }\n            _assertComponent(compMeta);\n            // compile styles\n            var /** @type {?} */ componentStylesheet = _this._styleCompiler.compileComponent(outputCtx, compMeta); /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n                generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, fileSuffix));\n            });\n            // compile components\n            var /** @type {?} */ compViewVars = _this._compileComponent(outputCtx, compMeta, ngModule, ngModule.transitiveModule.directives, componentStylesheet, fileSuffix);\n            _this._compileComponentFactory(outputCtx, compMeta, ngModule, fileSuffix);\n        });\n        if (outputCtx.statements.length > 0) {\n            var /** @type {?} */ srcModule = this._codegenSourceModule(srcFileUrl, outputCtx);\n            generatedFiles.unshift(srcModule);\n        }\n        return generatedFiles;\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    AotCompiler.prototype._createSummary = function (srcFileUrl, directives, pipes, ngModules, injectables, ngFactoryCtx) {\n        var _this = this;\n        var /** @type {?} */ symbolSummaries = this._symbolResolver.getSymbolsOf(srcFileUrl)\n            .map(function (symbol) { return _this._symbolResolver.resolveSymbol(symbol); });\n        var /** @type {?} */ typeData = ngModules.map(function (ref) { return ({\n            summary: /** @type {?} */ ((_this._metadataResolver.getNgModuleSummary(ref))),\n            metadata: /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(ref)))\n        }); }).concat(directives.map(function (ref) { return ({\n            summary: /** @type {?} */ ((_this._metadataResolver.getDirectiveSummary(ref))),\n            metadata: /** @type {?} */ ((_this._metadataResolver.getDirectiveMetadata(ref)))\n        }); }), pipes.map(function (ref) { return ({\n            summary: /** @type {?} */ ((_this._metadataResolver.getPipeSummary(ref))),\n            metadata: /** @type {?} */ ((_this._metadataResolver.getPipeMetadata(ref)))\n        }); }), injectables.map(function (ref) { return ({\n            summary: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))),\n            metadata: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))).type\n        }); }));\n        var /** @type {?} */ forJitOutputCtx = this._createOutputContext(summaryForJitFileName(srcFileUrl, true));\n        var /** @type {?} */ forJitTargetFilePath = summaryForJitFileName(srcFileUrl, true);\n        var _a = serializeSummaries(forJitOutputCtx, this._summaryResolver, this._symbolResolver, symbolSummaries, typeData), json = _a.json, exportAs = _a.exportAs;\n        exportAs.forEach(function (entry) {\n            ngFactoryCtx.statements.push(variable(entry.exportAs).set(ngFactoryCtx.importExpr(entry.symbol)).toDeclStmt(null, [\n                StmtModifier.Exported\n            ]));\n        });\n        return [\n            new GeneratedFile(srcFileUrl, summaryFileName(srcFileUrl), json),\n            this._codegenSourceModule(srcFileUrl, forJitOutputCtx)\n        ];\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} ngModuleType\n     * @return {?}\n     */\n    AotCompiler.prototype._compileModule = function (outputCtx, ngModuleType) {\n        var /** @type {?} */ ngModule = ((this._metadataResolver.getNgModuleMetadata(ngModuleType)));\n        var /** @type {?} */ providers = [];\n        if (this._localeId) {\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.LOCALE_ID),\n                useValue: this._localeId,\n            });\n        }\n        if (this._translationFormat) {\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.TRANSLATIONS_FORMAT),\n                useValue: this._translationFormat\n            });\n        }\n        this._ngModuleCompiler.compile(outputCtx, ngModule, providers);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponentFactory = function (outputCtx, compMeta, ngModule, fileSuffix) {\n        var /** @type {?} */ hostType = this._metadataResolver.getHostComponentType(compMeta.type.reference);\n        var /** @type {?} */ hostMeta = createHostComponentMeta(hostType, compMeta, this._metadataResolver.getHostComponentViewClass(hostType));\n        var /** @type {?} */ hostViewFactoryVar = this._compileComponent(outputCtx, hostMeta, ngModule, [compMeta.type], null, fileSuffix)\n            .viewClassVar;\n        var /** @type {?} */ compFactoryVar = componentFactoryName(compMeta.type.reference);\n        var /** @type {?} */ inputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.inputs) {\n            var /** @type {?} */ templateName = compMeta.inputs[propName];\n            // Don't quote so that the key gets minified...\n            inputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        var /** @type {?} */ outputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.outputs) {\n            var /** @type {?} */ templateName = compMeta.outputs[propName];\n            // Don't quote so that the key gets minified...\n            outputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        outputCtx.statements.push(variable(compFactoryVar)\n            .set(importExpr(Identifiers.createComponentFactory).callFn([\n            literal(compMeta.selector), outputCtx.importExpr(compMeta.type.reference),\n            variable(hostViewFactoryVar), new LiteralMapExpr(inputsExprs),\n            new LiteralMapExpr(outputsExprs),\n            literalArr(/** @type {?} */ ((compMeta.template)).ngContentSelectors.map(function (selector) { return literal(selector); }))\n        ]))\n            .toDeclStmt(importType(Identifiers.ComponentFactory, [/** @type {?} */ ((expressionType(outputCtx.importExpr(compMeta.type.reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]));\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponent = function (outputCtx, compMeta, ngModule, directiveIdentifiers, componentStyles, fileSuffix) {\n        var _this = this;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var _a = this._templateParser.parse(compMeta, /** @type {?} */ ((((compMeta.template)).template)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template)))), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ stylesExpr = componentStyles ? variable(componentStyles.stylesVar) : literalArr([]);\n        var /** @type {?} */ viewResult = this._viewCompiler.compileComponent(outputCtx, compMeta, parsedTemplate, stylesExpr, usedPipes);\n        if (componentStyles) {\n            _resolveStyleStatements(this._symbolResolver, componentStyles, this._styleCompiler.needsStyleShim(compMeta), fileSuffix);\n        }\n        return viewResult;\n    };\n    /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    AotCompiler.prototype._createOutputContext = function (genFilePath) {\n        var _this = this;\n        var /** @type {?} */ importExpr$$1 = function (symbol, typeParams) {\n            if (typeParams === void 0) { typeParams = null; }\n            if (!(symbol instanceof StaticSymbol)) {\n                throw new Error(\"Internal error: unknown identifier \" + JSON.stringify(symbol));\n            }\n            var /** @type {?} */ arity = _this._symbolResolver.getTypeArity(symbol) || 0;\n            var _a = _this._symbolResolver.getImportAs(symbol) || symbol, filePath = _a.filePath, name = _a.name, members = _a.members;\n            var /** @type {?} */ moduleName = _this._symbolResolver.fileNameToModuleName(filePath, genFilePath);\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedTypeParams = typeParams || [];\n            var /** @type {?} */ missingTypeParamsCount = arity - suppliedTypeParams.length;\n            var /** @type {?} */ allTypeParams = suppliedTypeParams.concat(new Array(missingTypeParamsCount).fill(DYNAMIC_TYPE));\n            return members.reduce(function (expr, memberName) { return expr.prop(memberName); }, /** @type {?} */ (importExpr(new ExternalReference(moduleName, name, null), allTypeParams)));\n        };\n        return { statements: [], genFilePath: genFilePath, importExpr: importExpr$$1 };\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenStyles = function (srcFileUrl, compMeta, stylesheetMetadata, fileSuffix) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(_stylesModuleUrl(/** @type {?} */ ((stylesheetMetadata.moduleUrl)), this._styleCompiler.needsStyleShim(compMeta), fileSuffix));\n        var /** @type {?} */ compiledStylesheet = this._styleCompiler.compileStyles(outputCtx, compMeta, stylesheetMetadata);\n        _resolveStyleStatements(this._symbolResolver, compiledStylesheet, this._styleCompiler.needsStyleShim(compMeta), fileSuffix);\n        return this._codegenSourceModule(srcFileUrl, outputCtx);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenSourceModule = function (srcFileUrl, ctx) {\n        return new GeneratedFile(srcFileUrl, ctx.genFilePath, ctx.statements);\n    };\n    return AotCompiler;\n}());\n/**\n * @param {?} symbolResolver\n * @param {?} compileResult\n * @param {?} needsShim\n * @param {?} fileSuffix\n * @return {?}\n */\nfunction _resolveStyleStatements(symbolResolver, compileResult, needsShim, fileSuffix) {\n    compileResult.dependencies.forEach(function (dep) {\n        dep.setValue(symbolResolver.getStaticSymbol(_stylesModuleUrl(dep.moduleUrl, needsShim, fileSuffix), dep.name));\n    });\n}\n/**\n * @param {?} stylesheetUrl\n * @param {?} shim\n * @param {?} suffix\n * @return {?}\n */\nfunction _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n    return \"\" + stylesheetUrl + (shim ? '.shim' : '') + \".ngstyle\" + suffix;\n}\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction _assertComponent(meta) {\n    if (!meta.isComponent) {\n        throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n    }\n}\n/**\n * @param {?} programStaticSymbols\n * @param {?} host\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeNgModules(programStaticSymbols, host, metadataResolver) {\n    var _a = _createNgModules(programStaticSymbols, host, metadataResolver), ngModules = _a.ngModules, symbolsMissingModule = _a.symbolsMissingModule;\n    return _analyzeNgModules(programStaticSymbols, ngModules, symbolsMissingModule, metadataResolver);\n}\n/**\n * @param {?} programStaticSymbols\n * @param {?} host\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeAndValidateNgModules(programStaticSymbols, host, metadataResolver) {\n    var /** @type {?} */ result = analyzeNgModules(programStaticSymbols, host, metadataResolver);\n    if (result.symbolsMissingModule && result.symbolsMissingModule.length) {\n        var /** @type {?} */ messages = result.symbolsMissingModule.map(function (s) { return \"Cannot determine the module for class \" + s.name + \" in \" + s.filePath + \"! Add \" + s.name + \" to the NgModule to fix it.\"; });\n        throw syntaxError(messages.join('\\n'));\n    }\n    return result;\n}\n/**\n * @param {?} programSymbols\n * @param {?} ngModuleMetas\n * @param {?} symbolsMissingModule\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _analyzeNgModules(programSymbols, ngModuleMetas, symbolsMissingModule, metadataResolver) {\n    var /** @type {?} */ moduleMetasByRef = new Map();\n    ngModuleMetas.forEach(function (ngModule) { return moduleMetasByRef.set(ngModule.type.reference, ngModule); });\n    var /** @type {?} */ ngModuleByPipeOrDirective = new Map();\n    var /** @type {?} */ ngModulesByFile = new Map();\n    var /** @type {?} */ ngDirectivesByFile = new Map();\n    var /** @type {?} */ ngPipesByFile = new Map();\n    var /** @type {?} */ ngInjectablesByFile = new Map();\n    var /** @type {?} */ filePaths = new Set();\n    // Make sure we produce an analyzed file for each input file\n    programSymbols.forEach(function (symbol) {\n        var /** @type {?} */ filePath = symbol.filePath;\n        filePaths.add(filePath);\n        if (metadataResolver.isInjectable(symbol)) {\n            ngInjectablesByFile.set(filePath, (ngInjectablesByFile.get(filePath) || []).concat(symbol));\n        }\n    });\n    // Looping over all modules to construct:\n    // - a map from file to modules `ngModulesByFile`,\n    // - a map from file to directives `ngDirectivesByFile`,\n    // - a map from file to pipes `ngPipesByFile`,\n    // - a map from directive/pipe to module `ngModuleByPipeOrDirective`.\n    ngModuleMetas.forEach(function (ngModuleMeta) {\n        var /** @type {?} */ srcFileUrl = ngModuleMeta.type.reference.filePath;\n        filePaths.add(srcFileUrl);\n        ngModulesByFile.set(srcFileUrl, (ngModulesByFile.get(srcFileUrl) || []).concat(ngModuleMeta.type.reference));\n        ngModuleMeta.declaredDirectives.forEach(function (dirIdentifier) {\n            var /** @type {?} */ fileUrl = dirIdentifier.reference.filePath;\n            filePaths.add(fileUrl);\n            ngDirectivesByFile.set(fileUrl, (ngDirectivesByFile.get(fileUrl) || []).concat(dirIdentifier.reference));\n            ngModuleByPipeOrDirective.set(dirIdentifier.reference, ngModuleMeta);\n        });\n        ngModuleMeta.declaredPipes.forEach(function (pipeIdentifier) {\n            var /** @type {?} */ fileUrl = pipeIdentifier.reference.filePath;\n            filePaths.add(fileUrl);\n            ngPipesByFile.set(fileUrl, (ngPipesByFile.get(fileUrl) || []).concat(pipeIdentifier.reference));\n            ngModuleByPipeOrDirective.set(pipeIdentifier.reference, ngModuleMeta);\n        });\n    });\n    var /** @type {?} */ files = [];\n    filePaths.forEach(function (srcUrl) {\n        var /** @type {?} */ directives = ngDirectivesByFile.get(srcUrl) || [];\n        var /** @type {?} */ pipes = ngPipesByFile.get(srcUrl) || [];\n        var /** @type {?} */ ngModules = ngModulesByFile.get(srcUrl) || [];\n        var /** @type {?} */ injectables = ngInjectablesByFile.get(srcUrl) || [];\n        files.push({ srcUrl: srcUrl, directives: directives, pipes: pipes, ngModules: ngModules, injectables: injectables });\n    });\n    return {\n        // map directive/pipe to module\n        ngModuleByPipeOrDirective: ngModuleByPipeOrDirective,\n        // list modules and directives for every source file\n        files: files,\n        ngModules: ngModuleMetas, symbolsMissingModule: symbolsMissingModule\n    };\n}\n/**\n * @param {?} staticSymbolResolver\n * @param {?} files\n * @param {?} host\n * @return {?}\n */\nfunction extractProgramSymbols(staticSymbolResolver, files, host) {\n    var /** @type {?} */ staticSymbols = [];\n    files.filter(function (fileName) { return host.isSourceFile(fileName); }).forEach(function (sourceFile) {\n        staticSymbolResolver.getSymbolsOf(sourceFile).forEach(function (symbol) {\n            var /** @type {?} */ resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            var /** @type {?} */ symbolMeta = resolvedSymbol.metadata;\n            if (symbolMeta) {\n                if (symbolMeta.__symbolic != 'error') {\n                    // Ignore symbols that are only included to record error information.\n                    staticSymbols.push(resolvedSymbol.symbol);\n                }\n            }\n        });\n    });\n    return staticSymbols;\n}\n/**\n * @param {?} programStaticSymbols\n * @param {?} host\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _createNgModules(programStaticSymbols, host, metadataResolver) {\n    var /** @type {?} */ ngModules = new Map();\n    var /** @type {?} */ programPipesAndDirectives = [];\n    var /** @type {?} */ ngModulePipesAndDirective = new Set();\n    var /** @type {?} */ addNgModule = function (staticSymbol) {\n        if (ngModules.has(staticSymbol) || !host.isSourceFile(staticSymbol.filePath)) {\n            return false;\n        }\n        var /** @type {?} */ ngModule = metadataResolver.getNgModuleMetadata(staticSymbol, false);\n        if (ngModule) {\n            ngModules.set(ngModule.type.reference, ngModule);\n            ngModule.declaredDirectives.forEach(function (dir) { return ngModulePipesAndDirective.add(dir.reference); });\n            ngModule.declaredPipes.forEach(function (pipe) { return ngModulePipesAndDirective.add(pipe.reference); });\n            // For every input module add the list of transitively included modules\n            ngModule.transitiveModule.modules.forEach(function (modMeta) { return addNgModule(modMeta.reference); });\n        }\n        return !!ngModule;\n    };\n    programStaticSymbols.forEach(function (staticSymbol) {\n        if (!addNgModule(staticSymbol) &&\n            (metadataResolver.isDirective(staticSymbol) || metadataResolver.isPipe(staticSymbol))) {\n            programPipesAndDirectives.push(staticSymbol);\n        }\n    });\n    // Throw an error if any of the program pipe or directives is not declared by a module\n    var /** @type {?} */ symbolsMissingModule = programPipesAndDirectives.filter(function (s) { return !ngModulePipesAndDirective.has(s); });\n    return { ngModules: Array.from(ngModules.values()), symbolsMissingModule: symbolsMissingModule };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANGULAR_CORE = '@angular/core';\nvar HIDDEN_KEY = /^\\$.*\\$$/;\nvar IGNORE = {\n    __symbolic: 'ignore'\n};\n/**\n * @param {?} value\n * @return {?}\n */\nfunction shouldIgnore(value) {\n    return value && value.__symbolic == 'ignore';\n}\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nvar StaticReflector = (function () {\n    /**\n     * @param {?} summaryResolver\n     * @param {?} symbolResolver\n     * @param {?=} knownMetadataClasses\n     * @param {?=} knownMetadataFunctions\n     * @param {?=} errorRecorder\n     */\n    function StaticReflector(summaryResolver, symbolResolver, knownMetadataClasses, knownMetadataFunctions, errorRecorder) {\n        if (knownMetadataClasses === void 0) { knownMetadataClasses = []; }\n        if (knownMetadataFunctions === void 0) { knownMetadataFunctions = []; }\n        var _this = this;\n        this.summaryResolver = summaryResolver;\n        this.symbolResolver = symbolResolver;\n        this.errorRecorder = errorRecorder;\n        this.annotationCache = new Map();\n        this.propertyCache = new Map();\n        this.parameterCache = new Map();\n        this.methodCache = new Map();\n        this.conversionMap = new Map();\n        this.annotationForParentClassWithSummaryKind = new Map();\n        this.annotationNames = new Map();\n        this.initializeConversionMap();\n        knownMetadataClasses.forEach(function (kc) { return _this._registerDecoratorOrConstructor(_this.getStaticSymbol(kc.filePath, kc.name), kc.ctor); });\n        knownMetadataFunctions.forEach(function (kf) { return _this._registerFunction(_this.getStaticSymbol(kf.filePath, kf.name), kf.fn); });\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Directive, [_angular_core.Directive, _angular_core.Component]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Pipe, [_angular_core.Pipe]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.NgModule, [_angular_core.NgModule]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Injectable, [_angular_core.Injectable, _angular_core.Pipe, _angular_core.Directive, _angular_core.Component, _angular_core.NgModule]);\n        this.annotationNames.set(_angular_core.Directive, 'Directive');\n        this.annotationNames.set(_angular_core.Component, 'Component');\n        this.annotationNames.set(_angular_core.Pipe, 'Pipe');\n        this.annotationNames.set(_angular_core.NgModule, 'NgModule');\n        this.annotationNames.set(_angular_core.Injectable, 'Injectable');\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    StaticReflector.prototype.componentModuleUrl = function (typeOrFunc) {\n        var /** @type {?} */ staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n        return this.symbolResolver.getResourcePath(staticSymbol);\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    StaticReflector.prototype.resolveExternalReference = function (ref) {\n        var /** @type {?} */ importSymbol = this.getStaticSymbol(/** @type {?} */ ((ref.moduleName)), /** @type {?} */ ((ref.name)));\n        var /** @type {?} */ rootSymbol = this.findDeclaration(/** @type {?} */ ((ref.moduleName)), /** @type {?} */ ((ref.name)));\n        if (importSymbol != rootSymbol) {\n            this.symbolResolver.recordImportAs(rootSymbol, importSymbol);\n        }\n        return rootSymbol;\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.findDeclaration = function (moduleUrl, name, containingFile) {\n        return this.findSymbolDeclaration(this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    StaticReflector.prototype.findSymbolDeclaration = function (symbol) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n        if (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            return this.findSymbolDeclaration(resolvedSymbol.metadata);\n        }\n        else {\n            return symbol;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.annotations = function (type) {\n        var _this = this;\n        var /** @type {?} */ annotations = this.annotationCache.get(type);\n        if (!annotations) {\n            annotations = [];\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentAnnotations = this.annotations(parentType);\n                annotations.push.apply(annotations, parentAnnotations);\n            }\n            var /** @type {?} */ ownAnnotations_1 = [];\n            if (classMetadata['decorators']) {\n                ownAnnotations_1 = this.simplify(type, classMetadata['decorators']);\n                annotations.push.apply(annotations, ownAnnotations_1);\n            }\n            if (parentType && !this.summaryResolver.isLibraryFile(type.filePath) &&\n                this.summaryResolver.isLibraryFile(parentType.filePath)) {\n                var /** @type {?} */ summary = this.summaryResolver.resolveSummary(parentType);\n                if (summary && summary.type) {\n                    var /** @type {?} */ requiredAnnotationTypes = ((this.annotationForParentClassWithSummaryKind.get(/** @type {?} */ ((summary.type.summaryKind)))));\n                    var /** @type {?} */ typeHasRequiredAnnotation = requiredAnnotationTypes.some(function (requiredType) { return ownAnnotations_1.some(function (ann) { return ann instanceof requiredType; }); });\n                    if (!typeHasRequiredAnnotation) {\n                        this.reportError(syntaxError(\"Class \" + type.name + \" in \" + type.filePath + \" extends from a \" + CompileSummaryKind[((summary.type.summaryKind))] + \" in another compilation unit without duplicating the decorator. \" +\n                            (\"Please add a \" + requiredAnnotationTypes.map(function (type) { return _this.annotationNames.get(type); }).join(' or ') + \" decorator to the class.\")), type);\n                    }\n                }\n            }\n            this.annotationCache.set(type, annotations.filter(function (ann) { return !!ann; }));\n        }\n        return annotations;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.propMetadata = function (type) {\n        var _this = this;\n        var /** @type {?} */ propMetadata = this.propertyCache.get(type);\n        if (!propMetadata) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            propMetadata = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentType);\n                Object.keys(parentPropMetadata_1).forEach(function (parentProp) {\n                    ((propMetadata))[parentProp] = parentPropMetadata_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_1 = classMetadata['members'] || {};\n            Object.keys(members_1).forEach(function (propName) {\n                var /** @type {?} */ propData = members_1[propName];\n                var /** @type {?} */ prop = ((propData))\n                    .find(function (a) { return a['__symbolic'] == 'property' || a['__symbolic'] == 'method'; });\n                var /** @type {?} */ decorators = [];\n                if (((propMetadata))[propName]) {\n                    decorators.push.apply(decorators, ((propMetadata))[propName]);\n                } /** @type {?} */\n                ((propMetadata))[propName] = decorators;\n                if (prop && prop['decorators']) {\n                    decorators.push.apply(decorators, _this.simplify(type, prop['decorators']));\n                }\n            });\n            this.propertyCache.set(type, propMetadata);\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.parameters = function (type) {\n        var _this = this;\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"parameters received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return [];\n        }\n        try {\n            var /** @type {?} */ parameters_1 = this.parameterCache.get(type);\n            if (!parameters_1) {\n                var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n                var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n                var /** @type {?} */ members = classMetadata ? classMetadata['members'] : null;\n                var /** @type {?} */ ctorData = members ? members['__ctor__'] : null;\n                if (ctorData) {\n                    var /** @type {?} */ ctor = ((ctorData)).find(function (a) { return a['__symbolic'] == 'constructor'; });\n                    var /** @type {?} */ rawParameterTypes = (ctor['parameters']) || [];\n                    var /** @type {?} */ parameterDecorators_1 = (this.simplify(type, ctor['parameterDecorators'] || []));\n                    parameters_1 = [];\n                    rawParameterTypes.forEach(function (rawParamType, index) {\n                        var /** @type {?} */ nestedResult = [];\n                        var /** @type {?} */ paramType = _this.trySimplify(type, rawParamType);\n                        if (paramType)\n                            nestedResult.push(paramType);\n                        var /** @type {?} */ decorators = parameterDecorators_1 ? parameterDecorators_1[index] : null;\n                        if (decorators) {\n                            nestedResult.push.apply(nestedResult, decorators);\n                        } /** @type {?} */\n                        ((parameters_1)).push(nestedResult);\n                    });\n                }\n                else if (parentType) {\n                    parameters_1 = this.parameters(parentType);\n                }\n                if (!parameters_1) {\n                    parameters_1 = [];\n                }\n                this.parameterCache.set(type, parameters_1);\n            }\n            return parameters_1;\n        }\n        catch (e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype._methodNames = function (type) {\n        var /** @type {?} */ methodNames = this.methodCache.get(type);\n        if (!methodNames) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            methodNames = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentMethodNames_1 = this._methodNames(parentType);\n                Object.keys(parentMethodNames_1).forEach(function (parentProp) {\n                    ((methodNames))[parentProp] = parentMethodNames_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_2 = classMetadata['members'] || {};\n            Object.keys(members_2).forEach(function (propName) {\n                var /** @type {?} */ propData = members_2[propName];\n                var /** @type {?} */ isMethod = ((propData)).some(function (a) { return a['__symbolic'] == 'method'; }); /** @type {?} */\n                ((methodNames))[propName] = ((methodNames))[propName] || isMethod;\n            });\n            this.methodCache.set(type, methodNames);\n        }\n        return methodNames;\n    };\n    /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    StaticReflector.prototype.findParentType = function (type, classMetadata) {\n        var /** @type {?} */ parentType = this.trySimplify(type, classMetadata['extends']);\n        if (parentType instanceof StaticSymbol) {\n            return parentType;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    StaticReflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"hasLifecycleHook received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n        }\n        try {\n            return !!this._methodNames(type)[lcProperty];\n        }\n        catch (e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    StaticReflector.prototype._registerDecoratorOrConstructor = function (type, ctor) {\n        this.conversionMap.set(type, function (context, args) { return new (ctor.bind.apply(ctor, [void 0].concat(args)))(); });\n    };\n    /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    StaticReflector.prototype._registerFunction = function (type, fn) {\n        this.conversionMap.set(type, function (context, args) { return fn.apply(undefined, args); });\n    };\n    /**\n     * @return {?}\n     */\n    StaticReflector.prototype.initializeConversionMap = function () {\n        this.injectionToken = this.findDeclaration(ANGULAR_CORE, 'InjectionToken');\n        this.opaqueToken = this.findDeclaration(ANGULAR_CORE, 'OpaqueToken');\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), _angular_core.Host);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Injectable'), _angular_core.Injectable);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), _angular_core.Self);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), _angular_core.SkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Inject'), _angular_core.Inject);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), _angular_core.Optional);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Attribute'), _angular_core.Attribute);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChild'), _angular_core.ContentChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChildren'), _angular_core.ContentChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChild'), _angular_core.ViewChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChildren'), _angular_core.ViewChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Input'), _angular_core.Input);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Output'), _angular_core.Output);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Pipe'), _angular_core.Pipe);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostBinding'), _angular_core.HostBinding);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostListener'), _angular_core.HostListener);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Directive'), _angular_core.Directive);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Component'), _angular_core.Component);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'NgModule'), _angular_core.NgModule);\n        // Note: Some metadata classes can be used directly with Provider.deps.\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), _angular_core.Host);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), _angular_core.Self);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), _angular_core.SkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), _angular_core.Optional);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'trigger'), _angular_core.trigger);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'state'), _angular_core.state);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'transition'), _angular_core.transition);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'style'), _angular_core.style);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'animate'), _angular_core.animate);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'keyframes'), _angular_core.keyframes);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'sequence'), _angular_core.sequence);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'group'), _angular_core.group);\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticReflector.prototype.getStaticSymbol = function (declarationFile, name, members) {\n        return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n    };\n    /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticReflector.prototype.reportError = function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.trySimplify = function (context, value) {\n        var /** @type {?} */ originalRecorder = this.errorRecorder;\n        this.errorRecorder = function (error, fileName) { };\n        var /** @type {?} */ result = this.simplify(context, value);\n        this.errorRecorder = originalRecorder;\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.simplify = function (context, value) {\n        var _this = this;\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ scope = BindingScope.empty;\n        var /** @type {?} */ calling = new Map();\n        /**\n         * @param {?} context\n         * @param {?} value\n         * @param {?} depth\n         * @return {?}\n         */\n        function simplifyInContext(context, value, depth) {\n            /**\n             * @param {?} staticSymbol\n             * @return {?}\n             */\n            function resolveReferenceValue(staticSymbol) {\n                var /** @type {?} */ resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n                return resolvedSymbol ? resolvedSymbol.metadata : null;\n            }\n            /**\n             * @param {?} functionSymbol\n             * @param {?} targetFunction\n             * @param {?} args\n             * @return {?}\n             */\n            function simplifyCall(functionSymbol, targetFunction, args) {\n                if (targetFunction && targetFunction['__symbolic'] == 'function') {\n                    if (calling.get(functionSymbol)) {\n                        throw new Error('Recursion not supported');\n                    }\n                    calling.set(functionSymbol, true);\n                    try {\n                        var /** @type {?} */ value_1 = targetFunction['value'];\n                        if (value_1 && (depth != 0 || value_1.__symbolic != 'error')) {\n                            var /** @type {?} */ parameters = targetFunction['parameters'];\n                            var /** @type {?} */ defaults = targetFunction.defaults;\n                            args = args.map(function (arg) { return simplifyInContext(context, arg, depth + 1); })\n                                .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                            if (defaults && defaults.length > args.length) {\n                                args.push.apply(args, defaults.slice(args.length).map(function (value) { return simplify(value); }));\n                            }\n                            var /** @type {?} */ functionScope = BindingScope.build();\n                            for (var /** @type {?} */ i = 0; i < parameters.length; i++) {\n                                functionScope.define(parameters[i], args[i]);\n                            }\n                            var /** @type {?} */ oldScope = scope;\n                            var /** @type {?} */ result_1;\n                            try {\n                                scope = functionScope.done();\n                                result_1 = simplifyInContext(functionSymbol, value_1, depth + 1);\n                            }\n                            finally {\n                                scope = oldScope;\n                            }\n                            return result_1;\n                        }\n                    }\n                    finally {\n                        calling.delete(functionSymbol);\n                    }\n                }\n                if (depth === 0) {\n                    // If depth is 0 we are evaluating the top level expression that is describing element\n                    // decorator. In this case, it is a decorator we don't understand, such as a custom\n                    // non-angular decorator, and we should just ignore it.\n                    return IGNORE;\n                }\n                return simplify({ __symbolic: 'error', message: 'Function call not supported', context: functionSymbol });\n            }\n            /**\n             * @param {?} expression\n             * @return {?}\n             */\n            function simplify(expression) {\n                if (isPrimitive(expression)) {\n                    return expression;\n                }\n                if (expression instanceof Array) {\n                    var /** @type {?} */ result_2 = [];\n                    for (var _i = 0, _a = ((expression)); _i < _a.length; _i++) {\n                        var item = _a[_i];\n                        // Check for a spread expression\n                        if (item && item.__symbolic === 'spread') {\n                            var /** @type {?} */ spreadArray = simplify(item.expression);\n                            if (Array.isArray(spreadArray)) {\n                                for (var _b = 0, spreadArray_1 = spreadArray; _b < spreadArray_1.length; _b++) {\n                                    var spreadItem = spreadArray_1[_b];\n                                    result_2.push(spreadItem);\n                                }\n                                continue;\n                            }\n                        }\n                        var /** @type {?} */ value_2 = simplify(item);\n                        if (shouldIgnore(value_2)) {\n                            continue;\n                        }\n                        result_2.push(value_2);\n                    }\n                    return result_2;\n                }\n                if (expression instanceof StaticSymbol) {\n                    // Stop simplification at builtin symbols\n                    if (expression === self.injectionToken || expression === self.opaqueToken ||\n                        self.conversionMap.has(expression)) {\n                        return expression;\n                    }\n                    else {\n                        var /** @type {?} */ staticSymbol = expression;\n                        var /** @type {?} */ declarationValue = resolveReferenceValue(staticSymbol);\n                        if (declarationValue) {\n                            return simplifyInContext(staticSymbol, declarationValue, depth + 1);\n                        }\n                        else {\n                            return staticSymbol;\n                        }\n                    }\n                }\n                if (expression) {\n                    if (expression['__symbolic']) {\n                        var /** @type {?} */ staticSymbol = void 0;\n                        switch (expression['__symbolic']) {\n                            case 'binop':\n                                var /** @type {?} */ left = simplify(expression['left']);\n                                if (shouldIgnore(left))\n                                    return left;\n                                var /** @type {?} */ right = simplify(expression['right']);\n                                if (shouldIgnore(right))\n                                    return right;\n                                switch (expression['operator']) {\n                                    case '&&':\n                                        return left && right;\n                                    case '||':\n                                        return left || right;\n                                    case '|':\n                                        return left | right;\n                                    case '^':\n                                        return left ^ right;\n                                    case '&':\n                                        return left & right;\n                                    case '==':\n                                        return left == right;\n                                    case '!=':\n                                        return left != right;\n                                    case '===':\n                                        return left === right;\n                                    case '!==':\n                                        return left !== right;\n                                    case '<':\n                                        return left < right;\n                                    case '>':\n                                        return left > right;\n                                    case '<=':\n                                        return left <= right;\n                                    case '>=':\n                                        return left >= right;\n                                    case '<<':\n                                        return left << right;\n                                    case '>>':\n                                        return left >> right;\n                                    case '+':\n                                        return left + right;\n                                    case '-':\n                                        return left - right;\n                                    case '*':\n                                        return left * right;\n                                    case '/':\n                                        return left / right;\n                                    case '%':\n                                        return left % right;\n                                }\n                                return null;\n                            case 'if':\n                                var /** @type {?} */ condition = simplify(expression['condition']);\n                                return condition ? simplify(expression['thenExpression']) :\n                                    simplify(expression['elseExpression']);\n                            case 'pre':\n                                var /** @type {?} */ operand = simplify(expression['operand']);\n                                if (shouldIgnore(operand))\n                                    return operand;\n                                switch (expression['operator']) {\n                                    case '+':\n                                        return operand;\n                                    case '-':\n                                        return -operand;\n                                    case '!':\n                                        return !operand;\n                                    case '~':\n                                        return ~operand;\n                                }\n                                return null;\n                            case 'index':\n                                var /** @type {?} */ indexTarget = simplify(expression['expression']);\n                                var /** @type {?} */ index = simplify(expression['index']);\n                                if (indexTarget && isPrimitive(index))\n                                    return indexTarget[index];\n                                return null;\n                            case 'select':\n                                var /** @type {?} */ member = expression['member'];\n                                var /** @type {?} */ selectContext = context;\n                                var /** @type {?} */ selectTarget = simplify(expression['expression']);\n                                if (selectTarget instanceof StaticSymbol) {\n                                    var /** @type {?} */ members = selectTarget.members.concat(member);\n                                    selectContext =\n                                        self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                                    var /** @type {?} */ declarationValue = resolveReferenceValue(selectContext);\n                                    if (declarationValue) {\n                                        return simplifyInContext(selectContext, declarationValue, depth + 1);\n                                    }\n                                    else {\n                                        return selectContext;\n                                    }\n                                }\n                                if (selectTarget && isPrimitive(member))\n                                    return simplifyInContext(selectContext, selectTarget[member], depth + 1);\n                                return null;\n                            case 'reference':\n                                // Note: This only has to deal with variable references,\n                                // as symbol references have been converted into StaticSymbols already\n                                // in the StaticSymbolResolver!\n                                var /** @type {?} */ name = expression['name'];\n                                var /** @type {?} */ localValue = scope.resolve(name);\n                                if (localValue != BindingScope.missing) {\n                                    return localValue;\n                                }\n                                break;\n                            case 'class':\n                                return context;\n                            case 'function':\n                                return context;\n                            case 'new':\n                            case 'call':\n                                // Determine if the function is a built-in conversion\n                                staticSymbol = simplifyInContext(context, expression['expression'], depth + 1);\n                                if (staticSymbol instanceof StaticSymbol) {\n                                    if (staticSymbol === self.injectionToken || staticSymbol === self.opaqueToken) {\n                                        // if somebody calls new InjectionToken, don't create an InjectionToken,\n                                        // but rather return the symbol to which the InjectionToken is assigned to.\n                                        return context;\n                                    }\n                                    var /** @type {?} */ argExpressions = expression['arguments'] || [];\n                                    var /** @type {?} */ converter = self.conversionMap.get(staticSymbol);\n                                    if (converter) {\n                                        var /** @type {?} */ args = argExpressions.map(function (arg) { return simplifyInContext(context, arg, depth + 1); })\n                                            .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                                        return converter(context, args);\n                                    }\n                                    else {\n                                        // Determine if the function is one we can simplify.\n                                        var /** @type {?} */ targetFunction = resolveReferenceValue(staticSymbol);\n                                        return simplifyCall(staticSymbol, targetFunction, argExpressions);\n                                    }\n                                }\n                                return IGNORE;\n                            case 'error':\n                                var /** @type {?} */ message = produceErrorMessage(expression);\n                                if (expression['line']) {\n                                    message =\n                                        message + \" (position \" + (expression['line'] + 1) + \":\" + (expression['character'] + 1) + \" in the original .ts file)\";\n                                    self.reportError(positionalError(message, context.filePath, expression['line'], expression['character']), context);\n                                }\n                                else {\n                                    self.reportError(new Error(message), context);\n                                }\n                                return IGNORE;\n                            case 'ignore':\n                                return expression;\n                        }\n                        return null;\n                    }\n                    return mapStringMap(expression, function (value, name) { return simplify(value); });\n                }\n                return IGNORE;\n            }\n            try {\n                return simplify(value);\n            }\n            catch (e) {\n                var /** @type {?} */ members = context.members.length ? \".\" + context.members.join('.') : '';\n                var /** @type {?} */ message = e.message + \", resolving symbol \" + context.name + members + \" in \" + context.filePath;\n                if (e.fileName) {\n                    throw positionalError(message, e.fileName, e.line, e.column);\n                }\n                throw syntaxError(message);\n            }\n        }\n        var /** @type {?} */ recordedSimplifyInContext = function (context, value, depth) {\n            try {\n                return simplifyInContext(context, value, depth);\n            }\n            catch (e) {\n                _this.reportError(e, context);\n            }\n        };\n        var /** @type {?} */ result = this.errorRecorder ? recordedSimplifyInContext(context, value, 0) :\n            simplifyInContext(context, value, 0);\n        if (shouldIgnore(result)) {\n            return undefined;\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.getTypeMetadata = function (type) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n        return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n            { __symbolic: 'class' };\n    };\n    return StaticReflector;\n}());\n/**\n * @param {?} error\n * @return {?}\n */\nfunction expandedMessage(error) {\n    switch (error.message) {\n        case 'Reference to non-exported class':\n            if (error.context && error.context.className) {\n                return \"Reference to a non-exported class \" + error.context.className + \". Consider exporting the class\";\n            }\n            break;\n        case 'Variable not initialized':\n            return 'Only initialized variables and constants can be referenced because the value of this variable is needed by the template compiler';\n        case 'Destructuring not supported':\n            return 'Referencing an exported destructured variable or constant is not supported by the template compiler. Consider simplifying this to avoid destructuring';\n        case 'Could not resolve type':\n            if (error.context && error.context.typeName) {\n                return \"Could not resolve type \" + error.context.typeName;\n            }\n            break;\n        case 'Function call not supported':\n            var /** @type {?} */ prefix = error.context && error.context.name ? \"Calling function '\" + error.context.name + \"', f\" : 'F';\n            return prefix +\n                'unction calls are not supported. Consider replacing the function or lambda with a reference to an exported function';\n        case 'Reference to a local symbol':\n            if (error.context && error.context.name) {\n                return \"Reference to a local (non-exported) symbol '\" + error.context.name + \"'. Consider exporting the symbol\";\n            }\n            break;\n    }\n    return error.message;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction produceErrorMessage(error) {\n    return \"Error encountered resolving symbol values statically. \" + expandedMessage(error);\n}\n/**\n * @param {?} input\n * @param {?} transform\n * @return {?}\n */\nfunction mapStringMap(input, transform) {\n    if (!input)\n        return {};\n    var /** @type {?} */ result = {};\n    Object.keys(input).forEach(function (key) {\n        var /** @type {?} */ value = transform(input[key], key);\n        if (!shouldIgnore(value)) {\n            if (HIDDEN_KEY.test(key)) {\n                Object.defineProperty(result, key, { enumerable: false, configurable: true, value: value });\n            }\n            else {\n                result[key] = value;\n            }\n        }\n    });\n    return result;\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPrimitive(o) {\n    return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\n/**\n * @abstract\n */\nvar BindingScope = (function () {\n    function BindingScope() {\n    }\n    /**\n     * @abstract\n     * @param {?} name\n     * @return {?}\n     */\n    BindingScope.prototype.resolve = function (name) { };\n    /**\n     * @return {?}\n     */\n    BindingScope.build = function () {\n        var /** @type {?} */ current = new Map();\n        return {\n            define: function (name, value) {\n                current.set(name, value);\n                return this;\n            },\n            done: function () {\n                return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n            }\n        };\n    };\n    return BindingScope;\n}());\nBindingScope.missing = {};\nBindingScope.empty = { resolve: function (name) { return BindingScope.missing; } };\nvar PopulatedScope = (function (_super) {\n    __extends(PopulatedScope, _super);\n    /**\n     * @param {?} bindings\n     */\n    function PopulatedScope(bindings) {\n        var _this = _super.call(this) || this;\n        _this.bindings = bindings;\n        return _this;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PopulatedScope.prototype.resolve = function (name) {\n        return this.bindings.has(name) ? this.bindings.get(name) : BindingScope.missing;\n    };\n    return PopulatedScope;\n}(BindingScope));\n/**\n * @param {?} message\n * @param {?} fileName\n * @param {?} line\n * @param {?} column\n * @return {?}\n */\nfunction positionalError(message, fileName, line, column) {\n    var /** @type {?} */ result = new Error(message);\n    ((result)).fileName = fileName;\n    ((result)).line = line;\n    ((result)).column = column;\n    return result;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ResolvedStaticSymbol = (function () {\n    /**\n     * @param {?} symbol\n     * @param {?} metadata\n     */\n    function ResolvedStaticSymbol(symbol, metadata) {\n        this.symbol = symbol;\n        this.metadata = metadata;\n    }\n    return ResolvedStaticSymbol;\n}());\nvar SUPPORTED_SCHEMA_VERSION = 3;\n/**\n * This class is responsible for loading metadata per symbol,\n * and normalizing references between symbols.\n *\n * Internally, it only uses symbols without members,\n * and deduces the values for symbols with members based\n * on these symbols.\n */\nvar StaticSymbolResolver = (function () {\n    /**\n     * @param {?} host\n     * @param {?} staticSymbolCache\n     * @param {?} summaryResolver\n     * @param {?=} errorRecorder\n     */\n    function StaticSymbolResolver(host, staticSymbolCache, summaryResolver, errorRecorder) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryResolver = summaryResolver;\n        this.errorRecorder = errorRecorder;\n        this.metadataCache = new Map();\n        this.resolvedSymbols = new Map();\n        this.resolvedFilePaths = new Set();\n        this.importAs = new Map();\n        this.symbolResourcePaths = new Map();\n        this.symbolFromFile = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveSymbol = function (staticSymbol) {\n        if (staticSymbol.members.length > 0) {\n            return ((this._resolveSymbolMembers(staticSymbol)));\n        }\n        var /** @type {?} */ result = this.resolvedSymbols.get(staticSymbol);\n        if (result) {\n            return result;\n        }\n        result = ((this._resolveSymbolFromSummary(staticSymbol)));\n        if (result) {\n            return result;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        this._createSymbolsOf(staticSymbol.filePath);\n        result = ((this.resolvedSymbols.get(staticSymbol)));\n        return result;\n    };\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getImportAs = function (staticSymbol) {\n        if (staticSymbol.members.length) {\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(baseImportAs.filePath, baseImportAs.name, staticSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ summarizedFileName = stripSummaryForJitFileSuffix(staticSymbol.filePath);\n        if (summarizedFileName !== staticSymbol.filePath) {\n            var /** @type {?} */ summarizedName = stripSummaryForJitNameSuffix(staticSymbol.name);\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(summarizedFileName, summarizedName, staticSymbol.members);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(summaryForJitFileName(baseImportAs.filePath), summaryForJitName(baseImportAs.name), baseSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ result = this.summaryResolver.getImportAs(staticSymbol);\n        if (!result) {\n            result = ((this.importAs.get(staticSymbol)));\n        }\n        return result;\n    };\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getResourcePath = function (staticSymbol) {\n        return this.symbolResourcePaths.get(staticSymbol) || staticSymbol.filePath;\n    };\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getTypeArity = function (staticSymbol) {\n        // If the file is a factory/ngsummary file, don't resolve the symbol as doing so would\n        // cause the metadata for an factory/ngsummary file to be loaded which doesn't exist.\n        // All references to generated classes must include the correct arity whenever\n        // generating code.\n        if (isGeneratedFile(staticSymbol.filePath)) {\n            return null;\n        }\n        var /** @type {?} */ resolvedSymbol = this.resolveSymbol(staticSymbol);\n        while (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            resolvedSymbol = this.resolveSymbol(resolvedSymbol.metadata);\n        }\n        return (resolvedSymbol && resolvedSymbol.metadata && resolvedSymbol.metadata.arity) || null;\n    };\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.fileNameToModuleName = function (importedFilePath, containingFilePath) {\n        if (importedFilePath === containingFilePath) {\n            return null;\n        }\n        return this.knownFileNameToModuleNames.get(importedFilePath) ||\n            this.host.fileNameToModuleName(importedFilePath, containingFilePath);\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordImportAs = function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        this.importAs.set(sourceSymbol, targetSymbol);\n    };\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.invalidateFile = function (fileName) {\n        this.metadataCache.delete(fileName);\n        this.resolvedFilePaths.delete(fileName);\n        var /** @type {?} */ symbols = this.symbolFromFile.get(fileName);\n        if (symbols) {\n            this.symbolFromFile.delete(fileName);\n            for (var _i = 0, symbols_1 = symbols; _i < symbols_1.length; _i++) {\n                var symbol = symbols_1[_i];\n                this.resolvedSymbols.delete(symbol);\n                this.importAs.delete(symbol);\n                this.symbolResourcePaths.delete(symbol);\n            }\n        }\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolMembers = function (staticSymbol) {\n        var /** @type {?} */ members = staticSymbol.members;\n        var /** @type {?} */ baseResolvedSymbol = this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name));\n        if (!baseResolvedSymbol) {\n            return null;\n        }\n        var /** @type {?} */ baseMetadata = baseResolvedSymbol.metadata;\n        if (baseMetadata instanceof StaticSymbol) {\n            return new ResolvedStaticSymbol(staticSymbol, this.getStaticSymbol(baseMetadata.filePath, baseMetadata.name, members));\n        }\n        else if (baseMetadata && baseMetadata.__symbolic === 'class') {\n            if (baseMetadata.statics && members.length === 1) {\n                return new ResolvedStaticSymbol(staticSymbol, baseMetadata.statics[members[0]]);\n            }\n        }\n        else {\n            var /** @type {?} */ value = baseMetadata;\n            for (var /** @type {?} */ i = 0; i < members.length && value; i++) {\n                value = value[members[i]];\n            }\n            return new ResolvedStaticSymbol(staticSymbol, value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolFromSummary = function (staticSymbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(staticSymbol);\n        return summary ? new ResolvedStaticSymbol(staticSymbol, summary.metadata) : null;\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getStaticSymbol = function (declarationFile, name, members) {\n        return this.staticSymbolCache.get(declarationFile, name, members);\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolsOf = function (filePath) {\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        var /** @type {?} */ symbols = new Set(this.summaryResolver.getSymbolsOf(filePath));\n        this._createSymbolsOf(filePath);\n        this.resolvedSymbols.forEach(function (resolvedSymbol) {\n            if (resolvedSymbol.symbol.filePath === filePath) {\n                symbols.add(resolvedSymbol.symbol);\n            }\n        });\n        return Array.from(symbols);\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._createSymbolsOf = function (filePath) {\n        var _this = this;\n        if (this.resolvedFilePaths.has(filePath)) {\n            return;\n        }\n        this.resolvedFilePaths.add(filePath);\n        var /** @type {?} */ resolvedSymbols = [];\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['importAs']) {\n            // Index bundle indices should use the importAs module name defined\n            // in the bundle.\n            this.knownFileNameToModuleNames.set(filePath, metadata['importAs']);\n        }\n        if (metadata['metadata']) {\n            // handle direct declarations of the symbol\n            var /** @type {?} */ topLevelSymbolNames_1 = new Set(Object.keys(metadata['metadata']).map(unescapeIdentifier));\n            var /** @type {?} */ origins_1 = metadata['origins'] || {};\n            Object.keys(metadata['metadata']).forEach(function (metadataKey) {\n                var /** @type {?} */ symbolMeta = metadata['metadata'][metadataKey];\n                var /** @type {?} */ name = unescapeIdentifier(metadataKey);\n                var /** @type {?} */ symbol = _this.getStaticSymbol(filePath, name);\n                var /** @type {?} */ origin = origins_1.hasOwnProperty(metadataKey) && origins_1[metadataKey];\n                if (origin) {\n                    // If the symbol is from a bundled index, use the declaration location of the\n                    // symbol so relative references (such as './my.html') will be calculated\n                    // correctly.\n                    var /** @type {?} */ originFilePath = _this.resolveModule(origin, filePath);\n                    if (!originFilePath) {\n                        _this.reportError(new Error(\"Couldn't resolve original symbol for \" + origin + \" from \" + filePath));\n                    }\n                    else {\n                        _this.symbolResourcePaths.set(symbol, originFilePath);\n                    }\n                }\n                resolvedSymbols.push(_this.createResolvedSymbol(symbol, filePath, topLevelSymbolNames_1, symbolMeta));\n            });\n        }\n        // handle the symbols in one of the re-export location\n        if (metadata['exports']) {\n            var _loop_1 = function (moduleExport) {\n                // handle the symbols in the list of explicitly re-exported symbols.\n                if (moduleExport.export) {\n                    moduleExport.export.forEach(function (exportSymbol) {\n                        var /** @type {?} */ symbolName;\n                        if (typeof exportSymbol === 'string') {\n                            symbolName = exportSymbol;\n                        }\n                        else {\n                            symbolName = exportSymbol.as;\n                        }\n                        symbolName = unescapeIdentifier(symbolName);\n                        var /** @type {?} */ symName = symbolName;\n                        if (typeof exportSymbol !== 'string') {\n                            symName = unescapeIdentifier(exportSymbol.name);\n                        }\n                        var /** @type {?} */ resolvedModule = _this.resolveModule(moduleExport.from, filePath);\n                        if (resolvedModule) {\n                            var /** @type {?} */ targetSymbol = _this.getStaticSymbol(resolvedModule, symName);\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, symbolName);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        }\n                    });\n                }\n                else {\n                    // handle the symbols via export * directives.\n                    var /** @type {?} */ resolvedModule = this_1.resolveModule(moduleExport.from, filePath);\n                    if (resolvedModule) {\n                        var /** @type {?} */ nestedExports = this_1.getSymbolsOf(resolvedModule);\n                        nestedExports.forEach(function (targetSymbol) {\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, targetSymbol.name);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        });\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var _i = 0, _a = metadata['exports']; _i < _a.length; _i++) {\n                var moduleExport = _a[_i];\n                _loop_1(/** @type {?} */ moduleExport);\n            }\n        }\n        resolvedSymbols.forEach(function (resolvedSymbol) { return _this.resolvedSymbols.set(resolvedSymbol.symbol, resolvedSymbol); });\n        this.symbolFromFile.set(filePath, resolvedSymbols.map(function (resolvedSymbol) { return resolvedSymbol.symbol; }));\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createResolvedSymbol = function (sourceSymbol, topLevelPath, topLevelSymbolNames, metadata) {\n        // For classes that don't have Angular summaries / metadata,\n        // we only keep their arity, but nothing else\n        // (e.g. their constructor parameters).\n        // We do this to prevent introducing deep imports\n        // as we didn't generate .ngfactory.ts files with proper reexports.\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) && metadata &&\n            metadata['__symbolic'] === 'class') {\n            var /** @type {?} */ transformedMeta_1 = { __symbolic: 'class', arity: metadata.arity };\n            return new ResolvedStaticSymbol(sourceSymbol, transformedMeta_1);\n        }\n        var /** @type {?} */ self = this;\n        var ReferenceTransformer = (function (_super) {\n            __extends(ReferenceTransformer, _super);\n            function ReferenceTransformer() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            ReferenceTransformer.prototype.visitStringMap = function (map, functionParams) {\n                var /** @type {?} */ symbolic = map['__symbolic'];\n                if (symbolic === 'function') {\n                    var /** @type {?} */ oldLen = functionParams.length;\n                    functionParams.push.apply(functionParams, (map['parameters'] || []));\n                    var /** @type {?} */ result = _super.prototype.visitStringMap.call(this, map, functionParams);\n                    functionParams.length = oldLen;\n                    return result;\n                }\n                else if (symbolic === 'reference') {\n                    var /** @type {?} */ module_1 = map['module'];\n                    var /** @type {?} */ name = map['name'] ? unescapeIdentifier(map['name']) : map['name'];\n                    if (!name) {\n                        return null;\n                    }\n                    var /** @type {?} */ filePath = void 0;\n                    if (module_1) {\n                        filePath = ((self.resolveModule(module_1, sourceSymbol.filePath)));\n                        if (!filePath) {\n                            return {\n                                __symbolic: 'error',\n                                message: \"Could not resolve \" + module_1 + \" relative to \" + sourceSymbol.filePath + \".\"\n                            };\n                        }\n                        return self.getStaticSymbol(filePath, name);\n                    }\n                    else if (functionParams.indexOf(name) >= 0) {\n                        // reference to a function parameter\n                        return { __symbolic: 'reference', name: name };\n                    }\n                    else {\n                        if (topLevelSymbolNames.has(name)) {\n                            return self.getStaticSymbol(topLevelPath, name);\n                        }\n                        // ambient value\n                        null;\n                    }\n                }\n                else {\n                    return _super.prototype.visitStringMap.call(this, map, functionParams);\n                }\n            };\n            return ReferenceTransformer;\n        }(ValueTransformer));\n        var /** @type {?} */ transformedMeta = visitValue(metadata, new ReferenceTransformer(), []);\n        if (transformedMeta instanceof StaticSymbol) {\n            return this.createExport(sourceSymbol, transformedMeta);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createExport = function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath)) {\n            // This case is for an ng library importing symbols from a plain ts library\n            // transitively.\n            // Note: We rely on the fact that we discover symbols in the direction\n            // from source files to library files\n            this.importAs.set(targetSymbol, this.getImportAs(sourceSymbol) || sourceSymbol);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.reportError = function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getModuleMetadata = function (module) {\n        var /** @type {?} */ moduleMetadata = this.metadataCache.get(module);\n        if (!moduleMetadata) {\n            var /** @type {?} */ moduleMetadatas = this.host.getMetadataFor(module);\n            if (moduleMetadatas) {\n                var /** @type {?} */ maxVersion_1 = -1;\n                moduleMetadatas.forEach(function (md) {\n                    if (md['version'] > maxVersion_1) {\n                        maxVersion_1 = md['version'];\n                        moduleMetadata = md;\n                    }\n                });\n            }\n            if (!moduleMetadata) {\n                moduleMetadata =\n                    { __symbolic: 'module', version: SUPPORTED_SCHEMA_VERSION, module: module, metadata: {} };\n            }\n            if (moduleMetadata['version'] != SUPPORTED_SCHEMA_VERSION) {\n                var /** @type {?} */ errorMessage = moduleMetadata['version'] == 2 ?\n                    \"Unsupported metadata version \" + moduleMetadata['version'] + \" for module \" + module + \". This module should be compiled with a newer version of ngc\" :\n                    \"Metadata version mismatch for module \" + module + \", found version \" + moduleMetadata['version'] + \", expected \" + SUPPORTED_SCHEMA_VERSION;\n                this.reportError(new Error(errorMessage));\n            }\n            this.metadataCache.set(module, moduleMetadata);\n        }\n        return moduleMetadata;\n    };\n    /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolByModule = function (module, symbolName, containingFile) {\n        var /** @type {?} */ filePath = this.resolveModule(module, containingFile);\n        if (!filePath) {\n            this.reportError(new Error(\"Could not resolve module \" + module + (containingFile ? \" relative to $ {\\n            containingFile\\n          } \" : '')));\n            return this.getStaticSymbol(\"ERROR:\" + module, symbolName);\n        }\n        return this.getStaticSymbol(filePath, symbolName);\n    };\n    /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveModule = function (module, containingFile) {\n        try {\n            return this.host.moduleNameToFileName(module, containingFile);\n        }\n        catch (e) {\n            console.error(\"Could not resolve module '\" + module + \"' relative to file \" + containingFile);\n            this.reportError(e, undefined, containingFile);\n        }\n        return null;\n    };\n    return StaticSymbolResolver;\n}());\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction unescapeIdentifier(identifier) {\n    return identifier.startsWith('___') ? identifier.substr(1) : identifier;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AotSummaryResolver = (function () {\n    /**\n     * @param {?} host\n     * @param {?} staticSymbolCache\n     */\n    function AotSummaryResolver(host, staticSymbolCache) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryCache = new Map();\n        this.loadedFilePaths = new Set();\n        this.importAs = new Map();\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.isLibraryFile = function (filePath) {\n        // Note: We need to strip the .ngfactory. file path,\n        // so this method also works for generated files\n        // (for which host.isSourceFile will always return false).\n        return !this.host.isSourceFile(stripGeneratedFileSuffix(filePath));\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getLibraryFileName = function (filePath) { return this.host.getOutputFileName(filePath); };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.resolveSummary = function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        var /** @type {?} */ summary = this.summaryCache.get(staticSymbol);\n        if (!summary) {\n            this._loadSummaryFile(staticSymbol.filePath);\n            summary = ((this.summaryCache.get(staticSymbol)));\n        }\n        return summary;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getSymbolsOf = function (filePath) {\n        this._loadSummaryFile(filePath);\n        return Array.from(this.summaryCache.keys()).filter(function (symbol) { return symbol.filePath === filePath; });\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getImportAs = function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        return ((this.importAs.get(staticSymbol)));\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.addSummary = function (summary) { this.summaryCache.set(summary.symbol, summary); };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype._loadSummaryFile = function (filePath) {\n        var _this = this;\n        if (this.loadedFilePaths.has(filePath)) {\n            return;\n        }\n        this.loadedFilePaths.add(filePath);\n        if (this.isLibraryFile(filePath)) {\n            var /** @type {?} */ summaryFilePath = summaryFileName(filePath);\n            var /** @type {?} */ json = void 0;\n            try {\n                json = this.host.loadSummary(summaryFilePath);\n            }\n            catch (e) {\n                console.error(\"Error loading summary file \" + summaryFilePath);\n                throw e;\n            }\n            if (json) {\n                var _a = deserializeSummaries(this.staticSymbolCache, json), summaries = _a.summaries, importAs = _a.importAs;\n                summaries.forEach(function (summary) { return _this.summaryCache.set(summary.symbol, summary); });\n                importAs.forEach(function (importAs) {\n                    _this.importAs.set(importAs.symbol, _this.staticSymbolCache.get(ngfactoryFilePath(filePath), importAs.importAs));\n                });\n            }\n        }\n    };\n    return AotSummaryResolver;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a new AotCompiler based on options and a host.\n * @param {?} compilerHost\n * @param {?} options\n * @return {?}\n */\nfunction createAotCompiler(compilerHost, options) {\n    var /** @type {?} */ translations = options.translations || '';\n    var /** @type {?} */ urlResolver = createOfflineCompileUrlResolver();\n    var /** @type {?} */ symbolCache = new StaticSymbolCache();\n    var /** @type {?} */ summaryResolver = new AotSummaryResolver(compilerHost, symbolCache);\n    var /** @type {?} */ symbolResolver = new StaticSymbolResolver(compilerHost, symbolCache, summaryResolver);\n    var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, symbolResolver);\n    var /** @type {?} */ console = new _angular_core.ÉµConsole();\n    var /** @type {?} */ htmlParser = new I18NHtmlParser(new HtmlParser(), translations, options.i18nFormat, options.missingTranslation, console);\n    var /** @type {?} */ config = new CompilerConfig({\n        defaultEncapsulation: _angular_core.ViewEncapsulation.Emulated,\n        useJit: false,\n        enableLegacyTemplate: options.enableLegacyTemplate !== false,\n        missingTranslation: options.missingTranslation,\n    });\n    var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return compilerHost.loadResource(url); } }, urlResolver, htmlParser, config);\n    var /** @type {?} */ expressionParser = new Parser(new Lexer());\n    var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n    var /** @type {?} */ tmplParser = new TemplateParser(config, staticReflector, expressionParser, elementSchemaRegistry, htmlParser, console, []);\n    var /** @type {?} */ resolver = new CompileMetadataResolver(config, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n    // TODO(vicb): do not pass options.i18nFormat here\n    var /** @type {?} */ viewCompiler = new ViewCompiler(config, staticReflector, elementSchemaRegistry);\n    var /** @type {?} */ compiler = new AotCompiler(config, compilerHost, staticReflector, resolver, tmplParser, new StyleCompiler(urlResolver), viewCompiler, new NgModuleCompiler(staticReflector), new TypeScriptEmitter(), summaryResolver, options.locale || null, options.i18nFormat || null, symbolResolver);\n    return { compiler: compiler, reflector: staticReflector };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} statements\n * @return {?}\n */\nfunction interpretStatements(statements) {\n    var /** @type {?} */ ctx = new _ExecutionContext(null, null, null, new Map());\n    var /** @type {?} */ visitor = new StatementInterpreter();\n    visitor.visitAllStatements(statements, ctx);\n    var /** @type {?} */ result = {};\n    ctx.exports.forEach(function (exportName) { result[exportName] = ctx.vars.get(exportName); });\n    return result;\n}\n/**\n * @param {?} varNames\n * @param {?} varValues\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n    var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n    for (var /** @type {?} */ i = 0; i < varNames.length; i++) {\n        childCtx.vars.set(varNames[i], varValues[i]);\n    }\n    var /** @type {?} */ result = visitor.visitAllStatements(statements, childCtx);\n    return result ? result.value : null;\n}\nvar _ExecutionContext = (function () {\n    /**\n     * @param {?} parent\n     * @param {?} instance\n     * @param {?} className\n     * @param {?} vars\n     */\n    function _ExecutionContext(parent, instance, className, vars) {\n        this.parent = parent;\n        this.instance = instance;\n        this.className = className;\n        this.vars = vars;\n        this.exports = [];\n    }\n    /**\n     * @return {?}\n     */\n    _ExecutionContext.prototype.createChildWihtLocalVars = function () {\n        return new _ExecutionContext(this, this.instance, this.className, new Map());\n    };\n    return _ExecutionContext;\n}());\nvar ReturnValue = (function () {\n    /**\n     * @param {?} value\n     */\n    function ReturnValue(value) {\n        this.value = value;\n    }\n    return ReturnValue;\n}());\n/**\n * @param {?} _classStmt\n * @param {?} _ctx\n * @param {?} _visitor\n * @return {?}\n */\nfunction createDynamicClass(_classStmt, _ctx, _visitor) {\n    var /** @type {?} */ propertyDescriptors = {};\n    _classStmt.getters.forEach(function (getter) {\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[getter.name] = {\n            configurable: false,\n            get: function () {\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    _classStmt.methods.forEach(function (method) {\n        var /** @type {?} */ paramNames = method.params.map(function (param) { return param.name; });\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[((method.name))] = {\n            writable: false,\n            configurable: false,\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    var /** @type {?} */ ctorParamNames = _classStmt.constructorMethod.params.map(function (param) { return param.name; });\n    // Note: use `function` instead of arrow function to capture `this`\n    var /** @type {?} */ ctor = function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n        _classStmt.fields.forEach(function (field) { _this[field.name] = undefined; });\n        _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n    };\n    var /** @type {?} */ superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n    ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n    return ctor;\n}\nvar StatementInterpreter = (function () {\n    function StatementInterpreter() {\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    StatementInterpreter.prototype.debugAst = function (ast) { return debugOutputAstAsTypeScript(ast); };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        ctx.vars.set(stmt.name, stmt.value.visitExpression(this, ctx));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteVarExpr = function (expr, ctx) {\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(expr.name)) {\n                currCtx.vars.set(expr.name, value);\n                return value;\n            }\n            currCtx = ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + expr.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadVarExpr = function (ast, ctx) {\n        var /** @type {?} */ varName = ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    return ctx.instance.__proto__;\n                case BuiltinVar.This:\n                    return ctx.instance;\n                case BuiltinVar.CatchError:\n                    varName = CATCH_ERROR_VAR$2;\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = CATCH_STACK_VAR$2;\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(varName)) {\n                return currCtx.vars.get(varName);\n            }\n            currCtx = ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + varName);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteKeyExpr = function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ index = expr.index.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[index] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWritePropExpr = function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[expr.name] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeMethodExpr = function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ args = this.visitAllExpressions(expr.args, ctx);\n        var /** @type {?} */ result;\n        if (expr.builtin != null) {\n            switch (expr.builtin) {\n                case BuiltinMethod.ConcatArray:\n                    result = receiver.concat.apply(receiver, args);\n                    break;\n                case BuiltinMethod.SubscribeObservable:\n                    result = receiver.subscribe({ next: args[0] });\n                    break;\n                case BuiltinMethod.Bind:\n                    result = receiver.bind.apply(receiver, args);\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin method \" + expr.builtin);\n            }\n        }\n        else {\n            result = receiver[((expr.name))].apply(receiver, args);\n        }\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeFunctionExpr = function (stmt, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(stmt.args, ctx);\n        var /** @type {?} */ fnExpr = stmt.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n            return null;\n        }\n        else {\n            var /** @type {?} */ fn$$1 = stmt.fn.visitExpression(this, ctx);\n            return fn$$1.apply(null, args);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReturnStmt = function (stmt, ctx) {\n        return new ReturnValue(stmt.value.visitExpression(this, ctx));\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        var /** @type {?} */ clazz = createDynamicClass(stmt, ctx, this);\n        ctx.vars.set(stmt.name, clazz);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExpressionStmt = function (stmt, ctx) {\n        return stmt.expr.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitIfStmt = function (stmt, ctx) {\n        var /** @type {?} */ condition = stmt.condition.visitExpression(this, ctx);\n        if (condition) {\n            return this.visitAllStatements(stmt.trueCase, ctx);\n        }\n        else if (stmt.falseCase != null) {\n            return this.visitAllStatements(stmt.falseCase, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitTryCatchStmt = function (stmt, ctx) {\n        try {\n            return this.visitAllStatements(stmt.bodyStmts, ctx);\n        }\n        catch (e) {\n            var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n            childCtx.vars.set(CATCH_ERROR_VAR$2, e);\n            childCtx.vars.set(CATCH_STACK_VAR$2, e.stack);\n            return this.visitAllStatements(stmt.catchStmts, childCtx);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitThrowStmt = function (stmt, ctx) {\n        throw stmt.error.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommentStmt = function (stmt, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInstantiateExpr = function (ast, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(ast.args, ctx);\n        var /** @type {?} */ clazz = ast.classExpr.visitExpression(this, ctx);\n        return new (clazz.bind.apply(clazz, [void 0].concat(args)))();\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralExpr = function (ast, ctx) { return ast.value; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExternalExpr = function (ast, ctx) { return ast.value.runtime; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitConditionalExpr = function (ast, ctx) {\n        if (ast.condition.visitExpression(this, ctx)) {\n            return ast.trueCase.visitExpression(this, ctx);\n        }\n        else if (ast.falseCase != null) {\n            return ast.falseCase.visitExpression(this, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitNotExpr = function (ast, ctx) {\n        return !ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAssertNotNullExpr = function (ast, ctx) {\n        return ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCastExpr = function (ast, ctx) {\n        return ast.value.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitFunctionExpr = function (ast, ctx) {\n        var /** @type {?} */ paramNames = ast.params.map(function (param) { return param.name; });\n        return _declareFn(paramNames, ast.statements, ctx, this);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        var /** @type {?} */ paramNames = stmt.params.map(function (param) { return param.name; });\n        ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitBinaryOperatorExpr = function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ lhs = function () { return ast.lhs.visitExpression(_this, ctx); };\n        var /** @type {?} */ rhs = function () { return ast.rhs.visitExpression(_this, ctx); };\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                return lhs() == rhs();\n            case BinaryOperator.Identical:\n                return lhs() === rhs();\n            case BinaryOperator.NotEquals:\n                return lhs() != rhs();\n            case BinaryOperator.NotIdentical:\n                return lhs() !== rhs();\n            case BinaryOperator.And:\n                return lhs() && rhs();\n            case BinaryOperator.Or:\n                return lhs() || rhs();\n            case BinaryOperator.Plus:\n                return lhs() + rhs();\n            case BinaryOperator.Minus:\n                return lhs() - rhs();\n            case BinaryOperator.Divide:\n                return lhs() / rhs();\n            case BinaryOperator.Multiply:\n                return lhs() * rhs();\n            case BinaryOperator.Modulo:\n                return lhs() % rhs();\n            case BinaryOperator.Lower:\n                return lhs() < rhs();\n            case BinaryOperator.LowerEquals:\n                return lhs() <= rhs();\n            case BinaryOperator.Bigger:\n                return lhs() > rhs();\n            case BinaryOperator.BiggerEquals:\n                return lhs() >= rhs();\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadPropExpr = function (ast, ctx) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        result = receiver[ast.name];\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadKeyExpr = function (ast, ctx) {\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ prop = ast.index.visitExpression(this, ctx);\n        return receiver[prop];\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n        return this.visitAllExpressions(ast.entries, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralMapExpr = function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        ast.entries.forEach(function (entry) { return ((result))[entry.key] = entry.value.visitExpression(_this, ctx); });\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommaExpr = function (ast, context) {\n        var /** @type {?} */ values = this.visitAllExpressions(ast.parts, context);\n        return values[values.length - 1];\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllExpressions = function (expressions, ctx) {\n        var _this = this;\n        return expressions.map(function (expr) { return expr.visitExpression(_this, ctx); });\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllStatements = function (statements, ctx) {\n        for (var /** @type {?} */ i = 0; i < statements.length; i++) {\n            var /** @type {?} */ stmt = statements[i];\n            var /** @type {?} */ val = stmt.visitStatement(this, ctx);\n            if (val instanceof ReturnValue) {\n                return val;\n            }\n        }\n        return null;\n    };\n    return StatementInterpreter;\n}());\n/**\n * @param {?} varNames\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _declareFn(varNames, statements, ctx, visitor) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n    };\n}\nvar CATCH_ERROR_VAR$2 = 'error';\nvar CATCH_STACK_VAR$2 = 'stack';\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar AbstractJsEmitterVisitor = (function (_super) {\n    __extends(AbstractJsEmitterVisitor, _super);\n    function AbstractJsEmitterVisitor() {\n        return _super.call(this, false) || this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        this._visitClassConstructor(stmt, ctx);\n        if (stmt.parent != null) {\n            ctx.print(stmt, stmt.name + \".prototype = Object.create(\");\n            stmt.parent.visitExpression(this, ctx);\n            ctx.println(stmt, \".prototype);\");\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(stmt, getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(stmt, method, ctx); });\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        if (stmt.constructorMethod != null) {\n            this._visitParams(stmt.constructorMethod.params, ctx);\n        }\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (stmt.constructorMethod != null) {\n            if (stmt.constructorMethod.body.length > 0) {\n                ctx.println(stmt, \"var self = this;\");\n                this.visitAllStatements(stmt.constructorMethod.body, ctx);\n            }\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassGetter = function (stmt, getter, ctx) {\n        ctx.println(stmt, \"Object.defineProperty(\" + stmt.name + \".prototype, '\" + getter.name + \"', { get: function() {\");\n        ctx.incIndent();\n        if (getter.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(getter.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}});\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassMethod = function (stmt, method, ctx) {\n        ctx.print(stmt, stmt.name + \".prototype.\" + method.name + \" = function(\");\n        this._visitParams(method.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (method.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(method.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"};\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {\n        if (ast.builtin === BuiltinVar.This) {\n            ctx.print(ast, 'self');\n        }\n        else if (ast.builtin === BuiltinVar.Super) {\n            throw new Error(\"'super' needs to be handled at a parent ast node, not at the variable level!\");\n        }\n        else {\n            _super.prototype.visitReadVarExpr.call(this, ast, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"var \" + stmt.name + \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {\n        var /** @type {?} */ fnExpr = expr.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ((((ctx.currentClass)).parent)).visitExpression(this, ctx);\n            ctx.print(expr, \".call(this\");\n            if (expr.args.length > 0) {\n                ctx.print(expr, \", \");\n                this.visitAllExpressions(expr.args, ctx, ',');\n            }\n            ctx.print(expr, \")\");\n        }\n        else {\n            _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {\n        ctx.print(ast, \"function(\");\n        this._visitParams(ast.params, ctx);\n        ctx.println(ast, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack')).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitParams = function (params, ctx) {\n        this.visitAllObjects(function (param) { return ctx.print(null, param.name); }, params, ctx, ',');\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    return AbstractJsEmitterVisitor;\n}(AbstractEmitterVisitor));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} sourceUrl\n * @param {?} ctx\n * @param {?} vars\n * @return {?}\n */\nfunction evalExpression(sourceUrl$$1, ctx, vars) {\n    var /** @type {?} */ fnBody = ctx.toSource() + \"\\n//# sourceURL=\" + sourceUrl$$1;\n    var /** @type {?} */ fnArgNames = [];\n    var /** @type {?} */ fnArgValues = [];\n    for (var /** @type {?} */ argName in vars) {\n        fnArgNames.push(argName);\n        fnArgValues.push(vars[argName]);\n    }\n    if (_angular_core.isDevMode()) {\n        // using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise\n        // E.g. ```\n        // function anonymous(a,b,c\n        // /**/) { ... }```\n        // We don't want to hard code this fact, so we auto detect it via an empty function first.\n        var /** @type {?} */ emptyFn = new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat('return null;'))))().toString();\n        var /** @type {?} */ headerLines = emptyFn.slice(0, emptyFn.indexOf('return null;')).split('\\n').length - 1;\n        fnBody += \"\\n\" + ctx.toSourceMapGenerator(sourceUrl$$1, sourceUrl$$1, headerLines).toJsComment();\n    }\n    return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);\n}\n/**\n * @param {?} sourceUrl\n * @param {?} statements\n * @return {?}\n */\nfunction jitStatements(sourceUrl$$1, statements) {\n    var /** @type {?} */ converter = new JitEmitterVisitor();\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    converter.visitAllStatements(statements, ctx);\n    converter.createReturnStmt(ctx);\n    return evalExpression(sourceUrl$$1, ctx, converter.getArgs());\n}\nvar JitEmitterVisitor = (function (_super) {\n    __extends(JitEmitterVisitor, _super);\n    function JitEmitterVisitor() {\n        var _this = _super.apply(this, arguments) || this;\n        _this._evalArgNames = [];\n        _this._evalArgValues = [];\n        _this._evalExportedVars = [];\n        return _this;\n    }\n    /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.createReturnStmt = function (ctx) {\n        var /** @type {?} */ stmt = new ReturnStatement(new LiteralMapExpr(this._evalExportedVars.map(function (resultVar) { return new LiteralMapEntry(resultVar, variable(resultVar)); })));\n        stmt.visitStatement(this, ctx);\n    };\n    /**\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.getArgs = function () {\n        var /** @type {?} */ result = {};\n        for (var /** @type {?} */ i = 0; i < this._evalArgNames.length; i++) {\n            result[this._evalArgNames[i]] = this._evalArgValues[i];\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {\n        var /** @type {?} */ value = ast.value.runtime;\n        var /** @type {?} */ id = this._evalArgValues.indexOf(value);\n        if (id === -1) {\n            id = this._evalArgValues.length;\n            this._evalArgValues.push(value);\n            var /** @type {?} */ name = identifierName({ reference: ast.value.runtime }) || 'val';\n            this._evalArgNames.push(\"jit_\" + name + id);\n        }\n        ctx.print(ast, this._evalArgNames[id]);\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareVarStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareFunctionStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareClassStmt.call(this, stmt, ctx);\n    };\n    return JitEmitterVisitor;\n}(AbstractJsEmitterVisitor));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n *\n * \\@security When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar JitCompiler = (function () {\n    /**\n     * @param {?} _injector\n     * @param {?} _metadataResolver\n     * @param {?} _templateParser\n     * @param {?} _styleCompiler\n     * @param {?} _viewCompiler\n     * @param {?} _ngModuleCompiler\n     * @param {?} _summaryResolver\n     * @param {?} _compilerConfig\n     * @param {?} _console\n     */\n    function JitCompiler(_injector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _summaryResolver, _compilerConfig, _console) {\n        this._injector = _injector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._summaryResolver = _summaryResolver;\n        this._compilerConfig = _compilerConfig;\n        this._console = _console;\n        this._compiledTemplateCache = new Map();\n        this._compiledHostTemplateCache = new Map();\n        this._compiledDirectiveWrapperCache = new Map();\n        this._compiledNgModuleCache = new Map();\n        this._sharedStylesheetCount = 0;\n    }\n    Object.defineProperty(JitCompiler.prototype, \"injector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleSync = function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndComponents(moduleType, true));\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAsync = function (moduleType) {\n        return Promise.resolve(this._compileModuleAndComponents(moduleType, false));\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndAllComponents(moduleType, true));\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n        return Promise.resolve(this._compileModuleAndAllComponents(moduleType, false));\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    JitCompiler.prototype.getNgContentSelectors = function (component) {\n        this._console.warn('Compiler.getNgContentSelectors is deprecated. Use ComponentFactory.ngContentSelectors instead!');\n        var /** @type {?} */ template = this._compiledTemplateCache.get(component);\n        if (!template) {\n            throw new Error(\"The component \" + _angular_core.Éµstringify(component) + \" is not yet compiled!\");\n        }\n        return ((template.compMeta.template)).ngContentSelectors;\n    };\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    JitCompiler.prototype.getComponentFactory = function (component) {\n        var /** @type {?} */ summary = this._metadataResolver.getDirectiveSummary(component);\n        return (summary.componentFactory);\n    };\n    /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    JitCompiler.prototype.loadAotSummaries = function (summaries) {\n        var _this = this;\n        this.clearCache();\n        flattenSummaries(summaries).forEach(function (summary) {\n            _this._summaryResolver.addSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n        });\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    JitCompiler.prototype.hasAotSummary = function (ref) { return !!this._summaryResolver.resolveSummary(ref); };\n    /**\n     * @param {?} ids\n     * @return {?}\n     */\n    JitCompiler.prototype._filterJitIdentifiers = function (ids) {\n        var _this = this;\n        return ids.map(function (mod) { return mod.reference; }).filter(function (ref) { return !_this.hasAotSummary(ref); });\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndComponents = function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            _this._compileComponents(moduleType, null);\n            return _this._compileModule(moduleType);\n        });\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndAllComponents = function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            var /** @type {?} */ componentFactories = [];\n            _this._compileComponents(moduleType, componentFactories);\n            return new _angular_core.ModuleWithComponentFactories(_this._compileModule(moduleType), componentFactories);\n        });\n    };\n    /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._loadModules = function (mainModule, isSync) {\n        var _this = this;\n        var /** @type {?} */ loading = [];\n        var /** @type {?} */ mainNgModule = ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        // Note: for runtime compilation, we want to transitively compile all modules,\n        // so we also need to load the declared directives / pipes for all nested modules.\n        this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach(function (nestedNgModule) {\n            // getNgModuleMetadata only returns null if the value passed in is not an NgModule\n            var /** @type {?} */ moduleMeta = ((_this._metadataResolver.getNgModuleMetadata(nestedNgModule)));\n            _this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach(function (ref) {\n                var /** @type {?} */ promise = _this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference, ref, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            _this._filterJitIdentifiers(moduleMeta.declaredPipes)\n                .forEach(function (ref) { return _this._metadataResolver.getOrLoadPipeMetadata(ref); });\n        });\n        return SyncAsync.all(loading);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModule = function (moduleType) {\n        var _this = this;\n        var /** @type {?} */ ngModuleFactory = ((this._compiledNgModuleCache.get(moduleType)));\n        if (!ngModuleFactory) {\n            var /** @type {?} */ moduleMeta_1 = ((this._metadataResolver.getNgModuleMetadata(moduleType)));\n            // Always provide a bound Compiler\n            var /** @type {?} */ extraProviders = [this._metadataResolver.getProviderMetadata(new ProviderMeta(_angular_core.Compiler, { useFactory: function () { return new ModuleBoundCompiler(_this, moduleMeta_1.type.reference); } }))];\n            var /** @type {?} */ outputCtx = createOutputContext();\n            var /** @type {?} */ compileResult = this._ngModuleCompiler.compile(outputCtx, moduleMeta_1, extraProviders);\n            if (!this._compilerConfig.useJit) {\n                ngModuleFactory =\n                    interpretStatements(outputCtx.statements)[compileResult.ngModuleFactoryVar];\n            }\n            else {\n                ngModuleFactory = jitStatements(ngModuleJitUrl(moduleMeta_1), outputCtx.statements)[compileResult.ngModuleFactoryVar];\n            }\n            this._compiledNgModuleCache.set(moduleMeta_1.type.reference, ngModuleFactory);\n        }\n        return ngModuleFactory;\n    };\n    /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    JitCompiler.prototype._compileComponents = function (mainModule, allComponentFactories) {\n        var _this = this;\n        var /** @type {?} */ ngModule = ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        var /** @type {?} */ moduleByJitDirective = new Map();\n        var /** @type {?} */ templates = new Set();\n        var /** @type {?} */ transJitModules = this._filterJitIdentifiers(ngModule.transitiveModule.modules);\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                moduleByJitDirective.set(dirRef, localModuleMeta);\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    templates.add(_this._createCompiledTemplate(dirMeta, localModuleMeta));\n                    if (allComponentFactories) {\n                        var /** @type {?} */ template = _this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n                        templates.add(template);\n                        allComponentFactories.push(/** @type {?} */ (dirMeta.componentFactory));\n                    }\n                }\n            });\n        });\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    dirMeta.entryComponents.forEach(function (entryComponentType) {\n                        var /** @type {?} */ moduleMeta = ((moduleByJitDirective.get(entryComponentType.componentType)));\n                        templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                    });\n                }\n            });\n            localModuleMeta.entryComponents.forEach(function (entryComponentType) {\n                if (!_this.hasAotSummary(entryComponentType.componentType.reference)) {\n                    var /** @type {?} */ moduleMeta = ((moduleByJitDirective.get(entryComponentType.componentType)));\n                    templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                }\n            });\n        });\n        templates.forEach(function (template) { return _this._compileTemplate(template); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCacheFor = function (type) {\n        this._compiledNgModuleCache.delete(type);\n        this._metadataResolver.clearCacheFor(type);\n        this._compiledHostTemplateCache.delete(type);\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(type);\n        if (compiledTemplate) {\n            this._compiledTemplateCache.delete(type);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCache = function () {\n        this._metadataResolver.clearCache();\n        this._compiledTemplateCache.clear();\n        this._compiledHostTemplateCache.clear();\n        this._compiledNgModuleCache.clear();\n    };\n    /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledHostTemplate = function (compType, ngModule) {\n        if (!ngModule) {\n            throw new Error(\"Component \" + _angular_core.Éµstringify(compType) + \" is not part of any NgModule or the module has not been imported into your module.\");\n        }\n        var /** @type {?} */ compiledTemplate = this._compiledHostTemplateCache.get(compType);\n        if (!compiledTemplate) {\n            var /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n            assertComponent(compMeta);\n            var /** @type {?} */ componentFactory = (compMeta.componentFactory);\n            var /** @type {?} */ hostClass = this._metadataResolver.getHostComponentType(compType);\n            var /** @type {?} */ hostMeta = createHostComponentMeta(hostClass, compMeta, /** @type {?} */ (_angular_core.ÉµgetComponentViewDefinitionFactory(componentFactory)));\n            compiledTemplate =\n                new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n            this._compiledHostTemplateCache.set(compType, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledTemplate = function (compMeta, ngModule) {\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n        if (!compiledTemplate) {\n            assertComponent(compMeta);\n            compiledTemplate = new CompiledTemplate(false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n            this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} template\n     * @return {?}\n     */\n    JitCompiler.prototype._compileTemplate = function (template) {\n        var _this = this;\n        if (template.isCompiled) {\n            return;\n        }\n        var /** @type {?} */ compMeta = template.compMeta;\n        var /** @type {?} */ externalStylesheetsByModuleUrl = new Map();\n        var /** @type {?} */ outputContext = createOutputContext();\n        var /** @type {?} */ componentStylesheet = this._styleCompiler.compileComponent(outputContext, compMeta); /** @type {?} */\n        ((compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n            var /** @type {?} */ compiledStylesheet = _this._styleCompiler.compileStyles(createOutputContext(), compMeta, stylesheetMeta);\n            externalStylesheetsByModuleUrl.set(/** @type {?} */ ((stylesheetMeta.moduleUrl)), compiledStylesheet);\n        });\n        this._resolveStylesCompileResult(componentStylesheet, externalStylesheetsByModuleUrl);\n        var /** @type {?} */ directives = template.directives.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = template.ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var _a = this._templateParser.parse(compMeta, /** @type {?} */ ((((compMeta.template)).template)), directives, pipes, template.ngModule.schemas, templateSourceUrl(template.ngModule.type, template.compMeta, /** @type {?} */ ((template.compMeta.template)))), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ compileResult = this._viewCompiler.compileComponent(outputContext, compMeta, parsedTemplate, variable(componentStylesheet.stylesVar), usedPipes);\n        var /** @type {?} */ evalResult;\n        if (!this._compilerConfig.useJit) {\n            evalResult = interpretStatements(outputContext.statements);\n        }\n        else {\n            evalResult = jitStatements(templateJitUrl(template.ngModule.type, template.compMeta), outputContext.statements);\n        }\n        var /** @type {?} */ viewClass = evalResult[compileResult.viewClassVar];\n        var /** @type {?} */ rendererType = evalResult[compileResult.rendererTypeVar];\n        template.compiled(viewClass, rendererType);\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveStylesCompileResult = function (result, externalStylesheetsByModuleUrl) {\n        var _this = this;\n        result.dependencies.forEach(function (dep, i) {\n            var /** @type {?} */ nestedCompileResult = ((externalStylesheetsByModuleUrl.get(dep.moduleUrl)));\n            var /** @type {?} */ nestedStylesArr = _this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n            dep.setValue(nestedStylesArr);\n        });\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveAndEvalStylesCompileResult = function (result, externalStylesheetsByModuleUrl) {\n        this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n        if (!this._compilerConfig.useJit) {\n            return interpretStatements(result.outputCtx.statements)[result.stylesVar];\n        }\n        else {\n            return jitStatements(sharedStylesheetJitUrl(result.meta, this._sharedStylesheetCount++), result.outputCtx.statements)[result.stylesVar];\n        }\n    };\n    return JitCompiler;\n}());\nJitCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nJitCompiler.ctorParameters = function () { return [\n    { type: _angular_core.Injector, },\n    { type: CompileMetadataResolver, },\n    { type: TemplateParser, },\n    { type: StyleCompiler, },\n    { type: ViewCompiler, },\n    { type: NgModuleCompiler, },\n    { type: SummaryResolver, },\n    { type: CompilerConfig, },\n    { type: _angular_core.ÉµConsole, },\n]; };\nvar CompiledTemplate = (function () {\n    /**\n     * @param {?} isHost\n     * @param {?} compType\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directives\n     */\n    function CompiledTemplate(isHost, compType, compMeta, ngModule, directives) {\n        this.isHost = isHost;\n        this.compType = compType;\n        this.compMeta = compMeta;\n        this.ngModule = ngModule;\n        this.directives = directives;\n        this._viewClass = ((null));\n        this.isCompiled = false;\n    }\n    /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    CompiledTemplate.prototype.compiled = function (viewClass, rendererType) {\n        this._viewClass = viewClass;\n        ((this.compMeta.componentViewType)).setDelegate(viewClass);\n        for (var /** @type {?} */ prop in rendererType) {\n            ((this.compMeta.rendererType))[prop] = rendererType[prop];\n        }\n        this.isCompiled = true;\n    };\n    return CompiledTemplate;\n}());\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction assertComponent(meta) {\n    if (!meta.isComponent) {\n        throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n    }\n}\n/**\n * Implements `Compiler` by delegating to the JitCompiler using a known module.\n */\nvar ModuleBoundCompiler = (function () {\n    /**\n     * @param {?} _delegate\n     * @param {?} _ngModule\n     */\n    function ModuleBoundCompiler(_delegate, _ngModule) {\n        this._delegate = _delegate;\n        this._ngModule = _ngModule;\n    }\n    Object.defineProperty(ModuleBoundCompiler.prototype, \"_injector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._delegate.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.compileModuleSync = function (moduleType) {\n        return this._delegate.compileModuleSync(moduleType);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.compileModuleAsync = function (moduleType) {\n        return this._delegate.compileModuleAsync(moduleType);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n        return this._delegate.compileModuleAndAllComponentsSync(moduleType);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n        return this._delegate.compileModuleAndAllComponentsAsync(moduleType);\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.getNgContentSelectors = function (component) {\n        return this._delegate.getNgContentSelectors(component);\n    };\n    /**\n     * Clears all caches\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.clearCache = function () { this._delegate.clearCache(); };\n    /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.clearCacheFor = function (type) { this._delegate.clearCacheFor(type); };\n    return ModuleBoundCompiler;\n}());\n/**\n * @param {?} fn\n * @param {?=} out\n * @return {?}\n */\nfunction flattenSummaries(fn$$1, out) {\n    if (out === void 0) { out = []; }\n    fn$$1().forEach(function (entry) {\n        if (typeof entry === 'function') {\n            flattenSummaries(entry, out);\n        }\n        else {\n            out.push(entry);\n        }\n    });\n    return out;\n}\n/**\n * @return {?}\n */\nfunction createOutputContext() {\n    var /** @type {?} */ importExpr$$1 = function (symbol) { return importExpr({ name: identifierName(symbol), moduleName: null, runtime: symbol }); };\n    return { statements: [], genFilePath: '', importExpr: importExpr$$1 };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for message extracted from the templates.\n */\nvar MessageBundle = (function () {\n    /**\n     * @param {?} _htmlParser\n     * @param {?} _implicitTags\n     * @param {?} _implicitAttrs\n     * @param {?=} _locale\n     */\n    function MessageBundle(_htmlParser, _implicitTags, _implicitAttrs, _locale) {\n        if (_locale === void 0) { _locale = null; }\n        this._htmlParser = _htmlParser;\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n        this._locale = _locale;\n        this._messages = [];\n    }\n    /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    MessageBundle.prototype.updateFromTemplate = function (html, url, interpolationConfig) {\n        var /** @type {?} */ htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n        if (htmlParserResult.errors.length) {\n            return htmlParserResult.errors;\n        }\n        var /** @type {?} */ i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n        if (i18nParserResult.errors.length) {\n            return i18nParserResult.errors;\n        }\n        (_a = this._messages).push.apply(_a, i18nParserResult.messages);\n        return [];\n        var _a;\n    };\n    /**\n     * @return {?}\n     */\n    MessageBundle.prototype.getMessages = function () { return this._messages; };\n    /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    MessageBundle.prototype.write = function (serializer, filterSources) {\n        var /** @type {?} */ messages = {};\n        var /** @type {?} */ mapperVisitor = new MapPlaceholderNames();\n        // Deduplicate messages based on their ID\n        this._messages.forEach(function (message) {\n            var /** @type {?} */ id = serializer.digest(message);\n            if (!messages.hasOwnProperty(id)) {\n                messages[id] = message;\n            }\n            else {\n                (_a = messages[id].sources).push.apply(_a, message.sources);\n            }\n            var _a;\n        });\n        // Transform placeholder names using the serializer mapping\n        var /** @type {?} */ msgList = Object.keys(messages).map(function (id) {\n            var /** @type {?} */ mapper = serializer.createNameMapper(messages[id]);\n            var /** @type {?} */ src = messages[id];\n            var /** @type {?} */ nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n            var /** @type {?} */ transformedMessage = new Message(nodes, {}, {}, src.meaning, src.description, id);\n            transformedMessage.sources = src.sources;\n            if (filterSources) {\n                transformedMessage.sources.forEach(function (source) { return source.filePath = filterSources(source.filePath); });\n            }\n            return transformedMessage;\n        });\n        return serializer.write(msgList, this._locale);\n    };\n    return MessageBundle;\n}());\nvar MapPlaceholderNames = (function (_super) {\n    __extends(MapPlaceholderNames, _super);\n    function MapPlaceholderNames() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.convert = function (nodes, mapper) {\n        var _this = this;\n        return mapper ? nodes.map(function (n) { return n.visit(_this, mapper); }) : nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitTagPlaceholder = function (ph, mapper) {\n        var _this = this;\n        var /** @type {?} */ startName = ((mapper.toPublicName(ph.startName)));\n        var /** @type {?} */ closeName = ph.closeName ? ((mapper.toPublicName(ph.closeName))) : ph.closeName;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, mapper); });\n        return new TagPlaceholder(ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitPlaceholder = function (ph, mapper) {\n        return new Placeholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitIcuPlaceholder = function (ph, mapper) {\n        return new IcuPlaceholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    return MapPlaceholderNames;\n}(CloneVisitor));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extract i18n messages from source code\n */\nvar Extractor = (function () {\n    /**\n     * @param {?} host\n     * @param {?} staticSymbolResolver\n     * @param {?} messageBundle\n     * @param {?} metadataResolver\n     */\n    function Extractor(host, staticSymbolResolver, messageBundle, metadataResolver) {\n        this.host = host;\n        this.staticSymbolResolver = staticSymbolResolver;\n        this.messageBundle = messageBundle;\n        this.metadataResolver = metadataResolver;\n    }\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    Extractor.prototype.extract = function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ programSymbols = extractProgramSymbols(this.staticSymbolResolver, rootFiles, this.host);\n        var _a = analyzeAndValidateNgModules(programSymbols, this.host, this.metadataResolver), files = _a.files, ngModules = _a.ngModules;\n        return Promise\n            .all(ngModules.map(function (ngModule) { return _this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false); }))\n            .then(function () {\n            var /** @type {?} */ errors = [];\n            files.forEach(function (file) {\n                var /** @type {?} */ compMetas = [];\n                file.directives.forEach(function (directiveType) {\n                    var /** @type {?} */ dirMeta = _this.metadataResolver.getDirectiveMetadata(directiveType);\n                    if (dirMeta && dirMeta.isComponent) {\n                        compMetas.push(dirMeta);\n                    }\n                });\n                compMetas.forEach(function (compMeta) {\n                    var /** @type {?} */ html = ((((compMeta.template)).template));\n                    var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                    errors.push.apply(errors, ((_this.messageBundle.updateFromTemplate(html, file.srcUrl, interpolationConfig))));\n                });\n            });\n            if (errors.length) {\n                throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n            }\n            return _this.messageBundle;\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    Extractor.create = function (host, locale) {\n        var /** @type {?} */ htmlParser = new I18NHtmlParser(new HtmlParser());\n        var /** @type {?} */ urlResolver = createOfflineCompileUrlResolver();\n        var /** @type {?} */ symbolCache = new StaticSymbolCache();\n        var /** @type {?} */ summaryResolver = new AotSummaryResolver(host, symbolCache);\n        var /** @type {?} */ staticSymbolResolver = new StaticSymbolResolver(host, symbolCache, summaryResolver);\n        var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, staticSymbolResolver);\n        var /** @type {?} */ config = new CompilerConfig({ defaultEncapsulation: _angular_core.ViewEncapsulation.Emulated, useJit: false });\n        var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return host.loadResource(url); } }, urlResolver, htmlParser, config);\n        var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n        var /** @type {?} */ resolver = new CompileMetadataResolver(config, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, new _angular_core.ÉµConsole(), symbolCache, staticReflector);\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        var /** @type {?} */ extractor = new Extractor(host, staticSymbolResolver, messageBundle, resolver);\n        return { extractor: extractor, staticReflector: staticReflector };\n    };\n    return Extractor;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar JitReflector = (function () {\n    function JitReflector() {\n        this.reflectionCapabilities = new _angular_core.ÉµReflectionCapabilities();\n    }\n    /**\n     * @param {?} type\n     * @param {?} cmpMetadata\n     * @return {?}\n     */\n    JitReflector.prototype.componentModuleUrl = function (type, cmpMetadata) {\n        var /** @type {?} */ moduleId = cmpMetadata.moduleId;\n        if (typeof moduleId === 'string') {\n            var /** @type {?} */ scheme = getUrlScheme(moduleId);\n            return scheme ? moduleId : \"package:\" + moduleId + MODULE_SUFFIX;\n        }\n        else if (moduleId !== null && moduleId !== void 0) {\n            throw syntaxError(\"moduleId should be a string in \\\"\" + _angular_core.Éµstringify(type) + \"\\\". See https://goo.gl/wIDDiL for more information.\\n\" +\n                \"If you're using Webpack you should inline the template and the styles, see https://goo.gl/X2J8zc.\");\n        }\n        return \"./\" + _angular_core.Éµstringify(type);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    JitReflector.prototype.parameters = function (typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    JitReflector.prototype.annotations = function (typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    JitReflector.prototype.propMetadata = function (typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    JitReflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    JitReflector.prototype.resolveExternalReference = function (ref) { return ref.runtime; };\n    return JitReflector;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _NO_RESOURCE_LOADER = {\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    get: function (url) {\n        throw new Error(\"No ResourceLoader implementation has been provided. Can't read the url \\\"\" + url + \"\\\"\");\n    }\n};\nvar baseHtmlParser = new _angular_core.InjectionToken('HtmlParser');\n/**\n * A set of providers that provide `JitCompiler` and its dependencies to use for\n * template compilation.\n */\nvar COMPILER_PROVIDERS = [\n    { provide: CompileReflector, useValue: new JitReflector() },\n    { provide: ResourceLoader, useValue: _NO_RESOURCE_LOADER },\n    JitSummaryResolver,\n    { provide: SummaryResolver, useExisting: JitSummaryResolver },\n    _angular_core.ÉµConsole,\n    Lexer,\n    Parser,\n    {\n        provide: baseHtmlParser,\n        useClass: HtmlParser,\n    },\n    {\n        provide: I18NHtmlParser,\n        useFactory: function (parser, translations, format, config, console) { return new I18NHtmlParser(parser, translations, format, config.missingTranslation, console); },\n        deps: [\n            baseHtmlParser,\n            [new _angular_core.Optional(), new _angular_core.Inject(_angular_core.TRANSLATIONS)],\n            [new _angular_core.Optional(), new _angular_core.Inject(_angular_core.TRANSLATIONS_FORMAT)],\n            [CompilerConfig],\n            [_angular_core.ÉµConsole],\n        ]\n    },\n    {\n        provide: HtmlParser,\n        useExisting: I18NHtmlParser,\n    },\n    TemplateParser,\n    DirectiveNormalizer,\n    CompileMetadataResolver,\n    DEFAULT_PACKAGE_URL_PROVIDER,\n    StyleCompiler,\n    ViewCompiler,\n    NgModuleCompiler,\n    { provide: CompilerConfig, useValue: new CompilerConfig() },\n    JitCompiler,\n    { provide: _angular_core.Compiler, useExisting: JitCompiler },\n    DomElementSchemaRegistry,\n    { provide: ElementSchemaRegistry, useExisting: DomElementSchemaRegistry },\n    UrlResolver,\n    DirectiveResolver,\n    PipeResolver,\n    NgModuleResolver,\n];\nvar JitCompilerFactory = (function () {\n    /**\n     * @param {?} defaultOptions\n     */\n    function JitCompilerFactory(defaultOptions) {\n        var compilerOptions = {\n            useDebug: _angular_core.isDevMode(),\n            useJit: true,\n            defaultEncapsulation: _angular_core.ViewEncapsulation.Emulated,\n            missingTranslation: _angular_core.MissingTranslationStrategy.Warning,\n            enableLegacyTemplate: true,\n        };\n        this._defaultOptions = [compilerOptions].concat(defaultOptions);\n    }\n    /**\n     * @param {?=} options\n     * @return {?}\n     */\n    JitCompilerFactory.prototype.createCompiler = function (options) {\n        if (options === void 0) { options = []; }\n        var /** @type {?} */ opts = _mergeOptions(this._defaultOptions.concat(options));\n        var /** @type {?} */ injector = _angular_core.ReflectiveInjector.resolveAndCreate([\n            COMPILER_PROVIDERS, {\n                provide: CompilerConfig,\n                useFactory: function () {\n                    return new CompilerConfig({\n                        // let explicit values from the compiler options overwrite options\n                        // from the app providers\n                        useJit: opts.useJit,\n                        // let explicit values from the compiler options overwrite options\n                        // from the app providers\n                        defaultEncapsulation: opts.defaultEncapsulation,\n                        missingTranslation: opts.missingTranslation,\n                        enableLegacyTemplate: opts.enableLegacyTemplate,\n                    });\n                },\n                deps: []\n            }, /** @type {?} */ ((opts.providers))\n        ]);\n        return injector.get(_angular_core.Compiler);\n    };\n    return JitCompilerFactory;\n}());\nJitCompilerFactory.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nJitCompilerFactory.ctorParameters = function () { return [\n    { type: Array, decorators: [{ type: _angular_core.Inject, args: [_angular_core.COMPILER_OPTIONS,] },] },\n]; };\n/**\n * A platform that included corePlatform and the compiler.\n *\n * \\@experimental\n */\nvar platformCoreDynamic = _angular_core.createPlatformFactory(_angular_core.platformCore, 'coreDynamic', [\n    { provide: _angular_core.COMPILER_OPTIONS, useValue: {}, multi: true },\n    { provide: _angular_core.CompilerFactory, useClass: JitCompilerFactory },\n]);\n/**\n * @param {?} optionsArr\n * @return {?}\n */\nfunction _mergeOptions(optionsArr) {\n    return {\n        useJit: _lastDefined(optionsArr.map(function (options) { return options.useJit; })),\n        defaultEncapsulation: _lastDefined(optionsArr.map(function (options) { return options.defaultEncapsulation; })),\n        providers: _mergeArrays(optionsArr.map(function (options) { return ((options.providers)); })),\n        missingTranslation: _lastDefined(optionsArr.map(function (options) { return options.missingTranslation; })),\n    };\n}\n/**\n * @template T\n * @param {?} args\n * @return {?}\n */\nfunction _lastDefined(args) {\n    for (var /** @type {?} */ i = args.length - 1; i >= 0; i--) {\n        if (args[i] !== undefined) {\n            return args[i];\n        }\n    }\n    return undefined;\n}\n/**\n * @param {?} parts\n * @return {?}\n */\nfunction _mergeArrays(parts) {\n    var /** @type {?} */ result = [];\n    parts.forEach(function (part) { return part && result.push.apply(result, part); });\n    return result;\n}\n\nexports.VERSION = VERSION;\nexports.TEMPLATE_TRANSFORMS = TEMPLATE_TRANSFORMS;\nexports.CompilerConfig = CompilerConfig;\nexports.JitCompiler = JitCompiler;\nexports.DirectiveResolver = DirectiveResolver;\nexports.PipeResolver = PipeResolver;\nexports.NgModuleResolver = NgModuleResolver;\nexports.DEFAULT_INTERPOLATION_CONFIG = DEFAULT_INTERPOLATION_CONFIG;\nexports.InterpolationConfig = InterpolationConfig;\nexports.NgModuleCompiler = NgModuleCompiler;\nexports.ViewCompiler = ViewCompiler;\nexports.isSyntaxError = isSyntaxError;\nexports.syntaxError = syntaxError;\nexports.TextAst = TextAst;\nexports.BoundTextAst = BoundTextAst;\nexports.AttrAst = AttrAst;\nexports.BoundElementPropertyAst = BoundElementPropertyAst;\nexports.BoundEventAst = BoundEventAst;\nexports.ReferenceAst = ReferenceAst;\nexports.VariableAst = VariableAst;\nexports.ElementAst = ElementAst;\nexports.EmbeddedTemplateAst = EmbeddedTemplateAst;\nexports.BoundDirectivePropertyAst = BoundDirectivePropertyAst;\nexports.DirectiveAst = DirectiveAst;\nexports.ProviderAst = ProviderAst;\nexports.ProviderAstType = ProviderAstType;\nexports.NgContentAst = NgContentAst;\nexports.PropertyBindingType = PropertyBindingType;\nexports.NullTemplateVisitor = NullTemplateVisitor;\nexports.RecursiveTemplateAstVisitor = RecursiveTemplateAstVisitor;\nexports.templateVisitAll = templateVisitAll;\nexports.CompileAnimationEntryMetadata = CompileAnimationEntryMetadata;\nexports.CompileAnimationStateMetadata = CompileAnimationStateMetadata;\nexports.CompileAnimationStateDeclarationMetadata = CompileAnimationStateDeclarationMetadata;\nexports.CompileAnimationStateTransitionMetadata = CompileAnimationStateTransitionMetadata;\nexports.CompileAnimationMetadata = CompileAnimationMetadata;\nexports.CompileAnimationKeyframesSequenceMetadata = CompileAnimationKeyframesSequenceMetadata;\nexports.CompileAnimationStyleMetadata = CompileAnimationStyleMetadata;\nexports.CompileAnimationAnimateMetadata = CompileAnimationAnimateMetadata;\nexports.CompileAnimationWithStepsMetadata = CompileAnimationWithStepsMetadata;\nexports.CompileAnimationSequenceMetadata = CompileAnimationSequenceMetadata;\nexports.CompileAnimationGroupMetadata = CompileAnimationGroupMetadata;\nexports.identifierName = identifierName;\nexports.identifierModuleUrl = identifierModuleUrl;\nexports.viewClassName = viewClassName;\nexports.rendererTypeName = rendererTypeName;\nexports.hostViewClassName = hostViewClassName;\nexports.dirWrapperClassName = dirWrapperClassName;\nexports.componentFactoryName = componentFactoryName;\nexports.CompileSummaryKind = CompileSummaryKind;\nexports.tokenName = tokenName;\nexports.tokenReference = tokenReference;\nexports.CompileStylesheetMetadata = CompileStylesheetMetadata;\nexports.CompileTemplateMetadata = CompileTemplateMetadata;\nexports.CompileDirectiveMetadata = CompileDirectiveMetadata;\nexports.createHostComponentMeta = createHostComponentMeta;\nexports.CompilePipeMetadata = CompilePipeMetadata;\nexports.CompileNgModuleMetadata = CompileNgModuleMetadata;\nexports.TransitiveCompileNgModuleMetadata = TransitiveCompileNgModuleMetadata;\nexports.ProviderMeta = ProviderMeta;\nexports.flatten = flatten;\nexports.sourceUrl = sourceUrl;\nexports.templateSourceUrl = templateSourceUrl;\nexports.sharedStylesheetJitUrl = sharedStylesheetJitUrl;\nexports.ngModuleJitUrl = ngModuleJitUrl;\nexports.templateJitUrl = templateJitUrl;\nexports.createAotCompiler = createAotCompiler;\nexports.AotCompiler = AotCompiler;\nexports.analyzeNgModules = analyzeNgModules;\nexports.analyzeAndValidateNgModules = analyzeAndValidateNgModules;\nexports.extractProgramSymbols = extractProgramSymbols;\nexports.GeneratedFile = GeneratedFile;\nexports.toTypeScript = toTypeScript;\nexports.StaticReflector = StaticReflector;\nexports.StaticSymbol = StaticSymbol;\nexports.StaticSymbolCache = StaticSymbolCache;\nexports.ResolvedStaticSymbol = ResolvedStaticSymbol;\nexports.StaticSymbolResolver = StaticSymbolResolver;\nexports.unescapeIdentifier = unescapeIdentifier;\nexports.AotSummaryResolver = AotSummaryResolver;\nexports.AstPath = AstPath;\nexports.SummaryResolver = SummaryResolver;\nexports.JitSummaryResolver = JitSummaryResolver;\nexports.COMPILER_PROVIDERS = COMPILER_PROVIDERS;\nexports.JitCompilerFactory = JitCompilerFactory;\nexports.platformCoreDynamic = platformCoreDynamic;\nexports.JitReflector = JitReflector;\nexports.CompileReflector = CompileReflector;\nexports.createUrlResolverWithoutPackagePrefix = createUrlResolverWithoutPackagePrefix;\nexports.createOfflineCompileUrlResolver = createOfflineCompileUrlResolver;\nexports.DEFAULT_PACKAGE_URL_PROVIDER = DEFAULT_PACKAGE_URL_PROVIDER;\nexports.UrlResolver = UrlResolver;\nexports.getUrlScheme = getUrlScheme;\nexports.ResourceLoader = ResourceLoader;\nexports.ElementSchemaRegistry = ElementSchemaRegistry;\nexports.Extractor = Extractor;\nexports.I18NHtmlParser = I18NHtmlParser;\nexports.MessageBundle = MessageBundle;\nexports.Serializer = Serializer;\nexports.Xliff = Xliff;\nexports.Xliff2 = Xliff2;\nexports.Xmb = Xmb;\nexports.Xtb = Xtb;\nexports.DirectiveNormalizer = DirectiveNormalizer;\nexports.ParserError = ParserError;\nexports.ParseSpan = ParseSpan;\nexports.AST = AST;\nexports.Quote = Quote;\nexports.EmptyExpr = EmptyExpr;\nexports.ImplicitReceiver = ImplicitReceiver;\nexports.Chain = Chain;\nexports.Conditional = Conditional;\nexports.PropertyRead = PropertyRead;\nexports.PropertyWrite = PropertyWrite;\nexports.SafePropertyRead = SafePropertyRead;\nexports.KeyedRead = KeyedRead;\nexports.KeyedWrite = KeyedWrite;\nexports.BindingPipe = BindingPipe;\nexports.LiteralPrimitive = LiteralPrimitive;\nexports.LiteralArray = LiteralArray;\nexports.LiteralMap = LiteralMap;\nexports.Interpolation = Interpolation;\nexports.Binary = Binary;\nexports.PrefixNot = PrefixNot;\nexports.NonNullAssert = NonNullAssert;\nexports.MethodCall = MethodCall;\nexports.SafeMethodCall = SafeMethodCall;\nexports.FunctionCall = FunctionCall;\nexports.ASTWithSource = ASTWithSource;\nexports.TemplateBinding = TemplateBinding;\nexports.NullAstVisitor = NullAstVisitor;\nexports.RecursiveAstVisitor = RecursiveAstVisitor;\nexports.AstTransformer = AstTransformer;\nexports.visitAstChildren = visitAstChildren;\nexports.TokenType = TokenType;\nexports.Lexer = Lexer;\nexports.Token = Token;\nexports.EOF = EOF;\nexports.isIdentifier = isIdentifier;\nexports.isQuote = isQuote;\nexports.SplitInterpolation = SplitInterpolation;\nexports.TemplateBindingParseResult = TemplateBindingParseResult;\nexports.Parser = Parser;\nexports._ParseAST = _ParseAST;\nexports.ERROR_COLLECTOR_TOKEN = ERROR_COLLECTOR_TOKEN;\nexports.CompileMetadataResolver = CompileMetadataResolver;\nexports.Text = Text;\nexports.Expansion = Expansion;\nexports.ExpansionCase = ExpansionCase;\nexports.Attribute = Attribute$1;\nexports.Element = Element;\nexports.Comment = Comment;\nexports.visitAll = visitAll;\nexports.RecursiveVisitor = RecursiveVisitor;\nexports.findNode = findNode;\nexports.ParseTreeResult = ParseTreeResult;\nexports.TreeError = TreeError;\nexports.HtmlParser = HtmlParser;\nexports.HtmlTagDefinition = HtmlTagDefinition;\nexports.getHtmlTagDefinition = getHtmlTagDefinition;\nexports.TagContentType = TagContentType;\nexports.splitNsName = splitNsName;\nexports.isNgContainer = isNgContainer;\nexports.isNgContent = isNgContent;\nexports.isNgTemplate = isNgTemplate;\nexports.getNsPrefix = getNsPrefix;\nexports.mergeNsAndName = mergeNsAndName;\nexports.NAMED_ENTITIES = NAMED_ENTITIES;\nexports.debugOutputAstAsTypeScript = debugOutputAstAsTypeScript;\nexports.TypeScriptEmitter = TypeScriptEmitter;\nexports.ParseLocation = ParseLocation;\nexports.ParseSourceFile = ParseSourceFile;\nexports.ParseSourceSpan = ParseSourceSpan;\nexports.ParseErrorLevel = ParseErrorLevel;\nexports.ParseError = ParseError;\nexports.typeSourceSpan = typeSourceSpan;\nexports.DomElementSchemaRegistry = DomElementSchemaRegistry;\nexports.CssSelector = CssSelector;\nexports.SelectorMatcher = SelectorMatcher;\nexports.SelectorListContext = SelectorListContext;\nexports.SelectorContext = SelectorContext;\nexports.StylesCompileDependency = StylesCompileDependency;\nexports.CompiledStylesheet = CompiledStylesheet;\nexports.StyleCompiler = StyleCompiler;\nexports.TemplateParseError = TemplateParseError;\nexports.TemplateParseResult = TemplateParseResult;\nexports.TemplateParser = TemplateParser;\nexports.splitClasses = splitClasses;\nexports.createElementCssSelector = createElementCssSelector;\nexports.removeSummaryDuplicates = removeSummaryDuplicates;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=compiler.umd.js.map\n"]}