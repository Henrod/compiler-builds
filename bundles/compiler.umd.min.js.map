{"version":3,"sources":["/home/travis/build/angular/angular/dist/packages-dist/compiler/bundles/compiler.umd.js"],"names":["global","factory","exports","module","define","amd","ng","compiler","this","__extends","d","b","__","constructor","extendStatics","prototype","Object","create","Inject","Attribute","Query","Directive","Component","Pipe","Input","Output","HostBinding","HostListener","NgModule","ModuleWithProviders","SchemaMetadata","MetadataFactory","makeMetadataFactory","name","props","args","_i","arguments","length","values","apply","__assign","ngMetadataName","isTypeOf","obj","dashCaseToCamelCase","input","replace","DASH_CASE_REGEXP","m","toUpperCase","splitAtColon","defaultValues","_splitAt","splitAtPeriod","character","characterIndex","indexOf","slice","trim","visitValue","value","visitor","context","Array","isArray","visitArray","isStrictStringMap","visitStringMap","visitPrimitive","visitOther","isDefined","val","undefined","noUndefined","syntaxError","msg","parseErrors","error","Error","ERROR_SYNTAX_ERROR","ERROR_PARSE_ERRORS","isSyntaxError","getParseErrors","escapeRegExp","s","getPrototypeOf","STRING_MAP_PROTO","utf8Encode","str","encoded","index","codePoint","charCodeAt","low","String","fromCharCode","stringify","token","map","join","overriddenName","res","toString","newLineIndex","substring","resolveForwardRef","type","hasOwnProperty","isPromise","then","templateVisitAll","asts","result","visit","ast","forEach","astResult","push","preserveWhitespacesDefault","preserveWhitespacesOption","defaultSetting","_sanitizeIdentifier","identifierName","compileIdentifier","reference","ref","StaticSymbol","identifier","_anonymousTypeIndex","identifierModuleUrl","filePath","viewClassName","compType","embeddedTemplateIndex","rendererTypeName","hostViewClassName","componentFactoryName","tokenName","tokenReference","_normalizeArray","flatten","list","reduce","flat","item","flatItem","concat","sourceUrl","url","templateSourceUrl","ngModuleType","compMeta","templateMeta","isInline","sharedStylesheetJitUrl","meta","id","pathParts","split","ngModuleJitUrl","moduleMeta","templateJitUrl","visitAll","nodes","spanOf","start","sourceSpan","offset","end","Element","endSourceSpan","children","findNode","position","path","_super","class_1","span","RecursiveVisitor","AstPath","assertArrayOfStrings","i","assertInterpolationSymbols","start_1","end_1","INTERPOLATION_BLACKLIST_REGEXPS","regexp","test","isStyleUrlResolvable","schemeMatch","match","URL_WITH_SCHEMA_REGEXP","extractStyleUrls","resolver","baseUrl","cssText","foundUrls","modifiedCssText","CSS_STRIPPABLE_COMMENT_REGEXP","CSS_IMPORT_REGEXP","resolve","StyleWithImports","splitNsName","elementName","colonIndex","isNgContainer","tagName","isNgContent","isNgTemplate","getNsPrefix","fullName","mergeNsAndName","prefix","localName","preparseElement","selectAttr","hrefAttr","relAttr","nonBindable","projectAs","attrs","attr","lcAttrName","toLowerCase","NG_CONTENT_SELECT_ATTR","LINK_STYLE_HREF_ATTR","LINK_STYLE_REL_ATTR","NG_NON_BINDABLE_ATTR","NG_PROJECT_AS","normalizeNgContentSelect","nodeName","PreparsedElementType","OTHER","NG_CONTENT","STYLE_ELEMENT","STYLE","SCRIPT_ELEMENT","SCRIPT","LINK_ELEMENT","LINK_STYLE_REL_VALUE","STYLESHEET","PreparsedElement","isDirectiveMetadata","createDirective","createComponent","findLast","arr","condition","isWhitespace","code","$TAB","$SPACE","$NBSP","isDigit","$0","$9","isAsciiLetter","$a","$z","$A","$Z","isAsciiHexDigit","$f","$F","newCharacterToken","Token","TokenType","Character","newIdentifierToken","text","Identifier","newKeywordToken","Keyword","newOperatorToken","Operator","newStringToken","newNumberToken","n","Number","newErrorToken","message","isIdentifierStart","$_","$$","isIdentifier","scanner","_Scanner","peek","advance","$EOF","isIdentifierPart","isExponentStart","$e","$E","isExponentSign","$MINUS","$PLUS","isQuote","$SQ","$DQ","$BT","unescape","$n","$LF","$FF","$r","$CR","$t","$v","$VTAB","parseIntAutoRadix","parseInt","isNaN","visitAstChildren","visitBinary","left","right","visitChain","expressions","visitConditional","trueExp","falseExp","visitFunctionCall","target","visitImplicitReceiver","visitInterpolation","visitKeyedRead","key","visitKeyedWrite","visitLiteralArray","visitLiteralMap","visitLiteralPrimitive","visitMethodCall","receiver","visitPipe","exp","visitPrefixNot","expression","visitNonNullAssert","visitPropertyRead","visitPropertyWrite","visitQuote","visitSafeMethodCall","visitSafePropertyRead","_createInterpolateRegExp","config","pattern","RegExp","typeSourceSpan","kind","moduleUrl","sourceFileName","sourceFile","ParseSourceFile","ParseSourceSpan","ParseLocation","tokenize","source","getTagDefinition","tokenizeExpansionForms","interpolationConfig","DEFAULT_INTERPOLATION_CONFIG","_Tokenizer","_unexpectedCharacterErrorMsg","charCode","_unknownEntityErrorMsg","entitySrc","isNotWhitespace","isNameEnd","$GT","$SLASH","$EQ","isPrefixEnd","isDigitEntityEnd","$SEMICOLON","isNamedEntityEnd","isExpansionFormStart","isInterpolationStart","$LBRACE","isExpansionCaseStart","compareCharCodeCaseInsensitive","code1","code2","toUpperCaseCharCode","mergeTextTokens","srcTokens","dstTokens","lastDstToken","TokenType$1","TEXT","parts","lastOnStack","stack","element","digest","sha1","serializeNodes","meaning","decimalDigest","_SerializerIgnoreIcuExpVisitor","computeMsgId","a","serializerVisitor","utf8","words32","stringToWords32","Endian","Big","len","w","_a","c","e","_b","h0","h1","h2","h3","h4","j","rol32","_c","fk","f","k","temp","add32","_d","_e","byteStringToHexString","words32ToByteString","fingerprint","hash32","hi","lo","him","lom","add64","rol64","byteStringToDecString","wordAt","Little","mix","sub32","add32to64","high","ah","al","bh","bl","carry","l","count","endian","byteAt","word","word32ToByteString","hex","decimal","toThePower","addBigInt","numberTimesBigInt","reverse","x","y","sum","Math","max","tmpSum","num","product","bToThePower","getHtmlTagDefinition","TAG_DEFINITIONS","_DEFAULT_TAG_DEFINITION","createI18nMessageFactory","_I18nVisitor","_expParser","description","toI18nMessage","_extractPlaceholderName","_CUSTOM_PH_EXP","extractMessages","implicitTags","implicitAttrs","_Visitor","extract","mergeTranslations","translations","merge","_isOpeningComment","Comment","startsWith","_isClosingComment","_getI18nAttr","p","find","_I18N_ATTR","_parseMessageMeta","i18n","idIndex","ID_SEPARATOR","descIndex","MEANING_SEPARATOR","meaningAndDesc","getXmlTagDefinition","_TAG_DEFINITION","serialize","node","_visitor","_escapeXml","_ESCAPED_CHARS","entry","getCtypeForTag","tag","getTypeForTag","digest$1","toPublicName","internalName","createLazyProperty","messages","valueFn","defineProperty","configurable","enumerable","get","set","_","createSerializer","format","Xmb","Xtb","Xliff2","Xliff","ngfactoryFilePath","forceSourceFile","urlWithSuffix","splitTypescriptSuffix","stripGeneratedFileSuffix","GENERATED_FILE","isGeneratedFile","endsWith","lastDot","lastIndexOf","summaryFileName","fileName","STRIP_SRC_FILE_SUFFIXES","summaryForJitFileName","stripSummaryForJitFileSuffix","JIT_SUMMARY_FILE","summaryForJitName","symbolName","stripSummaryForJitNameSuffix","JIT_SUMMARY_NAME","createTokenForReference","createTokenForExternalReference","reflector","resolveExternalReference","hasLifecycleHook","hook","getHookName","getAllLifecycleHooks","LIFECYCLE_HOOKS_VALUES","filter","LifecycleHooks","OnInit","OnDestroy","DoCheck","OnChanges","AfterContentInit","AfterContentChecked","AfterViewInit","AfterViewChecked","flattenArray","tree","out","dedupeArray","array","from","Set","flattenAndDedupeArray","isValidType","Type","extractIdentifiers","targetIdentifiers","_CompileValueConverter","stringifyType","componentStillLoadingError","ERROR_COMPONENT_TYPE","findReadVarNames","stmts","_ReadVarVisitor","visitAllStatements","varNames","collectExternalReferences","_FindExternalReferencesVisitor","externalReferences","applySourceSpanToStatementIfNeeded","stmt","transformer","_ApplySourceSpanTransformer","visitStatement","applySourceSpanToExpressionIfNeeded","expr","visitExpression","variable","ReadVarExpr","importExpr","typeParams","ExternalExpr","importType","typeModifiers","expressionType","ExpressionType","literalArr","LiteralArrayExpr","literalMap","LiteralMapExpr","LiteralMapEntry","quoted","not","NotExpr","assertNotNull","AssertNotNull","fn","params","body","FunctionExpr","literal","LiteralExpr","_transformProvider","provider","useExisting","useValue","deps","useClass","useFactory","multi","_transformProviderAst","eager","providers","ProviderAst","multiProvider","providerType","lifecycleHooks","_resolveProvidersFromDirectives","directives","targetErrors","providersByToken","Map","directive","_resolveProviders","isComponent","ProviderAstType","dir","PublicService","viewProviders","PrivateService","targetProvidersByToken","resolvedProvider","ProviderError","isUseValue","_getViewQueries","component","viewQueryId","viewQueries","query","_addQueryToTokenMap","queryId","_getContentQueries","contentQueryStartId","contentQueryId","contentQueries","directiveIndex","queries","selectors","convertValueToOutputAst","ctx","_ValueOutputAstTransformer","providerDef","providerAst","flags","lifecycleHook","lifecycleHookToNodeFlag","multiProviderDef","singleProviderDef","providerExpr","depsExpr","tokenExpr","convertDeps","providerIndex","dep","depIndex","paramName","allParams","FnParam","DYNAMIC_TYPE","allDepDefs","depDef","exprs","depExprs","diDeps","instantiate","callFn","ReturnStatement","INFERRED_TYPE","providerMeta","NULL_EXPR","tokenMeta","isValue","isSkipSelf","isOptional","nodeFlag","componentFactoryResolverProviderDef","entryComponents","entryComponentFactories","entryComponent","componentFactory","Identifiers","ComponentFactoryResolver","classMeta","NgModuleRef","CodegenComponentFactoryResolver","toBase64String","b64","i1","i2","i3","toBase64Digit","toBase64VLQ","digit","B64_DIGITS","escapeIdentifier","escapeDollar","alwaysQuote","_SINGLE_QUOTE_ESCAPE_STRING_RE","_LEGAL_IDENTIFIER_RE","_createIndent","_INDENT_WITH","debugOutputAstAsTypeScript","converter","_TsEmitterVisitor","EmitterVisitorContext","createRoot","Statement","Expression","Type$1","visitType","toSource","registerContext","specs","specs_1","spec","SECURITY_SCHEMA","_isPixelDimensionStyle","prop","stripComments","_commentRe","extractSourceMappingUrl","matcher","_sourceMappingUrlRe","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","_ruleRe","selector","content","suffix","contentPrefix","BLOCK_PLACEHOLDER","blocks","rule","CssRule","inputParts","_curlyRe","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","CLOSE_CURLY","OPEN_CURLY","StringWithEscapedBlocks","getStylesVarName","hasPreserveWhitespacesAttr","some","PRESERVE_WS_ATTR_NAME","replaceNgsp","NGSP_UNICODE","removeWhitespaces","htmlAstWithErrors","ParseTreeResult","WhitespaceVisitor","rootNodes","errors","expandNodes","expander","_Expander","ExpansionResult","isExpanded","_expandPluralForm","cases","PLURAL_CASES","ExpansionError","valueSourceSpan","expansionResult","Attribute$1","switchAttr","switchValue","switchValueSourceSpan","_expandDefaultForm","_isAnimationLabel","calcPossibleSecurityContexts","registry","propName","isAttribute","ctxs","CssSelector","parse","elementNames","allKnownElementNames","notElementNames","notSelectors","isElementSelector","possibleElementNames","has","securityContext","SecurityContext","NONE","sort","warnOnlyOnce","warnings","warningCounts","splitExportAs","exportAs","splitClasses","classAttrValue","createElementCssSelector","attributes","cssSelector","elNameNoNs","setElement","attrName","attrNameNoNs","attrValue","addAttribute","CLASS_ATTR","className","addClassName","_isEmptyTextNode","Text","removeSummaryDuplicates","items","isEmptyExpression","ASTWithSource","EmptyExpr","isTemplate","el","enableLegacyTemplate","reportDeprecation","tagNoNs","TEMPLATE_ELEMENT","TEMPLATE_ELEMENT_DEPRECATION_WARNING","convertActionBinding","localResolver","implicitReceiver","action","bindingId","DefaultLocalResolver","actionWithoutBuiltins","convertPropertyBindingBuiltins","createLiteralArrayConverter","argCount","createLiteralMapConverter","keys","createPipeConverter","_AstToIrVisitor","actionStmts","flattenStatements","_Mode","prependTemporaryDecls","temporaryCount","lastIndex","preventDefaultVar","lastStatement","returnExpr","convertStmtIntoExpression","createPreventDefaultVar","cast","notIdentical","toDeclStmt","StmtModifier","Final","ConvertActionBindingResult","converterFactory","convertBuiltins","convertPropertyBinding","expressionWithoutBuiltins","currValExpr","createCurrValueExpr","outputExpr","temporaryDeclaration","ConvertPropertyBindingResult","_BuiltinAstConverter","temporaryName","temporaryNumber","DeclareVarStmt","statements","unshift","ensureStatementMode","mode","ensureExpressionMode","convertToStatementIfNeeded","toStmt","arg","output","ExpressionStatement","needsAdditionalRootNode","astNodes","lastAstNode","EmbeddedTemplateAst","hasViewContainer","ElementAst","NgContentAst","elementBindingDef","inputAst","dirAst","PropertyBindingType","Property","Animation","Class","Style","unit","fixedAttrsDef","elementAst","mapResult","attrAst","hostAttributes","prevValue","mergeAttributeValue","attrValue1","attrValue2","CLASS_ATTR$1","STYLE_ATTR","callCheckStmt","nodeIndex","CHECK_VAR","VIEW_VAR","callUnwrapValue","bindingIdx","unwrapValue","findStaticQueryIds","staticQueryIds","dynamicQueryIds","queryMatches","child","childData","add","delete","staticViewQueryIds","nodeStaticQueryIds","elementEventNameAndTarget","eventAst","isAnimation","phase","calcStaticDynamicQueryFlags","queryIds","isFirst","elementEventFullName","toTypeScript","file","preamble","genFileUrl","TypeScriptEmitter","emitStatements","srcFileUrl","serializeSummaries","srcFileName","forJitCtx","summaryResolver","symbolResolver","symbols","types","toJsonSerializer","ToJsonSerializer","forJitSerializer","ForJitSerializer","resolvedSymbol","addSummary","symbol","metadata","summary","addSourceType","unprocessedSymbolSummariesBySymbol","isLibraryFile","addLibType","json","deserializeSummaries","symbolCache","libraryFileName","FromJsonDeserializer","deserialize","createForJitStub","outputCtx","createSummaryForJitFunction","fnName","ArrayType","Exported","_createEmptyStub","ComponentFactory","_resolveStyleStatements","compileResult","needsShim","fileSuffix","dependencies","setValue","getStaticSymbol","_stylesModuleUrl","stylesheetUrl","shim","analyzeNgModules","fileNames","host","staticSymbolResolver","metadataResolver","mergeAnalyzedFiles","_analyzeFilesIncludingNonProgramFiles","analyzeAndValidateNgModules","validateAnalyzedModules","analyzedModules","symbolsMissingModule","seenFiles","files","visitFile","isSourceFile","analyzedFile","analyzeFile","ngModules","ngModule","transitiveModule","modules","modMeta","pipes","injectables","hasDecorators","exportsNonSourceFiles","getSymbolsOf","resolveSymbol","symbolMeta","__symbolic","isNgSymbol","isDirective","isPipe","isInjectable","getNgModuleMetadata","isValueExportingNonSourceFile","Visitor","_this","v","analyzedFiles","allNgModules","ngModuleByPipeOrDirective","allPipesAndDirectives","af","declaredDirectives","declaredPipes","mergeAndValidateNgFiles","shouldIgnore","expandedMessage","typeName","produceErrorMessage","mapStringMap","transform","HIDDEN_KEY","isPrimitive","o","positionalError","line","column","unescapeIdentifier","substr","createAotUrlResolver","basePath","resourceNameToFileName","createAotCompiler","compilerHost","options","urlResolver","StaticSymbolCache","AotSummaryResolver","StaticSymbolResolver","staticReflector","StaticReflector","htmlParser","I18NHtmlParser","HtmlParser","i18nFormat","missingTranslation","console","CompilerConfig","defaultEncapsulation","ViewEncapsulation","Emulated","useJit","preserveWhitespaces","normalizer","DirectiveNormalizer","loadResource","expressionParser","Parser","Lexer","elementSchemaRegistry","DomElementSchemaRegistry","tmplParser","TemplateParser","CompileMetadataResolver","NgModuleResolver","DirectiveResolver","PipeResolver","viewCompiler","ViewCompiler","typeCheckCompiler","TypeCheckCompiler","AotCompiler","StyleCompiler","NgModuleCompiler","interpretStatements","_ExecutionContext","StatementInterpreter","exportName","vars","_executeFunctionStatements","varValues","childCtx","createChildWihtLocalVars","createDynamicClass","_classStmt","_ctx","propertyDescriptors","getters","getter","instanceCtx","methods","method","paramNames","param","writable","ctorParamNames","constructorMethod","ctor","fields","field","superClass","parent","_declareFn","evalExpression","sourceUrl$$1","createSourceMap","fnBody","fnArgNames","fnArgValues","argName","emptyFn","Function","bind","headerLines","toSourceMapGenerator","toJsComment","jitStatements","createSourceMaps","JitEmitterVisitor","createReturnStmt","getArgs","assertComponent","flattenSummaries","fn$$1","createOutputContext","genFilePath","moduleName","runtime","createUrlResolverWithoutPackagePrefix","UrlResolver","createOfflineCompileUrlResolver","getUrlScheme","_split","_ComponentIndex","Scheme","_buildFromEncodedParts","opt_scheme","opt_userInfo","opt_domain","opt_port","opt_path","opt_queryData","opt_fragment","uri","_splitRe","_removeDotSegments","leadingSlash","trailingSlash","segments","up","pos","segment","pop","_joinAndCanonicalizePath","Path","UserInfo","Domain","Port","QueryData","Fragment","_resolveUrl","base","encodeURI","baseParts","setPrototypeOf","__proto__","assign","t","call","createInject","createInjectionToken","desc","_desc","createAttribute","attributeName","createContentChildren","data","first","isViewQuery","descendants","createContentChild","createViewChildren","createViewChild","Native","None","ChangeDetectionStrategy","OnPush","Default","changeDetection","createPipe","pure","createInput","bindingPropertyName","createOutput","createHostBinding","hostPropertyName","createHostListener","eventName","createNgModule","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","createOptional","createInjectable","createSelf","createSkipSelf","createHost","HTML","URL","RESOURCE_URL","NodeFlags","TypeElement","TypeText","ProjectedTemplate","CatRenderNode","TypeNgContent","TypePipe","TypePureArray","TypePureObject","TypePurePipe","CatPureExpression","TypeValueProvider","TypeClassProvider","TypeFactoryProvider","TypeUseExistingProvider","LazyProvider","PrivateProvider","TypeDirective","CatProviderNoDirective","CatProvider","EmbeddedViews","ComponentView","TypeContentQuery","TypeViewQuery","StaticQuery","DynamicQuery","CatQuery","Types","DepFlags","SkipSelf","Optional","Value","ArgumentType","Inline","Dynamic","BindingFlags","TypeElementAttribute","TypeElementClass","TypeElementStyle","TypeProperty","SyntheticProperty","SyntheticHostProperty","CatSyntheticProperty","QueryBindingType","First","All","QueryValueType","ElementRef","RenderElement","TemplateRef","ViewContainerRef","Provider","ViewFlags","MissingTranslationStrategy","Warning","Ignore","core","freeze","ValueTransformer","SyncAsync","assertSync","cb","all","syncAsyncValues","Promise","Version","full","splits","major","minor","patch","VERSION","TextAst","ngContentIndex","visitText","BoundTextAst","visitBoundText","AttrAst","visitAttr","BoundElementPropertyAst","visitElementProperty","BoundEventAst","handler","calcFullName","visitEvent","ReferenceAst","visitReference","VariableAst","visitVariable","inputs","outputs","references","visitElement","variables","visitEmbeddedTemplate","BoundDirectivePropertyAst","directiveName","templateName","visitDirectiveProperty","DirectiveAst","hostProperties","hostEvents","visitDirective","Builtin","visitNgContent","NullTemplateVisitor","RecursiveTemplateAstVisitor","visitChildren","results","jitDevMode","members","assertNoMembers","JSON","cache","declarationFile","memberSuffix","HOST_REG_EXP","CompileAnimationEntryMetadata","definitions","CompileAnimationStateMetadata","CompileAnimationStateDeclarationMetadata","stateNameExpr","styles","CompileAnimationStateTransitionMetadata","stateChangeExpr","steps","CompileAnimationMetadata","CompileAnimationKeyframesSequenceMetadata","CompileAnimationStyleMetadata","CompileAnimationAnimateMetadata","timings","CompileAnimationWithStepsMetadata","CompileAnimationSequenceMetadata","CompileAnimationGroupMetadata","CompileSummaryKind","Injectable","CompileStylesheetMetadata","styleUrls","CompileTemplateMetadata","encapsulation","template","templateUrl","htmlAst","externalStylesheets","animations","ngContentSelectors","interpolation","toSummary","anim","CompileDirectiveMetadata","isHost","hostListeners","componentViewType","rendererType","matches","inputsMap","bindConfig","outputsMap","summaryKind","CompilePipeMetadata","CompileNgModuleMetadata","exportedDirectives","exportedPipes","bootstrapComponents","importedModules","exportedModules","schemas","TransitiveCompileNgModuleMetadata","directivesSet","exportedDirectivesSet","pipesSet","exportedPipesSet","modulesSet","entryComponentsSet","addProvider","addDirective","addExportedDirective","addPipe","addExportedPipe","addModule","addEntryComponent","ec","componentType","ProviderMeta","parentOf","childOf","Expansion","visitExpansion","ExpansionCase","expSourceSpan","visitExpansionCase","valueSpan","visitAttribute","startSourceSpan","visitComment","InterpolationConfig","fromArray","markers","style","TagContentType","RAW_TEXT","ESCAPABLE_RAW_TEXT","PARSABLE_DATA","NAMED_ENTITIES","Aacute","aacute","Acirc","acirc","acute","AElig","aelig","Agrave","agrave","alefsym","Alpha","alpha","amp","and","ang","apos","Aring","aring","asymp","Atilde","atilde","Auml","auml","bdquo","Beta","beta","brvbar","bull","cap","Ccedil","ccedil","cedil","cent","Chi","chi","circ","clubs","cong","copy","crarr","cup","curren","dagger","Dagger","darr","dArr","deg","Delta","delta","diams","divide","Eacute","eacute","Ecirc","ecirc","Egrave","egrave","empty","emsp","ensp","Epsilon","epsilon","equiv","Eta","eta","ETH","eth","Euml","euml","euro","exist","fnof","forall","frac12","frac14","frac34","frasl","Gamma","gamma","ge","gt","harr","hArr","hearts","hellip","Iacute","iacute","Icirc","icirc","iexcl","Igrave","igrave","image","infin","int","Iota","iota","iquest","isin","Iuml","iuml","Kappa","kappa","Lambda","lambda","lang","laquo","larr","lArr","lceil","ldquo","le","lfloor","lowast","loz","lrm","lsaquo","lsquo","lt","macr","mdash","micro","middot","minus","Mu","mu","nabla","nbsp","ndash","ne","ni","notin","nsub","Ntilde","ntilde","Nu","nu","Oacute","oacute","Ocirc","ocirc","OElig","oelig","Ograve","ograve","oline","Omega","omega","Omicron","omicron","oplus","or","ordf","ordm","Oslash","oslash","Otilde","otilde","otimes","Ouml","ouml","para","permil","perp","Phi","phi","Pi","pi","piv","plusmn","pound","prime","Prime","prod","Psi","psi","quot","radic","rang","raquo","rarr","rArr","rceil","rdquo","real","reg","rfloor","Rho","rho","rlm","rsaquo","rsquo","sbquo","Scaron","scaron","sdot","sect","shy","Sigma","sigma","sigmaf","sim","spades","sub","sube","sup","sup1","sup2","sup3","supe","szlig","Tau","tau","there4","Theta","theta","thetasym","thinsp","THORN","thorn","tilde","times","trade","Uacute","uacute","uarr","uArr","Ucirc","ucirc","Ugrave","ugrave","uml","upsih","Upsilon","upsilon","Uuml","uuml","weierp","Xi","xi","Yacute","yacute","yen","yuml","Yuml","Zeta","zeta","zwj","zwnj","_resourceLoader","_urlResolver","_htmlParser","_config","_resourceLoaderCache","clearCache","clear","clearCacheFor","normalizedDirective","stylesheet","_fetch","normalizeTemplate","prenormData","_preParseTemplate","preparsedTemplate","_normalizeTemplateMetadata","prenomData","_preparseLoadedTemplate","templateAbsUrl","rootNodesAndErrors","templateMetadataStyles","_normalizeStylesheet","TemplatePreparseVisitor","templateStyles","inlineStyleUrls","_loadMissingExternalStylesheets","_normalizeLoadedTemplateMetadata","stylesheets","_inlineStyles","styleUrl","targetStyles","loadedStylesheets","loadedStyle","allStyleUrls","allStyles","styleWithImports","ngNonBindableStackCount","preparsedElement","textContent_1","QUERY_METADATA_IDENTIFIERS","_reflector","typeMetadata","annotations","throwIfNotFound","propertyMetadata","propMetadata","_mergeWithPropertyMetadata","dm","directiveType","hostBinding","startWith","hostListener","_merge","_extractPublicName","def","_dedupeBindings","bindings","names","reversedResult","binding","name_1","mergedInputs","mergedOutputs","mergedHost","mergedQueries","comp","moduleId","KEYWORDS","tokens","scanToken","numValue","strValue","isCharacter","isNumber","isString","isOperator","operater","isKeyword","isKeywordLet","isKeywordAs","isKeywordNull","isKeywordUndefined","isKeywordTrue","isKeywordFalse","isKeywordThis","isError","toNumber","EOF","scanIdentifier","scanNumber","scanCharacter","scanString","scanOperator","scanComplexOperator","one","twoCode","two","threeCode","three","simple","parseFloat","quote","buffer","marker","unescapedCode","last","ParserError","errLocation","ctxLocation","ParseSpan","AST","Quote","uninterpretedExpression","location","ImplicitReceiver","Chain","Conditional","PropertyRead","PropertyWrite","SafePropertyRead","KeyedRead","KeyedWrite","BindingPipe","LiteralPrimitive","LiteralArray","LiteralMap","Interpolation","strings","Binary","operation","PrefixNot","NonNullAssert","MethodCall","SafeMethodCall","FunctionCall","TemplateBinding","keyIsVar","NullAstVisitor","RecursiveAstVisitor","AstTransformer","SplitInterpolation","offsets","TemplateBindingParseResult","templateBindings","_lexer","parseAction","_checkNoInterpolation","sourceToLex","_stripComments","_ParseAST","parseChain","parseBinding","_parseBindingAst","parseSimpleBinding","SimpleExpressionChecker","check","_reportError","_parseQuote","prefixSeparatorIndex","parseTemplateBindings","prefixToken","prefixTokens","parseInterpolation","splitInterpolation","expressionText","_findInterpolationErrorColumn","wrapLiteralPrimitive","_commentStart","outerQuote","char","nextChar","partInErrIdx","inputLength","rparensExpected","rbracketsExpected","rbracesExpected","next","inputIndex","optionalCharacter","peekKeywordLet","peekKeywordAs","expectCharacter","optionalOperator","op","expectOperator","operator","expectIdentifierOrKeyword","expectIdentifierOrKeywordOrString","parsePipe","parseExpression","parseConditional","parseLogicalOr","yes","no","parseLogicalAnd","parseEquality","parseRelational","parseAdditive","parseMultiplicative","parsePrefix","parseCallChain","parsePrimary","parseAccessMemberOrMethodCall","parseCallArguments","elements","parseExpressionList","parseLiteralMap","literalValue","terminator","isSafe","positionals","expectTemplateBindingKey","operatorFound","rawKey","name_2","letStart","letName","locationText","skip","col","moveBy","ch","priorLine","getContext","maxChars","maxLines","startOffset","endOffset","ctxChars","ctxLines","before","after","details","ParseErrorLevel","WARNING","ERROR","ParseError","level","contextualMessage","TAG_OPEN_START","TAG_OPEN_END","TAG_OPEN_END_VOID","TAG_CLOSE","COMMENT_START","COMMENT_END","CDATA_START","CDATA_END","ATTR_NAME","ATTR_VALUE","DOC_TYPE","EXPANSION_FORM_START","EXPANSION_CASE_VALUE","EXPANSION_CASE_EXP_START","EXPANSION_CASE_EXP_END","EXPANSION_FORM_END","Token$1","TokenError","errorMsg","tokenType","TokenizeResult","_CR_OR_CRLF_REGEXP","_ControlFlowError","_file","_getTagDefinition","_tokenizeIcu","_interpolationConfig","_peek","_nextPeek","_index","_line","_column","_expansionCaseStack","_inInterpolation","_input","_length","_advance","_processCarriageReturns","_getLocation","_attemptCharCode","_consumeCdata","_consumeComment","_consumeDocType","_consumeTagClose","_consumeTagOpen","_tokenizeExpansionForm","_consumeText","_beginToken","_endToken","_consumeExpansionFormStart","_isInExpansionForm","_consumeExpansionCaseStart","_isInExpansionCase","_consumeExpansionCaseEnd","_consumeExpansionFormEnd","_getSpan","_currentTokenStart","_currentTokenType","_createError","_attemptCharCodeCaseInsensitive","_requireCharCode","_attemptStr","chars","initialPosition","_savePosition","_restorePosition","_attemptStrCaseInsensitive","_requireStr","_attemptCharCodeUntilFn","predicate","_requireCharCodeUntilFn","_attemptUntilChar","_readChar","decodeEntities","_decodeEntity","startPosition","isHex","numberStart","strNum","entity","_consumeRawText","firstCharOfEnd","attemptEndRest","tagCloseStart","textStart","textToken","_consumePrefixAndName","nameOrPrefixStart","nameStart","lowercaseTagName","savedPos","_consumeTagOpenStart","_consumeAttributeName","_consumeAttributeValue","_consumeTagOpenEnd","contentTokenType","contentType","_consumeRawTextWithTagClose","prefixAndName","quoteChar","valueStart","_readUntil","_isTextEnd","nbTokens","TreeError","Parser$1","parseExpansionForms","tokensAndErrors","treeAndErrors","_TreeBuilder","build","_rootNodes","_errors","_elementStack","_consumeStartTag","_consumeEndTag","_closeVoidElement","_consumeExpansion","prev","_advanceIf","startToken","_addToParent","expCase","_parseExpansionCase","_collectExpansionExpTokens","parsedExp","expansionFormStack","parent_1","_getParentElement","ignoreFirstLf","isVoid","startTagToken","_consumeAttr","_getElementFullName","selfClosing","tagDef","canSelfClose","_pushElement","_popElement","parentEl","isClosedByChild","_getParentElementSkippingContainers","container","requireExtraParent","newParent","parentToAdd","_insertBeforeContainer","endTagToken","errMsg","stackIndex","splice","closedByParent","valueToken","parentElement","_SerializerVisitor","visitContainer","visitIcu","icu","strCases","visitTagPlaceholder","ph","startName","closeName","visitPlaceholder","visitIcuPlaceholder","Message","placeholders","placeholderToMessage","sources","startLine","startCol","endLine","endCol","Text$1","Container","Icu","TagPlaceholder","Placeholder","IcuPlaceholder","CloneVisitor","expressionPlaceholder","RecurseVisitor","HtmlTagDefinition","closedByChildren","requiredParents","implicitNamespacePrefix","_f","currentParent","lcParent","area","embed","link","img","hr","br","track","wbr","thead","tbody","tfoot","tr","td","th","svg","math","li","dt","dd","rb","rt","rtc","rp","optgroup","option","pre","listing","script","title","textarea","TAG_TO_PLACEHOLDER_NAMES","A","B","BR","EM","H1","H2","H3","H4","H5","H6","HR","I","LI","LINK","OL","P","Q","S","SMALL","SUB","SUP","TBODY","TD","TFOOT","TH","THEAD","TR","TT","U","UL","PlaceholderRegistry","_placeHolderNameCounts","_signatureToName","getStartTagPlaceholderName","signature","_hashTag","upperTag","baseName","_generateUniqueName","getCloseTagPlaceholderName","_hashClosingTag","getPlaceholderName","upperName","uniqueName","getUniquePlaceholder","_expressionParser","_isIcu","_icuDepth","_placeholderRegistry","_placeholderToContent","_placeholderToMessage","i18nodes","startPhName","closePhName","attribute","_visitTextWithInterpolation","comment","i18nIcuCases","i18nIcu","caze","expPh","phName","icuCase","sDelimiter","eDelimiter","lastStringIdx","I18nError","_I18N_COMMENT_PREFIX_REGEXP","i18nCommentsWarned","ExtractionResult","_VisitorMode","Extract","Merge","_implicitTags","_implicitAttrs","_init","_inI18nBlock","_messages","_translations","wrapper","translatedNode","_mode","_mayBeAddBlockChildren","wasInIcu","_inIcu","_isInTranslatableSection","_addMessage","isOpening","isClosing","_inI18nNode","_depth","_blockStartDepth","_closeTranslatableSection","_blockChildren","_blockMeaningAndDesc","_translateMessage","warn","_openTranslatableSection","wasInI18nNode","wasInImplicitNode","_inImplicitNode","childNodes","translatedChildNodes","i18nAttr","i18nMeta","isImplicit","isTopLevelImplicit","isTranslatable","visited","_visitAttributesOf","translatedAttrs","_translateAttributes","_msgCountAtSectionStart","_createI18nMessage","explicitAttrNameToValue","implicitAttrNames","msgMeta","i18nParsedMessageMeta","translatedAttributes","directChildren","startIndex","XmlTagDefinition","XmlParser","Serializer","createNameMapper","SimplePlaceholderMapper","mapName","internalToPublic","publicToNextId","publicToInternal","toInternalName","publicName","visitPlaceholderName","nextId","_Visitor$1","visitTag","strAttrs","_serializeAttributes","strChildren","visitDeclaration","decl","visitDoctype","doctype","rootTag","dtd","Declaration","unescapedAttrs","Doctype","Tag","Text$2","unescapedValue","CR","ws","write","locale","_WriteVisitor","transUnits","contextTags","contextGroupTag","purpose","context-type","transUnit","datatype","priority","source-language","original","xliff","version","xmlns","encoding","load","xliffParser","XliffParser","msgIdToHtml","i18nNodesByMsgId","XmlToI18n","msgId","convert","i18nNodes","ctype","equiv-text","startTagPh","closeTagPh","equivText","_locale","_unitMlString","_msgIdToHtml","xml","idAttr","_addError","innerTextStart","innerTextEnd","innerText","localeAttr","expansion","expansionCase","xmlIcu","nameAttr","caseMap","_WriteVisitor$1","units","notes","category","srcLang","xliff2Parser","Xliff2Parser","XmlToI18n$1","_nextPlaceholderId","disp","tagPc","equivStart","equivEnd","dispStart","dispEnd","idStr","versionAttr","startAttr","endAttr","startId","endId","exampleVisitor","ExampleVisitor","_Visitor$2","rootNode","sourceTags","addDefaultExamples","startEx","closeEx","exTag","exText","xtbParser","XtbParser","XmlToI18n$2","xtb","_bundleDepth","langAttr","TranslationBundle","_i18nNodesByMsgId","mapperFactory","missingTranslationStrategy","_i18nToHtml","I18nToHtmlVisitor","serializer","srcMsg","html","_digest","_mapperFactory","_missingTranslationStrategy","_console","_contextStack","_convertToText","_srcMsg","_mapper","mapper","translationsFormat","_translationBundle","parseResult","CORE","ANALYZE_FOR_ENTRY_COMPONENTS","ChangeDetectorRef","QueryList","ComponentRef","NgModuleFactory","createModuleFactory","moduleDef","moduleProviderDef","RegisterModuleFactoryFn","Injector","LOCALE_ID","TRANSLATIONS_FORMAT","inlineInterpolate","interpolate","EMPTY_ARRAY","EMPTY_MAP","Renderer","viewDef","elementDef","anchorDef","textDef","directiveDef","queryDef","pureArrayDef","pureObjectDef","purePipeDef","pipeDef","nodeValue","ngContentDef","createRendererType2","RendererType2","ViewDefinition","createComponentFactory","_SELECTOR_REGEXP","classNames","_addResult","cssSel","current","inNot","exec","hasElementSelector","getMatchingElementTemplate","classAttr","klass","notSelector","SelectorMatcher","_elementMap","_elementPartialMap","_classMap","_classPartialMap","_attrValueMap","_attrValuePartialMap","_listContexts","createNotMatcher","notMatcher","addSelectables","cssSelectors","callbackCtxt","listContext","SelectorListContext","_addSelectable","selectable","SelectorContext","isTerminal","_addTerminal","_addPartial","terminalMap","terminalValuesMap","partialMap","partialValuesMap","terminalList","matchedCallback","alreadyMatched","_matchTerminal","_matchPartial","name_3","selectables","starSelectables","finalize","nestedSelector","cbContext","callback","_ngModuleResolver","_directiveResolver","_pipeResolver","_summaryResolver","_schemaRegistry","_directiveNormalizer","_staticSymbolCache","_errorCollector","_nonNormalizedDirectiveCache","_directiveCache","_summaryCache","_pipeCache","_ngModuleCache","_ngModuleOfTypes","getReflector","dirMeta","_createProxyClass","baseType","delegate","proxyClass","setDelegate","getGeneratedClass","dirType","getComponentViewClass","getHostComponentViewClass","getHostComponentType","HostClass","getRendererType","getComponentFactory","hostView","initComponentFactory","_loadSummary","typeSummary","resolveSummary","getHostComponentMetadata","hostViewType","hostType","loadDirectiveMetadata","isSync","getNonNormalizedDirectiveMetadata","annotation","createDirectiveMetadata","templateMetadata","normalizedDirMeta","componentModuleUrl","cacheEntry","nonNormalizedTemplateMetadata","changeDetectionStrategy","entryComponentMetadata","_getProvidersMetadata","_getEntryComponentMetadata","getDefaultComponentElementName","_getQueriesMetadata","_getTypeMetadata","getDirectiveMetadata","getDirectiveSummary","dirSummary","isNgModule","getNgModuleSummary","moduleType","moduleSummary","loadNgModuleDirectiveAndPipeMetadata","loading","promise","_loadPipeMetadata","compileMeta","exportedNonModuleIdentifiers","imports","importedType","importedModuleType","moduleWithProviders","_checkSelfImport","importedModuleSummary","_getTypeDescriptor","exportedType","exportedModuleSummary","_getIdentifierMetadata","_getTransitiveNgModuleMetadata","declarations","declaredType","declaredIdentifier","_addTypeToModule","exportedId","bootstrap","provide","oldModule","modulesByToken","modSummary","mod","addedTokens","tokenRef","prevModules","moduleRef","ann","getInjectableSummary","_getInjectableMetadata","throwOnUnknownDeps","_getDependenciesMetadata","_getFactoryMetadata","getPipeMetadata","pipeType","pipeMeta","getPipeSummary","pipeSummary","getOrLoadPipeMetadata","pipeAnnotation","typeOrFunc","hasUnknownDeps","parameters","dependenciesMetadata","isSelf","paramEntry","_getTokenMetadata","depsTokens","targetEntryComponents","debugInfo","compileProviders","providerIdx","_validateProvider","providersInfo","soFar","seenProvider","seenProviderIdx","_getEntryComponentsFromProvider","getProviderMetadata","components","collectedIdentifiers","compileDeps","compileTypeMetadata","compileFactoryMetadata","propertyName","_getQueryMetadata","_queryVarBindings","q","varName","read","otherType","TypeModifier","Const","modifiers","hasModifier","modifier","BuiltinTypeName","Bool","Int","Inferred","BuiltinType","visitBuiltintType","visitExpressionType","of","visitArrayType","MapType","valueType","visitMapType","BOOL_TYPE","BinaryOperator","Equals","NotEquals","Identical","NotIdentical","Minus","Plus","Divide","Multiply","Modulo","And","Or","Lower","LowerEquals","Bigger","BiggerEquals","ReadPropExpr","ReadKeyExpr","callMethod","InvokeMethodExpr","InvokeFunctionExpr","InstantiateExpr","conditional","trueCase","falseCase","ConditionalExpr","equals","rhs","BinaryOperatorExpr","notEquals","identical","plus","multiply","modulo","lower","lowerEquals","bigger","biggerEquals","isBlank","TYPED_NULL_EXPR","CastExpr","BuiltinVar","This","Super","CatchError","CatchStack","builtin","visitReadVarExpr","WriteVarExpr","visitWriteVarExpr","WriteKeyExpr","visitWriteKeyExpr","WritePropExpr","visitWritePropExpr","BuiltinMethod","ConcatArray","SubscribeObservable","Bind","visitInvokeMethodExpr","visitInvokeFunctionExpr","classExpr","visitInstantiateExpr","visitLiteralExpr","visitExternalExpr","ExternalReference","visitConditionalExpr","visitNotExpr","visitAssertNotNullExpr","visitCastExpr","visitFunctionExpr","DeclareFunctionStmt","lhs","visitBinaryOperatorExpr","visitReadPropExpr","visitReadKeyExpr","entries","visitLiteralArrayExpr","visitLiteralMapExpr","CommaExpr","visitCommaExpr","Private","visitDeclareVarStmt","visitDeclareFunctionStmt","visitExpressionStmt","visitReturnStmt","AbstractClassPart","ClassMethod","ClassField","ClassGetter","ClassStmt","visitDeclareClassStmt","IfStmt","visitIfStmt","CommentStmt","visitCommentStmt","TryCatchStmt","bodyStmts","catchStmts","visitTryCatchStmt","ThrowStmt","visitThrowStmt","AstTransformer$1","transformExpr","transformStmt","visitAllExpressions","mapType","ctorMethod","RecursiveAstVisitor$1","_clone","clone","ProviderViewContext","ProviderElementContext","viewContext","_parent","_isViewRoot","_directiveAsts","refs","_sourceSpan","_transformedProviders","_seenProviders","_queriedTokens","transformedHasViewContainer","_attrs","directivesMeta","directiveAst","_allProviders","_contentQueries","_addQueryReadsTo","templateRefId","refAst","defaultQueryValue","_getOrCreateLocalProvider","afterElement","lazyProviders","eagerProviders","sortedProviderTypes","transformProviders","sortedDirectives","dir1","dir2","allMatches","defaultValue","queryReadTokens","_getQueriesFor","queryValue","currentEl","distance","requestingProviderType","transformedProviderAst","transformedProviders","transformedUseValue","transformedUseExisting","transformedDeps","existingDiDep","_getDependency","_getLocalDependency","currElement","currEager","prevElement","NgModuleProviderAnalyzer","extraProviders","errorString","requestorSourceSpan","foundLocal","quotedSet","NgModuleCompileResult","ngModuleFactoryVar","LOG_VAR","compile","ngModuleMeta","providerParser","providerDefs","ngModuleDef","ngModuleDefFactory","_createNgModuleFactory","registerFactoryStmt","createStub","ngModuleReference","ngModuleFactoryStmt","SourceMapGenerator","sourcesContent","lines","lastCol0","hasMappings","addSource","addLine","addMapping","col0","sourceLine0","sourceCol0","currentLine","toJSON","sourcesIndex","mappings","lastSourceIndex","lastSourceLine0","lastSourceCol0","segAsStr","sourceRoot","CATCH_ERROR_VAR$1","CATCH_STACK_VAR$1","_EmittedLine","indent","partsLength","srcSpans","_indent","_classes","_preambleLineCount","_lines","println","lastPart","print","lineIsEmpty","_currentLine","lineLength","newLine","removeEmptyLastLine","incIndent","decIndent","pushClass","clazz","popClass","sourceLines","sourceFilePath","startsAtLine","firstOffsetMapped","mapFirstOffsetIfNeeded","lineIdx","spans","spanIdx","sourceLine","sourceCol","setPreambleLineCount","emittedLine","columnsLeft","AbstractEmitterVisitor","_escapeDollarInStrings","hasElseCase","lineWasEmpty","getBuiltinMethodName","opStr","visitAllObjects","separator","incrementedIndent","emitStatementsAndContext","srcFilePath","emitSourceMaps","referenceFilter","preambleLines","reexports","exportedModuleName","reexportsCode","reexport","as","importsWithPrefixes","importedModuleName","sm","sourceText","typeExpression","defaultType","_visitIdentifier","_printColonType","_visitClassField","_visitClassConstructor","_visitClassGetter","_visitClassMethod","_visitParams","typeStr","size","metas","ElementSchemaRegistry","BOOLEAN","NUMBER","STRING","OBJECT","SCHEMA","_ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","_schema","encodedType","strType","strProperties","properties","typeNames","superName","superType","property","hasProperty","schemaMetas","schema","hasElement","getMappedPropName","validateProperty","validateAttribute","normalizeAnimationStyleProperty","normalizeAnimationStyleValue","camelCaseProp","userProvidedProp","strVal","valAndSuffixMatch","ShadowCss","strictStyling","shimCssText","hostSelector","sourceMappingUrl","_insertDirectives","_scopeCssText","_insertPolyfillDirectivesInCssText","_insertPolyfillRulesInCssText","_cssContentNextSelectorRe","_cssContentRuleRe","scopeSelector","unscopedRules","_extractUnscopedRulesFromCssText","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertShadowDOMSelectors","_scopeSelectors","r","_cssContentUnscopedRuleRe","_convertColonRule","_cssColonHostRe","_colonHostPartReplacer","_cssColonHostContextRe","_colonHostContextPartReplacer","regExp","partReplacer","_polyfillHostNoCombinator","_polyfillHost","_shadowDOMSelectorsRe","_scopeSelector","strict","_shadowDeepSelectors","deepParts","shallowPart","otherParts","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","_makeScopeMatcher","lre","rre","_selectorReSuffix","_applySimpleSelectorScope","_polyfillHostRe","replaceBy_1","_polyfillHostNoCombinatorRe","hnc","colon","isRe","_scopeSelectorPart","scopedP","safeContent","SafeSelector","scopedSelector","sep","scopeAfter","restore","_colonHostContextRe","_polyfillHostContext","_colonHostRe","keep","replaceBy","_content","pseudo","_parenSuffix","StylesCompileDependency","CompiledStylesheet","stylesVar","isShimmed","_shadowCss","compileComponent","_compileStyles","needsStyleShim","compileStyles","isComponentStylesheet","styleExpressions","plainStyle","_shimIfNeeded","exprIndex","SKIP_WS_TRIM_TAGS","WS_CHARS","NO_WS_REGEXP","WS_REPLACE_REGEXP","expanded","BoundPropertyType","DEFAULT","LITERAL_ATTR","ANIMATION","BoundProperty","isLiteral","BindingParser","_exprParser","_targetErrors","pipesByName","_usedPipes","pipe","getUsedPipes","createDirectiveHostPropertyAsts","elementSelector","boundProps_1","parsePropertyBinding","createElementPropertyAst","createDirectiveHostEventAsts","targetEventAsts_1","parseEvent","sourceInfo","_reportExpressionParserErrors","_checkPipes","parseInlineTemplateBinding","targetMatchableAttrs","targetProps","targetVars","_parseTemplateBindings","_parsePropertyAst","parseLiteralAttr","bindingsResult","warning","_parseAnimation","isAnimationProp","_parseBinding","parsePropertyInterpolation","isHostBinding","boundProp","bindingType","boundPropertyName","securityContexts","_validatePropertyOrAttributeName","nsSeparatorIdx","ns","targetEvents","_parseAnimationEvent","_parseEvent","_parseAction","errors_1","collector","PipeCollector","pipeName","isAttr","report","BIND_NAME_REGEXP","TEXT_CSS_SELECTOR","TemplateParseError","TemplateParseResult","templateAst","usedPipes","transforms","tryParse","htmlParseResult","getInterpolationConfig","tryParseHtml","expandHtml","uniqDirectives","uniqPipes","providerViewContext","bindingParser","parseVisitor","TemplateParseVisitor","EMPTY_ELEMENT_CONTEXT","_assertNoReferenceDuplicationOnTemplate","forced","expandedHtmlAst","existingReferences","_bindingParser","_schemas","selectorMatcher","directivesIndex","ngContentCount","findNgContentIndex","valueNoNgsp","queryStartIndex","matchableAttrs","elementOrDirectiveProps","elementOrDirectiveRefs","elementVars","events","templateElementOrDirectiveProps","templateMatchableAttrs","templateElementVars","hasInlineTemplates","isTemplateElement","templateBindingsSource","hasBinding","_parseAttr","normalizedName","_normalizeAttributeName","hasTemplateBinding","elementCssSelector","_parseDirectives","directiveMetas","matchElement","boundDirectivePropNames","directiveAsts","_createDirectiveAsts","elementProps","_createElementPropertyAsts","isViewRoot","providerContext","NON_BINDABLE_VISITOR","ElementContext","parsedElement","projectionSelector","every","_assertAllEventsPublishedByDirectives","_assertNoComponentsNorElementBindingsOnTemplate","transformedDirectiveAsts","_assertElementExists","_assertOnlyOneComponent","ngContentIndex_1","templateQueryStartIndex","templateSelector","templateDirectiveMetas","templateBoundDirectivePropNames","templateDirectiveAsts","templateElementProps","templateProviderContext","targetRefs","srcSpan","bindParts","_parseVariable","_parseReference","_parseAssignmentEvent","ElementOrDirectiveRef","elementSourceSpan","targetReferences","targetBoundDirectivePropNames","matchedReferences","directiveProperties","_checkPropertiesInSchema","_createDirectivePropertyAsts","elOrDirRef","isReferenceToDirective","refToken","boundProps","targetBoundDirectiveProps","boundPropsByName_1","dirProp","elProp","boundElementProps","_findComponentDirectives","_findComponentDirectiveNames","componentTypeNames","elName","allDirectiveEvents","event","NonBindableVisitor","attrNameAndValues","_ngContentIndexMatcher","_wildcardNgContentIndex","wildcardNgContentIndex","ngContentIndices","EventHandlerVars","allowDefault","_converterFactory","BuiltinFunctionCall","_localResolver","_implicitReceiver","_nodeMap","_resultMap","_currentTemporary","_visit","fnResult","convertedArgs","leftMostSafe","leftMostSafeNode","convertSafeAccess","_getLocal","getLocal","varExpr","guardedExpression","temporary","needsTemporary","allocateTemporary","access","releaseTemporary","visitSome","tempNumber","externalReferenceVars","embeddedViewCount","viewBuilderFactory","embeddedViewIndex","ViewBuilder","isHostComponent","refOutputVars","updates","actions","getOutputVar","targetStatements","viewStmts","bindingCount","preprocessUpdateExpression","nameResolver","viewName","viewFactory","visitElementOrTemplate","fullTemplateTypeCheck","childVisitor","outputVarType","outputAst","hostEventAst","currBuilder","varAst","pipeOutputVar","ViewCompileResult","viewClassVar","rendererTypeVar","renderComponentVarName","template_1","customRenderData","renderComponentVar","ViewBuilder$1","LOG_VAR$1","COMP_VAR","EVENT_NAME_VAR","ALLOW_DEFAULT_VAR","purePipeNodeIndices","refNodeIndices","_createPipe","queryIds_1","queryIndex","nodeFlags","nodeDef","_createNodeExpressions","updateRendererStmts","updateDirectivesStmts","nodeDefExprs","updateRendererFn","_createUpdateFn","updateDirectivesFn","viewFlags","updateStmts","updateFn","preStmts","astWithSource","inter","updateRendererExpressions","bindingIndex","_preprocessUpdateExpression","updateRenderer","_visitElementOrTemplate","queryMatchesExpr","childCount","_createElementHandleEventFn","usedEvents","dirHostBindings","hostBindings","inputDefs","outputDefs","compAst","compRendererType","compView","_visitComponentFactoryResolverProvider","dirIndex","localDirAst","_visitDirective","dirHostEvents","_visitProvider","queryMatchExprs","elementNodeIndex","_visitProviderOrDirective","mapValue","updateDirectiveExpressions","dirContextExpr","updateDirectives","_addProviderNode","componentDirMeta","providerFlags","currViewExpr","refNodeIndex","varValue","_createLiteralArrayConverter","valueExpr_1","_createLiteralMapConverter","valueExpr_2","_createPipeConverter","nodeIndex_1","compViewExpr","compBuilder","pipeNodeIndex","pipeValueExpr_1","nodeValueExpr_1","diDep","createUpdateStatements","allowEmptyExprs","updateBindingCount","self","handlers","handleEventStmts","handleEventBindingCount","trueStmts","eventTarget","fullEventName","handleEventFn","MessageBundle","updateFromTemplate","htmlParserResult","i18nParserResult","getMessages","filterSources","mapperVisitor","MapPlaceholderNames","msgList","src","transformedMessage","GeneratedFile","sourceOrStmts","indexBySymbol","processedSummaryBySymbol","processedSummaries","unprocessedSummary","processedSummary","processValue","metadata_1","clone_1","ngModuleSummary","summary_1","summaries","importAs","__symbol","toSummaryFileName","baseSymbol","visitStaticSymbol","loadSummary","isLibrary","ngModuleSymbols","serializeSummaryWithDeps","jitExportAsName","serializeSummaryRef","serializeSummary","typeSymbol","jitImportedSymbol","Transformer","serializedSymbol","fromSummaryFileName","StubEmitFlags","Basic","TypeCheck","_options","_host","_metadataResolver","_templateParser","_styleCompiler","_viewCompiler","_typeCheckCompiler","_ngModuleCompiler","_outputEmitter","_symbolResolver","_templateAstCache","_analyzedFiles","analyzeModulesSync","rootFiles","analyzeResult","analyzeModulesAsync","_analyzeFile","findGeneratedFileNames","genFileNames","allowEmptyCodegenFiles","dirSymbol","normalizedUrl","emitBasicStub","genFileName","originalFileName","_createOutputContext","originalFile","_createNgFactoryStub","enableSummariesForJit","_codegenSourceModule","emitTypeCheckStub","loadFilesAsync","loadingPromises","loadFilesSync","emitFlags","ngModuleIndex","typeIndex","dirId","_createTypeCheckBlock","_parseTemplate","parsedTemplate","emitMessageBundle","messageBundle","compMetas","emitAllImpls","_compileImplFile","generatedFiles","_createSummary","_compileModule","componentStylesheet","stylesheetMeta","_codegenStyles","_compileComponent","_compileComponentFactory","srcModule","ngFactoryCtx","symbolSummaries","typeData","forJitOutputCtx","summaryJson","normalizedLocale","hostMeta","hostViewFactoryVar","compFactoryVar","inputsExprs","outputsExprs","directiveIdentifiers","componentStyles","stylesExpr","viewResult","arity","getTypeArity","getImportAs","importModule","fileNameToModuleName","selfReference","suppliedTypeParams","missingTypeParamsCount","allTypeParams","fill","memberName","stylesheetMetadata","compiledStylesheet","ANGULAR_CORE","IGNORE","USE_VALUE","PROVIDE","REFERENCE_SET","knownMetadataClasses","knownMetadataFunctions","errorRecorder","annotationCache","propertyCache","parameterCache","methodCache","conversionMap","annotationForParentClassWithSummaryKind","initializeConversionMap","kc","_registerDecoratorOrConstructor","kf","_registerFunction","staticSymbol","findSymbolDeclaration","getResourcePath","refSymbol","getSymbolByModule","declarationSymbol","recordModuleNameForFileName","recordImportAs","findDeclaration","containingFile","tryFindDeclaration","ignoreErrorsFor","classMetadata","getTypeMetadata","parentType","findParentType","parentAnnotations","ownAnnotations_1","simplify","requiredAnnotationTypes","requiredType","reportError","parentPropMetadata_1","parentProp","members_1","propData","decorators","parameters_1","ctorData","rawParameterTypes","parameterDecorators_1","rawParamType","nestedResult","paramType","trySimplify","_methodNames","methodNames","parentMethodNames_1","members_2","isMethod","lcProperty","injectionToken","ROUTES","originalRecorder","simplifyInContext","depth","resolveReferenceValue","simplifyCall","functionSymbol","targetFunction","calling","value_1","defaults","functionScope","BindingScope","result_1","oldScope","scope","done","result_2","spreadArray","spreadArray_1","spreadItem","value_2","declarationValue","operand","indexTarget","member","selectContext","selectTarget","localValue","missing","argExpressions","PopulatedScope","ResolvedStaticSymbol","staticSymbolCache","metadataCache","resolvedSymbols","resolvedFilePaths","symbolResourcePaths","symbolFromFile","knownFileNameToModuleNames","_resolveSymbolMembers","resultFromSummary","_resolveSymbolFromSummary","resultFromCache","_createSymbolsOf","baseImportAs","summarizedFileName","summarizedName","importedFilePath","containingFilePath","sourceSymbol","targetSymbol","invalidateFile","symbols_1","recorder","baseResolvedSymbol","baseMetadata","statics","getModuleMetadata","metadataKey","summarySymbols","metadataSymbols","this_1","moduleExport","export","exportSymbol","symName","resolvedModule","resolveModule","createExport","topLevelSymbolNames_1","origins_1","origin","originFilePath","createResolvedSymbol","topLevelPath","topLevelSymbolNames","transformedMeta_1","ReferenceTransformer","functionParams","symbolic","oldLen","transformedMeta","moduleMetadata","moduleMetadatas","getMetadataFor","maxVersion_1","md","errorMessage","moduleNameToFileName","summaryCache","loadedFilePaths","referringSrcFileName","referringLibFileName","_loadSummaryFile","hasSummary","summaryFilePath","SummaryResolver","JitSummaryResolver","_summaries","instance","ReturnValue","debugAst","currCtx","CATCH_ERROR_VAR$2","CATCH_STACK_VAR$2","subscribe","fnExpr","AbstractJsEmitterVisitor","_evalArgNames","_evalArgValues","_evalExportedVars","resultVar","JitCompiler","_compilerConfig","getExtraNgModuleProviders","_compiledTemplateCache","_compiledHostTemplateCache","_compiledDirectiveWrapperCache","_compiledNgModuleCache","_sharedStylesheetCount","compileModuleSync","_compileModuleAndComponents","compileModuleAsync","compileModuleAndAllComponentsSync","_compileModuleAndAllComponents","compileModuleAndAllComponentsAsync","loadAotSummaries","hasAotSummary","_filterJitIdentifiers","ids","_loadModules","_compileComponents","componentFactories","ngModuleFactory","mainModule","mainNgModule","nestedNgModule","_interpretOrJit","allComponentFactories","moduleByJitDirective","templates","transJitModules","localMod","localModuleMeta","dirRef","_createCompiledTemplate","_createCompiledHostTemplate","entryComponentType","_compileTemplate","compiledTemplate","viewDefFactory","CompiledTemplate","isCompiled","externalStylesheetsByModuleUrl","outputContext","_resolveStylesCompileResult","evalResult","viewClass","compiled","nestedCompileResult","nestedStylesArr","_resolveAndEvalStylesCompileResult","_viewClass","CompileReflector","UrlResolverImpl","_packagePrefix","resolvedUrl","resolvedParts","ResourceLoader","Extractor","extractor"],"mappings":"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D,uBAAyB,WACzB,QAASA,0BAET,MAAOA,0BAcPC,QAAU,UACVC,OAAS,SACTC,OAAS,SACTC,OAAS,SA2CTC,QACA,iYAEA,s1BACA,qgCACA,gOACA,2uBACA,uBACA,2CACA,uBACA,wCACA,uBACA,kCACA,yCACA,mLACA,8JACA,eACA,yBACA,iCACA,iQACA,yHACA,sCACA,+BACA,4BACA,0BACA,8BACA,yCACA,6BACA,0BACA,uDACA,wCACA,qCACA,uGACA,iGACA,sOACA,mDACA,sBACA,wCACA,6BACA,2JACA,oJACA,wbACA,+BACA,8BACA,6BACA,wIACA,yBACA,4HACA,8BACA,mDACA,2DACA,sCACA,kDACA,uIACA,yCACA,6EACA,wDACA,wBACA,gDACA,yBACA,2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,0BACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,2BACA,sBACA,+CACA,+CACA,+CACA,+CACA,6BACA,sBACA,sBACA,0BACA,2BACA,uBACA,2BACA,iCACA,0BACA,qBACA,2BACA,qBACA,oCACA,wBACA,4BACA,2BACA,qCACA,oBACA,qBACA,mBACA,uBACA,2BACA,sBACA,8BACA,+BACA,qCACA,2BACA,mDACA,yBACA,2BACA,mBACA,8CACA,6BACA,qBACA,mCACA,kCACA,kCACA,oBACA,0BACA,8BACA,2BACA,wEACA,gFACA,yBACA,8BACA,sBAEAC,eACAC,MAAS,YACTC,IAAO,UACPC,WAAc,aACdC,UAAa,YACbC,SAAY,WACZC,SAAY,YAEZ9yD,yBAA4B,SAAU76B,QAEtC,QAAS66B,4BACL,GAAIvD,OAAQt3B,OAAOyhC,KAAKjsC,OAASA,IAqCjC,OApCA8hC,OAAMs2D,WACNR,OAAOhxF,QAAQ,SAAUyxF,aACr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","file":"/home/travis/build/angular/angular/dist/packages-dist/compiler/bundles/compiler.umd.min.js","sourcesContent":["/**\n * @license Angular v5.0.0-beta.7-86ffacf\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.compiler = {})));\n}(this, (function (exports) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\n\n/**\n * @license Angular v5.0.0-beta.7-86ffacf\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\nfunction Inject() { }\nvar createInject = makeMetadataFactory('Inject', function (token) { return ({ token: token }); });\nvar createInjectionToken = makeMetadataFactory('InjectionToken', function (desc) { return ({ _desc: desc }); });\n/**\n * @record\n */\nfunction Attribute() { }\nvar createAttribute = makeMetadataFactory('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * @record\n */\nfunction Query() { }\nvar createContentChildren = makeMetadataFactory('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n});\nvar createContentChild = makeMetadataFactory('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n});\nvar createViewChildren = makeMetadataFactory('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n});\nvar createViewChild = makeMetadataFactory('ViewChild', function (selector, data) {\n    return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n});\n/**\n * @record\n */\nfunction Directive() { }\nvar createDirective = makeMetadataFactory('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n});\n/**\n * @record\n */\nfunction Component() { }\n/** @enum {number} */\nvar ViewEncapsulation = {\n    Emulated: 0,\n    Native: 1,\n    None: 2,\n};\nViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\nViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\nViewEncapsulation[ViewEncapsulation.None] = \"None\";\n/** @enum {number} */\nvar ChangeDetectionStrategy = {\n    OnPush: 0,\n    Default: 1,\n};\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\nvar createComponent = makeMetadataFactory('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: ChangeDetectionStrategy.Default }, c));\n});\n/**\n * @record\n */\nfunction Pipe() { }\nvar createPipe = makeMetadataFactory('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n * @record\n */\nfunction Input() { }\nvar createInput = makeMetadataFactory('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * @record\n */\nfunction Output() { }\nvar createOutput = makeMetadataFactory('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * @record\n */\nfunction HostBinding() { }\nvar createHostBinding = makeMetadataFactory('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * @record\n */\nfunction HostListener() { }\nvar createHostListener = makeMetadataFactory('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n/**\n * @record\n */\nfunction NgModule() { }\nvar createNgModule = makeMetadataFactory('NgModule', function (ngModule) { return ngModule; });\n/**\n * @record\n */\nfunction ModuleWithProviders() { }\n/**\n * @record\n */\nfunction SchemaMetadata() { }\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\nvar createOptional = makeMetadataFactory('Optional');\nvar createInjectable = makeMetadataFactory('Injectable');\nvar createSelf = makeMetadataFactory('Self');\nvar createSkipSelf = makeMetadataFactory('SkipSelf');\nvar createHost = makeMetadataFactory('Host');\nvar Type = Function;\n/** @enum {number} */\nvar SecurityContext = {\n    NONE: 0,\n    HTML: 1,\n    STYLE: 2,\n    SCRIPT: 3,\n    URL: 4,\n    RESOURCE_URL: 5,\n};\nSecurityContext[SecurityContext.NONE] = \"NONE\";\nSecurityContext[SecurityContext.HTML] = \"HTML\";\nSecurityContext[SecurityContext.STYLE] = \"STYLE\";\nSecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\nSecurityContext[SecurityContext.URL] = \"URL\";\nSecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n/** @enum {number} */\nvar NodeFlags = {\n    None: 0,\n    TypeElement: 1,\n    TypeText: 2,\n    ProjectedTemplate: 4,\n    CatRenderNode: 3,\n    TypeNgContent: 8,\n    TypePipe: 16,\n    TypePureArray: 32,\n    TypePureObject: 64,\n    TypePurePipe: 128,\n    CatPureExpression: 224,\n    TypeValueProvider: 256,\n    TypeClassProvider: 512,\n    TypeFactoryProvider: 1024,\n    TypeUseExistingProvider: 2048,\n    LazyProvider: 4096,\n    PrivateProvider: 8192,\n    TypeDirective: 16384,\n    Component: 32768,\n    CatProviderNoDirective: 3840,\n    CatProvider: 20224,\n    OnInit: 65536,\n    OnDestroy: 131072,\n    DoCheck: 262144,\n    OnChanges: 524288,\n    AfterContentInit: 1048576,\n    AfterContentChecked: 2097152,\n    AfterViewInit: 4194304,\n    AfterViewChecked: 8388608,\n    EmbeddedViews: 16777216,\n    ComponentView: 33554432,\n    TypeContentQuery: 67108864,\n    TypeViewQuery: 134217728,\n    StaticQuery: 268435456,\n    DynamicQuery: 536870912,\n    CatQuery: 201326592,\n    // mutually exclusive values...\n    Types: 201347067,\n};\n/** @enum {number} */\nvar DepFlags = {\n    None: 0,\n    SkipSelf: 1,\n    Optional: 2,\n    Value: 8,\n};\n/** @enum {number} */\nvar ArgumentType = { Inline: 0, Dynamic: 1, };\n/** @enum {number} */\nvar BindingFlags = {\n    TypeElementAttribute: 1,\n    TypeElementClass: 2,\n    TypeElementStyle: 4,\n    TypeProperty: 8,\n    SyntheticProperty: 16,\n    SyntheticHostProperty: 32,\n    CatSyntheticProperty: 48,\n    // mutually exclusive values...\n    Types: 15,\n};\n/** @enum {number} */\nvar QueryBindingType = { First: 0, All: 1, };\n/** @enum {number} */\nvar QueryValueType = {\n    ElementRef: 0,\n    RenderElement: 1,\n    TemplateRef: 2,\n    ViewContainerRef: 3,\n    Provider: 4,\n};\n/** @enum {number} */\nvar ViewFlags = {\n    None: 0,\n    OnPush: 2,\n};\n/** @enum {number} */\nvar MissingTranslationStrategy = {\n    Error: 0,\n    Warning: 1,\n    Ignore: 2,\n};\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = \"Error\";\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = \"Warning\";\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = \"Ignore\";\n/**\n * @record\n */\nfunction MetadataFactory() { }\n/**\n * @template T\n * @param {?} name\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataFactory(name, props) {\n    var /** @type {?} */ factory = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ values = props ? props.apply(void 0, args) : {};\n        return __assign({ ngMetadataName: name }, values);\n    };\n    factory.isTypeOf = function (obj) { return obj && obj.ngMetadataName === name; };\n    factory.ngMetadataName = name;\n    return factory;\n}\n\n\nvar core = Object.freeze({\n\tInject: Inject,\n\tcreateInject: createInject,\n\tcreateInjectionToken: createInjectionToken,\n\tAttribute: Attribute,\n\tcreateAttribute: createAttribute,\n\tQuery: Query,\n\tcreateContentChildren: createContentChildren,\n\tcreateContentChild: createContentChild,\n\tcreateViewChildren: createViewChildren,\n\tcreateViewChild: createViewChild,\n\tDirective: Directive,\n\tcreateDirective: createDirective,\n\tComponent: Component,\n\tViewEncapsulation: ViewEncapsulation,\n\tChangeDetectionStrategy: ChangeDetectionStrategy,\n\tcreateComponent: createComponent,\n\tPipe: Pipe,\n\tcreatePipe: createPipe,\n\tInput: Input,\n\tcreateInput: createInput,\n\tOutput: Output,\n\tcreateOutput: createOutput,\n\tHostBinding: HostBinding,\n\tcreateHostBinding: createHostBinding,\n\tHostListener: HostListener,\n\tcreateHostListener: createHostListener,\n\tNgModule: NgModule,\n\tcreateNgModule: createNgModule,\n\tModuleWithProviders: ModuleWithProviders,\n\tSchemaMetadata: SchemaMetadata,\n\tCUSTOM_ELEMENTS_SCHEMA: CUSTOM_ELEMENTS_SCHEMA,\n\tNO_ERRORS_SCHEMA: NO_ERRORS_SCHEMA,\n\tcreateOptional: createOptional,\n\tcreateInjectable: createInjectable,\n\tcreateSelf: createSelf,\n\tcreateSkipSelf: createSkipSelf,\n\tcreateHost: createHost,\n\tType: Type,\n\tSecurityContext: SecurityContext,\n\tNodeFlags: NodeFlags,\n\tDepFlags: DepFlags,\n\tArgumentType: ArgumentType,\n\tBindingFlags: BindingFlags,\n\tQueryBindingType: QueryBindingType,\n\tQueryValueType: QueryValueType,\n\tViewFlags: ViewFlags,\n\tMissingTranslationStrategy: MissingTranslationStrategy,\n\tMetadataFactory: MetadataFactory\n});\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return m[1].toUpperCase();\n    });\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtColon(input, defaultValues) {\n    return _splitAt(input, ':', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtPeriod(input, defaultValues) {\n    return _splitAt(input, '.', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} character\n * @param {?} defaultValues\n * @return {?}\n */\nfunction _splitAt(input, character, defaultValues) {\n    var /** @type {?} */ characterIndex = input.indexOf(character);\n    if (characterIndex == -1)\n        return defaultValues;\n    return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n}\n/**\n * @param {?} value\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nfunction visitValue(value, visitor, context) {\n    if (Array.isArray(value)) {\n        return visitor.visitArray(/** @type {?} */ (value), context);\n    }\n    if (isStrictStringMap(value)) {\n        return visitor.visitStringMap(/** @type {?} */ (value), context);\n    }\n    if (value == null || typeof value == 'string' || typeof value == 'number' ||\n        typeof value == 'boolean') {\n        return visitor.visitPrimitive(value, context);\n    }\n    return visitor.visitOther(value, context);\n}\n/**\n * @param {?} val\n * @return {?}\n */\nfunction isDefined(val) {\n    return val !== null && val !== undefined;\n}\n/**\n * @template T\n * @param {?} val\n * @return {?}\n */\nfunction noUndefined(val) {\n    return val === undefined ? /** @type {?} */ ((null)) : val;\n}\n/**\n * @record\n */\n\nvar ValueTransformer = (function () {\n    function ValueTransformer() {\n    }\n    /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitArray = /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    function (arr, context) {\n        var _this = this;\n        return arr.map(function (value) { return visitValue(value, _this, context); });\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    function (map, context) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        Object.keys(map).forEach(function (key) { result[key] = visitValue(map[key], _this, context); });\n        return result;\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitPrimitive = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) { return value; };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) { return value; };\n    return ValueTransformer;\n}());\nvar SyncAsync = {\n    assertSync: function (value) {\n        if (isPromise(value)) {\n            throw new Error(\"Illegal state: value cannot be a promise\");\n        }\n        return value;\n    },\n    then: function (value, cb) { return isPromise(value) ? value.then(cb) : cb(value); },\n    all: function (syncAsyncValues) {\n        return syncAsyncValues.some(isPromise) ? Promise.all(syncAsyncValues) : /** @type {?} */ (syncAsyncValues);\n    }\n};\n/**\n * @param {?} msg\n * @param {?=} parseErrors\n * @return {?}\n */\nfunction syntaxError(msg, parseErrors) {\n    var /** @type {?} */ error = Error(msg);\n    (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR] = true;\n    if (parseErrors)\n        (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] = parseErrors;\n    return error;\n}\nvar ERROR_SYNTAX_ERROR = 'ngSyntaxError';\nvar ERROR_PARSE_ERRORS = 'ngParseErrors';\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isSyntaxError(error) {\n    return (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getParseErrors(error) {\n    return (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] || [];\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction escapeRegExp(s) {\n    return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\nvar STRING_MAP_PROTO = Object.getPrototypeOf({});\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isStrictStringMap(obj) {\n    return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction utf8Encode(str) {\n    var /** @type {?} */ encoded = '';\n    for (var /** @type {?} */ index = 0; index < str.length; index++) {\n        var /** @type {?} */ codePoint = str.charCodeAt(index);\n        // decode surrogate\n        // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        if (codePoint >= 0xd800 && codePoint <= 0xdbff && str.length > (index + 1)) {\n            var /** @type {?} */ low = str.charCodeAt(index + 1);\n            if (low >= 0xdc00 && low <= 0xdfff) {\n                index++;\n                codePoint = ((codePoint - 0xd800) << 10) + low - 0xdc00 + 0x10000;\n            }\n        }\n        if (codePoint <= 0x7f) {\n            encoded += String.fromCharCode(codePoint);\n        }\n        else if (codePoint <= 0x7ff) {\n            encoded += String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xc0, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0xffff) {\n            encoded += String.fromCharCode((codePoint >> 12) | 0xe0, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0x1fffff) {\n            encoded += String.fromCharCode(((codePoint >> 18) & 0x07) | 0xf0, ((codePoint >> 12) & 0x3f) | 0x80, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n    }\n    return encoded;\n}\n/**\n * @record\n */\n\n/**\n * @param {?} token\n * @return {?}\n */\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var /** @type {?} */ res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n * @param {?} type\n * @return {?}\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__')) {\n        return type();\n    }\n    else {\n        return type;\n    }\n}\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\nvar Version = (function () {\n    function Version(full) {\n        this.full = full;\n        var /** @type {?} */ splits = full.split('.');\n        this.major = splits[0];\n        this.minor = splits[1];\n        this.patch = splits.slice(2).join('.');\n    }\n    return Version;\n}());\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new Version('5.0.0-beta.7-86ffacf');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An Abstract Syntax Tree node representing part of a parsed Angular template.\n * @record\n */\n\n/**\n * A segment of text within the template.\n */\nvar TextAst = (function () {\n    function TextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TextAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return TextAst;\n}());\n/**\n * A bound expression within the text of a template.\n */\nvar BoundTextAst = (function () {\n    function BoundTextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundTextAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBoundText(this, context);\n    };\n    return BoundTextAst;\n}());\n/**\n * A plain attribute on an element.\n */\nvar AttrAst = (function () {\n    function AttrAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AttrAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitAttr(this, context); };\n    return AttrAst;\n}());\n/**\n * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n * `[\\@trigger]=\"stateExp\"`)\n */\nvar BoundElementPropertyAst = (function () {\n    function BoundElementPropertyAst(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n        this.isAnimation = this.type === PropertyBindingType.Animation;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundElementPropertyAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitElementProperty(this, context);\n    };\n    return BoundElementPropertyAst;\n}());\n/**\n * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n * `(\\@trigger.phase)=\"callback($event)\"`).\n */\nvar BoundEventAst = (function () {\n    function BoundEventAst(name, target, phase, handler, sourceSpan) {\n        this.name = name;\n        this.target = target;\n        this.phase = phase;\n        this.handler = handler;\n        this.sourceSpan = sourceSpan;\n        this.fullName = BoundEventAst.calcFullName(this.name, this.target, this.phase);\n        this.isAnimation = !!this.phase;\n    }\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    BoundEventAst.calcFullName = /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    function (name, target, phase) {\n        if (target) {\n            return target + \":\" + name;\n        }\n        else if (phase) {\n            return \"@\" + name + \".\" + phase;\n        }\n        else {\n            return name;\n        }\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundEventAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitEvent(this, context);\n    };\n    return BoundEventAst;\n}());\n/**\n * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n */\nvar ReferenceAst = (function () {\n    function ReferenceAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReferenceAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReference(this, context);\n    };\n    return ReferenceAst;\n}());\n/**\n * A variable declaration on a <ng-template> (e.g. `var-someName=\"someLocalName\"`).\n */\nvar VariableAst = (function () {\n    function VariableAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    VariableAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitVariable(this, context);\n    };\n    return VariableAst;\n}());\n/**\n * An element declaration in a template.\n */\nvar ElementAst = (function () {\n    function ElementAst(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan, endSourceSpan) {\n        this.name = name;\n        this.attrs = attrs;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.references = references;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ElementAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitElement(this, context);\n    };\n    return ElementAst;\n}());\n/**\n * A `<ng-template>` element included in an Angular template.\n */\nvar EmbeddedTemplateAst = (function () {\n    function EmbeddedTemplateAst(attrs, outputs, references, variables, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan) {\n        this.attrs = attrs;\n        this.outputs = outputs;\n        this.references = references;\n        this.variables = variables;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    EmbeddedTemplateAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitEmbeddedTemplate(this, context);\n    };\n    return EmbeddedTemplateAst;\n}());\n/**\n * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n */\nvar BoundDirectivePropertyAst = (function () {\n    function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\n        this.directiveName = directiveName;\n        this.templateName = templateName;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundDirectivePropertyAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDirectiveProperty(this, context);\n    };\n    return BoundDirectivePropertyAst;\n}());\n/**\n * A directive declared on an element.\n */\nvar DirectiveAst = (function () {\n    function DirectiveAst(directive, inputs, hostProperties, hostEvents, contentQueryStartId, sourceSpan) {\n        this.directive = directive;\n        this.inputs = inputs;\n        this.hostProperties = hostProperties;\n        this.hostEvents = hostEvents;\n        this.contentQueryStartId = contentQueryStartId;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DirectiveAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDirective(this, context);\n    };\n    return DirectiveAst;\n}());\n/**\n * A provider declared on an element\n */\nvar ProviderAst = (function () {\n    function ProviderAst(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan) {\n        this.token = token;\n        this.multiProvider = multiProvider;\n        this.eager = eager;\n        this.providers = providers;\n        this.providerType = providerType;\n        this.lifecycleHooks = lifecycleHooks;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ProviderAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        // No visit method in the visitor for now...\n        return null;\n    };\n    return ProviderAst;\n}());\n/** @enum {number} */\nvar ProviderAstType = {\n    PublicService: 0,\n    PrivateService: 1,\n    Component: 2,\n    Directive: 3,\n    Builtin: 4,\n};\nProviderAstType[ProviderAstType.PublicService] = \"PublicService\";\nProviderAstType[ProviderAstType.PrivateService] = \"PrivateService\";\nProviderAstType[ProviderAstType.Component] = \"Component\";\nProviderAstType[ProviderAstType.Directive] = \"Directive\";\nProviderAstType[ProviderAstType.Builtin] = \"Builtin\";\n/**\n * Position where content is to be projected (instance of `<ng-content>` in a template).\n */\nvar NgContentAst = (function () {\n    function NgContentAst(index, ngContentIndex, sourceSpan) {\n        this.index = index;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NgContentAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitNgContent(this, context);\n    };\n    return NgContentAst;\n}());\n/** @enum {number} */\nvar PropertyBindingType = {\n    /**\n       * A normal binding to a property (e.g. `[property]=\"expression\"`).\n       */\n    Property: 0,\n    /**\n       * A binding to an element attribute (e.g. `[attr.name]=\"expression\"`).\n       */\n    Attribute: 1,\n    /**\n       * A binding to a CSS class (e.g. `[class.name]=\"condition\"`).\n       */\n    Class: 2,\n    /**\n       * A binding to a style rule (e.g. `[style.rule]=\"expression\"`).\n       */\n    Style: 3,\n    /**\n       * A binding to an animation reference (e.g. `[animate.key]=\"expression\"`).\n       */\n    Animation: 4,\n};\nPropertyBindingType[PropertyBindingType.Property] = \"Property\";\nPropertyBindingType[PropertyBindingType.Attribute] = \"Attribute\";\nPropertyBindingType[PropertyBindingType.Class] = \"Class\";\nPropertyBindingType[PropertyBindingType.Style] = \"Style\";\nPropertyBindingType[PropertyBindingType.Animation] = \"Animation\";\n/**\n * @record\n */\n\n/**\n * A visitor for {\\@link TemplateAst} trees that will process each node.\n * @record\n */\n\n/**\n * A visitor that accepts each node but doesn't do anything. It is intended to be used\n * as the base class for a visitor that is only interested in a subset of the node types.\n */\nvar NullTemplateVisitor = (function () {\n    function NullTemplateVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return NullTemplateVisitor;\n}());\n/**\n * Base class that can be used to build a visitor that visits each node\n * in an template ast recursively.\n */\nvar RecursiveTemplateAstVisitor = (function (_super) {\n    __extends(RecursiveTemplateAstVisitor, _super);\n    function RecursiveTemplateAstVisitor() {\n        return _super.call(this) || this;\n    }\n    // Nodes with children\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.references);\n            visit(ast.variables);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.inputs);\n            visit(ast.outputs);\n            visit(ast.references);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.inputs);\n            visit(ast.hostProperties);\n            visit(ast.hostEvents);\n        });\n    };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitChildren = /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children && children.length)\n                results.push(templateVisitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveTemplateAstVisitor;\n}(NullTemplateVisitor));\n/**\n * Visit every node in a list of {\\@link TemplateAst}s with the given {\\@link TemplateAstVisitor}.\n * @param {?} visitor\n * @param {?} asts\n * @param {?=} context\n * @return {?}\n */\nfunction templateVisitAll(visitor, asts, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return /** @type {?} */ ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    asts.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar CompilerConfig = (function () {\n    function CompilerConfig(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.defaultEncapsulation, defaultEncapsulation = _c === void 0 ? ViewEncapsulation.Emulated : _c, _d = _b.useJit, useJit = _d === void 0 ? true : _d, _e = _b.jitDevMode, jitDevMode = _e === void 0 ? false : _e, missingTranslation = _b.missingTranslation, enableLegacyTemplate = _b.enableLegacyTemplate, preserveWhitespaces = _b.preserveWhitespaces;\n        this.defaultEncapsulation = defaultEncapsulation;\n        this.useJit = !!useJit;\n        this.jitDevMode = !!jitDevMode;\n        this.missingTranslation = missingTranslation || null;\n        this.enableLegacyTemplate = enableLegacyTemplate === true;\n        this.preserveWhitespaces = preserveWhitespacesDefault(noUndefined(preserveWhitespaces));\n    }\n    return CompilerConfig;\n}());\n/**\n * @param {?} preserveWhitespacesOption\n * @param {?=} defaultSetting\n * @return {?}\n */\nfunction preserveWhitespacesDefault(preserveWhitespacesOption, defaultSetting) {\n    if (defaultSetting === void 0) { defaultSetting = true; }\n    return preserveWhitespacesOption === null ? defaultSetting : preserveWhitespacesOption;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A token representing the a reference to a static type.\n *\n * This token is unique for a filePath and name and can be used as a hash table key.\n */\nvar StaticSymbol = (function () {\n    function StaticSymbol(filePath, name, members) {\n        this.filePath = filePath;\n        this.name = name;\n        this.members = members;\n    }\n    /**\n     * @return {?}\n     */\n    StaticSymbol.prototype.assertNoMembers = /**\n     * @return {?}\n     */\n    function () {\n        if (this.members.length) {\n            throw new Error(\"Illegal state: symbol without members expected, but got \" + JSON.stringify(this) + \".\");\n        }\n    };\n    return StaticSymbol;\n}());\n/**\n * A cache of static symbol used by the StaticReflector to return the same symbol for the\n * same symbol values.\n */\nvar StaticSymbolCache = (function () {\n    function StaticSymbolCache() {\n        this.cache = new Map();\n    }\n    /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticSymbolCache.prototype.get = /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        members = members || [];\n        var /** @type {?} */ memberSuffix = members.length ? \".\" + members.join('.') : '';\n        var /** @type {?} */ key = \"\\\"\" + declarationFile + \"\\\".\" + name + memberSuffix;\n        var /** @type {?} */ result = this.cache.get(key);\n        if (!result) {\n            result = new StaticSymbol(declarationFile, name, members);\n            this.cache.set(key, result);\n        }\n        return result;\n    };\n    return StaticSymbolCache;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// group 0: \"[prop] or (event) or @trigger\"\n// group 1: \"prop\" from \"[prop]\"\n// group 2: \"event\" from \"(event)\"\n// group 3: \"@trigger\" from \"@trigger\"\nvar HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\nvar CompileAnimationEntryMetadata = (function () {\n    function CompileAnimationEntryMetadata(name, definitions) {\n        if (name === void 0) { name = null; }\n        if (definitions === void 0) { definitions = null; }\n        this.name = name;\n        this.definitions = definitions;\n    }\n    return CompileAnimationEntryMetadata;\n}());\n/**\n * @abstract\n */\nvar CompileAnimationStateMetadata = (function () {\n    function CompileAnimationStateMetadata() {\n    }\n    return CompileAnimationStateMetadata;\n}());\nvar CompileAnimationStateDeclarationMetadata = (function (_super) {\n    __extends(CompileAnimationStateDeclarationMetadata, _super);\n    function CompileAnimationStateDeclarationMetadata(stateNameExpr, styles) {\n        var _this = _super.call(this) || this;\n        _this.stateNameExpr = stateNameExpr;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationStateDeclarationMetadata;\n}(CompileAnimationStateMetadata));\nvar CompileAnimationStateTransitionMetadata = (function (_super) {\n    __extends(CompileAnimationStateTransitionMetadata, _super);\n    function CompileAnimationStateTransitionMetadata(stateChangeExpr, steps) {\n        var _this = _super.call(this) || this;\n        _this.stateChangeExpr = stateChangeExpr;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationStateTransitionMetadata;\n}(CompileAnimationStateMetadata));\n/**\n * @abstract\n */\nvar CompileAnimationMetadata = (function () {\n    function CompileAnimationMetadata() {\n    }\n    return CompileAnimationMetadata;\n}());\nvar CompileAnimationKeyframesSequenceMetadata = (function (_super) {\n    __extends(CompileAnimationKeyframesSequenceMetadata, _super);\n    function CompileAnimationKeyframesSequenceMetadata(steps) {\n        if (steps === void 0) { steps = []; }\n        var _this = _super.call(this) || this;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationKeyframesSequenceMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationStyleMetadata = (function (_super) {\n    __extends(CompileAnimationStyleMetadata, _super);\n    function CompileAnimationStyleMetadata(offset, styles) {\n        if (styles === void 0) { styles = null; }\n        var _this = _super.call(this) || this;\n        _this.offset = offset;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationStyleMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationAnimateMetadata = (function (_super) {\n    __extends(CompileAnimationAnimateMetadata, _super);\n    function CompileAnimationAnimateMetadata(timings, styles) {\n        if (timings === void 0) { timings = 0; }\n        if (styles === void 0) { styles = null; }\n        var _this = _super.call(this) || this;\n        _this.timings = timings;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationAnimateMetadata;\n}(CompileAnimationMetadata));\n/**\n * @abstract\n */\nvar CompileAnimationWithStepsMetadata = (function (_super) {\n    __extends(CompileAnimationWithStepsMetadata, _super);\n    function CompileAnimationWithStepsMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        var _this = _super.call(this) || this;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationWithStepsMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationSequenceMetadata = (function (_super) {\n    __extends(CompileAnimationSequenceMetadata, _super);\n    function CompileAnimationSequenceMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        return _super.call(this, steps) || this;\n    }\n    return CompileAnimationSequenceMetadata;\n}(CompileAnimationWithStepsMetadata));\nvar CompileAnimationGroupMetadata = (function (_super) {\n    __extends(CompileAnimationGroupMetadata, _super);\n    function CompileAnimationGroupMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        return _super.call(this, steps) || this;\n    }\n    return CompileAnimationGroupMetadata;\n}(CompileAnimationWithStepsMetadata));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _sanitizeIdentifier(name) {\n    return name.replace(/\\W/g, '_');\n}\nvar _anonymousTypeIndex = 0;\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierName(compileIdentifier) {\n    if (!compileIdentifier || !compileIdentifier.reference) {\n        return null;\n    }\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.name;\n    }\n    if (ref['__anonymousType']) {\n        return ref['__anonymousType'];\n    }\n    var /** @type {?} */ identifier = stringify(ref);\n    if (identifier.indexOf('(') >= 0) {\n        // case: anonymous functions!\n        identifier = \"anonymous_\" + _anonymousTypeIndex++;\n        ref['__anonymousType'] = identifier;\n    }\n    else {\n        identifier = _sanitizeIdentifier(identifier);\n    }\n    return identifier;\n}\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierModuleUrl(compileIdentifier) {\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.filePath;\n    }\n    // Runtime type\n    return \"./\" + stringify(ref);\n}\n/**\n * @param {?} compType\n * @param {?} embeddedTemplateIndex\n * @return {?}\n */\nfunction viewClassName(compType, embeddedTemplateIndex) {\n    return \"View_\" + identifierName({ reference: compType }) + \"_\" + embeddedTemplateIndex;\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction rendererTypeName(compType) {\n    return \"RenderType_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction hostViewClassName(compType) {\n    return \"HostView_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction componentFactoryName(compType) {\n    return identifierName({ reference: compType }) + \"NgFactory\";\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/** @enum {number} */\nvar CompileSummaryKind = {\n    Pipe: 0,\n    Directive: 1,\n    NgModule: 2,\n    Injectable: 3,\n};\nCompileSummaryKind[CompileSummaryKind.Pipe] = \"Pipe\";\nCompileSummaryKind[CompileSummaryKind.Directive] = \"Directive\";\nCompileSummaryKind[CompileSummaryKind.NgModule] = \"NgModule\";\nCompileSummaryKind[CompileSummaryKind.Injectable] = \"Injectable\";\n/**\n * A CompileSummary is the data needed to use a directive / pipe / module\n * in other modules / components. However, this data is not enough to compile\n * the directive / module itself.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenName(token) {\n    return token.value != null ? _sanitizeIdentifier(token.value) : identifierName(token.identifier);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenReference(token) {\n    if (token.identifier != null) {\n        return token.identifier.reference;\n    }\n    else {\n        return token.value;\n    }\n}\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a type.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata about a stylesheet\n */\nvar CompileStylesheetMetadata = (function () {\n    function CompileStylesheetMetadata(_a) {\n        var _b = _a === void 0 ? {} : _a, moduleUrl = _b.moduleUrl, styles = _b.styles, styleUrls = _b.styleUrls;\n        this.moduleUrl = moduleUrl || null;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n    }\n    return CompileStylesheetMetadata;\n}());\n/**\n * Summary Metadata regarding compilation of a template.\n * @record\n */\n\n/**\n * Metadata regarding compilation of a template.\n */\nvar CompileTemplateMetadata = (function () {\n    function CompileTemplateMetadata(_a) {\n        var encapsulation = _a.encapsulation, template = _a.template, templateUrl = _a.templateUrl, htmlAst = _a.htmlAst, styles = _a.styles, styleUrls = _a.styleUrls, externalStylesheets = _a.externalStylesheets, animations = _a.animations, ngContentSelectors = _a.ngContentSelectors, interpolation = _a.interpolation, isInline = _a.isInline, preserveWhitespaces = _a.preserveWhitespaces;\n        this.encapsulation = encapsulation;\n        this.template = template;\n        this.templateUrl = templateUrl;\n        this.htmlAst = htmlAst;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n        this.externalStylesheets = _normalizeArray(externalStylesheets);\n        this.animations = animations ? flatten(animations) : [];\n        this.ngContentSelectors = ngContentSelectors || [];\n        if (interpolation && interpolation.length != 2) {\n            throw new Error(\"'interpolation' should have a start and an end symbol.\");\n        }\n        this.interpolation = interpolation;\n        this.isInline = isInline;\n        this.preserveWhitespaces = preserveWhitespaces;\n    }\n    /**\n     * @return {?}\n     */\n    CompileTemplateMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            animations: this.animations.map(function (anim) { return anim.name; }),\n            ngContentSelectors: this.ngContentSelectors,\n            encapsulation: this.encapsulation,\n        };\n    };\n    return CompileTemplateMetadata;\n}());\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a directive.\n */\nvar CompileDirectiveMetadata = (function () {\n    function CompileDirectiveMetadata(_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, hostListeners = _a.hostListeners, hostProperties = _a.hostProperties, hostAttributes = _a.hostAttributes, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        this.isHost = !!isHost;\n        this.type = type;\n        this.isComponent = isComponent;\n        this.selector = selector;\n        this.exportAs = exportAs;\n        this.changeDetection = changeDetection;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.hostListeners = hostListeners;\n        this.hostProperties = hostProperties;\n        this.hostAttributes = hostAttributes;\n        this.providers = _normalizeArray(providers);\n        this.viewProviders = _normalizeArray(viewProviders);\n        this.queries = _normalizeArray(queries);\n        this.viewQueries = _normalizeArray(viewQueries);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.template = template;\n        this.componentViewType = componentViewType;\n        this.rendererType = rendererType;\n        this.componentFactory = componentFactory;\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    CompileDirectiveMetadata.create = /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, host = _a.host, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        var /** @type {?} */ hostListeners = {};\n        var /** @type {?} */ hostProperties = {};\n        var /** @type {?} */ hostAttributes = {};\n        if (host != null) {\n            Object.keys(host).forEach(function (key) {\n                var /** @type {?} */ value = host[key];\n                var /** @type {?} */ matches = key.match(HOST_REG_EXP);\n                if (matches === null) {\n                    hostAttributes[key] = value;\n                }\n                else if (matches[1] != null) {\n                    hostProperties[matches[1]] = value;\n                }\n                else if (matches[2] != null) {\n                    hostListeners[matches[2]] = value;\n                }\n            });\n        }\n        var /** @type {?} */ inputsMap = {};\n        if (inputs != null) {\n            inputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                inputsMap[parts[0]] = parts[1];\n            });\n        }\n        var /** @type {?} */ outputsMap = {};\n        if (outputs != null) {\n            outputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                outputsMap[parts[0]] = parts[1];\n            });\n        }\n        return new CompileDirectiveMetadata({\n            isHost: isHost,\n            type: type,\n            isComponent: !!isComponent, selector: selector, exportAs: exportAs, changeDetection: changeDetection,\n            inputs: inputsMap,\n            outputs: outputsMap,\n            hostListeners: hostListeners,\n            hostProperties: hostProperties,\n            hostAttributes: hostAttributes,\n            providers: providers,\n            viewProviders: viewProviders,\n            queries: queries,\n            viewQueries: viewQueries,\n            entryComponents: entryComponents,\n            template: template,\n            componentViewType: componentViewType,\n            rendererType: rendererType,\n            componentFactory: componentFactory,\n        });\n    };\n    /**\n     * @return {?}\n     */\n    CompileDirectiveMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            summaryKind: CompileSummaryKind.Directive,\n            type: this.type,\n            isComponent: this.isComponent,\n            selector: this.selector,\n            exportAs: this.exportAs,\n            inputs: this.inputs,\n            outputs: this.outputs,\n            hostListeners: this.hostListeners,\n            hostProperties: this.hostProperties,\n            hostAttributes: this.hostAttributes,\n            providers: this.providers,\n            viewProviders: this.viewProviders,\n            queries: this.queries,\n            viewQueries: this.viewQueries,\n            entryComponents: this.entryComponents,\n            changeDetection: this.changeDetection,\n            template: this.template && this.template.toSummary(),\n            componentViewType: this.componentViewType,\n            rendererType: this.rendererType,\n            componentFactory: this.componentFactory\n        };\n    };\n    return CompileDirectiveMetadata;\n}());\n/**\n * @record\n */\n\nvar CompilePipeMetadata = (function () {\n    function CompilePipeMetadata(_a) {\n        var type = _a.type, name = _a.name, pure = _a.pure;\n        this.type = type;\n        this.name = name;\n        this.pure = !!pure;\n    }\n    /**\n     * @return {?}\n     */\n    CompilePipeMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            summaryKind: CompileSummaryKind.Pipe,\n            type: this.type,\n            name: this.name,\n            pure: this.pure\n        };\n    };\n    return CompilePipeMetadata;\n}());\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a module.\n */\nvar CompileNgModuleMetadata = (function () {\n    function CompileNgModuleMetadata(_a) {\n        var type = _a.type, providers = _a.providers, declaredDirectives = _a.declaredDirectives, exportedDirectives = _a.exportedDirectives, declaredPipes = _a.declaredPipes, exportedPipes = _a.exportedPipes, entryComponents = _a.entryComponents, bootstrapComponents = _a.bootstrapComponents, importedModules = _a.importedModules, exportedModules = _a.exportedModules, schemas = _a.schemas, transitiveModule = _a.transitiveModule, id = _a.id;\n        this.type = type || null;\n        this.declaredDirectives = _normalizeArray(declaredDirectives);\n        this.exportedDirectives = _normalizeArray(exportedDirectives);\n        this.declaredPipes = _normalizeArray(declaredPipes);\n        this.exportedPipes = _normalizeArray(exportedPipes);\n        this.providers = _normalizeArray(providers);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n        this.importedModules = _normalizeArray(importedModules);\n        this.exportedModules = _normalizeArray(exportedModules);\n        this.schemas = _normalizeArray(schemas);\n        this.id = id || null;\n        this.transitiveModule = transitiveModule || null;\n    }\n    /**\n     * @return {?}\n     */\n    CompileNgModuleMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ module = /** @type {?} */ ((this.transitiveModule));\n        return {\n            summaryKind: CompileSummaryKind.NgModule,\n            type: this.type,\n            entryComponents: module.entryComponents,\n            providers: module.providers,\n            modules: module.modules,\n            exportedDirectives: module.exportedDirectives,\n            exportedPipes: module.exportedPipes\n        };\n    };\n    return CompileNgModuleMetadata;\n}());\nvar TransitiveCompileNgModuleMetadata = (function () {\n    function TransitiveCompileNgModuleMetadata() {\n        this.directivesSet = new Set();\n        this.directives = [];\n        this.exportedDirectivesSet = new Set();\n        this.exportedDirectives = [];\n        this.pipesSet = new Set();\n        this.pipes = [];\n        this.exportedPipesSet = new Set();\n        this.exportedPipes = [];\n        this.modulesSet = new Set();\n        this.modules = [];\n        this.entryComponentsSet = new Set();\n        this.entryComponents = [];\n        this.providers = [];\n    }\n    /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addProvider = /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    function (provider, module) {\n        this.providers.push({ provider: provider, module: module });\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addDirective = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.directivesSet.has(id.reference)) {\n            this.directivesSet.add(id.reference);\n            this.directives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedDirective = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.exportedDirectivesSet.has(id.reference)) {\n            this.exportedDirectivesSet.add(id.reference);\n            this.exportedDirectives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addPipe = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.pipesSet.has(id.reference)) {\n            this.pipesSet.add(id.reference);\n            this.pipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedPipe = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.exportedPipesSet.has(id.reference)) {\n            this.exportedPipesSet.add(id.reference);\n            this.exportedPipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addModule = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.modulesSet.has(id.reference)) {\n            this.modulesSet.add(id.reference);\n            this.modules.push(id);\n        }\n    };\n    /**\n     * @param {?} ec\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addEntryComponent = /**\n     * @param {?} ec\n     * @return {?}\n     */\n    function (ec) {\n        if (!this.entryComponentsSet.has(ec.componentType)) {\n            this.entryComponentsSet.add(ec.componentType);\n            this.entryComponents.push(ec);\n        }\n    };\n    return TransitiveCompileNgModuleMetadata;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _normalizeArray(obj) {\n    return obj || [];\n}\nvar ProviderMeta = (function () {\n    function ProviderMeta(token, _a) {\n        var useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n        this.token = token;\n        this.useClass = useClass || null;\n        this.useValue = useValue;\n        this.useExisting = useExisting;\n        this.useFactory = useFactory || null;\n        this.dependencies = deps || null;\n        this.multi = !!multi;\n    }\n    return ProviderMeta;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n        return (/** @type {?} */ (flat)).concat(flatItem);\n    }, []);\n}\n/**\n * @param {?} url\n * @return {?}\n */\nfunction sourceUrl(url) {\n    // Note: We need 3 \"/\" so that ng shows up as a separate domain\n    // in the chrome dev tools.\n    return url.replace(/(\\w+:\\/\\/[\\w:-]+)?(\\/+)?/, 'ng:///');\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @param {?} templateMeta\n * @return {?}\n */\nfunction templateSourceUrl(ngModuleType, compMeta, templateMeta) {\n    var /** @type {?} */ url;\n    if (templateMeta.isInline) {\n        if (compMeta.type.reference instanceof StaticSymbol) {\n            // Note: a .ts file might contain multiple components with inline templates,\n            // so we need to give them unique urls, as these will be used for sourcemaps.\n            url = compMeta.type.reference.filePath + \".\" + compMeta.type.reference.name + \".html\";\n        }\n        else {\n            url = identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".html\";\n        }\n    }\n    else {\n        url = /** @type {?} */ ((templateMeta.templateUrl));\n    }\n    // always prepend ng:// to make angular resources easy to find and not clobber\n    // user resources.\n    return sourceUrl(url);\n}\n/**\n * @param {?} meta\n * @param {?} id\n * @return {?}\n */\nfunction sharedStylesheetJitUrl(meta, id) {\n    var /** @type {?} */ pathParts = /** @type {?} */ ((meta.moduleUrl)).split(/\\/\\\\/g);\n    var /** @type {?} */ baseName = pathParts[pathParts.length - 1];\n    return sourceUrl(\"css/\" + id + baseName + \".ngstyle.js\");\n}\n/**\n * @param {?} moduleMeta\n * @return {?}\n */\nfunction ngModuleJitUrl(moduleMeta) {\n    return sourceUrl(identifierName(moduleMeta.type) + \"/module.ngfactory.js\");\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @return {?}\n */\nfunction templateJitUrl(ngModuleType, compMeta) {\n    return sourceUrl(identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".ngfactory.js\");\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A path is an ordered set of elements. Typically a path is to  a\n * particular offset in a source file. The head of the list is the top\n * most node. The tail is the node that contains the offset directly.\n *\n * For example, the expresion `a + b + c` might have an ast that looks\n * like:\n *     +\n *    / \\\n *   a   +\n *      / \\\n *     b   c\n *\n * The path to the node at offset 9 would be `['+' at 1-10, '+' at 7-10,\n * 'c' at 9-10]` and the path the node at offset 1 would be\n * `['+' at 1-10, 'a' at 1-2]`.\n */\nvar AstPath = (function () {\n    function AstPath(path, position) {\n        if (position === void 0) { position = -1; }\n        this.path = path;\n        this.position = position;\n    }\n    Object.defineProperty(AstPath.prototype, \"empty\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return !this.path || !this.path.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"head\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"tail\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.parentOf = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        return node && this.path[this.path.indexOf(node) - 1];\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.childOf = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.path[this.path.indexOf(node) + 1]; };\n    /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    AstPath.prototype.first = /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    function (ctor) {\n        for (var /** @type {?} */ i = this.path.length - 1; i >= 0; i--) {\n            var /** @type {?} */ item = this.path[i];\n            if (item instanceof ctor)\n                return /** @type {?} */ (item);\n        }\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.push = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { this.path.push(node); };\n    /**\n     * @return {?}\n     */\n    AstPath.prototype.pop = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((this.path.pop())); };\n    return AstPath;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar Text = (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Expansion = (function () {\n    function Expansion(switchValue, type, cases, sourceSpan, switchValueSourceSpan) {\n        this.switchValue = switchValue;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n        this.switchValueSourceSpan = switchValueSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Expansion.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitExpansion(this, context); };\n    return Expansion;\n}());\nvar ExpansionCase = (function () {\n    function ExpansionCase(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n        this.value = value;\n        this.expression = expression;\n        this.sourceSpan = sourceSpan;\n        this.valueSourceSpan = valueSourceSpan;\n        this.expSourceSpan = expSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpansionCase.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitExpansionCase(this, context); };\n    return ExpansionCase;\n}());\nvar Attribute$1 = (function () {\n    function Attribute(name, value, sourceSpan, valueSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n        this.valueSpan = valueSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Attribute.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitAttribute(this, context); };\n    return Attribute;\n}());\nvar Element = (function () {\n    function Element(name, attrs, children, sourceSpan, startSourceSpan, endSourceSpan) {\n        if (startSourceSpan === void 0) { startSourceSpan = null; }\n        if (endSourceSpan === void 0) { endSourceSpan = null; }\n        this.name = name;\n        this.attrs = attrs;\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Element.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitElement(this, context); };\n    return Element;\n}());\nvar Comment = (function () {\n    function Comment(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Comment.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitComment(this, context); };\n    return Comment;\n}());\n/**\n * @record\n */\n\n/**\n * @param {?} visitor\n * @param {?} nodes\n * @param {?=} context\n * @return {?}\n */\nfunction visitAll(visitor, nodes, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return /** @type {?} */ ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    nodes.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\nvar RecursiveVisitor = (function () {\n    function RecursiveVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitAttribute = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitComment = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansion = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) { visit(ast.cases); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansionCase = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitChildren = /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children)\n                results.push(visitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveVisitor;\n}());\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction spanOf(ast) {\n    var /** @type {?} */ start = ast.sourceSpan.start.offset;\n    var /** @type {?} */ end = ast.sourceSpan.end.offset;\n    if (ast instanceof Element) {\n        if (ast.endSourceSpan) {\n            end = ast.endSourceSpan.end.offset;\n        }\n        else if (ast.children && ast.children.length) {\n            end = spanOf(ast.children[ast.children.length - 1]).end;\n        }\n    }\n    return { start: start, end: end };\n}\n/**\n * @param {?} nodes\n * @param {?} position\n * @return {?}\n */\nfunction findNode(nodes, position) {\n    var /** @type {?} */ path = [];\n    var /** @type {?} */ visitor = new (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        class_1.prototype.visit = /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        function (ast, context) {\n            var /** @type {?} */ span = spanOf(ast);\n            if (span.start <= position && position < span.end) {\n                path.push(ast);\n            }\n            else {\n                // Returning a value here will result in the children being skipped.\n                return true;\n            }\n        };\n        return class_1;\n    }(RecursiveVisitor));\n    visitAll(visitor, nodes);\n    return new AstPath(path, position);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertArrayOfStrings(identifier, value) {\n    if (value == null) {\n        return;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n    }\n    for (var /** @type {?} */ i = 0; i < value.length; i += 1) {\n        if (typeof value[i] !== 'string') {\n            throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n        }\n    }\n}\nvar INTERPOLATION_BLACKLIST_REGEXPS = [\n    /^\\s*$/,\n    /[<>]/,\n    /^[{}]$/,\n    /&(#|[a-z])/i,\n    /^\\/\\//,\n];\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertInterpolationSymbols(identifier, value) {\n    if (value != null && !(Array.isArray(value) && value.length == 2)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array, [start, end].\");\n    }\n    else if (value != null) {\n        var /** @type {?} */ start_1 = /** @type {?} */ (value[0]);\n        var /** @type {?} */ end_1 = /** @type {?} */ (value[1]);\n        // black list checking\n        INTERPOLATION_BLACKLIST_REGEXPS.forEach(function (regexp) {\n            if (regexp.test(start_1) || regexp.test(end_1)) {\n                throw new Error(\"['\" + start_1 + \"', '\" + end_1 + \"'] contains unusable interpolation symbol.\");\n            }\n        });\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar InterpolationConfig = (function () {\n    function InterpolationConfig(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    /**\n     * @param {?} markers\n     * @return {?}\n     */\n    InterpolationConfig.fromArray = /**\n     * @param {?} markers\n     * @return {?}\n     */\n    function (markers) {\n        if (!markers) {\n            return DEFAULT_INTERPOLATION_CONFIG;\n        }\n        assertInterpolationSymbols('interpolation', markers);\n        return new InterpolationConfig(markers[0], markers[1]);\n    };\n    return InterpolationConfig;\n}());\nvar DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar StyleWithImports = (function () {\n    function StyleWithImports(style, styleUrls) {\n        this.style = style;\n        this.styleUrls = styleUrls;\n    }\n    return StyleWithImports;\n}());\n/**\n * @param {?} url\n * @return {?}\n */\nfunction isStyleUrlResolvable(url) {\n    if (url == null || url.length === 0 || url[0] == '/')\n        return false;\n    var /** @type {?} */ schemeMatch = url.match(URL_WITH_SCHEMA_REGEXP);\n    return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n}\n/**\n * Rewrites stylesheets by resolving and removing the \\@import urls that\n * are either relative or don't have a `package:` scheme\n * @param {?} resolver\n * @param {?} baseUrl\n * @param {?} cssText\n * @return {?}\n */\nfunction extractStyleUrls(resolver, baseUrl, cssText) {\n    var /** @type {?} */ foundUrls = [];\n    var /** @type {?} */ modifiedCssText = cssText.replace(CSS_STRIPPABLE_COMMENT_REGEXP, '')\n        .replace(CSS_IMPORT_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ url = m[1] || m[2];\n        if (!isStyleUrlResolvable(url)) {\n            // Do not attempt to resolve non-package absolute URLs with URI\n            // scheme\n            return m[0];\n        }\n        foundUrls.push(resolver.resolve(baseUrl, url));\n        return '';\n    });\n    return new StyleWithImports(modifiedCssText, foundUrls);\n}\nvar CSS_IMPORT_REGEXP = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\nvar CSS_STRIPPABLE_COMMENT_REGEXP = /\\/\\*(?!#\\s*(?:sourceURL|sourceMappingURL)=)[\\s\\S]+?\\*\\//g;\nvar URL_WITH_SCHEMA_REGEXP = /^([^:/?#]+):/;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar TagContentType = {\n    RAW_TEXT: 0,\n    ESCAPABLE_RAW_TEXT: 1,\n    PARSABLE_DATA: 2,\n};\nTagContentType[TagContentType.RAW_TEXT] = \"RAW_TEXT\";\nTagContentType[TagContentType.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTagContentType[TagContentType.PARSABLE_DATA] = \"PARSABLE_DATA\";\n/**\n * @record\n */\n\n/**\n * @param {?} elementName\n * @return {?}\n */\nfunction splitNsName(elementName) {\n    if (elementName[0] != ':') {\n        return [null, elementName];\n    }\n    var /** @type {?} */ colonIndex = elementName.indexOf(':', 1);\n    if (colonIndex == -1) {\n        throw new Error(\"Unsupported format \\\"\" + elementName + \"\\\" expecting \\\":namespace:name\\\"\");\n    }\n    return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContainer(tagName) {\n    return splitNsName(tagName)[1] === 'ng-container';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContent(tagName) {\n    return splitNsName(tagName)[1] === 'ng-content';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgTemplate(tagName) {\n    return splitNsName(tagName)[1] === 'ng-template';\n}\n/**\n * @param {?} fullName\n * @return {?}\n */\nfunction getNsPrefix(fullName) {\n    return fullName === null ? null : splitNsName(fullName)[0];\n}\n/**\n * @param {?} prefix\n * @param {?} localName\n * @return {?}\n */\nfunction mergeNsAndName(prefix, localName) {\n    return prefix ? \":\" + prefix + \":\" + localName : localName;\n}\n// see http://www.w3.org/TR/html51/syntax.html#named-character-references\n// see https://html.spec.whatwg.org/multipage/entities.json\n// This list is not exhaustive to keep the compiler footprint low.\n// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not\n// exist.\nvar NAMED_ENTITIES = {\n    'Aacute': '\\u00C1',\n    'aacute': '\\u00E1',\n    'Acirc': '\\u00C2',\n    'acirc': '\\u00E2',\n    'acute': '\\u00B4',\n    'AElig': '\\u00C6',\n    'aelig': '\\u00E6',\n    'Agrave': '\\u00C0',\n    'agrave': '\\u00E0',\n    'alefsym': '\\u2135',\n    'Alpha': '\\u0391',\n    'alpha': '\\u03B1',\n    'amp': '&',\n    'and': '\\u2227',\n    'ang': '\\u2220',\n    'apos': '\\u0027',\n    'Aring': '\\u00C5',\n    'aring': '\\u00E5',\n    'asymp': '\\u2248',\n    'Atilde': '\\u00C3',\n    'atilde': '\\u00E3',\n    'Auml': '\\u00C4',\n    'auml': '\\u00E4',\n    'bdquo': '\\u201E',\n    'Beta': '\\u0392',\n    'beta': '\\u03B2',\n    'brvbar': '\\u00A6',\n    'bull': '\\u2022',\n    'cap': '\\u2229',\n    'Ccedil': '\\u00C7',\n    'ccedil': '\\u00E7',\n    'cedil': '\\u00B8',\n    'cent': '\\u00A2',\n    'Chi': '\\u03A7',\n    'chi': '\\u03C7',\n    'circ': '\\u02C6',\n    'clubs': '\\u2663',\n    'cong': '\\u2245',\n    'copy': '\\u00A9',\n    'crarr': '\\u21B5',\n    'cup': '\\u222A',\n    'curren': '\\u00A4',\n    'dagger': '\\u2020',\n    'Dagger': '\\u2021',\n    'darr': '\\u2193',\n    'dArr': '\\u21D3',\n    'deg': '\\u00B0',\n    'Delta': '\\u0394',\n    'delta': '\\u03B4',\n    'diams': '\\u2666',\n    'divide': '\\u00F7',\n    'Eacute': '\\u00C9',\n    'eacute': '\\u00E9',\n    'Ecirc': '\\u00CA',\n    'ecirc': '\\u00EA',\n    'Egrave': '\\u00C8',\n    'egrave': '\\u00E8',\n    'empty': '\\u2205',\n    'emsp': '\\u2003',\n    'ensp': '\\u2002',\n    'Epsilon': '\\u0395',\n    'epsilon': '\\u03B5',\n    'equiv': '\\u2261',\n    'Eta': '\\u0397',\n    'eta': '\\u03B7',\n    'ETH': '\\u00D0',\n    'eth': '\\u00F0',\n    'Euml': '\\u00CB',\n    'euml': '\\u00EB',\n    'euro': '\\u20AC',\n    'exist': '\\u2203',\n    'fnof': '\\u0192',\n    'forall': '\\u2200',\n    'frac12': '\\u00BD',\n    'frac14': '\\u00BC',\n    'frac34': '\\u00BE',\n    'frasl': '\\u2044',\n    'Gamma': '\\u0393',\n    'gamma': '\\u03B3',\n    'ge': '\\u2265',\n    'gt': '>',\n    'harr': '\\u2194',\n    'hArr': '\\u21D4',\n    'hearts': '\\u2665',\n    'hellip': '\\u2026',\n    'Iacute': '\\u00CD',\n    'iacute': '\\u00ED',\n    'Icirc': '\\u00CE',\n    'icirc': '\\u00EE',\n    'iexcl': '\\u00A1',\n    'Igrave': '\\u00CC',\n    'igrave': '\\u00EC',\n    'image': '\\u2111',\n    'infin': '\\u221E',\n    'int': '\\u222B',\n    'Iota': '\\u0399',\n    'iota': '\\u03B9',\n    'iquest': '\\u00BF',\n    'isin': '\\u2208',\n    'Iuml': '\\u00CF',\n    'iuml': '\\u00EF',\n    'Kappa': '\\u039A',\n    'kappa': '\\u03BA',\n    'Lambda': '\\u039B',\n    'lambda': '\\u03BB',\n    'lang': '\\u27E8',\n    'laquo': '\\u00AB',\n    'larr': '\\u2190',\n    'lArr': '\\u21D0',\n    'lceil': '\\u2308',\n    'ldquo': '\\u201C',\n    'le': '\\u2264',\n    'lfloor': '\\u230A',\n    'lowast': '\\u2217',\n    'loz': '\\u25CA',\n    'lrm': '\\u200E',\n    'lsaquo': '\\u2039',\n    'lsquo': '\\u2018',\n    'lt': '<',\n    'macr': '\\u00AF',\n    'mdash': '\\u2014',\n    'micro': '\\u00B5',\n    'middot': '\\u00B7',\n    'minus': '\\u2212',\n    'Mu': '\\u039C',\n    'mu': '\\u03BC',\n    'nabla': '\\u2207',\n    'nbsp': '\\u00A0',\n    'ndash': '\\u2013',\n    'ne': '\\u2260',\n    'ni': '\\u220B',\n    'not': '\\u00AC',\n    'notin': '\\u2209',\n    'nsub': '\\u2284',\n    'Ntilde': '\\u00D1',\n    'ntilde': '\\u00F1',\n    'Nu': '\\u039D',\n    'nu': '\\u03BD',\n    'Oacute': '\\u00D3',\n    'oacute': '\\u00F3',\n    'Ocirc': '\\u00D4',\n    'ocirc': '\\u00F4',\n    'OElig': '\\u0152',\n    'oelig': '\\u0153',\n    'Ograve': '\\u00D2',\n    'ograve': '\\u00F2',\n    'oline': '\\u203E',\n    'Omega': '\\u03A9',\n    'omega': '\\u03C9',\n    'Omicron': '\\u039F',\n    'omicron': '\\u03BF',\n    'oplus': '\\u2295',\n    'or': '\\u2228',\n    'ordf': '\\u00AA',\n    'ordm': '\\u00BA',\n    'Oslash': '\\u00D8',\n    'oslash': '\\u00F8',\n    'Otilde': '\\u00D5',\n    'otilde': '\\u00F5',\n    'otimes': '\\u2297',\n    'Ouml': '\\u00D6',\n    'ouml': '\\u00F6',\n    'para': '\\u00B6',\n    'permil': '\\u2030',\n    'perp': '\\u22A5',\n    'Phi': '\\u03A6',\n    'phi': '\\u03C6',\n    'Pi': '\\u03A0',\n    'pi': '\\u03C0',\n    'piv': '\\u03D6',\n    'plusmn': '\\u00B1',\n    'pound': '\\u00A3',\n    'prime': '\\u2032',\n    'Prime': '\\u2033',\n    'prod': '\\u220F',\n    'prop': '\\u221D',\n    'Psi': '\\u03A8',\n    'psi': '\\u03C8',\n    'quot': '\\u0022',\n    'radic': '\\u221A',\n    'rang': '\\u27E9',\n    'raquo': '\\u00BB',\n    'rarr': '\\u2192',\n    'rArr': '\\u21D2',\n    'rceil': '\\u2309',\n    'rdquo': '\\u201D',\n    'real': '\\u211C',\n    'reg': '\\u00AE',\n    'rfloor': '\\u230B',\n    'Rho': '\\u03A1',\n    'rho': '\\u03C1',\n    'rlm': '\\u200F',\n    'rsaquo': '\\u203A',\n    'rsquo': '\\u2019',\n    'sbquo': '\\u201A',\n    'Scaron': '\\u0160',\n    'scaron': '\\u0161',\n    'sdot': '\\u22C5',\n    'sect': '\\u00A7',\n    'shy': '\\u00AD',\n    'Sigma': '\\u03A3',\n    'sigma': '\\u03C3',\n    'sigmaf': '\\u03C2',\n    'sim': '\\u223C',\n    'spades': '\\u2660',\n    'sub': '\\u2282',\n    'sube': '\\u2286',\n    'sum': '\\u2211',\n    'sup': '\\u2283',\n    'sup1': '\\u00B9',\n    'sup2': '\\u00B2',\n    'sup3': '\\u00B3',\n    'supe': '\\u2287',\n    'szlig': '\\u00DF',\n    'Tau': '\\u03A4',\n    'tau': '\\u03C4',\n    'there4': '\\u2234',\n    'Theta': '\\u0398',\n    'theta': '\\u03B8',\n    'thetasym': '\\u03D1',\n    'thinsp': '\\u2009',\n    'THORN': '\\u00DE',\n    'thorn': '\\u00FE',\n    'tilde': '\\u02DC',\n    'times': '\\u00D7',\n    'trade': '\\u2122',\n    'Uacute': '\\u00DA',\n    'uacute': '\\u00FA',\n    'uarr': '\\u2191',\n    'uArr': '\\u21D1',\n    'Ucirc': '\\u00DB',\n    'ucirc': '\\u00FB',\n    'Ugrave': '\\u00D9',\n    'ugrave': '\\u00F9',\n    'uml': '\\u00A8',\n    'upsih': '\\u03D2',\n    'Upsilon': '\\u03A5',\n    'upsilon': '\\u03C5',\n    'Uuml': '\\u00DC',\n    'uuml': '\\u00FC',\n    'weierp': '\\u2118',\n    'Xi': '\\u039E',\n    'xi': '\\u03BE',\n    'Yacute': '\\u00DD',\n    'yacute': '\\u00FD',\n    'yen': '\\u00A5',\n    'yuml': '\\u00FF',\n    'Yuml': '\\u0178',\n    'Zeta': '\\u0396',\n    'zeta': '\\u03B6',\n    'zwj': '\\u200D',\n    'zwnj': '\\u200C',\n};\n// The &ngsp; pseudo-entity is denoting a space. see:\n// https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart\nvar NGSP_UNICODE = '\\uE500';\nNAMED_ENTITIES['ngsp'] = NGSP_UNICODE;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NG_CONTENT_SELECT_ATTR = 'select';\nvar LINK_ELEMENT = 'link';\nvar LINK_STYLE_REL_ATTR = 'rel';\nvar LINK_STYLE_HREF_ATTR = 'href';\nvar LINK_STYLE_REL_VALUE = 'stylesheet';\nvar STYLE_ELEMENT = 'style';\nvar SCRIPT_ELEMENT = 'script';\nvar NG_NON_BINDABLE_ATTR = 'ngNonBindable';\nvar NG_PROJECT_AS = 'ngProjectAs';\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction preparseElement(ast) {\n    var /** @type {?} */ selectAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ hrefAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ relAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ nonBindable = false;\n    var /** @type {?} */ projectAs = /** @type {?} */ ((null));\n    ast.attrs.forEach(function (attr) {\n        var /** @type {?} */ lcAttrName = attr.name.toLowerCase();\n        if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n            selectAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n            hrefAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n            relAttr = attr.value;\n        }\n        else if (attr.name == NG_NON_BINDABLE_ATTR) {\n            nonBindable = true;\n        }\n        else if (attr.name == NG_PROJECT_AS) {\n            if (attr.value.length > 0) {\n                projectAs = attr.value;\n            }\n        }\n    });\n    selectAttr = normalizeNgContentSelect(selectAttr);\n    var /** @type {?} */ nodeName = ast.name.toLowerCase();\n    var /** @type {?} */ type = PreparsedElementType.OTHER;\n    if (isNgContent(nodeName)) {\n        type = PreparsedElementType.NG_CONTENT;\n    }\n    else if (nodeName == STYLE_ELEMENT) {\n        type = PreparsedElementType.STYLE;\n    }\n    else if (nodeName == SCRIPT_ELEMENT) {\n        type = PreparsedElementType.SCRIPT;\n    }\n    else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n        type = PreparsedElementType.STYLESHEET;\n    }\n    return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n}\n/** @enum {number} */\nvar PreparsedElementType = {\n    NG_CONTENT: 0,\n    STYLE: 1,\n    STYLESHEET: 2,\n    SCRIPT: 3,\n    OTHER: 4,\n};\nPreparsedElementType[PreparsedElementType.NG_CONTENT] = \"NG_CONTENT\";\nPreparsedElementType[PreparsedElementType.STYLE] = \"STYLE\";\nPreparsedElementType[PreparsedElementType.STYLESHEET] = \"STYLESHEET\";\nPreparsedElementType[PreparsedElementType.SCRIPT] = \"SCRIPT\";\nPreparsedElementType[PreparsedElementType.OTHER] = \"OTHER\";\nvar PreparsedElement = (function () {\n    function PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n        this.type = type;\n        this.selectAttr = selectAttr;\n        this.hrefAttr = hrefAttr;\n        this.nonBindable = nonBindable;\n        this.projectAs = projectAs;\n    }\n    return PreparsedElement;\n}());\n/**\n * @param {?} selectAttr\n * @return {?}\n */\nfunction normalizeNgContentSelect(selectAttr) {\n    if (selectAttr === null || selectAttr.length === 0) {\n        return '*';\n    }\n    return selectAttr;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar DirectiveNormalizer = (function () {\n    function DirectiveNormalizer(_resourceLoader, _urlResolver, _htmlParser, _config) {\n        this._resourceLoader = _resourceLoader;\n        this._urlResolver = _urlResolver;\n        this._htmlParser = _htmlParser;\n        this._config = _config;\n        this._resourceLoaderCache = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () { this._resourceLoaderCache.clear(); };\n    /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCacheFor = /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    function (normalizedDirective) {\n        var _this = this;\n        if (!normalizedDirective.isComponent) {\n            return;\n        }\n        var /** @type {?} */ template = /** @type {?} */ ((normalizedDirective.template));\n        this._resourceLoaderCache.delete(/** @type {?} */ ((template.templateUrl)));\n        template.externalStylesheets.forEach(function (stylesheet) { _this._resourceLoaderCache.delete(/** @type {?} */ ((stylesheet.moduleUrl))); });\n    };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._fetch = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) {\n        var /** @type {?} */ result = this._resourceLoaderCache.get(url);\n        if (!result) {\n            result = this._resourceLoader.get(url);\n            this._resourceLoaderCache.set(url, result);\n        }\n        return result;\n    };\n    /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplate = /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    function (prenormData) {\n        var _this = this;\n        if (isDefined(prenormData.template)) {\n            if (isDefined(prenormData.templateUrl)) {\n                throw syntaxError(\"'\" + stringify(prenormData.componentType) + \"' component cannot define both template and templateUrl\");\n            }\n            if (typeof prenormData.template !== 'string') {\n                throw syntaxError(\"The template specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else if (isDefined(prenormData.templateUrl)) {\n            if (typeof prenormData.templateUrl !== 'string') {\n                throw syntaxError(\"The templateUrl specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else {\n            throw syntaxError(\"No template specified for component \" + stringify(prenormData.componentType));\n        }\n        if (isDefined(prenormData.preserveWhitespaces) &&\n            typeof prenormData.preserveWhitespaces !== 'boolean') {\n            throw syntaxError(\"The preserveWhitespaces option for component \" + stringify(prenormData.componentType) + \" must be a boolean\");\n        }\n        return SyncAsync.then(this._preParseTemplate(prenormData), function (preparsedTemplate) { return _this._normalizeTemplateMetadata(prenormData, preparsedTemplate); });\n    };\n    /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._preParseTemplate = /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    function (prenomData) {\n        var _this = this;\n        var /** @type {?} */ template;\n        var /** @type {?} */ templateUrl;\n        if (prenomData.template != null) {\n            template = prenomData.template;\n            templateUrl = prenomData.moduleUrl;\n        }\n        else {\n            templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, /** @type {?} */ ((prenomData.templateUrl)));\n            template = this._fetch(templateUrl);\n        }\n        return SyncAsync.then(template, function (template) { return _this._preparseLoadedTemplate(prenomData, template, templateUrl); });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._preparseLoadedTemplate = /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    function (prenormData, template, templateAbsUrl) {\n        var /** @type {?} */ isInline = !!prenormData.template;\n        var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((prenormData.interpolation)));\n        var /** @type {?} */ rootNodesAndErrors = this._htmlParser.parse(template, templateSourceUrl({ reference: prenormData.ngModuleType }, { type: { reference: prenormData.componentType } }, { isInline: isInline, templateUrl: templateAbsUrl }), true, interpolationConfig);\n        if (rootNodesAndErrors.errors.length > 0) {\n            var /** @type {?} */ errorString = rootNodesAndErrors.errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString);\n        }\n        var /** @type {?} */ templateMetadataStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: prenormData.styles, moduleUrl: prenormData.moduleUrl }));\n        var /** @type {?} */ visitor = new TemplatePreparseVisitor();\n        visitAll(visitor, rootNodesAndErrors.rootNodes);\n        var /** @type {?} */ templateStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n        var /** @type {?} */ styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n        var /** @type {?} */ inlineStyleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n        var /** @type {?} */ styleUrls = this\n            ._normalizeStylesheet(new CompileStylesheetMetadata({ styleUrls: prenormData.styleUrls, moduleUrl: prenormData.moduleUrl }))\n            .styleUrls;\n        return {\n            template: template,\n            templateUrl: templateAbsUrl, isInline: isInline,\n            htmlAst: rootNodesAndErrors, styles: styles, inlineStyleUrls: inlineStyleUrls, styleUrls: styleUrls,\n            ngContentSelectors: visitor.ngContentSelectors,\n        };\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeTemplateMetadata = /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @return {?}\n     */\n    function (prenormData, preparsedTemplate) {\n        var _this = this;\n        return SyncAsync.then(this._loadMissingExternalStylesheets(preparsedTemplate.styleUrls.concat(preparsedTemplate.inlineStyleUrls)), function (externalStylesheets) {\n            return _this._normalizeLoadedTemplateMetadata(prenormData, preparsedTemplate, externalStylesheets);\n        });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @param {?} stylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeLoadedTemplateMetadata = /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @param {?} stylesheets\n     * @return {?}\n     */\n    function (prenormData, preparsedTemplate, stylesheets) {\n        var _this = this;\n        // Algorithm:\n        // - produce exactly 1 entry per original styleUrl in\n        // CompileTemplateMetadata.externalStylesheets whith all styles inlined\n        // - inline all styles that are referenced by the template into CompileTemplateMetadata.styles.\n        // Reason: be able to determine how many stylesheets there are even without loading\n        // the template nor the stylesheets, so we can create a stub for TypeScript always synchronously\n        // (as resouce loading may be async)\n        var /** @type {?} */ styles = preparsedTemplate.styles.slice();\n        this._inlineStyles(preparsedTemplate.inlineStyleUrls, stylesheets, styles);\n        var /** @type {?} */ styleUrls = preparsedTemplate.styleUrls;\n        var /** @type {?} */ externalStylesheets = styleUrls.map(function (styleUrl) {\n            var /** @type {?} */ stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            var /** @type {?} */ styles = stylesheet.styles.slice();\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, styles);\n            return new CompileStylesheetMetadata({ moduleUrl: styleUrl, styles: styles });\n        });\n        var /** @type {?} */ encapsulation = prenormData.encapsulation;\n        if (encapsulation == null) {\n            encapsulation = this._config.defaultEncapsulation;\n        }\n        if (encapsulation === ViewEncapsulation.Emulated && styles.length === 0 &&\n            styleUrls.length === 0) {\n            encapsulation = ViewEncapsulation.None;\n        }\n        return new CompileTemplateMetadata({\n            encapsulation: encapsulation,\n            template: preparsedTemplate.template,\n            templateUrl: preparsedTemplate.templateUrl,\n            htmlAst: preparsedTemplate.htmlAst, styles: styles, styleUrls: styleUrls,\n            ngContentSelectors: preparsedTemplate.ngContentSelectors,\n            animations: prenormData.animations,\n            interpolation: prenormData.interpolation,\n            isInline: preparsedTemplate.isInline, externalStylesheets: externalStylesheets,\n            preserveWhitespaces: preserveWhitespacesDefault(prenormData.preserveWhitespaces, this._config.preserveWhitespaces),\n        });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?} stylesheets\n     * @param {?} targetStyles\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._inlineStyles = /**\n     * @param {?} styleUrls\n     * @param {?} stylesheets\n     * @param {?} targetStyles\n     * @return {?}\n     */\n    function (styleUrls, stylesheets, targetStyles) {\n        var _this = this;\n        styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            stylesheet.styles.forEach(function (style) { return targetStyles.push(style); });\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, targetStyles);\n        });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._loadMissingExternalStylesheets = /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    function (styleUrls, loadedStylesheets) {\n        var _this = this;\n        if (loadedStylesheets === void 0) { loadedStylesheets = new Map(); }\n        return SyncAsync.then(SyncAsync.all(styleUrls.filter(function (styleUrl) { return !loadedStylesheets.has(styleUrl); })\n            .map(function (styleUrl) {\n            return SyncAsync.then(_this._fetch(styleUrl), function (loadedStyle) {\n                var /** @type {?} */ stylesheet = _this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n                loadedStylesheets.set(styleUrl, stylesheet);\n                return _this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n            });\n        })), function (_) { return loadedStylesheets; });\n    };\n    /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeStylesheet = /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    function (stylesheet) {\n        var _this = this;\n        var /** @type {?} */ moduleUrl = /** @type {?} */ ((stylesheet.moduleUrl));\n        var /** @type {?} */ allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n            .map(function (url) { return _this._urlResolver.resolve(moduleUrl, url); });\n        var /** @type {?} */ allStyles = stylesheet.styles.map(function (style) {\n            var /** @type {?} */ styleWithImports = extractStyleUrls(_this._urlResolver, moduleUrl, style);\n            allStyleUrls.push.apply(allStyleUrls, styleWithImports.styleUrls);\n            return styleWithImports.style;\n        });\n        return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: moduleUrl });\n    };\n    return DirectiveNormalizer;\n}());\nvar TemplatePreparseVisitor = (function () {\n    function TemplatePreparseVisitor() {\n        this.ngContentSelectors = [];\n        this.styles = [];\n        this.styleUrls = [];\n        this.ngNonBindableStackCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        switch (preparsedElement.type) {\n            case PreparsedElementType.NG_CONTENT:\n                if (this.ngNonBindableStackCount === 0) {\n                    this.ngContentSelectors.push(preparsedElement.selectAttr);\n                }\n                break;\n            case PreparsedElementType.STYLE:\n                var /** @type {?} */ textContent_1 = '';\n                ast.children.forEach(function (child) {\n                    if (child instanceof Text) {\n                        textContent_1 += child.value;\n                    }\n                });\n                this.styles.push(textContent_1);\n                break;\n            case PreparsedElementType.STYLESHEET:\n                this.styleUrls.push(preparsedElement.hrefAttr);\n                break;\n            default:\n                break;\n        }\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount++;\n        }\n        visitAll(this, ast.children);\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount--;\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansion = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { visitAll(this, ast.cases); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansionCase = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        visitAll(this, ast.expression);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitComment = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitAttribute = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    return TemplatePreparseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar QUERY_METADATA_IDENTIFIERS = [\n    createViewChild,\n    createViewChildren,\n    createContentChild,\n    createContentChildren,\n];\nvar DirectiveResolver = (function () {\n    function DirectiveResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    DirectiveResolver.prototype.isDirective = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    DirectiveResolver.prototype.resolve = /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        if (typeMetadata) {\n            var /** @type {?} */ metadata = findLast(typeMetadata, isDirectiveMetadata);\n            if (metadata) {\n                var /** @type {?} */ propertyMetadata = this._reflector.propMetadata(type);\n                return this._mergeWithPropertyMetadata(metadata, propertyMetadata, type);\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Directive annotation found on \" + stringify(type));\n        }\n        return null;\n    };\n    /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._mergeWithPropertyMetadata = /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (dm, propertyMetadata, directiveType) {\n        var /** @type {?} */ inputs = [];\n        var /** @type {?} */ outputs = [];\n        var /** @type {?} */ host = {};\n        var /** @type {?} */ queries = {};\n        Object.keys(propertyMetadata).forEach(function (propName) {\n            var /** @type {?} */ input = findLast(propertyMetadata[propName], function (a) { return createInput.isTypeOf(a); });\n            if (input) {\n                if (input.bindingPropertyName) {\n                    inputs.push(propName + \": \" + input.bindingPropertyName);\n                }\n                else {\n                    inputs.push(propName);\n                }\n            }\n            var /** @type {?} */ output = findLast(propertyMetadata[propName], function (a) { return createOutput.isTypeOf(a); });\n            if (output) {\n                if (output.bindingPropertyName) {\n                    outputs.push(propName + \": \" + output.bindingPropertyName);\n                }\n                else {\n                    outputs.push(propName);\n                }\n            }\n            var /** @type {?} */ hostBindings = propertyMetadata[propName].filter(function (a) { return createHostBinding.isTypeOf(a); });\n            hostBindings.forEach(function (hostBinding) {\n                if (hostBinding.hostPropertyName) {\n                    var /** @type {?} */ startWith = hostBinding.hostPropertyName[0];\n                    if (startWith === '(') {\n                        throw new Error(\"@HostBinding can not bind to events. Use @HostListener instead.\");\n                    }\n                    else if (startWith === '[') {\n                        throw new Error(\"@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.\");\n                    }\n                    host[\"[\" + hostBinding.hostPropertyName + \"]\"] = propName;\n                }\n                else {\n                    host[\"[\" + propName + \"]\"] = propName;\n                }\n            });\n            var /** @type {?} */ hostListeners = propertyMetadata[propName].filter(function (a) { return createHostListener.isTypeOf(a); });\n            hostListeners.forEach(function (hostListener) {\n                var /** @type {?} */ args = hostListener.args || [];\n                host[\"(\" + hostListener.eventName + \")\"] = propName + \"(\" + args.join(',') + \")\";\n            });\n            var /** @type {?} */ query = findLast(propertyMetadata[propName], function (a) { return QUERY_METADATA_IDENTIFIERS.some(function (i) { return i.isTypeOf(a); }); });\n            if (query) {\n                queries[propName] = query;\n            }\n        });\n        return this._merge(dm, inputs, outputs, host, queries, directiveType);\n    };\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    DirectiveResolver.prototype._extractPublicName = /**\n     * @param {?} def\n     * @return {?}\n     */\n    function (def) { return splitAtColon(def, [/** @type {?} */ ((null)), def])[1].trim(); };\n    /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    DirectiveResolver.prototype._dedupeBindings = /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    function (bindings) {\n        var /** @type {?} */ names = new Set();\n        var /** @type {?} */ reversedResult = [];\n        // go last to first to allow later entries to overwrite previous entries\n        for (var /** @type {?} */ i = bindings.length - 1; i >= 0; i--) {\n            var /** @type {?} */ binding = bindings[i];\n            var /** @type {?} */ name_1 = this._extractPublicName(binding);\n            if (!names.has(name_1)) {\n                names.add(name_1);\n                reversedResult.push(binding);\n            }\n        }\n        return reversedResult.reverse();\n    };\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._merge = /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directive, inputs, outputs, host, queries, directiveType) {\n        var /** @type {?} */ mergedInputs = this._dedupeBindings(directive.inputs ? directive.inputs.concat(inputs) : inputs);\n        var /** @type {?} */ mergedOutputs = this._dedupeBindings(directive.outputs ? directive.outputs.concat(outputs) : outputs);\n        var /** @type {?} */ mergedHost = directive.host ? __assign({}, directive.host, host) : host;\n        var /** @type {?} */ mergedQueries = directive.queries ? __assign({}, directive.queries, queries) : queries;\n        if (createComponent.isTypeOf(directive)) {\n            var /** @type {?} */ comp = /** @type {?} */ (directive);\n            return createComponent({\n                selector: comp.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: comp.exportAs,\n                moduleId: comp.moduleId,\n                queries: mergedQueries,\n                changeDetection: comp.changeDetection,\n                providers: comp.providers,\n                viewProviders: comp.viewProviders,\n                entryComponents: comp.entryComponents,\n                template: comp.template,\n                templateUrl: comp.templateUrl,\n                styles: comp.styles,\n                styleUrls: comp.styleUrls,\n                encapsulation: comp.encapsulation,\n                animations: comp.animations,\n                interpolation: comp.interpolation,\n                preserveWhitespaces: directive.preserveWhitespaces,\n            });\n        }\n        else {\n            return createDirective({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                queries: mergedQueries,\n                providers: directive.providers\n            });\n        }\n    };\n    return DirectiveResolver;\n}());\n/**\n * @param {?} type\n * @return {?}\n */\nfunction isDirectiveMetadata(type) {\n    return createDirective.isTypeOf(type) || createComponent.isTypeOf(type);\n}\n/**\n * @template T\n * @param {?} arr\n * @param {?} condition\n * @return {?}\n */\nfunction findLast(arr, condition) {\n    for (var /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n        if (condition(arr[i])) {\n            return arr[i];\n        }\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar $EOF = 0;\nvar $TAB = 9;\nvar $LF = 10;\nvar $VTAB = 11;\nvar $FF = 12;\nvar $CR = 13;\nvar $SPACE = 32;\nvar $BANG = 33;\nvar $DQ = 34;\nvar $HASH = 35;\nvar $$ = 36;\nvar $PERCENT = 37;\nvar $AMPERSAND = 38;\nvar $SQ = 39;\nvar $LPAREN = 40;\nvar $RPAREN = 41;\nvar $STAR = 42;\nvar $PLUS = 43;\nvar $COMMA = 44;\nvar $MINUS = 45;\nvar $PERIOD = 46;\nvar $SLASH = 47;\nvar $COLON = 58;\nvar $SEMICOLON = 59;\nvar $LT = 60;\nvar $EQ = 61;\nvar $GT = 62;\nvar $QUESTION = 63;\nvar $0 = 48;\nvar $9 = 57;\nvar $A = 65;\nvar $E = 69;\nvar $F = 70;\nvar $X = 88;\nvar $Z = 90;\nvar $LBRACKET = 91;\nvar $BACKSLASH = 92;\nvar $RBRACKET = 93;\nvar $CARET = 94;\nvar $_ = 95;\nvar $a = 97;\nvar $e = 101;\nvar $f = 102;\nvar $n = 110;\nvar $r = 114;\nvar $t = 116;\nvar $u = 117;\nvar $v = 118;\nvar $x = 120;\nvar $z = 122;\nvar $LBRACE = 123;\nvar $BAR = 124;\nvar $RBRACE = 125;\nvar $NBSP = 160;\n\n\n\nvar $BT = 96;\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isWhitespace(code) {\n    return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigit(code) {\n    return $0 <= code && code <= $9;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiLetter(code) {\n    return code >= $a && code <= $z || code >= $A && code <= $Z;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiHexDigit(code) {\n    return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TokenType = {\n    Character: 0,\n    Identifier: 1,\n    Keyword: 2,\n    String: 3,\n    Operator: 4,\n    Number: 5,\n    Error: 6,\n};\nTokenType[TokenType.Character] = \"Character\";\nTokenType[TokenType.Identifier] = \"Identifier\";\nTokenType[TokenType.Keyword] = \"Keyword\";\nTokenType[TokenType.String] = \"String\";\nTokenType[TokenType.Operator] = \"Operator\";\nTokenType[TokenType.Number] = \"Number\";\nTokenType[TokenType.Error] = \"Error\";\nvar KEYWORDS = ['var', 'let', 'as', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\nvar Lexer = (function () {\n    function Lexer() {\n    }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    Lexer.prototype.tokenize = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) {\n        var /** @type {?} */ scanner = new _Scanner(text);\n        var /** @type {?} */ tokens = [];\n        var /** @type {?} */ token = scanner.scanToken();\n        while (token != null) {\n            tokens.push(token);\n            token = scanner.scanToken();\n        }\n        return tokens;\n    };\n    return Lexer;\n}());\nvar Token = (function () {\n    function Token(index, type, numValue, strValue) {\n        this.index = index;\n        this.type = type;\n        this.numValue = numValue;\n        this.strValue = strValue;\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    Token.prototype.isCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        return this.type == TokenType.Character && this.numValue == code;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isNumber = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Number; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isString = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.String; };\n    /**\n     * @param {?} operater\n     * @return {?}\n     */\n    Token.prototype.isOperator = /**\n     * @param {?} operater\n     * @return {?}\n     */\n    function (operater) {\n        return this.type == TokenType.Operator && this.strValue == operater;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isIdentifier = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Identifier; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeyword = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordLet = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'let'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordAs = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'as'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordNull = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'null'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordUndefined = /**\n     * @return {?}\n     */\n    function () {\n        return this.type == TokenType.Keyword && this.strValue == 'undefined';\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordTrue = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'true'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordFalse = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'false'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordThis = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'this'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isError = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Error; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toNumber = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Number ? this.numValue : -1; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        switch (this.type) {\n            case TokenType.Character:\n            case TokenType.Identifier:\n            case TokenType.Keyword:\n            case TokenType.Operator:\n            case TokenType.String:\n            case TokenType.Error:\n                return this.strValue;\n            case TokenType.Number:\n                return this.numValue.toString();\n            default:\n                return null;\n        }\n    };\n    return Token;\n}());\n/**\n * @param {?} index\n * @param {?} code\n * @return {?}\n */\nfunction newCharacterToken(index, code) {\n    return new Token(index, TokenType.Character, code, String.fromCharCode(code));\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newIdentifierToken(index, text) {\n    return new Token(index, TokenType.Identifier, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newKeywordToken(index, text) {\n    return new Token(index, TokenType.Keyword, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newOperatorToken(index, text) {\n    return new Token(index, TokenType.Operator, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newStringToken(index, text) {\n    return new Token(index, TokenType.String, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} n\n * @return {?}\n */\nfunction newNumberToken(index, n) {\n    return new Token(index, TokenType.Number, n, '');\n}\n/**\n * @param {?} index\n * @param {?} message\n * @return {?}\n */\nfunction newErrorToken(index, message) {\n    return new Token(index, TokenType.Error, 0, message);\n}\nvar EOF = new Token(-1, TokenType.Character, 0, '');\nvar _Scanner = (function () {\n    function _Scanner(input) {\n        this.input = input;\n        this.peek = 0;\n        this.index = -1;\n        this.length = input.length;\n        this.advance();\n    }\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.advance = /**\n     * @return {?}\n     */\n    function () {\n        this.peek = ++this.index >= this.length ? $EOF : this.input.charCodeAt(this.index);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanToken = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ input = this.input, /** @type {?} */ length = this.length;\n        var /** @type {?} */ peek = this.peek, /** @type {?} */ index = this.index;\n        // Skip whitespace.\n        while (peek <= $SPACE) {\n            if (++index >= length) {\n                peek = $EOF;\n                break;\n            }\n            else {\n                peek = input.charCodeAt(index);\n            }\n        }\n        this.peek = peek;\n        this.index = index;\n        if (index >= length) {\n            return null;\n        }\n        // Handle identifiers and numbers.\n        if (isIdentifierStart(peek))\n            return this.scanIdentifier();\n        if (isDigit(peek))\n            return this.scanNumber(index);\n        var /** @type {?} */ start = index;\n        switch (peek) {\n            case $PERIOD:\n                this.advance();\n                return isDigit(this.peek) ? this.scanNumber(start) :\n                    newCharacterToken(start, $PERIOD);\n            case $LPAREN:\n            case $RPAREN:\n            case $LBRACE:\n            case $RBRACE:\n            case $LBRACKET:\n            case $RBRACKET:\n            case $COMMA:\n            case $COLON:\n            case $SEMICOLON:\n                return this.scanCharacter(start, peek);\n            case $SQ:\n            case $DQ:\n                return this.scanString();\n            case $HASH:\n            case $PLUS:\n            case $MINUS:\n            case $STAR:\n            case $SLASH:\n            case $PERCENT:\n            case $CARET:\n                return this.scanOperator(start, String.fromCharCode(peek));\n            case $QUESTION:\n                return this.scanComplexOperator(start, '?', $PERIOD, '.');\n            case $LT:\n            case $GT:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=');\n            case $BANG:\n            case $EQ:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=', $EQ, '=');\n            case $AMPERSAND:\n                return this.scanComplexOperator(start, '&', $AMPERSAND, '&');\n            case $BAR:\n                return this.scanComplexOperator(start, '|', $BAR, '|');\n            case $NBSP:\n                while (isWhitespace(this.peek))\n                    this.advance();\n                return this.scanToken();\n        }\n        this.advance();\n        return this.error(\"Unexpected character [\" + String.fromCharCode(peek) + \"]\", 0);\n    };\n    /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    _Scanner.prototype.scanCharacter = /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    function (start, code) {\n        this.advance();\n        return newCharacterToken(start, code);\n    };\n    /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    _Scanner.prototype.scanOperator = /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    function (start, str) {\n        this.advance();\n        return newOperatorToken(start, str);\n    };\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param start start index in the expression\n     * @param one first symbol (always part of the operator)\n     * @param twoCode code point for the second symbol\n     * @param two second symbol (part of the operator when the second code point matches)\n     * @param threeCode code point for the third symbol\n     * @param three third symbol (part of the operator when provided and matches source expression)\n     */\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    _Scanner.prototype.scanComplexOperator = /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    function (start, one, twoCode, two, threeCode, three) {\n        this.advance();\n        var /** @type {?} */ str = one;\n        if (this.peek == twoCode) {\n            this.advance();\n            str += two;\n        }\n        if (threeCode != null && this.peek == threeCode) {\n            this.advance();\n            str += three;\n        }\n        return newOperatorToken(start, str);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanIdentifier = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.index;\n        this.advance();\n        while (isIdentifierPart(this.peek))\n            this.advance();\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n            newIdentifierToken(start, str);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Scanner.prototype.scanNumber = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ simple = (this.index === start);\n        this.advance(); // Skip initial digit.\n        while (true) {\n            if (isDigit(this.peek)) {\n                // Do nothing.\n            }\n            else if (this.peek == $PERIOD) {\n                simple = false;\n            }\n            else if (isExponentStart(this.peek)) {\n                this.advance();\n                if (isExponentSign(this.peek))\n                    this.advance();\n                if (!isDigit(this.peek))\n                    return this.error('Invalid exponent', -1);\n                simple = false;\n            }\n            else {\n                break;\n            }\n            this.advance();\n        }\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        var /** @type {?} */ value = simple ? parseIntAutoRadix(str) : parseFloat(str);\n        return newNumberToken(start, value);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.index;\n        var /** @type {?} */ quote = this.peek;\n        this.advance(); // Skip initial quote.\n        var /** @type {?} */ buffer = '';\n        var /** @type {?} */ marker = this.index;\n        var /** @type {?} */ input = this.input;\n        while (this.peek != quote) {\n            if (this.peek == $BACKSLASH) {\n                buffer += input.substring(marker, this.index);\n                this.advance();\n                var /** @type {?} */ unescapedCode = void 0;\n                // Workaround for TS2.1-introduced type strictness\n                this.peek = this.peek;\n                if (this.peek == $u) {\n                    // 4 character hex code for unicode character.\n                    var /** @type {?} */ hex = input.substring(this.index + 1, this.index + 5);\n                    if (/^[0-9a-f]+$/i.test(hex)) {\n                        unescapedCode = parseInt(hex, 16);\n                    }\n                    else {\n                        return this.error(\"Invalid unicode escape [\\\\u\" + hex + \"]\", 0);\n                    }\n                    for (var /** @type {?} */ i = 0; i < 5; i++) {\n                        this.advance();\n                    }\n                }\n                else {\n                    unescapedCode = unescape(this.peek);\n                    this.advance();\n                }\n                buffer += String.fromCharCode(unescapedCode);\n                marker = this.index;\n            }\n            else if (this.peek == $EOF) {\n                return this.error('Unterminated quote', 0);\n            }\n            else {\n                this.advance();\n            }\n        }\n        var /** @type {?} */ last = input.substring(marker, this.index);\n        this.advance(); // Skip terminating quote.\n        return newStringToken(start, buffer + last);\n    };\n    /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    _Scanner.prototype.error = /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    function (message, offset) {\n        var /** @type {?} */ position = this.index + offset;\n        return newErrorToken(position, \"Lexer Error: \" + message + \" at column \" + position + \" in expression [\" + this.input + \"]\");\n    };\n    return _Scanner;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierStart(code) {\n    return ($a <= code && code <= $z) || ($A <= code && code <= $Z) ||\n        (code == $_) || (code == $$);\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction isIdentifier(input) {\n    if (input.length == 0)\n        return false;\n    var /** @type {?} */ scanner = new _Scanner(input);\n    if (!isIdentifierStart(scanner.peek))\n        return false;\n    scanner.advance();\n    while (scanner.peek !== $EOF) {\n        if (!isIdentifierPart(scanner.peek))\n            return false;\n        scanner.advance();\n    }\n    return true;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierPart(code) {\n    return isAsciiLetter(code) || isDigit(code) || (code == $_) ||\n        (code == $$);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentStart(code) {\n    return code == $e || code == $E;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentSign(code) {\n    return code == $MINUS || code == $PLUS;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isQuote(code) {\n    return code === $SQ || code === $DQ || code === $BT;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction unescape(code) {\n    switch (code) {\n        case $n:\n            return $LF;\n        case $f:\n            return $FF;\n        case $r:\n            return $CR;\n        case $t:\n            return $TAB;\n        case $v:\n            return $VTAB;\n        default:\n            return code;\n    }\n}\n/**\n * @param {?} text\n * @return {?}\n */\nfunction parseIntAutoRadix(text) {\n    var /** @type {?} */ result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ParserError = (function () {\n    function ParserError(message, input, errLocation, ctxLocation) {\n        this.input = input;\n        this.errLocation = errLocation;\n        this.ctxLocation = ctxLocation;\n        this.message = \"Parser Error: \" + message + \" \" + errLocation + \" [\" + input + \"] in \" + ctxLocation;\n    }\n    return ParserError;\n}());\nvar ParseSpan = (function () {\n    function ParseSpan(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    return ParseSpan;\n}());\nvar AST = (function () {\n    function AST(span) {\n        this.span = span;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    AST.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return null;\n    };\n    /**\n     * @return {?}\n     */\n    AST.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return 'AST'; };\n    return AST;\n}());\n/**\n * Represents a quoted expression of the form:\n *\n * quote = prefix `:` uninterpretedExpression\n * prefix = identifier\n * uninterpretedExpression = arbitrary string\n *\n * A quoted expression is meant to be pre-processed by an AST transformer that\n * converts it into another AST that no longer contains quoted expressions.\n * It is meant to allow third-party developers to extend Angular template\n * expression language. The `uninterpretedExpression` part of the quote is\n * therefore not interpreted by the Angular's own expression parser.\n */\nvar Quote = (function (_super) {\n    __extends(Quote, _super);\n    function Quote(span, prefix, uninterpretedExpression, location) {\n        var _this = _super.call(this, span) || this;\n        _this.prefix = prefix;\n        _this.uninterpretedExpression = uninterpretedExpression;\n        _this.location = location;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Quote.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitQuote(this, context);\n    };\n    /**\n     * @return {?}\n     */\n    Quote.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return 'Quote'; };\n    return Quote;\n}(AST));\nvar EmptyExpr = (function (_super) {\n    __extends(EmptyExpr, _super);\n    function EmptyExpr() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    EmptyExpr.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        // do nothing\n    };\n    return EmptyExpr;\n}(AST));\nvar ImplicitReceiver = (function (_super) {\n    __extends(ImplicitReceiver, _super);\n    function ImplicitReceiver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ImplicitReceiver.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitImplicitReceiver(this, context);\n    };\n    return ImplicitReceiver;\n}(AST));\n/**\n * Multiple expressions separated by a semicolon.\n */\nvar Chain = (function (_super) {\n    __extends(Chain, _super);\n    function Chain(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Chain.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitChain(this, context);\n    };\n    return Chain;\n}(AST));\nvar Conditional = (function (_super) {\n    __extends(Conditional, _super);\n    function Conditional(span, condition, trueExp, falseExp) {\n        var _this = _super.call(this, span) || this;\n        _this.condition = condition;\n        _this.trueExp = trueExp;\n        _this.falseExp = falseExp;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Conditional.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitConditional(this, context);\n    };\n    return Conditional;\n}(AST));\nvar PropertyRead = (function (_super) {\n    __extends(PropertyRead, _super);\n    function PropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyRead(this, context);\n    };\n    return PropertyRead;\n}(AST));\nvar PropertyWrite = (function (_super) {\n    __extends(PropertyWrite, _super);\n    function PropertyWrite(span, receiver, name, value) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyWrite.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyWrite(this, context);\n    };\n    return PropertyWrite;\n}(AST));\nvar SafePropertyRead = (function (_super) {\n    __extends(SafePropertyRead, _super);\n    function SafePropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafePropertyRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafePropertyRead(this, context);\n    };\n    return SafePropertyRead;\n}(AST));\nvar KeyedRead = (function (_super) {\n    __extends(KeyedRead, _super);\n    function KeyedRead(span, obj, key) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedRead(this, context);\n    };\n    return KeyedRead;\n}(AST));\nvar KeyedWrite = (function (_super) {\n    __extends(KeyedWrite, _super);\n    function KeyedWrite(span, obj, key, value) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedWrite.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedWrite(this, context);\n    };\n    return KeyedWrite;\n}(AST));\nvar BindingPipe = (function (_super) {\n    __extends(BindingPipe, _super);\n    function BindingPipe(span, exp, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.exp = exp;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    BindingPipe.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPipe(this, context);\n    };\n    return BindingPipe;\n}(AST));\nvar LiteralPrimitive = (function (_super) {\n    __extends(LiteralPrimitive, _super);\n    function LiteralPrimitive(span, value) {\n        var _this = _super.call(this, span) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralPrimitive.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralPrimitive(this, context);\n    };\n    return LiteralPrimitive;\n}(AST));\nvar LiteralArray = (function (_super) {\n    __extends(LiteralArray, _super);\n    function LiteralArray(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralArray.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralArray(this, context);\n    };\n    return LiteralArray;\n}(AST));\nvar LiteralMap = (function (_super) {\n    __extends(LiteralMap, _super);\n    function LiteralMap(span, keys, values) {\n        var _this = _super.call(this, span) || this;\n        _this.keys = keys;\n        _this.values = values;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralMap.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralMap(this, context);\n    };\n    return LiteralMap;\n}(AST));\nvar Interpolation = (function (_super) {\n    __extends(Interpolation, _super);\n    function Interpolation(span, strings, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.strings = strings;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Interpolation.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitInterpolation(this, context);\n    };\n    return Interpolation;\n}(AST));\nvar Binary = (function (_super) {\n    __extends(Binary, _super);\n    function Binary(span, operation, left, right) {\n        var _this = _super.call(this, span) || this;\n        _this.operation = operation;\n        _this.left = left;\n        _this.right = right;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Binary.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitBinary(this, context);\n    };\n    return Binary;\n}(AST));\nvar PrefixNot = (function (_super) {\n    __extends(PrefixNot, _super);\n    function PrefixNot(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PrefixNot.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPrefixNot(this, context);\n    };\n    return PrefixNot;\n}(AST));\nvar NonNullAssert = (function (_super) {\n    __extends(NonNullAssert, _super);\n    function NonNullAssert(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    NonNullAssert.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitNonNullAssert(this, context);\n    };\n    return NonNullAssert;\n}(AST));\nvar MethodCall = (function (_super) {\n    __extends(MethodCall, _super);\n    function MethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    MethodCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitMethodCall(this, context);\n    };\n    return MethodCall;\n}(AST));\nvar SafeMethodCall = (function (_super) {\n    __extends(SafeMethodCall, _super);\n    function SafeMethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafeMethodCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafeMethodCall(this, context);\n    };\n    return SafeMethodCall;\n}(AST));\nvar FunctionCall = (function (_super) {\n    __extends(FunctionCall, _super);\n    function FunctionCall(span, target, args) {\n        var _this = _super.call(this, span) || this;\n        _this.target = target;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    FunctionCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitFunctionCall(this, context);\n    };\n    return FunctionCall;\n}(AST));\nvar ASTWithSource = (function (_super) {\n    __extends(ASTWithSource, _super);\n    function ASTWithSource(ast, source, location, errors) {\n        var _this = _super.call(this, new ParseSpan(0, source == null ? 0 : source.length)) || this;\n        _this.ast = ast;\n        _this.source = source;\n        _this.location = location;\n        _this.errors = errors;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ASTWithSource.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return this.ast.visit(visitor, context);\n    };\n    /**\n     * @return {?}\n     */\n    ASTWithSource.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this.source + \" in \" + this.location; };\n    return ASTWithSource;\n}(AST));\nvar TemplateBinding = (function () {\n    function TemplateBinding(span, key, keyIsVar, name, expression) {\n        this.span = span;\n        this.key = key;\n        this.keyIsVar = keyIsVar;\n        this.name = name;\n        this.expression = expression;\n    }\n    return TemplateBinding;\n}());\n/**\n * @record\n */\n\nvar NullAstVisitor = (function () {\n    function NullAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return NullAstVisitor;\n}());\nvar RecursiveAstVisitor = (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.left.visit(this);\n        ast.right.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.visitAll(ast.expressions, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visit(this);\n        ast.trueExp.visit(this);\n        ast.falseExp.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        /** @type {?} */ ((ast.target)).visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.visitAll(ast.values, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAll = /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    function (asts, context) {\n        var _this = this;\n        asts.forEach(function (ast) { return ast.visit(_this, context); });\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    return RecursiveAstVisitor;\n}());\nvar AstTransformer = (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Interpolation(ast.span, ast.strings, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralPrimitive(ast.span, ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PropertyWrite(ast.span, ast.receiver.visit(this), ast.name, ast.value.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new SafePropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new MethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new SafeMethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new FunctionCall(ast.span, /** @type {?} */ ((ast.target)).visit(this), this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralArray(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralMap(ast.span, ast.keys, this.visitAll(ast.values));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Binary(ast.span, ast.operation, ast.left.visit(this), ast.right.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PrefixNot(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new NonNullAssert(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Conditional(ast.span, ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new BindingPipe(ast.span, ast.exp.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new KeyedRead(ast.span, ast.obj.visit(this), ast.key.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new KeyedWrite(ast.span, ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));\n    };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var /** @type {?} */ res = new Array(asts.length);\n        for (var /** @type {?} */ i = 0; i < asts.length; ++i) {\n            res[i] = asts[i].visit(this);\n        }\n        return res;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Chain(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Quote(ast.span, ast.prefix, ast.uninterpretedExpression, ast.location);\n    };\n    return AstTransformer;\n}());\n/**\n * @param {?} ast\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nfunction visitAstChildren(ast, visitor, context) {\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function visit(ast) {\n        visitor.visit && visitor.visit(ast, context) || ast.visit(visitor, context);\n    }\n    /**\n     * @template T\n     * @param {?} asts\n     * @return {?}\n     */\n    function visitAll(asts) { asts.forEach(visit); }\n    ast.visit({\n        visitBinary: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.left);\n            visit(ast.right);\n        },\n        visitChain: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitConditional: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.condition);\n            visit(ast.trueExp);\n            visit(ast.falseExp);\n        },\n        visitFunctionCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            if (ast.target) {\n                visit(ast.target);\n            }\n            visitAll(ast.args);\n        },\n        visitImplicitReceiver: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitInterpolation: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitKeyedRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n        },\n        visitKeyedWrite: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n            visit(ast.obj);\n        },\n        visitLiteralArray: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitLiteralMap: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitLiteralPrimitive: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitMethodCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitPipe: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.exp);\n            visitAll(ast.args);\n        },\n        visitPrefixNot: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.expression); },\n        visitNonNullAssert: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.expression); },\n        visitPropertyRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.receiver); },\n        visitPropertyWrite: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visit(ast.value);\n        },\n        visitQuote: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitSafeMethodCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitSafePropertyRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.receiver); },\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SplitInterpolation = (function () {\n    function SplitInterpolation(strings, expressions, offsets) {\n        this.strings = strings;\n        this.expressions = expressions;\n        this.offsets = offsets;\n    }\n    return SplitInterpolation;\n}());\nvar TemplateBindingParseResult = (function () {\n    function TemplateBindingParseResult(templateBindings, warnings, errors) {\n        this.templateBindings = templateBindings;\n        this.warnings = warnings;\n        this.errors = errors;\n    }\n    return TemplateBindingParseResult;\n}());\n/**\n * @param {?} config\n * @return {?}\n */\nfunction _createInterpolateRegExp(config) {\n    var /** @type {?} */ pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n    return new RegExp(pattern, 'g');\n}\nvar Parser = (function () {\n    function Parser(_lexer) {\n        this._lexer = _lexer;\n        this.errors = [];\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseAction = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(this._stripComments(input));\n        var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseBinding = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseSimpleBinding = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        var /** @type {?} */ errors = SimpleExpressionChecker.check(ast);\n        if (errors.length > 0) {\n            this._reportError(\"Host binding expression cannot contain \" + errors.join(' '), input, location);\n        }\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    Parser.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    function (message, input, errLocation, ctxLocation) {\n        this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._parseBindingAst = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        // Quotes expressions use 3rd-party expression language. We don't want to use\n        // our lexer or parser for that, so we check for that ahead of time.\n        var /** @type {?} */ quote = this._parseQuote(input, location);\n        if (quote != null) {\n            return quote;\n        }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n        return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype._parseQuote = /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (input, location) {\n        if (input == null)\n            return null;\n        var /** @type {?} */ prefixSeparatorIndex = input.indexOf(':');\n        if (prefixSeparatorIndex == -1)\n            return null;\n        var /** @type {?} */ prefix = input.substring(0, prefixSeparatorIndex).trim();\n        if (!isIdentifier(prefix))\n            return null;\n        var /** @type {?} */ uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n        return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.parseTemplateBindings = /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (prefixToken, input, location) {\n        var /** @type {?} */ tokens = this._lexer.tokenize(input);\n        if (prefixToken) {\n            // Prefix the tokens with the tokens from prefixToken but have them take no space (0 index).\n            var /** @type {?} */ prefixTokens = this._lexer.tokenize(prefixToken).map(function (t) {\n                t.index = 0;\n                return t;\n            });\n            tokens.unshift.apply(tokens, prefixTokens);\n        }\n        return new _ParseAST(input, location, tokens, input.length, false, this.errors, 0)\n            .parseTemplateBindings();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ split = this.splitInterpolation(input, location, interpolationConfig);\n        if (split == null)\n            return null;\n        var /** @type {?} */ expressions = [];\n        for (var /** @type {?} */ i = 0; i < split.expressions.length; ++i) {\n            var /** @type {?} */ expressionText = split.expressions[i];\n            var /** @type {?} */ sourceToLex = this._stripComments(expressionText);\n            var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n            var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n                .parseChain();\n            expressions.push(ast);\n        }\n        return new ASTWithSource(new Interpolation(new ParseSpan(0, input == null ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.splitInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length <= 1) {\n            return null;\n        }\n        var /** @type {?} */ strings = [];\n        var /** @type {?} */ expressions = [];\n        var /** @type {?} */ offsets = [];\n        var /** @type {?} */ offset = 0;\n        for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n            var /** @type {?} */ part = parts[i];\n            if (i % 2 === 0) {\n                // fixed string\n                strings.push(part);\n                offset += part.length;\n            }\n            else if (part.trim().length > 0) {\n                offset += interpolationConfig.start.length;\n                expressions.push(part);\n                offsets.push(offset);\n                offset += part.length + interpolationConfig.end.length;\n            }\n            else {\n                this._reportError('Blank expressions are not allowed in interpolated strings', input, \"at column \" + this._findInterpolationErrorColumn(parts, i, interpolationConfig) + \" in\", location);\n                expressions.push('$implict');\n                offsets.push(offset);\n            }\n        }\n        return new SplitInterpolation(strings, expressions, offsets);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.wrapLiteralPrimitive = /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (input, location) {\n        return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, input == null ? 0 : input.length), input), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._stripComments = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        var /** @type {?} */ i = this._commentStart(input);\n        return i != null ? input.substring(0, i).trim() : input;\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._commentStart = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        var /** @type {?} */ outerQuote = null;\n        for (var /** @type {?} */ i = 0; i < input.length - 1; i++) {\n            var /** @type {?} */ char = input.charCodeAt(i);\n            var /** @type {?} */ nextChar = input.charCodeAt(i + 1);\n            if (char === $SLASH && nextChar == $SLASH && outerQuote == null)\n                return i;\n            if (outerQuote === char) {\n                outerQuote = null;\n            }\n            else if (outerQuote == null && isQuote(char)) {\n                outerQuote = char;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._checkNoInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length > 1) {\n            this._reportError(\"Got interpolation (\" + interpolationConfig.start + interpolationConfig.end + \") where expression was expected\", input, \"at column \" + this._findInterpolationErrorColumn(parts, 1, interpolationConfig) + \" in\", location);\n        }\n    };\n    /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._findInterpolationErrorColumn = /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (parts, partInErrIdx, interpolationConfig) {\n        var /** @type {?} */ errLocation = '';\n        for (var /** @type {?} */ j = 0; j < partInErrIdx; j++) {\n            errLocation += j % 2 === 0 ?\n                parts[j] :\n                \"\" + interpolationConfig.start + parts[j] + interpolationConfig.end;\n        }\n        return errLocation.length;\n    };\n    return Parser;\n}());\nvar _ParseAST = (function () {\n    function _ParseAST(input, location, tokens, inputLength, parseAction, errors, offset) {\n        this.input = input;\n        this.location = location;\n        this.tokens = tokens;\n        this.inputLength = inputLength;\n        this.parseAction = parseAction;\n        this.errors = errors;\n        this.offset = offset;\n        this.rparensExpected = 0;\n        this.rbracketsExpected = 0;\n        this.rbracesExpected = 0;\n        this.index = 0;\n    }\n    /**\n     * @param {?} offset\n     * @return {?}\n     */\n    _ParseAST.prototype.peek = /**\n     * @param {?} offset\n     * @return {?}\n     */\n    function (offset) {\n        var /** @type {?} */ i = this.index + offset;\n        return i < this.tokens.length ? this.tokens[i] : EOF;\n    };\n    Object.defineProperty(_ParseAST.prototype, \"next\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.peek(0); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_ParseAST.prototype, \"inputIndex\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return (this.index < this.tokens.length) ? this.next.index + this.offset :\n                this.inputLength + this.offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _ParseAST.prototype.span = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) { return new ParseSpan(start, this.inputIndex); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.advance = /**\n     * @return {?}\n     */\n    function () { this.index++; };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        if (this.next.isCharacter(code)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordLet = /**\n     * @return {?}\n     */\n    function () { return this.next.isKeywordLet(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordAs = /**\n     * @return {?}\n     */\n    function () { return this.next.isKeywordAs(); };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.expectCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        if (this.optionalCharacter(code))\n            return;\n        this.error(\"Missing expected \" + String.fromCharCode(code));\n    };\n    /**\n     * @param {?} op\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalOperator = /**\n     * @param {?} op\n     * @return {?}\n     */\n    function (op) {\n        if (this.next.isOperator(op)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @param {?} operator\n     * @return {?}\n     */\n    _ParseAST.prototype.expectOperator = /**\n     * @param {?} operator\n     * @return {?}\n     */\n    function (operator) {\n        if (this.optionalOperator(operator))\n            return;\n        this.error(\"Missing expected operator \" + operator);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeyword = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier or keyword\");\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeywordOrString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier, keyword, or string\");\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseChain = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ exprs = [];\n        var /** @type {?} */ start = this.inputIndex;\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ expr = this.parsePipe();\n            exprs.push(expr);\n            if (this.optionalCharacter($SEMICOLON)) {\n                if (!this.parseAction) {\n                    this.error('Binding expression cannot contain chained expression');\n                }\n                while (this.optionalCharacter($SEMICOLON)) {\n                } // read all semicolons\n            }\n            else if (this.index < this.tokens.length) {\n                this.error(\"Unexpected token '\" + this.next + \"'\");\n            }\n        }\n        if (exprs.length == 0)\n            return new EmptyExpr(this.span(start));\n        if (exprs.length == 1)\n            return exprs[0];\n        return new Chain(this.span(start), exprs);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePipe = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = this.parseExpression();\n        if (this.optionalOperator('|')) {\n            if (this.parseAction) {\n                this.error('Cannot have a pipe in an action expression');\n            }\n            do {\n                var /** @type {?} */ name_1 = this.expectIdentifierOrKeyword();\n                var /** @type {?} */ args = [];\n                while (this.optionalCharacter($COLON)) {\n                    args.push(this.parseExpression());\n                }\n                result = new BindingPipe(this.span(result.span.start), result, name_1, args);\n            } while (this.optionalOperator('|'));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpression = /**\n     * @return {?}\n     */\n    function () { return this.parseConditional(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseConditional = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.inputIndex;\n        var /** @type {?} */ result = this.parseLogicalOr();\n        if (this.optionalOperator('?')) {\n            var /** @type {?} */ yes = this.parsePipe();\n            var /** @type {?} */ no = void 0;\n            if (!this.optionalCharacter($COLON)) {\n                var /** @type {?} */ end = this.inputIndex;\n                var /** @type {?} */ expression = this.input.substring(start, end);\n                this.error(\"Conditional expression \" + expression + \" requires all 3 expressions\");\n                no = new EmptyExpr(this.span(start));\n            }\n            else {\n                no = this.parsePipe();\n            }\n            return new Conditional(this.span(start), result, yes, no);\n        }\n        else {\n            return result;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalOr = /**\n     * @return {?}\n     */\n    function () {\n        // '||'\n        var /** @type {?} */ result = this.parseLogicalAnd();\n        while (this.optionalOperator('||')) {\n            var /** @type {?} */ right = this.parseLogicalAnd();\n            result = new Binary(this.span(result.span.start), '||', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalAnd = /**\n     * @return {?}\n     */\n    function () {\n        // '&&'\n        var /** @type {?} */ result = this.parseEquality();\n        while (this.optionalOperator('&&')) {\n            var /** @type {?} */ right = this.parseEquality();\n            result = new Binary(this.span(result.span.start), '&&', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseEquality = /**\n     * @return {?}\n     */\n    function () {\n        // '==','!=','===','!=='\n        var /** @type {?} */ result = this.parseRelational();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '==':\n                case '===':\n                case '!=':\n                case '!==':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseRelational();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseRelational = /**\n     * @return {?}\n     */\n    function () {\n        // '<', '>', '<=', '>='\n        var /** @type {?} */ result = this.parseAdditive();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '<':\n                case '>':\n                case '<=':\n                case '>=':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseAdditive();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAdditive = /**\n     * @return {?}\n     */\n    function () {\n        // '+', '-'\n        var /** @type {?} */ result = this.parseMultiplicative();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '+':\n                case '-':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseMultiplicative();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseMultiplicative = /**\n     * @return {?}\n     */\n    function () {\n        // '*', '%', '/'\n        var /** @type {?} */ result = this.parsePrefix();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '*':\n                case '%':\n                case '/':\n                    this.advance();\n                    var /** @type {?} */ right = this.parsePrefix();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrefix = /**\n     * @return {?}\n     */\n    function () {\n        if (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ operator = this.next.strValue;\n            var /** @type {?} */ result = void 0;\n            switch (operator) {\n                case '+':\n                    this.advance();\n                    return this.parsePrefix();\n                case '-':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n                case '!':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new PrefixNot(this.span(start), result);\n            }\n        }\n        return this.parseCallChain();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallChain = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = this.parsePrimary();\n        while (true) {\n            if (this.optionalCharacter($PERIOD)) {\n                result = this.parseAccessMemberOrMethodCall(result, false);\n            }\n            else if (this.optionalOperator('?.')) {\n                result = this.parseAccessMemberOrMethodCall(result, true);\n            }\n            else if (this.optionalCharacter($LBRACKET)) {\n                this.rbracketsExpected++;\n                var /** @type {?} */ key = this.parsePipe();\n                this.rbracketsExpected--;\n                this.expectCharacter($RBRACKET);\n                if (this.optionalOperator('=')) {\n                    var /** @type {?} */ value = this.parseConditional();\n                    result = new KeyedWrite(this.span(result.span.start), result, key, value);\n                }\n                else {\n                    result = new KeyedRead(this.span(result.span.start), result, key);\n                }\n            }\n            else if (this.optionalCharacter($LPAREN)) {\n                this.rparensExpected++;\n                var /** @type {?} */ args = this.parseCallArguments();\n                this.rparensExpected--;\n                this.expectCharacter($RPAREN);\n                result = new FunctionCall(this.span(result.span.start), result, args);\n            }\n            else if (this.optionalOperator('!')) {\n                result = new NonNullAssert(this.span(result.span.start), result);\n            }\n            else {\n                return result;\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrimary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.inputIndex;\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ result = this.parsePipe();\n            this.rparensExpected--;\n            this.expectCharacter($RPAREN);\n            return result;\n        }\n        else if (this.next.isKeywordNull()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), null);\n        }\n        else if (this.next.isKeywordUndefined()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), void 0);\n        }\n        else if (this.next.isKeywordTrue()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), true);\n        }\n        else if (this.next.isKeywordFalse()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), false);\n        }\n        else if (this.next.isKeywordThis()) {\n            this.advance();\n            return new ImplicitReceiver(this.span(start));\n        }\n        else if (this.optionalCharacter($LBRACKET)) {\n            this.rbracketsExpected++;\n            var /** @type {?} */ elements = this.parseExpressionList($RBRACKET);\n            this.rbracketsExpected--;\n            this.expectCharacter($RBRACKET);\n            return new LiteralArray(this.span(start), elements);\n        }\n        else if (this.next.isCharacter($LBRACE)) {\n            return this.parseLiteralMap();\n        }\n        else if (this.next.isIdentifier()) {\n            return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n        }\n        else if (this.next.isNumber()) {\n            var /** @type {?} */ value = this.next.toNumber();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), value);\n        }\n        else if (this.next.isString()) {\n            var /** @type {?} */ literalValue = this.next.toString();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), literalValue);\n        }\n        else if (this.index >= this.tokens.length) {\n            this.error(\"Unexpected end of expression: \" + this.input);\n            return new EmptyExpr(this.span(start));\n        }\n        else {\n            this.error(\"Unexpected token \" + this.next);\n            return new EmptyExpr(this.span(start));\n        }\n    };\n    /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpressionList = /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    function (terminator) {\n        var /** @type {?} */ result = [];\n        if (!this.next.isCharacter(terminator)) {\n            do {\n                result.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLiteralMap = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ keys = [];\n        var /** @type {?} */ values = [];\n        var /** @type {?} */ start = this.inputIndex;\n        this.expectCharacter($LBRACE);\n        if (!this.optionalCharacter($RBRACE)) {\n            this.rbracesExpected++;\n            do {\n                var /** @type {?} */ quoted = this.next.isString();\n                var /** @type {?} */ key = this.expectIdentifierOrKeywordOrString();\n                keys.push({ key: key, quoted: quoted });\n                this.expectCharacter($COLON);\n                values.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n            this.rbracesExpected--;\n            this.expectCharacter($RBRACE);\n        }\n        return new LiteralMap(this.span(start), keys, values);\n    };\n    /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAccessMemberOrMethodCall = /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    function (receiver, isSafe) {\n        if (isSafe === void 0) { isSafe = false; }\n        var /** @type {?} */ start = receiver.span.start;\n        var /** @type {?} */ id = this.expectIdentifierOrKeyword();\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ args = this.parseCallArguments();\n            this.expectCharacter($RPAREN);\n            this.rparensExpected--;\n            var /** @type {?} */ span = this.span(start);\n            return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                new MethodCall(span, receiver, id, args);\n        }\n        else {\n            if (isSafe) {\n                if (this.optionalOperator('=')) {\n                    this.error('The \\'?.\\' operator cannot be used in the assignment');\n                    return new EmptyExpr(this.span(start));\n                }\n                else {\n                    return new SafePropertyRead(this.span(start), receiver, id);\n                }\n            }\n            else {\n                if (this.optionalOperator('=')) {\n                    if (!this.parseAction) {\n                        this.error('Bindings cannot contain assignments');\n                        return new EmptyExpr(this.span(start));\n                    }\n                    var /** @type {?} */ value = this.parseConditional();\n                    return new PropertyWrite(this.span(start), receiver, id, value);\n                }\n                else {\n                    return new PropertyRead(this.span(start), receiver, id);\n                }\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallArguments = /**\n     * @return {?}\n     */\n    function () {\n        if (this.next.isCharacter($RPAREN))\n            return [];\n        var /** @type {?} */ positionals = [];\n        do {\n            positionals.push(this.parsePipe());\n        } while (this.optionalCharacter($COMMA));\n        return /** @type {?} */ (positionals);\n    };\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     */\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    _ParseAST.prototype.expectTemplateBindingKey = /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = '';\n        var /** @type {?} */ operatorFound = false;\n        do {\n            result += this.expectIdentifierOrKeywordOrString();\n            operatorFound = this.optionalOperator('-');\n            if (operatorFound) {\n                result += '-';\n            }\n        } while (operatorFound);\n        return result.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseTemplateBindings = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ bindings = [];\n        var /** @type {?} */ prefix = /** @type {?} */ ((null));\n        var /** @type {?} */ warnings = [];\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ keyIsVar = this.peekKeywordLet();\n            if (keyIsVar) {\n                this.advance();\n            }\n            var /** @type {?} */ rawKey = this.expectTemplateBindingKey();\n            var /** @type {?} */ key = rawKey;\n            if (!keyIsVar) {\n                if (prefix == null) {\n                    prefix = key;\n                }\n                else {\n                    key = prefix + key[0].toUpperCase() + key.substring(1);\n                }\n            }\n            this.optionalCharacter($COLON);\n            var /** @type {?} */ name_2 = /** @type {?} */ ((null));\n            var /** @type {?} */ expression = /** @type {?} */ ((null));\n            if (keyIsVar) {\n                if (this.optionalOperator('=')) {\n                    name_2 = this.expectTemplateBindingKey();\n                }\n                else {\n                    name_2 = '\\$implicit';\n                }\n            }\n            else if (this.peekKeywordAs()) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                name_2 = rawKey;\n                key = this.expectTemplateBindingKey(); // read local var name\n                keyIsVar = true;\n            }\n            else if (this.next !== EOF && !this.peekKeywordLet()) {\n                var /** @type {?} */ start_1 = this.inputIndex;\n                var /** @type {?} */ ast = this.parsePipe();\n                var /** @type {?} */ source = this.input.substring(start_1 - this.offset, this.inputIndex - this.offset);\n                expression = new ASTWithSource(ast, source, this.location, this.errors);\n            }\n            bindings.push(new TemplateBinding(this.span(start), key, keyIsVar, name_2, expression));\n            if (this.peekKeywordAs() && !keyIsVar) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                var /** @type {?} */ letName = this.expectTemplateBindingKey(); // read local var name\n                bindings.push(new TemplateBinding(this.span(letStart), letName, true, key, /** @type {?} */ ((null))));\n            }\n            if (!this.optionalCharacter($SEMICOLON)) {\n                this.optionalCharacter($COMMA);\n            }\n        }\n        return new TemplateBindingParseResult(bindings, warnings, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.error = /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    function (message, index) {\n        if (index === void 0) { index = null; }\n        this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n        this.skip();\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.locationText = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        if (index === void 0) { index = null; }\n        if (index == null)\n            index = this.index;\n        return (index < this.tokens.length) ? \"at column \" + (this.tokens[index].index + 1) + \" in\" :\n            \"at the end of the expression\";\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.skip = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        while (this.index < this.tokens.length && !n.isCharacter($SEMICOLON) &&\n            (this.rparensExpected <= 0 || !n.isCharacter($RPAREN)) &&\n            (this.rbracesExpected <= 0 || !n.isCharacter($RBRACE)) &&\n            (this.rbracketsExpected <= 0 || !n.isCharacter($RBRACKET))) {\n            if (this.next.isError()) {\n                this.errors.push(new ParserError(/** @type {?} */ ((this.next.toString())), this.input, this.locationText(), this.location));\n            }\n            this.advance();\n            n = this.next;\n        }\n    };\n    return _ParseAST;\n}());\nvar SimpleExpressionChecker = (function () {\n    function SimpleExpressionChecker() {\n        this.errors = [];\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    SimpleExpressionChecker.check = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ s = new SimpleExpressionChecker();\n        ast.visit(s);\n        return s.errors;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.visitAll(ast.expressions); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.visitAll(ast.values); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.errors.push('pipes'); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var _this = this;\n        return asts.map(function (node) { return node.visit(_this); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return SimpleExpressionChecker;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParseLocation = (function () {\n    function ParseLocation(file, offset, line, col) {\n        this.file = file;\n        this.offset = offset;\n        this.line = line;\n        this.col = col;\n    }\n    /**\n     * @return {?}\n     */\n    ParseLocation.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.offset != null ? this.file.url + \"@\" + this.line + \":\" + this.col : this.file.url;\n    };\n    /**\n     * @param {?} delta\n     * @return {?}\n     */\n    ParseLocation.prototype.moveBy = /**\n     * @param {?} delta\n     * @return {?}\n     */\n    function (delta) {\n        var /** @type {?} */ source = this.file.content;\n        var /** @type {?} */ len = source.length;\n        var /** @type {?} */ offset = this.offset;\n        var /** @type {?} */ line = this.line;\n        var /** @type {?} */ col = this.col;\n        while (offset > 0 && delta < 0) {\n            offset--;\n            delta++;\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            if (ch == $LF) {\n                line--;\n                var /** @type {?} */ priorLine = source.substr(0, offset - 1).lastIndexOf(String.fromCharCode($LF));\n                col = priorLine > 0 ? offset - priorLine : offset;\n            }\n            else {\n                col--;\n            }\n        }\n        while (offset < len && delta > 0) {\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            offset++;\n            delta--;\n            if (ch == $LF) {\n                line++;\n                col = 0;\n            }\n            else {\n                col++;\n            }\n        }\n        return new ParseLocation(this.file, offset, line, col);\n    };\n    // Return the source around the location\n    // Up to `maxChars` or `maxLines` on each side of the location\n    /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    ParseLocation.prototype.getContext = /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    function (maxChars, maxLines) {\n        var /** @type {?} */ content = this.file.content;\n        var /** @type {?} */ startOffset = this.offset;\n        if (startOffset != null) {\n            if (startOffset > content.length - 1) {\n                startOffset = content.length - 1;\n            }\n            var /** @type {?} */ endOffset = startOffset;\n            var /** @type {?} */ ctxChars = 0;\n            var /** @type {?} */ ctxLines = 0;\n            while (ctxChars < maxChars && startOffset > 0) {\n                startOffset--;\n                ctxChars++;\n                if (content[startOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            ctxChars = 0;\n            ctxLines = 0;\n            while (ctxChars < maxChars && endOffset < content.length - 1) {\n                endOffset++;\n                ctxChars++;\n                if (content[endOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            return {\n                before: content.substring(startOffset, this.offset),\n                after: content.substring(this.offset, endOffset + 1),\n            };\n        }\n        return null;\n    };\n    return ParseLocation;\n}());\nvar ParseSourceFile = (function () {\n    function ParseSourceFile(content, url) {\n        this.content = content;\n        this.url = url;\n    }\n    return ParseSourceFile;\n}());\nvar ParseSourceSpan = (function () {\n    function ParseSourceSpan(start, end, details) {\n        if (details === void 0) { details = null; }\n        this.start = start;\n        this.end = end;\n        this.details = details;\n    }\n    /**\n     * @return {?}\n     */\n    ParseSourceSpan.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.start.file.content.substring(this.start.offset, this.end.offset);\n    };\n    return ParseSourceSpan;\n}());\n/** @enum {number} */\nvar ParseErrorLevel = {\n    WARNING: 0,\n    ERROR: 1,\n};\nParseErrorLevel[ParseErrorLevel.WARNING] = \"WARNING\";\nParseErrorLevel[ParseErrorLevel.ERROR] = \"ERROR\";\nvar ParseError = (function () {\n    function ParseError(span, msg, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this.span = span;\n        this.msg = msg;\n        this.level = level;\n    }\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.contextualMessage = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ ctx = this.span.start.getContext(100, 3);\n        return ctx ? \" (\\\"\" + ctx.before + \"[\" + ParseErrorLevel[this.level] + \" ->]\" + ctx.after + \"\\\")\" : '';\n    };\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ details = this.span.details ? \", \" + this.span.details : '';\n        return \"\" + this.msg + this.contextualMessage() + \": \" + this.span.start + details;\n    };\n    return ParseError;\n}());\n/**\n * @param {?} kind\n * @param {?} type\n * @return {?}\n */\nfunction typeSourceSpan(kind, type) {\n    var /** @type {?} */ moduleUrl = identifierModuleUrl(type);\n    var /** @type {?} */ sourceFileName = moduleUrl != null ? \"in \" + kind + \" \" + identifierName(type) + \" in \" + moduleUrl :\n        \"in \" + kind + \" \" + identifierName(type);\n    var /** @type {?} */ sourceFile = new ParseSourceFile('', sourceFileName);\n    return new ParseSourceSpan(new ParseLocation(sourceFile, -1, -1, -1), new ParseLocation(sourceFile, -1, -1, -1));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TokenType$1 = {\n    TAG_OPEN_START: 0,\n    TAG_OPEN_END: 1,\n    TAG_OPEN_END_VOID: 2,\n    TAG_CLOSE: 3,\n    TEXT: 4,\n    ESCAPABLE_RAW_TEXT: 5,\n    RAW_TEXT: 6,\n    COMMENT_START: 7,\n    COMMENT_END: 8,\n    CDATA_START: 9,\n    CDATA_END: 10,\n    ATTR_NAME: 11,\n    ATTR_VALUE: 12,\n    DOC_TYPE: 13,\n    EXPANSION_FORM_START: 14,\n    EXPANSION_CASE_VALUE: 15,\n    EXPANSION_CASE_EXP_START: 16,\n    EXPANSION_CASE_EXP_END: 17,\n    EXPANSION_FORM_END: 18,\n    EOF: 19,\n};\nTokenType$1[TokenType$1.TAG_OPEN_START] = \"TAG_OPEN_START\";\nTokenType$1[TokenType$1.TAG_OPEN_END] = \"TAG_OPEN_END\";\nTokenType$1[TokenType$1.TAG_OPEN_END_VOID] = \"TAG_OPEN_END_VOID\";\nTokenType$1[TokenType$1.TAG_CLOSE] = \"TAG_CLOSE\";\nTokenType$1[TokenType$1.TEXT] = \"TEXT\";\nTokenType$1[TokenType$1.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTokenType$1[TokenType$1.RAW_TEXT] = \"RAW_TEXT\";\nTokenType$1[TokenType$1.COMMENT_START] = \"COMMENT_START\";\nTokenType$1[TokenType$1.COMMENT_END] = \"COMMENT_END\";\nTokenType$1[TokenType$1.CDATA_START] = \"CDATA_START\";\nTokenType$1[TokenType$1.CDATA_END] = \"CDATA_END\";\nTokenType$1[TokenType$1.ATTR_NAME] = \"ATTR_NAME\";\nTokenType$1[TokenType$1.ATTR_VALUE] = \"ATTR_VALUE\";\nTokenType$1[TokenType$1.DOC_TYPE] = \"DOC_TYPE\";\nTokenType$1[TokenType$1.EXPANSION_FORM_START] = \"EXPANSION_FORM_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_VALUE] = \"EXPANSION_CASE_VALUE\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_START] = \"EXPANSION_CASE_EXP_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_END] = \"EXPANSION_CASE_EXP_END\";\nTokenType$1[TokenType$1.EXPANSION_FORM_END] = \"EXPANSION_FORM_END\";\nTokenType$1[TokenType$1.EOF] = \"EOF\";\nvar Token$1 = (function () {\n    function Token(type, parts, sourceSpan) {\n        this.type = type;\n        this.parts = parts;\n        this.sourceSpan = sourceSpan;\n    }\n    return Token;\n}());\nvar TokenError = (function (_super) {\n    __extends(TokenError, _super);\n    function TokenError(errorMsg, tokenType, span) {\n        var _this = _super.call(this, span, errorMsg) || this;\n        _this.tokenType = tokenType;\n        return _this;\n    }\n    return TokenError;\n}(ParseError));\nvar TokenizeResult = (function () {\n    function TokenizeResult(tokens, errors) {\n        this.tokens = tokens;\n        this.errors = errors;\n    }\n    return TokenizeResult;\n}());\n/**\n * @param {?} source\n * @param {?} url\n * @param {?} getTagDefinition\n * @param {?=} tokenizeExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nfunction tokenize(source, url, getTagDefinition, tokenizeExpansionForms, interpolationConfig) {\n    if (tokenizeExpansionForms === void 0) { tokenizeExpansionForms = false; }\n    if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n    return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n        .tokenize();\n}\nvar _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n/**\n * @param {?} charCode\n * @return {?}\n */\nfunction _unexpectedCharacterErrorMsg(charCode) {\n    var /** @type {?} */ char = charCode === $EOF ? 'EOF' : String.fromCharCode(charCode);\n    return \"Unexpected character \\\"\" + char + \"\\\"\";\n}\n/**\n * @param {?} entitySrc\n * @return {?}\n */\nfunction _unknownEntityErrorMsg(entitySrc) {\n    return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\n}\nvar _ControlFlowError = (function () {\n    function _ControlFlowError(error) {\n        this.error = error;\n    }\n    return _ControlFlowError;\n}());\nvar _Tokenizer = (function () {\n    /**\n     * @param _file The html source\n     * @param _getTagDefinition\n     * @param _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n     * @param _interpolationConfig\n     */\n    function _Tokenizer(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig) {\n        if (_interpolationConfig === void 0) { _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._file = _file;\n        this._getTagDefinition = _getTagDefinition;\n        this._tokenizeIcu = _tokenizeIcu;\n        this._interpolationConfig = _interpolationConfig;\n        this._peek = -1;\n        this._nextPeek = -1;\n        this._index = -1;\n        this._line = 0;\n        this._column = -1;\n        this._expansionCaseStack = [];\n        this._inInterpolation = false;\n        this.tokens = [];\n        this.errors = [];\n        this._input = _file.content;\n        this._length = _file.content.length;\n        this._advance();\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    _Tokenizer.prototype._processCarriageReturns = /**\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n        // In order to keep the original position in the source, we can not\n        // pre-process it.\n        // Instead CRs are processed right before instantiating the tokens.\n        return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype.tokenize = /**\n     * @return {?}\n     */\n    function () {\n        while (this._peek !== $EOF) {\n            var /** @type {?} */ start = this._getLocation();\n            try {\n                if (this._attemptCharCode($LT)) {\n                    if (this._attemptCharCode($BANG)) {\n                        if (this._attemptCharCode($LBRACKET)) {\n                            this._consumeCdata(start);\n                        }\n                        else if (this._attemptCharCode($MINUS)) {\n                            this._consumeComment(start);\n                        }\n                        else {\n                            this._consumeDocType(start);\n                        }\n                    }\n                    else if (this._attemptCharCode($SLASH)) {\n                        this._consumeTagClose(start);\n                    }\n                    else {\n                        this._consumeTagOpen(start);\n                    }\n                }\n                else if (!(this._tokenizeIcu && this._tokenizeExpansionForm())) {\n                    this._consumeText();\n                }\n            }\n            catch (/** @type {?} */ e) {\n                if (e instanceof _ControlFlowError) {\n                    this.errors.push(e.error);\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        this._beginToken(TokenType$1.EOF);\n        this._endToken([]);\n        return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n    };\n    /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    _Tokenizer.prototype._tokenizeExpansionForm = /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    function () {\n        if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n            this._consumeExpansionFormStart();\n            return true;\n        }\n        if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n            this._consumeExpansionCaseStart();\n            return true;\n        }\n        if (this._peek === $RBRACE) {\n            if (this._isInExpansionCase()) {\n                this._consumeExpansionCaseEnd();\n                return true;\n            }\n            if (this._isInExpansionForm()) {\n                this._consumeExpansionFormEnd();\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._getLocation = /**\n     * @return {?}\n     */\n    function () {\n        return new ParseLocation(this._file, this._index, this._line, this._column);\n    };\n    /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._getSpan = /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    function (start, end) {\n        if (start === void 0) { start = this._getLocation(); }\n        if (end === void 0) { end = this._getLocation(); }\n        return new ParseSourceSpan(start, end);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._beginToken = /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    function (type, start) {\n        if (start === void 0) { start = this._getLocation(); }\n        this._currentTokenStart = start;\n        this._currentTokenType = type;\n    };\n    /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._endToken = /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    function (parts, end) {\n        if (end === void 0) { end = this._getLocation(); }\n        var /** @type {?} */ token = new Token$1(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n        this.tokens.push(token);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return token;\n    };\n    /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    _Tokenizer.prototype._createError = /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    function (msg, span) {\n        if (this._isInExpansionForm()) {\n            msg += \" (Do you have an unescaped \\\"{\\\" in your template? Use \\\"{{ '{' }}\\\") to escape it.)\";\n        }\n        var /** @type {?} */ error = new TokenError(msg, this._currentTokenType, span);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return new _ControlFlowError(error);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._advance = /**\n     * @return {?}\n     */\n    function () {\n        if (this._index >= this._length) {\n            throw this._createError(_unexpectedCharacterErrorMsg($EOF), this._getSpan());\n        }\n        if (this._peek === $LF) {\n            this._line++;\n            this._column = 0;\n        }\n        else if (this._peek !== $LF && this._peek !== $CR) {\n            this._column++;\n        }\n        this._index++;\n        this._peek = this._index >= this._length ? $EOF : this._input.charCodeAt(this._index);\n        this._nextPeek =\n            this._index + 1 >= this._length ? $EOF : this._input.charCodeAt(this._index + 1);\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCode = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        if (this._peek === charCode) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeCaseInsensitive = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCode = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptCharCode(charCode)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n        }\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStr = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        var /** @type {?} */ len = chars.length;\n        if (this._index + len > this._length) {\n            return false;\n        }\n        var /** @type {?} */ initialPosition = this._savePosition();\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            if (!this._attemptCharCode(chars.charCodeAt(i))) {\n                // If attempting to parse the string fails, we want to reset the parser\n                // to where it was before the attempt\n                this._restorePosition(initialPosition);\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStrCaseInsensitive = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        for (var /** @type {?} */ i = 0; i < chars.length; i++) {\n            if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireStr = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptStr(chars)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeUntilFn = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        while (!predicate(this._peek)) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCodeUntilFn = /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    function (predicate, len) {\n        var /** @type {?} */ start = this._getLocation();\n        this._attemptCharCodeUntilFn(predicate);\n        if (this._index - start.offset < len) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n        }\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptUntilChar = /**\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        while (this._peek !== char) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._readChar = /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    function (decodeEntities) {\n        if (decodeEntities && this._peek === $AMPERSAND) {\n            return this._decodeEntity();\n        }\n        else {\n            var /** @type {?} */ index = this._index;\n            this._advance();\n            return this._input[index];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._decodeEntity = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._advance();\n        if (this._attemptCharCode($HASH)) {\n            var /** @type {?} */ isHex = this._attemptCharCode($x) || this._attemptCharCode($X);\n            var /** @type {?} */ numberStart = this._getLocation().offset;\n            this._attemptCharCodeUntilFn(isDigitEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            this._advance();\n            var /** @type {?} */ strNum = this._input.substring(numberStart, this._index - 1);\n            try {\n                var /** @type {?} */ charCode = parseInt(strNum, isHex ? 16 : 10);\n                return String.fromCharCode(charCode);\n            }\n            catch (/** @type {?} */ e) {\n                var /** @type {?} */ entity = this._input.substring(start.offset + 1, this._index - 1);\n                throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n            }\n        }\n        else {\n            var /** @type {?} */ startPosition = this._savePosition();\n            this._attemptCharCodeUntilFn(isNamedEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                this._restorePosition(startPosition);\n                return '&';\n            }\n            this._advance();\n            var /** @type {?} */ name_1 = this._input.substring(start.offset + 1, this._index - 1);\n            var /** @type {?} */ char = NAMED_ENTITIES[name_1];\n            if (!char) {\n                throw this._createError(_unknownEntityErrorMsg(name_1), this._getSpan(start));\n            }\n            return char;\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawText = /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    function (decodeEntities, firstCharOfEnd, attemptEndRest) {\n        var /** @type {?} */ tagCloseStart;\n        var /** @type {?} */ textStart = this._getLocation();\n        this._beginToken(decodeEntities ? TokenType$1.ESCAPABLE_RAW_TEXT : TokenType$1.RAW_TEXT, textStart);\n        var /** @type {?} */ parts = [];\n        while (true) {\n            tagCloseStart = this._getLocation();\n            if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n                break;\n            }\n            if (this._index > tagCloseStart.offset) {\n                // add the characters consumed by the previous if statement to the output\n                parts.push(this._input.substring(tagCloseStart.offset, this._index));\n            }\n            while (this._peek !== firstCharOfEnd) {\n                parts.push(this._readChar(decodeEntities));\n            }\n        }\n        return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeComment = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.COMMENT_START, start);\n        this._requireCharCode($MINUS);\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $MINUS, function () { return _this._attemptStr('->'); });\n        this._beginToken(TokenType$1.COMMENT_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeCdata = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.CDATA_START, start);\n        this._requireStr('CDATA[');\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $RBRACKET, function () { return _this._attemptStr(']>'); });\n        this._beginToken(TokenType$1.CDATA_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeDocType = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.DOC_TYPE, start);\n        this._attemptUntilChar($GT);\n        this._advance();\n        this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumePrefixAndName = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ nameOrPrefixStart = this._index;\n        var /** @type {?} */ prefix = /** @type {?} */ ((null));\n        while (this._peek !== $COLON && !isPrefixEnd(this._peek)) {\n            this._advance();\n        }\n        var /** @type {?} */ nameStart;\n        if (this._peek === $COLON) {\n            this._advance();\n            prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n            nameStart = this._index;\n        }\n        else {\n            nameStart = nameOrPrefixStart;\n        }\n        this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n        var /** @type {?} */ name = this._input.substring(nameStart, this._index);\n        return [prefix, name];\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpen = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ savedPos = this._savePosition();\n        var /** @type {?} */ tagName;\n        var /** @type {?} */ lowercaseTagName;\n        try {\n            if (!isAsciiLetter(this._peek)) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            var /** @type {?} */ nameStart = this._index;\n            this._consumeTagOpenStart(start);\n            tagName = this._input.substring(nameStart, this._index);\n            lowercaseTagName = tagName.toLowerCase();\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            while (this._peek !== $SLASH && this._peek !== $GT) {\n                this._consumeAttributeName();\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n                if (this._attemptCharCode($EQ)) {\n                    this._attemptCharCodeUntilFn(isNotWhitespace);\n                    this._consumeAttributeValue();\n                }\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n            }\n            this._consumeTagOpenEnd();\n        }\n        catch (/** @type {?} */ e) {\n            if (e instanceof _ControlFlowError) {\n                // When the start tag is invalid, assume we want a \"<\"\n                this._restorePosition(savedPos);\n                // Back to back text tokens are merged at the end\n                this._beginToken(TokenType$1.TEXT, start);\n                this._endToken(['<']);\n                return;\n            }\n            throw e;\n        }\n        var /** @type {?} */ contentTokenType = this._getTagDefinition(tagName).contentType;\n        if (contentTokenType === TagContentType.RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, false);\n        }\n        else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, true);\n        }\n    };\n    /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawTextWithTagClose = /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    function (lowercaseTagName, decodeEntities) {\n        var _this = this;\n        var /** @type {?} */ textToken = this._consumeRawText(decodeEntities, $LT, function () {\n            if (!_this._attemptCharCode($SLASH))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            return _this._attemptCharCode($GT);\n        });\n        this._beginToken(TokenType$1.TAG_CLOSE, textToken.sourceSpan.end);\n        this._endToken([/** @type {?} */ ((null)), lowercaseTagName]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenStart = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.TAG_OPEN_START, start);\n        var /** @type {?} */ parts = this._consumePrefixAndName();\n        this._endToken(parts);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeName = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.ATTR_NAME);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeValue = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.ATTR_VALUE);\n        var /** @type {?} */ value;\n        if (this._peek === $SQ || this._peek === $DQ) {\n            var /** @type {?} */ quoteChar = this._peek;\n            this._advance();\n            var /** @type {?} */ parts = [];\n            while (this._peek !== quoteChar) {\n                parts.push(this._readChar(true));\n            }\n            value = parts.join('');\n            this._advance();\n        }\n        else {\n            var /** @type {?} */ valueStart = this._index;\n            this._requireCharCodeUntilFn(isNameEnd, 1);\n            value = this._input.substring(valueStart, this._index);\n        }\n        this._endToken([this._processCarriageReturns(value)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenEnd = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tokenType = this._attemptCharCode($SLASH) ? TokenType$1.TAG_OPEN_END_VOID : TokenType$1.TAG_OPEN_END;\n        this._beginToken(tokenType);\n        this._requireCharCode($GT);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagClose = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.TAG_CLOSE, start);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._requireCharCode($GT);\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormStart = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_FORM_START);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ condition = this._readUntil($COMMA);\n        this._endToken([condition], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ type = this._readUntil($COMMA);\n        this._endToken([type], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseStart = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_VALUE, this._getLocation());\n        var /** @type {?} */ value = this._readUntil($LBRACE).trim();\n        this._endToken([value], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_CASE_EXP_START);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseEnd = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormEnd = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeText = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._beginToken(TokenType$1.TEXT, start);\n        var /** @type {?} */ parts = [];\n        do {\n            if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n                parts.push(this._interpolationConfig.start);\n                this._inInterpolation = true;\n            }\n            else if (this._interpolationConfig && this._inInterpolation &&\n                this._attemptStr(this._interpolationConfig.end)) {\n                parts.push(this._interpolationConfig.end);\n                this._inInterpolation = false;\n            }\n            else {\n                parts.push(this._readChar(true));\n            }\n        } while (!this._isTextEnd());\n        this._endToken([this._processCarriageReturns(parts.join(''))]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isTextEnd = /**\n     * @return {?}\n     */\n    function () {\n        if (this._peek === $LT || this._peek === $EOF) {\n            return true;\n        }\n        if (this._tokenizeIcu && !this._inInterpolation) {\n            if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                // start of an expansion form\n                return true;\n            }\n            if (this._peek === $RBRACE && this._isInExpansionCase()) {\n                // end of and expansion case\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._savePosition = /**\n     * @return {?}\n     */\n    function () {\n        return [this._peek, this._index, this._column, this._line, this.tokens.length];\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._readUntil = /**\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        var /** @type {?} */ start = this._index;\n        this._attemptUntilChar(char);\n        return this._input.substring(start, this._index);\n    };\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    _Tokenizer.prototype._restorePosition = /**\n     * @param {?} position\n     * @return {?}\n     */\n    function (position) {\n        this._peek = position[0];\n        this._index = position[1];\n        this._column = position[2];\n        this._line = position[3];\n        var /** @type {?} */ nbTokens = position[4];\n        if (nbTokens < this.tokens.length) {\n            // remove any extra tokens\n            this.tokens = this.tokens.slice(0, nbTokens);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionCase = /**\n     * @return {?}\n     */\n    function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_CASE_EXP_START;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionForm = /**\n     * @return {?}\n     */\n    function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_FORM_START;\n    };\n    return _Tokenizer;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNotWhitespace(code) {\n    return !isWhitespace(code) || code === $EOF;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNameEnd(code) {\n    return isWhitespace(code) || code === $GT || code === $SLASH ||\n        code === $SQ || code === $DQ || code === $EQ;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isPrefixEnd(code) {\n    return (code < $a || $z < code) && (code < $A || $Z < code) &&\n        (code < $0 || code > $9);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigitEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiHexDigit(code);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNamedEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiLetter(code);\n}\n/**\n * @param {?} input\n * @param {?} offset\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction isExpansionFormStart(input, offset, interpolationConfig) {\n    var /** @type {?} */ isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n    return input.charCodeAt(offset) == $LBRACE && !isInterpolationStart;\n}\n/**\n * @param {?} peek\n * @return {?}\n */\nfunction isExpansionCaseStart(peek) {\n    return peek === $EQ || isAsciiLetter(peek) || isDigit(peek);\n}\n/**\n * @param {?} code1\n * @param {?} code2\n * @return {?}\n */\nfunction compareCharCodeCaseInsensitive(code1, code2) {\n    return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction toUpperCaseCharCode(code) {\n    return code >= $a && code <= $z ? code - $a + $A : code;\n}\n/**\n * @param {?} srcTokens\n * @return {?}\n */\nfunction mergeTextTokens(srcTokens) {\n    var /** @type {?} */ dstTokens = [];\n    var /** @type {?} */ lastDstToken = undefined;\n    for (var /** @type {?} */ i = 0; i < srcTokens.length; i++) {\n        var /** @type {?} */ token = srcTokens[i];\n        if (lastDstToken && lastDstToken.type == TokenType$1.TEXT && token.type == TokenType$1.TEXT) {\n            lastDstToken.parts[0] += token.parts[0];\n            lastDstToken.sourceSpan.end = token.sourceSpan.end;\n        }\n        else {\n            lastDstToken = token;\n            dstTokens.push(lastDstToken);\n        }\n    }\n    return dstTokens;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TreeError = (function (_super) {\n    __extends(TreeError, _super);\n    function TreeError(elementName, span, msg) {\n        var _this = _super.call(this, span, msg) || this;\n        _this.elementName = elementName;\n        return _this;\n    }\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    TreeError.create = /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    function (elementName, span, msg) {\n        return new TreeError(elementName, span, msg);\n    };\n    return TreeError;\n}(ParseError));\nvar ParseTreeResult = (function () {\n    function ParseTreeResult(rootNodes, errors) {\n        this.rootNodes = rootNodes;\n        this.errors = errors;\n    }\n    return ParseTreeResult;\n}());\nvar Parser$1 = (function () {\n    function Parser(getTagDefinition) {\n        this.getTagDefinition = getTagDefinition;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ tokensAndErrors = tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n        var /** @type {?} */ treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n        return new ParseTreeResult(treeAndErrors.rootNodes, (/** @type {?} */ (tokensAndErrors.errors)).concat(treeAndErrors.errors));\n    };\n    return Parser;\n}());\nvar _TreeBuilder = (function () {\n    function _TreeBuilder(tokens, getTagDefinition) {\n        this.tokens = tokens;\n        this.getTagDefinition = getTagDefinition;\n        this._index = -1;\n        this._rootNodes = [];\n        this._errors = [];\n        this._elementStack = [];\n        this._advance();\n    }\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype.build = /**\n     * @return {?}\n     */\n    function () {\n        while (this._peek.type !== TokenType$1.EOF) {\n            if (this._peek.type === TokenType$1.TAG_OPEN_START) {\n                this._consumeStartTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TAG_CLOSE) {\n                this._consumeEndTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.CDATA_START) {\n                this._closeVoidElement();\n                this._consumeCdata(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.COMMENT_START) {\n                this._closeVoidElement();\n                this._consumeComment(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TEXT || this._peek.type === TokenType$1.RAW_TEXT ||\n                this._peek.type === TokenType$1.ESCAPABLE_RAW_TEXT) {\n                this._closeVoidElement();\n                this._consumeText(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.EXPANSION_FORM_START) {\n                this._consumeExpansion(this._advance());\n            }\n            else {\n                // Skip all other tokens...\n                this._advance();\n            }\n        }\n        return new ParseTreeResult(this._rootNodes, this._errors);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advance = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ prev = this._peek;\n        if (this._index < this.tokens.length - 1) {\n            // Note: there is always an EOF token at the end\n            this._index++;\n        }\n        this._peek = this.tokens[this._index];\n        return prev;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advanceIf = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (this._peek.type === type) {\n            return this._advance();\n        }\n        return null;\n    };\n    /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeCdata = /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    function (startToken) {\n        this._consumeText(this._advance());\n        this._advanceIf(TokenType$1.CDATA_END);\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeComment = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ text = this._advanceIf(TokenType$1.RAW_TEXT);\n        this._advanceIf(TokenType$1.COMMENT_END);\n        var /** @type {?} */ value = text != null ? text.parts[0].trim() : null;\n        this._addToParent(new Comment(value, token.sourceSpan));\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeExpansion = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ switchValue = this._advance();\n        var /** @type {?} */ type = this._advance();\n        var /** @type {?} */ cases = [];\n        // read =\n        while (this._peek.type === TokenType$1.EXPANSION_CASE_VALUE) {\n            var /** @type {?} */ expCase = this._parseExpansionCase();\n            if (!expCase)\n                return; // error\n            cases.push(expCase);\n        }\n        // read the final }\n        if (this._peek.type !== TokenType$1.EXPANSION_FORM_END) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n            return;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n        this._addToParent(new Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n        this._advance();\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._parseExpansionCase = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ value = this._advance();\n        // read {\n        if (this._peek.type !== TokenType$1.EXPANSION_CASE_EXP_START) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '{'.\"));\n            return null;\n        }\n        // read until }\n        var /** @type {?} */ start = this._advance();\n        var /** @type {?} */ exp = this._collectExpansionExpTokens(start);\n        if (!exp)\n            return null;\n        var /** @type {?} */ end = this._advance();\n        exp.push(new Token$1(TokenType$1.EOF, [], end.sourceSpan));\n        // parse everything in between { and }\n        var /** @type {?} */ parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n        if (parsedExp.errors.length > 0) {\n            this._errors = this._errors.concat(/** @type {?} */ (parsedExp.errors));\n            return null;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n        var /** @type {?} */ expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n        return new ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _TreeBuilder.prototype._collectExpansionExpTokens = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ exp = [];\n        var /** @type {?} */ expansionFormStack = [TokenType$1.EXPANSION_CASE_EXP_START];\n        while (true) {\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_START ||\n                this._peek.type === TokenType$1.EXPANSION_CASE_EXP_START) {\n                expansionFormStack.push(this._peek.type);\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_CASE_EXP_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_CASE_EXP_START)) {\n                    expansionFormStack.pop();\n                    if (expansionFormStack.length == 0)\n                        return exp;\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_FORM_START)) {\n                    expansionFormStack.pop();\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EOF) {\n                this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                return null;\n            }\n            exp.push(this._advance());\n        }\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeText = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ text = token.parts[0];\n        if (text.length > 0 && text[0] == '\\n') {\n            var /** @type {?} */ parent_1 = this._getParentElement();\n            if (parent_1 != null && parent_1.children.length == 0 &&\n                this.getTagDefinition(parent_1.name).ignoreFirstLf) {\n                text = text.substring(1);\n            }\n        }\n        if (text.length > 0) {\n            this._addToParent(new Text(text, token.sourceSpan));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._closeVoidElement = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ el = this._getParentElement();\n        if (el && this.getTagDefinition(el.name).isVoid) {\n            this._elementStack.pop();\n        }\n    };\n    /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeStartTag = /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    function (startTagToken) {\n        var /** @type {?} */ prefix = startTagToken.parts[0];\n        var /** @type {?} */ name = startTagToken.parts[1];\n        var /** @type {?} */ attrs = [];\n        while (this._peek.type === TokenType$1.ATTR_NAME) {\n            attrs.push(this._consumeAttr(this._advance()));\n        }\n        var /** @type {?} */ fullName = this._getElementFullName(prefix, name, this._getParentElement());\n        var /** @type {?} */ selfClosing = false;\n        // Note: There could have been a tokenizer error\n        // so that we don't get a token for the end tag...\n        if (this._peek.type === TokenType$1.TAG_OPEN_END_VOID) {\n            this._advance();\n            selfClosing = true;\n            var /** @type {?} */ tagDef = this.getTagDefinition(fullName);\n            if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n                this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\n            }\n        }\n        else if (this._peek.type === TokenType$1.TAG_OPEN_END) {\n            this._advance();\n            selfClosing = false;\n        }\n        var /** @type {?} */ end = this._peek.sourceSpan.start;\n        var /** @type {?} */ span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n        var /** @type {?} */ el = new Element(fullName, attrs, [], span, span, undefined);\n        this._pushElement(el);\n        if (selfClosing) {\n            this._popElement(fullName);\n            el.endSourceSpan = span;\n        }\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _TreeBuilder.prototype._pushElement = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var /** @type {?} */ parentEl = this._getParentElement();\n        if (parentEl && this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n            this._elementStack.pop();\n        }\n        var /** @type {?} */ tagDef = this.getTagDefinition(el.name);\n        var _a = this._getParentElementSkippingContainers(), parent = _a.parent, container = _a.container;\n        if (parent && tagDef.requireExtraParent(parent.name)) {\n            var /** @type {?} */ newParent = new Element(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n            this._insertBeforeContainer(parent, container, newParent);\n        }\n        this._addToParent(el);\n        this._elementStack.push(el);\n    };\n    /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeEndTag = /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    function (endTagToken) {\n        var /** @type {?} */ fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n        if (this._getParentElement()) {\n            /** @type {?} */ ((this._getParentElement())).endSourceSpan = endTagToken.sourceSpan;\n        }\n        if (this.getTagDefinition(fullName).isVoid) {\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n        }\n        else if (!this._popElement(fullName)) {\n            var /** @type {?} */ errMsg = \"Unexpected closing tag \\\"\" + fullName + \"\\\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags\";\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n        }\n    };\n    /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._popElement = /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    function (fullName) {\n        for (var /** @type {?} */ stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n            var /** @type {?} */ el = this._elementStack[stackIndex];\n            if (el.name == fullName) {\n                this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n                return true;\n            }\n            if (!this.getTagDefinition(el.name).closedByParent) {\n                return false;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeAttr = /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    function (attrName) {\n        var /** @type {?} */ fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n        var /** @type {?} */ end = attrName.sourceSpan.end;\n        var /** @type {?} */ value = '';\n        var /** @type {?} */ valueSpan = /** @type {?} */ ((undefined));\n        if (this._peek.type === TokenType$1.ATTR_VALUE) {\n            var /** @type {?} */ valueToken = this._advance();\n            value = valueToken.parts[0];\n            end = valueToken.sourceSpan.end;\n            valueSpan = valueToken.sourceSpan;\n        }\n        return new Attribute$1(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElement = /**\n     * @return {?}\n     */\n    function () {\n        return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n    };\n    /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElementSkippingContainers = /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ container = null;\n        for (var /** @type {?} */ i = this._elementStack.length - 1; i >= 0; i--) {\n            if (!isNgContainer(this._elementStack[i].name)) {\n                return { parent: this._elementStack[i], container: container };\n            }\n            container = this._elementStack[i];\n        }\n        return { parent: null, container: container };\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._addToParent = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        var /** @type {?} */ parent = this._getParentElement();\n        if (parent != null) {\n            parent.children.push(node);\n        }\n        else {\n            this._rootNodes.push(node);\n        }\n    };\n    /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._insertBeforeContainer = /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    function (parent, container, node) {\n        if (!container) {\n            this._addToParent(node);\n            this._elementStack.push(node);\n        }\n        else {\n            if (parent) {\n                // replace the container with the new node in the children\n                var /** @type {?} */ index = parent.children.indexOf(container);\n                parent.children[index] = node;\n            }\n            else {\n                this._rootNodes.push(node);\n            }\n            node.children.push(container);\n            this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n        }\n    };\n    /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getElementFullName = /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    function (prefix, localName, parentElement) {\n        if (prefix == null) {\n            prefix = /** @type {?} */ ((this.getTagDefinition(localName).implicitNamespacePrefix));\n            if (prefix == null && parentElement != null) {\n                prefix = getNsPrefix(parentElement.name);\n            }\n        }\n        return mergeNsAndName(prefix, localName);\n    };\n    return _TreeBuilder;\n}());\n/**\n * @param {?} stack\n * @param {?} element\n * @return {?}\n */\nfunction lastOnStack(stack, element) {\n    return stack.length > 0 && stack[stack.length - 1] === element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest(message) {\n    return message.id || sha1(serializeNodes(message.nodes).join('') + (\"[\" + message.meaning + \"]\"));\n}\n/**\n * @param {?} message\n * @return {?}\n */\nfunction decimalDigest(message) {\n    if (message.id) {\n        return message.id;\n    }\n    var /** @type {?} */ visitor = new _SerializerIgnoreIcuExpVisitor();\n    var /** @type {?} */ parts = message.nodes.map(function (a) { return a.visit(visitor, null); });\n    return computeMsgId(parts.join(''), message.meaning);\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * \\@internal\n */\nvar _SerializerVisitor = (function () {\n    function _SerializerVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        return \"[\" + container.children.map(function (child) { return child.visit(_this); }).join(', ') + \"]\";\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        return \"{\" + icu.expression + \", \" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        return ph.isVoid ?\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\"/>\" :\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\">\" + ph.children.map(function (child) { return child.visit(_this); }).join(', ') + \"</ph name=\\\"\" + ph.closeName + \"\\\">\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return ph.value ? \"<ph name=\\\"\" + ph.name + \"\\\">\" + ph.value + \"</ph>\" : \"<ph name=\\\"\" + ph.name + \"\\\"/>\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return \"<ph icu name=\\\"\" + ph.name + \"\\\">\" + ph.value.visit(this) + \"</ph>\";\n    };\n    return _SerializerVisitor;\n}());\nvar serializerVisitor = new _SerializerVisitor();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serializeNodes(nodes) {\n    return nodes.map(function (a) { return a.visit(serializerVisitor, null); });\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n *\n * \\@internal\n */\nvar _SerializerIgnoreIcuExpVisitor = (function (_super) {\n    __extends(_SerializerIgnoreIcuExpVisitor, _super);\n    function _SerializerIgnoreIcuExpVisitor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerIgnoreIcuExpVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // Do not take the expression into account\n        return \"{\" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    return _SerializerIgnoreIcuExpVisitor;\n}(_SerializerVisitor));\n/**\n * Compute the SHA1 of the given string\n *\n * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n * @param {?} str\n * @return {?}\n */\nfunction sha1(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var /** @type {?} */ words32 = stringToWords32(utf8, Endian.Big);\n    var /** @type {?} */ len = utf8.length * 8;\n    var /** @type {?} */ w = new Array(80);\n    var _a = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], a = _a[0], b = _a[1], c = _a[2], d = _a[3], e = _a[4];\n    words32[len >> 5] |= 0x80 << (24 - len % 32);\n    words32[((len + 64 >> 9) << 4) + 15] = len;\n    for (var /** @type {?} */ i = 0; i < words32.length; i += 16) {\n        var _b = [a, b, c, d, e], h0 = _b[0], h1 = _b[1], h2 = _b[2], h3 = _b[3], h4 = _b[4];\n        for (var /** @type {?} */ j = 0; j < 80; j++) {\n            if (j < 16) {\n                w[j] = words32[i + j];\n            }\n            else {\n                w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            }\n            var _c = fk(j, b, c, d), f = _c[0], k = _c[1];\n            var /** @type {?} */ temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n            _d = [d, c, rol32(b, 30), a, temp], e = _d[0], d = _d[1], c = _d[2], b = _d[3], a = _d[4];\n        }\n        _e = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)], a = _e[0], b = _e[1], c = _e[2], d = _e[3], e = _e[4];\n    }\n    return byteStringToHexString(words32ToByteString([a, b, c, d, e]));\n    var _d, _e;\n}\n/**\n * @param {?} index\n * @param {?} b\n * @param {?} c\n * @param {?} d\n * @return {?}\n */\nfunction fk(index, b, c, d) {\n    if (index < 20) {\n        return [(b & c) | (~b & d), 0x5a827999];\n    }\n    if (index < 40) {\n        return [b ^ c ^ d, 0x6ed9eba1];\n    }\n    if (index < 60) {\n        return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n    }\n    return [b ^ c ^ d, 0xca62c1d6];\n}\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n * @param {?} str\n * @return {?}\n */\nfunction fingerprint(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var _a = [hash32(utf8, 0), hash32(utf8, 102072)], hi = _a[0], lo = _a[1];\n    if (hi == 0 && (lo == 0 || lo == 1)) {\n        hi = hi ^ 0x130f9bef;\n        lo = lo ^ -0x6b5f56d8;\n    }\n    return [hi, lo];\n}\n/**\n * @param {?} msg\n * @param {?} meaning\n * @return {?}\n */\nfunction computeMsgId(msg, meaning) {\n    var _a = fingerprint(msg), hi = _a[0], lo = _a[1];\n    if (meaning) {\n        var _b = fingerprint(meaning), him = _b[0], lom = _b[1];\n        _c = add64(rol64([hi, lo], 1), [him, lom]), hi = _c[0], lo = _c[1];\n    }\n    return byteStringToDecString(words32ToByteString([hi & 0x7fffffff, lo]));\n    var _c;\n}\n/**\n * @param {?} str\n * @param {?} c\n * @return {?}\n */\nfunction hash32(str, c) {\n    var _a = [0x9e3779b9, 0x9e3779b9], a = _a[0], b = _a[1];\n    var /** @type {?} */ i;\n    var /** @type {?} */ len = str.length;\n    for (i = 0; i + 12 <= len; i += 12) {\n        a = add32(a, wordAt(str, i, Endian.Little));\n        b = add32(b, wordAt(str, i + 4, Endian.Little));\n        c = add32(c, wordAt(str, i + 8, Endian.Little));\n        _b = mix([a, b, c]), a = _b[0], b = _b[1], c = _b[2];\n    }\n    a = add32(a, wordAt(str, i, Endian.Little));\n    b = add32(b, wordAt(str, i + 4, Endian.Little));\n    // the first byte of c is reserved for the length\n    c = add32(c, len);\n    c = add32(c, wordAt(str, i + 8, Endian.Little) << 8);\n    return mix([a, b, c])[2];\n    var _b;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction mix(_a) {\n    var a = _a[0], b = _a[1], c = _a[2];\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 13;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 8;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 13;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 12;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 16;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 5;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 3;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 10;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 15;\n    return [a, b, c];\n}\n/** @enum {number} */\nvar Endian = {\n    Little: 0,\n    Big: 1,\n};\nEndian[Endian.Little] = \"Little\";\nEndian[Endian.Big] = \"Big\";\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32(a, b) {\n    return add32to64(a, b)[1];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32to64(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) + (b & 0xffff);\n    var /** @type {?} */ high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n    return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\n/**\n * @param {?} __0\n * @param {?} __1\n * @return {?}\n */\nfunction add64(_a, _b) {\n    var ah = _a[0], al = _a[1];\n    var bh = _b[0], bl = _b[1];\n    var _c = add32to64(al, bl), carry = _c[0], l = _c[1];\n    var /** @type {?} */ h = add32(add32(ah, bh), carry);\n    return [h, l];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction sub32(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) - (b & 0xffff);\n    var /** @type {?} */ high = (a >> 16) - (b >> 16) + (low >> 16);\n    return (high << 16) | (low & 0xffff);\n}\n/**\n * @param {?} a\n * @param {?} count\n * @return {?}\n */\nfunction rol32(a, count) {\n    return (a << count) | (a >>> (32 - count));\n}\n/**\n * @param {?} __0\n * @param {?} count\n * @return {?}\n */\nfunction rol64(_a, count) {\n    var hi = _a[0], lo = _a[1];\n    var /** @type {?} */ h = (hi << count) | (lo >>> (32 - count));\n    var /** @type {?} */ l = (lo << count) | (hi >>> (32 - count));\n    return [h, l];\n}\n/**\n * @param {?} str\n * @param {?} endian\n * @return {?}\n */\nfunction stringToWords32(str, endian) {\n    var /** @type {?} */ words32 = Array((str.length + 3) >>> 2);\n    for (var /** @type {?} */ i = 0; i < words32.length; i++) {\n        words32[i] = wordAt(str, i * 4, endian);\n    }\n    return words32;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @return {?}\n */\nfunction byteAt(str, index) {\n    return index >= str.length ? 0 : str.charCodeAt(index) & 0xff;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @param {?} endian\n * @return {?}\n */\nfunction wordAt(str, index, endian) {\n    var /** @type {?} */ word = 0;\n    if (endian === Endian.Big) {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << (24 - 8 * i);\n        }\n    }\n    else {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << 8 * i;\n        }\n    }\n    return word;\n}\n/**\n * @param {?} words32\n * @return {?}\n */\nfunction words32ToByteString(words32) {\n    return words32.reduce(function (str, word) { return str + word32ToByteString(word); }, '');\n}\n/**\n * @param {?} word\n * @return {?}\n */\nfunction word32ToByteString(word) {\n    var /** @type {?} */ str = '';\n    for (var /** @type {?} */ i = 0; i < 4; i++) {\n        str += String.fromCharCode((word >>> 8 * (3 - i)) & 0xff);\n    }\n    return str;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToHexString(str) {\n    var /** @type {?} */ hex = '';\n    for (var /** @type {?} */ i = 0; i < str.length; i++) {\n        var /** @type {?} */ b = byteAt(str, i);\n        hex += (b >>> 4).toString(16) + (b & 0x0f).toString(16);\n    }\n    return hex.toLowerCase();\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToDecString(str) {\n    var /** @type {?} */ decimal = '';\n    var /** @type {?} */ toThePower = '1';\n    for (var /** @type {?} */ i = str.length - 1; i >= 0; i--) {\n        decimal = addBigInt(decimal, numberTimesBigInt(byteAt(str, i), toThePower));\n        toThePower = numberTimesBigInt(256, toThePower);\n    }\n    return decimal.split('').reverse().join('');\n}\n/**\n * @param {?} x\n * @param {?} y\n * @return {?}\n */\nfunction addBigInt(x, y) {\n    var /** @type {?} */ sum = '';\n    var /** @type {?} */ len = Math.max(x.length, y.length);\n    for (var /** @type {?} */ i = 0, /** @type {?} */ carry = 0; i < len || carry; i++) {\n        var /** @type {?} */ tmpSum = carry + +(x[i] || 0) + +(y[i] || 0);\n        if (tmpSum >= 10) {\n            carry = 1;\n            sum += tmpSum - 10;\n        }\n        else {\n            carry = 0;\n            sum += tmpSum;\n        }\n    }\n    return sum;\n}\n/**\n * @param {?} num\n * @param {?} b\n * @return {?}\n */\nfunction numberTimesBigInt(num, b) {\n    var /** @type {?} */ product = '';\n    var /** @type {?} */ bToThePower = b;\n    for (; num !== 0; num = num >>> 1) {\n        if (num & 1)\n            product = addBigInt(product, bToThePower);\n        bToThePower = addBigInt(bToThePower, bToThePower);\n    }\n    return product;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar Message = (function () {\n    /**\n     * @param nodes message AST\n     * @param placeholders maps placeholder names to static content\n     * @param placeholderToMessage maps placeholder names to messages (used for nested ICU messages)\n     * @param meaning\n     * @param description\n     * @param id\n     */\n    function Message(nodes, placeholders, placeholderToMessage, meaning, description, id) {\n        this.nodes = nodes;\n        this.placeholders = placeholders;\n        this.placeholderToMessage = placeholderToMessage;\n        this.meaning = meaning;\n        this.description = description;\n        this.id = id;\n        if (nodes.length) {\n            this.sources = [{\n                    filePath: nodes[0].sourceSpan.start.file.url,\n                    startLine: nodes[0].sourceSpan.start.line + 1,\n                    startCol: nodes[0].sourceSpan.start.col + 1,\n                    endLine: nodes[nodes.length - 1].sourceSpan.end.line + 1,\n                    endCol: nodes[0].sourceSpan.start.col + 1\n                }];\n        }\n        else {\n            this.sources = [];\n        }\n    }\n    return Message;\n}());\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar Text$1 = (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Container = (function () {\n    function Container(children, sourceSpan) {\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Container.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitContainer(this, context); };\n    return Container;\n}());\nvar Icu = (function () {\n    function Icu(expression, type, cases, sourceSpan) {\n        this.expression = expression;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Icu.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitIcu(this, context); };\n    return Icu;\n}());\nvar TagPlaceholder = (function () {\n    function TagPlaceholder(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n        this.tag = tag;\n        this.attrs = attrs;\n        this.startName = startName;\n        this.closeName = closeName;\n        this.children = children;\n        this.isVoid = isVoid;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    TagPlaceholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitTagPlaceholder(this, context); };\n    return TagPlaceholder;\n}());\nvar Placeholder = (function () {\n    function Placeholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Placeholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitPlaceholder(this, context); };\n    return Placeholder;\n}());\nvar IcuPlaceholder = (function () {\n    function IcuPlaceholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    IcuPlaceholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitIcuPlaceholder(this, context); };\n    return IcuPlaceholder;\n}());\n/**\n * @record\n */\n\nvar CloneVisitor = (function () {\n    function CloneVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ children = container.children.map(function (n) { return n.visit(_this, context); });\n        return new Container(children, container.sourceSpan);\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = {};\n        Object.keys(icu.cases).forEach(function (key) { return cases[key] = icu.cases[key].visit(_this, context); });\n        var /** @type {?} */ msg = new Icu(icu.expression, icu.type, cases, icu.sourceSpan);\n        msg.expressionPlaceholder = icu.expressionPlaceholder;\n        return msg;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, context); });\n        return new TagPlaceholder(ph.tag, ph.attrs, ph.startName, ph.closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return new Placeholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return new IcuPlaceholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    return CloneVisitor;\n}());\nvar RecurseVisitor = (function () {\n    function RecurseVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        container.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        Object.keys(icu.cases).forEach(function (k) { icu.cases[k].visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        ph.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { };\n    return RecurseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlTagDefinition = (function () {\n    function HtmlTagDefinition(_a) {\n        var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, _c = _b.contentType, contentType = _c === void 0 ? TagContentType.PARSABLE_DATA : _c, _d = _b.closedByParent, closedByParent = _d === void 0 ? false : _d, _e = _b.isVoid, isVoid = _e === void 0 ? false : _e, _f = _b.ignoreFirstLf, ignoreFirstLf = _f === void 0 ? false : _f;\n        var _this = this;\n        this.closedByChildren = {};\n        this.closedByParent = false;\n        this.canSelfClose = false;\n        if (closedByChildren && closedByChildren.length > 0) {\n            closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\n        }\n        this.isVoid = isVoid;\n        this.closedByParent = closedByParent || isVoid;\n        if (requiredParents && requiredParents.length > 0) {\n            this.requiredParents = {};\n            // The first parent is the list is automatically when none of the listed parents are present\n            this.parentToAdd = requiredParents[0];\n            requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\n        }\n        this.implicitNamespacePrefix = implicitNamespacePrefix || null;\n        this.contentType = contentType;\n        this.ignoreFirstLf = ignoreFirstLf;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.requireExtraParent = /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    function (currentParent) {\n        if (!this.requiredParents) {\n            return false;\n        }\n        if (!currentParent) {\n            return true;\n        }\n        var /** @type {?} */ lcParent = currentParent.toLowerCase();\n        var /** @type {?} */ isParentTemplate = lcParent === 'template' || currentParent === 'ng-template';\n        return !isParentTemplate && this.requiredParents[lcParent] != true;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.isClosedByChild = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.isVoid || name.toLowerCase() in this.closedByChildren;\n    };\n    return HtmlTagDefinition;\n}());\n// see http://www.w3.org/TR/html51/syntax.html#optional-tags\n// This implementation does not fully conform to the HTML5 spec.\nvar TAG_DEFINITIONS = {\n    'base': new HtmlTagDefinition({ isVoid: true }),\n    'meta': new HtmlTagDefinition({ isVoid: true }),\n    'area': new HtmlTagDefinition({ isVoid: true }),\n    'embed': new HtmlTagDefinition({ isVoid: true }),\n    'link': new HtmlTagDefinition({ isVoid: true }),\n    'img': new HtmlTagDefinition({ isVoid: true }),\n    'input': new HtmlTagDefinition({ isVoid: true }),\n    'param': new HtmlTagDefinition({ isVoid: true }),\n    'hr': new HtmlTagDefinition({ isVoid: true }),\n    'br': new HtmlTagDefinition({ isVoid: true }),\n    'source': new HtmlTagDefinition({ isVoid: true }),\n    'track': new HtmlTagDefinition({ isVoid: true }),\n    'wbr': new HtmlTagDefinition({ isVoid: true }),\n    'p': new HtmlTagDefinition({\n        closedByChildren: [\n            'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset', 'footer', 'form',\n            'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr',\n            'main', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'\n        ],\n        closedByParent: true\n    }),\n    'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n    'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n    'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n    'tr': new HtmlTagDefinition({\n        closedByChildren: ['tr'],\n        requiredParents: ['tbody', 'tfoot', 'thead'],\n        closedByParent: true\n    }),\n    'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n    'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n    'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n    'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n    'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n    'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n    'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n    'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n    'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n    'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'style': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'script': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'title': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT }),\n    'textarea': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n};\nvar _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getHtmlTagDefinition(tagName) {\n    return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TAG_TO_PLACEHOLDER_NAMES = {\n    'A': 'LINK',\n    'B': 'BOLD_TEXT',\n    'BR': 'LINE_BREAK',\n    'EM': 'EMPHASISED_TEXT',\n    'H1': 'HEADING_LEVEL1',\n    'H2': 'HEADING_LEVEL2',\n    'H3': 'HEADING_LEVEL3',\n    'H4': 'HEADING_LEVEL4',\n    'H5': 'HEADING_LEVEL5',\n    'H6': 'HEADING_LEVEL6',\n    'HR': 'HORIZONTAL_RULE',\n    'I': 'ITALIC_TEXT',\n    'LI': 'LIST_ITEM',\n    'LINK': 'MEDIA_LINK',\n    'OL': 'ORDERED_LIST',\n    'P': 'PARAGRAPH',\n    'Q': 'QUOTATION',\n    'S': 'STRIKETHROUGH_TEXT',\n    'SMALL': 'SMALL_TEXT',\n    'SUB': 'SUBSTRIPT',\n    'SUP': 'SUPERSCRIPT',\n    'TBODY': 'TABLE_BODY',\n    'TD': 'TABLE_CELL',\n    'TFOOT': 'TABLE_FOOTER',\n    'TH': 'TABLE_HEADER_CELL',\n    'THEAD': 'TABLE_HEADER',\n    'TR': 'TABLE_ROW',\n    'TT': 'MONOSPACED_TEXT',\n    'U': 'UNDERLINED_TEXT',\n    'UL': 'UNORDERED_LIST',\n};\n/**\n * Creates unique names for placeholder with different content.\n *\n * Returns the same placeholder name when the content is identical.\n *\n * \\@internal\n */\nvar PlaceholderRegistry = (function () {\n    function PlaceholderRegistry() {\n        this._placeHolderNameCounts = {};\n        this._signatureToName = {};\n    }\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getStartTagPlaceholderName = /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    function (tag, attrs, isVoid) {\n        var /** @type {?} */ signature = this._hashTag(tag, attrs, isVoid);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(isVoid ? baseName : \"START_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getCloseTagPlaceholderName = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var /** @type {?} */ signature = this._hashClosingTag(tag);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(\"CLOSE_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getPlaceholderName = /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    function (name, content) {\n        var /** @type {?} */ upperName = name.toUpperCase();\n        var /** @type {?} */ signature = \"PH: \" + upperName + \"=\" + content;\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ uniqueName = this._generateUniqueName(upperName);\n        this._signatureToName[signature] = uniqueName;\n        return uniqueName;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getUniquePlaceholder = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this._generateUniqueName(name.toUpperCase());\n    };\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashTag = /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    function (tag, attrs, isVoid) {\n        var /** @type {?} */ start = \"<\" + tag;\n        var /** @type {?} */ strAttrs = Object.keys(attrs).sort().map(function (name) { return \" \" + name + \"=\" + attrs[name]; }).join('');\n        var /** @type {?} */ end = isVoid ? '/>' : \"></\" + tag + \">\";\n        return start + strAttrs + end;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashClosingTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) { return this._hashTag(\"/\" + tag, {}, false); };\n    /**\n     * @param {?} base\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._generateUniqueName = /**\n     * @param {?} base\n     * @return {?}\n     */\n    function (base) {\n        var /** @type {?} */ seen = this._placeHolderNameCounts.hasOwnProperty(base);\n        if (!seen) {\n            this._placeHolderNameCounts[base] = 1;\n            return base;\n        }\n        var /** @type {?} */ id = this._placeHolderNameCounts[base];\n        this._placeHolderNameCounts[base] = id + 1;\n        return base + \"_\" + id;\n    };\n    return PlaceholderRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _expParser = new Parser(new Lexer());\n/**\n * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction createI18nMessageFactory(interpolationConfig) {\n    var /** @type {?} */ visitor = new _I18nVisitor(_expParser, interpolationConfig);\n    return function (nodes, meaning, description, id) {\n        return visitor.toI18nMessage(nodes, meaning, description, id);\n    };\n}\nvar _I18nVisitor = (function () {\n    function _I18nVisitor(_expressionParser, _interpolationConfig) {\n        this._expressionParser = _expressionParser;\n        this._interpolationConfig = _interpolationConfig;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    _I18nVisitor.prototype.toI18nMessage = /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    function (nodes, meaning, description, id) {\n        this._isIcu = nodes.length == 1 && nodes[0] instanceof Expansion;\n        this._icuDepth = 0;\n        this._placeholderRegistry = new PlaceholderRegistry();\n        this._placeholderToContent = {};\n        this._placeholderToMessage = {};\n        var /** @type {?} */ i18nodes = visitAll(this, nodes, {});\n        return new Message(i18nodes, this._placeholderToContent, this._placeholderToMessage, meaning, description, id);\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var /** @type {?} */ children = visitAll(this, el.children);\n        var /** @type {?} */ attrs = {};\n        el.attrs.forEach(function (attr) {\n            // Do not visit the attributes, translatable ones are top-level ASTs\n            attrs[attr.name] = attr.value;\n        });\n        var /** @type {?} */ isVoid = getHtmlTagDefinition(el.name).isVoid;\n        var /** @type {?} */ startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n        this._placeholderToContent[startPhName] = /** @type {?} */ ((el.sourceSpan)).toString();\n        var /** @type {?} */ closePhName = '';\n        if (!isVoid) {\n            closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n            this._placeholderToContent[closePhName] = \"</\" + el.name + \">\";\n        }\n        return new TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, /** @type {?} */ ((el.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        return this._visitTextWithInterpolation(text.value, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        this._icuDepth++;\n        var /** @type {?} */ i18nIcuCases = {};\n        var /** @type {?} */ i18nIcu = new Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n        icu.cases.forEach(function (caze) {\n            i18nIcuCases[caze.value] = new Container(caze.expression.map(function (node) { return node.visit(_this, {}); }), caze.expSourceSpan);\n        });\n        this._icuDepth--;\n        if (this._isIcu || this._icuDepth > 0) {\n            // Returns an ICU node when:\n            // - the message (vs a part of the message) is an ICU message, or\n            // - the ICU message is nested.\n            var /** @type {?} */ expPh = this._placeholderRegistry.getUniquePlaceholder(\"VAR_\" + icu.type);\n            i18nIcu.expressionPlaceholder = expPh;\n            this._placeholderToContent[expPh] = icu.switchValue;\n            return i18nIcu;\n        }\n        // Else returns a placeholder\n        // ICU placeholders should not be replaced with their original content but with the their\n        // translations. We need to create a new visitor (they are not re-entrant) to compute the\n        // message id.\n        // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n        var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n        var /** @type {?} */ visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n        this._placeholderToMessage[phName] = visitor.toI18nMessage([icu], '', '', '');\n        return new IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        throw new Error('Unreachable code');\n    };\n    /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _I18nVisitor.prototype._visitTextWithInterpolation = /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (text, sourceSpan) {\n        var /** @type {?} */ splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n        if (!splitInterpolation) {\n            // No expression, return a single text\n            return new Text$1(text, sourceSpan);\n        }\n        // Return a group of text + expressions\n        var /** @type {?} */ nodes = [];\n        var /** @type {?} */ container = new Container(nodes, sourceSpan);\n        var _a = this._interpolationConfig, sDelimiter = _a.start, eDelimiter = _a.end;\n        for (var /** @type {?} */ i = 0; i < splitInterpolation.strings.length - 1; i++) {\n            var /** @type {?} */ expression = splitInterpolation.expressions[i];\n            var /** @type {?} */ baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n            var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n            if (splitInterpolation.strings[i].length) {\n                // No need to add empty strings\n                nodes.push(new Text$1(splitInterpolation.strings[i], sourceSpan));\n            }\n            nodes.push(new Placeholder(expression, phName, sourceSpan));\n            this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n        }\n        // The last index contains no expression\n        var /** @type {?} */ lastStringIdx = splitInterpolation.strings.length - 1;\n        if (splitInterpolation.strings[lastStringIdx].length) {\n            nodes.push(new Text$1(splitInterpolation.strings[lastStringIdx], sourceSpan));\n        }\n        return container;\n    };\n    return _I18nVisitor;\n}());\nvar _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*(\"|')([\\s\\S]*?)\\1[\\s\\S]*\\)/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction _extractPlaceholderName(input) {\n    return input.split(_CUSTOM_PH_EXP)[2];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An i18n error.\n */\nvar I18nError = (function (_super) {\n    __extends(I18nError, _super);\n    function I18nError(span, msg) {\n        return _super.call(this, span, msg) || this;\n    }\n    return I18nError;\n}(ParseError));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _I18N_ATTR = 'i18n';\nvar _I18N_ATTR_PREFIX = 'i18n-';\nvar _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\nvar MEANING_SEPARATOR = '|';\nvar ID_SEPARATOR = '@@';\nvar i18nCommentsWarned = false;\n/**\n * Extract translatable messages from an html AST\n * @param {?} nodes\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.extract(nodes, interpolationConfig);\n}\n/**\n * @param {?} nodes\n * @param {?} translations\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.merge(nodes, translations, interpolationConfig);\n}\nvar ExtractionResult = (function () {\n    function ExtractionResult(messages, errors) {\n        this.messages = messages;\n        this.errors = errors;\n    }\n    return ExtractionResult;\n}());\n/** @enum {number} */\nvar _VisitorMode = {\n    Extract: 0,\n    Merge: 1,\n};\n_VisitorMode[_VisitorMode.Extract] = \"Extract\";\n_VisitorMode[_VisitorMode.Merge] = \"Merge\";\n/**\n * This Visitor is used:\n * 1. to extract all the translatable strings from an html AST (see `extract()`),\n * 2. to replace the translatable strings with the actual translations (see `merge()`)\n *\n * \\@internal\n */\nvar _Visitor = (function () {\n    function _Visitor(_implicitTags, _implicitAttrs) {\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n    }\n    /**\n     * Extracts the messages from the tree\n     */\n    /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.extract = /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (nodes, interpolationConfig) {\n        var _this = this;\n        this._init(_VisitorMode.Extract, interpolationConfig);\n        nodes.forEach(function (node) { return node.visit(_this, null); });\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ExtractionResult(this._messages, this._errors);\n    };\n    /**\n     * Returns a tree where all translatable nodes are translated\n     */\n    /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.merge = /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (nodes, translations, interpolationConfig) {\n        this._init(_VisitorMode.Merge, interpolationConfig);\n        this._translations = translations;\n        // Construct a single fake root element\n        var /** @type {?} */ wrapper = new Element('wrapper', [], nodes, /** @type {?} */ ((undefined)), undefined, undefined);\n        var /** @type {?} */ translatedNode = wrapper.visit(this, null);\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ParseTreeResult(translatedNode.children, this._errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        // Parse cases for translatable html attributes\n        var /** @type {?} */ expression = visitAll(this, icuCase.expression, context);\n        if (this._mode === _VisitorMode.Merge) {\n            return new ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n        }\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        this._mayBeAddBlockChildren(icu);\n        var /** @type {?} */ wasInIcu = this._inIcu;\n        if (!this._inIcu) {\n            // nested ICU messages should not be extracted but top-level translated as a whole\n            if (this._isInTranslatableSection) {\n                this._addMessage([icu]);\n            }\n            this._inIcu = true;\n        }\n        var /** @type {?} */ cases = visitAll(this, icu.cases, context);\n        if (this._mode === _VisitorMode.Merge) {\n            icu = new Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n        }\n        this._inIcu = wasInIcu;\n        return icu;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) {\n        var /** @type {?} */ isOpening = _isOpeningComment(comment);\n        if (isOpening && this._isInTranslatableSection) {\n            this._reportError(comment, 'Could not start a block inside a translatable section');\n            return;\n        }\n        var /** @type {?} */ isClosing = _isClosingComment(comment);\n        if (isClosing && !this._inI18nBlock) {\n            this._reportError(comment, 'Trying to close an unopened block');\n            return;\n        }\n        if (!this._inI18nNode && !this._inIcu) {\n            if (!this._inI18nBlock) {\n                if (isOpening) {\n                    // deprecated from v5 you should use <ng-container i18n> instead of i18n comments\n                    if (!i18nCommentsWarned && /** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n                        i18nCommentsWarned = true;\n                        var /** @type {?} */ details = comment.sourceSpan.details ? \", \" + comment.sourceSpan.details : '';\n                        // TODO(ocombe): use a log service once there is a public one available\n                        console.warn(\"I18n comments are deprecated, use an <ng-container> element instead (\" + comment.sourceSpan.start + details + \")\");\n                    }\n                    this._inI18nBlock = true;\n                    this._blockStartDepth = this._depth;\n                    this._blockChildren = [];\n                    this._blockMeaningAndDesc = /** @type {?} */ ((comment.value)).replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n                    this._openTranslatableSection(comment);\n                }\n            }\n            else {\n                if (isClosing) {\n                    if (this._depth == this._blockStartDepth) {\n                        this._closeTranslatableSection(comment, this._blockChildren);\n                        this._inI18nBlock = false;\n                        var /** @type {?} */ message = /** @type {?} */ ((this._addMessage(this._blockChildren, this._blockMeaningAndDesc)));\n                        // merge attributes in sections\n                        var /** @type {?} */ nodes = this._translateMessage(comment, message);\n                        return visitAll(this, nodes);\n                    }\n                    else {\n                        this._reportError(comment, 'I18N blocks should not cross element boundaries');\n                        return;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        if (this._isInTranslatableSection) {\n            this._mayBeAddBlockChildren(text);\n        }\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var _this = this;\n        this._mayBeAddBlockChildren(el);\n        this._depth++;\n        var /** @type {?} */ wasInI18nNode = this._inI18nNode;\n        var /** @type {?} */ wasInImplicitNode = this._inImplicitNode;\n        var /** @type {?} */ childNodes = [];\n        var /** @type {?} */ translatedChildNodes = /** @type {?} */ ((undefined));\n        // Extract:\n        // - top level nodes with the (implicit) \"i18n\" attribute if not already in a section\n        // - ICU messages\n        var /** @type {?} */ i18nAttr = _getI18nAttr(el);\n        var /** @type {?} */ i18nMeta = i18nAttr ? i18nAttr.value : '';\n        var /** @type {?} */ isImplicit = this._implicitTags.some(function (tag) { return el.name === tag; }) && !this._inIcu &&\n            !this._isInTranslatableSection;\n        var /** @type {?} */ isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n        this._inImplicitNode = wasInImplicitNode || isImplicit;\n        if (!this._isInTranslatableSection && !this._inIcu) {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._inI18nNode = true;\n                var /** @type {?} */ message = /** @type {?} */ ((this._addMessage(el.children, i18nMeta)));\n                translatedChildNodes = this._translateMessage(el, message);\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                var /** @type {?} */ isTranslatable = i18nAttr || isTopLevelImplicit;\n                if (isTranslatable)\n                    this._openTranslatableSection(el);\n                visitAll(this, el.children);\n                if (isTranslatable)\n                    this._closeTranslatableSection(el, el.children);\n            }\n        }\n        else {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                // Descend into child nodes for extraction\n                visitAll(this, el.children);\n            }\n        }\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ visitNodes = translatedChildNodes || el.children;\n            visitNodes.forEach(function (child) {\n                var /** @type {?} */ visited = child.visit(_this, context);\n                if (visited && !_this._isInTranslatableSection) {\n                    // Do not add the children from translatable sections (= i18n blocks here)\n                    // They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)\n                    childNodes = childNodes.concat(visited);\n                }\n            });\n        }\n        this._visitAttributesOf(el);\n        this._depth--;\n        this._inI18nNode = wasInI18nNode;\n        this._inImplicitNode = wasInImplicitNode;\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ translatedAttrs = this._translateAttributes(el);\n            return new Element(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        throw new Error('unreachable code');\n    };\n    /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype._init = /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (mode, interpolationConfig) {\n        this._mode = mode;\n        this._inI18nBlock = false;\n        this._inI18nNode = false;\n        this._depth = 0;\n        this._inIcu = false;\n        this._msgCountAtSectionStart = undefined;\n        this._errors = [];\n        this._messages = [];\n        this._inImplicitNode = false;\n        this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._visitAttributesOf = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var _this = this;\n        var /** @type {?} */ explicitAttrNameToValue = {};\n        var /** @type {?} */ implicitAttrNames = this._implicitAttrs[el.name] || [];\n        el.attrs.filter(function (attr) { return attr.name.startsWith(_I18N_ATTR_PREFIX); })\n            .forEach(function (attr) {\n            return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                attr.value;\n        });\n        el.attrs.forEach(function (attr) {\n            if (attr.name in explicitAttrNameToValue) {\n                _this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n            }\n            else if (implicitAttrNames.some(function (name) { return attr.name === name; })) {\n                _this._addMessage([attr]);\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    _Visitor.prototype._addMessage = /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    function (ast, msgMeta) {\n        if (ast.length == 0 ||\n            ast.length == 1 && ast[0] instanceof Attribute$1 && !(/** @type {?} */ (ast[0])).value) {\n            // Do not create empty messages\n            return null;\n        }\n        var _a = _parseMessageMeta(msgMeta), meaning = _a.meaning, description = _a.description, id = _a.id;\n        var /** @type {?} */ message = this._createI18nMessage(ast, meaning, description, id);\n        this._messages.push(message);\n        return message;\n    };\n    /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    _Visitor.prototype._translateMessage = /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    function (el, message) {\n        if (message && this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ nodes = this._translations.get(message);\n            if (nodes) {\n                return nodes;\n            }\n            this._reportError(el, \"Translation unavailable for message id=\\\"\" + this._translations.digest(message) + \"\\\"\");\n        }\n        return [];\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._translateAttributes = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var _this = this;\n        var /** @type {?} */ attributes = el.attrs;\n        var /** @type {?} */ i18nParsedMessageMeta = {};\n        attributes.forEach(function (attr) {\n            if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                    _parseMessageMeta(attr.value);\n            }\n        });\n        var /** @type {?} */ translatedAttributes = [];\n        attributes.forEach(function (attr) {\n            if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                // strip i18n specific attributes\n                return;\n            }\n            if (attr.value && attr.value != '' && i18nParsedMessageMeta.hasOwnProperty(attr.name)) {\n                var _a = i18nParsedMessageMeta[attr.name], meaning = _a.meaning, description = _a.description, id = _a.id;\n                var /** @type {?} */ message = _this._createI18nMessage([attr], meaning, description, id);\n                var /** @type {?} */ nodes = _this._translations.get(message);\n                if (nodes) {\n                    if (nodes.length == 0) {\n                        translatedAttributes.push(new Attribute$1(attr.name, '', attr.sourceSpan));\n                    }\n                    else if (nodes[0] instanceof Text) {\n                        var /** @type {?} */ value = (/** @type {?} */ (nodes[0])).value;\n                        translatedAttributes.push(new Attribute$1(attr.name, value, attr.sourceSpan));\n                    }\n                    else {\n                        _this._reportError(el, \"Unexpected translation for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                    }\n                }\n                else {\n                    _this._reportError(el, \"Translation unavailable for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                }\n            }\n            else {\n                translatedAttributes.push(attr);\n            }\n        });\n        return translatedAttributes;\n    };\n    /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._mayBeAddBlockChildren = /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n            this._blockChildren.push(node);\n        }\n    };\n    /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._openTranslatableSection = /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section start');\n        }\n        else {\n            this._msgCountAtSectionStart = this._messages.length;\n        }\n    };\n    Object.defineProperty(_Visitor.prototype, \"_isInTranslatableSection\", {\n        get: /**\n         * A translatable section could be:\n         * - the content of translatable element,\n         * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n         * @return {?}\n         */\n        function () {\n            return this._msgCountAtSectionStart !== void 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    _Visitor.prototype._closeTranslatableSection = /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    function (node, directChildren) {\n        if (!this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section end');\n            return;\n        }\n        var /** @type {?} */ startIndex = this._msgCountAtSectionStart;\n        var /** @type {?} */ significantChildren = directChildren.reduce(function (count, node) { return count + (node instanceof Comment ? 0 : 1); }, 0);\n        if (significantChildren == 1) {\n            for (var /** @type {?} */ i = this._messages.length - 1; i >= /** @type {?} */ ((startIndex)); i--) {\n                var /** @type {?} */ ast = this._messages[i].nodes;\n                if (!(ast.length == 1 && ast[0] instanceof Text$1)) {\n                    this._messages.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this._msgCountAtSectionStart = undefined;\n    };\n    /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    _Visitor.prototype._reportError = /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    function (node, msg) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), msg));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isOpeningComment(n) {\n    return !!(n instanceof Comment && n.value && n.value.startsWith('i18n'));\n}\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isClosingComment(n) {\n    return !!(n instanceof Comment && n.value && n.value === '/i18n');\n}\n/**\n * @param {?} p\n * @return {?}\n */\nfunction _getI18nAttr(p) {\n    return p.attrs.find(function (attr) { return attr.name === _I18N_ATTR; }) || null;\n}\n/**\n * @param {?=} i18n\n * @return {?}\n */\nfunction _parseMessageMeta(i18n) {\n    if (!i18n)\n        return { meaning: '', description: '', id: '' };\n    var /** @type {?} */ idIndex = i18n.indexOf(ID_SEPARATOR);\n    var /** @type {?} */ descIndex = i18n.indexOf(MEANING_SEPARATOR);\n    var _a = (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''], meaningAndDesc = _a[0], id = _a[1];\n    var _b = (descIndex > -1) ?\n        [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n        ['', meaningAndDesc], meaning = _b[0], description = _b[1];\n    return { meaning: meaning, description: description, id: id };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlTagDefinition = (function () {\n    function XmlTagDefinition() {\n        this.closedByParent = false;\n        this.contentType = TagContentType.PARSABLE_DATA;\n        this.isVoid = false;\n        this.ignoreFirstLf = false;\n        this.canSelfClose = true;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.requireExtraParent = /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    function (currentParent) { return false; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.isClosedByChild = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return false; };\n    return XmlTagDefinition;\n}());\nvar _TAG_DEFINITION = new XmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getXmlTagDefinition(tagName) {\n    return _TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlParser = (function (_super) {\n    __extends(XmlParser, _super);\n    function XmlParser() {\n        return _super.call(this, getXmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    XmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms);\n    };\n    return XmlParser;\n}(Parser$1));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar Serializer = (function () {\n    function Serializer() {\n    }\n    // Creates a name mapper, see `PlaceholderMapper`\n    // Returning `null` means that no name mapping is used.\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Serializer.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return null; };\n    return Serializer;\n}());\n/**\n * A `PlaceholderMapper` converts placeholder names from internal to serialized representation and\n * back.\n *\n * It should be used for serialization format that put constraints on the placeholder names.\n * @record\n */\n\n/**\n * A simple mapper that take a function to transform an internal name to a public name\n */\nvar SimplePlaceholderMapper = (function (_super) {\n    __extends(SimplePlaceholderMapper, _super);\n    // create a mapping from the message\n    function SimplePlaceholderMapper(message, mapName) {\n        var _this = _super.call(this) || this;\n        _this.mapName = mapName;\n        _this.internalToPublic = {};\n        _this.publicToNextId = {};\n        _this.publicToInternal = {};\n        message.nodes.forEach(function (node) { return node.visit(_this); });\n        return _this;\n    }\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toPublicName = /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    function (internalName) {\n        return this.internalToPublic.hasOwnProperty(internalName) ?\n            this.internalToPublic[internalName] :\n            null;\n    };\n    /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toInternalName = /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    function (publicName) {\n        return this.publicToInternal.hasOwnProperty(publicName) ? this.publicToInternal[publicName] :\n            null;\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return null; };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        this.visitPlaceholderName(ph.startName);\n        _super.prototype.visitTagPlaceholder.call(this, ph, context);\n        this.visitPlaceholderName(ph.closeName);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { this.visitPlaceholderName(ph.name); };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        this.visitPlaceholderName(ph.name);\n    };\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholderName = /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    function (internalName) {\n        if (!internalName || this.internalToPublic.hasOwnProperty(internalName)) {\n            return;\n        }\n        var /** @type {?} */ publicName = this.mapName(internalName);\n        if (this.publicToInternal.hasOwnProperty(publicName)) {\n            // Create a new XMB when it has already been used\n            var /** @type {?} */ nextId = this.publicToNextId[publicName];\n            this.publicToNextId[publicName] = nextId + 1;\n            publicName = publicName + \"_\" + nextId;\n        }\n        else {\n            this.publicToNextId[publicName] = 1;\n        }\n        this.internalToPublic[internalName] = publicName;\n        this.publicToInternal[publicName] = internalName;\n    };\n    return SimplePlaceholderMapper;\n}(RecurseVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\nvar _Visitor$1 = (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    _Visitor.prototype.visitTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var _this = this;\n        var /** @type {?} */ strAttrs = this._serializeAttributes(tag.attrs);\n        if (tag.children.length == 0) {\n            return \"<\" + tag.name + strAttrs + \"/>\";\n        }\n        var /** @type {?} */ strChildren = tag.children.map(function (node) { return node.visit(_this); });\n        return \"<\" + tag.name + strAttrs + \">\" + strChildren.join('') + \"</\" + tag.name + \">\";\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) { return text.value; };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    _Visitor.prototype.visitDeclaration = /**\n     * @param {?} decl\n     * @return {?}\n     */\n    function (decl) {\n        return \"<?xml\" + this._serializeAttributes(decl.attrs) + \" ?>\";\n    };\n    /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    _Visitor.prototype._serializeAttributes = /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    function (attrs) {\n        var /** @type {?} */ strAttrs = Object.keys(attrs).map(function (name) { return name + \"=\\\"\" + attrs[name] + \"\\\"\"; }).join(' ');\n        return strAttrs.length > 0 ? ' ' + strAttrs : '';\n    };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    _Visitor.prototype.visitDoctype = /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    function (doctype) {\n        return \"<!DOCTYPE \" + doctype.rootTag + \" [\\n\" + doctype.dtd + \"\\n]>\";\n    };\n    return _Visitor;\n}());\nvar _visitor = new _Visitor$1();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serialize(nodes) {\n    return nodes.map(function (node) { return node.visit(_visitor); }).join('');\n}\n/**\n * @record\n */\n\nvar Declaration = (function () {\n    function Declaration(unescapedAttrs) {\n        var _this = this;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Declaration.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitDeclaration(this); };\n    return Declaration;\n}());\nvar Doctype = (function () {\n    function Doctype(rootTag, dtd) {\n        this.rootTag = rootTag;\n        this.dtd = dtd;\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Doctype.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitDoctype(this); };\n    return Doctype;\n}());\nvar Tag = (function () {\n    function Tag(name, unescapedAttrs, children) {\n        if (unescapedAttrs === void 0) { unescapedAttrs = {}; }\n        if (children === void 0) { children = []; }\n        var _this = this;\n        this.name = name;\n        this.children = children;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Tag.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitTag(this); };\n    return Tag;\n}());\nvar Text$2 = (function () {\n    function Text(unescapedValue) {\n        this.value = _escapeXml(unescapedValue);\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitText(this); };\n    return Text;\n}());\nvar CR = (function (_super) {\n    __extends(CR, _super);\n    function CR(ws) {\n        if (ws === void 0) { ws = 0; }\n        return _super.call(this, \"\\n\" + new Array(ws + 1).join(' ')) || this;\n    }\n    return CR;\n}(Text$2));\nvar _ESCAPED_CHARS = [\n    [/&/g, '&amp;'],\n    [/\"/g, '&quot;'],\n    [/'/g, '&apos;'],\n    [/</g, '&lt;'],\n    [/>/g, '&gt;'],\n];\n/**\n * @param {?} text\n * @return {?}\n */\nfunction _escapeXml(text) {\n    return _ESCAPED_CHARS.reduce(function (text, entry) { return text.replace(entry[0], entry[1]); }, text);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION = '1.2';\nvar _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG = 'en';\nvar _PLACEHOLDER_TAG = 'x';\nvar _FILE_TAG = 'file';\nvar _SOURCE_TAG = 'source';\nvar _TARGET_TAG = 'target';\nvar _UNIT_TAG = 'trans-unit';\nvar _CONTEXT_GROUP_TAG = 'context-group';\nvar _CONTEXT_TAG = 'context';\nvar Xliff = (function (_super) {\n    __extends(Xliff, _super);\n    function Xliff() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor();\n        var /** @type {?} */ transUnits = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ contextTags = [];\n            message.sources.forEach(function (source) {\n                var /** @type {?} */ contextGroupTag = new Tag(_CONTEXT_GROUP_TAG, { purpose: 'location' });\n                contextGroupTag.children.push(new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'sourcefile' }, [new Text$2(source.filePath)]), new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'linenumber' }, [new Text$2(\"\" + source.startLine)]), new CR(8));\n                contextTags.push(new CR(8), contextGroupTag);\n            });\n            var /** @type {?} */ transUnit = new Tag(_UNIT_TAG, { id: message.id, datatype: 'html' });\n            (_a = transUnit.children).push.apply(_a, [new CR(8), new Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes))].concat(contextTags));\n            if (message.description) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'description' }, [new Text$2(message.description)]));\n            }\n            if (message.meaning) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'meaning' }, [new Text$2(message.meaning)]));\n            }\n            transUnit.children.push(new CR(6));\n            transUnits.push(new CR(6), transUnit);\n            var _a;\n        });\n        var /** @type {?} */ body = new Tag('body', {}, transUnits.concat([new CR(4)]));\n        var /** @type {?} */ file = new Tag('file', {\n            'source-language': locale || _DEFAULT_SOURCE_LANG,\n            datatype: 'plaintext',\n            original: 'ng2.template',\n        }, [new CR(4), body, new CR(2)]);\n        var /** @type {?} */ xliff = new Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliffParser = new XliffParser();\n        var _a = xliffParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest(message); };\n    return Xliff;\n}(Serializer));\nvar _WriteVisitor = (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ ctype = getCtypeForTag(ph.tag);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \"/>\" })];\n        }\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \">\" });\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.closeName, ctype: ctype, 'equiv-text': \"</\" + ph.tag + \">\" });\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': \"{{\" + ph.value + \"}}\" })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ equivText = \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\";\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': equivText })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar XliffParser = (function () {\n    function XliffParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    XliffParser.prototype.parse = /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG:\n                this._unitMlString = /** @type {?} */ ((null));\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG:\n                // ignore source message\n                break;\n            case _TARGET_TAG:\n                var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _FILE_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'target-language'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                visitAll(this, element.children, null);\n                break;\n            default:\n                // TODO(vicb): assert file structure, xliff version\n                // For now only recurse on unhandled nodes\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XliffParser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XliffParser;\n}());\nvar XmlToI18n = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'id'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"id\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getCtypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n            return 'lb';\n        case 'img':\n            return 'image';\n        default:\n            return \"x-\" + tag;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION$1 = '2.0';\nvar _XMLNS$1 = 'urn:oasis:names:tc:xliff:document:2.0';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG$1 = 'en';\nvar _PLACEHOLDER_TAG$1 = 'ph';\nvar _PLACEHOLDER_SPANNING_TAG = 'pc';\nvar _XLIFF_TAG = 'xliff';\nvar _SOURCE_TAG$1 = 'source';\nvar _TARGET_TAG$1 = 'target';\nvar _UNIT_TAG$1 = 'unit';\nvar Xliff2 = (function (_super) {\n    __extends(Xliff2, _super);\n    function Xliff2() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff2.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor$1();\n        var /** @type {?} */ units = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ unit = new Tag(_UNIT_TAG$1, { id: message.id });\n            var /** @type {?} */ notes = new Tag('notes');\n            if (message.description || message.meaning) {\n                if (message.description) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'description' }, [new Text$2(message.description)]));\n                }\n                if (message.meaning) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'meaning' }, [new Text$2(message.meaning)]));\n                }\n            }\n            message.sources.forEach(function (source) {\n                notes.children.push(new CR(8), new Tag('note', { category: 'location' }, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            notes.children.push(new CR(6));\n            unit.children.push(new CR(6), notes);\n            var /** @type {?} */ segment = new Tag('segment');\n            segment.children.push(new CR(8), new Tag(_SOURCE_TAG$1, {}, visitor.serialize(message.nodes)), new CR(6));\n            unit.children.push(new CR(6), segment, new CR(4));\n            units.push(new CR(4), unit);\n        });\n        var /** @type {?} */ file = new Tag('file', { 'original': 'ng.template', id: 'ngi18n' }, units.concat([new CR(2)]));\n        var /** @type {?} */ xliff = new Tag(_XLIFF_TAG, { version: _VERSION$1, xmlns: _XMLNS$1, srcLang: locale || _DEFAULT_SOURCE_LANG$1 }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliff2Parser = new Xliff2Parser();\n        var _a = xliff2Parser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$1();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff2 parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return decimalDigest(message); };\n    return Xliff2;\n}(Serializer));\nvar _WriteVisitor$1 = (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ type = getTypeForTag(ph.tag);\n        if (ph.isVoid) {\n            var /** @type {?} */ tagPh = new Tag(_PLACEHOLDER_TAG$1, {\n                id: (this._nextPlaceholderId++).toString(),\n                equiv: ph.startName,\n                type: type,\n                disp: \"<\" + ph.tag + \"/>\",\n            });\n            return [tagPh];\n        }\n        var /** @type {?} */ tagPc = new Tag(_PLACEHOLDER_SPANNING_TAG, {\n            id: (this._nextPlaceholderId++).toString(),\n            equivStart: ph.startName,\n            equivEnd: ph.closeName,\n            type: type,\n            dispStart: \"<\" + ph.tag + \">\",\n            dispEnd: \"</\" + ph.tag + \">\",\n        });\n        var /** @type {?} */ nodes = [].concat.apply([], ph.children.map(function (node) { return node.visit(_this); }));\n        if (nodes.length) {\n            nodes.forEach(function (node) { return tagPc.children.push(node); });\n        }\n        else {\n            tagPc.children.push(new Text$2(''));\n        }\n        return [tagPc];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, {\n                id: idStr,\n                equiv: ph.name,\n                disp: \"{{\" + ph.value + \"}}\",\n            })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ cases = Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ');\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, { id: idStr, equiv: ph.name, disp: \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + cases + \"}\" })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        this._nextPlaceholderId = 0;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar Xliff2Parser = (function () {\n    function Xliff2Parser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2Parser.prototype.parse = /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG$1:\n                this._unitMlString = null;\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG$1 + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG$1:\n                // ignore source message\n                break;\n            case _TARGET_TAG$1:\n                var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _XLIFF_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'trgLang'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                var /** @type {?} */ versionAttr = element.attrs.find(function (attr) { return attr.name === 'version'; });\n                if (versionAttr) {\n                    var /** @type {?} */ version = versionAttr.value;\n                    if (version !== '2.0') {\n                        this._addError(element, \"The XLIFF file version \" + version + \" is not compatible with XLIFF 2.0 serializer\");\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                    }\n                }\n                break;\n            default:\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2Parser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return Xliff2Parser;\n}());\nvar XmlToI18n$1 = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] : [].concat.apply([], visitAll(this, xmlIcu.rootNodes));\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var _this = this;\n        switch (el.name) {\n            case _PLACEHOLDER_TAG$1:\n                var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'equiv'; });\n                if (nameAttr) {\n                    return [new Placeholder('', nameAttr.value, el.sourceSpan)];\n                }\n                this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equiv\\\" attribute\");\n                break;\n            case _PLACEHOLDER_SPANNING_TAG:\n                var /** @type {?} */ startAttr = el.attrs.find(function (attr) { return attr.name === 'equivStart'; });\n                var /** @type {?} */ endAttr = el.attrs.find(function (attr) { return attr.name === 'equivEnd'; });\n                if (!startAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivStart\\\" attribute\");\n                }\n                else if (!endAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivEnd\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ startId = startAttr.value;\n                    var /** @type {?} */ endId = endAttr.value;\n                    var /** @type {?} */ nodes = [];\n                    return nodes.concat.apply(nodes, [new Placeholder('', startId, el.sourceSpan)].concat(el.children.map(function (node) { return node.visit(_this, null); }), [new Placeholder('', endId, el.sourceSpan)]));\n                }\n                break;\n            default:\n                this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: [].concat.apply([], visitAll(this, icuCase.expression)),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getTypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n        case 'b':\n        case 'i':\n        case 'u':\n            return 'fmt';\n        case 'img':\n            return 'image';\n        case 'a':\n            return 'link';\n        default:\n            return 'other';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _MESSAGES_TAG = 'messagebundle';\nvar _MESSAGE_TAG = 'msg';\nvar _PLACEHOLDER_TAG$2 = 'ph';\nvar _EXEMPLE_TAG = 'ex';\nvar _SOURCE_TAG$2 = 'source';\nvar _DOCTYPE = \"<!ELEMENT messagebundle (msg)*>\\n<!ATTLIST messagebundle class CDATA #IMPLIED>\\n\\n<!ELEMENT msg (#PCDATA|ph|source)*>\\n<!ATTLIST msg id CDATA #IMPLIED>\\n<!ATTLIST msg seq CDATA #IMPLIED>\\n<!ATTLIST msg name CDATA #IMPLIED>\\n<!ATTLIST msg desc CDATA #IMPLIED>\\n<!ATTLIST msg meaning CDATA #IMPLIED>\\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\\n<!ATTLIST msg xml:space (default|preserve) \\\"default\\\">\\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\\n\\n<!ELEMENT source (#PCDATA)>\\n\\n<!ELEMENT ph (#PCDATA|ex)*>\\n<!ATTLIST ph name CDATA #REQUIRED>\\n\\n<!ELEMENT ex (#PCDATA)>\";\nvar Xmb = (function (_super) {\n    __extends(Xmb, _super);\n    function Xmb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xmb.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ exampleVisitor = new ExampleVisitor();\n        var /** @type {?} */ visitor = new _Visitor$2();\n        var /** @type {?} */ rootNode = new Tag(_MESSAGES_TAG);\n        messages.forEach(function (message) {\n            var /** @type {?} */ attrs = { id: message.id };\n            if (message.description) {\n                attrs['desc'] = message.description;\n            }\n            if (message.meaning) {\n                attrs['meaning'] = message.meaning;\n            }\n            var /** @type {?} */ sourceTags = [];\n            message.sources.forEach(function (source) {\n                sourceTags.push(new Tag(_SOURCE_TAG$2, {}, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            rootNode.children.push(new CR(2), new Tag(_MESSAGE_TAG, attrs, sourceTags.concat(visitor.serialize(message.nodes))));\n        });\n        rootNode.children.push(new CR());\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }),\n            new CR(),\n            new Doctype(_MESSAGES_TAG, _DOCTYPE),\n            new CR(),\n            exampleVisitor.addDefaultExamples(rootNode),\n            new CR(),\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xmb.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        throw new Error('Unsupported');\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xmb;\n}(Serializer));\nvar _Visitor$2 = (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ startEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"<\" + ph.tag + \">\")]);\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.startName }, [startEx]);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        var /** @type {?} */ closeEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"</\" + ph.tag + \">\")]);\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.closeName }, [closeEx]);\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"{{\" + ph.value + \"}}\")]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [\n            new Text$2(\"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\")\n        ]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _Visitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest$1(message) {\n    return decimalDigest(message);\n}\nvar ExampleVisitor = (function () {\n    function ExampleVisitor() {\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    ExampleVisitor.prototype.addDefaultExamples = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        node.visit(this);\n        return node;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var _this = this;\n        if (tag.name === _PLACEHOLDER_TAG$2) {\n            if (!tag.children || tag.children.length == 0) {\n                var /** @type {?} */ exText = new Text$2(tag.attrs['name'] || '...');\n                tag.children = [new Tag(_EXEMPLE_TAG, {}, [exText])];\n            }\n        }\n        else if (tag.children) {\n            tag.children.forEach(function (node) { return node.visit(_this); });\n        }\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) { };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDeclaration = /**\n     * @param {?} decl\n     * @return {?}\n     */\n    function (decl) { };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDoctype = /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    function (doctype) { };\n    return ExampleVisitor;\n}());\n/**\n * @param {?} internalName\n * @return {?}\n */\nfunction toPublicName(internalName) {\n    return internalName.toUpperCase().replace(/[^A-Z0-9_]/g, '_');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _TRANSLATIONS_TAG = 'translationbundle';\nvar _TRANSLATION_TAG = 'translation';\nvar _PLACEHOLDER_TAG$3 = 'ph';\nvar Xtb = (function (_super) {\n    __extends(Xtb, _super);\n    function Xtb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xtb.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) { throw new Error('Unsupported'); };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xtb.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xtb to xml nodes\n        var /** @type {?} */ xtbParser = new XtbParser();\n        var _a = xtbParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$2();\n        // Because we should be able to load xtb files that rely on features not supported by angular,\n        // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n        // converted\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var /** @type {?} */ valueFn = function () {\n                var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, errors = _a.errors;\n                if (errors.length) {\n                    throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n                }\n                return i18nNodes;\n            };\n            createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n        });\n        if (errors.length) {\n            throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xtb;\n}(Serializer));\n/**\n * @param {?} messages\n * @param {?} id\n * @param {?} valueFn\n * @return {?}\n */\nfunction createLazyProperty(messages, id, valueFn) {\n    Object.defineProperty(messages, id, {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n            var /** @type {?} */ value = valueFn();\n            Object.defineProperty(messages, id, { enumerable: true, value: value });\n            return value;\n        },\n        set: function (_) { throw new Error('Could not overwrite an XTB translation'); },\n    });\n}\nvar XtbParser = (function () {\n    function XtbParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    XtbParser.prototype.parse = /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    function (xtb, url) {\n        this._bundleDepth = 0;\n        this._msgIdToHtml = {};\n        // We can not parse the ICU messages at this point as some messages might not originate\n        // from Angular that could not be lex'd.\n        var /** @type {?} */ xml = new XmlParser().parse(xtb, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _TRANSLATIONS_TAG:\n                this._bundleDepth++;\n                if (this._bundleDepth > 1) {\n                    this._addError(element, \"<\" + _TRANSLATIONS_TAG + \"> elements can not be nested\");\n                }\n                var /** @type {?} */ langAttr = element.attrs.find(function (attr) { return attr.name === 'lang'; });\n                if (langAttr) {\n                    this._locale = langAttr.value;\n                }\n                visitAll(this, element.children, null);\n                this._bundleDepth--;\n                break;\n            case _TRANSLATION_TAG:\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _TRANSLATION_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                        var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                        var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                        var /** @type {?} */ innerText = content.slice(/** @type {?} */ ((innerTextStart)), /** @type {?} */ ((innerTextEnd)));\n                        this._msgIdToHtml[id] = innerText;\n                    }\n                }\n                break;\n            default:\n                this._addError(element, 'Unexpected tag');\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XtbParser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XtbParser;\n}());\nvar XmlToI18n$2 = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG$3) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'name'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG$3 + \"> misses the \\\"name\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlParser = (function (_super) {\n    __extends(HtmlParser, _super);\n    function HtmlParser() {\n        return _super.call(this, getHtmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    HtmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms, interpolationConfig);\n    };\n    return HtmlParser;\n}(Parser$1));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for translated messages\n */\nvar TranslationBundle = (function () {\n    function TranslationBundle(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        if (missingTranslationStrategy === void 0) { missingTranslationStrategy = MissingTranslationStrategy.Warning; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this.digest = digest;\n        this.mapperFactory = mapperFactory;\n        this._i18nToHtml = new I18nToHtmlVisitor(_i18nNodesByMsgId, locale, digest, /** @type {?} */ ((mapperFactory)), missingTranslationStrategy, console);\n    }\n    // Creates a `TranslationBundle` by parsing the given `content` with the `serializer`.\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    TranslationBundle.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    function (content, url, serializer, missingTranslationStrategy, console) {\n        var _a = serializer.load(content, url), locale = _a.locale, i18nNodesByMsgId = _a.i18nNodesByMsgId;\n        var /** @type {?} */ digestFn = function (m) { return serializer.digest(m); };\n        var /** @type {?} */ mapperFactory = function (m) { return /** @type {?} */ ((serializer.createNameMapper(m))); };\n        return new TranslationBundle(i18nNodesByMsgId, locale, digestFn, mapperFactory, missingTranslationStrategy, console);\n    };\n    // Returns the translation as HTML nodes from the given source message.\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.get = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        var /** @type {?} */ html = this._i18nToHtml.convert(srcMsg);\n        if (html.errors.length) {\n            throw new Error(html.errors.join('\\n'));\n        }\n        return html.nodes;\n    };\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.has = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) { return this.digest(srcMsg) in this._i18nNodesByMsgId; };\n    return TranslationBundle;\n}());\nvar I18nToHtmlVisitor = (function () {\n    function I18nToHtmlVisitor(_i18nNodesByMsgId, _locale, _digest, _mapperFactory, _missingTranslationStrategy, _console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this._locale = _locale;\n        this._digest = _digest;\n        this._mapperFactory = _mapperFactory;\n        this._missingTranslationStrategy = _missingTranslationStrategy;\n        this._console = _console;\n        this._contextStack = [];\n        this._errors = [];\n    }\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.convert = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        this._contextStack.length = 0;\n        this._errors.length = 0;\n        // i18n to text\n        var /** @type {?} */ text = this._convertToText(srcMsg);\n        // text to html\n        var /** @type {?} */ url = srcMsg.nodes[0].sourceSpan.start.file.url;\n        var /** @type {?} */ html = new HtmlParser().parse(text, url, true);\n        return {\n            nodes: html.rootNodes,\n            errors: this._errors.concat(html.errors),\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        return container.children.map(function (n) { return n.visit(_this); }).join('');\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // TODO(vicb): Once all format switch to using expression placeholders\n        // we should throw when the placeholder is not in the source message\n        var /** @type {?} */ exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n            this._srcMsg.placeholders[icu.expression] :\n            icu.expression;\n        return \"{\" + exp + \", \" + icu.type + \", \" + cases.join(' ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ phName = this._mapper(ph.name);\n        if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n            return this._srcMsg.placeholders[phName];\n        }\n        if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n            return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n        }\n        this._addError(ph, \"Unknown placeholder \\\"\" + ph.name + \"\\\"\");\n        return '';\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ tag = \"\" + ph.tag;\n        var /** @type {?} */ attrs = Object.keys(ph.attrs).map(function (name) { return name + \"=\\\"\" + ph.attrs[name] + \"\\\"\"; }).join(' ');\n        if (ph.isVoid) {\n            return \"<\" + tag + \" \" + attrs + \"/>\";\n        }\n        var /** @type {?} */ children = ph.children.map(function (c) { return c.visit(_this); }).join('');\n        return \"<\" + tag + \" \" + attrs + \">\" + children + \"</\" + tag + \">\";\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        // An ICU placeholder references the source message to be serialized\n        return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n    };\n    /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._convertToText = /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        var _this = this;\n        var /** @type {?} */ id = this._digest(srcMsg);\n        var /** @type {?} */ mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n        var /** @type {?} */ nodes;\n        this._contextStack.push({ msg: this._srcMsg, mapper: this._mapper });\n        this._srcMsg = srcMsg;\n        if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n            // When there is a translation use its nodes as the source\n            // And create a mapper to convert serialized placeholder names to internal names\n            nodes = this._i18nNodesByMsgId[id];\n            this._mapper = function (name) { return mapper ? /** @type {?} */ ((mapper.toInternalName(name))) : name; };\n        }\n        else {\n            // When no translation has been found\n            // - report an error / a warning / nothing,\n            // - use the nodes from the original message\n            // - placeholders are already internal and need no mapper\n            if (this._missingTranslationStrategy === MissingTranslationStrategy.Error) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._addError(srcMsg.nodes[0], \"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            else if (this._console &&\n                this._missingTranslationStrategy === MissingTranslationStrategy.Warning) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._console.warn(\"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            nodes = srcMsg.nodes;\n            this._mapper = function (name) { return name; };\n        }\n        var /** @type {?} */ text = nodes.map(function (node) { return node.visit(_this); }).join('');\n        var /** @type {?} */ context = /** @type {?} */ ((this._contextStack.pop()));\n        this._srcMsg = context.msg;\n        this._mapper = context.mapper;\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._addError = /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    function (el, msg) {\n        this._errors.push(new I18nError(el.sourceSpan, msg));\n    };\n    return I18nToHtmlVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar I18NHtmlParser = (function () {\n    function I18NHtmlParser(_htmlParser, translations, translationsFormat, missingTranslation, console) {\n        if (missingTranslation === void 0) { missingTranslation = MissingTranslationStrategy.Warning; }\n        this._htmlParser = _htmlParser;\n        if (translations) {\n            var /** @type {?} */ serializer = createSerializer(translationsFormat);\n            this._translationBundle =\n                TranslationBundle.load(translations, 'i18n', serializer, missingTranslation, console);\n        }\n        else {\n            this._translationBundle =\n                new TranslationBundle({}, null, digest, undefined, missingTranslation, console);\n        }\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    I18NHtmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n        if (parseResult.errors.length) {\n            return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n        }\n        return mergeTranslations(parseResult.rootNodes, this._translationBundle, interpolationConfig, [], {});\n    };\n    return I18NHtmlParser;\n}());\n/**\n * @param {?=} format\n * @return {?}\n */\nfunction createSerializer(format) {\n    format = (format || 'xlf').toLowerCase();\n    switch (format) {\n        case 'xmb':\n            return new Xmb();\n        case 'xtb':\n            return new Xtb();\n        case 'xliff2':\n        case 'xlf2':\n            return new Xliff2();\n        case 'xliff':\n        case 'xlf':\n        default:\n            return new Xliff();\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nvar GENERATED_FILE = /\\.ngfactory\\.|\\.ngsummary\\./;\nvar JIT_SUMMARY_FILE = /\\.ngsummary\\./;\nvar JIT_SUMMARY_NAME = /NgSummary$/;\n/**\n * @param {?} filePath\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction ngfactoryFilePath(filePath, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(filePath, forceSourceFile);\n    return urlWithSuffix[0] + \".ngfactory\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripGeneratedFileSuffix(filePath) {\n    return filePath.replace(GENERATED_FILE, '.');\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction isGeneratedFile(filePath) {\n    return GENERATED_FILE.test(filePath);\n}\n/**\n * @param {?} path\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction splitTypescriptSuffix(path, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    if (path.endsWith('.d.ts')) {\n        return [path.slice(0, -5), forceSourceFile ? '.ts' : '.d.ts'];\n    }\n    var /** @type {?} */ lastDot = path.lastIndexOf('.');\n    if (lastDot !== -1) {\n        return [path.substring(0, lastDot), path.substring(lastDot)];\n    }\n    return [path, ''];\n}\n/**\n * @param {?} fileName\n * @return {?}\n */\nfunction summaryFileName(fileName) {\n    var /** @type {?} */ fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n    return fileNameWithoutSuffix + \".ngsummary.json\";\n}\n/**\n * @param {?} fileName\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction summaryForJitFileName(fileName, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(stripGeneratedFileSuffix(fileName), forceSourceFile);\n    return urlWithSuffix[0] + \".ngsummary\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripSummaryForJitFileSuffix(filePath) {\n    return filePath.replace(JIT_SUMMARY_FILE, '.');\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction summaryForJitName(symbolName) {\n    return symbolName + \"NgSummary\";\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction stripSummaryForJitNameSuffix(symbolName) {\n    return symbolName.replace(JIT_SUMMARY_NAME, '');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar CORE = '@angular/core';\nvar Identifiers = (function () {\n    function Identifiers() {\n    }\n    Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n        name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n        moduleName: CORE,\n    };\n    Identifiers.ElementRef = { name: 'ElementRef', moduleName: CORE };\n    Identifiers.NgModuleRef = { name: 'NgModuleRef', moduleName: CORE };\n    Identifiers.ViewContainerRef = { name: 'ViewContainerRef', moduleName: CORE };\n    Identifiers.ChangeDetectorRef = {\n        name: 'ChangeDetectorRef',\n        moduleName: CORE,\n    };\n    Identifiers.QueryList = { name: 'QueryList', moduleName: CORE };\n    Identifiers.TemplateRef = { name: 'TemplateRef', moduleName: CORE };\n    Identifiers.CodegenComponentFactoryResolver = {\n        name: 'ɵCodegenComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactoryResolver = {\n        name: 'ComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactory = { name: 'ComponentFactory', moduleName: CORE };\n    Identifiers.ComponentRef = { name: 'ComponentRef', moduleName: CORE };\n    Identifiers.NgModuleFactory = { name: 'NgModuleFactory', moduleName: CORE };\n    Identifiers.createModuleFactory = {\n        name: 'ɵcmf',\n        moduleName: CORE,\n    };\n    Identifiers.moduleDef = {\n        name: 'ɵmod',\n        moduleName: CORE,\n    };\n    Identifiers.moduleProviderDef = {\n        name: 'ɵmpd',\n        moduleName: CORE,\n    };\n    Identifiers.RegisterModuleFactoryFn = {\n        name: 'ɵregisterModuleFactory',\n        moduleName: CORE,\n    };\n    Identifiers.Injector = { name: 'Injector', moduleName: CORE };\n    Identifiers.ViewEncapsulation = {\n        name: 'ViewEncapsulation',\n        moduleName: CORE,\n    };\n    Identifiers.ChangeDetectionStrategy = {\n        name: 'ChangeDetectionStrategy',\n        moduleName: CORE,\n    };\n    Identifiers.SecurityContext = {\n        name: 'SecurityContext',\n        moduleName: CORE,\n    };\n    Identifiers.LOCALE_ID = { name: 'LOCALE_ID', moduleName: CORE };\n    Identifiers.TRANSLATIONS_FORMAT = {\n        name: 'TRANSLATIONS_FORMAT',\n        moduleName: CORE,\n    };\n    Identifiers.inlineInterpolate = {\n        name: 'ɵinlineInterpolate',\n        moduleName: CORE,\n    };\n    Identifiers.interpolate = { name: 'ɵinterpolate', moduleName: CORE };\n    Identifiers.EMPTY_ARRAY = { name: 'ɵEMPTY_ARRAY', moduleName: CORE };\n    Identifiers.EMPTY_MAP = { name: 'ɵEMPTY_MAP', moduleName: CORE };\n    Identifiers.Renderer = { name: 'Renderer', moduleName: CORE };\n    Identifiers.viewDef = { name: 'ɵvid', moduleName: CORE };\n    Identifiers.elementDef = { name: 'ɵeld', moduleName: CORE };\n    Identifiers.anchorDef = { name: 'ɵand', moduleName: CORE };\n    Identifiers.textDef = { name: 'ɵted', moduleName: CORE };\n    Identifiers.directiveDef = { name: 'ɵdid', moduleName: CORE };\n    Identifiers.providerDef = { name: 'ɵprd', moduleName: CORE };\n    Identifiers.queryDef = { name: 'ɵqud', moduleName: CORE };\n    Identifiers.pureArrayDef = { name: 'ɵpad', moduleName: CORE };\n    Identifiers.pureObjectDef = { name: 'ɵpod', moduleName: CORE };\n    Identifiers.purePipeDef = { name: 'ɵppd', moduleName: CORE };\n    Identifiers.pipeDef = { name: 'ɵpid', moduleName: CORE };\n    Identifiers.nodeValue = { name: 'ɵnov', moduleName: CORE };\n    Identifiers.ngContentDef = { name: 'ɵncd', moduleName: CORE };\n    Identifiers.unwrapValue = { name: 'ɵunv', moduleName: CORE };\n    Identifiers.createRendererType2 = { name: 'ɵcrt', moduleName: CORE };\n    // type only\n    Identifiers.RendererType2 = {\n        name: 'RendererType2',\n        moduleName: CORE,\n    };\n    // type only\n    Identifiers.ViewDefinition = {\n        name: 'ɵViewDefinition',\n        moduleName: CORE,\n    };\n    Identifiers.createComponentFactory = { name: 'ɵccf', moduleName: CORE };\n    return Identifiers;\n}());\n/**\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForReference(reference) {\n    return { identifier: { reference: reference } };\n}\n/**\n * @param {?} reflector\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForExternalReference(reflector, reference) {\n    return createTokenForReference(reflector.resolveExternalReference(reference));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar LifecycleHooks = {\n    OnInit: 0,\n    OnDestroy: 1,\n    DoCheck: 2,\n    OnChanges: 3,\n    AfterContentInit: 4,\n    AfterContentChecked: 5,\n    AfterViewInit: 6,\n    AfterViewChecked: 7,\n};\nLifecycleHooks[LifecycleHooks.OnInit] = \"OnInit\";\nLifecycleHooks[LifecycleHooks.OnDestroy] = \"OnDestroy\";\nLifecycleHooks[LifecycleHooks.DoCheck] = \"DoCheck\";\nLifecycleHooks[LifecycleHooks.OnChanges] = \"OnChanges\";\nLifecycleHooks[LifecycleHooks.AfterContentInit] = \"AfterContentInit\";\nLifecycleHooks[LifecycleHooks.AfterContentChecked] = \"AfterContentChecked\";\nLifecycleHooks[LifecycleHooks.AfterViewInit] = \"AfterViewInit\";\nLifecycleHooks[LifecycleHooks.AfterViewChecked] = \"AfterViewChecked\";\nvar LIFECYCLE_HOOKS_VALUES = [\n    LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n    LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n    LifecycleHooks.AfterViewChecked\n];\n/**\n * @param {?} reflector\n * @param {?} hook\n * @param {?} token\n * @return {?}\n */\nfunction hasLifecycleHook(reflector, hook, token) {\n    return reflector.hasLifecycleHook(token, getHookName(hook));\n}\n/**\n * @param {?} reflector\n * @param {?} token\n * @return {?}\n */\nfunction getAllLifecycleHooks(reflector, token) {\n    return LIFECYCLE_HOOKS_VALUES.filter(function (hook) { return hasLifecycleHook(reflector, hook, token); });\n}\n/**\n * @param {?} hook\n * @return {?}\n */\nfunction getHookName(hook) {\n    switch (hook) {\n        case LifecycleHooks.OnInit:\n            return 'ngOnInit';\n        case LifecycleHooks.OnDestroy:\n            return 'ngOnDestroy';\n        case LifecycleHooks.DoCheck:\n            return 'ngDoCheck';\n        case LifecycleHooks.OnChanges:\n            return 'ngOnChanges';\n        case LifecycleHooks.AfterContentInit:\n            return 'ngAfterContentInit';\n        case LifecycleHooks.AfterContentChecked:\n            return 'ngAfterContentChecked';\n        case LifecycleHooks.AfterViewInit:\n            return 'ngAfterViewInit';\n        case LifecycleHooks.AfterViewChecked:\n            return 'ngAfterViewChecked';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' +\n    '([-\\\\w]+)|' +\n    '(?:\\\\.([-\\\\w]+))|' +\n    '(?:\\\\[([-.\\\\w*]+)(?:=([\\\"\\']?)([^\\\\]\\\"\\']*)\\\\5)?\\\\])|' +\n    '(\\\\))|' +\n    '(\\\\s*,\\\\s*)', // \",\"\n'g');\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nvar CssSelector = (function () {\n    function CssSelector() {\n        this.element = null;\n        this.classNames = [];\n        this.attrs = [];\n        this.notSelectors = [];\n    }\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CssSelector.parse = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ _addResult = function (res, cssSel) {\n            if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n                cssSel.attrs.length == 0) {\n                cssSel.element = '*';\n            }\n            res.push(cssSel);\n        };\n        var /** @type {?} */ cssSelector = new CssSelector();\n        var /** @type {?} */ match;\n        var /** @type {?} */ current = cssSelector;\n        var /** @type {?} */ inNot = false;\n        _SELECTOR_REGEXP.lastIndex = 0;\n        while (match = _SELECTOR_REGEXP.exec(selector)) {\n            if (match[1]) {\n                if (inNot) {\n                    throw new Error('Nesting :not is not allowed in a selector');\n                }\n                inNot = true;\n                current = new CssSelector();\n                cssSelector.notSelectors.push(current);\n            }\n            if (match[2]) {\n                current.setElement(match[2]);\n            }\n            if (match[3]) {\n                current.addClassName(match[3]);\n            }\n            if (match[4]) {\n                current.addAttribute(match[4], match[6]);\n            }\n            if (match[7]) {\n                inNot = false;\n                current = cssSelector;\n            }\n            if (match[8]) {\n                if (inNot) {\n                    throw new Error('Multiple selectors in :not are not supported');\n                }\n                _addResult(results, cssSelector);\n                cssSelector = current = new CssSelector();\n            }\n        }\n        _addResult(results, cssSelector);\n        return results;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.isElementSelector = /**\n     * @return {?}\n     */\n    function () {\n        return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n            this.notSelectors.length === 0;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.hasElementSelector = /**\n     * @return {?}\n     */\n    function () { return !!this.element; };\n    /**\n     * @param {?=} element\n     * @return {?}\n     */\n    CssSelector.prototype.setElement = /**\n     * @param {?=} element\n     * @return {?}\n     */\n    function (element) {\n        if (element === void 0) { element = null; }\n        this.element = element;\n    };\n    /** Gets a template string for an element that matches the selector. */\n    /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    CssSelector.prototype.getMatchingElementTemplate = /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tagName = this.element || 'div';\n        var /** @type {?} */ classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\n        var /** @type {?} */ attrs = '';\n        for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n            var /** @type {?} */ attrName = this.attrs[i];\n            var /** @type {?} */ attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\n            attrs += \" \" + attrName + attrValue;\n        }\n        return getHtmlTagDefinition(tagName).isVoid ? \"<\" + tagName + classAttr + attrs + \"/>\" :\n            \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\n    };\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    CssSelector.prototype.addAttribute = /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    function (name, value) {\n        if (value === void 0) { value = ''; }\n        this.attrs.push(name, value && value.toLowerCase() || '');\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    CssSelector.prototype.addClassName = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { this.classNames.push(name.toLowerCase()); };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ res = this.element || '';\n        if (this.classNames) {\n            this.classNames.forEach(function (klass) { return res += \".\" + klass; });\n        }\n        if (this.attrs) {\n            for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n                var /** @type {?} */ name_1 = this.attrs[i];\n                var /** @type {?} */ value = this.attrs[i + 1];\n                res += \"[\" + name_1 + (value ? '=' + value : '') + \"]\";\n            }\n        }\n        this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\n        return res;\n    };\n    return CssSelector;\n}());\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nvar SelectorMatcher = (function () {\n    function SelectorMatcher() {\n        this._elementMap = new Map();\n        this._elementPartialMap = new Map();\n        this._classMap = new Map();\n        this._classPartialMap = new Map();\n        this._attrValueMap = new Map();\n        this._attrValuePartialMap = new Map();\n        this._listContexts = [];\n    }\n    /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    SelectorMatcher.createNotMatcher = /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    function (notSelectors) {\n        var /** @type {?} */ notMatcher = new SelectorMatcher();\n        notMatcher.addSelectables(notSelectors, null);\n        return notMatcher;\n    };\n    /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    SelectorMatcher.prototype.addSelectables = /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    function (cssSelectors, callbackCtxt) {\n        var /** @type {?} */ listContext = /** @type {?} */ ((null));\n        if (cssSelectors.length > 1) {\n            listContext = new SelectorListContext(cssSelectors);\n            this._listContexts.push(listContext);\n        }\n        for (var /** @type {?} */ i = 0; i < cssSelectors.length; i++) {\n            this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n        }\n    };\n    /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addSelectable = /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    function (cssSelector, callbackCtxt, listContext) {\n        var /** @type {?} */ matcher = this;\n        var /** @type {?} */ element = cssSelector.element;\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        var /** @type {?} */ selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n        if (element) {\n            var /** @type {?} */ isTerminal = attrs.length === 0 && classNames.length === 0;\n            if (isTerminal) {\n                this._addTerminal(matcher._elementMap, element, selectable);\n            }\n            else {\n                matcher = this._addPartial(matcher._elementPartialMap, element);\n            }\n        }\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ isTerminal = attrs.length === 0 && i === classNames.length - 1;\n                var /** @type {?} */ className = classNames[i];\n                if (isTerminal) {\n                    this._addTerminal(matcher._classMap, className, selectable);\n                }\n                else {\n                    matcher = this._addPartial(matcher._classPartialMap, className);\n                }\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ isTerminal = i === attrs.length - 2;\n                var /** @type {?} */ name_2 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                if (isTerminal) {\n                    var /** @type {?} */ terminalMap = matcher._attrValueMap;\n                    var /** @type {?} */ terminalValuesMap = terminalMap.get(name_2);\n                    if (!terminalValuesMap) {\n                        terminalValuesMap = new Map();\n                        terminalMap.set(name_2, terminalValuesMap);\n                    }\n                    this._addTerminal(terminalValuesMap, value, selectable);\n                }\n                else {\n                    var /** @type {?} */ partialMap = matcher._attrValuePartialMap;\n                    var /** @type {?} */ partialValuesMap = partialMap.get(name_2);\n                    if (!partialValuesMap) {\n                        partialValuesMap = new Map();\n                        partialMap.set(name_2, partialValuesMap);\n                    }\n                    matcher = this._addPartial(partialValuesMap, value);\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addTerminal = /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    function (map, name, selectable) {\n        var /** @type {?} */ terminalList = map.get(name);\n        if (!terminalList) {\n            terminalList = [];\n            map.set(name, terminalList);\n        }\n        terminalList.push(selectable);\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addPartial = /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    function (map, name) {\n        var /** @type {?} */ matcher = map.get(name);\n        if (!matcher) {\n            matcher = new SelectorMatcher();\n            map.set(name, matcher);\n        }\n        return matcher;\n    };\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param cssSelector A css selector\n     * @param matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return boolean true if a match was found\n    */\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    SelectorMatcher.prototype.match = /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    function (cssSelector, matchedCallback) {\n        var /** @type {?} */ result = false;\n        var /** @type {?} */ element = /** @type {?} */ ((cssSelector.element));\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        for (var /** @type {?} */ i = 0; i < this._listContexts.length; i++) {\n            this._listContexts[i].alreadyMatched = false;\n        }\n        result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n        result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n            result;\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ className = classNames[i];\n                result =\n                    this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n                result =\n                    this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n                        result;\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ name_3 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                var /** @type {?} */ terminalValuesMap = /** @type {?} */ ((this._attrValueMap.get(name_3)));\n                if (value) {\n                    result =\n                        this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n                var /** @type {?} */ partialValuesMap = /** @type {?} */ ((this._attrValuePartialMap.get(name_3)));\n                if (value) {\n                    result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n            }\n        }\n        return result;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchTerminal = /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ selectables = map.get(name) || [];\n        var /** @type {?} */ starSelectables = /** @type {?} */ ((map.get('*')));\n        if (starSelectables) {\n            selectables = selectables.concat(starSelectables);\n        }\n        if (selectables.length === 0) {\n            return false;\n        }\n        var /** @type {?} */ selectable;\n        var /** @type {?} */ result = false;\n        for (var /** @type {?} */ i = 0; i < selectables.length; i++) {\n            selectable = selectables[i];\n            result = selectable.finalize(cssSelector, matchedCallback) || result;\n        }\n        return result;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchPartial = /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ nestedSelector = map.get(name);\n        if (!nestedSelector) {\n            return false;\n        }\n        // TODO(perf): get rid of recursion and measure again\n        // TODO(perf): don't pass the whole selector into the recursion,\n        // but only the not processed parts\n        return nestedSelector.match(cssSelector, matchedCallback);\n    };\n    return SelectorMatcher;\n}());\nvar SelectorListContext = (function () {\n    function SelectorListContext(selectors) {\n        this.selectors = selectors;\n        this.alreadyMatched = false;\n    }\n    return SelectorListContext;\n}());\nvar SelectorContext = (function () {\n    function SelectorContext(selector, cbContext, listContext) {\n        this.selector = selector;\n        this.cbContext = cbContext;\n        this.listContext = listContext;\n        this.notSelectors = selector.notSelectors;\n    }\n    /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    SelectorContext.prototype.finalize = /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    function (cssSelector, callback) {\n        var /** @type {?} */ result = true;\n        if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n            var /** @type {?} */ notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n            result = !notMatcher.match(cssSelector, null);\n        }\n        if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n            if (this.listContext) {\n                this.listContext.alreadyMatched = true;\n            }\n            callback(this.selector, this.cbContext);\n        }\n        return result;\n    };\n    return SelectorContext;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ERROR_COMPONENT_TYPE = 'ngComponentType';\nvar CompileMetadataResolver = (function () {\n    function CompileMetadataResolver(_config, _htmlParser, _ngModuleResolver, _directiveResolver, _pipeResolver, _summaryResolver, _schemaRegistry, _directiveNormalizer, _console, _staticSymbolCache, _reflector, _errorCollector) {\n        this._config = _config;\n        this._htmlParser = _htmlParser;\n        this._ngModuleResolver = _ngModuleResolver;\n        this._directiveResolver = _directiveResolver;\n        this._pipeResolver = _pipeResolver;\n        this._summaryResolver = _summaryResolver;\n        this._schemaRegistry = _schemaRegistry;\n        this._directiveNormalizer = _directiveNormalizer;\n        this._console = _console;\n        this._staticSymbolCache = _staticSymbolCache;\n        this._reflector = _reflector;\n        this._errorCollector = _errorCollector;\n        this._nonNormalizedDirectiveCache = new Map();\n        this._directiveCache = new Map();\n        this._summaryCache = new Map();\n        this._pipeCache = new Map();\n        this._ngModuleCache = new Map();\n        this._ngModuleOfTypes = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getReflector = /**\n     * @return {?}\n     */\n    function () { return this._reflector; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCacheFor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ dirMeta = this._directiveCache.get(type);\n        this._directiveCache.delete(type);\n        this._nonNormalizedDirectiveCache.delete(type);\n        this._summaryCache.delete(type);\n        this._pipeCache.delete(type);\n        this._ngModuleOfTypes.delete(type);\n        // Clear all of the NgModule as they contain transitive information!\n        this._ngModuleCache.clear();\n        if (dirMeta) {\n            this._directiveNormalizer.clearCacheFor(dirMeta);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () {\n        this._directiveCache.clear();\n        this._nonNormalizedDirectiveCache.clear();\n        this._summaryCache.clear();\n        this._pipeCache.clear();\n        this._ngModuleCache.clear();\n        this._ngModuleOfTypes.clear();\n        this._directiveNormalizer.clearCache();\n    };\n    /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._createProxyClass = /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    function (baseType, name) {\n        var /** @type {?} */ delegate = null;\n        var /** @type {?} */ proxyClass = /** @type {?} */ (function () {\n            if (!delegate) {\n                throw new Error(\"Illegal state: Class \" + name + \" for type \" + stringify(baseType) + \" is not compiled yet!\");\n            }\n            return delegate.apply(this, arguments);\n        });\n        proxyClass.setDelegate = function (d) {\n            delegate = d;\n            (/** @type {?} */ (proxyClass)).prototype = d.prototype;\n        };\n        // Make stringify work correctly\n        (/** @type {?} */ (proxyClass)).overriddenName = name;\n        return proxyClass;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getGeneratedClass = /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    function (dirType, name) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n        }\n        else {\n            return this._createProxyClass(dirType, name);\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentViewClass = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        return this.getGeneratedClass(dirType, viewClassName(dirType, 0));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentViewClass = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        return this.getGeneratedClass(dirType, hostViewClassName(dirType));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentType = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        var /** @type {?} */ name = identifierName({ reference: dirType }) + \"_Host\";\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(dirType.filePath, name);\n        }\n        else {\n            var /** @type {?} */ HostClass = /** @type {?} */ (function HostClass() { });\n            HostClass.overriddenName = name;\n            return HostClass;\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getRendererType = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), rendererTypeName(dirType));\n        }\n        else {\n            // returning an object as proxy,\n            // that we fill later during runtime compilation.\n            return /** @type {?} */ ({});\n        }\n    };\n    /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentFactory = /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    function (selector, dirType, inputs, outputs) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), componentFactoryName(dirType));\n        }\n        else {\n            var /** @type {?} */ hostView = this.getHostComponentViewClass(dirType);\n            // Note: ngContentSelectors will be filled later once the template is\n            // loaded.\n            var /** @type {?} */ createComponentFactory = this._reflector.resolveExternalReference(Identifiers.createComponentFactory);\n            return createComponentFactory(selector, dirType, /** @type {?} */ (hostView), inputs, outputs, []);\n        }\n    };\n    /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.initComponentFactory = /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    function (factory, ngContentSelectors) {\n        if (!(factory instanceof StaticSymbol)) {\n            (_a = (/** @type {?} */ (factory)).ngContentSelectors).push.apply(_a, ngContentSelectors);\n        }\n        var _a;\n    };\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadSummary = /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    function (type, kind) {\n        var /** @type {?} */ typeSummary = this._summaryCache.get(type);\n        if (!typeSummary) {\n            var /** @type {?} */ summary = this._summaryResolver.resolveSummary(type);\n            typeSummary = summary ? summary.type : null;\n            this._summaryCache.set(type, typeSummary || null);\n        }\n        return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?=} hostViewType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentMetadata = /**\n     * @param {?} compMeta\n     * @param {?=} hostViewType\n     * @return {?}\n     */\n    function (compMeta, hostViewType) {\n        var /** @type {?} */ hostType = this.getHostComponentType(compMeta.type.reference);\n        if (!hostViewType) {\n            hostViewType = this.getHostComponentViewClass(hostType);\n        }\n        // Note: ! is ok here as this method should only be called with normalized directive\n        // metadata, which always fills in the selector.\n        var /** @type {?} */ template = CssSelector.parse(/** @type {?} */ ((compMeta.selector)))[0].getMatchingElementTemplate();\n        var /** @type {?} */ templateUrl = '';\n        var /** @type {?} */ htmlAst = this._htmlParser.parse(template, templateUrl);\n        return CompileDirectiveMetadata.create({\n            isHost: true,\n            type: { reference: hostType, diDeps: [], lifecycleHooks: [] },\n            template: new CompileTemplateMetadata({\n                encapsulation: ViewEncapsulation.None,\n                template: template,\n                templateUrl: templateUrl,\n                htmlAst: htmlAst,\n                styles: [],\n                styleUrls: [],\n                ngContentSelectors: [],\n                animations: [],\n                isInline: true,\n                externalStylesheets: [],\n                interpolation: null,\n                preserveWhitespaces: false,\n            }),\n            exportAs: null,\n            changeDetection: ChangeDetectionStrategy.Default,\n            inputs: [],\n            outputs: [],\n            host: {},\n            isComponent: true,\n            selector: '*',\n            providers: [],\n            viewProviders: [],\n            queries: [],\n            viewQueries: [],\n            componentViewType: hostViewType,\n            rendererType: /** @type {?} */ ({ id: '__Host__', encapsulation: ViewEncapsulation.None, styles: [], data: {} }),\n            entryComponents: [],\n            componentFactory: null\n        });\n    };\n    /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadDirectiveMetadata = /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (ngModuleType, directiveType, isSync) {\n        var _this = this;\n        if (this._directiveCache.has(directiveType)) {\n            return null;\n        }\n        directiveType = resolveForwardRef(directiveType);\n        var _a = /** @type {?} */ ((this.getNonNormalizedDirectiveMetadata(directiveType))), annotation = _a.annotation, metadata = _a.metadata;\n        var /** @type {?} */ createDirectiveMetadata = function (templateMetadata) {\n            var /** @type {?} */ normalizedDirMeta = new CompileDirectiveMetadata({\n                isHost: false,\n                type: metadata.type,\n                isComponent: metadata.isComponent,\n                selector: metadata.selector,\n                exportAs: metadata.exportAs,\n                changeDetection: metadata.changeDetection,\n                inputs: metadata.inputs,\n                outputs: metadata.outputs,\n                hostListeners: metadata.hostListeners,\n                hostProperties: metadata.hostProperties,\n                hostAttributes: metadata.hostAttributes,\n                providers: metadata.providers,\n                viewProviders: metadata.viewProviders,\n                queries: metadata.queries,\n                viewQueries: metadata.viewQueries,\n                entryComponents: metadata.entryComponents,\n                componentViewType: metadata.componentViewType,\n                rendererType: metadata.rendererType,\n                componentFactory: metadata.componentFactory,\n                template: templateMetadata\n            });\n            if (templateMetadata) {\n                _this.initComponentFactory(/** @type {?} */ ((metadata.componentFactory)), templateMetadata.ngContentSelectors);\n            }\n            _this._directiveCache.set(directiveType, normalizedDirMeta);\n            _this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n            return null;\n        };\n        if (metadata.isComponent) {\n            var /** @type {?} */ template = /** @type {?} */ ((metadata.template));\n            var /** @type {?} */ templateMeta = this._directiveNormalizer.normalizeTemplate({\n                ngModuleType: ngModuleType,\n                componentType: directiveType,\n                moduleUrl: this._reflector.componentModuleUrl(directiveType, annotation),\n                encapsulation: template.encapsulation,\n                template: template.template,\n                templateUrl: template.templateUrl,\n                styles: template.styles,\n                styleUrls: template.styleUrls,\n                animations: template.animations,\n                interpolation: template.interpolation,\n                preserveWhitespaces: template.preserveWhitespaces\n            });\n            if (isPromise(templateMeta) && isSync) {\n                this._reportError(componentStillLoadingError(directiveType), directiveType);\n                return null;\n            }\n            return SyncAsync.then(templateMeta, createDirectiveMetadata);\n        }\n        else {\n            // directive\n            createDirectiveMetadata(null);\n            return null;\n        }\n    };\n    /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNonNormalizedDirectiveMetadata = /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directiveType) {\n        var _this = this;\n        directiveType = resolveForwardRef(directiveType);\n        if (!directiveType) {\n            return null;\n        }\n        var /** @type {?} */ cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n        if (cacheEntry) {\n            return cacheEntry;\n        }\n        var /** @type {?} */ dirMeta = this._directiveResolver.resolve(directiveType, false);\n        if (!dirMeta) {\n            return null;\n        }\n        var /** @type {?} */ nonNormalizedTemplateMetadata = /** @type {?} */ ((undefined));\n        if (createComponent.isTypeOf(dirMeta)) {\n            // component\n            var /** @type {?} */ compMeta = /** @type {?} */ (dirMeta);\n            assertArrayOfStrings('styles', compMeta.styles);\n            assertArrayOfStrings('styleUrls', compMeta.styleUrls);\n            assertInterpolationSymbols('interpolation', compMeta.interpolation);\n            var /** @type {?} */ animations = compMeta.animations;\n            nonNormalizedTemplateMetadata = new CompileTemplateMetadata({\n                encapsulation: noUndefined(compMeta.encapsulation),\n                template: noUndefined(compMeta.template),\n                templateUrl: noUndefined(compMeta.templateUrl),\n                htmlAst: null,\n                styles: compMeta.styles || [],\n                styleUrls: compMeta.styleUrls || [],\n                animations: animations || [],\n                interpolation: noUndefined(compMeta.interpolation),\n                isInline: !!compMeta.template,\n                externalStylesheets: [],\n                ngContentSelectors: [],\n                preserveWhitespaces: noUndefined(dirMeta.preserveWhitespaces),\n            });\n        }\n        var /** @type {?} */ changeDetectionStrategy = /** @type {?} */ ((null));\n        var /** @type {?} */ viewProviders = [];\n        var /** @type {?} */ entryComponentMetadata = [];\n        var /** @type {?} */ selector = dirMeta.selector;\n        if (createComponent.isTypeOf(dirMeta)) {\n            // Component\n            var /** @type {?} */ compMeta = /** @type {?} */ (dirMeta);\n            changeDetectionStrategy = /** @type {?} */ ((compMeta.changeDetection));\n            if (compMeta.viewProviders) {\n                viewProviders = this._getProvidersMetadata(compMeta.viewProviders, entryComponentMetadata, \"viewProviders for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n            }\n            if (compMeta.entryComponents) {\n                entryComponentMetadata = flattenAndDedupeArray(compMeta.entryComponents)\n                    .map(function (type) { return /** @type {?} */ ((_this._getEntryComponentMetadata(type))); })\n                    .concat(entryComponentMetadata);\n            }\n            if (!selector) {\n                selector = this._schemaRegistry.getDefaultComponentElementName();\n            }\n        }\n        else {\n            // Directive\n            if (!selector) {\n                this._reportError(syntaxError(\"Directive \" + stringifyType(directiveType) + \" has no selector, please add it!\"), directiveType);\n                selector = 'error';\n            }\n        }\n        var /** @type {?} */ providers = [];\n        if (dirMeta.providers != null) {\n            providers = this._getProvidersMetadata(dirMeta.providers, entryComponentMetadata, \"providers for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n        }\n        var /** @type {?} */ queries = [];\n        var /** @type {?} */ viewQueries = [];\n        if (dirMeta.queries != null) {\n            queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n            viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n        }\n        var /** @type {?} */ metadata = CompileDirectiveMetadata.create({\n            isHost: false,\n            selector: selector,\n            exportAs: noUndefined(dirMeta.exportAs),\n            isComponent: !!nonNormalizedTemplateMetadata,\n            type: this._getTypeMetadata(directiveType),\n            template: nonNormalizedTemplateMetadata,\n            changeDetection: changeDetectionStrategy,\n            inputs: dirMeta.inputs || [],\n            outputs: dirMeta.outputs || [],\n            host: dirMeta.host || {},\n            providers: providers || [],\n            viewProviders: viewProviders || [],\n            queries: queries || [],\n            viewQueries: viewQueries || [],\n            entryComponents: entryComponentMetadata,\n            componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                null,\n            rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : null,\n            componentFactory: null\n        });\n        if (nonNormalizedTemplateMetadata) {\n            metadata.componentFactory =\n                this.getComponentFactory(selector, directiveType, metadata.inputs, metadata.outputs);\n        }\n        cacheEntry = { metadata: metadata, annotation: dirMeta };\n        this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n        return cacheEntry;\n    };\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveMetadata = /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directiveType) {\n        var /** @type {?} */ dirMeta = /** @type {?} */ ((this._directiveCache.get(directiveType)));\n        if (!dirMeta) {\n            this._reportError(syntaxError(\"Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive \" + stringifyType(directiveType) + \".\"), directiveType);\n        }\n        return dirMeta;\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveSummary = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        var /** @type {?} */ dirSummary = /** @type {?} */ (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (!dirSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for directive \" + stringifyType(dirType) + \".\"), dirType);\n        }\n        return dirSummary;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isDirective = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Directive) ||\n            this._directiveResolver.isDirective(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isPipe = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Pipe) ||\n            this._pipeResolver.isPipe(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isNgModule = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.NgModule) ||\n            this._ngModuleResolver.isNgModule(type);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleSummary = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        var /** @type {?} */ moduleSummary = /** @type {?} */ (this._loadSummary(moduleType, CompileSummaryKind.NgModule));\n        if (!moduleSummary) {\n            var /** @type {?} */ moduleMeta = this.getNgModuleMetadata(moduleType, false);\n            moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n            if (moduleSummary) {\n                this._summaryCache.set(moduleType, moduleSummary);\n            }\n        }\n        return moduleSummary;\n    };\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     */\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadNgModuleDirectiveAndPipeMetadata = /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (moduleType, isSync, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n        var /** @type {?} */ loading = [];\n        if (ngModule) {\n            ngModule.declaredDirectives.forEach(function (id) {\n                var /** @type {?} */ promise = _this.loadDirectiveMetadata(moduleType, id.reference, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            ngModule.declaredPipes.forEach(function (id) { return _this._loadPipeMetadata(id.reference); });\n        }\n        return Promise.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleMetadata = /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (moduleType, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        moduleType = resolveForwardRef(moduleType);\n        var /** @type {?} */ compileMeta = this._ngModuleCache.get(moduleType);\n        if (compileMeta) {\n            return compileMeta;\n        }\n        var /** @type {?} */ meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n        if (!meta) {\n            return null;\n        }\n        var /** @type {?} */ declaredDirectives = [];\n        var /** @type {?} */ exportedNonModuleIdentifiers = [];\n        var /** @type {?} */ declaredPipes = [];\n        var /** @type {?} */ importedModules = [];\n        var /** @type {?} */ exportedModules = [];\n        var /** @type {?} */ providers = [];\n        var /** @type {?} */ entryComponents = [];\n        var /** @type {?} */ bootstrapComponents = [];\n        var /** @type {?} */ schemas = [];\n        if (meta.imports) {\n            flattenAndDedupeArray(meta.imports).forEach(function (importedType) {\n                var /** @type {?} */ importedModuleType = /** @type {?} */ ((undefined));\n                if (isValidType(importedType)) {\n                    importedModuleType = importedType;\n                }\n                else if (importedType && importedType.ngModule) {\n                    var /** @type {?} */ moduleWithProviders = importedType;\n                    importedModuleType = moduleWithProviders.ngModule;\n                    if (moduleWithProviders.providers) {\n                        providers.push.apply(providers, _this._getProvidersMetadata(moduleWithProviders.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(importedModuleType) + \"'\", [], importedType));\n                    }\n                }\n                if (importedModuleType) {\n                    if (_this._checkSelfImport(moduleType, importedModuleType))\n                        return;\n                    var /** @type {?} */ importedModuleSummary = _this.getNgModuleSummary(importedModuleType);\n                    if (!importedModuleSummary) {\n                        _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(importedType) + \" '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'. Please add a @NgModule annotation.\"), moduleType);\n                        return;\n                    }\n                    importedModules.push(importedModuleSummary);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n            });\n        }\n        if (meta.exports) {\n            flattenAndDedupeArray(meta.exports).forEach(function (exportedType) {\n                if (!isValidType(exportedType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(exportedType) + \"' exported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ exportedModuleSummary = _this.getNgModuleSummary(exportedType);\n                if (exportedModuleSummary) {\n                    exportedModules.push(exportedModuleSummary);\n                }\n                else {\n                    exportedNonModuleIdentifiers.push(_this._getIdentifierMetadata(exportedType));\n                }\n            });\n        }\n        // Note: This will be modified later, so we rely on\n        // getting a new instance every time!\n        var /** @type {?} */ transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n        if (meta.declarations) {\n            flattenAndDedupeArray(meta.declarations).forEach(function (declaredType) {\n                if (!isValidType(declaredType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ declaredIdentifier = _this._getIdentifierMetadata(declaredType);\n                if (_this.isDirective(declaredType)) {\n                    transitiveModule.addDirective(declaredIdentifier);\n                    declaredDirectives.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else if (_this.isPipe(declaredType)) {\n                    transitiveModule.addPipe(declaredIdentifier);\n                    transitiveModule.pipes.push(declaredIdentifier);\n                    declaredPipes.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(declaredType) + \" '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\"), moduleType);\n                    return;\n                }\n            });\n        }\n        var /** @type {?} */ exportedDirectives = [];\n        var /** @type {?} */ exportedPipes = [];\n        exportedNonModuleIdentifiers.forEach(function (exportedId) {\n            if (transitiveModule.directivesSet.has(exportedId.reference)) {\n                exportedDirectives.push(exportedId);\n                transitiveModule.addExportedDirective(exportedId);\n            }\n            else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n                exportedPipes.push(exportedId);\n                transitiveModule.addExportedPipe(exportedId);\n            }\n            else {\n                _this._reportError(syntaxError(\"Can't export \" + _this._getTypeDescriptor(exportedId.reference) + \" \" + stringifyType(exportedId.reference) + \" from \" + stringifyType(moduleType) + \" as it was neither declared nor imported!\"), moduleType);\n                return;\n            }\n        });\n        // The providers of the module have to go last\n        // so that they overwrite any other provider we already added.\n        if (meta.providers) {\n            providers.push.apply(providers, this._getProvidersMetadata(meta.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(moduleType) + \"'\", [], moduleType));\n        }\n        if (meta.entryComponents) {\n            entryComponents.push.apply(entryComponents, flattenAndDedupeArray(meta.entryComponents)\n                .map(function (type) { return /** @type {?} */ ((_this._getEntryComponentMetadata(type))); }));\n        }\n        if (meta.bootstrap) {\n            flattenAndDedupeArray(meta.bootstrap).forEach(function (type) {\n                if (!isValidType(type)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(type) + \"' used in the bootstrap property of module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                bootstrapComponents.push(_this._getIdentifierMetadata(type));\n            });\n        }\n        entryComponents.push.apply(entryComponents, bootstrapComponents.map(function (type) { return /** @type {?} */ ((_this._getEntryComponentMetadata(type.reference))); }));\n        if (meta.schemas) {\n            schemas.push.apply(schemas, flattenAndDedupeArray(meta.schemas));\n        }\n        compileMeta = new CompileNgModuleMetadata({\n            type: this._getTypeMetadata(moduleType),\n            providers: providers,\n            entryComponents: entryComponents,\n            bootstrapComponents: bootstrapComponents,\n            schemas: schemas,\n            declaredDirectives: declaredDirectives,\n            exportedDirectives: exportedDirectives,\n            declaredPipes: declaredPipes,\n            exportedPipes: exportedPipes,\n            importedModules: importedModules,\n            exportedModules: exportedModules,\n            transitiveModule: transitiveModule,\n            id: meta.id || null,\n        });\n        entryComponents.forEach(function (id) { return transitiveModule.addEntryComponent(id); });\n        providers.forEach(function (provider) { return transitiveModule.addProvider(provider, /** @type {?} */ ((compileMeta)).type); });\n        transitiveModule.addModule(compileMeta.type);\n        this._ngModuleCache.set(moduleType, compileMeta);\n        return compileMeta;\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._checkSelfImport = /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    function (moduleType, importedModuleType) {\n        if (moduleType === importedModuleType) {\n            this._reportError(syntaxError(\"'\" + stringifyType(moduleType) + \"' module can't import itself\"), moduleType);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeDescriptor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (this.isDirective(type)) {\n            return 'directive';\n        }\n        if (this.isPipe(type)) {\n            return 'pipe';\n        }\n        if (this.isNgModule(type)) {\n            return 'module';\n        }\n        if ((/** @type {?} */ (type)).provide) {\n            return 'provider';\n        }\n        return 'value';\n    };\n    /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._addTypeToModule = /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (type, moduleType) {\n        var /** @type {?} */ oldModule = this._ngModuleOfTypes.get(type);\n        if (oldModule && oldModule !== moduleType) {\n            this._reportError(syntaxError(\"Type \" + stringifyType(type) + \" is part of the declarations of 2 modules: \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \"! \" +\n                (\"Please consider moving \" + stringifyType(type) + \" to a higher module that imports \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \". \") +\n                (\"You can also create a new NgModule that exports and includes \" + stringifyType(type) + \" then import that NgModule in \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \".\")), moduleType);\n            return;\n        }\n        this._ngModuleOfTypes.set(type, moduleType);\n    };\n    /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata = /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    function (importedModules, exportedModules) {\n        // collect `providers` / `entryComponents` from all imported and all exported modules\n        var /** @type {?} */ result = new TransitiveCompileNgModuleMetadata();\n        var /** @type {?} */ modulesByToken = new Map();\n        importedModules.concat(exportedModules).forEach(function (modSummary) {\n            modSummary.modules.forEach(function (mod) { return result.addModule(mod); });\n            modSummary.entryComponents.forEach(function (comp) { return result.addEntryComponent(comp); });\n            var /** @type {?} */ addedTokens = new Set();\n            modSummary.providers.forEach(function (entry) {\n                var /** @type {?} */ tokenRef = tokenReference(entry.provider.token);\n                var /** @type {?} */ prevModules = modulesByToken.get(tokenRef);\n                if (!prevModules) {\n                    prevModules = new Set();\n                    modulesByToken.set(tokenRef, prevModules);\n                }\n                var /** @type {?} */ moduleRef = entry.module.reference;\n                // Note: the providers of one module may still contain multiple providers\n                // per token (e.g. for multi providers), and we need to preserve these.\n                if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n                    prevModules.add(moduleRef);\n                    addedTokens.add(tokenRef);\n                    result.addProvider(entry.provider, entry.module);\n                }\n            });\n        });\n        exportedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addExportedDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addExportedPipe(id); });\n        });\n        importedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addPipe(id); });\n        });\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getIdentifierMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        type = resolveForwardRef(type);\n        return { reference: type };\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isInjectable = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ annotations = this._reflector.annotations(type);\n        return annotations.some(function (ann) { return createInjectable.isTypeOf(ann); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getInjectableSummary = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return {\n            summaryKind: CompileSummaryKind.Injectable,\n            type: this._getTypeMetadata(type, null, false)\n        };\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getInjectableMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    function (type, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        var /** @type {?} */ typeSummary = this._loadSummary(type, CompileSummaryKind.Injectable);\n        if (typeSummary) {\n            return typeSummary.type;\n        }\n        return this._getTypeMetadata(type, dependencies);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (type, dependencies, throwOnUnknownDeps) {\n        if (dependencies === void 0) { dependencies = null; }\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ identifier = this._getIdentifierMetadata(type);\n        return {\n            reference: identifier.reference,\n            diDeps: this._getDependenciesMetadata(identifier.reference, dependencies, throwOnUnknownDeps),\n            lifecycleHooks: getAllLifecycleHooks(this._reflector, identifier.reference),\n        };\n    };\n    /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getFactoryMetadata = /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    function (factory, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        factory = resolveForwardRef(factory);\n        return { reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies) };\n    };\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeMetadata = /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            this._reportError(syntaxError(\"Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeMeta || null;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeSummary = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeSummary = /** @type {?} */ (this._loadSummary(pipeType, CompileSummaryKind.Pipe));\n        if (!pipeSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeSummary;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getOrLoadPipeMetadata = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            pipeMeta = this._loadPipeMetadata(pipeType);\n        }\n        return pipeMeta;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadPipeMetadata = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        pipeType = resolveForwardRef(pipeType);\n        var /** @type {?} */ pipeAnnotation = /** @type {?} */ ((this._pipeResolver.resolve(pipeType)));\n        var /** @type {?} */ pipeMeta = new CompilePipeMetadata({\n            type: this._getTypeMetadata(pipeType),\n            name: pipeAnnotation.name,\n            pure: !!pipeAnnotation.pure\n        });\n        this._pipeCache.set(pipeType, pipeMeta);\n        this._summaryCache.set(pipeType, pipeMeta.toSummary());\n        return pipeMeta;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getDependenciesMetadata = /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (typeOrFunc, dependencies, throwOnUnknownDeps) {\n        var _this = this;\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ hasUnknownDeps = false;\n        var /** @type {?} */ params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n        var /** @type {?} */ dependenciesMetadata = params.map(function (param) {\n            var /** @type {?} */ isAttribute = false;\n            var /** @type {?} */ isHost = false;\n            var /** @type {?} */ isSelf = false;\n            var /** @type {?} */ isSkipSelf = false;\n            var /** @type {?} */ isOptional = false;\n            var /** @type {?} */ token = null;\n            if (Array.isArray(param)) {\n                param.forEach(function (paramEntry) {\n                    if (createHost.isTypeOf(paramEntry)) {\n                        isHost = true;\n                    }\n                    else if (createSelf.isTypeOf(paramEntry)) {\n                        isSelf = true;\n                    }\n                    else if (createSkipSelf.isTypeOf(paramEntry)) {\n                        isSkipSelf = true;\n                    }\n                    else if (createOptional.isTypeOf(paramEntry)) {\n                        isOptional = true;\n                    }\n                    else if (createAttribute.isTypeOf(paramEntry)) {\n                        isAttribute = true;\n                        token = paramEntry.attributeName;\n                    }\n                    else if (createInject.isTypeOf(paramEntry)) {\n                        token = paramEntry.token;\n                    }\n                    else if (createInjectionToken.isTypeOf(paramEntry) || paramEntry instanceof StaticSymbol) {\n                        token = paramEntry;\n                    }\n                    else if (isValidType(paramEntry) && token == null) {\n                        token = paramEntry;\n                    }\n                });\n            }\n            else {\n                token = param;\n            }\n            if (token == null) {\n                hasUnknownDeps = true;\n                return /** @type {?} */ ((null));\n            }\n            return {\n                isAttribute: isAttribute,\n                isHost: isHost,\n                isSelf: isSelf,\n                isSkipSelf: isSkipSelf,\n                isOptional: isOptional,\n                token: _this._getTokenMetadata(token)\n            };\n        });\n        if (hasUnknownDeps) {\n            var /** @type {?} */ depsTokens = dependenciesMetadata.map(function (dep) { return dep ? stringifyType(dep.token) : '?'; }).join(', ');\n            var /** @type {?} */ message = \"Can't resolve all parameters for \" + stringifyType(typeOrFunc) + \": (\" + depsTokens + \").\";\n            if (throwOnUnknownDeps) {\n                this._reportError(syntaxError(message), typeOrFunc);\n            }\n            else {\n                this._console.warn(\"Warning: \" + message + \" This will become an error in Angular v5.x\");\n            }\n        }\n        return dependenciesMetadata;\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTokenMetadata = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        token = resolveForwardRef(token);\n        var /** @type {?} */ compileToken;\n        if (typeof token === 'string') {\n            compileToken = { value: token };\n        }\n        else {\n            compileToken = { identifier: { reference: token } };\n        }\n        return compileToken;\n    };\n    /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getProvidersMetadata = /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    function (providers, targetEntryComponents, debugInfo, compileProviders, type) {\n        var _this = this;\n        if (compileProviders === void 0) { compileProviders = []; }\n        providers.forEach(function (provider, providerIdx) {\n            if (Array.isArray(provider)) {\n                _this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n            }\n            else {\n                provider = resolveForwardRef(provider);\n                var /** @type {?} */ providerMeta = /** @type {?} */ ((undefined));\n                if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n                    _this._validateProvider(provider);\n                    providerMeta = new ProviderMeta(provider.provide, provider);\n                }\n                else if (isValidType(provider)) {\n                    providerMeta = new ProviderMeta(provider, { useClass: provider });\n                }\n                else if (provider === void 0) {\n                    _this._reportError(syntaxError(\"Encountered undefined provider! Usually this means you have a circular dependencies (might be caused by using 'barrel' index.ts files.\"));\n                    return;\n                }\n                else {\n                    var /** @type {?} */ providersInfo = (/** @type {?} */ (providers.reduce(function (soFar, seenProvider, seenProviderIdx) {\n                        if (seenProviderIdx < providerIdx) {\n                            soFar.push(\"\" + stringifyType(seenProvider));\n                        }\n                        else if (seenProviderIdx == providerIdx) {\n                            soFar.push(\"?\" + stringifyType(seenProvider) + \"?\");\n                        }\n                        else if (seenProviderIdx == providerIdx + 1) {\n                            soFar.push('...');\n                        }\n                        return soFar;\n                    }, [])))\n                        .join(', ');\n                    _this._reportError(syntaxError(\"Invalid \" + (debugInfo ? debugInfo : 'provider') + \" - only instances of Provider and Type are allowed, got: [\" + providersInfo + \"]\"), type);\n                    return;\n                }\n                if (providerMeta.token ===\n                    _this._reflector.resolveExternalReference(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n                    targetEntryComponents.push.apply(targetEntryComponents, _this._getEntryComponentsFromProvider(providerMeta, type));\n                }\n                else {\n                    compileProviders.push(_this.getProviderMetadata(providerMeta));\n                }\n            }\n        });\n        return compileProviders;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._validateProvider = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n            this._reportError(syntaxError(\"Invalid provider for \" + stringifyType(provider.provide) + \". useClass cannot be \" + provider.useClass + \".\\n           Usually it happens when:\\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\\n           2. Class was used before it was declared. Use forwardRef in this case.\"));\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentsFromProvider = /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    function (provider, type) {\n        var _this = this;\n        var /** @type {?} */ components = [];\n        var /** @type {?} */ collectedIdentifiers = [];\n        if (provider.useFactory || provider.useExisting || provider.useClass) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!\"), type);\n            return [];\n        }\n        if (!provider.multi) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!\"), type);\n            return [];\n        }\n        extractIdentifiers(provider.useValue, collectedIdentifiers);\n        collectedIdentifiers.forEach(function (identifier) {\n            var /** @type {?} */ entry = _this._getEntryComponentMetadata(identifier.reference, false);\n            if (entry) {\n                components.push(entry);\n            }\n        });\n        return components;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentMetadata = /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (dirType, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n        if (dirMeta && dirMeta.metadata.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirMeta.metadata.componentFactory)) };\n        }\n        var /** @type {?} */ dirSummary = /** @type {?} */ (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (dirSummary && dirSummary.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirSummary.componentFactory)) };\n        }\n        if (throwIfNotFound) {\n            throw syntaxError(dirType.name + \" cannot be used as an entry component.\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getProviderMetadata = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        var /** @type {?} */ compileDeps = /** @type {?} */ ((undefined));\n        var /** @type {?} */ compileTypeMetadata = /** @type {?} */ ((null));\n        var /** @type {?} */ compileFactoryMetadata = /** @type {?} */ ((null));\n        var /** @type {?} */ token = this._getTokenMetadata(provider.token);\n        if (provider.useClass) {\n            compileTypeMetadata = this._getInjectableMetadata(provider.useClass, provider.dependencies);\n            compileDeps = compileTypeMetadata.diDeps;\n            if (provider.token === provider.useClass) {\n                // use the compileTypeMetadata as it contains information about lifecycleHooks...\n                token = { identifier: compileTypeMetadata };\n            }\n        }\n        else if (provider.useFactory) {\n            compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n            compileDeps = compileFactoryMetadata.diDeps;\n        }\n        return {\n            token: token,\n            useClass: compileTypeMetadata,\n            useValue: provider.useValue,\n            useFactory: compileFactoryMetadata,\n            useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : undefined,\n            deps: compileDeps,\n            multi: provider.multi\n        };\n    };\n    /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueriesMetadata = /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (queries, isViewQuery, directiveType) {\n        var _this = this;\n        var /** @type {?} */ res = [];\n        Object.keys(queries).forEach(function (propertyName) {\n            var /** @type {?} */ query = queries[propertyName];\n            if (query.isViewQuery === isViewQuery) {\n                res.push(_this._getQueryMetadata(query, propertyName, directiveType));\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._queryVarBindings = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) { return selector.split(/\\s*,\\s*/); };\n    /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueryMetadata = /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (q, propertyName, typeOrFunc) {\n        var _this = this;\n        var /** @type {?} */ selectors;\n        if (typeof q.selector === 'string') {\n            selectors =\n                this._queryVarBindings(q.selector).map(function (varName) { return _this._getTokenMetadata(varName); });\n        }\n        else {\n            if (!q.selector) {\n                this._reportError(syntaxError(\"Can't construct a query for the property \\\"\" + propertyName + \"\\\" of \\\"\" + stringifyType(typeOrFunc) + \"\\\" since the query selector wasn't defined.\"), typeOrFunc);\n                selectors = [];\n            }\n            else {\n                selectors = [this._getTokenMetadata(q.selector)];\n            }\n        }\n        return {\n            selectors: selectors,\n            first: q.first,\n            descendants: q.descendants, propertyName: propertyName,\n            read: q.read ? this._getTokenMetadata(q.read) : /** @type {?} */ ((null))\n        };\n    };\n    /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._reportError = /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    function (error, type, otherType) {\n        if (this._errorCollector) {\n            this._errorCollector(error, type);\n            if (otherType) {\n                this._errorCollector(error, otherType);\n            }\n        }\n        else {\n            throw error;\n        }\n    };\n    return CompileMetadataResolver;\n}());\n/**\n * @param {?} tree\n * @param {?=} out\n * @return {?}\n */\nfunction flattenArray(tree, out) {\n    if (out === void 0) { out = []; }\n    if (tree) {\n        for (var /** @type {?} */ i = 0; i < tree.length; i++) {\n            var /** @type {?} */ item = resolveForwardRef(tree[i]);\n            if (Array.isArray(item)) {\n                flattenArray(item, out);\n            }\n            else {\n                out.push(item);\n            }\n        }\n    }\n    return out;\n}\n/**\n * @param {?} array\n * @return {?}\n */\nfunction dedupeArray(array) {\n    if (array) {\n        return Array.from(new Set(array));\n    }\n    return [];\n}\n/**\n * @param {?} tree\n * @return {?}\n */\nfunction flattenAndDedupeArray(tree) {\n    return dedupeArray(flattenArray(tree));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValidType(value) {\n    return (value instanceof StaticSymbol) || (value instanceof Type);\n}\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nfunction extractIdentifiers(value, targetIdentifiers) {\n    visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\nvar _CompileValueConverter = (function (_super) {\n    __extends(_CompileValueConverter, _super);\n    function _CompileValueConverter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    _CompileValueConverter.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    function (value, targetIdentifiers) {\n        targetIdentifiers.push({ reference: value });\n    };\n    return _CompileValueConverter;\n}(ValueTransformer));\n/**\n * @param {?} type\n * @return {?}\n */\nfunction stringifyType(type) {\n    if (type instanceof StaticSymbol) {\n        return type.name + \" in \" + type.filePath;\n    }\n    else {\n        return stringify(type);\n    }\n}\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n * @param {?} compType\n * @return {?}\n */\nfunction componentStillLoadingError(compType) {\n    var /** @type {?} */ error = Error(\"Can't compile synchronously as \" + stringify(compType) + \" is still being loaded!\");\n    (/** @type {?} */ (error))[ERROR_COMPONENT_TYPE] = compType;\n    return error;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar TypeModifier = {\n    Const: 0,\n};\nTypeModifier[TypeModifier.Const] = \"Const\";\n/**\n * @abstract\n */\nvar Type$1 = (function () {\n    function Type(modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Type.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Type;\n}());\n/** @enum {number} */\nvar BuiltinTypeName = {\n    Dynamic: 0,\n    Bool: 1,\n    String: 2,\n    Int: 3,\n    Number: 4,\n    Function: 5,\n    Inferred: 6,\n};\nBuiltinTypeName[BuiltinTypeName.Dynamic] = \"Dynamic\";\nBuiltinTypeName[BuiltinTypeName.Bool] = \"Bool\";\nBuiltinTypeName[BuiltinTypeName.String] = \"String\";\nBuiltinTypeName[BuiltinTypeName.Int] = \"Int\";\nBuiltinTypeName[BuiltinTypeName.Number] = \"Number\";\nBuiltinTypeName[BuiltinTypeName.Function] = \"Function\";\nBuiltinTypeName[BuiltinTypeName.Inferred] = \"Inferred\";\nvar BuiltinType = (function (_super) {\n    __extends(BuiltinType, _super);\n    function BuiltinType(name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BuiltinType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBuiltintType(this, context);\n    };\n    return BuiltinType;\n}(Type$1));\nvar ExpressionType = (function (_super) {\n    __extends(ExpressionType, _super);\n    function ExpressionType(value, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExpressionType(this, context);\n    };\n    return ExpressionType;\n}(Type$1));\nvar ArrayType = (function (_super) {\n    __extends(ArrayType, _super);\n    function ArrayType(of, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.of = of;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ArrayType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitArrayType(this, context);\n    };\n    return ArrayType;\n}(Type$1));\nvar MapType = (function (_super) {\n    __extends(MapType, _super);\n    function MapType(valueType, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.valueType = valueType || null;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    MapType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitMapType(this, context); };\n    return MapType;\n}(Type$1));\nvar DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\nvar INFERRED_TYPE = new BuiltinType(BuiltinTypeName.Inferred);\nvar BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\nvar INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\nvar NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\nvar STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\nvar FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\n/**\n * @record\n */\n\n/** @enum {number} */\nvar BinaryOperator = {\n    Equals: 0,\n    NotEquals: 1,\n    Identical: 2,\n    NotIdentical: 3,\n    Minus: 4,\n    Plus: 5,\n    Divide: 6,\n    Multiply: 7,\n    Modulo: 8,\n    And: 9,\n    Or: 10,\n    Lower: 11,\n    LowerEquals: 12,\n    Bigger: 13,\n    BiggerEquals: 14,\n};\nBinaryOperator[BinaryOperator.Equals] = \"Equals\";\nBinaryOperator[BinaryOperator.NotEquals] = \"NotEquals\";\nBinaryOperator[BinaryOperator.Identical] = \"Identical\";\nBinaryOperator[BinaryOperator.NotIdentical] = \"NotIdentical\";\nBinaryOperator[BinaryOperator.Minus] = \"Minus\";\nBinaryOperator[BinaryOperator.Plus] = \"Plus\";\nBinaryOperator[BinaryOperator.Divide] = \"Divide\";\nBinaryOperator[BinaryOperator.Multiply] = \"Multiply\";\nBinaryOperator[BinaryOperator.Modulo] = \"Modulo\";\nBinaryOperator[BinaryOperator.And] = \"And\";\nBinaryOperator[BinaryOperator.Or] = \"Or\";\nBinaryOperator[BinaryOperator.Lower] = \"Lower\";\nBinaryOperator[BinaryOperator.LowerEquals] = \"LowerEquals\";\nBinaryOperator[BinaryOperator.Bigger] = \"Bigger\";\nBinaryOperator[BinaryOperator.BiggerEquals] = \"BiggerEquals\";\n/**\n * @abstract\n */\nvar Expression = (function () {\n    function Expression(type, sourceSpan) {\n        this.type = type || null;\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.prop = /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (name, sourceSpan) {\n        return new ReadPropExpr(this, name, null, sourceSpan);\n    };\n    /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.key = /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (index, type, sourceSpan) {\n        return new ReadKeyExpr(this, index, type, sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callMethod = /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (name, params, sourceSpan) {\n        return new InvokeMethodExpr(this, name, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callFn = /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (params, sourceSpan) {\n        return new InvokeFunctionExpr(this, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.instantiate = /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (params, type, sourceSpan) {\n        return new InstantiateExpr(this, params, type, sourceSpan);\n    };\n    /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.conditional = /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        return new ConditionalExpr(this, trueCase, falseCase, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.equals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.identical = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notIdentical = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.minus = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.plus = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.divide = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.multiply = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.modulo = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.and = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.And, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.or = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lower = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lowerEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.bigger = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.biggerEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.isBlank = /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (sourceSpan) {\n        // Note: We use equals by purpose here to compare to null and undefined in JS.\n        // We use the typed null to allow strictNullChecks to narrow types.\n        return this.equals(TYPED_NULL_EXPR, sourceSpan);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.cast = /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (type, sourceSpan) {\n        return new CastExpr(this, type, sourceSpan);\n    };\n    /**\n     * @return {?}\n     */\n    Expression.prototype.toStmt = /**\n     * @return {?}\n     */\n    function () { return new ExpressionStatement(this, null); };\n    return Expression;\n}());\n/** @enum {number} */\nvar BuiltinVar = {\n    This: 0,\n    Super: 1,\n    CatchError: 2,\n    CatchStack: 3,\n};\nBuiltinVar[BuiltinVar.This] = \"This\";\nBuiltinVar[BuiltinVar.Super] = \"Super\";\nBuiltinVar[BuiltinVar.CatchError] = \"CatchError\";\nBuiltinVar[BuiltinVar.CatchStack] = \"CatchStack\";\nvar ReadVarExpr = (function (_super) {\n    __extends(ReadVarExpr, _super);\n    function ReadVarExpr(name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        if (typeof name === 'string') {\n            _this.name = name;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = /** @type {?} */ (name);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadVarExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadVarExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadVarExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (!this.name) {\n            throw new Error(\"Built in variable \" + this.builtin + \" can not be assigned to.\");\n        }\n        return new WriteVarExpr(this.name, value, null, this.sourceSpan);\n    };\n    return ReadVarExpr;\n}(Expression));\nvar WriteVarExpr = (function (_super) {\n    __extends(WriteVarExpr, _super);\n    function WriteVarExpr(name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteVarExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWriteVarExpr(this, context);\n    };\n    /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    WriteVarExpr.prototype.toDeclStmt = /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    function (type, modifiers) {\n        return new DeclareVarStmt(this.name, this.value, type, modifiers, this.sourceSpan);\n    };\n    return WriteVarExpr;\n}(Expression));\nvar WriteKeyExpr = (function (_super) {\n    __extends(WriteKeyExpr, _super);\n    function WriteKeyExpr(receiver, index, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWriteKeyExpr(this, context);\n    };\n    return WriteKeyExpr;\n}(Expression));\nvar WritePropExpr = (function (_super) {\n    __extends(WritePropExpr, _super);\n    function WritePropExpr(receiver, name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WritePropExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWritePropExpr(this, context);\n    };\n    return WritePropExpr;\n}(Expression));\n/** @enum {number} */\nvar BuiltinMethod = {\n    ConcatArray: 0,\n    SubscribeObservable: 1,\n    Bind: 2,\n};\nBuiltinMethod[BuiltinMethod.ConcatArray] = \"ConcatArray\";\nBuiltinMethod[BuiltinMethod.SubscribeObservable] = \"SubscribeObservable\";\nBuiltinMethod[BuiltinMethod.Bind] = \"Bind\";\nvar InvokeMethodExpr = (function (_super) {\n    __extends(InvokeMethodExpr, _super);\n    function InvokeMethodExpr(receiver, method, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.args = args;\n        if (typeof method === 'string') {\n            _this.name = method;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = /** @type {?} */ (method);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInvokeMethodExpr(this, context);\n    };\n    return InvokeMethodExpr;\n}(Expression));\nvar InvokeFunctionExpr = (function (_super) {\n    __extends(InvokeFunctionExpr, _super);\n    function InvokeFunctionExpr(fn, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.fn = fn;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInvokeFunctionExpr(this, context);\n    };\n    return InvokeFunctionExpr;\n}(Expression));\nvar InstantiateExpr = (function (_super) {\n    __extends(InstantiateExpr, _super);\n    function InstantiateExpr(classExpr, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.classExpr = classExpr;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InstantiateExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInstantiateExpr(this, context);\n    };\n    return InstantiateExpr;\n}(Expression));\nvar LiteralExpr = (function (_super) {\n    __extends(LiteralExpr, _super);\n    function LiteralExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralExpr(this, context);\n    };\n    return LiteralExpr;\n}(Expression));\nvar ExternalExpr = (function (_super) {\n    __extends(ExternalExpr, _super);\n    function ExternalExpr(value, type, typeParams, sourceSpan) {\n        if (typeParams === void 0) { typeParams = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        _this.typeParams = typeParams;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExternalExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExternalExpr(this, context);\n    };\n    return ExternalExpr;\n}(Expression));\nvar ExternalReference = (function () {\n    function ExternalReference(moduleName, name, runtime) {\n        this.moduleName = moduleName;\n        this.name = name;\n        this.runtime = runtime;\n    }\n    return ExternalReference;\n}());\nvar ConditionalExpr = (function (_super) {\n    __extends(ConditionalExpr, _super);\n    function ConditionalExpr(condition, trueCase, falseCase, type, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        var _this = _super.call(this, type || trueCase.type, sourceSpan) || this;\n        _this.condition = condition;\n        _this.falseCase = falseCase;\n        _this.trueCase = trueCase;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ConditionalExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitConditionalExpr(this, context);\n    };\n    return ConditionalExpr;\n}(Expression));\nvar NotExpr = (function (_super) {\n    __extends(NotExpr, _super);\n    function NotExpr(condition, sourceSpan) {\n        var _this = _super.call(this, BOOL_TYPE, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NotExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitNotExpr(this, context);\n    };\n    return NotExpr;\n}(Expression));\nvar AssertNotNull = (function (_super) {\n    __extends(AssertNotNull, _super);\n    function AssertNotNull(condition, sourceSpan) {\n        var _this = _super.call(this, condition.type, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AssertNotNull.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitAssertNotNullExpr(this, context);\n    };\n    return AssertNotNull;\n}(Expression));\nvar CastExpr = (function (_super) {\n    __extends(CastExpr, _super);\n    function CastExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CastExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCastExpr(this, context);\n    };\n    return CastExpr;\n}(Expression));\nvar FnParam = (function () {\n    function FnParam(name, type) {\n        if (type === void 0) { type = null; }\n        this.name = name;\n        this.type = type;\n    }\n    return FnParam;\n}());\nvar FunctionExpr = (function (_super) {\n    __extends(FunctionExpr, _super);\n    function FunctionExpr(params, statements, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.params = params;\n        _this.statements = statements;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    FunctionExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitFunctionExpr(this, context);\n    };\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    FunctionExpr.prototype.toDeclStmt = /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    function (name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers, this.sourceSpan);\n    };\n    return FunctionExpr;\n}(Expression));\nvar BinaryOperatorExpr = (function (_super) {\n    __extends(BinaryOperatorExpr, _super);\n    function BinaryOperatorExpr(operator, lhs, rhs, type, sourceSpan) {\n        var _this = _super.call(this, type || lhs.type, sourceSpan) || this;\n        _this.operator = operator;\n        _this.rhs = rhs;\n        _this.lhs = lhs;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBinaryOperatorExpr(this, context);\n    };\n    return BinaryOperatorExpr;\n}(Expression));\nvar ReadPropExpr = (function (_super) {\n    __extends(ReadPropExpr, _super);\n    function ReadPropExpr(receiver, name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadPropExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadPropExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadPropExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return new WritePropExpr(this.receiver, this.name, value, null, this.sourceSpan);\n    };\n    return ReadPropExpr;\n}(Expression));\nvar ReadKeyExpr = (function (_super) {\n    __extends(ReadKeyExpr, _super);\n    function ReadKeyExpr(receiver, index, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadKeyExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return new WriteKeyExpr(this.receiver, this.index, value, null, this.sourceSpan);\n    };\n    return ReadKeyExpr;\n}(Expression));\nvar LiteralArrayExpr = (function (_super) {\n    __extends(LiteralArrayExpr, _super);\n    function LiteralArrayExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralArrayExpr(this, context);\n    };\n    return LiteralArrayExpr;\n}(Expression));\nvar LiteralMapEntry = (function () {\n    function LiteralMapEntry(key, value, quoted) {\n        this.key = key;\n        this.value = value;\n        this.quoted = quoted;\n    }\n    return LiteralMapEntry;\n}());\nvar LiteralMapExpr = (function (_super) {\n    __extends(LiteralMapExpr, _super);\n    function LiteralMapExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        _this.valueType = null;\n        if (type) {\n            _this.valueType = type.valueType;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralMapExpr(this, context);\n    };\n    return LiteralMapExpr;\n}(Expression));\nvar CommaExpr = (function (_super) {\n    __extends(CommaExpr, _super);\n    function CommaExpr(parts, sourceSpan) {\n        var _this = _super.call(this, parts[parts.length - 1].type, sourceSpan) || this;\n        _this.parts = parts;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommaExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCommaExpr(this, context);\n    };\n    return CommaExpr;\n}(Expression));\n/**\n * @record\n */\n\nvar THIS_EXPR = new ReadVarExpr(BuiltinVar.This, null, null);\nvar SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super, null, null);\nvar CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError, null, null);\nvar CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack, null, null);\nvar NULL_EXPR = new LiteralExpr(null, null, null);\nvar TYPED_NULL_EXPR = new LiteralExpr(null, INFERRED_TYPE, null);\n/** @enum {number} */\nvar StmtModifier = {\n    Final: 0,\n    Private: 1,\n    Exported: 2,\n};\nStmtModifier[StmtModifier.Final] = \"Final\";\nStmtModifier[StmtModifier.Private] = \"Private\";\nStmtModifier[StmtModifier.Exported] = \"Exported\";\n/**\n * @abstract\n */\nvar Statement = (function () {\n    function Statement(modifiers, sourceSpan) {\n        this.modifiers = modifiers || [];\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Statement.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Statement;\n}());\nvar DeclareVarStmt = (function (_super) {\n    __extends(DeclareVarStmt, _super);\n    function DeclareVarStmt(name, value, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        _this.type = type || value.type;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareVarStmt(this, context);\n    };\n    return DeclareVarStmt;\n}(Statement));\nvar DeclareFunctionStmt = (function (_super) {\n    __extends(DeclareFunctionStmt, _super);\n    function DeclareFunctionStmt(name, params, statements, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.statements = statements;\n        _this.type = type || null;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareFunctionStmt(this, context);\n    };\n    return DeclareFunctionStmt;\n}(Statement));\nvar ExpressionStatement = (function (_super) {\n    __extends(ExpressionStatement, _super);\n    function ExpressionStatement(expr, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.expr = expr;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionStatement.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExpressionStmt(this, context);\n    };\n    return ExpressionStatement;\n}(Statement));\nvar ReturnStatement = (function (_super) {\n    __extends(ReturnStatement, _super);\n    function ReturnStatement(value, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReturnStatement.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReturnStmt(this, context);\n    };\n    return ReturnStatement;\n}(Statement));\nvar AbstractClassPart = (function () {\n    function AbstractClassPart(type, modifiers) {\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n        this.type = type || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    AbstractClassPart.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return AbstractClassPart;\n}());\nvar ClassField = (function (_super) {\n    __extends(ClassField, _super);\n    function ClassField(name, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    return ClassField;\n}(AbstractClassPart));\nvar ClassMethod = (function (_super) {\n    __extends(ClassMethod, _super);\n    function ClassMethod(name, params, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.body = body;\n        return _this;\n    }\n    return ClassMethod;\n}(AbstractClassPart));\nvar ClassGetter = (function (_super) {\n    __extends(ClassGetter, _super);\n    function ClassGetter(name, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.body = body;\n        return _this;\n    }\n    return ClassGetter;\n}(AbstractClassPart));\nvar ClassStmt = (function (_super) {\n    __extends(ClassStmt, _super);\n    function ClassStmt(name, parent, fields, getters, constructorMethod, methods, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.parent = parent;\n        _this.fields = fields;\n        _this.getters = getters;\n        _this.constructorMethod = constructorMethod;\n        _this.methods = methods;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ClassStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareClassStmt(this, context);\n    };\n    return ClassStmt;\n}(Statement));\nvar IfStmt = (function (_super) {\n    __extends(IfStmt, _super);\n    function IfStmt(condition, trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = []; }\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.condition = condition;\n        _this.trueCase = trueCase;\n        _this.falseCase = falseCase;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    IfStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitIfStmt(this, context);\n    };\n    return IfStmt;\n}(Statement));\nvar CommentStmt = (function (_super) {\n    __extends(CommentStmt, _super);\n    function CommentStmt(comment, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.comment = comment;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommentStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCommentStmt(this, context);\n    };\n    return CommentStmt;\n}(Statement));\nvar TryCatchStmt = (function (_super) {\n    __extends(TryCatchStmt, _super);\n    function TryCatchStmt(bodyStmts, catchStmts, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.bodyStmts = bodyStmts;\n        _this.catchStmts = catchStmts;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TryCatchStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitTryCatchStmt(this, context);\n    };\n    return TryCatchStmt;\n}(Statement));\nvar ThrowStmt = (function (_super) {\n    __extends(ThrowStmt, _super);\n    function ThrowStmt(error, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.error = error;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ThrowStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitThrowStmt(this, context);\n    };\n    return ThrowStmt;\n}(Statement));\n/**\n * @record\n */\n\nvar AstTransformer$1 = (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) { return expr; };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) { return stmt; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WriteVarExpr(expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeMethodExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ method = ast.builtin || ast.name;\n        return this.transformExpr(new InvokeMethodExpr(ast.receiver.visitExpression(this, context), /** @type {?} */ ((method)), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), /** @type {?} */ ((ast.falseCase)).visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new NotExpr(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new AssertNotNull(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new CastExpr(ast.value.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new FunctionExpr(ast.params, this.visitAllStatements(ast.statements, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ entries = ast.entries.map(function (entry) {\n            return new LiteralMapEntry(entry.key, entry.value.visitExpression(_this, context), entry.quoted);\n        });\n        var /** @type {?} */ mapType = new MapType(ast.valueType, null);\n        return this.transformExpr(new LiteralMapExpr(entries, mapType, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new CommaExpr(this.visitAllExpressions(ast.parts, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllExpressions = /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    function (exprs, context) {\n        var _this = this;\n        return exprs.map(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new DeclareVarStmt(stmt.name, stmt.value.visitExpression(this, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new DeclareFunctionStmt(stmt.name, stmt.params, this.visitAllStatements(stmt.statements, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ExpressionStatement(stmt.expr.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ReturnStatement(stmt.value.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        var _this = this;\n        var /** @type {?} */ parent = /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        var /** @type {?} */ getters = stmt.getters.map(function (getter) {\n            return new ClassGetter(getter.name, _this.visitAllStatements(getter.body, context), getter.type, getter.modifiers);\n        });\n        var /** @type {?} */ ctorMethod = stmt.constructorMethod &&\n            new ClassMethod(stmt.constructorMethod.name, stmt.constructorMethod.params, this.visitAllStatements(stmt.constructorMethod.body, context), stmt.constructorMethod.type, stmt.constructorMethod.modifiers);\n        var /** @type {?} */ methods = stmt.methods.map(function (method) {\n            return new ClassMethod(method.name, method.params, _this.visitAllStatements(method.body, context), method.type, method.modifiers);\n        });\n        return this.transformStmt(new ClassStmt(stmt.name, parent, stmt.fields, getters, ctorMethod, methods, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ThrowStmt(stmt.error.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(stmt, context);\n    };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllStatements = /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmts, context) {\n        var _this = this;\n        return stmts.map(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return AstTransformer;\n}());\nvar RecursiveAstVisitor$1 = (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitType = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpression = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if (ast.type) {\n            ast.type.visitType(this, context);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBuiltintType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpressionType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) {\n        type.value.visitExpression(this, context);\n        return this.visitType(type, context);\n    };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitArrayType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMapType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWritePropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeMethodExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.fn.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.classExpr.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        if (ast.typeParams) {\n            ast.typeParams.forEach(function (type) { return type.visitType(_this, context); });\n        }\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        ast.trueCase.visitExpression(this, context); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllStatements(ast.statements, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.lhs.visitExpression(this, context);\n        ast.rhs.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllExpressions(ast.entries, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        ast.entries.forEach(function (entry) { return entry.value.visitExpression(_this, context); });\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllExpressions(ast.parts, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllExpressions = /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    function (exprs, context) {\n        var _this = this;\n        exprs.forEach(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        this.visitAllStatements(stmt.statements, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.expr.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        var _this = this;\n        /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        stmt.getters.forEach(function (getter) { return _this.visitAllStatements(getter.body, context); });\n        if (stmt.constructorMethod) {\n            this.visitAllStatements(stmt.constructorMethod.body, context);\n        }\n        stmt.methods.forEach(function (method) { return _this.visitAllStatements(method.body, context); });\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.condition.visitExpression(this, context);\n        this.visitAllStatements(stmt.trueCase, context);\n        this.visitAllStatements(stmt.falseCase, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        this.visitAllStatements(stmt.bodyStmts, context);\n        this.visitAllStatements(stmt.catchStmts, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.error.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) { return stmt; };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllStatements = /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmts, context) {\n        var _this = this;\n        stmts.forEach(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return RecursiveAstVisitor;\n}());\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction findReadVarNames(stmts) {\n    var /** @type {?} */ visitor = new _ReadVarVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.varNames;\n}\nvar _ReadVarVisitor = (function (_super) {\n    __extends(_ReadVarVisitor, _super);\n    function _ReadVarVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.varNames = new Set();\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        // Don't descend into nested functions\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        // Don't descend into nested classes\n        return stmt;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if (ast.name) {\n            this.varNames.add(ast.name);\n        }\n        return null;\n    };\n    return _ReadVarVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction collectExternalReferences(stmts) {\n    var /** @type {?} */ visitor = new _FindExternalReferencesVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.externalReferences;\n}\nvar _FindExternalReferencesVisitor = (function (_super) {\n    __extends(_FindExternalReferencesVisitor, _super);\n    function _FindExternalReferencesVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.externalReferences = [];\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @param {?} context\n     * @return {?}\n     */\n    _FindExternalReferencesVisitor.prototype.visitExternalExpr = /**\n     * @param {?} e\n     * @param {?} context\n     * @return {?}\n     */\n    function (e, context) {\n        this.externalReferences.push(e.value);\n        return _super.prototype.visitExternalExpr.call(this, e, context);\n    };\n    return _FindExternalReferencesVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmt\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToStatementIfNeeded(stmt, sourceSpan) {\n    if (!sourceSpan) {\n        return stmt;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return stmt.visitStatement(transformer, null);\n}\n/**\n * @param {?} expr\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToExpressionIfNeeded(expr, sourceSpan) {\n    if (!sourceSpan) {\n        return expr;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return expr.visitExpression(transformer, null);\n}\nvar _ApplySourceSpanTransformer = (function (_super) {\n    __extends(_ApplySourceSpanTransformer, _super);\n    function _ApplySourceSpanTransformer(sourceSpan) {\n        var _this = _super.call(this) || this;\n        _this.sourceSpan = sourceSpan;\n        return _this;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype._clone = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) {\n        var /** @type {?} */ clone = Object.create(obj.constructor.prototype);\n        for (var /** @type {?} */ prop in obj) {\n            clone[prop] = obj[prop];\n        }\n        return clone;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        if (!expr.sourceSpan) {\n            expr = this._clone(expr);\n            expr.sourceSpan = this.sourceSpan;\n        }\n        return expr;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        if (!stmt.sourceSpan) {\n            stmt = this._clone(stmt);\n            stmt.sourceSpan = this.sourceSpan;\n        }\n        return stmt;\n    };\n    return _ApplySourceSpanTransformer;\n}(AstTransformer$1));\n/**\n * @param {?} name\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction variable(name, type, sourceSpan) {\n    return new ReadVarExpr(name, type, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction importExpr(id, typeParams, sourceSpan) {\n    if (typeParams === void 0) { typeParams = null; }\n    return new ExternalExpr(id, null, typeParams, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction importType(id, typeParams, typeModifiers) {\n    if (typeParams === void 0) { typeParams = null; }\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return id != null ? expressionType(importExpr(id, typeParams, null), typeModifiers) : null;\n}\n/**\n * @param {?} expr\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction expressionType(expr, typeModifiers) {\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return new ExpressionType(expr, typeModifiers);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literalArr(values, type, sourceSpan) {\n    return new LiteralArrayExpr(values, type, sourceSpan);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @return {?}\n */\nfunction literalMap(values, type) {\n    if (type === void 0) { type = null; }\n    return new LiteralMapExpr(values.map(function (e) { return new LiteralMapEntry(e.key, e.value, e.quoted); }), type, null);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction not(expr, sourceSpan) {\n    return new NotExpr(expr, sourceSpan);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction assertNotNull(expr, sourceSpan) {\n    return new AssertNotNull(expr, sourceSpan);\n}\n/**\n * @param {?} params\n * @param {?} body\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction fn(params, body, type, sourceSpan) {\n    return new FunctionExpr(params, body, type, sourceSpan);\n}\n/**\n * @param {?} value\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literal(value, type, sourceSpan) {\n    return new LiteralExpr(value, type, sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ProviderError = (function (_super) {\n    __extends(ProviderError, _super);\n    function ProviderError(message, span) {\n        return _super.call(this, span, message) || this;\n    }\n    return ProviderError;\n}(ParseError));\n/**\n * @record\n */\n\nvar ProviderViewContext = (function () {\n    function ProviderViewContext(reflector, component) {\n        var _this = this;\n        this.reflector = reflector;\n        this.component = component;\n        this.errors = [];\n        this.viewQueries = _getViewQueries(component);\n        this.viewProviders = new Map();\n        component.viewProviders.forEach(function (provider) {\n            if (_this.viewProviders.get(tokenReference(provider.token)) == null) {\n                _this.viewProviders.set(tokenReference(provider.token), true);\n            }\n        });\n    }\n    return ProviderViewContext;\n}());\nvar ProviderElementContext = (function () {\n    function ProviderElementContext(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, isTemplate, contentQueryStartId, _sourceSpan) {\n        var _this = this;\n        this.viewContext = viewContext;\n        this._parent = _parent;\n        this._isViewRoot = _isViewRoot;\n        this._directiveAsts = _directiveAsts;\n        this._sourceSpan = _sourceSpan;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._queriedTokens = new Map();\n        this.transformedHasViewContainer = false;\n        this._attrs = {};\n        attrs.forEach(function (attrAst) { return _this._attrs[attrAst.name] = attrAst.value; });\n        var /** @type {?} */ directivesMeta = _directiveAsts.map(function (directiveAst) { return directiveAst.directive; });\n        this._allProviders =\n            _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n        this._contentQueries = _getContentQueries(contentQueryStartId, directivesMeta);\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._addQueryReadsTo(provider.token, provider.token, _this._queriedTokens);\n        });\n        if (isTemplate) {\n            var /** @type {?} */ templateRefId = createTokenForExternalReference(this.viewContext.reflector, Identifiers.TemplateRef);\n            this._addQueryReadsTo(templateRefId, templateRefId, this._queriedTokens);\n        }\n        refs.forEach(function (refAst) {\n            var /** @type {?} */ defaultQueryValue = refAst.value ||\n                createTokenForExternalReference(_this.viewContext.reflector, Identifiers.ElementRef);\n            _this._addQueryReadsTo({ value: refAst.name }, defaultQueryValue, _this._queriedTokens);\n        });\n        if (this._queriedTokens.get(this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef))) {\n            this.transformedHasViewContainer = true;\n        }\n        // create the providers that we know are eager first\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            var /** @type {?} */ eager = provider.eager || _this._queriedTokens.get(tokenReference(provider.token));\n            if (eager) {\n                _this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ProviderElementContext.prototype.afterElement = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // collect lazy providers\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n        });\n    };\n    Object.defineProperty(ProviderElementContext.prototype, \"transformProviders\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // Note: Maps keep their insertion order.\n            var /** @type {?} */ lazyProviders = [];\n            var /** @type {?} */ eagerProviders = [];\n            this._transformedProviders.forEach(function (provider) {\n                if (provider.eager) {\n                    eagerProviders.push(provider);\n                }\n                else {\n                    lazyProviders.push(provider);\n                }\n            });\n            return lazyProviders.concat(eagerProviders);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedDirectiveAsts\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ sortedProviderTypes = this.transformProviders.map(function (provider) { return provider.token.identifier; });\n            var /** @type {?} */ sortedDirectives = this._directiveAsts.slice();\n            sortedDirectives.sort(function (dir1, dir2) {\n                return sortedProviderTypes.indexOf(dir1.directive.type) -\n                    sortedProviderTypes.indexOf(dir2.directive.type);\n            });\n            return sortedDirectives;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"queryMatches\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ allMatches = [];\n            this._queriedTokens.forEach(function (matches) { allMatches.push.apply(allMatches, matches); });\n            return allMatches;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    ProviderElementContext.prototype._addQueryReadsTo = /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    function (token, defaultValue, queryReadTokens) {\n        this._getQueriesFor(token).forEach(function (query) {\n            var /** @type {?} */ queryValue = query.meta.read || defaultValue;\n            var /** @type {?} */ tokenRef = tokenReference(queryValue);\n            var /** @type {?} */ queryMatches = queryReadTokens.get(tokenRef);\n            if (!queryMatches) {\n                queryMatches = [];\n                queryReadTokens.set(tokenRef, queryMatches);\n            }\n            queryMatches.push({ queryId: query.queryId, value: queryValue });\n        });\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getQueriesFor = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ result = [];\n        var /** @type {?} */ currentEl = this;\n        var /** @type {?} */ distance = 0;\n        var /** @type {?} */ queries;\n        while (currentEl !== null) {\n            queries = currentEl._contentQueries.get(tokenReference(token));\n            if (queries) {\n                result.push.apply(result, queries.filter(function (query) { return query.meta.descendants || distance <= 1; }));\n            }\n            if (currentEl._directiveAsts.length > 0) {\n                distance++;\n            }\n            currentEl = currentEl._parent;\n        }\n        queries = this.viewContext.viewQueries.get(tokenReference(token));\n        if (queries) {\n            result.push.apply(result, queries);\n        }\n        return result;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getOrCreateLocalProvider = /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    function (requestingProviderType, token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider || ((requestingProviderType === ProviderAstType.Directive ||\n            requestingProviderType === ProviderAstType.PublicService) &&\n            resolvedProvider.providerType === ProviderAstType.PrivateService) ||\n            ((requestingProviderType === ProviderAstType.PrivateService ||\n                requestingProviderType === ProviderAstType.PublicService) &&\n                resolvedProvider.providerType === ProviderAstType.Builtin)) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this.viewContext.errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), this._sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, { token: provider.useExisting }, eager)));\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getLocalDependency = /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        if (dep.isAttribute) {\n            var /** @type {?} */ attrValue = this._attrs[/** @type {?} */ ((dep.token)).value];\n            return { isValue: true, value: attrValue == null ? null : attrValue };\n        }\n        if (dep.token != null) {\n            // access builtints\n            if ((requestingProviderType === ProviderAstType.Directive ||\n                requestingProviderType === ProviderAstType.Component)) {\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.Renderer) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ElementRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ChangeDetectorRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                    return dep;\n                }\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                    (/** @type {?} */ (this)).transformedHasViewContainer = true;\n                }\n            }\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.viewContext.reflector.resolveExternalReference(Identifiers.Injector)) {\n                return dep;\n            }\n            // access providers\n            if (this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager) != null) {\n                return dep;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getDependency = /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ currElement = this;\n        var /** @type {?} */ currEager = eager;\n        var /** @type {?} */ result = null;\n        if (!dep.isSkipSelf) {\n            result = this._getLocalDependency(requestingProviderType, dep, eager);\n        }\n        if (dep.isSelf) {\n            if (!result && dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n        }\n        else {\n            // check parent elements\n            while (!result && currElement._parent) {\n                var /** @type {?} */ prevElement = currElement;\n                currElement = currElement._parent;\n                if (prevElement._isViewRoot) {\n                    currEager = false;\n                }\n                result = currElement._getLocalDependency(ProviderAstType.PublicService, dep, currEager);\n            }\n            // check @Host restriction\n            if (!result) {\n                if (!dep.isHost || this.viewContext.component.isHost ||\n                    this.viewContext.component.type.reference === tokenReference(/** @type {?} */ ((dep.token))) ||\n                    this.viewContext.viewProviders.get(tokenReference(/** @type {?} */ ((dep.token)))) != null) {\n                    result = dep;\n                }\n                else {\n                    result = dep.isOptional ? result = { isValue: true, value: null } : null;\n                }\n            }\n        }\n        if (!result) {\n            this.viewContext.errors.push(new ProviderError(\"No provider for \" + tokenName((/** @type {?} */ ((dep.token)))), this._sourceSpan));\n        }\n        return result;\n    };\n    return ProviderElementContext;\n}());\nvar NgModuleProviderAnalyzer = (function () {\n    function NgModuleProviderAnalyzer(reflector, ngModule, extraProviders, sourceSpan) {\n        var _this = this;\n        this.reflector = reflector;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._errors = [];\n        this._allProviders = new Map();\n        ngModule.transitiveModule.modules.forEach(function (ngModuleType) {\n            var /** @type {?} */ ngModuleProvider = { token: { identifier: ngModuleType }, useClass: ngModuleType };\n            _resolveProviders([ngModuleProvider], ProviderAstType.PublicService, true, sourceSpan, _this._errors, _this._allProviders);\n        });\n        _resolveProviders(ngModule.transitiveModule.providers.map(function (entry) { return entry.provider; }).concat(extraProviders), ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders);\n    }\n    /**\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype.parse = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.token, provider.eager);\n        });\n        if (this._errors.length > 0) {\n            var /** @type {?} */ errorString = this._errors.join('\\n');\n            throw new Error(\"Provider parse errors:\\n\" + errorString);\n        }\n        // Note: Maps keep their insertion order.\n        var /** @type {?} */ lazyProviders = [];\n        var /** @type {?} */ eagerProviders = [];\n        this._transformedProviders.forEach(function (provider) {\n            if (provider.eager) {\n                eagerProviders.push(provider);\n            }\n            else {\n                lazyProviders.push(provider);\n            }\n        });\n        return lazyProviders.concat(eagerProviders);\n    };\n    /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider = /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    function (token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this._errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), resolvedProvider.sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = _this._getDependency({ token: provider.useExisting }, eager, resolvedProvider.sourceSpan);\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getDependency = /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    function (dep, eager, requestorSourceSpan) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ foundLocal = false;\n        if (!dep.isSkipSelf && dep.token != null) {\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.reflector.resolveExternalReference(Identifiers.Injector) ||\n                tokenReference(dep.token) ===\n                    this.reflector.resolveExternalReference(Identifiers.ComponentFactoryResolver)) {\n                foundLocal = true;\n                // access providers\n            }\n            else if (this._getOrCreateLocalProvider(dep.token, eager) != null) {\n                foundLocal = true;\n            }\n        }\n        var /** @type {?} */ result = dep;\n        if (dep.isSelf && !foundLocal) {\n            if (dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n            else {\n                this._errors.push(new ProviderError(\"No provider for \" + tokenName((/** @type {?} */ ((dep.token)))), requestorSourceSpan));\n            }\n        }\n        return result;\n    };\n    return NgModuleProviderAnalyzer;\n}());\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProvider(provider, _a) {\n    var useExisting = _a.useExisting, useValue = _a.useValue, deps = _a.deps;\n    return {\n        token: provider.token,\n        useClass: provider.useClass,\n        useExisting: useExisting,\n        useFactory: provider.useFactory,\n        useValue: useValue,\n        deps: deps,\n        multi: provider.multi\n    };\n}\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProviderAst(provider, _a) {\n    var eager = _a.eager, providers = _a.providers;\n    return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan);\n}\n/**\n * @param {?} directives\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @return {?}\n */\nfunction _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n    var /** @type {?} */ providersByToken = new Map();\n    directives.forEach(function (directive) {\n        var /** @type {?} */ dirProvider = { token: { identifier: directive.type }, useClass: directive.type };\n        _resolveProviders([dirProvider], directive.isComponent ? ProviderAstType.Component : ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken);\n    });\n    // Note: directives need to be able to overwrite providers of a component!\n    var /** @type {?} */ directivesWithComponentFirst = directives.filter(function (dir) { return dir.isComponent; }).concat(directives.filter(function (dir) { return !dir.isComponent; }));\n    directivesWithComponentFirst.forEach(function (directive) {\n        _resolveProviders(directive.providers, ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken);\n        _resolveProviders(directive.viewProviders, ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken);\n    });\n    return providersByToken;\n}\n/**\n * @param {?} providers\n * @param {?} providerType\n * @param {?} eager\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @param {?} targetProvidersByToken\n * @return {?}\n */\nfunction _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken) {\n    providers.forEach(function (provider) {\n        var /** @type {?} */ resolvedProvider = targetProvidersByToken.get(tokenReference(provider.token));\n        if (resolvedProvider != null && !!resolvedProvider.multiProvider !== !!provider.multi) {\n            targetErrors.push(new ProviderError(\"Mixing multi and non multi provider is not possible for token \" + tokenName(resolvedProvider.token), sourceSpan));\n        }\n        if (!resolvedProvider) {\n            var /** @type {?} */ lifecycleHooks = provider.token.identifier &&\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks ?\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks :\n                [];\n            var /** @type {?} */ isUseValue = !(provider.useClass || provider.useExisting || provider.useFactory);\n            resolvedProvider = new ProviderAst(provider.token, !!provider.multi, eager || isUseValue, [provider], providerType, lifecycleHooks, sourceSpan);\n            targetProvidersByToken.set(tokenReference(provider.token), resolvedProvider);\n        }\n        else {\n            if (!provider.multi) {\n                resolvedProvider.providers.length = 0;\n            }\n            resolvedProvider.providers.push(provider);\n        }\n    });\n}\n/**\n * @param {?} component\n * @return {?}\n */\nfunction _getViewQueries(component) {\n    // Note: queries start with id 1 so we can use the number in a Bloom filter!\n    var /** @type {?} */ viewQueryId = 1;\n    var /** @type {?} */ viewQueries = new Map();\n    if (component.viewQueries) {\n        component.viewQueries.forEach(function (query) { return _addQueryToTokenMap(viewQueries, { meta: query, queryId: viewQueryId++ }); });\n    }\n    return viewQueries;\n}\n/**\n * @param {?} contentQueryStartId\n * @param {?} directives\n * @return {?}\n */\nfunction _getContentQueries(contentQueryStartId, directives) {\n    var /** @type {?} */ contentQueryId = contentQueryStartId;\n    var /** @type {?} */ contentQueries = new Map();\n    directives.forEach(function (directive, directiveIndex) {\n        if (directive.queries) {\n            directive.queries.forEach(function (query) { return _addQueryToTokenMap(contentQueries, { meta: query, queryId: contentQueryId++ }); });\n        }\n    });\n    return contentQueries;\n}\n/**\n * @param {?} map\n * @param {?} query\n * @return {?}\n */\nfunction _addQueryToTokenMap(map, query) {\n    query.meta.selectors.forEach(function (token) {\n        var /** @type {?} */ entry = map.get(tokenReference(token));\n        if (!entry) {\n            entry = [];\n            map.set(tokenReference(token), entry);\n        }\n        entry.push(query);\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUOTED_KEYS = '$quoted$';\n/**\n * @param {?} ctx\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nfunction convertValueToOutputAst(ctx, value, type) {\n    if (type === void 0) { type = null; }\n    return visitValue(value, new _ValueOutputAstTransformer(ctx), type);\n}\nvar _ValueOutputAstTransformer = (function () {\n    function _ValueOutputAstTransformer(ctx) {\n        this.ctx = ctx;\n    }\n    /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitArray = /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    function (arr, type) {\n        var _this = this;\n        return literalArr(arr.map(function (value) { return visitValue(value, _this, null); }), type);\n    };\n    /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    function (map, type) {\n        var _this = this;\n        var /** @type {?} */ entries = [];\n        var /** @type {?} */ quotedSet = new Set(map && map[QUOTED_KEYS]);\n        Object.keys(map).forEach(function (key) {\n            entries.push(new LiteralMapEntry(key, visitValue(map[key], _this, null), quotedSet.has(key)));\n        });\n        return new LiteralMapExpr(entries, type);\n    };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitPrimitive = /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    function (value, type) { return literal(value, type); };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    function (value, type) {\n        if (value instanceof Expression) {\n            return value;\n        }\n        else {\n            return this.ctx.importExpr(value);\n        }\n    };\n    return _ValueOutputAstTransformer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} ctx\n * @param {?} providerAst\n * @return {?}\n */\nfunction providerDef(ctx, providerAst) {\n    var /** @type {?} */ flags = 0;\n    if (!providerAst.eager) {\n        flags |= 4096 /* LazyProvider */;\n    }\n    if (providerAst.providerType === ProviderAstType.PrivateService) {\n        flags |= 8192 /* PrivateProvider */;\n    }\n    providerAst.lifecycleHooks.forEach(function (lifecycleHook) {\n        // for regular providers, we only support ngOnDestroy\n        if (lifecycleHook === LifecycleHooks.OnDestroy ||\n            providerAst.providerType === ProviderAstType.Directive ||\n            providerAst.providerType === ProviderAstType.Component) {\n            flags |= lifecycleHookToNodeFlag(lifecycleHook);\n        }\n    });\n    var _a = providerAst.multiProvider ?\n        multiProviderDef(ctx, flags, providerAst.providers) :\n        singleProviderDef(ctx, flags, providerAst.providerType, providerAst.providers[0]), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return {\n        providerExpr: providerExpr,\n        flags: providerFlags, depsExpr: depsExpr,\n        tokenExpr: tokenExpr(ctx, providerAst.token),\n    };\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providers\n * @return {?}\n */\nfunction multiProviderDef(ctx, flags, providers) {\n    var /** @type {?} */ allDepDefs = [];\n    var /** @type {?} */ allParams = [];\n    var /** @type {?} */ exprs = providers.map(function (provider, providerIndex) {\n        var /** @type {?} */ expr;\n        if (provider.useClass) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useClass.diDeps);\n            expr = ctx.importExpr(provider.useClass.reference).instantiate(depExprs);\n        }\n        else if (provider.useFactory) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useFactory.diDeps);\n            expr = ctx.importExpr(provider.useFactory.reference).callFn(depExprs);\n        }\n        else if (provider.useExisting) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, [{ token: provider.useExisting }]);\n            expr = depExprs[0];\n        }\n        else {\n            expr = convertValueToOutputAst(ctx, provider.useValue);\n        }\n        return expr;\n    });\n    var /** @type {?} */ providerExpr = fn(allParams, [new ReturnStatement(literalArr(exprs))], INFERRED_TYPE);\n    return {\n        providerExpr: providerExpr,\n        flags: flags | 1024 /* TypeFactoryProvider */,\n        depsExpr: literalArr(allDepDefs)\n    };\n    /**\n     * @param {?} providerIndex\n     * @param {?} deps\n     * @return {?}\n     */\n    function convertDeps(providerIndex, deps) {\n        return deps.map(function (dep, depIndex) {\n            var /** @type {?} */ paramName = \"p\" + providerIndex + \"_\" + depIndex;\n            allParams.push(new FnParam(paramName, DYNAMIC_TYPE));\n            allDepDefs.push(depDef(ctx, dep));\n            return variable(paramName);\n        });\n    }\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providerType\n * @param {?} providerMeta\n * @return {?}\n */\nfunction singleProviderDef(ctx, flags, providerType, providerMeta) {\n    var /** @type {?} */ providerExpr;\n    var /** @type {?} */ deps;\n    if (providerType === ProviderAstType.Directive || providerType === ProviderAstType.Component) {\n        providerExpr = ctx.importExpr(/** @type {?} */ ((providerMeta.useClass)).reference);\n        flags |= 16384 /* TypeDirective */;\n        deps = providerMeta.deps || /** @type {?} */ ((providerMeta.useClass)).diDeps;\n    }\n    else {\n        if (providerMeta.useClass) {\n            providerExpr = ctx.importExpr(providerMeta.useClass.reference);\n            flags |= 512 /* TypeClassProvider */;\n            deps = providerMeta.deps || providerMeta.useClass.diDeps;\n        }\n        else if (providerMeta.useFactory) {\n            providerExpr = ctx.importExpr(providerMeta.useFactory.reference);\n            flags |= 1024 /* TypeFactoryProvider */;\n            deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n        }\n        else if (providerMeta.useExisting) {\n            providerExpr = NULL_EXPR;\n            flags |= 2048 /* TypeUseExistingProvider */;\n            deps = [{ token: providerMeta.useExisting }];\n        }\n        else {\n            providerExpr = convertValueToOutputAst(ctx, providerMeta.useValue);\n            flags |= 256 /* TypeValueProvider */;\n            deps = [];\n        }\n    }\n    var /** @type {?} */ depsExpr = literalArr(deps.map(function (dep) { return depDef(ctx, dep); }));\n    return { providerExpr: providerExpr, flags: flags, depsExpr: depsExpr };\n}\n/**\n * @param {?} ctx\n * @param {?} tokenMeta\n * @return {?}\n */\nfunction tokenExpr(ctx, tokenMeta) {\n    return tokenMeta.identifier ? ctx.importExpr(tokenMeta.identifier.reference) :\n        literal(tokenMeta.value);\n}\n/**\n * @param {?} ctx\n * @param {?} dep\n * @return {?}\n */\nfunction depDef(ctx, dep) {\n    // Note: the following fields have already been normalized out by provider_analyzer:\n    // - isAttribute, isSelf, isHost\n    var /** @type {?} */ expr = dep.isValue ? convertValueToOutputAst(ctx, dep.value) : tokenExpr(ctx, /** @type {?} */ ((dep.token)));\n    var /** @type {?} */ flags = 0;\n    if (dep.isSkipSelf) {\n        flags |= 1 /* SkipSelf */;\n    }\n    if (dep.isOptional) {\n        flags |= 2 /* Optional */;\n    }\n    if (dep.isValue) {\n        flags |= 8 /* Value */;\n    }\n    return flags === 0 /* None */ ? expr : literalArr([literal(flags), expr]);\n}\n/**\n * @param {?} lifecycleHook\n * @return {?}\n */\nfunction lifecycleHookToNodeFlag(lifecycleHook) {\n    var /** @type {?} */ nodeFlag = 0;\n    switch (lifecycleHook) {\n        case LifecycleHooks.AfterContentChecked:\n            nodeFlag = 2097152 /* AfterContentChecked */;\n            break;\n        case LifecycleHooks.AfterContentInit:\n            nodeFlag = 1048576 /* AfterContentInit */;\n            break;\n        case LifecycleHooks.AfterViewChecked:\n            nodeFlag = 8388608 /* AfterViewChecked */;\n            break;\n        case LifecycleHooks.AfterViewInit:\n            nodeFlag = 4194304 /* AfterViewInit */;\n            break;\n        case LifecycleHooks.DoCheck:\n            nodeFlag = 262144 /* DoCheck */;\n            break;\n        case LifecycleHooks.OnChanges:\n            nodeFlag = 524288 /* OnChanges */;\n            break;\n        case LifecycleHooks.OnDestroy:\n            nodeFlag = 131072 /* OnDestroy */;\n            break;\n        case LifecycleHooks.OnInit:\n            nodeFlag = 65536 /* OnInit */;\n            break;\n    }\n    return nodeFlag;\n}\n/**\n * @param {?} reflector\n * @param {?} ctx\n * @param {?} flags\n * @param {?} entryComponents\n * @return {?}\n */\nfunction componentFactoryResolverProviderDef(reflector, ctx, flags, entryComponents) {\n    var /** @type {?} */ entryComponentFactories = entryComponents.map(function (entryComponent) { return ctx.importExpr(entryComponent.componentFactory); });\n    var /** @type {?} */ token = createTokenForExternalReference(reflector, Identifiers.ComponentFactoryResolver);\n    var /** @type {?} */ classMeta = {\n        diDeps: [\n            { isValue: true, value: literalArr(entryComponentFactories) },\n            { token: token, isSkipSelf: true, isOptional: true },\n            { token: createTokenForExternalReference(reflector, Identifiers.NgModuleRef) },\n        ],\n        lifecycleHooks: [],\n        reference: reflector.resolveExternalReference(Identifiers.CodegenComponentFactoryResolver)\n    };\n    var _a = singleProviderDef(ctx, flags, ProviderAstType.PrivateService, {\n        token: token,\n        multi: false,\n        useClass: classMeta,\n    }), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return { providerExpr: providerExpr, flags: providerFlags, depsExpr: depsExpr, tokenExpr: tokenExpr(ctx, token) };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NgModuleCompileResult = (function () {\n    function NgModuleCompileResult(ngModuleFactoryVar) {\n        this.ngModuleFactoryVar = ngModuleFactoryVar;\n    }\n    return NgModuleCompileResult;\n}());\nvar LOG_VAR = variable('_l');\nvar NgModuleCompiler = (function () {\n    function NgModuleCompiler(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.compile = /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    function (ctx, ngModuleMeta, extraProviders) {\n        var /** @type {?} */ sourceSpan = typeSourceSpan('NgModule', ngModuleMeta.type);\n        var /** @type {?} */ entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents;\n        var /** @type {?} */ bootstrapComponents = ngModuleMeta.bootstrapComponents;\n        var /** @type {?} */ providerParser = new NgModuleProviderAnalyzer(this.reflector, ngModuleMeta, extraProviders, sourceSpan);\n        var /** @type {?} */ providerDefs = [componentFactoryResolverProviderDef(this.reflector, ctx, 0 /* None */, entryComponentFactories)]\n            .concat(providerParser.parse().map(function (provider) { return providerDef(ctx, provider); }))\n            .map(function (_a) {\n            var providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            return importExpr(Identifiers.moduleProviderDef).callFn([\n                literal(flags), tokenExpr, providerExpr, depsExpr\n            ]);\n        });\n        var /** @type {?} */ ngModuleDef = importExpr(Identifiers.moduleDef).callFn([literalArr(providerDefs)]);\n        var /** @type {?} */ ngModuleDefFactory = fn([new FnParam(/** @type {?} */ ((LOG_VAR.name)))], [new ReturnStatement(ngModuleDef)], INFERRED_TYPE);\n        var /** @type {?} */ ngModuleFactoryVar = identifierName(ngModuleMeta.type) + \"NgFactory\";\n        this._createNgModuleFactory(ctx, ngModuleMeta.type.reference, importExpr(Identifiers.createModuleFactory).callFn([\n            ctx.importExpr(ngModuleMeta.type.reference),\n            literalArr(bootstrapComponents.map(function (id) { return ctx.importExpr(id.reference); })),\n            ngModuleDefFactory\n        ]));\n        if (ngModuleMeta.id) {\n            var /** @type {?} */ registerFactoryStmt = importExpr(Identifiers.RegisterModuleFactoryFn)\n                .callFn([literal(ngModuleMeta.id), variable(ngModuleFactoryVar)])\n                .toStmt();\n            ctx.statements.push(registerFactoryStmt);\n        }\n        return new NgModuleCompileResult(ngModuleFactoryVar);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.createStub = /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    function (ctx, ngModuleReference) {\n        this._createNgModuleFactory(ctx, ngModuleReference, NULL_EXPR);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    NgModuleCompiler.prototype._createNgModuleFactory = /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    function (ctx, reference, value) {\n        var /** @type {?} */ ngModuleFactoryVar = identifierName({ reference: reference }) + \"NgFactory\";\n        var /** @type {?} */ ngModuleFactoryStmt = variable(ngModuleFactoryVar)\n            .set(value)\n            .toDeclStmt(importType(Identifiers.NgModuleFactory, [/** @type {?} */ ((expressionType(ctx.importExpr(reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]);\n        ctx.statements.push(ngModuleFactoryStmt);\n    };\n    return NgModuleCompiler;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Resolves types to {\\@link NgModule}.\n */\nvar NgModuleResolver = (function () {\n    function NgModuleResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    NgModuleResolver.prototype.isNgModule = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this._reflector.annotations(type).some(createNgModule.isTypeOf); };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    NgModuleResolver.prototype.resolve = /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModuleMeta = findLast(this._reflector.annotations(type), createNgModule.isTypeOf);\n        if (ngModuleMeta) {\n            return ngModuleMeta;\n        }\n        else {\n            if (throwIfNotFound) {\n                throw new Error(\"No NgModule metadata found for '\" + stringify(type) + \"'.\");\n            }\n            return null;\n        }\n    };\n    return NgModuleResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\nvar VERSION$1 = 3;\nvar JS_B64_PREFIX = '# sourceMappingURL=data:application/json;base64,';\nvar SourceMapGenerator = (function () {\n    function SourceMapGenerator(file) {\n        if (file === void 0) { file = null; }\n        this.file = file;\n        this.sourcesContent = new Map();\n        this.lines = [];\n        this.lastCol0 = 0;\n        this.hasMappings = false;\n    }\n    // The content is `null` when the content is expected to be loaded using the URL\n    /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addSource = /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    function (url, content) {\n        if (content === void 0) { content = null; }\n        if (!this.sourcesContent.has(url)) {\n            this.sourcesContent.set(url, content);\n        }\n        return this;\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addLine = /**\n     * @return {?}\n     */\n    function () {\n        this.lines.push([]);\n        this.lastCol0 = 0;\n        return this;\n    };\n    /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addMapping = /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    function (col0, sourceUrl, sourceLine0, sourceCol0) {\n        if (!this.currentLine) {\n            throw new Error(\"A line must be added before mappings can be added\");\n        }\n        if (sourceUrl != null && !this.sourcesContent.has(sourceUrl)) {\n            throw new Error(\"Unknown source file \\\"\" + sourceUrl + \"\\\"\");\n        }\n        if (col0 == null) {\n            throw new Error(\"The column in the generated code must be provided\");\n        }\n        if (col0 < this.lastCol0) {\n            throw new Error(\"Mapping should be added in output order\");\n        }\n        if (sourceUrl && (sourceLine0 == null || sourceCol0 == null)) {\n            throw new Error(\"The source location must be provided when a source url is provided\");\n        }\n        this.hasMappings = true;\n        this.lastCol0 = col0;\n        this.currentLine.push({ col0: col0, sourceUrl: sourceUrl, sourceLine0: sourceLine0, sourceCol0: sourceCol0 });\n        return this;\n    };\n    Object.defineProperty(SourceMapGenerator.prototype, \"currentLine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.lines.slice(-1)[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJSON = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.hasMappings) {\n            return null;\n        }\n        var /** @type {?} */ sourcesIndex = new Map();\n        var /** @type {?} */ sources = [];\n        var /** @type {?} */ sourcesContent = [];\n        Array.from(this.sourcesContent.keys()).forEach(function (url, i) {\n            sourcesIndex.set(url, i);\n            sources.push(url);\n            sourcesContent.push(_this.sourcesContent.get(url) || null);\n        });\n        var /** @type {?} */ mappings = '';\n        var /** @type {?} */ lastCol0 = 0;\n        var /** @type {?} */ lastSourceIndex = 0;\n        var /** @type {?} */ lastSourceLine0 = 0;\n        var /** @type {?} */ lastSourceCol0 = 0;\n        this.lines.forEach(function (segments) {\n            lastCol0 = 0;\n            mappings += segments\n                .map(function (segment) {\n                // zero-based starting column of the line in the generated code\n                var /** @type {?} */ segAsStr = toBase64VLQ(segment.col0 - lastCol0);\n                lastCol0 = segment.col0;\n                if (segment.sourceUrl != null) {\n                    // zero-based index into the “sources” list\n                    segAsStr +=\n                        toBase64VLQ(/** @type {?} */ ((sourcesIndex.get(segment.sourceUrl))) - lastSourceIndex);\n                    lastSourceIndex = /** @type {?} */ ((sourcesIndex.get(segment.sourceUrl)));\n                    // the zero-based starting line in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceLine0)) - lastSourceLine0);\n                    lastSourceLine0 = /** @type {?} */ ((segment.sourceLine0));\n                    // the zero-based starting column in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceCol0)) - lastSourceCol0);\n                    lastSourceCol0 = /** @type {?} */ ((segment.sourceCol0));\n                }\n                return segAsStr;\n            })\n                .join(',');\n            mappings += ';';\n        });\n        mappings = mappings.slice(0, -1);\n        return {\n            'file': this.file || '',\n            'version': VERSION$1,\n            'sourceRoot': '',\n            'sources': sources,\n            'sourcesContent': sourcesContent,\n            'mappings': mappings,\n        };\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJsComment = /**\n     * @return {?}\n     */\n    function () {\n        return this.hasMappings ? '//' + JS_B64_PREFIX + toBase64String(JSON.stringify(this, null, 0)) :\n            '';\n    };\n    return SourceMapGenerator;\n}());\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64String(value) {\n    var /** @type {?} */ b64 = '';\n    value = utf8Encode(value);\n    for (var /** @type {?} */ i = 0; i < value.length;) {\n        var /** @type {?} */ i1 = value.charCodeAt(i++);\n        var /** @type {?} */ i2 = value.charCodeAt(i++);\n        var /** @type {?} */ i3 = value.charCodeAt(i++);\n        b64 += toBase64Digit(i1 >> 2);\n        b64 += toBase64Digit(((i1 & 3) << 4) | (isNaN(i2) ? 0 : i2 >> 4));\n        b64 += isNaN(i2) ? '=' : toBase64Digit(((i2 & 15) << 2) | (i3 >> 6));\n        b64 += isNaN(i2) || isNaN(i3) ? '=' : toBase64Digit(i3 & 63);\n    }\n    return b64;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64VLQ(value) {\n    value = value < 0 ? ((-value) << 1) + 1 : value << 1;\n    var /** @type {?} */ out = '';\n    do {\n        var /** @type {?} */ digit = value & 31;\n        value = value >> 5;\n        if (value > 0) {\n            digit = digit | 32;\n        }\n        out += toBase64Digit(digit);\n    } while (value > 0);\n    return out;\n}\nvar B64_DIGITS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64Digit(value) {\n    if (value < 0 || value >= 64) {\n        throw new Error(\"Can only encode value in the range [0, 63]\");\n    }\n    return B64_DIGITS[value];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\nvar _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\nvar _INDENT_WITH = '  ';\nvar CATCH_ERROR_VAR$1 = variable('error', null, null);\nvar CATCH_STACK_VAR$1 = variable('stack', null, null);\n/**\n * @record\n */\n\nvar _EmittedLine = (function () {\n    function _EmittedLine(indent) {\n        this.indent = indent;\n        this.partsLength = 0;\n        this.parts = [];\n        this.srcSpans = [];\n    }\n    return _EmittedLine;\n}());\nvar EmitterVisitorContext = (function () {\n    function EmitterVisitorContext(_indent) {\n        this._indent = _indent;\n        this._classes = [];\n        this._preambleLineCount = 0;\n        this._lines = [new _EmittedLine(_indent)];\n    }\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.createRoot = /**\n     * @return {?}\n     */\n    function () { return new EmitterVisitorContext(0); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"_currentLine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._lines[this._lines.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.println = /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    function (from, lastPart) {\n        if (lastPart === void 0) { lastPart = ''; }\n        this.print(from || null, lastPart, true);\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineIsEmpty = /**\n     * @return {?}\n     */\n    function () { return this._currentLine.parts.length === 0; };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineLength = /**\n     * @return {?}\n     */\n    function () {\n        return this._currentLine.indent * _INDENT_WITH.length + this._currentLine.partsLength;\n    };\n    /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.print = /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    function (from, part, newLine) {\n        if (newLine === void 0) { newLine = false; }\n        if (part.length > 0) {\n            this._currentLine.parts.push(part);\n            this._currentLine.partsLength += part.length;\n            this._currentLine.srcSpans.push(from && from.sourceSpan || null);\n        }\n        if (newLine) {\n            this._lines.push(new _EmittedLine(this._indent));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.removeEmptyLastLine = /**\n     * @return {?}\n     */\n    function () {\n        if (this.lineIsEmpty()) {\n            this._lines.pop();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.incIndent = /**\n     * @return {?}\n     */\n    function () {\n        this._indent++;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.decIndent = /**\n     * @return {?}\n     */\n    function () {\n        this._indent--;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.pushClass = /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    function (clazz) { this._classes.push(clazz); };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.popClass = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((this._classes.pop())); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"currentClass\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSource = /**\n     * @return {?}\n     */\n    function () {\n        return this.sourceLines\n            .map(function (l) { return l.parts.length > 0 ? _createIndent(l.indent) + l.parts.join('') : ''; })\n            .join('\\n');\n    };\n    /**\n     * @param {?} sourceFilePath\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSourceMapGenerator = /**\n     * @param {?} sourceFilePath\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    function (sourceFilePath, genFilePath, startsAtLine) {\n        if (startsAtLine === void 0) { startsAtLine = 0; }\n        var /** @type {?} */ map = new SourceMapGenerator(genFilePath);\n        var /** @type {?} */ firstOffsetMapped = false;\n        var /** @type {?} */ mapFirstOffsetIfNeeded = function () {\n            if (!firstOffsetMapped) {\n                // Add a single space so that tools won't try to load the file from disk.\n                // Note: We are using virtual urls like `ng:///`, so we have to\n                // provide a content here.\n                map.addSource(sourceFilePath, ' ').addMapping(0, sourceFilePath, 0, 0);\n                firstOffsetMapped = true;\n            }\n        };\n        for (var /** @type {?} */ i = 0; i < startsAtLine; i++) {\n            map.addLine();\n            mapFirstOffsetIfNeeded();\n        }\n        this.sourceLines.forEach(function (line, lineIdx) {\n            map.addLine();\n            var /** @type {?} */ spans = line.srcSpans;\n            var /** @type {?} */ parts = line.parts;\n            var /** @type {?} */ col0 = line.indent * _INDENT_WITH.length;\n            var /** @type {?} */ spanIdx = 0;\n            // skip leading parts without source spans\n            while (spanIdx < spans.length && !spans[spanIdx]) {\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n            }\n            if (spanIdx < spans.length && lineIdx === 0 && col0 === 0) {\n                firstOffsetMapped = true;\n            }\n            else {\n                mapFirstOffsetIfNeeded();\n            }\n            while (spanIdx < spans.length) {\n                var /** @type {?} */ span = /** @type {?} */ ((spans[spanIdx]));\n                var /** @type {?} */ source = span.start.file;\n                var /** @type {?} */ sourceLine = span.start.line;\n                var /** @type {?} */ sourceCol = span.start.col;\n                map.addSource(source.url, source.content)\n                    .addMapping(col0, source.url, sourceLine, sourceCol);\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n                // assign parts without span or the same span to the previous segment\n                while (spanIdx < spans.length && (span === spans[spanIdx] || !spans[spanIdx])) {\n                    col0 += parts[spanIdx].length;\n                    spanIdx++;\n                }\n            }\n        });\n        return map;\n    };\n    /**\n     * @param {?} count\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.setPreambleLineCount = /**\n     * @param {?} count\n     * @return {?}\n     */\n    function (count) { return this._preambleLineCount = count; };\n    /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.spanOf = /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    function (line, column) {\n        var /** @type {?} */ emittedLine = this._lines[line - this._preambleLineCount];\n        if (emittedLine) {\n            var /** @type {?} */ columnsLeft = column - emittedLine.indent;\n            for (var /** @type {?} */ partIndex = 0; partIndex < emittedLine.parts.length; partIndex++) {\n                var /** @type {?} */ part = emittedLine.parts[partIndex];\n                if (part.length > columnsLeft) {\n                    return emittedLine.srcSpans[partIndex];\n                }\n                columnsLeft -= part.length;\n            }\n        }\n        return null;\n    };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"sourceLines\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (this._lines.length && this._lines[this._lines.length - 1].parts.length === 0) {\n                return this._lines.slice(0, -1);\n            }\n            return this._lines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EmitterVisitorContext;\n}());\n/**\n * @abstract\n */\nvar AbstractEmitterVisitor = (function () {\n    function AbstractEmitterVisitor(_escapeDollarInStrings) {\n        this._escapeDollarInStrings = _escapeDollarInStrings;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        stmt.expr.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"return \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"if (\");\n        stmt.condition.visitExpression(this, ctx);\n        ctx.print(stmt, \") {\");\n        var /** @type {?} */ hasElseCase = stmt.falseCase != null && stmt.falseCase.length > 0;\n        if (stmt.trueCase.length <= 1 && !hasElseCase) {\n            ctx.print(stmt, \" \");\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.removeEmptyLastLine();\n            ctx.print(stmt, \" \");\n        }\n        else {\n            ctx.println();\n            ctx.incIndent();\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.decIndent();\n            if (hasElseCase) {\n                ctx.println(stmt, \"} else {\");\n                ctx.incIndent();\n                this.visitAllStatements(stmt.falseCase, ctx);\n                ctx.decIndent();\n            }\n        }\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"throw \");\n        stmt.error.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ lines = stmt.comment.split('\\n');\n        lines.forEach(function (line) { ctx.println(stmt, \"// \" + line); });\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        ctx.print(expr, expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \"[\");\n        expr.index.visitExpression(this, ctx);\n        ctx.print(expr, \"] = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \".\" + expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeMethodExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ name = expr.name;\n        if (expr.builtin != null) {\n            name = this.getBuiltinMethodName(expr.builtin);\n            if (name == null) {\n                // some builtins just mean to skip the call.\n                return null;\n            }\n        }\n        ctx.print(expr, \".\" + name + \"(\");\n        this.visitAllExpressions(expr.args, ctx, \",\");\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        expr.fn.visitExpression(this, ctx);\n        ctx.print(expr, \"(\");\n        this.visitAllExpressions(expr.args, ctx, ',');\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    varName = 'super';\n                    break;\n                case BuiltinVar.This:\n                    varName = 'this';\n                    break;\n                case BuiltinVar.CatchError:\n                    varName = /** @type {?} */ ((CATCH_ERROR_VAR$1.name));\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = /** @type {?} */ ((CATCH_STACK_VAR$1.name));\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        ctx.print(ast, varName);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        ast.classExpr.visitExpression(this, ctx);\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (typeof value === 'string') {\n            ctx.print(ast, escapeIdentifier(value, this._escapeDollarInStrings));\n        }\n        else {\n            ctx.print(ast, \"\" + value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        ast.condition.visitExpression(this, ctx);\n        ctx.print(ast, '? ');\n        ast.trueCase.visitExpression(this, ctx);\n        ctx.print(ast, ': '); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, '!');\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ opStr;\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                opStr = '==';\n                break;\n            case BinaryOperator.Identical:\n                opStr = '===';\n                break;\n            case BinaryOperator.NotEquals:\n                opStr = '!=';\n                break;\n            case BinaryOperator.NotIdentical:\n                opStr = '!==';\n                break;\n            case BinaryOperator.And:\n                opStr = '&&';\n                break;\n            case BinaryOperator.Or:\n                opStr = '||';\n                break;\n            case BinaryOperator.Plus:\n                opStr = '+';\n                break;\n            case BinaryOperator.Minus:\n                opStr = '-';\n                break;\n            case BinaryOperator.Divide:\n                opStr = '/';\n                break;\n            case BinaryOperator.Multiply:\n                opStr = '*';\n                break;\n            case BinaryOperator.Modulo:\n                opStr = '%';\n                break;\n            case BinaryOperator.Lower:\n                opStr = '<';\n                break;\n            case BinaryOperator.LowerEquals:\n                opStr = '<=';\n                break;\n            case BinaryOperator.Bigger:\n                opStr = '>';\n                break;\n            case BinaryOperator.BiggerEquals:\n                opStr = '>=';\n                break;\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n        ctx.print(ast, \"(\");\n        ast.lhs.visitExpression(this, ctx);\n        ctx.print(ast, \" \" + opStr + \" \");\n        ast.rhs.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \".\");\n        ctx.print(ast, ast.name);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \"[\");\n        ast.index.visitExpression(this, ctx);\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"[\");\n        this.visitAllExpressions(ast.entries, ctx, ',');\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        ctx.print(ast, \"{\");\n        this.visitAllObjects(function (entry) {\n            ctx.print(ast, escapeIdentifier(entry.key, _this._escapeDollarInStrings, entry.quoted) + \":\");\n            entry.value.visitExpression(_this, ctx);\n        }, ast.entries, ctx, ',');\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, '(');\n        this.visitAllExpressions(ast.parts, ctx, ',');\n        ctx.print(ast, ')');\n        return null;\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllExpressions = /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    function (expressions, ctx, separator) {\n        var _this = this;\n        this.visitAllObjects(function (expr) { return expr.visitExpression(_this, ctx); }, expressions, ctx, separator);\n    };\n    /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllObjects = /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    function (handler, expressions, ctx, separator) {\n        var /** @type {?} */ incrementedIndent = false;\n        for (var /** @type {?} */ i = 0; i < expressions.length; i++) {\n            if (i > 0) {\n                if (ctx.lineLength() > 80) {\n                    ctx.print(null, separator, true);\n                    if (!incrementedIndent) {\n                        // continuation are marked with double indent.\n                        ctx.incIndent();\n                        ctx.incIndent();\n                        incrementedIndent = true;\n                    }\n                }\n                else {\n                    ctx.print(null, separator, false);\n                }\n            }\n            handler(expressions[i]);\n        }\n        if (incrementedIndent) {\n            // continuation are marked with double indent.\n            ctx.decIndent();\n            ctx.decIndent();\n        }\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllStatements = /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (statements, ctx) {\n        var _this = this;\n        statements.forEach(function (stmt) { return stmt.visitStatement(_this, ctx); });\n    };\n    return AbstractEmitterVisitor;\n}());\n/**\n * @param {?} input\n * @param {?} escapeDollar\n * @param {?=} alwaysQuote\n * @return {?}\n */\nfunction escapeIdentifier(input, escapeDollar, alwaysQuote) {\n    if (alwaysQuote === void 0) { alwaysQuote = true; }\n    if (input == null) {\n        return null;\n    }\n    var /** @type {?} */ body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, function () {\n        var match = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            match[_i] = arguments[_i];\n        }\n        if (match[0] == '$') {\n            return escapeDollar ? '\\\\$' : '$';\n        }\n        else if (match[0] == '\\n') {\n            return '\\\\n';\n        }\n        else if (match[0] == '\\r') {\n            return '\\\\r';\n        }\n        else {\n            return \"\\\\\" + match[0];\n        }\n    });\n    var /** @type {?} */ requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n    return requiresQuotes ? \"'\" + body + \"'\" : body;\n}\n/**\n * @param {?} count\n * @return {?}\n */\nfunction _createIndent(count) {\n    var /** @type {?} */ res = '';\n    for (var /** @type {?} */ i = 0; i < count; i++) {\n        res += _INDENT_WITH;\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction debugOutputAstAsTypeScript(ast) {\n    var /** @type {?} */ converter = new _TsEmitterVisitor();\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    var /** @type {?} */ asts = Array.isArray(ast) ? ast : [ast];\n    asts.forEach(function (ast) {\n        if (ast instanceof Statement) {\n            ast.visitStatement(converter, ctx);\n        }\n        else if (ast instanceof Expression) {\n            ast.visitExpression(converter, ctx);\n        }\n        else if (ast instanceof Type$1) {\n            ast.visitType(converter, ctx);\n        }\n        else {\n            throw new Error(\"Don't know how to print debug info for \" + ast);\n        }\n    });\n    return ctx.toSource();\n}\nvar TypeScriptEmitter = (function () {\n    function TypeScriptEmitter() {\n    }\n    /**\n     * @param {?} srcFilePath\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @param {?=} referenceFilter\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatementsAndContext = /**\n     * @param {?} srcFilePath\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @param {?=} referenceFilter\n     * @return {?}\n     */\n    function (srcFilePath, genFilePath, stmts, preamble, emitSourceMaps, referenceFilter) {\n        if (preamble === void 0) { preamble = ''; }\n        if (emitSourceMaps === void 0) { emitSourceMaps = true; }\n        var /** @type {?} */ converter = new _TsEmitterVisitor(referenceFilter);\n        var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n        converter.visitAllStatements(stmts, ctx);\n        var /** @type {?} */ preambleLines = preamble ? preamble.split('\\n') : [];\n        converter.reexports.forEach(function (reexports, exportedModuleName) {\n            var /** @type {?} */ reexportsCode = reexports.map(function (reexport) { return reexport.name + \" as \" + reexport.as; }).join(',');\n            preambleLines.push(\"export {\" + reexportsCode + \"} from '\" + exportedModuleName + \"';\");\n        });\n        converter.importsWithPrefixes.forEach(function (prefix, importedModuleName) {\n            // Note: can't write the real word for import as it screws up system.js auto detection...\n            preambleLines.push(\"imp\" +\n                (\"ort * as \" + prefix + \" from '\" + importedModuleName + \"';\"));\n        });\n        var /** @type {?} */ sm = emitSourceMaps ?\n            ctx.toSourceMapGenerator(srcFilePath, genFilePath, preambleLines.length).toJsComment() :\n            '';\n        var /** @type {?} */ lines = preambleLines.concat([ctx.toSource(), sm]);\n        if (sm) {\n            // always add a newline at the end, as some tools have bugs without it.\n            lines.push('');\n        }\n        ctx.setPreambleLineCount(preambleLines.length);\n        return { sourceText: lines.join('\\n'), context: ctx };\n    };\n    /**\n     * @param {?} srcFilePath\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatements = /**\n     * @param {?} srcFilePath\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    function (srcFilePath, genFilePath, stmts, preamble) {\n        if (preamble === void 0) { preamble = ''; }\n        return this.emitStatementsAndContext(srcFilePath, genFilePath, stmts, preamble).sourceText;\n    };\n    return TypeScriptEmitter;\n}());\nvar _TsEmitterVisitor = (function (_super) {\n    __extends(_TsEmitterVisitor, _super);\n    function _TsEmitterVisitor(referenceFilter) {\n        var _this = _super.call(this, false) || this;\n        _this.referenceFilter = referenceFilter;\n        _this.typeExpression = 0;\n        _this.importsWithPrefixes = new Map();\n        _this.reexports = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitType = /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    function (t, ctx, defaultType) {\n        if (defaultType === void 0) { defaultType = 'any'; }\n        if (t) {\n            this.typeExpression++;\n            t.visitType(this, ctx);\n            this.typeExpression--;\n        }\n        else {\n            ctx.print(null, defaultType);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (value == null && ast.type != INFERRED_TYPE) {\n            ctx.print(ast, \"(\" + value + \" as any)\");\n            return null;\n        }\n        return _super.prototype.visitLiteralExpr.call(this, ast, ctx);\n    };\n    // Temporary workaround to support strictNullCheck enabled consumers of ngc emit.\n    // In SNC mode, [] have the type never[], so we cast here to any[].\n    // TODO: narrow the cast to a more explicit type, or use a pattern that does not\n    // start with [].concat. see https://github.com/angular/angular/pull/11846\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.entries.length === 0) {\n            ctx.print(ast, '(');\n        }\n        var /** @type {?} */ result = _super.prototype.visitLiteralArrayExpr.call(this, ast, ctx);\n        if (ast.entries.length === 0) {\n            ctx.print(ast, ' as any[])');\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        this._visitIdentifier(ast.value, ast.typeParams, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ result = _super.prototype.visitAssertNotNullExpr.call(this, ast, ctx);\n        ctx.print(ast, '!');\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported) && stmt.value instanceof ExternalExpr &&\n            !stmt.type) {\n            // check for a reexport\n            var _a = stmt.value.value, name_1 = _a.name, moduleName = _a.moduleName;\n            if (moduleName) {\n                var /** @type {?} */ reexports = this.reexports.get(moduleName);\n                if (!reexports) {\n                    reexports = [];\n                    this.reexports.set(moduleName, reexports);\n                }\n                reexports.push({ name: /** @type {?} */ ((name_1)), as: stmt.name });\n                return null;\n            }\n        }\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        if (stmt.hasModifier(StmtModifier.Final)) {\n            ctx.print(stmt, \"const\");\n        }\n        else {\n            ctx.print(stmt, \"var\");\n        }\n        ctx.print(stmt, \" \" + stmt.name);\n        this._printColonType(stmt.type, ctx);\n        ctx.print(stmt, \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(<\"); /** @type {?} */\n        ((ast.type)).visitType(this, ctx);\n        ctx.print(ast, \">\");\n        ast.value.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        this.typeExpression++;\n        ast.classExpr.visitExpression(this, ctx);\n        this.typeExpression--;\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"class \" + stmt.name);\n        if (stmt.parent != null) {\n            ctx.print(stmt, \" extends \");\n            this.typeExpression++;\n            stmt.parent.visitExpression(this, ctx);\n            this.typeExpression--;\n        }\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        stmt.fields.forEach(function (field) { return _this._visitClassField(field, ctx); });\n        if (stmt.constructorMethod != null) {\n            this._visitClassConstructor(stmt, ctx);\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(method, ctx); });\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassField = /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (field, ctx) {\n        if (field.hasModifier(StmtModifier.Private)) {\n            // comment out as a workaround for #10967\n            ctx.print(null, \"/*private*/ \");\n        }\n        ctx.print(null, field.name);\n        this._printColonType(field.type, ctx);\n        ctx.println(null, \";\");\n    };\n    /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassGetter = /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (getter, ctx) {\n        if (getter.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, \"get \" + getter.name + \"()\");\n        this._printColonType(getter.type, ctx);\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(getter.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassConstructor = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"constructor(\");\n        this._visitParams(stmt.constructorMethod.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.constructorMethod.body, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassMethod = /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (method, ctx) {\n        if (method.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, method.name + \"(\");\n        this._visitParams(method.params, ctx);\n        ctx.print(null, \")\");\n        this._printColonType(method.type, ctx, 'void');\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(method.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        this._visitParams(ast.params, ctx);\n        ctx.print(ast, \")\");\n        this._printColonType(ast.type, ctx, 'void');\n        ctx.println(ast, \" => {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.print(stmt, \")\");\n        this._printColonType(stmt.type, ctx, 'void');\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack', null)).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitBuiltintType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        var /** @type {?} */ typeStr;\n        switch (type.name) {\n            case BuiltinTypeName.Bool:\n                typeStr = 'boolean';\n                break;\n            case BuiltinTypeName.Dynamic:\n                typeStr = 'any';\n                break;\n            case BuiltinTypeName.Function:\n                typeStr = 'Function';\n                break;\n            case BuiltinTypeName.Number:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.Int:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.String:\n                typeStr = 'string';\n                break;\n            default:\n                throw new Error(\"Unsupported builtin type \" + type.name);\n        }\n        ctx.print(null, typeStr);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExpressionType = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitArrayType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        this.visitType(type.of, ctx);\n        ctx.print(null, \"[]\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitMapType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        ctx.print(null, \"{[key: string]:\");\n        this.visitType(type.valueType, ctx);\n        ctx.print(null, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.getBuiltinMethodName = /**\n     * @param {?} method\n     * @return {?}\n     */\n    function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitParams = /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (params, ctx) {\n        var _this = this;\n        this.visitAllObjects(function (param) {\n            ctx.print(null, param.name);\n            _this._printColonType(param.type, ctx);\n        }, params, ctx, ',');\n    };\n    /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitIdentifier = /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (value, typeParams, ctx) {\n        var _this = this;\n        var name = value.name, moduleName = value.moduleName;\n        if (this.referenceFilter && this.referenceFilter(value)) {\n            ctx.print(null, '(null as any)');\n            return;\n        }\n        if (moduleName) {\n            var /** @type {?} */ prefix = this.importsWithPrefixes.get(moduleName);\n            if (prefix == null) {\n                prefix = \"i\" + this.importsWithPrefixes.size;\n                this.importsWithPrefixes.set(moduleName, prefix);\n            }\n            ctx.print(null, prefix + \".\");\n        }\n        ctx.print(null, /** @type {?} */ ((name)));\n        if (this.typeExpression > 0) {\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedParameters = typeParams || [];\n            if (suppliedParameters.length > 0) {\n                ctx.print(null, \"<\");\n                this.visitAllObjects(function (type) { return type.visitType(_this, ctx); }, /** @type {?} */ ((typeParams)), ctx, ',');\n                ctx.print(null, \">\");\n            }\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._printColonType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    function (type, ctx, defaultType) {\n        if (type !== INFERRED_TYPE) {\n            ctx.print(null, ':');\n            this.visitType(type, ctx, defaultType);\n        }\n    };\n    return _TsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Resolve a `Type` for {\\@link Pipe}.\n *\n * This interface can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n */\nvar PipeResolver = (function () {\n    function PipeResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    PipeResolver.prototype.isPipe = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(createPipe.isTypeOf);\n    };\n    /**\n     * Return {@link Pipe} for a given `Type`.\n     */\n    /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    PipeResolver.prototype.resolve = /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ metas = this._reflector.annotations(resolveForwardRef(type));\n        if (metas) {\n            var /** @type {?} */ annotation = findLast(metas, createPipe.isTypeOf);\n            if (annotation) {\n                return annotation;\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Pipe decorator found on \" + stringify(type));\n        }\n        return null;\n    };\n    return PipeResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'.\n */\nvar SECURITY_SCHEMA = {};\n/**\n * @param {?} ctx\n * @param {?} specs\n * @return {?}\n */\nfunction registerContext(ctx, specs) {\n    for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n        var spec = specs_1[_i];\n        SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n    }\n}\n// Case is insignificant below, all element and attribute names are lower-cased for lookup.\nregisterContext(SecurityContext.HTML, [\n    'iframe|srcdoc',\n    '*|innerHTML',\n    '*|outerHTML',\n]);\nregisterContext(SecurityContext.STYLE, ['*|style']);\n// NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\nregisterContext(SecurityContext.URL, [\n    '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n    'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n    'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n    'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n]);\nregisterContext(SecurityContext.RESOURCE_URL, [\n    'applet|code',\n    'applet|codebase',\n    'base|href',\n    'embed|src',\n    'frame|src',\n    'head|profile',\n    'html|manifest',\n    'iframe|src',\n    'link|href',\n    'media|src',\n    'object|codebase',\n    'object|data',\n    'script|src',\n]);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @abstract\n */\nvar ElementSchemaRegistry = (function () {\n    function ElementSchemaRegistry() {\n    }\n    return ElementSchemaRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BOOLEAN = 'boolean';\nvar NUMBER = 'number';\nvar STRING = 'string';\nvar OBJECT = 'object';\n/**\n * This array represents the DOM schema. It encodes inheritance, properties, and events.\n *\n * ## Overview\n *\n * Each line represents one kind of element. The `element_inheritance` and properties are joined\n * using `element_inheritance|properties` syntax.\n *\n * ## Element Inheritance\n *\n * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n * Here the individual elements are separated by `,` (commas). Every element in the list\n * has identical properties.\n *\n * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n * specified then `\"\"` (blank) element is assumed.\n *\n * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n * elements.\n *\n * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n *\n * ## Properties\n *\n * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n * by a special character designating its type:\n *\n * - (no prefix): property is a string.\n * - `*`: property represents an event.\n * - `!`: property is a boolean.\n * - `#`: property is a number.\n * - `%`: property is an object.\n *\n * ## Query\n *\n * The class creates an internal squas representation which allows to easily answer the query of\n * if a given property exist on a given element.\n *\n * NOTE: We don't yet support querying for types or events.\n * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n *       see dom_element_schema_registry_spec.ts\n */\nvar SCHEMA = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n        ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'slot^[HTMLElement]|name',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n    ':svg:cursor^:svg:|',\n];\nvar _ATTR_TO_PROP = {\n    'class': 'className',\n    'for': 'htmlFor',\n    'formaction': 'formAction',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\nvar DomElementSchemaRegistry = (function (_super) {\n    __extends(DomElementSchemaRegistry, _super);\n    function DomElementSchemaRegistry() {\n        var _this = _super.call(this) || this;\n        _this._schema = {};\n        SCHEMA.forEach(function (encodedType) {\n            var /** @type {?} */ type = {};\n            var _a = encodedType.split('|'), strType = _a[0], strProperties = _a[1];\n            var /** @type {?} */ properties = strProperties.split(',');\n            var _b = strType.split('^'), typeNames = _b[0], superName = _b[1];\n            typeNames.split(',').forEach(function (tag) { return _this._schema[tag.toLowerCase()] = type; });\n            var /** @type {?} */ superType = superName && _this._schema[superName.toLowerCase()];\n            if (superType) {\n                Object.keys(superType).forEach(function (prop) { type[prop] = superType[prop]; });\n            }\n            properties.forEach(function (property) {\n                if (property.length > 0) {\n                    switch (property[0]) {\n                        case '*':\n                            // We don't yet support events.\n                            // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                            // will\n                            // almost certainly introduce bad XSS vulnerabilities.\n                            // type[property.substring(1)] = EVENT;\n                            break;\n                        case '!':\n                            type[property.substring(1)] = BOOLEAN;\n                            break;\n                        case '#':\n                            type[property.substring(1)] = NUMBER;\n                            break;\n                        case '%':\n                            type[property.substring(1)] = OBJECT;\n                            break;\n                        default:\n                            type[property] = STRING;\n                    }\n                }\n            });\n        });\n        return _this;\n    }\n    /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasProperty = /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    function (tagName, propName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return false;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Can't tell now as we don't know which properties a custom element will get\n                // once it is instantiated\n                return true;\n            }\n        }\n        var /** @type {?} */ elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n        return !!elementProperties[propName];\n    };\n    /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasElement = /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    function (tagName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return true;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Allow any custom elements\n                return true;\n            }\n        }\n        return !!this._schema[tagName.toLowerCase()];\n    };\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     */\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.securityContext = /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    function (tagName, propName, isAttribute) {\n        if (isAttribute) {\n            // NB: For security purposes, use the mapped property name, not the attribute name.\n            propName = this.getMappedPropName(propName);\n        }\n        // Make sure comparisons are case insensitive, so that case differences between attribute and\n        // property names do not have a security impact.\n        tagName = tagName.toLowerCase();\n        propName = propName.toLowerCase();\n        var /** @type {?} */ ctx = SECURITY_SCHEMA[tagName + '|' + propName];\n        if (ctx) {\n            return ctx;\n        }\n        ctx = SECURITY_SCHEMA['*|' + propName];\n        return ctx ? ctx : SecurityContext.NONE;\n    };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getMappedPropName = /**\n     * @param {?} propName\n     * @return {?}\n     */\n    function (propName) { return _ATTR_TO_PROP[propName] || propName; };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getDefaultComponentElementName = /**\n     * @return {?}\n     */\n    function () { return 'ng-component'; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateProperty = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateAttribute = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.allKnownElementNames = /**\n     * @return {?}\n     */\n    function () { return Object.keys(this._schema); };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = /**\n     * @param {?} propName\n     * @return {?}\n     */\n    function (propName) {\n        return dashCaseToCamelCase(propName);\n    };\n    /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue = /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    function (camelCaseProp, userProvidedProp, val) {\n        var /** @type {?} */ unit = '';\n        var /** @type {?} */ strVal = val.toString().trim();\n        var /** @type {?} */ errorMsg = /** @type {?} */ ((null));\n        if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n            if (typeof val === 'number') {\n                unit = 'px';\n            }\n            else {\n                var /** @type {?} */ valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errorMsg = \"Please provide a CSS unit value for \" + userProvidedProp + \":\" + val;\n                }\n            }\n        }\n        return { error: errorMsg, value: strVal + unit };\n    };\n    return DomElementSchemaRegistry;\n}(ElementSchemaRegistry));\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction _isPixelDimensionStyle(prop) {\n    switch (prop) {\n        case 'width':\n        case 'height':\n        case 'minWidth':\n        case 'minHeight':\n        case 'maxWidth':\n        case 'maxHeight':\n        case 'left':\n        case 'top':\n        case 'bottom':\n        case 'right':\n        case 'fontSize':\n        case 'outlineWidth':\n        case 'outlineOffset':\n        case 'paddingTop':\n        case 'paddingLeft':\n        case 'paddingBottom':\n        case 'paddingRight':\n        case 'marginTop':\n        case 'marginLeft':\n        case 'marginBottom':\n        case 'marginRight':\n        case 'borderRadius':\n        case 'borderWidth':\n        case 'borderTopWidth':\n        case 'borderLeftWidth':\n        case 'borderRightWidth':\n        case 'borderBottomWidth':\n        case 'textIndent':\n            return true;\n        default:\n            return false;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ShadowCss = (function () {\n    function ShadowCss() {\n        this.strictStyling = true;\n    }\n    /*\n    * Shim some cssText with the given selector. Returns cssText that can\n    * be included in the document via WebComponents.ShadowCSS.addCssToDocument(css).\n    *\n    * When strictStyling is true:\n    * - selector is the attribute added to all elements inside the host,\n    * - hostSelector is the attribute added to the host itself.\n    */\n    /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype.shimCssText = /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    function (cssText, selector, hostSelector) {\n        if (hostSelector === void 0) { hostSelector = ''; }\n        var /** @type {?} */ sourceMappingUrl = extractSourceMappingUrl(cssText);\n        cssText = stripComments(cssText);\n        cssText = this._insertDirectives(cssText);\n        return this._scopeCssText(cssText, selector, hostSelector) + sourceMappingUrl;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertDirectives = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        cssText = this._insertPolyfillDirectivesInCssText(cssText);\n        return this._insertPolyfillRulesInCssText(cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillDirectivesInCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentNextSelectorRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return m[2] + '{';\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillRulesInCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentRuleRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            var /** @type {?} */ rule = m[0].replace(m[1], '').replace(m[2], '');\n            return m[4] + rule;\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeCssText = /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (cssText, scopeSelector, hostSelector) {\n        var /** @type {?} */ unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n        // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n        cssText = this._insertPolyfillHostInCssText(cssText);\n        cssText = this._convertColonHost(cssText);\n        cssText = this._convertColonHostContext(cssText);\n        cssText = this._convertShadowDOMSelectors(cssText);\n        if (scopeSelector) {\n            cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n        }\n        cssText = cssText + '\\n' + unscopedRules;\n        return cssText.trim();\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._extractUnscopedRulesFromCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        var /** @type {?} */ r = '';\n        var /** @type {?} */ m;\n        _cssContentUnscopedRuleRe.lastIndex = 0;\n        while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n            var /** @type {?} */ rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n            r += rule + '\\n\\n';\n        }\n        return r;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHost = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHostContext = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonRule = /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    function (cssText, regExp, partReplacer) {\n        // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n        return cssText.replace(regExp, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            if (m[2]) {\n                var /** @type {?} */ parts = m[2].split(',');\n                var /** @type {?} */ r = [];\n                for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n                    var /** @type {?} */ p = parts[i].trim();\n                    if (!p)\n                        break;\n                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                }\n                return r.join(',');\n            }\n            else {\n                return _polyfillHostNoCombinator + m[3];\n            }\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostContextPartReplacer = /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    function (host, part, suffix) {\n        if (part.indexOf(_polyfillHost) > -1) {\n            return this._colonHostPartReplacer(host, part, suffix);\n        }\n        else {\n            return host + part + suffix + ', ' + part + ' ' + host + suffix;\n        }\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostPartReplacer = /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    function (host, part, suffix) {\n        return host + part.replace(_polyfillHost, '') + suffix;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertShadowDOMSelectors = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelectors = /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (cssText, scopeSelector, hostSelector) {\n        var _this = this;\n        return processRules(cssText, function (rule) {\n            var /** @type {?} */ selector = rule.selector;\n            var /** @type {?} */ content = rule.content;\n            if (rule.selector[0] != '@') {\n                selector =\n                    _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n            }\n            return new CssRule(selector, content);\n        });\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelector = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector, strict) {\n        var _this = this;\n        return selector.split(',')\n            .map(function (part) { return part.trim().split(_shadowDeepSelectors); })\n            .map(function (deepParts) {\n            var shallowPart = deepParts[0], otherParts = deepParts.slice(1);\n            var /** @type {?} */ applyScope = function (shallowPart) {\n                if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                    return strict ?\n                        _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                        _this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n                }\n                else {\n                    return shallowPart;\n                }\n            };\n            return [applyScope(shallowPart)].concat(otherParts).join(' ');\n        })\n            .join(', ');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._selectorNeedsScoping = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector) {\n        var /** @type {?} */ re = this._makeScopeMatcher(scopeSelector);\n        return !re.test(selector);\n    };\n    /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._makeScopeMatcher = /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    function (scopeSelector) {\n        var /** @type {?} */ lre = /\\[/g;\n        var /** @type {?} */ rre = /\\]/g;\n        scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n        return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        // Difference from webcomponents.js: scopeSelector could not be an array\n        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySimpleSelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n        _polyfillHostRe.lastIndex = 0;\n        if (_polyfillHostRe.test(selector)) {\n            var /** @type {?} */ replaceBy_1 = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\n            return selector\n                .replace(_polyfillHostNoCombinatorRe, function (hnc, selector) {\n                return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                    return before + replaceBy_1 + colon + after;\n                });\n            })\n                .replace(_polyfillHostRe, replaceBy_1 + ' ');\n        }\n        return scopeSelector + ' ' + selector;\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applyStrictSelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        var _this = this;\n        var /** @type {?} */ isRe = /\\[is=([^\\]]*)\\]/g;\n        scopeSelector = scopeSelector.replace(isRe, function (_) {\n            var parts = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                parts[_i - 1] = arguments[_i];\n            }\n            return parts[0];\n        });\n        var /** @type {?} */ attrName = '[' + scopeSelector + ']';\n        var /** @type {?} */ _scopeSelectorPart = function (p) {\n            var /** @type {?} */ scopedP = p.trim();\n            if (!scopedP) {\n                return '';\n            }\n            if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n            }\n            else {\n                // remove :host since it should be unnecessary\n                var /** @type {?} */ t = p.replace(_polyfillHostRe, '');\n                if (t.length > 0) {\n                    var /** @type {?} */ matches = t.match(/([^:]*)(:*)(.*)/);\n                    if (matches) {\n                        scopedP = matches[1] + attrName + matches[2] + matches[3];\n                    }\n                }\n            }\n            return scopedP;\n        };\n        var /** @type {?} */ safeContent = new SafeSelector(selector);\n        selector = safeContent.content();\n        var /** @type {?} */ scopedSelector = '';\n        var /** @type {?} */ startIndex = 0;\n        var /** @type {?} */ res;\n        var /** @type {?} */ sep = /( |>|\\+|~(?!=))\\s*/g;\n        var /** @type {?} */ scopeAfter = selector.indexOf(_polyfillHostNoCombinator);\n        while ((res = sep.exec(selector)) !== null) {\n            var /** @type {?} */ separator = res[1];\n            var /** @type {?} */ part = selector.slice(startIndex, res.index).trim();\n            // if a selector appears before :host-context it should not be shimmed as it\n            // matches on ancestor elements and not on elements in the host's shadow\n            var /** @type {?} */ scopedPart = startIndex >= scopeAfter ? _scopeSelectorPart(part) : part;\n            scopedSelector += scopedPart + \" \" + separator + \" \";\n            startIndex = sep.lastIndex;\n        }\n        scopedSelector += _scopeSelectorPart(selector.substring(startIndex));\n        // replace the placeholders with their original values\n        return safeContent.restore(scopedSelector);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillHostInCssText = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        return selector.replace(_colonHostContextRe, _polyfillHostContext)\n            .replace(_colonHostRe, _polyfillHost);\n    };\n    return ShadowCss;\n}());\nvar SafeSelector = (function () {\n    function SafeSelector(selector) {\n        var _this = this;\n        this.placeholders = [];\n        this.index = 0;\n        // Replaces attribute selectors with placeholders.\n        // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n        selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(keep);\n            _this.index++;\n            return replaceBy;\n        });\n        // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n        // WS and \"+\" would otherwise be interpreted as selector separators.\n        this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(exp);\n            _this.index++;\n            return pseudo + replaceBy;\n        });\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    SafeSelector.prototype.restore = /**\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        var _this = this;\n        return content.replace(/__ph-(\\d+)__/g, function (ph, index) { return _this.placeholders[+index]; });\n    };\n    /**\n     * @return {?}\n     */\n    SafeSelector.prototype.content = /**\n     * @return {?}\n     */\n    function () { return this._content; };\n    return SafeSelector;\n}());\nvar _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\nvar _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _polyfillHost = '-shadowcsshost';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g,\n    /\\/shadow-deep\\//g,\n    /\\/shadow\\//g,\n];\n// The deep combinator is deprecated in the CSS spec\n// Support for `>>>`, `deep`, `::ng-deep` is then also deprecated and will be removed in the future.\n// see https://github.com/angular/angular/pull/17677\nvar _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)|(?:::ng-deep)/g;\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stripComments(input) {\n    return input.replace(_commentRe, '');\n}\n// all comments except inline source mapping\nvar _sourceMappingUrlRe = /\\/\\*\\s*#\\s*sourceMappingURL=[\\s\\S]+?\\*\\//;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction extractSourceMappingUrl(input) {\n    var /** @type {?} */ matcher = input.match(_sourceMappingUrlRe);\n    return matcher ? matcher[0] : '';\n}\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar CssRule = (function () {\n    function CssRule(selector, content) {\n        this.selector = selector;\n        this.content = content;\n    }\n    return CssRule;\n}());\n/**\n * @param {?} input\n * @param {?} ruleCallback\n * @return {?}\n */\nfunction processRules(input, ruleCallback) {\n    var /** @type {?} */ inputWithEscapedBlocks = escapeBlocks(input);\n    var /** @type {?} */ nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ selector = m[2];\n        var /** @type {?} */ content = '';\n        var /** @type {?} */ suffix = m[4];\n        var /** @type {?} */ contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var /** @type {?} */ rule = ruleCallback(new CssRule(selector, content));\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n}\nvar StringWithEscapedBlocks = (function () {\n    function StringWithEscapedBlocks(escapedString, blocks) {\n        this.escapedString = escapedString;\n        this.blocks = blocks;\n    }\n    return StringWithEscapedBlocks;\n}());\n/**\n * @param {?} input\n * @return {?}\n */\nfunction escapeBlocks(input) {\n    var /** @type {?} */ inputParts = input.split(_curlyRe);\n    var /** @type {?} */ resultParts = [];\n    var /** @type {?} */ escapedBlocks = [];\n    var /** @type {?} */ bracketCount = 0;\n    var /** @type {?} */ currentBlockParts = [];\n    for (var /** @type {?} */ partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var /** @type {?} */ part = inputParts[partIndex];\n        if (part == CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part == OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\nvar CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\nvar StylesCompileDependency = (function () {\n    function StylesCompileDependency(name, moduleUrl, setValue) {\n        this.name = name;\n        this.moduleUrl = moduleUrl;\n        this.setValue = setValue;\n    }\n    return StylesCompileDependency;\n}());\nvar CompiledStylesheet = (function () {\n    function CompiledStylesheet(outputCtx, stylesVar, dependencies, isShimmed, meta) {\n        this.outputCtx = outputCtx;\n        this.stylesVar = stylesVar;\n        this.dependencies = dependencies;\n        this.isShimmed = isShimmed;\n        this.meta = meta;\n    }\n    return CompiledStylesheet;\n}());\nvar StyleCompiler = (function () {\n    function StyleCompiler(_urlResolver) {\n        this._urlResolver = _urlResolver;\n        this._shadowCss = new ShadowCss();\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    function (outputCtx, comp) {\n        var /** @type {?} */ template = /** @type {?} */ ((comp.template));\n        return this._compileStyles(outputCtx, comp, new CompileStylesheetMetadata({\n            styles: template.styles,\n            styleUrls: template.styleUrls,\n            moduleUrl: identifierModuleUrl(comp.type)\n        }), this.needsStyleShim(comp), true);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?=} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileStyles = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?=} shim\n     * @return {?}\n     */\n    function (outputCtx, comp, stylesheet, shim) {\n        if (shim === void 0) { shim = this.needsStyleShim(comp); }\n        return this._compileStyles(outputCtx, comp, stylesheet, shim, false);\n    };\n    /**\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.needsStyleShim = /**\n     * @param {?} comp\n     * @return {?}\n     */\n    function (comp) {\n        return /** @type {?} */ ((comp.template)).encapsulation === ViewEncapsulation.Emulated;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} shim\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    StyleCompiler.prototype._compileStyles = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} shim\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    function (outputCtx, comp, stylesheet, shim, isComponentStylesheet) {\n        var _this = this;\n        var /** @type {?} */ styleExpressions = stylesheet.styles.map(function (plainStyle) { return literal(_this._shimIfNeeded(plainStyle, shim)); });\n        var /** @type {?} */ dependencies = [];\n        stylesheet.styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ exprIndex = styleExpressions.length;\n            // Note: This placeholder will be filled later.\n            styleExpressions.push(/** @type {?} */ ((null)));\n            dependencies.push(new StylesCompileDependency(getStylesVarName(null), styleUrl, function (value) { return styleExpressions[exprIndex] = outputCtx.importExpr(value); }));\n        });\n        // styles variable contains plain strings and arrays of other styles arrays (recursive),\n        // so we set its type to dynamic.\n        var /** @type {?} */ stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n        var /** @type {?} */ stmt = variable(stylesVar)\n            .set(literalArr(styleExpressions, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])))\n            .toDeclStmt(null, isComponentStylesheet ? [StmtModifier.Final] : [\n            StmtModifier.Final, StmtModifier.Exported\n        ]);\n        outputCtx.statements.push(stmt);\n        return new CompiledStylesheet(outputCtx, stylesVar, dependencies, shim, stylesheet);\n    };\n    /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype._shimIfNeeded = /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    function (style, shim) {\n        return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;\n    };\n    return StyleCompiler;\n}());\n/**\n * @param {?} component\n * @return {?}\n */\nfunction getStylesVarName(component) {\n    var /** @type {?} */ result = \"styles\";\n    if (component) {\n        result += \"_\" + identifierName(component.type);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PRESERVE_WS_ATTR_NAME = 'ngPreserveWhitespaces';\nvar SKIP_WS_TRIM_TAGS = new Set(['pre', 'template', 'textarea', 'script', 'style']);\n// Equivalent to \\s with \\u00a0 (non-breaking space) excluded.\n// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\nvar WS_CHARS = ' \\f\\n\\r\\t\\v\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff';\nvar NO_WS_REGEXP = new RegExp(\"[^\" + WS_CHARS + \"]\");\nvar WS_REPLACE_REGEXP = new RegExp(\"[\" + WS_CHARS + \"]{2,}\", 'g');\n/**\n * @param {?} attrs\n * @return {?}\n */\nfunction hasPreserveWhitespacesAttr(attrs) {\n    return attrs.some(function (attr) { return attr.name === PRESERVE_WS_ATTR_NAME; });\n}\n/**\n * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n * and later on replaced by a space. We are re-implementing the same idea here.\n * @param {?} value\n * @return {?}\n */\nfunction replaceNgsp(value) {\n    // lexer is replacing the &ngsp; pseudo-entity with NGSP_UNICODE\n    return value.replace(new RegExp(NGSP_UNICODE, 'g'), ' ');\n}\n/**\n * This visitor can walk HTML parse tree and remove / trim text nodes using the following rules:\n * - consider spaces, tabs and new lines as whitespace characters;\n * - drop text nodes consisting of whitespace characters only;\n * - for all other text nodes replace consecutive whitespace characters with one space;\n * - convert &ngsp; pseudo-entity to a single space;\n *\n * Removal and trimming of whitespaces have positive performance impact (less code to generate\n * while compiling templates, faster view creation). At the same time it can be \"destructive\"\n * in some cases (whitespaces can influence layout). Because of the potential of breaking layout\n * this visitor is not activated by default in Angular 5 and people need to explicitly opt-in for\n * whitespace removal. The default option for whitespace removal will be revisited in Angular 6\n * and might be changed to \"on\" by default.\n */\nvar WhitespaceVisitor = (function () {\n    function WhitespaceVisitor() {\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        if (SKIP_WS_TRIM_TAGS.has(element.name) || hasPreserveWhitespacesAttr(element.attrs)) {\n            // don't descent into elements where we need to preserve whitespaces\n            // but still visit all attributes to eliminate one used as a market to preserve WS\n            return new Element(element.name, visitAll(this, element.attrs), element.children, element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n        }\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return attribute.name !== PRESERVE_WS_ATTR_NAME ? attribute : null;\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        var /** @type {?} */ isNotBlank = text.value.match(NO_WS_REGEXP);\n        if (isNotBlank) {\n            return new Text(replaceNgsp(text.value).replace(WS_REPLACE_REGEXP, ' '), text.sourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return comment; };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return expansionCase; };\n    return WhitespaceVisitor;\n}());\n/**\n * @param {?} htmlAstWithErrors\n * @return {?}\n */\nfunction removeWhitespaces(htmlAstWithErrors) {\n    return new ParseTreeResult(visitAll(new WhitespaceVisitor(), htmlAstWithErrors.rootNodes), htmlAstWithErrors.errors);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// http://cldr.unicode.org/index/cldr-spec/plural-rules\nvar PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n/**\n * Expands special forms into elements.\n *\n * For example,\n *\n * ```\n * { messages.length, plural,\n *   =0 {zero}\n *   =1 {one}\n *   other {more than one}\n * }\n * ```\n *\n * will be expanded into\n *\n * ```\n * <ng-container [ngPlural]=\"messages.length\">\n *   <ng-template ngPluralCase=\"=0\">zero</ng-template>\n *   <ng-template ngPluralCase=\"=1\">one</ng-template>\n *   <ng-template ngPluralCase=\"other\">more than one</ng-template>\n * </ng-container>\n * ```\n * @param {?} nodes\n * @return {?}\n */\nfunction expandNodes(nodes) {\n    var /** @type {?} */ expander = new _Expander();\n    return new ExpansionResult(visitAll(expander, nodes), expander.isExpanded, expander.errors);\n}\nvar ExpansionResult = (function () {\n    function ExpansionResult(nodes, expanded, errors) {\n        this.nodes = nodes;\n        this.expanded = expanded;\n        this.errors = errors;\n    }\n    return ExpansionResult;\n}());\nvar ExpansionError = (function (_super) {\n    __extends(ExpansionError, _super);\n    function ExpansionError(span, errorMsg) {\n        return _super.call(this, span, errorMsg) || this;\n    }\n    return ExpansionError;\n}(ParseError));\n/**\n * Expand expansion forms (plural, select) to directives\n *\n * \\@internal\n */\nvar _Expander = (function () {\n    function _Expander() {\n        this.isExpanded = false;\n        this.errors = [];\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { return attribute; };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return text; };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return comment; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        this.isExpanded = true;\n        return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n            _expandDefaultForm(icu, this.errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        throw new Error('Should not be reached');\n    };\n    return _Expander;\n}());\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandPluralForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n            errors.push(new ExpansionError(c.valueSourceSpan, \"Plural cases should be \\\"=<number>\\\" or one of \" + PLURAL_CASES.join(\", \")));\n        }\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        return new Element(\"ng-template\", [new Attribute$1('ngPluralCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandDefaultForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        if (c.value === 'other') {\n            // other is the default case when no values match\n            return new Element(\"ng-template\", [new Attribute$1('ngSwitchDefault', '', c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n        }\n        return new Element(\"ng-template\", [new Attribute$1('ngSwitchCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar PROPERTY_PARTS_SEPARATOR = '.';\nvar ATTRIBUTE_PREFIX = 'attr';\nvar CLASS_PREFIX = 'class';\nvar STYLE_PREFIX = 'style';\nvar ANIMATE_PROP_PREFIX = 'animate-';\n/** @enum {number} */\nvar BoundPropertyType = {\n    DEFAULT: 0,\n    LITERAL_ATTR: 1,\n    ANIMATION: 2,\n};\nBoundPropertyType[BoundPropertyType.DEFAULT] = \"DEFAULT\";\nBoundPropertyType[BoundPropertyType.LITERAL_ATTR] = \"LITERAL_ATTR\";\nBoundPropertyType[BoundPropertyType.ANIMATION] = \"ANIMATION\";\n/**\n * Represents a parsed property.\n */\nvar BoundProperty = (function () {\n    function BoundProperty(name, expression, type, sourceSpan) {\n        this.name = name;\n        this.expression = expression;\n        this.type = type;\n        this.sourceSpan = sourceSpan;\n        this.isLiteral = this.type === BoundPropertyType.LITERAL_ATTR;\n        this.isAnimation = this.type === BoundPropertyType.ANIMATION;\n    }\n    return BoundProperty;\n}());\n/**\n * Parses bindings in templates and in the directive host area.\n */\nvar BindingParser = (function () {\n    function BindingParser(_exprParser, _interpolationConfig, _schemaRegistry, pipes, _targetErrors) {\n        var _this = this;\n        this._exprParser = _exprParser;\n        this._interpolationConfig = _interpolationConfig;\n        this._schemaRegistry = _schemaRegistry;\n        this._targetErrors = _targetErrors;\n        this.pipesByName = new Map();\n        this._usedPipes = new Map();\n        pipes.forEach(function (pipe) { return _this.pipesByName.set(pipe.name, pipe); });\n    }\n    /**\n     * @return {?}\n     */\n    BindingParser.prototype.getUsedPipes = /**\n     * @return {?}\n     */\n    function () { return Array.from(this._usedPipes.values()); };\n    /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostPropertyAsts = /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (dirMeta, elementSelector, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostProperties) {\n            var /** @type {?} */ boundProps_1 = [];\n            Object.keys(dirMeta.hostProperties).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostProperties[propName];\n                if (typeof expression === 'string') {\n                    _this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host property binding \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return boundProps_1.map(function (prop) { return _this.createElementPropertyAst(elementSelector, prop); });\n        }\n        return null;\n    };\n    /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostEventAsts = /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (dirMeta, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostListeners) {\n            var /** @type {?} */ targetEventAsts_1 = [];\n            Object.keys(dirMeta.hostListeners).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostListeners[propName];\n                if (typeof expression === 'string') {\n                    _this.parseEvent(propName, expression, sourceSpan, [], targetEventAsts_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host listener \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return targetEventAsts_1;\n        }\n        return null;\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.parseInterpolation = /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = /** @type {?} */ ((this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig)));\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    BindingParser.prototype.parseInlineTemplateBinding = /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (prefixToken, value, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n        var /** @type {?} */ bindings = this._parseTemplateBindings(prefixToken, value, sourceSpan);\n        for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n            var /** @type {?} */ binding = bindings[i];\n            if (binding.keyIsVar) {\n                targetVars.push(new VariableAst(binding.key, binding.name, sourceSpan));\n            }\n            else if (binding.expression) {\n                this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n            else {\n                targetMatchableAttrs.push([binding.key, '']);\n                this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseTemplateBindings = /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (prefixToken, value, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ bindingsResult = this._exprParser.parseTemplateBindings(prefixToken, value, sourceInfo);\n            this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n            bindingsResult.templateBindings.forEach(function (binding) {\n                if (binding.expression) {\n                    _this._checkPipes(binding.expression, sourceSpan);\n                }\n            });\n            bindingsResult.warnings.forEach(function (warning) { _this._reportError(warning, sourceSpan, ParseErrorLevel.WARNING); });\n            return bindingsResult.templateBindings;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return [];\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parseLiteralAttr = /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        if (_isAnimationLabel(name)) {\n            name = name.substring(1);\n            if (value) {\n                this._reportError(\"Assigning animation triggers via @prop=\\\"exp\\\" attributes with an expression is invalid.\" +\n                    \" Use property bindings (e.g. [@prop]=\\\"exp\\\") or use an attribute without a value (e.g. @prop) instead.\", sourceSpan, ParseErrorLevel.ERROR);\n            }\n            this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            targetProps.push(new BoundProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), BoundPropertyType.LITERAL_ATTR, sourceSpan));\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyBinding = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ isAnimationProp = false;\n        if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n            isAnimationProp = true;\n            name = name.substring(ANIMATE_PROP_PREFIX.length);\n        }\n        else if (_isAnimationLabel(name)) {\n            isAnimationProp = true;\n            name = name.substring(1);\n        }\n        if (isAnimationProp) {\n            this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyInterpolation = /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ expr = this.parseInterpolation(value, sourceSpan);\n        if (expr) {\n            this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parsePropertyAst = /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.DEFAULT, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimation = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n        // This will occur when a @trigger is not paired with an expression.\n        // For animations it is valid to not have an expression since */void\n        // states will be applied by angular when the element is attached/detached\n        var /** @type {?} */ ast = this._parseBinding(expression || 'undefined', false, sourceSpan);\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.ANIMATION, sourceSpan));\n    };\n    /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseBinding = /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, isHostBinding, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = isHostBinding ?\n                this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n                this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    BindingParser.prototype.createElementPropertyAst = /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    function (elementSelector, boundProp) {\n        if (boundProp.isAnimation) {\n            return new BoundElementPropertyAst(boundProp.name, PropertyBindingType.Animation, SecurityContext.NONE, boundProp.expression, null, boundProp.sourceSpan);\n        }\n        var /** @type {?} */ unit = null;\n        var /** @type {?} */ bindingType = /** @type {?} */ ((undefined));\n        var /** @type {?} */ boundPropertyName = null;\n        var /** @type {?} */ parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n        var /** @type {?} */ securityContexts = /** @type {?} */ ((undefined));\n        // Check check for special cases (prefix style, attr, class)\n        if (parts.length > 1) {\n            if (parts[0] == ATTRIBUTE_PREFIX) {\n                boundPropertyName = parts[1];\n                this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n                securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n                var /** @type {?} */ nsSeparatorIdx = boundPropertyName.indexOf(':');\n                if (nsSeparatorIdx > -1) {\n                    var /** @type {?} */ ns = boundPropertyName.substring(0, nsSeparatorIdx);\n                    var /** @type {?} */ name_1 = boundPropertyName.substring(nsSeparatorIdx + 1);\n                    boundPropertyName = mergeNsAndName(ns, name_1);\n                }\n                bindingType = PropertyBindingType.Attribute;\n            }\n            else if (parts[0] == CLASS_PREFIX) {\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Class;\n                securityContexts = [SecurityContext.NONE];\n            }\n            else if (parts[0] == STYLE_PREFIX) {\n                unit = parts.length > 2 ? parts[2] : null;\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Style;\n                securityContexts = [SecurityContext.STYLE];\n            }\n        }\n        // If not a special case, use the full property name\n        if (boundPropertyName === null) {\n            boundPropertyName = this._schemaRegistry.getMappedPropName(boundProp.name);\n            securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n            bindingType = PropertyBindingType.Property;\n            this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n        }\n        return new BoundElementPropertyAst(boundPropertyName, bindingType, securityContexts[0], boundProp.expression, unit, boundProp.sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype.parseEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        if (_isAnimationLabel(name)) {\n            name = name.substr(1);\n            this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n        }\n        else {\n            this._parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimationEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetEvents) {\n        var /** @type {?} */ matches = splitAtPeriod(name, [name, '']);\n        var /** @type {?} */ eventName = matches[0];\n        var /** @type {?} */ phase = matches[1].toLowerCase();\n        if (phase) {\n            switch (phase) {\n                case 'start':\n                case 'done':\n                    var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n                    targetEvents.push(new BoundEventAst(eventName, null, phase, ast, sourceSpan));\n                    break;\n                default:\n                    this._reportError(\"The provided animation output phase value \\\"\" + phase + \"\\\" for \\\"@\" + eventName + \"\\\" is not supported (use start or done)\", sourceSpan);\n                    break;\n            }\n        }\n        else {\n            this._reportError(\"The animation trigger output event (@\" + eventName + \") is missing its phase value name (start or done are currently supported)\", sourceSpan);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        // long format: 'target: eventName'\n        var _a = splitAtColon(name, [/** @type {?} */ ((null)), name]), target = _a[0], eventName = _a[1];\n        var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n        targetMatchableAttrs.push([/** @type {?} */ ((name)), /** @type {?} */ ((ast.source))]);\n        targetEvents.push(new BoundEventAst(eventName, target, null, ast, sourceSpan));\n        // Don't detect directives for event names for now,\n        // so don't add the event name to the matchableAttrs\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseAction = /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n            if (ast) {\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            }\n            if (!ast || ast.ast instanceof EmptyExpr) {\n                this._reportError(\"Empty expressions are not allowed\", sourceSpan);\n                return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n            }\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    BindingParser.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._reportExpressionParserErrors = /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (errors, sourceSpan) {\n        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n            var error = errors_1[_i];\n            this._reportError(error.message, sourceSpan);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._checkPipes = /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (ast, sourceSpan) {\n        var _this = this;\n        if (ast) {\n            var /** @type {?} */ collector = new PipeCollector();\n            ast.visit(collector);\n            collector.pipes.forEach(function (ast, pipeName) {\n                var /** @type {?} */ pipeMeta = _this.pipesByName.get(pipeName);\n                if (!pipeMeta) {\n                    _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", new ParseSourceSpan(sourceSpan.start.moveBy(ast.span.start), sourceSpan.start.moveBy(ast.span.end)));\n                }\n                else {\n                    _this._usedPipes.set(pipeName, pipeMeta);\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    BindingParser.prototype._validatePropertyOrAttributeName = /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    function (propName, sourceSpan, isAttr) {\n        var /** @type {?} */ report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n            this._schemaRegistry.validateProperty(propName);\n        if (report.error) {\n            this._reportError(/** @type {?} */ ((report.msg)), sourceSpan, ParseErrorLevel.ERROR);\n        }\n    };\n    return BindingParser;\n}());\nvar PipeCollector = (function (_super) {\n    __extends(PipeCollector, _super);\n    function PipeCollector() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.pipes = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    PipeCollector.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.pipes.set(ast.name, ast);\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    return PipeCollector;\n}(RecursiveAstVisitor));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _isAnimationLabel(name) {\n    return name[0] == '@';\n}\n/**\n * @param {?} registry\n * @param {?} selector\n * @param {?} propName\n * @param {?} isAttribute\n * @return {?}\n */\nfunction calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n    var /** @type {?} */ ctxs = [];\n    CssSelector.parse(selector).forEach(function (selector) {\n        var /** @type {?} */ elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n        var /** @type {?} */ notElementNames = new Set(selector.notSelectors.filter(function (selector) { return selector.isElementSelector(); })\n            .map(function (selector) { return selector.element; }));\n        var /** @type {?} */ possibleElementNames = elementNames.filter(function (elementName) { return !notElementNames.has(elementName); });\n        ctxs.push.apply(ctxs, possibleElementNames.map(function (elementName) { return registry.securityContext(elementName, propName, isAttribute); }));\n    });\n    return ctxs.length === 0 ? [SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n// Group 1 = \"bind-\"\nvar KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nvar KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nvar KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nvar KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nvar KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nvar KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nvar IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nvar IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nvar IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nvar IDENT_EVENT_IDX = 10;\n// deprecated in 4.x\nvar TEMPLATE_ELEMENT = 'template';\n// deprecated in 4.x\nvar TEMPLATE_ATTR = 'template';\nvar TEMPLATE_ATTR_PREFIX = '*';\nvar CLASS_ATTR = 'class';\nvar TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\nvar TEMPLATE_ELEMENT_DEPRECATION_WARNING = 'The <template> element is deprecated. Use <ng-template> instead';\nvar TEMPLATE_ATTR_DEPRECATION_WARNING = 'The template attribute is deprecated. Use an ng-template element instead.';\nvar warningCounts = {};\n/**\n * @param {?} warnings\n * @return {?}\n */\nfunction warnOnlyOnce(warnings) {\n    return function (error) {\n        if (warnings.indexOf(error.msg) !== -1) {\n            warningCounts[error.msg] = (warningCounts[error.msg] || 0) + 1;\n            return warningCounts[error.msg] <= 1;\n        }\n        return true;\n    };\n}\nvar TemplateParseError = (function (_super) {\n    __extends(TemplateParseError, _super);\n    function TemplateParseError(message, span, level) {\n        return _super.call(this, span, message, level) || this;\n    }\n    return TemplateParseError;\n}(ParseError));\nvar TemplateParseResult = (function () {\n    function TemplateParseResult(templateAst, usedPipes, errors) {\n        this.templateAst = templateAst;\n        this.usedPipes = usedPipes;\n        this.errors = errors;\n    }\n    return TemplateParseResult;\n}());\nvar TemplateParser = (function () {\n    function TemplateParser(_config, _reflector, _exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n        this._config = _config;\n        this._reflector = _reflector;\n        this._exprParser = _exprParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._htmlParser = _htmlParser;\n        this._console = _console;\n        this.transforms = transforms;\n    }\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.parse = /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ result = this.tryParse(component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces);\n        var /** @type {?} */ warnings = /** @type {?} */ ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.WARNING; }).filter(warnOnlyOnce([TEMPLATE_ATTR_DEPRECATION_WARNING, TEMPLATE_ELEMENT_DEPRECATION_WARNING]));\n        var /** @type {?} */ errors = /** @type {?} */ ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.ERROR; });\n        if (warnings.length > 0) {\n            this._console.warn(\"Template parse warnings:\\n\" + warnings.join('\\n'));\n        }\n        if (errors.length > 0) {\n            var /** @type {?} */ errorString = errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString, errors);\n        }\n        return { template: /** @type {?} */ ((result.templateAst)), pipes: /** @type {?} */ ((result.usedPipes)) };\n    };\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParse = /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ htmlParseResult = typeof template === 'string' ? /** @type {?} */ ((this._htmlParser)).parse(template, templateUrl, true, this.getInterpolationConfig(component)) :\n            template;\n        if (!preserveWhitespaces) {\n            htmlParseResult = removeWhitespaces(htmlParseResult);\n        }\n        return this.tryParseHtml(this.expandHtml(htmlParseResult), component, directives, pipes, schemas);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParseHtml = /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    function (htmlAstWithErrors, component, directives, pipes, schemas) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        var /** @type {?} */ usedPipes = [];\n        if (htmlAstWithErrors.rootNodes.length > 0) {\n            var /** @type {?} */ uniqDirectives = removeSummaryDuplicates(directives);\n            var /** @type {?} */ uniqPipes = removeSummaryDuplicates(pipes);\n            var /** @type {?} */ providerViewContext = new ProviderViewContext(this._reflector, component);\n            var /** @type {?} */ interpolationConfig = /** @type {?} */ ((undefined));\n            if (component.template && component.template.interpolation) {\n                interpolationConfig = {\n                    start: component.template.interpolation[0],\n                    end: component.template.interpolation[1]\n                };\n            }\n            var /** @type {?} */ bindingParser = new BindingParser(this._exprParser, /** @type {?} */ ((interpolationConfig)), this._schemaRegistry, uniqPipes, errors);\n            var /** @type {?} */ parseVisitor = new TemplateParseVisitor(this._reflector, this._config, providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n            result = visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n            errors.push.apply(errors, providerViewContext.errors);\n            usedPipes.push.apply(usedPipes, bindingParser.getUsedPipes());\n        }\n        else {\n            result = [];\n        }\n        this._assertNoReferenceDuplicationOnTemplate(result, errors);\n        if (errors.length > 0) {\n            return new TemplateParseResult(result, usedPipes, errors);\n        }\n        if (this.transforms) {\n            this.transforms.forEach(function (transform) { result = templateVisitAll(transform, result); });\n        }\n        return new TemplateParseResult(result, usedPipes, errors);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    TemplateParser.prototype.expandHtml = /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    function (htmlAstWithErrors, forced) {\n        if (forced === void 0) { forced = false; }\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        if (errors.length == 0 || forced) {\n            // Transform ICU messages to angular directives\n            var /** @type {?} */ expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n            errors.push.apply(errors, expandedHtmlAst.errors);\n            htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n        }\n        return htmlAstWithErrors;\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    TemplateParser.prototype.getInterpolationConfig = /**\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        if (component.template) {\n            return InterpolationConfig.fromArray(component.template.interpolation);\n        }\n        return undefined;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate = /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    function (result, errors) {\n        var /** @type {?} */ existingReferences = [];\n        result.filter(function (element) { return !!(/** @type {?} */ (element)).references; })\n            .forEach(function (element) {\n            return (/** @type {?} */ (element)).references.forEach(function (reference) {\n                var /** @type {?} */ name = reference.name;\n                if (existingReferences.indexOf(name) < 0) {\n                    existingReferences.push(name);\n                }\n                else {\n                    var /** @type {?} */ error = new TemplateParseError(\"Reference \\\"#\" + name + \"\\\" is defined several times\", reference.sourceSpan, ParseErrorLevel.ERROR);\n                    errors.push(error);\n                }\n            });\n        });\n    };\n    return TemplateParser;\n}());\nvar TemplateParseVisitor = (function () {\n    function TemplateParseVisitor(reflector, config, providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n        var _this = this;\n        this.reflector = reflector;\n        this.config = config;\n        this.providerViewContext = providerViewContext;\n        this._bindingParser = _bindingParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._schemas = _schemas;\n        this._targetErrors = _targetErrors;\n        this.selectorMatcher = new SelectorMatcher();\n        this.directivesIndex = new Map();\n        this.ngContentCount = 0;\n        // Note: queries start with id 1 so we can use the number in a Bloom filter!\n        this.contentQueryStartId = providerViewContext.component.viewQueries.length + 1;\n        directives.forEach(function (directive, index) {\n            var /** @type {?} */ selector = CssSelector.parse(/** @type {?} */ ((directive.selector)));\n            _this.selectorMatcher.addSelectables(selector, directive);\n            _this.directivesIndex.set(directive, index);\n        });\n    }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return null; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return null; };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    function (text, parent) {\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        var /** @type {?} */ valueNoNgsp = replaceNgsp(text.value);\n        var /** @type {?} */ expr = this._bindingParser.parseInterpolation(valueNoNgsp, /** @type {?} */ ((text.sourceSpan)));\n        return expr ? new BoundTextAst(expr, ngContentIndex, /** @type {?} */ ((text.sourceSpan))) :\n            new TextAst(valueNoNgsp, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    function (element, parent) {\n        var _this = this;\n        var /** @type {?} */ queryStartIndex = this.contentQueryStartId;\n        var /** @type {?} */ nodeName = element.name;\n        var /** @type {?} */ preparsedElement = preparseElement(element);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE) {\n            // Skipping <script> for security reasons\n            // Skipping <style> as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n            isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n            // Skipping stylesheets with either relative urls or package scheme as we already processed\n            // them in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ matchableAttrs = [];\n        var /** @type {?} */ elementOrDirectiveProps = [];\n        var /** @type {?} */ elementOrDirectiveRefs = [];\n        var /** @type {?} */ elementVars = [];\n        var /** @type {?} */ events = [];\n        var /** @type {?} */ templateElementOrDirectiveProps = [];\n        var /** @type {?} */ templateMatchableAttrs = [];\n        var /** @type {?} */ templateElementVars = [];\n        var /** @type {?} */ hasInlineTemplates = false;\n        var /** @type {?} */ attrs = [];\n        var /** @type {?} */ isTemplateElement = isTemplate(element, this.config.enableLegacyTemplate, function (m, span) { return _this._reportError(m, span, ParseErrorLevel.WARNING); });\n        element.attrs.forEach(function (attr) {\n            var /** @type {?} */ hasBinding = _this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n            var /** @type {?} */ templateBindingsSource;\n            var /** @type {?} */ prefixToken;\n            var /** @type {?} */ normalizedName = _this._normalizeAttributeName(attr.name);\n            if (_this.config.enableLegacyTemplate && normalizedName == TEMPLATE_ATTR) {\n                _this._reportError(TEMPLATE_ATTR_DEPRECATION_WARNING, attr.sourceSpan, ParseErrorLevel.WARNING);\n                templateBindingsSource = attr.value;\n            }\n            else if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n                templateBindingsSource = attr.value;\n                prefixToken = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length) + ':';\n            }\n            var /** @type {?} */ hasTemplateBinding = templateBindingsSource != null;\n            if (hasTemplateBinding) {\n                if (hasInlineTemplates) {\n                    _this._reportError(\"Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *\", attr.sourceSpan);\n                }\n                hasInlineTemplates = true;\n                _this._bindingParser.parseInlineTemplateBinding(/** @type {?} */ ((prefixToken)), /** @type {?} */ ((templateBindingsSource)), attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, templateElementVars);\n            }\n            if (!hasBinding && !hasTemplateBinding) {\n                // don't include the bindings as attributes as well in the AST\n                attrs.push(_this.visitAttribute(attr, null));\n                matchableAttrs.push([attr.name, attr.value]);\n            }\n        });\n        var /** @type {?} */ elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);\n        var _a = this._parseDirectives(this.selectorMatcher, elementCssSelector), directiveMetas = _a.directives, matchElement = _a.matchElement;\n        var /** @type {?} */ references = [];\n        var /** @type {?} */ boundDirectivePropNames = new Set();\n        var /** @type {?} */ directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, /** @type {?} */ ((element.sourceSpan)), references, boundDirectivePropNames);\n        var /** @type {?} */ elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, boundDirectivePropNames);\n        var /** @type {?} */ isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n        var /** @type {?} */ providerContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), isViewRoot, directiveAsts, attrs, references, isTemplateElement, queryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n        var /** @type {?} */ children = visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? /** @type {?} */ ((parent.providerContext)) : providerContext));\n        providerContext.afterElement();\n        // Override the actual selector when the `ngProjectAs` attribute is provided\n        var /** @type {?} */ projectionSelector = preparsedElement.projectAs != null ?\n            CssSelector.parse(preparsedElement.projectAs)[0] :\n            elementCssSelector;\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(projectionSelector)));\n        var /** @type {?} */ parsedElement;\n        if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n            if (element.children && !element.children.every(_isEmptyTextNode)) {\n                this._reportError(\"<ng-content> element cannot have content.\", /** @type {?} */ ((element.sourceSpan)));\n            }\n            parsedElement = new NgContentAst(this.ngContentCount++, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else if (isTemplateElement) {\n            this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n            this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, /** @type {?} */ ((element.sourceSpan)));\n            parsedElement = new EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else {\n            this._assertElementExists(matchElement, element);\n            this._assertOnlyOneComponent(directiveAsts, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ ngContentIndex_1 = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n            parsedElement = new ElementAst(nodeName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex_1, element.sourceSpan, element.endSourceSpan || null);\n        }\n        if (hasInlineTemplates) {\n            var /** @type {?} */ templateQueryStartIndex = this.contentQueryStartId;\n            var /** @type {?} */ templateSelector = createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);\n            var templateDirectiveMetas = this._parseDirectives(this.selectorMatcher, templateSelector).directives;\n            var /** @type {?} */ templateBoundDirectivePropNames = new Set();\n            var /** @type {?} */ templateDirectiveAsts = this._createDirectiveAsts(true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [], /** @type {?} */ ((element.sourceSpan)), [], templateBoundDirectivePropNames);\n            var /** @type {?} */ templateElementProps = this._createElementPropertyAsts(element.name, templateElementOrDirectiveProps, templateBoundDirectivePropNames);\n            this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ templateProviderContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), parent.isTemplateElement, templateDirectiveAsts, [], [], true, templateQueryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n            templateProviderContext.afterElement();\n            parsedElement = new EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches, [parsedElement], ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        return parsedElement;\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAttr = /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n        var /** @type {?} */ name = this._normalizeAttributeName(attr.name);\n        var /** @type {?} */ value = attr.value;\n        var /** @type {?} */ srcSpan = attr.sourceSpan;\n        var /** @type {?} */ bindParts = name.match(BIND_NAME_REGEXP);\n        var /** @type {?} */ hasBinding = false;\n        if (bindParts !== null) {\n            hasBinding = true;\n            if (bindParts[KW_BIND_IDX] != null) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[KW_LET_IDX]) {\n                if (isTemplateElement) {\n                    var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                    this._parseVariable(identifier, value, srcSpan, targetVars);\n                }\n                else {\n                    this._reportError(\"\\\"let-\\\" is only supported on ng-template elements.\", srcSpan);\n                }\n            }\n            else if (bindParts[KW_REF_IDX]) {\n                var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                this._parseReference(identifier, value, srcSpan, targetRefs);\n            }\n            else if (bindParts[KW_ON_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_BINDON_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_AT_IDX]) {\n                this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[IDENT_PROPERTY_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_EVENT_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n        }\n        else {\n            hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        if (!hasBinding) {\n            this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        return hasBinding;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._normalizeAttributeName = /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    function (attrName) {\n        return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseVariable = /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (identifier, value, sourceSpan, targetVars) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n        }\n        targetVars.push(new VariableAst(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseReference = /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    function (identifier, value, sourceSpan, targetRefs) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n        }\n        targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAssignmentEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        this._bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\n    };\n    /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseDirectives = /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    function (selectorMatcher, elementCssSelector) {\n        var _this = this;\n        // Need to sort the directives so that we get consistent results throughout,\n        // as selectorMatcher uses Maps inside.\n        // Also deduplicate directives as they might match more than one time!\n        var /** @type {?} */ directives = new Array(this.directivesIndex.size);\n        // Whether any directive selector matches on the element name\n        var /** @type {?} */ matchElement = false;\n        selectorMatcher.match(elementCssSelector, function (selector, directive) {\n            directives[/** @type {?} */ ((_this.directivesIndex.get(directive)))] = directive;\n            matchElement = matchElement || selector.hasElementSelector();\n        });\n        return {\n            directives: directives.filter(function (dir) { return !!dir; }),\n            matchElement: matchElement,\n        };\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectiveAsts = /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    function (isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences, targetBoundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ matchedReferences = new Set();\n        var /** @type {?} */ component = /** @type {?} */ ((null));\n        var /** @type {?} */ directiveAsts = directives.map(function (directive) {\n            var /** @type {?} */ sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, \"Directive \" + identifierName(directive.type));\n            if (directive.isComponent) {\n                component = directive;\n            }\n            var /** @type {?} */ directiveProperties = [];\n            var /** @type {?} */ hostProperties = /** @type {?} */ ((_this._bindingParser.createDirectiveHostPropertyAsts(directive, elementName, sourceSpan)));\n            // Note: We need to check the host properties here as well,\n            // as we don't know the element name in the DirectiveWrapperCompiler yet.\n            hostProperties = _this._checkPropertiesInSchema(elementName, hostProperties);\n            var /** @type {?} */ hostEvents = /** @type {?} */ ((_this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan)));\n            _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties, targetBoundDirectivePropNames);\n            elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n                if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n                    (elOrDirRef.isReferenceToDirective(directive))) {\n                    targetReferences.push(new ReferenceAst(elOrDirRef.name, createTokenForReference(directive.type.reference), elOrDirRef.sourceSpan));\n                    matchedReferences.add(elOrDirRef.name);\n                }\n            });\n            var /** @type {?} */ contentQueryStartId = _this.contentQueryStartId;\n            _this.contentQueryStartId += directive.queries.length;\n            return new DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, contentQueryStartId, sourceSpan);\n        });\n        elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n            if (elOrDirRef.value.length > 0) {\n                if (!matchedReferences.has(elOrDirRef.name)) {\n                    _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + elOrDirRef.value + \"\\\"\", elOrDirRef.sourceSpan);\n                }\n            }\n            else if (!component) {\n                var /** @type {?} */ refToken = /** @type {?} */ ((null));\n                if (isTemplateElement) {\n                    refToken = createTokenForExternalReference(_this.reflector, Identifiers.TemplateRef);\n                }\n                targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.sourceSpan));\n            }\n        });\n        return directiveAsts;\n    };\n    /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectivePropertyAsts = /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    function (directiveProperties, boundProps, targetBoundDirectiveProps, targetBoundDirectivePropNames) {\n        if (directiveProperties) {\n            var /** @type {?} */ boundPropsByName_1 = new Map();\n            boundProps.forEach(function (boundProp) {\n                var /** @type {?} */ prevValue = boundPropsByName_1.get(boundProp.name);\n                if (!prevValue || prevValue.isLiteral) {\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    boundPropsByName_1.set(boundProp.name, boundProp);\n                }\n            });\n            Object.keys(directiveProperties).forEach(function (dirProp) {\n                var /** @type {?} */ elProp = directiveProperties[dirProp];\n                var /** @type {?} */ boundProp = boundPropsByName_1.get(elProp);\n                // Bindings are optional, so this binding only needs to be set up if an expression is given.\n                if (boundProp) {\n                    targetBoundDirectivePropNames.add(boundProp.name);\n                    if (!isEmptyExpression(boundProp.expression)) {\n                        targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createElementPropertyAsts = /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    function (elementName, props, boundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ boundElementProps = [];\n        props.forEach(function (prop) {\n            if (!prop.isLiteral && !boundDirectivePropNames.has(prop.name)) {\n                boundElementProps.push(_this._bindingParser.createElementPropertyAst(elementName, prop));\n            }\n        });\n        return this._checkPropertiesInSchema(elementName, boundElementProps);\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectives = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        return directives.filter(function (directive) { return directive.directive.isComponent; });\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectiveNames = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        return this._findComponentDirectives(directives)\n            .map(function (directive) { return /** @type {?} */ ((identifierName(directive.directive.type))); });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertOnlyOneComponent = /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (directives, sourceSpan) {\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 1) {\n            this._reportError(\"More than one component matched on this element.\\n\" +\n                \"Make sure that only one component's selector can match a given element.\\n\" +\n                (\"Conflicting components: \" + componentTypeNames.join(',')), sourceSpan);\n        }\n    };\n    /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertElementExists = /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    function (matchElement, element) {\n        var /** @type {?} */ elName = element.name.replace(/^:xhtml:/, '');\n        if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n            var /** @type {?} */ errorMsg = \"'\" + elName + \"' is not a known element:\\n\";\n            errorMsg +=\n                \"1. If '\" + elName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n            if (elName.indexOf('-') > -1) {\n                errorMsg +=\n                    \"2. If '\" + elName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n            }\n            else {\n                errorMsg +=\n                    \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n            }\n            this._reportError(errorMsg, /** @type {?} */ ((element.sourceSpan)));\n        }\n    };\n    /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (directives, elementProps, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 0) {\n            this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\n        }\n        elementProps.forEach(function (prop) {\n            _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", sourceSpan);\n        });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    function (directives, events) {\n        var _this = this;\n        var /** @type {?} */ allDirectiveEvents = new Set();\n        directives.forEach(function (directive) {\n            Object.keys(directive.directive.outputs).forEach(function (k) {\n                var /** @type {?} */ eventName = directive.directive.outputs[k];\n                allDirectiveEvents.add(eventName);\n            });\n        });\n        events.forEach(function (event) {\n            if (event.target != null || !allDirectiveEvents.has(event.name)) {\n                _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", event.sourceSpan);\n            }\n        });\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._checkPropertiesInSchema = /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    function (elementName, boundProps) {\n        var _this = this;\n        // Note: We can't filter out empty expressions before this method,\n        // as we still want to validate them!\n        return boundProps.filter(function (boundProp) {\n            if (boundProp.type === PropertyBindingType.Property &&\n                !_this._schemaRegistry.hasProperty(elementName, boundProp.name, _this._schemas)) {\n                var /** @type {?} */ errorMsg = \"Can't bind to '\" + boundProp.name + \"' since it isn't a known property of '\" + elementName + \"'.\";\n                if (elementName.startsWith('ng-')) {\n                    errorMsg +=\n                        \"\\n1. If '\" + boundProp.name + \"' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.\" +\n                            \"\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                else if (elementName.indexOf('-') > -1) {\n                    errorMsg +=\n                        \"\\n1. If '\" + elementName + \"' is an Angular component and it has '\" + boundProp.name + \"' input, then verify that it is part of this module.\" +\n                            (\"\\n2. If '\" + elementName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\") +\n                            \"\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                _this._reportError(errorMsg, boundProp.sourceSpan);\n            }\n            return !isEmptyExpression(boundProp.value);\n        });\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    return TemplateParseVisitor;\n}());\nvar NonBindableVisitor = (function () {\n    function NonBindableVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    function (ast, parent) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE ||\n            preparsedElement.type === PreparsedElementType.STYLESHEET) {\n            // Skipping <script> for security reasons\n            // Skipping <style> and stylesheets as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ attrNameAndValues = ast.attrs.map(function (attr) { return [attr.name, attr.value]; });\n        var /** @type {?} */ selector = createElementCssSelector(ast.name, attrNameAndValues);\n        var /** @type {?} */ ngContentIndex = parent.findNgContentIndex(selector);\n        var /** @type {?} */ children = visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n        return new ElementAst(ast.name, visitAll(this, ast.attrs), [], [], [], [], [], false, [], children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    function (text, parent) {\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        return new TextAst(text.value, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return expansionCase; };\n    return NonBindableVisitor;\n}());\n/**\n * A reference to an element or directive in a template. E.g., the reference in this template:\n *\n * <div #myMenu=\"coolMenu\">\n *\n * would be {name: 'myMenu', value: 'coolMenu', sourceSpan: ...}\n */\nvar ElementOrDirectiveRef = (function () {\n    function ElementOrDirectiveRef(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /** Gets whether this is a reference to the given directive. */\n    /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    ElementOrDirectiveRef.prototype.isReferenceToDirective = /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    function (directive) {\n        return splitExportAs(directive.exportAs).indexOf(this.value) !== -1;\n    };\n    return ElementOrDirectiveRef;\n}());\n/**\n * Splits a raw, potentially comma-delimted `exportAs` value into an array of names.\n * @param {?} exportAs\n * @return {?}\n */\nfunction splitExportAs(exportAs) {\n    return exportAs ? exportAs.split(',').map(function (e) { return e.trim(); }) : [];\n}\n/**\n * @param {?} classAttrValue\n * @return {?}\n */\nfunction splitClasses(classAttrValue) {\n    return classAttrValue.trim().split(/\\s+/g);\n}\nvar ElementContext = (function () {\n    function ElementContext(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n        this.isTemplateElement = isTemplateElement;\n        this._ngContentIndexMatcher = _ngContentIndexMatcher;\n        this._wildcardNgContentIndex = _wildcardNgContentIndex;\n        this.providerContext = providerContext;\n    }\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    ElementContext.create = /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    function (isTemplateElement, directives, providerContext) {\n        var /** @type {?} */ matcher = new SelectorMatcher();\n        var /** @type {?} */ wildcardNgContentIndex = /** @type {?} */ ((null));\n        var /** @type {?} */ component = directives.find(function (directive) { return directive.directive.isComponent; });\n        if (component) {\n            var /** @type {?} */ ngContentSelectors = /** @type {?} */ ((component.directive.template)).ngContentSelectors;\n            for (var /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n                var /** @type {?} */ selector = ngContentSelectors[i];\n                if (selector === '*') {\n                    wildcardNgContentIndex = i;\n                }\n                else {\n                    matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n                }\n            }\n        }\n        return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ElementContext.prototype.findNgContentIndex = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        var /** @type {?} */ ngContentIndices = [];\n        this._ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\n        ngContentIndices.sort();\n        if (this._wildcardNgContentIndex != null) {\n            ngContentIndices.push(this._wildcardNgContentIndex);\n        }\n        return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n    };\n    return ElementContext;\n}());\n/**\n * @param {?} elementName\n * @param {?} attributes\n * @return {?}\n */\nfunction createElementCssSelector(elementName, attributes) {\n    var /** @type {?} */ cssSelector = new CssSelector();\n    var /** @type {?} */ elNameNoNs = splitNsName(elementName)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (var /** @type {?} */ i = 0; i < attributes.length; i++) {\n        var /** @type {?} */ attrName = attributes[i][0];\n        var /** @type {?} */ attrNameNoNs = splitNsName(attrName)[1];\n        var /** @type {?} */ attrValue = attributes[i][1];\n        cssSelector.addAttribute(attrNameNoNs, attrValue);\n        if (attrName.toLowerCase() == CLASS_ATTR) {\n            var /** @type {?} */ classes = splitClasses(attrValue);\n            classes.forEach(function (className) { return cssSelector.addClassName(className); });\n        }\n    }\n    return cssSelector;\n}\nvar EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nvar NON_BINDABLE_VISITOR = new NonBindableVisitor();\n/**\n * @param {?} node\n * @return {?}\n */\nfunction _isEmptyTextNode(node) {\n    return node instanceof Text && node.value.trim().length == 0;\n}\n/**\n * @template T\n * @param {?} items\n * @return {?}\n */\nfunction removeSummaryDuplicates(items) {\n    var /** @type {?} */ map = new Map();\n    items.forEach(function (item) {\n        if (!map.get(item.type.reference)) {\n            map.set(item.type.reference, item);\n        }\n    });\n    return Array.from(map.values());\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction isEmptyExpression(ast) {\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    return ast instanceof EmptyExpr;\n}\n/**\n * @param {?} el\n * @param {?} enableLegacyTemplate\n * @param {?} reportDeprecation\n * @return {?}\n */\nfunction isTemplate(el, enableLegacyTemplate, reportDeprecation) {\n    if (isNgTemplate(el.name))\n        return true;\n    var /** @type {?} */ tagNoNs = splitNsName(el.name)[1];\n    // `<template>` is HTML and case insensitive\n    if (tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n        if (enableLegacyTemplate && tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n            reportDeprecation(TEMPLATE_ELEMENT_DEPRECATION_WARNING, /** @type {?} */ ((el.sourceSpan)));\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventHandlerVars = (function () {\n    function EventHandlerVars() {\n    }\n    EventHandlerVars.event = variable('$event');\n    return EventHandlerVars;\n}());\n/**\n * @record\n */\n\nvar ConvertActionBindingResult = (function () {\n    function ConvertActionBindingResult(stmts, allowDefault) {\n        this.stmts = stmts;\n        this.allowDefault = allowDefault;\n    }\n    return ConvertActionBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression is\n * used in an action binding (e.g. an event handler).\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} action\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertActionBinding(localResolver, implicitReceiver, action, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ actionWithoutBuiltins = convertPropertyBindingBuiltins({\n        createLiteralArrayConverter: function (argCount) {\n            // Note: no caching for literal arrays in actions.\n            return function (args) { return literalArr(args); };\n        },\n        createLiteralMapConverter: function (keys) {\n            // Note: no caching for literal maps in actions.\n            return function (values) {\n                var /** @type {?} */ entries = keys.map(function (k, i) {\n                    return ({\n                        key: k.key,\n                        value: values[i],\n                        quoted: k.quoted,\n                    });\n                });\n                return literalMap(entries);\n            };\n        },\n        createPipeConverter: function (name) {\n            throw new Error(\"Illegal State: Actions are not allowed to contain pipes. Pipe: \" + name);\n        }\n    }, action);\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ actionStmts = [];\n    flattenStatements(actionWithoutBuiltins.visit(visitor, _Mode.Statement), actionStmts);\n    prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n    var /** @type {?} */ lastIndex = actionStmts.length - 1;\n    var /** @type {?} */ preventDefaultVar = /** @type {?} */ ((null));\n    if (lastIndex >= 0) {\n        var /** @type {?} */ lastStatement = actionStmts[lastIndex];\n        var /** @type {?} */ returnExpr = convertStmtIntoExpression(lastStatement);\n        if (returnExpr) {\n            // Note: We need to cast the result of the method call to dynamic,\n            // as it might be a void method!\n            preventDefaultVar = createPreventDefaultVar(bindingId);\n            actionStmts[lastIndex] =\n                preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false)))\n                    .toDeclStmt(null, [StmtModifier.Final]);\n        }\n    }\n    return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertPropertyBindingBuiltins(converterFactory, ast) {\n    return convertBuiltins(converterFactory, ast);\n}\nvar ConvertPropertyBindingResult = (function () {\n    function ConvertPropertyBindingResult(stmts, currValExpr) {\n        this.stmts = stmts;\n        this.currValExpr = currValExpr;\n    }\n    return ConvertPropertyBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression\n * is used in property binding. The expression has to be preprocessed via\n * `convertPropertyBindingBuiltins`.\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} expressionWithoutBuiltins\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertPropertyBinding(localResolver, implicitReceiver, expressionWithoutBuiltins, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ currValExpr = createCurrValueExpr(bindingId);\n    var /** @type {?} */ stmts = [];\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ outputExpr = expressionWithoutBuiltins.visit(visitor, _Mode.Expression);\n    if (visitor.temporaryCount) {\n        for (var /** @type {?} */ i = 0; i < visitor.temporaryCount; i++) {\n            stmts.push(temporaryDeclaration(bindingId, i));\n        }\n    }\n    stmts.push(currValExpr.set(outputExpr).toDeclStmt(null, [StmtModifier.Final]));\n    return new ConvertPropertyBindingResult(stmts, currValExpr);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertBuiltins(converterFactory, ast) {\n    var /** @type {?} */ visitor = new _BuiltinAstConverter(converterFactory);\n    return ast.visit(visitor);\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryName(bindingId, temporaryNumber) {\n    return \"tmp_\" + bindingId + \"_\" + temporaryNumber;\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryDeclaration(bindingId, temporaryNumber) {\n    return new DeclareVarStmt(temporaryName(bindingId, temporaryNumber), NULL_EXPR);\n}\n/**\n * @param {?} temporaryCount\n * @param {?} bindingId\n * @param {?} statements\n * @return {?}\n */\nfunction prependTemporaryDecls(temporaryCount, bindingId, statements) {\n    for (var /** @type {?} */ i = temporaryCount - 1; i >= 0; i--) {\n        statements.unshift(temporaryDeclaration(bindingId, i));\n    }\n}\n/** @enum {number} */\nvar _Mode = {\n    Statement: 0,\n    Expression: 1,\n};\n_Mode[_Mode.Statement] = \"Statement\";\n_Mode[_Mode.Expression] = \"Expression\";\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureStatementMode(mode, ast) {\n    if (mode !== _Mode.Statement) {\n        throw new Error(\"Expected a statement, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureExpressionMode(mode, ast) {\n    if (mode !== _Mode.Expression) {\n        throw new Error(\"Expected an expression, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} expr\n * @return {?}\n */\nfunction convertToStatementIfNeeded(mode, expr) {\n    if (mode === _Mode.Statement) {\n        return expr.toStmt();\n    }\n    else {\n        return expr;\n    }\n}\nvar _BuiltinAstConverter = (function (_super) {\n    __extends(_BuiltinAstConverter, _super);\n    function _BuiltinAstConverter(_converterFactory) {\n        var _this = _super.call(this) || this;\n        _this._converterFactory = _converterFactory;\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = [ast.exp].concat(ast.args).map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createPipeConverter(ast.name, args.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.expressions.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralArrayConverter(ast.expressions.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.values.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralMapConverter(ast.keys));\n    };\n    return _BuiltinAstConverter;\n}(AstTransformer));\nvar _AstToIrVisitor = (function () {\n    function _AstToIrVisitor(_localResolver, _implicitReceiver, bindingId) {\n        this._localResolver = _localResolver;\n        this._implicitReceiver = _implicitReceiver;\n        this.bindingId = bindingId;\n        this._nodeMap = new Map();\n        this._resultMap = new Map();\n        this._currentTemporary = 0;\n        this.temporaryCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ op;\n        switch (ast.operation) {\n            case '+':\n                op = BinaryOperator.Plus;\n                break;\n            case '-':\n                op = BinaryOperator.Minus;\n                break;\n            case '*':\n                op = BinaryOperator.Multiply;\n                break;\n            case '/':\n                op = BinaryOperator.Divide;\n                break;\n            case '%':\n                op = BinaryOperator.Modulo;\n                break;\n            case '&&':\n                op = BinaryOperator.And;\n                break;\n            case '||':\n                op = BinaryOperator.Or;\n                break;\n            case '==':\n                op = BinaryOperator.Equals;\n                break;\n            case '!=':\n                op = BinaryOperator.NotEquals;\n                break;\n            case '===':\n                op = BinaryOperator.Identical;\n                break;\n            case '!==':\n                op = BinaryOperator.NotIdentical;\n                break;\n            case '<':\n                op = BinaryOperator.Lower;\n                break;\n            case '>':\n                op = BinaryOperator.Bigger;\n                break;\n            case '<=':\n                op = BinaryOperator.LowerEquals;\n                break;\n            case '>=':\n                op = BinaryOperator.BiggerEquals;\n                break;\n            default:\n                throw new Error(\"Unsupported operation \" + ast.operation);\n        }\n        return convertToStatementIfNeeded(mode, new BinaryOperatorExpr(op, this._visit(ast.left, _Mode.Expression), this._visit(ast.right, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureStatementMode(mode, ast);\n        return this.visitAll(ast.expressions, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ value = this._visit(ast.condition, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, value.conditional(this._visit(ast.trueExp, _Mode.Expression), this._visit(ast.falseExp, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal state: Pipes should have been converted into functions. Pipe: \" + ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ convertedArgs = this.visitAll(ast.args, _Mode.Expression);\n        var /** @type {?} */ fnResult;\n        if (ast instanceof BuiltinFunctionCall) {\n            fnResult = ast.converter(convertedArgs);\n        }\n        else {\n            fnResult = this._visit(/** @type {?} */ ((ast.target)), _Mode.Expression).callFn(convertedArgs);\n        }\n        return convertToStatementIfNeeded(mode, fnResult);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        return this._implicitReceiver;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        var /** @type {?} */ args = [literal(ast.expressions.length)];\n        for (var /** @type {?} */ i = 0; i < ast.strings.length - 1; i++) {\n            args.push(literal(ast.strings[i]));\n            args.push(this._visit(ast.expressions[i], _Mode.Expression));\n        }\n        args.push(literal(ast.strings[ast.strings.length - 1]));\n        return ast.expressions.length <= 9 ?\n            importExpr(Identifiers.inlineInterpolate).callFn(args) :\n            importExpr(Identifiers.interpolate).callFn([args[0], literalArr(args.slice(1))]);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            return convertToStatementIfNeeded(mode, this._visit(ast.obj, _Mode.Expression).key(this._visit(ast.key, _Mode.Expression)));\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ obj = this._visit(ast.obj, _Mode.Expression);\n        var /** @type {?} */ key = this._visit(ast.key, _Mode.Expression);\n        var /** @type {?} */ value = this._visit(ast.value, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal State: literal arrays should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal State: literal maps should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, literal(ast.value));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this._localResolver.getLocal(name); };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ args = this.visitAll(ast.args, _Mode.Expression);\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                var /** @type {?} */ varExpr = this._getLocal(ast.name);\n                if (varExpr) {\n                    result = varExpr.callFn(args);\n                }\n            }\n            if (result == null) {\n                result = receiver.callMethod(ast.name, args);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, not(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, assertNotNull(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                result = this._getLocal(ast.name);\n            }\n            if (result == null) {\n                result = receiver.prop(ast.name);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n        if (receiver === this._implicitReceiver) {\n            var /** @type {?} */ varExpr = this._getLocal(ast.name);\n            if (varExpr) {\n                throw new Error('Cannot assign to a reference or variable!');\n            }\n        }\n        return convertToStatementIfNeeded(mode, receiver.prop(ast.name).set(this._visit(ast.value, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitAll = /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    function (asts, mode) {\n        var _this = this;\n        return asts.map(function (ast) { return _this._visit(ast, mode); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Quotes are not supported for evaluation!\\n        Statement: \" + ast.uninterpretedExpression + \" located at \" + ast.location);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._visit = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ result = this._resultMap.get(ast);\n        if (result)\n            return result;\n        return (this._nodeMap.get(ast) || ast).visit(this, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.convertSafeAccess = /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, leftMostSafe, mode) {\n        // If the expression contains a safe access node on the left it needs to be converted to\n        // an expression that guards the access to the member by checking the receiver for blank. As\n        // execution proceeds from left to right, the left most part of the expression must be guarded\n        // first but, because member access is left associative, the right side of the expression is at\n        // the top of the AST. The desired result requires lifting a copy of the the left part of the\n        // expression up to test it for blank before generating the unguarded version.\n        // Consider, for example the following expression: a?.b.c?.d.e\n        // This results in the ast:\n        //         .\n        //        / \\\n        //       ?.   e\n        //      /  \\\n        //     .    d\n        //    / \\\n        //   ?.  c\n        //  /  \\\n        // a    b\n        // The following tree should be generated:\n        //\n        //        /---- ? ----\\\n        //       /      |      \\\n        //     a   /--- ? ---\\  null\n        //        /     |     \\\n        //       .      .     null\n        //      / \\    / \\\n        //     .  c   .   e\n        //    / \\    / \\\n        //   a   b  ,   d\n        //         / \\\n        //        .   c\n        //       / \\\n        //      a   b\n        //\n        // Notice that the first guard condition is the left hand of the left most safe access node\n        // which comes in as leftMostSafe to this routine.\n        var /** @type {?} */ guardedExpression = this._visit(leftMostSafe.receiver, _Mode.Expression);\n        var /** @type {?} */ temporary = /** @type {?} */ ((undefined));\n        if (this.needsTemporary(leftMostSafe.receiver)) {\n            // If the expression has method calls or pipes then we need to save the result into a\n            // temporary variable to avoid calling stateful or impure code more than once.\n            temporary = this.allocateTemporary();\n            // Preserve the result in the temporary variable\n            guardedExpression = temporary.set(guardedExpression);\n            // Ensure all further references to the guarded expression refer to the temporary instead.\n            this._resultMap.set(leftMostSafe.receiver, temporary);\n        }\n        var /** @type {?} */ condition = guardedExpression.isBlank();\n        // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n        // leftMostNode with its unguarded version in the call to `this.visit()`.\n        if (leftMostSafe instanceof SafeMethodCall) {\n            this._nodeMap.set(leftMostSafe, new MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n        }\n        else {\n            this._nodeMap.set(leftMostSafe, new PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n        }\n        // Recursively convert the node now without the guarded member access.\n        var /** @type {?} */ access = this._visit(ast, _Mode.Expression);\n        // Remove the mapping. This is not strictly required as the converter only traverses each node\n        // once but is safer if the conversion is changed to traverse the nodes more than once.\n        this._nodeMap.delete(leftMostSafe);\n        // If we allocated a temporary, release it.\n        if (temporary) {\n            this.releaseTemporary(temporary);\n        }\n        // Produce the conditional\n        return convertToStatementIfNeeded(mode, condition.conditional(literal(null), access));\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.leftMostSafeNode = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        return ast.visit({\n            visitBinary: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitChain: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitConditional: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitFunctionCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitImplicitReceiver: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitInterpolation: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitKeyedRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.obj); },\n            visitKeyedWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralArray: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralMap: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralPrimitive: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver); },\n            visitPipe: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitPrefixNot: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitNonNullAssert: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitPropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver); },\n            visitPropertyWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitQuote: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitSafeMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver) || ast; },\n            visitSafePropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) {\n                return visit(this, ast.receiver) || ast;\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.needsTemporary = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return ast && (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        var /** @type {?} */ visitSome = function (visitor, ast) {\n            return ast.some(function (ast) { return visit(visitor, ast); });\n        };\n        return ast.visit({\n            visitBinary: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.left) || visit(this, ast.right); },\n            visitChain: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitConditional: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) {\n                return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                    visit(this, ast.falseExp);\n            },\n            visitFunctionCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitImplicitReceiver: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitInterpolation: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visitSome(this, ast.expressions); },\n            visitKeyedRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitKeyedWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitLiteralArray: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitLiteralMap: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitLiteralPrimitive: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitPipe: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitPrefixNot: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.expression); },\n            visitNonNullAssert: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.expression); },\n            visitPropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitPropertyWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitQuote: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitSafeMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitSafePropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.allocateTemporary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tempNumber = this._currentTemporary++;\n        this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n        return new ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n    };\n    /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.releaseTemporary = /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    function (temporary) {\n        this._currentTemporary--;\n        if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n            throw new Error(\"Temporary \" + temporary.name + \" released out of order\");\n        }\n    };\n    return _AstToIrVisitor;\n}());\n/**\n * @param {?} arg\n * @param {?} output\n * @return {?}\n */\nfunction flattenStatements(arg, output) {\n    if (Array.isArray(arg)) {\n        (/** @type {?} */ (arg)).forEach(function (entry) { return flattenStatements(entry, output); });\n    }\n    else {\n        output.push(arg);\n    }\n}\nvar DefaultLocalResolver = (function () {\n    function DefaultLocalResolver() {\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DefaultLocalResolver.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name === EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        return null;\n    };\n    return DefaultLocalResolver;\n}());\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createCurrValueExpr(bindingId) {\n    return variable(\"currVal_\" + bindingId); // fix syntax highlighting: `\n}\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createPreventDefaultVar(bindingId) {\n    return variable(\"pd_\" + bindingId);\n}\n/**\n * @param {?} stmt\n * @return {?}\n */\nfunction convertStmtIntoExpression(stmt) {\n    if (stmt instanceof ExpressionStatement) {\n        return stmt.expr;\n    }\n    else if (stmt instanceof ReturnStatement) {\n        return stmt.value;\n    }\n    return null;\n}\nvar BuiltinFunctionCall = (function (_super) {\n    __extends(BuiltinFunctionCall, _super);\n    function BuiltinFunctionCall(span, args, converter) {\n        var _this = _super.call(this, span, null, args) || this;\n        _this.args = args;\n        _this.converter = converter;\n        return _this;\n    }\n    return BuiltinFunctionCall;\n}(FunctionCall));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generates code that is used to type check templates.\n */\nvar TypeCheckCompiler = (function () {\n    function TypeCheckCompiler(options, reflector) {\n        this.options = options;\n        this.reflector = reflector;\n    }\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     */\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     * @param {?} component\n     * @param {?} template\n     * @param {?} usedPipes\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    TypeCheckCompiler.prototype.compileComponent = /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     * @param {?} component\n     * @param {?} template\n     * @param {?} usedPipes\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    function (component, template, usedPipes, externalReferenceVars) {\n        var _this = this;\n        var /** @type {?} */ pipes = new Map();\n        usedPipes.forEach(function (p) { return pipes.set(p.name, p.type.reference); });\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder(_this.options, _this.reflector, externalReferenceVars, parent, component.type.reference, component.isHost, embeddedViewIndex, pipes, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        return visitor.build();\n    };\n    return TypeCheckCompiler;\n}());\nvar DYNAMIC_VAR_NAME = '_any';\nvar ViewBuilder = (function () {\n    function ViewBuilder(options, reflector, externalReferenceVars, parent, component, isHostComponent, embeddedViewIndex, pipes, viewBuilderFactory) {\n        this.options = options;\n        this.reflector = reflector;\n        this.externalReferenceVars = externalReferenceVars;\n        this.parent = parent;\n        this.component = component;\n        this.isHostComponent = isHostComponent;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.pipes = pipes;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.refOutputVars = new Map();\n        this.variables = [];\n        this.children = [];\n        this.updates = [];\n        this.actions = [];\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ViewBuilder.prototype.getOutputVar = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ varName;\n        if (type === this.component && this.isHostComponent) {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        else if (type instanceof StaticSymbol) {\n            varName = this.externalReferenceVars.get(type);\n        }\n        else {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        if (!varName) {\n            throw new Error(\"Illegal State: referring to a type without a variable \" + JSON.stringify(type));\n        }\n        return varName;\n    };\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    function (variables, astNodes) {\n        this.variables = variables;\n        templateVisitAll(this, astNodes);\n    };\n    /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    function (targetStatements) {\n        var _this = this;\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(targetStatements); });\n        var /** @type {?} */ viewStmts = [variable(DYNAMIC_VAR_NAME).set(NULL_EXPR).toDeclStmt(DYNAMIC_TYPE)];\n        var /** @type {?} */ bindingCount = 0;\n        this.updates.forEach(function (expression) {\n            var _a = _this.preprocessUpdateExpression(expression), sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var /** @type {?} */ bindingId = \"\" + bindingCount++;\n            var /** @type {?} */ nameResolver = context === _this.component ? _this : null;\n            var _b = convertPropertyBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId), stmts = _b.stmts, currValExpr = _b.currValExpr;\n            stmts.push(new ExpressionStatement(currValExpr));\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        this.actions.forEach(function (_a) {\n            var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var /** @type {?} */ bindingId = \"\" + bindingCount++;\n            var /** @type {?} */ nameResolver = context === _this.component ? _this : null;\n            var stmts = convertActionBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId).stmts;\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        var /** @type {?} */ viewName = \"_View_\" + this.component.name + \"_\" + this.embeddedViewIndex;\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(viewName, [], viewStmts);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ astWithSource = /** @type {?} */ (ast.value);\n        var /** @type {?} */ inter = /** @type {?} */ (astWithSource.ast);\n        inter.expressions.forEach(function (expr) {\n            return _this.updates.push({ context: _this.component, value: expr, sourceSpan: ast.sourceSpan });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitElementOrTemplate(ast);\n        // Note: The old view compiler used to use an `any` type\n        // for the context in any embedded view.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n            this.children.push(childVisitor);\n            childVisitor.visitAll(ast.variables, ast.children);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        this.visitElementOrTemplate(ast);\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        ast.inputs.forEach(function (inputAst) {\n            _this.updates.push({ context: _this.component, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n        });\n        templateVisitAll(this, ast.children);\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementOrTemplate = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        ast.directives.forEach(function (dirAst) { _this.visitDirective(dirAst); });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ outputVarType = /** @type {?} */ ((null));\n            // Note: The old view compiler used to use an `any` type\n            // for directives exposed via `exportAs`.\n            // We keep this behaivor behind a flag for now.\n            if (ref.value && ref.value.identifier && _this.options.fullTemplateTypeCheck) {\n                outputVarType = ref.value.identifier.reference;\n            }\n            else {\n                outputVarType = BuiltinTypeName.Dynamic;\n            }\n            _this.refOutputVars.set(ref.name, outputVarType);\n        });\n        ast.outputs.forEach(function (outputAst) {\n            _this.actions.push({ context: _this.component, value: outputAst.handler, sourceSpan: outputAst.sourceSpan });\n        });\n    };\n    /**\n     * @param {?} dirAst\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = /**\n     * @param {?} dirAst\n     * @return {?}\n     */\n    function (dirAst) {\n        var _this = this;\n        var /** @type {?} */ dirType = dirAst.directive.type.reference;\n        dirAst.inputs.forEach(function (input) {\n            return _this.updates.push({ context: _this.component, value: input.value, sourceSpan: input.sourceSpan });\n        });\n        // Note: The old view compiler used to use an `any` type\n        // for expressions in host properties / events.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            dirAst.hostProperties.forEach(function (inputAst) {\n                return _this.updates.push({ context: dirType, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n            });\n            dirAst.hostEvents.forEach(function (hostEventAst) {\n                return _this.actions.push({\n                    context: dirType,\n                    value: hostEventAst.handler,\n                    sourceSpan: hostEventAst.sourceSpan\n                });\n            });\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return variable(this.getOutputVar(BuiltinTypeName.Dynamic));\n        }\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent) {\n            var /** @type {?} */ outputVarType = void 0;\n            // check references\n            outputVarType = currBuilder.refOutputVars.get(name);\n            if (outputVarType == null) {\n                // check variables\n                var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n                if (varAst) {\n                    outputVarType = BuiltinTypeName.Dynamic;\n                }\n            }\n            if (outputVarType != null) {\n                return variable(this.getOutputVar(outputVarType));\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.pipeOutputVar = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ pipe = this.pipes.get(name);\n        if (!pipe) {\n            throw new Error(\"Illegal State: Could not find pipe \" + name + \" in template of \" + this.component);\n        }\n        return this.getOutputVar(pipe);\n    };\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype.preprocessUpdateExpression = /**\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        var _this = this;\n        return {\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) {\n                    return function (args) {\n                        var /** @type {?} */ arr = literalArr(args);\n                        // Note: The old view compiler used to use an `any` type\n                        // for arrays.\n                        return _this.options.fullTemplateTypeCheck ? arr : arr.cast(DYNAMIC_TYPE);\n                    };\n                },\n                createLiteralMapConverter: function (keys) {\n                    return function (values) {\n                        var /** @type {?} */ entries = keys.map(function (k, i) {\n                            return ({\n                                key: k.key,\n                                value: values[i],\n                                quoted: k.quoted,\n                            });\n                        });\n                        var /** @type {?} */ map = literalMap(entries);\n                        // Note: The old view compiler used to use an `any` type\n                        // for maps.\n                        return _this.options.fullTemplateTypeCheck ? map : map.cast(DYNAMIC_TYPE);\n                    };\n                },\n                createPipeConverter: function (name, argCount) {\n                    return function (args) {\n                        // Note: The old view compiler used to use an `any` type\n                        // for pipes.\n                        var /** @type {?} */ pipeExpr = _this.options.fullTemplateTypeCheck ?\n                            variable(_this.pipeOutputVar(name)) :\n                            variable(_this.getOutputVar(BuiltinTypeName.Dynamic));\n                        return pipeExpr.callMethod('transform', args);\n                    };\n                },\n            }, expression.value)\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return ViewBuilder;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CLASS_ATTR$1 = 'class';\nvar STYLE_ATTR = 'style';\nvar IMPLICIT_TEMPLATE_VAR = '\\$implicit';\nvar ViewCompileResult = (function () {\n    function ViewCompileResult(viewClassVar, rendererTypeVar) {\n        this.viewClassVar = viewClassVar;\n        this.rendererTypeVar = rendererTypeVar;\n    }\n    return ViewCompileResult;\n}());\nvar ViewCompiler = (function () {\n    function ViewCompiler(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    ViewCompiler.prototype.compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    function (outputCtx, component, template, styles, usedPipes) {\n        var _this = this;\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ staticQueryIds = findStaticQueryIds(template);\n        var /** @type {?} */ renderComponentVarName = /** @type {?} */ ((undefined));\n        if (!component.isHost) {\n            var /** @type {?} */ template_1 = /** @type {?} */ ((component.template));\n            var /** @type {?} */ customRenderData = [];\n            if (template_1.animations && template_1.animations.length) {\n                customRenderData.push(new LiteralMapEntry('animation', convertValueToOutputAst(outputCtx, template_1.animations), true));\n            }\n            var /** @type {?} */ renderComponentVar = variable(rendererTypeName(component.type.reference));\n            renderComponentVarName = /** @type {?} */ ((renderComponentVar.name));\n            outputCtx.statements.push(renderComponentVar\n                .set(importExpr(Identifiers.createRendererType2).callFn([new LiteralMapExpr([\n                    new LiteralMapEntry('encapsulation', literal(template_1.encapsulation), false),\n                    new LiteralMapEntry('styles', styles, false),\n                    new LiteralMapEntry('data', new LiteralMapExpr(customRenderData), false)\n                ])]))\n                .toDeclStmt(importType(Identifiers.RendererType2), [StmtModifier.Final, StmtModifier.Exported]));\n        }\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder$1(_this._reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        (_a = outputCtx.statements).push.apply(_a, visitor.build());\n        return new ViewCompileResult(visitor.viewName, renderComponentVarName);\n        var _a;\n    };\n    return ViewCompiler;\n}());\nvar LOG_VAR$1 = variable('_l');\nvar VIEW_VAR = variable('_v');\nvar CHECK_VAR = variable('_ck');\nvar COMP_VAR = variable('_co');\nvar EVENT_NAME_VAR = variable('en');\nvar ALLOW_DEFAULT_VAR = variable(\"ad\");\nvar ViewBuilder$1 = (function () {\n    function ViewBuilder(reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory) {\n        this.reflector = reflector;\n        this.outputCtx = outputCtx;\n        this.parent = parent;\n        this.component = component;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.usedPipes = usedPipes;\n        this.staticQueryIds = staticQueryIds;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.nodes = [];\n        this.purePipeNodeIndices = Object.create(null);\n        this.refNodeIndices = Object.create(null);\n        this.variables = [];\n        this.children = [];\n        // TODO(tbosch): The old view compiler used to use an `any` type\n        // for the context in any embedded view. We keep this behaivor for now\n        // to be able to introduce the new view compiler without too many errors.\n        this.compType = this.embeddedViewIndex > 0 ?\n            DYNAMIC_TYPE :\n            /** @type {?} */ ((expressionType(outputCtx.importExpr(this.component.type.reference))));\n        this.viewName = viewClassName(this.component.type.reference, this.embeddedViewIndex);\n    }\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    function (variables, astNodes) {\n        var _this = this;\n        this.variables = variables;\n        // create the pipes for the pure pipes immediately, so that we know their indices.\n        if (!this.parent) {\n            this.usedPipes.forEach(function (pipe) {\n                if (pipe.pure) {\n                    _this.purePipeNodeIndices[pipe.name] = _this._createPipe(null, pipe);\n                }\n            });\n        }\n        if (!this.parent) {\n            var /** @type {?} */ queryIds_1 = staticViewQueryIds(this.staticQueryIds);\n            this.component.viewQueries.forEach(function (query, queryIndex) {\n                // Note: queries start with id 1 so we can use the number in a Bloom filter!\n                var /** @type {?} */ queryId = queryIndex + 1;\n                var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n                var /** @type {?} */ flags = 134217728 /* TypeViewQuery */ | calcStaticDynamicQueryFlags(queryIds_1, queryId, query.first);\n                _this.nodes.push(function () {\n                    return ({\n                        sourceSpan: null,\n                        nodeFlags: flags,\n                        nodeDef: importExpr(Identifiers.queryDef).callFn([\n                            literal(flags), literal(queryId),\n                            new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                        ])\n                    });\n                });\n            });\n        }\n        templateVisitAll(this, astNodes);\n        if (this.parent && (astNodes.length === 0 || needsAdditionalRootNode(astNodes))) {\n            // if the view is an embedded view, then we need to add an additional root node in some cases\n            this.nodes.push(function () {\n                return ({\n                    sourceSpan: null,\n                    nodeFlags: 1 /* TypeElement */,\n                    nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                        literal(0 /* None */), NULL_EXPR, NULL_EXPR, literal(0)\n                    ])\n                });\n            });\n        }\n    };\n    /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    function (targetStatements) {\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(targetStatements); });\n        var _a = this._createNodeExpressions(), updateRendererStmts = _a.updateRendererStmts, updateDirectivesStmts = _a.updateDirectivesStmts, nodeDefExprs = _a.nodeDefExprs;\n        var /** @type {?} */ updateRendererFn = this._createUpdateFn(updateRendererStmts);\n        var /** @type {?} */ updateDirectivesFn = this._createUpdateFn(updateDirectivesStmts);\n        var /** @type {?} */ viewFlags = 0;\n        if (!this.parent && this.component.changeDetection === ChangeDetectionStrategy.OnPush) {\n            viewFlags |= 2 /* OnPush */;\n        }\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(this.viewName, [new FnParam(/** @type {?} */ ((LOG_VAR$1.name)))], [new ReturnStatement(importExpr(Identifiers.viewDef).callFn([\n                literal(viewFlags),\n                literalArr(nodeDefExprs),\n                updateDirectivesFn,\n                updateRendererFn,\n            ]))], importType(Identifiers.ViewDefinition), this.embeddedViewIndex === 0 ? [StmtModifier.Exported] : []);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    ViewBuilder.prototype._createUpdateFn = /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    function (updateStmts) {\n        var /** @type {?} */ updateFn;\n        if (updateStmts.length > 0) {\n            var /** @type {?} */ preStmts = [];\n            if (!this.component.isHost && findReadVarNames(updateStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            updateFn = fn([\n                new FnParam(/** @type {?} */ ((CHECK_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE)\n            ], preStmts.concat(updateStmts), INFERRED_TYPE);\n        }\n        else {\n            updateFn = NULL_EXPR;\n        }\n        return updateFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // ngContentDef(ngContentIndex: number, index: number): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 8 /* TypeNgContent */,\n                nodeDef: importExpr(Identifiers.ngContentDef).callFn([\n                    literal(ast.ngContentIndex), literal(ast.index)\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // textDef(ngContentIndex: number, constants: string[]): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(ast.ngContentIndex), literalArr([literal(ast.value)])\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var /** @type {?} */ astWithSource = /** @type {?} */ (ast.value);\n        var /** @type {?} */ inter = /** @type {?} */ (astWithSource.ast);\n        var /** @type {?} */ updateRendererExpressions = inter.expressions.map(function (expr, bindingIndex) {\n            return _this._preprocessUpdateExpression({ nodeIndex: nodeIndex, bindingIndex: bindingIndex, sourceSpan: ast.sourceSpan, context: COMP_VAR, value: expr });\n        });\n        // textDef(ngContentIndex: number, constants: string[]): NodeDef;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(ast.ngContentIndex), literalArr(inter.strings.map(function (s) { return literal(s); }))\n                ]),\n                updateRenderer: updateRendererExpressions\n            });\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, queryMatchesExpr = _a.queryMatchesExpr, hostEvents = _a.hostEvents;\n        var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n        this.children.push(childVisitor);\n        childVisitor.visitAll(ast.variables, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        // anchorDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n        //   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:\n        //   ViewDefinitionFactory): NodeDef;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    variable(childVisitor.viewName),\n                ])\n            });\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        // Using a null element name creates an anchor.\n        var /** @type {?} */ elName = isNgContainer(ast.name) ? null : ast.name;\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, usedEvents = _a.usedEvents, queryMatchesExpr = _a.queryMatchesExpr, dirHostBindings = _a.hostBindings, hostEvents = _a.hostEvents;\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        if (elName) {\n            var /** @type {?} */ hostBindings = ast.inputs\n                .map(function (inputAst) {\n                return ({\n                    context: /** @type {?} */ (COMP_VAR),\n                    inputAst: inputAst,\n                    dirAst: /** @type {?} */ (null),\n                });\n            })\n                .concat(dirHostBindings);\n            if (hostBindings.length) {\n                updateRendererExpressions =\n                    hostBindings.map(function (hostBinding, bindingIndex) {\n                        return _this._preprocessUpdateExpression({\n                            context: hostBinding.context,\n                            nodeIndex: nodeIndex,\n                            bindingIndex: bindingIndex,\n                            sourceSpan: hostBinding.inputAst.sourceSpan,\n                            value: hostBinding.inputAst.value\n                        });\n                    });\n                inputDefs = hostBindings.map(function (hostBinding) { return elementBindingDef(hostBinding.inputAst, hostBinding.dirAst); });\n            }\n            outputDefs = usedEvents.map(function (_a) {\n                var target = _a[0], eventName = _a[1];\n                return literalArr([literal(target), literal(eventName)]);\n            });\n        }\n        templateVisitAll(this, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var /** @type {?} */ compAst = ast.directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        var /** @type {?} */ compRendererType = /** @type {?} */ (NULL_EXPR);\n        var /** @type {?} */ compView = /** @type {?} */ (NULL_EXPR);\n        if (compAst) {\n            compView = this.outputCtx.importExpr(compAst.directive.componentViewType);\n            compRendererType = this.outputCtx.importExpr(compAst.directive.rendererType);\n        }\n        // elementDef(\n        //   flags: NodeFlags, matchedQueriesDsl: [string | number, QueryValueType][],\n        //   ngContentIndex: number, childCount: number, namespaceAndName: string,\n        //   fixedAttrs: [string, string][] = [],\n        //   bindings?: [BindingFlags, string, string | SecurityContext][],\n        //   outputs?: ([OutputType.ElementOutput | OutputType.DirectiveHostOutput, string, string])[],\n        //   handleEvent?: ElementHandleEventFn,\n        //   componentView?: () => ViewDefinition, componentRendererType?: RendererType2): NodeDef;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.elementDef).callFn([\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    literal(elName),\n                    elName ? fixedAttrsDef(ast) : NULL_EXPR,\n                    inputDefs.length ? literalArr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? literalArr(outputDefs) : NULL_EXPR,\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    compView,\n                    compRendererType,\n                ]),\n                updateRenderer: updateRendererExpressions\n            });\n        };\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitElementOrTemplate = /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    function (nodeIndex, ast) {\n        var _this = this;\n        var /** @type {?} */ flags = 0;\n        if (ast.hasViewContainer) {\n            flags |= 16777216 /* EmbeddedViews */;\n        }\n        var /** @type {?} */ usedEvents = new Map();\n        ast.outputs.forEach(function (event) {\n            var _a = elementEventNameAndTarget(event, null), name = _a.name, target = _a.target;\n            usedEvents.set(elementEventFullName(target, name), [target, name]);\n        });\n        ast.directives.forEach(function (dirAst) {\n            dirAst.hostEvents.forEach(function (event) {\n                var _a = elementEventNameAndTarget(event, dirAst), name = _a.name, target = _a.target;\n                usedEvents.set(elementEventFullName(target, name), [target, name]);\n            });\n        });\n        var /** @type {?} */ hostBindings = [];\n        var /** @type {?} */ hostEvents = [];\n        this._visitComponentFactoryResolverProvider(ast.directives);\n        ast.providers.forEach(function (providerAst, providerIndex) {\n            var /** @type {?} */ dirAst = /** @type {?} */ ((undefined));\n            var /** @type {?} */ dirIndex = /** @type {?} */ ((undefined));\n            ast.directives.forEach(function (localDirAst, i) {\n                if (localDirAst.directive.type.reference === tokenReference(providerAst.token)) {\n                    dirAst = localDirAst;\n                    dirIndex = i;\n                }\n            });\n            if (dirAst) {\n                var _a = _this._visitDirective(providerAst, dirAst, dirIndex, nodeIndex, ast.references, ast.queryMatches, usedEvents, /** @type {?} */ ((_this.staticQueryIds.get(/** @type {?} */ (ast))))), dirHostBindings = _a.hostBindings, dirHostEvents = _a.hostEvents;\n                hostBindings.push.apply(hostBindings, dirHostBindings);\n                hostEvents.push.apply(hostEvents, dirHostEvents);\n            }\n            else {\n                _this._visitProvider(providerAst, ast.queryMatches);\n            }\n        });\n        var /** @type {?} */ queryMatchExprs = [];\n        ast.queryMatches.forEach(function (match) {\n            var /** @type {?} */ valueType = /** @type {?} */ ((undefined));\n            if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ElementRef)) {\n                valueType = 0 /* ElementRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                valueType = 3 /* ViewContainerRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(valueType)]));\n            }\n        });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ valueType = /** @type {?} */ ((undefined));\n            if (!ref.value) {\n                valueType = 1 /* RenderElement */;\n            }\n            else if (tokenReference(ref.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(valueType)]));\n            }\n        });\n        ast.outputs.forEach(function (outputAst) {\n            hostEvents.push({ context: COMP_VAR, eventAst: outputAst, dirAst: /** @type {?} */ ((null)) });\n        });\n        return {\n            flags: flags,\n            usedEvents: Array.from(usedEvents.values()),\n            queryMatchesExpr: queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n            hostBindings: hostBindings,\n            hostEvents: hostEvents\n        };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitDirective = /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    function (providerAst, dirAst, directiveIndex, elementNodeIndex, refs, queryMatches, usedEvents, queryIds) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        dirAst.directive.queries.forEach(function (query, queryIndex) {\n            var /** @type {?} */ queryId = dirAst.contentQueryStartId + queryIndex;\n            var /** @type {?} */ flags = 67108864 /* TypeContentQuery */ | calcStaticDynamicQueryFlags(queryIds, queryId, query.first);\n            var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n            _this.nodes.push(function () {\n                return ({\n                    sourceSpan: dirAst.sourceSpan,\n                    nodeFlags: flags,\n                    nodeDef: importExpr(Identifiers.queryDef).callFn([\n                        literal(flags), literal(queryId),\n                        new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                    ]),\n                });\n            });\n        });\n        // Note: the operation below might also create new nodeDefs,\n        // but we don't want them to be a child of a directive,\n        // as they might be a provider/pipe on their own.\n        // I.e. we only allow queries as children of directives nodes.\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var _a = this._visitProviderOrDirective(providerAst, queryMatches), flags = _a.flags, queryMatchExprs = _a.queryMatchExprs, providerExpr = _a.providerExpr, depsExpr = _a.depsExpr;\n        refs.forEach(function (ref) {\n            if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(4 /* Provider */)]));\n            }\n        });\n        if (dirAst.directive.isComponent) {\n            flags |= 32768 /* Component */;\n        }\n        var /** @type {?} */ inputDefs = dirAst.inputs.map(function (inputAst, inputIndex) {\n            var /** @type {?} */ mapValue = literalArr([literal(inputIndex), literal(inputAst.directiveName)]);\n            // Note: it's important to not quote the key so that we can capture renames by minifiers!\n            return new LiteralMapEntry(inputAst.directiveName, mapValue, false);\n        });\n        var /** @type {?} */ outputDefs = [];\n        var /** @type {?} */ dirMeta = dirAst.directive;\n        Object.keys(dirMeta.outputs).forEach(function (propName) {\n            var /** @type {?} */ eventName = dirMeta.outputs[propName];\n            if (usedEvents.has(eventName)) {\n                // Note: it's important to not quote the key so that we can capture renames by minifiers!\n                outputDefs.push(new LiteralMapEntry(propName, literal(eventName), false));\n            }\n        });\n        var /** @type {?} */ updateDirectiveExpressions = [];\n        if (dirAst.inputs.length || (flags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0) {\n            updateDirectiveExpressions =\n                dirAst.inputs.map(function (input, bindingIndex) {\n                    return _this._preprocessUpdateExpression({\n                        nodeIndex: nodeIndex,\n                        bindingIndex: bindingIndex,\n                        sourceSpan: input.sourceSpan,\n                        context: COMP_VAR,\n                        value: input.value\n                    });\n                });\n        }\n        var /** @type {?} */ dirContextExpr = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n        var /** @type {?} */ hostBindings = dirAst.hostProperties.map(function (inputAst) {\n            return ({\n                context: dirContextExpr,\n                dirAst: dirAst,\n                inputAst: inputAst,\n            });\n        });\n        var /** @type {?} */ hostEvents = dirAst.hostEvents.map(function (hostEventAst) {\n            return ({\n                context: dirContextExpr,\n                eventAst: hostEventAst, dirAst: dirAst,\n            });\n        });\n        // directiveDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], childCount: number, ctor:\n        //   any,\n        //   deps: ([DepFlags, any] | any)[], props?: {[name: string]: [number, string]},\n        //   outputs?: {[name: string]: string}, component?: () => ViewDefinition): NodeDef;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: dirAst.sourceSpan,\n                nodeFlags: 16384 /* TypeDirective */ | flags,\n                nodeDef: importExpr(Identifiers.directiveDef).callFn([\n                    literal(flags), queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n                    literal(childCount), providerExpr, depsExpr,\n                    inputDefs.length ? new LiteralMapExpr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? new LiteralMapExpr(outputDefs) : NULL_EXPR\n                ]),\n                updateDirectives: updateDirectiveExpressions,\n                directive: dirAst.directive.type,\n            });\n        };\n        return { hostBindings: hostBindings, hostEvents: hostEvents };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProvider = /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    function (providerAst, queryMatches) {\n        this._addProviderNode(this._visitProviderOrDirective(providerAst, queryMatches));\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitComponentFactoryResolverProvider = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        var /** @type {?} */ componentDirMeta = directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        if (componentDirMeta && componentDirMeta.directive.entryComponents.length) {\n            var _a = componentFactoryResolverProviderDef(this.reflector, this.outputCtx, 8192 /* PrivateProvider */, componentDirMeta.directive.entryComponents), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            this._addProviderNode({\n                providerExpr: providerExpr,\n                depsExpr: depsExpr,\n                flags: flags,\n                tokenExpr: tokenExpr,\n                queryMatchExprs: [],\n                sourceSpan: componentDirMeta.sourceSpan\n            });\n        }\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ViewBuilder.prototype._addProviderNode = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // providerDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,\n        //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: data.sourceSpan,\n                nodeFlags: data.flags,\n                nodeDef: importExpr(Identifiers.providerDef).callFn([\n                    literal(data.flags),\n                    data.queryMatchExprs.length ? literalArr(data.queryMatchExprs) : NULL_EXPR,\n                    data.tokenExpr, data.providerExpr, data.depsExpr\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProviderOrDirective = /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    function (providerAst, queryMatches) {\n        var /** @type {?} */ flags = 0;\n        var /** @type {?} */ queryMatchExprs = [];\n        queryMatches.forEach(function (match) {\n            if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(4 /* Provider */)]));\n            }\n        });\n        var _a = providerDef(this.outputCtx, providerAst), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, providerFlags = _a.flags, tokenExpr = _a.tokenExpr;\n        return {\n            flags: flags | providerFlags,\n            queryMatchExprs: queryMatchExprs,\n            providerExpr: providerExpr,\n            depsExpr: depsExpr,\n            tokenExpr: tokenExpr,\n            sourceSpan: providerAst.sourceSpan\n        };\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        var /** @type {?} */ currViewExpr = VIEW_VAR;\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent,\n            currViewExpr = currViewExpr.prop('parent').cast(DYNAMIC_TYPE)) {\n            // check references\n            var /** @type {?} */ refNodeIndex = currBuilder.refNodeIndices[name];\n            if (refNodeIndex != null) {\n                return importExpr(Identifiers.nodeValue).callFn([currViewExpr, literal(refNodeIndex)]);\n            }\n            // check variables\n            var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n            if (varAst) {\n                var /** @type {?} */ varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n                return currViewExpr.prop('context').prop(varValue);\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype._createLiteralArrayConverter = /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    function (sourceSpan, argCount) {\n        if (argCount === 0) {\n            var /** @type {?} */ valueExpr_1 = importExpr(Identifiers.EMPTY_ARRAY);\n            return function () { return valueExpr_1; };\n        }\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // pureArrayDef(argCount: number): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 32 /* TypePureArray */,\n                nodeDef: importExpr(Identifiers.pureArrayDef).callFn([literal(argCount)])\n            });\n        });\n        return function (args) { return callCheckStmt(nodeIndex, args); };\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    ViewBuilder.prototype._createLiteralMapConverter = /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    function (sourceSpan, keys) {\n        if (keys.length === 0) {\n            var /** @type {?} */ valueExpr_2 = importExpr(Identifiers.EMPTY_MAP);\n            return function () { return valueExpr_2; };\n        }\n        // function pureObjectDef(propToIndex: {[p: string]: number}): NodeDef\n        var /** @type {?} */ map = literalMap(keys.map(function (e, i) { return (__assign({}, e, { value: literal(i) })); }));\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 64 /* TypePureObject */,\n                nodeDef: importExpr(Identifiers.pureObjectDef).callFn([map])\n            });\n        });\n        return function (args) { return callCheckStmt(nodeIndex, args); };\n    };\n    /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipeConverter = /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    function (expression, name, argCount) {\n        var /** @type {?} */ pipe = /** @type {?} */ ((this.usedPipes.find(function (pipeSummary) { return pipeSummary.name === name; })));\n        if (pipe.pure) {\n            var /** @type {?} */ nodeIndex_1 = this.nodes.length;\n            // function purePipeDef(argCount: number): NodeDef;\n            this.nodes.push(function () {\n                return ({\n                    sourceSpan: expression.sourceSpan,\n                    nodeFlags: 128 /* TypePurePipe */,\n                    nodeDef: importExpr(Identifiers.purePipeDef).callFn([literal(argCount)])\n                });\n            });\n            // find underlying pipe in the component view\n            var /** @type {?} */ compViewExpr = VIEW_VAR;\n            var /** @type {?} */ compBuilder = this;\n            while (compBuilder.parent) {\n                compBuilder = compBuilder.parent;\n                compViewExpr = compViewExpr.prop('parent').cast(DYNAMIC_TYPE);\n            }\n            var /** @type {?} */ pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n            var /** @type {?} */ pipeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([compViewExpr, literal(pipeNodeIndex)]);\n            return function (args) {\n                return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, callCheckStmt(nodeIndex_1, [pipeValueExpr_1].concat(args)));\n            };\n        }\n        else {\n            var /** @type {?} */ nodeIndex = this._createPipe(expression.sourceSpan, pipe);\n            var /** @type {?} */ nodeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n            return function (args) {\n                return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, nodeValueExpr_1.callMethod('transform', args));\n            };\n        }\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipe = /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    function (sourceSpan, pipe) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        var /** @type {?} */ flags = 0;\n        pipe.type.lifecycleHooks.forEach(function (lifecycleHook) {\n            // for pipes, we only support ngOnDestroy\n            if (lifecycleHook === LifecycleHooks.OnDestroy) {\n                flags |= lifecycleHookToNodeFlag(lifecycleHook);\n            }\n        });\n        var /** @type {?} */ depExprs = pipe.type.diDeps.map(function (diDep) { return depDef(_this.outputCtx, diDep); });\n        // function pipeDef(\n        //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 16 /* TypePipe */,\n                nodeDef: importExpr(Identifiers.pipeDef).callFn([\n                    literal(flags), _this.outputCtx.importExpr(pipe.type.reference), literalArr(depExprs)\n                ])\n            });\n        });\n        return nodeIndex;\n    };\n    /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype._preprocessUpdateExpression = /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        var _this = this;\n        return {\n            nodeIndex: expression.nodeIndex,\n            bindingIndex: expression.bindingIndex,\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) {\n                    return _this._createLiteralArrayConverter(expression.sourceSpan, argCount);\n                },\n                createLiteralMapConverter: function (keys) {\n                    return _this._createLiteralMapConverter(expression.sourceSpan, keys);\n                },\n                createPipeConverter: function (name, argCount) {\n                    return _this._createPipeConverter(expression, name, argCount);\n                }\n            }, expression.value)\n        };\n    };\n    /**\n     * @return {?}\n     */\n    ViewBuilder.prototype._createNodeExpressions = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ updateBindingCount = 0;\n        var /** @type {?} */ updateRendererStmts = [];\n        var /** @type {?} */ updateDirectivesStmts = [];\n        var /** @type {?} */ nodeDefExprs = this.nodes.map(function (factory, nodeIndex) {\n            var _a = factory(), nodeDef = _a.nodeDef, nodeFlags = _a.nodeFlags, updateDirectives = _a.updateDirectives, updateRenderer = _a.updateRenderer, sourceSpan = _a.sourceSpan;\n            if (updateRenderer) {\n                updateRendererStmts.push.apply(updateRendererStmts, createUpdateStatements(nodeIndex, sourceSpan, updateRenderer, false));\n            }\n            if (updateDirectives) {\n                updateDirectivesStmts.push.apply(updateDirectivesStmts, createUpdateStatements(nodeIndex, sourceSpan, updateDirectives, (nodeFlags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0));\n            }\n            // We use a comma expression to call the log function before\n            // the nodeDef function, but still use the result of the nodeDef function\n            // as the value.\n            // Note: We only add the logger to elements / text nodes,\n            // so we don't generate too much code.\n            var /** @type {?} */ logWithNodeDef = nodeFlags & 3 /* CatRenderNode */ ?\n                new CommaExpr([LOG_VAR$1.callFn([]).callFn([]), nodeDef]) :\n                nodeDef;\n            return applySourceSpanToExpressionIfNeeded(logWithNodeDef, sourceSpan);\n        });\n        return { updateRendererStmts: updateRendererStmts, updateDirectivesStmts: updateDirectivesStmts, nodeDefExprs: nodeDefExprs };\n        /**\n         * @param {?} nodeIndex\n         * @param {?} sourceSpan\n         * @param {?} expressions\n         * @param {?} allowEmptyExprs\n         * @return {?}\n         */\n        function createUpdateStatements(nodeIndex, sourceSpan, expressions, allowEmptyExprs) {\n            var /** @type {?} */ updateStmts = [];\n            var /** @type {?} */ exprs = expressions.map(function (_a) {\n                var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n                var /** @type {?} */ bindingId = \"\" + updateBindingCount++;\n                var /** @type {?} */ nameResolver = context === COMP_VAR ? self : null;\n                var _b = convertPropertyBinding(nameResolver, context, value, bindingId), stmts = _b.stmts, currValExpr = _b.currValExpr;\n                updateStmts.push.apply(updateStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n                return applySourceSpanToExpressionIfNeeded(currValExpr, sourceSpan);\n            });\n            if (expressions.length || allowEmptyExprs) {\n                updateStmts.push(applySourceSpanToStatementIfNeeded(callCheckStmt(nodeIndex, exprs).toStmt(), sourceSpan));\n            }\n            return updateStmts;\n        }\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    ViewBuilder.prototype._createElementHandleEventFn = /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    function (nodeIndex, handlers) {\n        var _this = this;\n        var /** @type {?} */ handleEventStmts = [];\n        var /** @type {?} */ handleEventBindingCount = 0;\n        handlers.forEach(function (_a) {\n            var context = _a.context, eventAst = _a.eventAst, dirAst = _a.dirAst;\n            var /** @type {?} */ bindingId = \"\" + handleEventBindingCount++;\n            var /** @type {?} */ nameResolver = context === COMP_VAR ? _this : null;\n            var _b = convertActionBinding(nameResolver, context, eventAst.handler, bindingId), stmts = _b.stmts, allowDefault = _b.allowDefault;\n            var /** @type {?} */ trueStmts = stmts;\n            if (allowDefault) {\n                trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n            }\n            var _c = elementEventNameAndTarget(eventAst, dirAst), eventTarget = _c.target, eventName = _c.name;\n            var /** @type {?} */ fullEventName = elementEventFullName(eventTarget, eventName);\n            handleEventStmts.push(applySourceSpanToStatementIfNeeded(new IfStmt(literal(fullEventName).identical(EVENT_NAME_VAR), trueStmts), eventAst.sourceSpan));\n        });\n        var /** @type {?} */ handleEventFn;\n        if (handleEventStmts.length > 0) {\n            var /** @type {?} */ preStmts = [ALLOW_DEFAULT_VAR.set(literal(true)).toDeclStmt(BOOL_TYPE)];\n            if (!this.component.isHost && findReadVarNames(handleEventStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            handleEventFn = fn([\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EVENT_NAME_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EventHandlerVars.event.name)), INFERRED_TYPE)\n            ], preStmts.concat(handleEventStmts, [new ReturnStatement(ALLOW_DEFAULT_VAR)]), INFERRED_TYPE);\n        }\n        else {\n            handleEventFn = NULL_EXPR;\n        }\n        return handleEventFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return ViewBuilder;\n}());\n/**\n * @param {?} astNodes\n * @return {?}\n */\nfunction needsAdditionalRootNode(astNodes) {\n    var /** @type {?} */ lastAstNode = astNodes[astNodes.length - 1];\n    if (lastAstNode instanceof EmbeddedTemplateAst) {\n        return lastAstNode.hasViewContainer;\n    }\n    if (lastAstNode instanceof ElementAst) {\n        if (isNgContainer(lastAstNode.name) && lastAstNode.children.length) {\n            return needsAdditionalRootNode(lastAstNode.children);\n        }\n        return lastAstNode.hasViewContainer;\n    }\n    return lastAstNode instanceof NgContentAst;\n}\n/**\n * @param {?} inputAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementBindingDef(inputAst, dirAst) {\n    switch (inputAst.type) {\n        case PropertyBindingType.Attribute:\n            return literalArr([\n                literal(1 /* TypeElementAttribute */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Property:\n            return literalArr([\n                literal(8 /* TypeProperty */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Animation:\n            var /** @type {?} */ bindingType = 8 /* TypeProperty */ |\n                (dirAst && dirAst.directive.isComponent ? 32 /* SyntheticHostProperty */ :\n                    16 /* SyntheticProperty */);\n            return literalArr([\n                literal(bindingType), literal('@' + inputAst.name), literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Class:\n            return literalArr([literal(2 /* TypeElementClass */), literal(inputAst.name), NULL_EXPR]);\n        case PropertyBindingType.Style:\n            return literalArr([\n                literal(4 /* TypeElementStyle */), literal(inputAst.name), literal(inputAst.unit)\n            ]);\n    }\n}\n/**\n * @param {?} elementAst\n * @return {?}\n */\nfunction fixedAttrsDef(elementAst) {\n    var /** @type {?} */ mapResult = Object.create(null);\n    elementAst.attrs.forEach(function (attrAst) { mapResult[attrAst.name] = attrAst.value; });\n    elementAst.directives.forEach(function (dirAst) {\n        Object.keys(dirAst.directive.hostAttributes).forEach(function (name) {\n            var /** @type {?} */ value = dirAst.directive.hostAttributes[name];\n            var /** @type {?} */ prevValue = mapResult[name];\n            mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n        });\n    });\n    // Note: We need to sort to get a defined output order\n    // for tests and for caching generated artifacts...\n    return literalArr(Object.keys(mapResult).sort().map(function (attrName) { return literalArr([literal(attrName), literal(mapResult[attrName])]); }));\n}\n/**\n * @param {?} attrName\n * @param {?} attrValue1\n * @param {?} attrValue2\n * @return {?}\n */\nfunction mergeAttributeValue(attrName, attrValue1, attrValue2) {\n    if (attrName == CLASS_ATTR$1 || attrName == STYLE_ATTR) {\n        return attrValue1 + \" \" + attrValue2;\n    }\n    else {\n        return attrValue2;\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} exprs\n * @return {?}\n */\nfunction callCheckStmt(nodeIndex, exprs) {\n    if (exprs.length > 10) {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(1 /* Dynamic */), literalArr(exprs)]);\n    }\n    else {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(0 /* Inline */)].concat(exprs));\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} bindingIdx\n * @param {?} expr\n * @return {?}\n */\nfunction callUnwrapValue(nodeIndex, bindingIdx, expr) {\n    return importExpr(Identifiers.unwrapValue).callFn([\n        VIEW_VAR, literal(nodeIndex), literal(bindingIdx), expr\n    ]);\n}\n/**\n * @param {?} nodes\n * @param {?=} result\n * @return {?}\n */\nfunction findStaticQueryIds(nodes, result) {\n    if (result === void 0) { result = new Map(); }\n    nodes.forEach(function (node) {\n        var /** @type {?} */ staticQueryIds = new Set();\n        var /** @type {?} */ dynamicQueryIds = new Set();\n        var /** @type {?} */ queryMatches = /** @type {?} */ ((undefined));\n        if (node instanceof ElementAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        else if (node instanceof EmbeddedTemplateAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        if (queryMatches) {\n            queryMatches.forEach(function (match) { return staticQueryIds.add(match.queryId); });\n        }\n        dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n        result.set(node, { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds });\n    });\n    return result;\n}\n/**\n * @param {?} nodeStaticQueryIds\n * @return {?}\n */\nfunction staticViewQueryIds(nodeStaticQueryIds) {\n    var /** @type {?} */ staticQueryIds = new Set();\n    var /** @type {?} */ dynamicQueryIds = new Set();\n    Array.from(nodeStaticQueryIds.values()).forEach(function (entry) {\n        entry.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n        entry.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n    });\n    dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n    return { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds };\n}\n/**\n * @param {?} eventAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementEventNameAndTarget(eventAst, dirAst) {\n    if (eventAst.isAnimation) {\n        return {\n            name: \"@\" + eventAst.name + \".\" + eventAst.phase,\n            target: dirAst && dirAst.directive.isComponent ? 'component' : null\n        };\n    }\n    else {\n        return eventAst;\n    }\n}\n/**\n * @param {?} queryIds\n * @param {?} queryId\n * @param {?} isFirst\n * @return {?}\n */\nfunction calcStaticDynamicQueryFlags(queryIds, queryId, isFirst) {\n    var /** @type {?} */ flags = 0;\n    // Note: We only make queries static that query for a single item.\n    // This is because of backwards compatibility with the old view compiler...\n    if (isFirst && (queryIds.staticQueryIds.has(queryId) || !queryIds.dynamicQueryIds.has(queryId))) {\n        flags |= 268435456 /* StaticQuery */;\n    }\n    else {\n        flags |= 536870912 /* DynamicQuery */;\n    }\n    return flags;\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A container for message extracted from the templates.\n */\nvar MessageBundle = (function () {\n    function MessageBundle(_htmlParser, _implicitTags, _implicitAttrs, _locale) {\n        if (_locale === void 0) { _locale = null; }\n        this._htmlParser = _htmlParser;\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n        this._locale = _locale;\n        this._messages = [];\n    }\n    /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    MessageBundle.prototype.updateFromTemplate = /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (html, url, interpolationConfig) {\n        var /** @type {?} */ htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n        if (htmlParserResult.errors.length) {\n            return htmlParserResult.errors;\n        }\n        var /** @type {?} */ i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n        if (i18nParserResult.errors.length) {\n            return i18nParserResult.errors;\n        }\n        (_a = this._messages).push.apply(_a, i18nParserResult.messages);\n        return [];\n        var _a;\n    };\n    // Return the message in the internal format\n    // The public (serialized) format might be different, see the `write` method.\n    /**\n     * @return {?}\n     */\n    MessageBundle.prototype.getMessages = /**\n     * @return {?}\n     */\n    function () { return this._messages; };\n    /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    MessageBundle.prototype.write = /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    function (serializer, filterSources) {\n        var /** @type {?} */ messages = {};\n        var /** @type {?} */ mapperVisitor = new MapPlaceholderNames();\n        // Deduplicate messages based on their ID\n        this._messages.forEach(function (message) {\n            var /** @type {?} */ id = serializer.digest(message);\n            if (!messages.hasOwnProperty(id)) {\n                messages[id] = message;\n            }\n            else {\n                (_a = messages[id].sources).push.apply(_a, message.sources);\n            }\n            var _a;\n        });\n        // Transform placeholder names using the serializer mapping\n        var /** @type {?} */ msgList = Object.keys(messages).map(function (id) {\n            var /** @type {?} */ mapper = serializer.createNameMapper(messages[id]);\n            var /** @type {?} */ src = messages[id];\n            var /** @type {?} */ nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n            var /** @type {?} */ transformedMessage = new Message(nodes, {}, {}, src.meaning, src.description, id);\n            transformedMessage.sources = src.sources;\n            if (filterSources) {\n                transformedMessage.sources.forEach(function (source) { return source.filePath = filterSources(source.filePath); });\n            }\n            return transformedMessage;\n        });\n        return serializer.write(msgList, this._locale);\n    };\n    return MessageBundle;\n}());\nvar MapPlaceholderNames = (function (_super) {\n    __extends(MapPlaceholderNames, _super);\n    function MapPlaceholderNames() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.convert = /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (nodes, mapper) {\n        var _this = this;\n        return mapper ? nodes.map(function (n) { return n.visit(_this, mapper); }) : nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        var _this = this;\n        var /** @type {?} */ startName = /** @type {?} */ ((mapper.toPublicName(ph.startName)));\n        var /** @type {?} */ closeName = ph.closeName ? /** @type {?} */ ((mapper.toPublicName(ph.closeName))) : ph.closeName;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, mapper); });\n        return new TagPlaceholder(ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        return new Placeholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        return new IcuPlaceholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    return MapPlaceholderNames;\n}(CloneVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar GeneratedFile = (function () {\n    function GeneratedFile(srcFileUrl, genFileUrl, sourceOrStmts) {\n        this.srcFileUrl = srcFileUrl;\n        this.genFileUrl = genFileUrl;\n        if (typeof sourceOrStmts === 'string') {\n            this.source = sourceOrStmts;\n            this.stmts = null;\n        }\n        else {\n            this.source = null;\n            this.stmts = sourceOrStmts;\n        }\n    }\n    return GeneratedFile;\n}());\n/**\n * @param {?} file\n * @param {?=} preamble\n * @return {?}\n */\nfunction toTypeScript(file, preamble) {\n    if (preamble === void 0) { preamble = ''; }\n    if (!file.stmts) {\n        throw new Error(\"Illegal state: No stmts present on GeneratedFile \" + file.genFileUrl);\n    }\n    return new TypeScriptEmitter().emitStatements(sourceUrl(file.srcFileUrl), file.genFileUrl, file.stmts, preamble);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} srcFileName\n * @param {?} forJitCtx\n * @param {?} summaryResolver\n * @param {?} symbolResolver\n * @param {?} symbols\n * @param {?} types\n * @return {?}\n */\nfunction serializeSummaries(srcFileName, forJitCtx, summaryResolver, symbolResolver, symbols, types) {\n    var /** @type {?} */ toJsonSerializer = new ToJsonSerializer(symbolResolver, summaryResolver);\n    var /** @type {?} */ forJitSerializer = new ForJitSerializer(forJitCtx, symbolResolver);\n    // for symbols, we use everything except for the class metadata itself\n    // (we keep the statics though), as the class metadata is contained in the\n    // CompileTypeSummary.\n    symbols.forEach(function (resolvedSymbol) {\n        return toJsonSerializer.addSummary({ symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata });\n    });\n    // Add type summaries.\n    types.forEach(function (_a) {\n        var summary = _a.summary, metadata = _a.metadata;\n        forJitSerializer.addSourceType(summary, metadata);\n        toJsonSerializer.addSummary({ symbol: summary.type.reference, metadata: undefined, type: summary });\n    });\n    toJsonSerializer.unprocessedSymbolSummariesBySymbol.forEach(function (summary) {\n        if (summaryResolver.isLibraryFile(summary.symbol.filePath) && summary.type) {\n            forJitSerializer.addLibType(summary.type);\n        }\n    });\n    var _a = toJsonSerializer.serialize(srcFileName), json = _a.json, exportAs = _a.exportAs;\n    forJitSerializer.serialize(exportAs);\n    return { json: json, exportAs: exportAs };\n}\n/**\n * @param {?} symbolCache\n * @param {?} summaryResolver\n * @param {?} libraryFileName\n * @param {?} json\n * @return {?}\n */\nfunction deserializeSummaries(symbolCache, summaryResolver, libraryFileName, json) {\n    var /** @type {?} */ deserializer = new FromJsonDeserializer(symbolCache, summaryResolver);\n    return deserializer.deserialize(libraryFileName, json);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @return {?}\n */\nfunction createForJitStub(outputCtx, reference) {\n    return createSummaryForJitFunction(outputCtx, reference, NULL_EXPR);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @param {?} value\n * @return {?}\n */\nfunction createSummaryForJitFunction(outputCtx, reference, value) {\n    var /** @type {?} */ fnName = summaryForJitName(reference.name);\n    outputCtx.statements.push(fn([], [new ReturnStatement(value)], new ArrayType(DYNAMIC_TYPE)).toDeclStmt(fnName, [\n        StmtModifier.Final, StmtModifier.Exported\n    ]));\n}\nvar ToJsonSerializer = (function (_super) {\n    __extends(ToJsonSerializer, _super);\n    function ToJsonSerializer(symbolResolver, summaryResolver) {\n        var _this = _super.call(this) || this;\n        _this.symbolResolver = symbolResolver;\n        _this.summaryResolver = summaryResolver;\n        _this.symbols = [];\n        _this.indexBySymbol = new Map();\n        _this.processedSummaryBySymbol = new Map();\n        _this.processedSummaries = [];\n        _this.unprocessedSymbolSummariesBySymbol = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) {\n        var _this = this;\n        var /** @type {?} */ unprocessedSummary = this.unprocessedSymbolSummariesBySymbol.get(summary.symbol);\n        var /** @type {?} */ processedSummary = this.processedSummaryBySymbol.get(summary.symbol);\n        if (!unprocessedSummary) {\n            unprocessedSummary = { symbol: summary.symbol, metadata: undefined };\n            this.unprocessedSymbolSummariesBySymbol.set(summary.symbol, unprocessedSummary);\n            processedSummary = { symbol: this.processValue(summary.symbol, 0 /* None */) };\n            this.processedSummaries.push(processedSummary);\n            this.processedSummaryBySymbol.set(summary.symbol, processedSummary);\n        }\n        if (!unprocessedSummary.metadata && summary.metadata) {\n            var /** @type {?} */ metadata_1 = summary.metadata || {};\n            if (metadata_1.__symbolic === 'class') {\n                // For classes, we keep everything except their class decorators.\n                // We need to keep e.g. the ctor args, method names, method decorators\n                // so that the class can be extended in another compilation unit.\n                // We don't keep the class decorators as\n                // 1) they refer to data\n                //   that should not cause a rebuild of downstream compilation units\n                //   (e.g. inline templates of @Component, or @NgModule.declarations)\n                // 2) their data is already captured in TypeSummaries, e.g. DirectiveSummary.\n                var /** @type {?} */ clone_1 = {};\n                Object.keys(metadata_1).forEach(function (propName) {\n                    if (propName !== 'decorators') {\n                        clone_1[propName] = metadata_1[propName];\n                    }\n                });\n                metadata_1 = clone_1;\n            }\n            unprocessedSummary.metadata = metadata_1;\n            processedSummary.metadata = this.processValue(metadata_1, 1 /* ResolveValue */);\n        }\n        if (!unprocessedSummary.type && summary.type) {\n            unprocessedSummary.type = summary.type;\n            // Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,\n            // as the type summaries already contain the transitive data that they require\n            // (in a minimal way).\n            processedSummary.type = this.processValue(summary.type, 0 /* None */);\n            // except for reexported directives / pipes, so we need to store\n            // their summaries explicitly.\n            if (summary.type.summaryKind === CompileSummaryKind.NgModule) {\n                var /** @type {?} */ ngModuleSummary = /** @type {?} */ (summary.type);\n                ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach(function (id) {\n                    var /** @type {?} */ symbol = id.reference;\n                    if (_this.summaryResolver.isLibraryFile(symbol.filePath) &&\n                        !_this.unprocessedSymbolSummariesBySymbol.has(symbol)) {\n                        var /** @type {?} */ summary_1 = _this.summaryResolver.resolveSummary(symbol);\n                        if (summary_1) {\n                            _this.addSummary(summary_1);\n                        }\n                    }\n                });\n            }\n        }\n    };\n    /**\n     * @param {?} srcFileName\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.serialize = /**\n     * @param {?} srcFileName\n     * @return {?}\n     */\n    function (srcFileName) {\n        var _this = this;\n        var /** @type {?} */ exportAs = [];\n        var /** @type {?} */ json = JSON.stringify({\n            summaries: this.processedSummaries,\n            symbols: this.symbols.map(function (symbol, index) {\n                symbol.assertNoMembers();\n                var /** @type {?} */ importAs = /** @type {?} */ ((undefined));\n                if (_this.summaryResolver.isLibraryFile(symbol.filePath)) {\n                    var /** @type {?} */ summary = _this.unprocessedSymbolSummariesBySymbol.get(symbol);\n                    if (!summary || !summary.metadata || summary.metadata.__symbolic !== 'interface') {\n                        importAs = symbol.name + \"_\" + index;\n                        exportAs.push({ symbol: symbol, exportAs: importAs });\n                    }\n                }\n                return {\n                    __symbol: index,\n                    name: symbol.name,\n                    filePath: _this.summaryResolver.toSummaryFileName(symbol.filePath, srcFileName),\n                    importAs: importAs\n                };\n            })\n        });\n        return { json: json, exportAs: exportAs };\n    };\n    /**\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.processValue = /**\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    function (value, flags) {\n        return visitValue(value, this, flags);\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) {\n        if (value instanceof StaticSymbol) {\n            var /** @type {?} */ baseSymbol = this.symbolResolver.getStaticSymbol(value.filePath, value.name);\n            var /** @type {?} */ index = this.visitStaticSymbol(baseSymbol, context);\n            return { __symbol: index, members: value.members };\n        }\n    };\n    /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     * @param {?} baseSymbol\n     * @param {?} flags\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitStaticSymbol = /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     * @param {?} baseSymbol\n     * @param {?} flags\n     * @return {?}\n     */\n    function (baseSymbol, flags) {\n        var /** @type {?} */ index = this.indexBySymbol.get(baseSymbol);\n        var /** @type {?} */ summary = null;\n        if (flags & 1 /* ResolveValue */ &&\n            this.summaryResolver.isLibraryFile(baseSymbol.filePath)) {\n            if (this.unprocessedSymbolSummariesBySymbol.has(baseSymbol)) {\n                // the summary for this symbol was already added\n                // -> nothing to do.\n                return /** @type {?} */ ((index));\n            }\n            summary = this.loadSummary(baseSymbol);\n            if (summary && summary.metadata instanceof StaticSymbol) {\n                // The summary is a reexport\n                index = this.visitStaticSymbol(summary.metadata, flags);\n                // reset the summary as it is just a reexport, so we don't want to store it.\n                summary = null;\n            }\n        }\n        else if (index != null) {\n            // Note: == on purpose to compare with undefined!\n            // No summary and the symbol is already added -> nothing to do.\n            return index;\n        }\n        // Note: == on purpose to compare with undefined!\n        if (index == null) {\n            index = this.symbols.length;\n            this.symbols.push(baseSymbol);\n        }\n        this.indexBySymbol.set(baseSymbol, index);\n        if (summary) {\n            this.addSummary(summary);\n        }\n        return index;\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.loadSummary = /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    function (symbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(symbol);\n        if (!summary) {\n            // some symbols might originate from a plain typescript library\n            // that just exported .d.ts and .metadata.json files, i.e. where no summary\n            // files were created.\n            var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n            if (resolvedSymbol) {\n                summary = { symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata };\n            }\n        }\n        return summary;\n    };\n    return ToJsonSerializer;\n}(ValueTransformer));\nvar ForJitSerializer = (function () {\n    function ForJitSerializer(outputCtx, symbolResolver) {\n        this.outputCtx = outputCtx;\n        this.symbolResolver = symbolResolver;\n        this.data = new Map();\n    }\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addSourceType = /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (summary, metadata) {\n        this.data.set(summary.type.reference, { summary: summary, metadata: metadata, isLibrary: false });\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addLibType = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) {\n        this.data.set(summary.type.reference, { summary: summary, metadata: null, isLibrary: true });\n    };\n    /**\n     * @param {?} exportAs\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serialize = /**\n     * @param {?} exportAs\n     * @return {?}\n     */\n    function (exportAs) {\n        var _this = this;\n        var /** @type {?} */ ngModuleSymbols = new Set();\n        Array.from(this.data.values()).forEach(function (_a) {\n            var summary = _a.summary, metadata = _a.metadata, isLibrary = _a.isLibrary;\n            if (summary.summaryKind === CompileSummaryKind.NgModule) {\n                // collect the symbols that refer to NgModule classes.\n                // Note: we can't just rely on `summary.type.summaryKind` to determine this as\n                // we don't add the summaries of all referenced symbols when we serialize type summaries.\n                // See serializeSummaries for details.\n                ngModuleSymbols.add(summary.type.reference);\n                var /** @type {?} */ modSummary = /** @type {?} */ (summary);\n                modSummary.modules.forEach(function (mod) { ngModuleSymbols.add(mod.reference); });\n            }\n            if (!isLibrary) {\n                var /** @type {?} */ fnName = summaryForJitName(summary.type.reference.name);\n                createSummaryForJitFunction(_this.outputCtx, summary.type.reference, _this.serializeSummaryWithDeps(summary, /** @type {?} */ ((metadata))));\n            }\n        });\n        exportAs.forEach(function (entry) {\n            var /** @type {?} */ symbol = entry.symbol;\n            if (ngModuleSymbols.has(symbol)) {\n                var /** @type {?} */ jitExportAsName = summaryForJitName(entry.exportAs);\n                _this.outputCtx.statements.push(variable(jitExportAsName).set(_this.serializeSummaryRef(symbol)).toDeclStmt(null, [\n                    StmtModifier.Exported\n                ]));\n            }\n        });\n    };\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryWithDeps = /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (summary, metadata) {\n        var _this = this;\n        var /** @type {?} */ expressions = [this.serializeSummary(summary)];\n        var /** @type {?} */ providers = [];\n        if (metadata instanceof CompileNgModuleMetadata) {\n            expressions.push.apply(expressions, \n            // For directives / pipes, we only add the declared ones,\n            // and rely on transitively importing NgModules to get the transitive\n            // summaries.\n            metadata.declaredDirectives.concat(metadata.declaredPipes)\n                .map(function (type) { return type.reference; })\n                .concat(metadata.transitiveModule.modules.map(function (type) { return type.reference; })\n                .filter(function (ref) { return ref !== metadata.type.reference; }))\n                .map(function (ref) { return _this.serializeSummaryRef(ref); }));\n            // Note: We don't use `NgModuleSummary.providers`, as that one is transitive,\n            // and we already have transitive modules.\n            providers = metadata.providers;\n        }\n        else if (summary.summaryKind === CompileSummaryKind.Directive) {\n            var /** @type {?} */ dirSummary = /** @type {?} */ (summary);\n            providers = dirSummary.providers.concat(dirSummary.viewProviders);\n        }\n        // Note: We can't just refer to the `ngsummary.ts` files for `useClass` providers (as we do for\n        // declaredDirectives / declaredPipes), as we allow\n        // providers without ctor arguments to skip the `@Injectable` decorator,\n        // i.e. we didn't generate .ngsummary.ts files for these.\n        expressions.push.apply(expressions, providers.filter(function (provider) { return !!provider.useClass; }).map(function (provider) {\n            return _this.serializeSummary(/** @type {?} */ ({\n                summaryKind: CompileSummaryKind.Injectable, type: provider.useClass\n            }));\n        }));\n        return literalArr(expressions);\n    };\n    /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryRef = /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    function (typeSymbol) {\n        var /** @type {?} */ jitImportedSymbol = this.symbolResolver.getStaticSymbol(summaryForJitFileName(typeSymbol.filePath), summaryForJitName(typeSymbol.name));\n        return this.outputCtx.importExpr(jitImportedSymbol);\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummary = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var /** @type {?} */ outputCtx = this.outputCtx;\n        var Transformer = (function () {\n            function Transformer() {\n            }\n            /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitArray = /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            function (arr, context) {\n                var _this = this;\n                return literalArr(arr.map(function (entry) { return visitValue(entry, _this, context); }));\n            };\n            /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitStringMap = /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            function (map, context) {\n                var _this = this;\n                return new LiteralMapExpr(Object.keys(map).map(function (key) { return new LiteralMapEntry(key, visitValue(map[key], _this, context), false); }));\n            };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitPrimitive = /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            function (value, context) { return literal(value); };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitOther = /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            function (value, context) {\n                if (value instanceof StaticSymbol) {\n                    return outputCtx.importExpr(value);\n                }\n                else {\n                    throw new Error(\"Illegal State: Encountered value \" + value);\n                }\n            };\n            return Transformer;\n        }());\n        return visitValue(data, new Transformer(), null);\n    };\n    return ForJitSerializer;\n}());\nvar FromJsonDeserializer = (function (_super) {\n    __extends(FromJsonDeserializer, _super);\n    function FromJsonDeserializer(symbolCache, summaryResolver) {\n        var _this = _super.call(this) || this;\n        _this.symbolCache = symbolCache;\n        _this.summaryResolver = summaryResolver;\n        return _this;\n    }\n    /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.deserialize = /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    function (libraryFileName, json) {\n        var _this = this;\n        var /** @type {?} */ data = JSON.parse(json);\n        var /** @type {?} */ importAs = [];\n        this.symbols = [];\n        data.symbols.forEach(function (serializedSymbol) {\n            var /** @type {?} */ symbol = _this.symbolCache.get(_this.summaryResolver.fromSummaryFileName(serializedSymbol.filePath, libraryFileName), serializedSymbol.name);\n            _this.symbols.push(symbol);\n            if (serializedSymbol.importAs) {\n                importAs.push({ symbol: symbol, importAs: serializedSymbol.importAs });\n            }\n        });\n        var /** @type {?} */ summaries = visitValue(data.summaries, this, null);\n        return { summaries: summaries, importAs: importAs };\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    function (map, context) {\n        if ('__symbol' in map) {\n            var /** @type {?} */ baseSymbol = this.symbols[map['__symbol']];\n            var /** @type {?} */ members = map['members'];\n            return members.length ? this.symbolCache.get(baseSymbol.filePath, baseSymbol.name, members) :\n                baseSymbol;\n        }\n        else {\n            return _super.prototype.visitStringMap.call(this, map, context);\n        }\n    };\n    return FromJsonDeserializer;\n}(ValueTransformer));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar StubEmitFlags = {\n    Basic: 1,\n    TypeCheck: 2,\n    All: 3,\n};\nStubEmitFlags[StubEmitFlags.Basic] = \"Basic\";\nStubEmitFlags[StubEmitFlags.TypeCheck] = \"TypeCheck\";\nStubEmitFlags[StubEmitFlags.All] = \"All\";\nvar AotCompiler = (function () {\n    function AotCompiler(_config, _options, _host, _reflector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _typeCheckCompiler, _ngModuleCompiler, _outputEmitter, _summaryResolver, _symbolResolver) {\n        this._config = _config;\n        this._options = _options;\n        this._host = _host;\n        this._reflector = _reflector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._typeCheckCompiler = _typeCheckCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._outputEmitter = _outputEmitter;\n        this._summaryResolver = _summaryResolver;\n        this._symbolResolver = _symbolResolver;\n        this._templateAstCache = new Map();\n        this._analyzedFiles = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    AotCompiler.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () { this._metadataResolver.clearCache(); };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesSync = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        analyzeResult.ngModules.forEach(function (ngModule) {\n            return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true);\n        });\n        return analyzeResult;\n    };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesAsync = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        return Promise\n            .all(analyzeResult.ngModules.map(function (ngModule) {\n            return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false);\n        }))\n            .then(function () { return analyzeResult; });\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype._analyzeFile = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        var /** @type {?} */ analyzedFile = this._analyzedFiles.get(fileName);\n        if (!analyzedFile) {\n            analyzedFile =\n                analyzeFile(this._host, this._symbolResolver, this._metadataResolver, fileName);\n            this._analyzedFiles.set(fileName, analyzedFile);\n        }\n        return analyzedFile;\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype.findGeneratedFileNames = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        var _this = this;\n        var /** @type {?} */ genFileNames = [];\n        var /** @type {?} */ file = this._analyzeFile(fileName);\n        // Make sure we create a .ngfactory if we have a injectable/directive/pipe/NgModule\n        // or a reference to a non source file.\n        // Note: This is overestimating the required .ngfactory files as the real calculation is harder.\n        // Only do this for StubEmitFlags.Basic, as adding a type check block\n        // does not change this file (as we generate type check blocks based on NgModules).\n        if (this._options.allowEmptyCodegenFiles || file.directives.length || file.pipes.length ||\n            file.injectables.length || file.ngModules.length || file.exportsNonSourceFiles) {\n            genFileNames.push(ngfactoryFilePath(file.fileName, true));\n            genFileNames.push(summaryForJitFileName(file.fileName, true));\n        }\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(file.fileName, true)[1];\n        file.directives.forEach(function (dirSymbol) {\n            var /** @type {?} */ compMeta = /** @type {?} */ ((_this._metadataResolver.getNonNormalizedDirectiveMetadata(dirSymbol))).metadata;\n            if (!compMeta.isComponent) {\n                return;\n            } /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).styleUrls.forEach(function (styleUrl) {\n                var /** @type {?} */ normalizedUrl = _this._host.resourceNameToFileName(styleUrl, file.fileName);\n                if (!normalizedUrl) {\n                    throw new Error(\"Couldn't resolve resource \" + styleUrl + \" relative to \" + file.fileName);\n                }\n                var /** @type {?} */ needsShim = (/** @type {?} */ ((compMeta.template)).encapsulation || _this._config.defaultEncapsulation) === ViewEncapsulation.Emulated;\n                genFileNames.push(_stylesModuleUrl(normalizedUrl, needsShim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    genFileNames.push(_stylesModuleUrl(normalizedUrl, !needsShim, fileSuffix));\n                }\n            });\n        });\n        return genFileNames;\n    };\n    /**\n     * @param {?} genFileName\n     * @param {?=} originalFileName\n     * @return {?}\n     */\n    AotCompiler.prototype.emitBasicStub = /**\n     * @param {?} genFileName\n     * @param {?=} originalFileName\n     * @return {?}\n     */\n    function (genFileName, originalFileName) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            if (!originalFileName) {\n                throw new Error(\"Assertion error: require the original file for .ngfactory.ts stubs. File: \" + genFileName);\n            }\n            var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n            this._createNgFactoryStub(outputCtx, originalFile, StubEmitFlags.Basic);\n        }\n        else if (genFileName.endsWith('.ngsummary.ts')) {\n            if (this._options.enableSummariesForJit) {\n                if (!originalFileName) {\n                    throw new Error(\"Assertion error: require the original file for .ngsummary.ts stubs. File: \" + genFileName);\n                }\n                var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n                _createEmptyStub(outputCtx);\n                originalFile.ngModules.forEach(function (ngModule) {\n                    // create exports that user code can reference\n                    createForJitStub(outputCtx, ngModule.type.reference);\n                });\n            }\n        }\n        else if (genFileName.endsWith('.ngstyle.ts')) {\n            _createEmptyStub(outputCtx);\n        }\n        // Note: for the stubs, we don't need a property srcFileUrl,\n        // as lateron in emitAllImpls we will create the proper GeneratedFiles with the\n        // correct srcFileUrl.\n        // This is good as e.g. for .ngstyle.ts files we can't derive\n        // the url of components based on the genFileUrl.\n        return this._codegenSourceModule('unknown', outputCtx);\n    };\n    /**\n     * @param {?} genFileName\n     * @param {?} originalFileName\n     * @return {?}\n     */\n    AotCompiler.prototype.emitTypeCheckStub = /**\n     * @param {?} genFileName\n     * @param {?} originalFileName\n     * @return {?}\n     */\n    function (genFileName, originalFileName) {\n        var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n        var /** @type {?} */ outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            this._createNgFactoryStub(outputCtx, originalFile, StubEmitFlags.TypeCheck);\n        }\n        return outputCtx.statements.length > 0 ?\n            this._codegenSourceModule(originalFile.fileName, outputCtx) :\n            null;\n    };\n    /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    AotCompiler.prototype.loadFilesAsync = /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    function (fileNames) {\n        var _this = this;\n        var /** @type {?} */ files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        var /** @type {?} */ loadingPromises = [];\n        files.forEach(function (file) {\n            return file.ngModules.forEach(function (ngModule) {\n                return loadingPromises.push(_this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false));\n            });\n        });\n        return Promise.all(loadingPromises).then(function (_) { return mergeAndValidateNgFiles(files); });\n    };\n    /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    AotCompiler.prototype.loadFilesSync = /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    function (fileNames) {\n        var _this = this;\n        var /** @type {?} */ files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        files.forEach(function (file) {\n            return file.ngModules.forEach(function (ngModule) {\n                return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true);\n            });\n        });\n        return mergeAndValidateNgFiles(files);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    AotCompiler.prototype._createNgFactoryStub = /**\n     * @param {?} outputCtx\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    function (outputCtx, file, emitFlags) {\n        var _this = this;\n        file.ngModules.forEach(function (ngModuleMeta, ngModuleIndex) {\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the typecheck block.\n            // create exports that user code can reference\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the typecheck block.\n            // create exports that user code can reference\n            _this._ngModuleCompiler.createStub(outputCtx, ngModuleMeta.type.reference);\n            // add references to the symbols from the metadata.\n            // These can be used by the type check block for components,\n            // and they also cause TypeScript to include these files into the program too,\n            // which will make them part of the analyzedFiles.\n            var /** @type {?} */ externalReferences = ngModuleMeta.declaredDirectives.map(function (d) { return d.reference; }).concat(ngModuleMeta.declaredPipes.map(function (d) { return d.reference; }), ngModuleMeta.importedModules.map(function (m) { return m.type.reference; }), ngModuleMeta.exportedModules.map(function (m) { return m.type.reference; }));\n            var /** @type {?} */ externalReferenceVars = new Map();\n            externalReferences.forEach(function (ref, typeIndex) {\n                if (_this._host.isSourceFile(ref.filePath)) {\n                    externalReferenceVars.set(ref, \"_decl\" + ngModuleIndex + \"_\" + typeIndex);\n                }\n            });\n            externalReferenceVars.forEach(function (varName, reference) {\n                outputCtx.statements.push(variable(varName)\n                    .set(NULL_EXPR.cast(DYNAMIC_TYPE))\n                    .toDeclStmt(expressionType(outputCtx.importExpr(reference))));\n            });\n            if (emitFlags & StubEmitFlags.TypeCheck) {\n                // add the typecheck block for all components of the NgModule\n                ngModuleMeta.declaredDirectives.forEach(function (dirId) {\n                    var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(dirId.reference);\n                    if (!compMeta.isComponent) {\n                        return;\n                    }\n                    _this._createTypeCheckBlock(outputCtx, ngModuleMeta, _this._metadataResolver.getHostComponentMetadata(compMeta), [compMeta.type], externalReferenceVars);\n                    _this._createTypeCheckBlock(outputCtx, ngModuleMeta, compMeta, ngModuleMeta.transitiveModule.directives, externalReferenceVars);\n                });\n            }\n        });\n        if (outputCtx.statements.length === 0) {\n            _createEmptyStub(outputCtx);\n        }\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} moduleMeta\n     * @param {?} compMeta\n     * @param {?} directives\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    AotCompiler.prototype._createTypeCheckBlock = /**\n     * @param {?} ctx\n     * @param {?} moduleMeta\n     * @param {?} compMeta\n     * @param {?} directives\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    function (ctx, moduleMeta, compMeta, directives, externalReferenceVars) {\n        var _a = this._parseTemplate(compMeta, moduleMeta, directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        (_b = ctx.statements).push.apply(_b, this._typeCheckCompiler.compileComponent(compMeta, parsedTemplate, usedPipes, externalReferenceVars));\n        var _b;\n    };\n    /**\n     * @param {?} analyzeResult\n     * @param {?} locale\n     * @return {?}\n     */\n    AotCompiler.prototype.emitMessageBundle = /**\n     * @param {?} analyzeResult\n     * @param {?} locale\n     * @return {?}\n     */\n    function (analyzeResult, locale) {\n        var _this = this;\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        analyzeResult.files.forEach(function (file) {\n            var /** @type {?} */ compMetas = [];\n            file.directives.forEach(function (directiveType) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(directiveType);\n                if (dirMeta && dirMeta.isComponent) {\n                    compMetas.push(dirMeta);\n                }\n            });\n            compMetas.forEach(function (compMeta) {\n                var /** @type {?} */ html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                errors.push.apply(errors, /** @type {?} */ ((messageBundle.updateFromTemplate(html, file.fileName, interpolationConfig))));\n            });\n        });\n        if (errors.length) {\n            throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n        }\n        return messageBundle;\n    };\n    /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    AotCompiler.prototype.emitAllImpls = /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    function (analyzeResult) {\n        var _this = this;\n        var ngModuleByPipeOrDirective = analyzeResult.ngModuleByPipeOrDirective, files = analyzeResult.files;\n        var /** @type {?} */ sourceModules = files.map(function (file) {\n            return _this._compileImplFile(file.fileName, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables);\n        });\n        return flatten(sourceModules);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    AotCompiler.prototype._compileImplFile = /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    function (srcFileUrl, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n        var _this = this;\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(srcFileUrl, true)[1];\n        var /** @type {?} */ generatedFiles = [];\n        var /** @type {?} */ outputCtx = this._createOutputContext(ngfactoryFilePath(srcFileUrl, true));\n        generatedFiles.push.apply(generatedFiles, this._createSummary(srcFileUrl, directives, pipes, ngModules, injectables, outputCtx));\n        // compile all ng modules\n        ngModules.forEach(function (ngModuleMeta) { return _this._compileModule(outputCtx, ngModuleMeta); });\n        // compile components\n        directives.forEach(function (dirType) {\n            var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(/** @type {?} */ (dirType));\n            if (!compMeta.isComponent) {\n                return;\n            }\n            var /** @type {?} */ ngModule = ngModuleByPipeOrDirective.get(dirType);\n            if (!ngModule) {\n                throw new Error(\"Internal Error: cannot determine the module for component \" + identifierName(compMeta.type) + \"!\");\n            }\n            // compile styles\n            var /** @type {?} */ componentStylesheet = _this._styleCompiler.compileComponent(outputCtx, compMeta); /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n                // Note: fill non shim and shim style files as they might\n                // be shared by component with and without ViewEncapsulation.\n                var /** @type {?} */ shim = _this._styleCompiler.needsStyleShim(compMeta);\n                generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, shim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, !shim, fileSuffix));\n                }\n            });\n            // compile components\n            var /** @type {?} */ compViewVars = _this._compileComponent(outputCtx, compMeta, ngModule, ngModule.transitiveModule.directives, componentStylesheet, fileSuffix);\n            _this._compileComponentFactory(outputCtx, compMeta, ngModule, fileSuffix);\n        });\n        if (outputCtx.statements.length > 0 || this._options.allowEmptyCodegenFiles) {\n            var /** @type {?} */ srcModule = this._codegenSourceModule(srcFileUrl, outputCtx);\n            generatedFiles.unshift(srcModule);\n        }\n        return generatedFiles;\n    };\n    /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    AotCompiler.prototype._createSummary = /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    function (srcFileName, directives, pipes, ngModules, injectables, ngFactoryCtx) {\n        var _this = this;\n        var /** @type {?} */ symbolSummaries = this._symbolResolver.getSymbolsOf(srcFileName)\n            .map(function (symbol) { return _this._symbolResolver.resolveSymbol(symbol); });\n        var /** @type {?} */ typeData = ngModules.map(function (meta) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getNgModuleSummary(meta.type.reference))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(meta.type.reference)))\n            });\n        }).concat(directives.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getDirectiveSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getDirectiveMetadata(ref)))\n            });\n        }), pipes.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getPipeSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getPipeMetadata(ref)))\n            });\n        }), injectables.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))).type\n            });\n        }));\n        var /** @type {?} */ forJitOutputCtx = this._createOutputContext(summaryForJitFileName(srcFileName, true));\n        var _a = serializeSummaries(srcFileName, forJitOutputCtx, this._summaryResolver, this._symbolResolver, symbolSummaries, typeData), json = _a.json, exportAs = _a.exportAs;\n        exportAs.forEach(function (entry) {\n            ngFactoryCtx.statements.push(variable(entry.exportAs).set(ngFactoryCtx.importExpr(entry.symbol)).toDeclStmt(null, [\n                StmtModifier.Exported\n            ]));\n        });\n        var /** @type {?} */ summaryJson = new GeneratedFile(srcFileName, summaryFileName(srcFileName), json);\n        if (this._options.enableSummariesForJit) {\n            return [summaryJson, this._codegenSourceModule(srcFileName, forJitOutputCtx)];\n        }\n        return [summaryJson];\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} ngModule\n     * @return {?}\n     */\n    AotCompiler.prototype._compileModule = /**\n     * @param {?} outputCtx\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (outputCtx, ngModule) {\n        var /** @type {?} */ providers = [];\n        if (this._options.locale) {\n            var /** @type {?} */ normalizedLocale = this._options.locale.replace(/_/g, '-');\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.LOCALE_ID),\n                useValue: normalizedLocale,\n            });\n        }\n        if (this._options.i18nFormat) {\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.TRANSLATIONS_FORMAT),\n                useValue: this._options.i18nFormat\n            });\n        }\n        this._ngModuleCompiler.compile(outputCtx, ngModule, providers);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponentFactory = /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (outputCtx, compMeta, ngModule, fileSuffix) {\n        var /** @type {?} */ hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta);\n        var /** @type {?} */ hostViewFactoryVar = this._compileComponent(outputCtx, hostMeta, ngModule, [compMeta.type], null, fileSuffix)\n            .viewClassVar;\n        var /** @type {?} */ compFactoryVar = componentFactoryName(compMeta.type.reference);\n        var /** @type {?} */ inputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.inputs) {\n            var /** @type {?} */ templateName = compMeta.inputs[propName];\n            // Don't quote so that the key gets minified...\n            inputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        var /** @type {?} */ outputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.outputs) {\n            var /** @type {?} */ templateName = compMeta.outputs[propName];\n            // Don't quote so that the key gets minified...\n            outputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        outputCtx.statements.push(variable(compFactoryVar)\n            .set(importExpr(Identifiers.createComponentFactory).callFn([\n            literal(compMeta.selector), outputCtx.importExpr(compMeta.type.reference),\n            variable(hostViewFactoryVar), new LiteralMapExpr(inputsExprs),\n            new LiteralMapExpr(outputsExprs),\n            literalArr(/** @type {?} */ ((compMeta.template)).ngContentSelectors.map(function (selector) { return literal(selector); }))\n        ]))\n            .toDeclStmt(importType(Identifiers.ComponentFactory, [/** @type {?} */ ((expressionType(outputCtx.importExpr(compMeta.type.reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]));\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (outputCtx, compMeta, ngModule, directiveIdentifiers, componentStyles, fileSuffix) {\n        var _a = this._parseTemplate(compMeta, ngModule, directiveIdentifiers), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ stylesExpr = componentStyles ? variable(componentStyles.stylesVar) : literalArr([]);\n        var /** @type {?} */ viewResult = this._viewCompiler.compileComponent(outputCtx, compMeta, parsedTemplate, stylesExpr, usedPipes);\n        if (componentStyles) {\n            _resolveStyleStatements(this._symbolResolver, componentStyles, this._styleCompiler.needsStyleShim(compMeta), fileSuffix);\n        }\n        return viewResult;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    AotCompiler.prototype._parseTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        if (this._templateAstCache.has(compMeta.type.reference)) {\n            return /** @type {?} */ ((this._templateAstCache.get(compMeta.type.reference)));\n        }\n        var /** @type {?} */ preserveWhitespaces = /** @type {?} */ ((/** @type {?} */ ((compMeta)).template)).preserveWhitespaces;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var /** @type {?} */ result = this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n        this._templateAstCache.set(compMeta.type.reference, result);\n        return result;\n    };\n    /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    AotCompiler.prototype._createOutputContext = /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    function (genFilePath) {\n        var _this = this;\n        var /** @type {?} */ importExpr$$1 = function (symbol, typeParams) {\n            if (typeParams === void 0) { typeParams = null; }\n            if (!(symbol instanceof StaticSymbol)) {\n                throw new Error(\"Internal error: unknown identifier \" + JSON.stringify(symbol));\n            }\n            var /** @type {?} */ arity = _this._symbolResolver.getTypeArity(symbol) || 0;\n            var _a = _this._symbolResolver.getImportAs(symbol) || symbol, filePath = _a.filePath, name = _a.name, members = _a.members;\n            var /** @type {?} */ importModule = _this._symbolResolver.fileNameToModuleName(filePath, genFilePath);\n            // It should be good enough to compare filePath to genFilePath and if they are equal\n            // there is a self reference. However, ngfactory files generate to .ts but their\n            // symbols have .d.ts so a simple compare is insufficient. They should be canonical\n            // and is tracked by #17705.\n            var /** @type {?} */ selfReference = _this._symbolResolver.fileNameToModuleName(genFilePath, genFilePath);\n            var /** @type {?} */ moduleName = importModule === selfReference ? null : importModule;\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedTypeParams = typeParams || [];\n            var /** @type {?} */ missingTypeParamsCount = arity - suppliedTypeParams.length;\n            var /** @type {?} */ allTypeParams = suppliedTypeParams.concat(new Array(missingTypeParamsCount).fill(DYNAMIC_TYPE));\n            return members.reduce(function (expr, memberName) { return expr.prop(memberName); }, /** @type {?} */ (importExpr(new ExternalReference(moduleName, name, null), allTypeParams)));\n        };\n        return { statements: [], genFilePath: genFilePath, importExpr: importExpr$$1 };\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} isShimmed\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenStyles = /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} isShimmed\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (srcFileUrl, compMeta, stylesheetMetadata, isShimmed, fileSuffix) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(_stylesModuleUrl(/** @type {?} */ ((stylesheetMetadata.moduleUrl)), isShimmed, fileSuffix));\n        var /** @type {?} */ compiledStylesheet = this._styleCompiler.compileStyles(outputCtx, compMeta, stylesheetMetadata, isShimmed);\n        _resolveStyleStatements(this._symbolResolver, compiledStylesheet, isShimmed, fileSuffix);\n        return this._codegenSourceModule(srcFileUrl, outputCtx);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenSourceModule = /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (srcFileUrl, ctx) {\n        return new GeneratedFile(srcFileUrl, ctx.genFilePath, ctx.statements);\n    };\n    return AotCompiler;\n}());\n/**\n * @param {?} outputCtx\n * @return {?}\n */\nfunction _createEmptyStub(outputCtx) {\n    // Note: We need to produce at least one import statement so that\n    // TypeScript knows that the file is an es6 module. Otherwise our generated\n    // exports / imports won't be emitted properly by TypeScript.\n    outputCtx.statements.push(importExpr(Identifiers.ComponentFactory).toStmt());\n}\n/**\n * @param {?} symbolResolver\n * @param {?} compileResult\n * @param {?} needsShim\n * @param {?} fileSuffix\n * @return {?}\n */\nfunction _resolveStyleStatements(symbolResolver, compileResult, needsShim, fileSuffix) {\n    compileResult.dependencies.forEach(function (dep) {\n        dep.setValue(symbolResolver.getStaticSymbol(_stylesModuleUrl(dep.moduleUrl, needsShim, fileSuffix), dep.name));\n    });\n}\n/**\n * @param {?} stylesheetUrl\n * @param {?} shim\n * @param {?} suffix\n * @return {?}\n */\nfunction _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n    return \"\" + stylesheetUrl + (shim ? '.shim' : '') + \".ngstyle\" + suffix;\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var /** @type {?} */ files = _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver);\n    return mergeAnalyzedFiles(files);\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeAndValidateNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    return validateAnalyzedModules(analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver));\n}\n/**\n * @param {?} analyzedModules\n * @return {?}\n */\nfunction validateAnalyzedModules(analyzedModules) {\n    if (analyzedModules.symbolsMissingModule && analyzedModules.symbolsMissingModule.length) {\n        var /** @type {?} */ messages = analyzedModules.symbolsMissingModule.map(function (s) {\n            return \"Cannot determine the module for class \" + s.name + \" in \" + s.filePath + \"! Add \" + s.name + \" to the NgModule to fix it.\";\n        });\n        throw syntaxError(messages.join('\\n'));\n    }\n    return analyzedModules;\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var /** @type {?} */ seenFiles = new Set();\n    var /** @type {?} */ files = [];\n    var /** @type {?} */ visitFile = function (fileName) {\n        if (seenFiles.has(fileName) || !host.isSourceFile(fileName)) {\n            return false;\n        }\n        seenFiles.add(fileName);\n        var /** @type {?} */ analyzedFile = analyzeFile(host, staticSymbolResolver, metadataResolver, fileName);\n        files.push(analyzedFile);\n        analyzedFile.ngModules.forEach(function (ngModule) {\n            ngModule.transitiveModule.modules.forEach(function (modMeta) { return visitFile(modMeta.reference.filePath); });\n        });\n    };\n    fileNames.forEach(function (fileName) { return visitFile(fileName); });\n    return files;\n}\n/**\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @param {?} fileName\n * @return {?}\n */\nfunction analyzeFile(host, staticSymbolResolver, metadataResolver, fileName) {\n    var /** @type {?} */ directives = [];\n    var /** @type {?} */ pipes = [];\n    var /** @type {?} */ injectables = [];\n    var /** @type {?} */ ngModules = [];\n    var /** @type {?} */ hasDecorators = staticSymbolResolver.hasDecorators(fileName);\n    var /** @type {?} */ exportsNonSourceFiles = false;\n    // Don't analyze .d.ts files that have no decorators as a shortcut\n    // to speed up the analysis. This prevents us from\n    // resolving the references in these files.\n    // Note: exportsNonSourceFiles is only needed when compiling with summaries,\n    // which is not the case when .d.ts files are treated as input files.\n    if (!fileName.endsWith('.d.ts') || hasDecorators) {\n        staticSymbolResolver.getSymbolsOf(fileName).forEach(function (symbol) {\n            var /** @type {?} */ resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            var /** @type {?} */ symbolMeta = resolvedSymbol.metadata;\n            if (!symbolMeta || symbolMeta.__symbolic === 'error') {\n                return;\n            }\n            var /** @type {?} */ isNgSymbol = false;\n            if (symbolMeta.__symbolic === 'class') {\n                if (metadataResolver.isDirective(symbol)) {\n                    isNgSymbol = true;\n                    directives.push(symbol);\n                }\n                else if (metadataResolver.isPipe(symbol)) {\n                    isNgSymbol = true;\n                    pipes.push(symbol);\n                }\n                else if (metadataResolver.isInjectable(symbol)) {\n                    isNgSymbol = true;\n                    injectables.push(symbol);\n                }\n                else {\n                    var /** @type {?} */ ngModule = metadataResolver.getNgModuleMetadata(symbol, false);\n                    if (ngModule) {\n                        isNgSymbol = true;\n                        ngModules.push(ngModule);\n                    }\n                }\n            }\n            if (!isNgSymbol) {\n                exportsNonSourceFiles =\n                    exportsNonSourceFiles || isValueExportingNonSourceFile(host, symbolMeta);\n            }\n        });\n    }\n    return {\n        fileName: fileName, directives: directives, pipes: pipes, ngModules: ngModules, injectables: injectables, exportsNonSourceFiles: exportsNonSourceFiles,\n    };\n}\n/**\n * @param {?} host\n * @param {?} metadata\n * @return {?}\n */\nfunction isValueExportingNonSourceFile(host, metadata) {\n    var /** @type {?} */ exportsNonSourceFiles = false;\n    var Visitor = (function () {\n        function Visitor() {\n        }\n        /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitArray = /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        function (arr, context) {\n            var _this = this;\n            arr.forEach(function (v) { return visitValue(v, _this, context); });\n        };\n        /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitStringMap = /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        function (map, context) {\n            var _this = this;\n            Object.keys(map).forEach(function (key) { return visitValue(map[key], _this, context); });\n        };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitPrimitive = /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        function (value, context) { };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitOther = /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        function (value, context) {\n            if (value instanceof StaticSymbol && !host.isSourceFile(value.filePath)) {\n                exportsNonSourceFiles = true;\n            }\n        };\n        return Visitor;\n    }());\n    visitValue(metadata, new Visitor(), null);\n    return exportsNonSourceFiles;\n}\n/**\n * @param {?} analyzedFiles\n * @return {?}\n */\nfunction mergeAnalyzedFiles(analyzedFiles) {\n    var /** @type {?} */ allNgModules = [];\n    var /** @type {?} */ ngModuleByPipeOrDirective = new Map();\n    var /** @type {?} */ allPipesAndDirectives = new Set();\n    analyzedFiles.forEach(function (af) {\n        af.ngModules.forEach(function (ngModule) {\n            allNgModules.push(ngModule);\n            ngModule.declaredDirectives.forEach(function (d) { return ngModuleByPipeOrDirective.set(d.reference, ngModule); });\n            ngModule.declaredPipes.forEach(function (p) { return ngModuleByPipeOrDirective.set(p.reference, ngModule); });\n        });\n        af.directives.forEach(function (d) { return allPipesAndDirectives.add(d); });\n        af.pipes.forEach(function (p) { return allPipesAndDirectives.add(p); });\n    });\n    var /** @type {?} */ symbolsMissingModule = [];\n    allPipesAndDirectives.forEach(function (ref) {\n        if (!ngModuleByPipeOrDirective.has(ref)) {\n            symbolsMissingModule.push(ref);\n        }\n    });\n    return {\n        ngModules: allNgModules,\n        ngModuleByPipeOrDirective: ngModuleByPipeOrDirective,\n        symbolsMissingModule: symbolsMissingModule,\n        files: analyzedFiles\n    };\n}\n/**\n * @param {?} files\n * @return {?}\n */\nfunction mergeAndValidateNgFiles(files) {\n    return validateAnalyzedModules(mergeAnalyzedFiles(files));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANGULAR_CORE = '@angular/core';\nvar ANGULAR_ROUTER = '@angular/router';\nvar HIDDEN_KEY = /^\\$.*\\$$/;\nvar IGNORE = {\n    __symbolic: 'ignore'\n};\nvar USE_VALUE = 'useValue';\nvar PROVIDE = 'provide';\nvar REFERENCE_SET = new Set([USE_VALUE, 'useFactory', 'data']);\n/**\n * @param {?} value\n * @return {?}\n */\nfunction shouldIgnore(value) {\n    return value && value.__symbolic == 'ignore';\n}\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nvar StaticReflector = (function () {\n    function StaticReflector(summaryResolver, symbolResolver, knownMetadataClasses, knownMetadataFunctions, errorRecorder) {\n        if (knownMetadataClasses === void 0) { knownMetadataClasses = []; }\n        if (knownMetadataFunctions === void 0) { knownMetadataFunctions = []; }\n        var _this = this;\n        this.summaryResolver = summaryResolver;\n        this.symbolResolver = symbolResolver;\n        this.errorRecorder = errorRecorder;\n        this.annotationCache = new Map();\n        this.propertyCache = new Map();\n        this.parameterCache = new Map();\n        this.methodCache = new Map();\n        this.conversionMap = new Map();\n        this.annotationForParentClassWithSummaryKind = new Map();\n        this.initializeConversionMap();\n        knownMetadataClasses.forEach(function (kc) {\n            return _this._registerDecoratorOrConstructor(_this.getStaticSymbol(kc.filePath, kc.name), kc.ctor);\n        });\n        knownMetadataFunctions.forEach(function (kf) { return _this._registerFunction(_this.getStaticSymbol(kf.filePath, kf.name), kf.fn); });\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Directive, [createDirective, createComponent]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Pipe, [createPipe]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.NgModule, [createNgModule]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Injectable, [createInjectable, createPipe, createDirective, createComponent, createNgModule]);\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    StaticReflector.prototype.componentModuleUrl = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        var /** @type {?} */ staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n        return this.symbolResolver.getResourcePath(staticSymbol);\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    StaticReflector.prototype.resolveExternalReference = /**\n     * @param {?} ref\n     * @return {?}\n     */\n    function (ref) {\n        var /** @type {?} */ refSymbol = this.symbolResolver.getSymbolByModule(/** @type {?} */ ((ref.moduleName)), /** @type {?} */ ((ref.name)));\n        var /** @type {?} */ declarationSymbol = this.findSymbolDeclaration(refSymbol);\n        this.symbolResolver.recordModuleNameForFileName(refSymbol.filePath, /** @type {?} */ ((ref.moduleName)));\n        this.symbolResolver.recordImportAs(declarationSymbol, refSymbol);\n        return declarationSymbol;\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.findDeclaration = /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (moduleUrl, name, containingFile) {\n        return this.findSymbolDeclaration(this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    StaticReflector.prototype.tryFindDeclaration = /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    function (moduleUrl, name) {\n        var _this = this;\n        return this.symbolResolver.ignoreErrorsFor(function () { return _this.findDeclaration(moduleUrl, name); });\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    StaticReflector.prototype.findSymbolDeclaration = /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    function (symbol) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n        if (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            return this.findSymbolDeclaration(resolvedSymbol.metadata);\n        }\n        else {\n            return symbol;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.annotations = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ annotations = this.annotationCache.get(type);\n        if (!annotations) {\n            annotations = [];\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentAnnotations = this.annotations(parentType);\n                annotations.push.apply(annotations, parentAnnotations);\n            }\n            var /** @type {?} */ ownAnnotations_1 = [];\n            if (classMetadata['decorators']) {\n                ownAnnotations_1 = this.simplify(type, classMetadata['decorators']);\n                annotations.push.apply(annotations, ownAnnotations_1);\n            }\n            if (parentType && !this.summaryResolver.isLibraryFile(type.filePath) &&\n                this.summaryResolver.isLibraryFile(parentType.filePath)) {\n                var /** @type {?} */ summary = this.summaryResolver.resolveSummary(parentType);\n                if (summary && summary.type) {\n                    var /** @type {?} */ requiredAnnotationTypes = /** @type {?} */ ((this.annotationForParentClassWithSummaryKind.get(/** @type {?} */ ((summary.type.summaryKind)))));\n                    var /** @type {?} */ typeHasRequiredAnnotation = requiredAnnotationTypes.some(function (requiredType) { return ownAnnotations_1.some(function (ann) { return requiredType.isTypeOf(ann); }); });\n                    if (!typeHasRequiredAnnotation) {\n                        this.reportError(syntaxError(\"Class \" + type.name + \" in \" + type.filePath + \" extends from a \" + CompileSummaryKind[(/** @type {?} */ ((summary.type.summaryKind)))] + \" in another compilation unit without duplicating the decorator. \" +\n                            (\"Please add a \" + requiredAnnotationTypes.map(function (type) { return type.ngMetadataName; }).join(' or ') + \" decorator to the class.\")), type);\n                    }\n                }\n            }\n            this.annotationCache.set(type, annotations.filter(function (ann) { return !!ann; }));\n        }\n        return annotations;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.propMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        var /** @type {?} */ propMetadata = this.propertyCache.get(type);\n        if (!propMetadata) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            propMetadata = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentType);\n                Object.keys(parentPropMetadata_1).forEach(function (parentProp) {\n                    /** @type {?} */ ((propMetadata))[parentProp] = parentPropMetadata_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_1 = classMetadata['members'] || {};\n            Object.keys(members_1).forEach(function (propName) {\n                var /** @type {?} */ propData = members_1[propName];\n                var /** @type {?} */ prop = (/** @type {?} */ (propData))\n                    .find(function (a) { return a['__symbolic'] == 'property' || a['__symbolic'] == 'method'; });\n                var /** @type {?} */ decorators = [];\n                if (/** @type {?} */ ((propMetadata))[propName]) {\n                    decorators.push.apply(decorators, /** @type {?} */ ((propMetadata))[propName]);\n                } /** @type {?} */\n                ((propMetadata))[propName] = decorators;\n                if (prop && prop['decorators']) {\n                    decorators.push.apply(decorators, _this.simplify(type, prop['decorators']));\n                }\n            });\n            this.propertyCache.set(type, propMetadata);\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.parameters = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"parameters received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return [];\n        }\n        try {\n            var /** @type {?} */ parameters_1 = this.parameterCache.get(type);\n            if (!parameters_1) {\n                var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n                var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n                var /** @type {?} */ members = classMetadata ? classMetadata['members'] : null;\n                var /** @type {?} */ ctorData = members ? members['__ctor__'] : null;\n                if (ctorData) {\n                    var /** @type {?} */ ctor = (/** @type {?} */ (ctorData)).find(function (a) { return a['__symbolic'] == 'constructor'; });\n                    var /** @type {?} */ rawParameterTypes = /** @type {?} */ (ctor['parameters']) || [];\n                    var /** @type {?} */ parameterDecorators_1 = /** @type {?} */ (this.simplify(type, ctor['parameterDecorators'] || []));\n                    parameters_1 = [];\n                    rawParameterTypes.forEach(function (rawParamType, index) {\n                        var /** @type {?} */ nestedResult = [];\n                        var /** @type {?} */ paramType = _this.trySimplify(type, rawParamType);\n                        if (paramType)\n                            nestedResult.push(paramType);\n                        var /** @type {?} */ decorators = parameterDecorators_1 ? parameterDecorators_1[index] : null;\n                        if (decorators) {\n                            nestedResult.push.apply(nestedResult, decorators);\n                        } /** @type {?} */\n                        ((parameters_1)).push(nestedResult);\n                    });\n                }\n                else if (parentType) {\n                    parameters_1 = this.parameters(parentType);\n                }\n                if (!parameters_1) {\n                    parameters_1 = [];\n                }\n                this.parameterCache.set(type, parameters_1);\n            }\n            return parameters_1;\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype._methodNames = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ methodNames = this.methodCache.get(type);\n        if (!methodNames) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            methodNames = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentMethodNames_1 = this._methodNames(parentType);\n                Object.keys(parentMethodNames_1).forEach(function (parentProp) {\n                    /** @type {?} */ ((methodNames))[parentProp] = parentMethodNames_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_2 = classMetadata['members'] || {};\n            Object.keys(members_2).forEach(function (propName) {\n                var /** @type {?} */ propData = members_2[propName];\n                var /** @type {?} */ isMethod = (/** @type {?} */ (propData)).some(function (a) { return a['__symbolic'] == 'method'; }); /** @type {?} */\n                ((methodNames))[propName] = /** @type {?} */ ((methodNames))[propName] || isMethod;\n            });\n            this.methodCache.set(type, methodNames);\n        }\n        return methodNames;\n    };\n    /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    StaticReflector.prototype.findParentType = /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    function (type, classMetadata) {\n        var /** @type {?} */ parentType = this.trySimplify(type, classMetadata['extends']);\n        if (parentType instanceof StaticSymbol) {\n            return parentType;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    StaticReflector.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"hasLifecycleHook received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n        }\n        try {\n            return !!this._methodNames(type)[lcProperty];\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    StaticReflector.prototype._registerDecoratorOrConstructor = /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    function (type, ctor) {\n        this.conversionMap.set(type, function (context, args) { return new (ctor.bind.apply(ctor, [void 0].concat(args)))(); });\n    };\n    /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    StaticReflector.prototype._registerFunction = /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    function (type, fn) {\n        this.conversionMap.set(type, function (context, args) { return fn.apply(undefined, args); });\n    };\n    /**\n     * @return {?}\n     */\n    StaticReflector.prototype.initializeConversionMap = /**\n     * @return {?}\n     */\n    function () {\n        this.injectionToken = this.findDeclaration(ANGULAR_CORE, 'InjectionToken');\n        this.ROUTES = this.tryFindDeclaration(ANGULAR_ROUTER, 'ROUTES');\n        this.ANALYZE_FOR_ENTRY_COMPONENTS =\n            this.findDeclaration(ANGULAR_CORE, 'ANALYZE_FOR_ENTRY_COMPONENTS');\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Injectable'), createInjectable);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Inject'), createInject);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Attribute'), createAttribute);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChild'), createContentChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChildren'), createContentChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChild'), createViewChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChildren'), createViewChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Input'), createInput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Output'), createOutput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Pipe'), createPipe);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostBinding'), createHostBinding);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostListener'), createHostListener);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Directive'), createDirective);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Component'), createComponent);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'NgModule'), createNgModule);\n        // Note: Some metadata classes can be used directly with Provider.deps.\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     */\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticReflector.prototype.getStaticSymbol = /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n    };\n    /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticReflector.prototype.reportError = /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.trySimplify = /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    function (context, value) {\n        var /** @type {?} */ originalRecorder = this.errorRecorder;\n        this.errorRecorder = function (error, fileName) { };\n        var /** @type {?} */ result = this.simplify(context, value);\n        this.errorRecorder = originalRecorder;\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.simplify = /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    function (context, value) {\n        var _this = this;\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ scope = BindingScope.empty;\n        var /** @type {?} */ calling = new Map();\n        /**\n         * @param {?} context\n         * @param {?} value\n         * @param {?} depth\n         * @param {?} references\n         * @return {?}\n         */\n        function simplifyInContext(context, value, depth, references) {\n            /**\n             * @param {?} staticSymbol\n             * @return {?}\n             */\n            function resolveReferenceValue(staticSymbol) {\n                var /** @type {?} */ resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n                return resolvedSymbol ? resolvedSymbol.metadata : null;\n            }\n            /**\n             * @param {?} functionSymbol\n             * @param {?} targetFunction\n             * @param {?} args\n             * @return {?}\n             */\n            function simplifyCall(functionSymbol, targetFunction, args) {\n                if (targetFunction && targetFunction['__symbolic'] == 'function') {\n                    if (calling.get(functionSymbol)) {\n                        throw new Error('Recursion not supported');\n                    }\n                    try {\n                        var /** @type {?} */ value_1 = targetFunction['value'];\n                        if (value_1 && (depth != 0 || value_1.__symbolic != 'error')) {\n                            var /** @type {?} */ parameters = targetFunction['parameters'];\n                            var /** @type {?} */ defaults = targetFunction.defaults;\n                            args = args.map(function (arg) { return simplifyInContext(context, arg, depth + 1, references); })\n                                .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                            if (defaults && defaults.length > args.length) {\n                                args.push.apply(args, defaults.slice(args.length).map(function (value) { return simplify(value); }));\n                            }\n                            calling.set(functionSymbol, true);\n                            var /** @type {?} */ functionScope = BindingScope.build();\n                            for (var /** @type {?} */ i = 0; i < parameters.length; i++) {\n                                functionScope.define(parameters[i], args[i]);\n                            }\n                            var /** @type {?} */ oldScope = scope;\n                            var /** @type {?} */ result_1;\n                            try {\n                                scope = functionScope.done();\n                                result_1 = simplifyInContext(functionSymbol, value_1, depth + 1, references);\n                            }\n                            finally {\n                                scope = oldScope;\n                            }\n                            return result_1;\n                        }\n                    }\n                    finally {\n                        calling.delete(functionSymbol);\n                    }\n                }\n                if (depth === 0) {\n                    // If depth is 0 we are evaluating the top level expression that is describing element\n                    // decorator. In this case, it is a decorator we don't understand, such as a custom\n                    // non-angular decorator, and we should just ignore it.\n                    return IGNORE;\n                }\n                return simplify({ __symbolic: 'error', message: 'Function call not supported', context: functionSymbol });\n            }\n            /**\n             * @param {?} expression\n             * @return {?}\n             */\n            function simplify(expression) {\n                if (isPrimitive(expression)) {\n                    return expression;\n                }\n                if (expression instanceof Array) {\n                    var /** @type {?} */ result_2 = [];\n                    for (var _i = 0, _a = (/** @type {?} */ (expression)); _i < _a.length; _i++) {\n                        var item = _a[_i];\n                        // Check for a spread expression\n                        if (item && item.__symbolic === 'spread') {\n                            var /** @type {?} */ spreadArray = simplify(item.expression);\n                            if (Array.isArray(spreadArray)) {\n                                for (var _b = 0, spreadArray_1 = spreadArray; _b < spreadArray_1.length; _b++) {\n                                    var spreadItem = spreadArray_1[_b];\n                                    result_2.push(spreadItem);\n                                }\n                                continue;\n                            }\n                        }\n                        var /** @type {?} */ value_2 = simplify(item);\n                        if (shouldIgnore(value_2)) {\n                            continue;\n                        }\n                        result_2.push(value_2);\n                    }\n                    return result_2;\n                }\n                if (expression instanceof StaticSymbol) {\n                    // Stop simplification at builtin symbols or if we are in a reference context\n                    if (expression === self.injectionToken || self.conversionMap.has(expression) ||\n                        references > 0) {\n                        return expression;\n                    }\n                    else {\n                        var /** @type {?} */ staticSymbol = expression;\n                        var /** @type {?} */ declarationValue = resolveReferenceValue(staticSymbol);\n                        if (declarationValue) {\n                            return simplifyInContext(staticSymbol, declarationValue, depth + 1, references);\n                        }\n                        else {\n                            return staticSymbol;\n                        }\n                    }\n                }\n                if (expression) {\n                    if (expression['__symbolic']) {\n                        var /** @type {?} */ staticSymbol = void 0;\n                        switch (expression['__symbolic']) {\n                            case 'binop':\n                                var /** @type {?} */ left = simplify(expression['left']);\n                                if (shouldIgnore(left))\n                                    return left;\n                                var /** @type {?} */ right = simplify(expression['right']);\n                                if (shouldIgnore(right))\n                                    return right;\n                                switch (expression['operator']) {\n                                    case '&&':\n                                        return left && right;\n                                    case '||':\n                                        return left || right;\n                                    case '|':\n                                        return left | right;\n                                    case '^':\n                                        return left ^ right;\n                                    case '&':\n                                        return left & right;\n                                    case '==':\n                                        return left == right;\n                                    case '!=':\n                                        return left != right;\n                                    case '===':\n                                        return left === right;\n                                    case '!==':\n                                        return left !== right;\n                                    case '<':\n                                        return left < right;\n                                    case '>':\n                                        return left > right;\n                                    case '<=':\n                                        return left <= right;\n                                    case '>=':\n                                        return left >= right;\n                                    case '<<':\n                                        return left << right;\n                                    case '>>':\n                                        return left >> right;\n                                    case '+':\n                                        return left + right;\n                                    case '-':\n                                        return left - right;\n                                    case '*':\n                                        return left * right;\n                                    case '/':\n                                        return left / right;\n                                    case '%':\n                                        return left % right;\n                                }\n                                return null;\n                            case 'if':\n                                var /** @type {?} */ condition = simplify(expression['condition']);\n                                return condition ? simplify(expression['thenExpression']) :\n                                    simplify(expression['elseExpression']);\n                            case 'pre':\n                                var /** @type {?} */ operand = simplify(expression['operand']);\n                                if (shouldIgnore(operand))\n                                    return operand;\n                                switch (expression['operator']) {\n                                    case '+':\n                                        return operand;\n                                    case '-':\n                                        return -operand;\n                                    case '!':\n                                        return !operand;\n                                    case '~':\n                                        return ~operand;\n                                }\n                                return null;\n                            case 'index':\n                                var /** @type {?} */ indexTarget = simplify(expression['expression']);\n                                var /** @type {?} */ index = simplify(expression['index']);\n                                if (indexTarget && isPrimitive(index))\n                                    return indexTarget[index];\n                                return null;\n                            case 'select':\n                                var /** @type {?} */ member = expression['member'];\n                                var /** @type {?} */ selectContext = context;\n                                var /** @type {?} */ selectTarget = simplify(expression['expression']);\n                                if (selectTarget instanceof StaticSymbol) {\n                                    var /** @type {?} */ members = selectTarget.members.concat(member);\n                                    selectContext =\n                                        self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                                    var /** @type {?} */ declarationValue = resolveReferenceValue(selectContext);\n                                    if (declarationValue) {\n                                        return simplifyInContext(selectContext, declarationValue, depth + 1, references);\n                                    }\n                                    else {\n                                        return selectContext;\n                                    }\n                                }\n                                if (selectTarget && isPrimitive(member))\n                                    return simplifyInContext(selectContext, selectTarget[member], depth + 1, references);\n                                return null;\n                            case 'reference':\n                                // Note: This only has to deal with variable references,\n                                // as symbol references have been converted into StaticSymbols already\n                                // in the StaticSymbolResolver!\n                                var /** @type {?} */ name_1 = expression['name'];\n                                var /** @type {?} */ localValue = scope.resolve(name_1);\n                                if (localValue != BindingScope.missing) {\n                                    return localValue;\n                                }\n                                break;\n                            case 'class':\n                                return context;\n                            case 'function':\n                                return context;\n                            case 'new':\n                            case 'call':\n                                // Determine if the function is a built-in conversion\n                                staticSymbol = simplifyInContext(context, expression['expression'], depth + 1, /* references */ 0);\n                                if (staticSymbol instanceof StaticSymbol) {\n                                    if (staticSymbol === self.injectionToken) {\n                                        // if somebody calls new InjectionToken, don't create an InjectionToken,\n                                        // but rather return the symbol to which the InjectionToken is assigned to.\n                                        return context;\n                                    }\n                                    var /** @type {?} */ argExpressions = expression['arguments'] || [];\n                                    var /** @type {?} */ converter = self.conversionMap.get(staticSymbol);\n                                    if (converter) {\n                                        var /** @type {?} */ args = argExpressions\n                                            .map(function (arg) { return simplifyInContext(context, arg, depth + 1, references); })\n                                            .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                                        return converter(context, args);\n                                    }\n                                    else {\n                                        // Determine if the function is one we can simplify.\n                                        var /** @type {?} */ targetFunction = resolveReferenceValue(staticSymbol);\n                                        return simplifyCall(staticSymbol, targetFunction, argExpressions);\n                                    }\n                                }\n                                return IGNORE;\n                            case 'error':\n                                var /** @type {?} */ message = produceErrorMessage(expression);\n                                if (expression['line']) {\n                                    message =\n                                        message + \" (position \" + (expression['line'] + 1) + \":\" + (expression['character'] + 1) + \" in the original .ts file)\";\n                                    self.reportError(positionalError(message, context.filePath, expression['line'], expression['character']), context);\n                                }\n                                else {\n                                    self.reportError(new Error(message), context);\n                                }\n                                return IGNORE;\n                            case 'ignore':\n                                return expression;\n                        }\n                        return null;\n                    }\n                    return mapStringMap(expression, function (value, name) {\n                        if (REFERENCE_SET.has(name)) {\n                            if (name === USE_VALUE && PROVIDE in expression) {\n                                // If this is a provider expression, check for special tokens that need the value\n                                // during analysis.\n                                var /** @type {?} */ provide = simplify(expression.provide);\n                                if (provide === self.ROUTES || provide == self.ANALYZE_FOR_ENTRY_COMPONENTS) {\n                                    return simplify(value);\n                                }\n                            }\n                            return simplifyInContext(context, value, depth, references + 1);\n                        }\n                        return simplify(value);\n                    });\n                }\n                return IGNORE;\n            }\n            try {\n                return simplify(value);\n            }\n            catch (/** @type {?} */ e) {\n                var /** @type {?} */ members = context.members.length ? \".\" + context.members.join('.') : '';\n                var /** @type {?} */ message = e.message + \", resolving symbol \" + context.name + members + \" in \" + context.filePath;\n                if (e.fileName) {\n                    throw positionalError(message, e.fileName, e.line, e.column);\n                }\n                throw syntaxError(message);\n            }\n        }\n        var /** @type {?} */ recordedSimplifyInContext = function (context, value) {\n            try {\n                return simplifyInContext(context, value, 0, 0);\n            }\n            catch (/** @type {?} */ e) {\n                _this.reportError(e, context);\n            }\n        };\n        var /** @type {?} */ result = this.errorRecorder ? recordedSimplifyInContext(context, value) :\n            simplifyInContext(context, value, 0, 0);\n        if (shouldIgnore(result)) {\n            return undefined;\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.getTypeMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n        return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n            { __symbolic: 'class' };\n    };\n    return StaticReflector;\n}());\n/**\n * @param {?} error\n * @return {?}\n */\nfunction expandedMessage(error) {\n    switch (error.message) {\n        case 'Reference to non-exported class':\n            if (error.context && error.context.className) {\n                return \"Reference to a non-exported class \" + error.context.className + \". Consider exporting the class\";\n            }\n            break;\n        case 'Variable not initialized':\n            return 'Only initialized variables and constants can be referenced because the value of this variable is needed by the template compiler';\n        case 'Destructuring not supported':\n            return 'Referencing an exported destructured variable or constant is not supported by the template compiler. Consider simplifying this to avoid destructuring';\n        case 'Could not resolve type':\n            if (error.context && error.context.typeName) {\n                return \"Could not resolve type \" + error.context.typeName;\n            }\n            break;\n        case 'Function call not supported':\n            var /** @type {?} */ prefix = error.context && error.context.name ? \"Calling function '\" + error.context.name + \"', f\" : 'F';\n            return prefix +\n                'unction calls are not supported. Consider replacing the function or lambda with a reference to an exported function';\n        case 'Reference to a local symbol':\n            if (error.context && error.context.name) {\n                return \"Reference to a local (non-exported) symbol '\" + error.context.name + \"'. Consider exporting the symbol\";\n            }\n            break;\n    }\n    return error.message;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction produceErrorMessage(error) {\n    return \"Error encountered resolving symbol values statically. \" + expandedMessage(error);\n}\n/**\n * @param {?} input\n * @param {?} transform\n * @return {?}\n */\nfunction mapStringMap(input, transform) {\n    if (!input)\n        return {};\n    var /** @type {?} */ result = {};\n    Object.keys(input).forEach(function (key) {\n        var /** @type {?} */ value = transform(input[key], key);\n        if (!shouldIgnore(value)) {\n            if (HIDDEN_KEY.test(key)) {\n                Object.defineProperty(result, key, { enumerable: false, configurable: true, value: value });\n            }\n            else {\n                result[key] = value;\n            }\n        }\n    });\n    return result;\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPrimitive(o) {\n    return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\n/**\n * @abstract\n */\nvar BindingScope = (function () {\n    function BindingScope() {\n    }\n    /**\n     * @return {?}\n     */\n    BindingScope.build = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ current = new Map();\n        return {\n            define: function (name, value) {\n                current.set(name, value);\n                return this;\n            },\n            done: function () {\n                return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n            }\n        };\n    };\n    BindingScope.missing = {};\n    BindingScope.empty = { resolve: function (name) { return BindingScope.missing; } };\n    return BindingScope;\n}());\nvar PopulatedScope = (function (_super) {\n    __extends(PopulatedScope, _super);\n    function PopulatedScope(bindings) {\n        var _this = _super.call(this) || this;\n        _this.bindings = bindings;\n        return _this;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PopulatedScope.prototype.resolve = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.bindings.has(name) ? this.bindings.get(name) : BindingScope.missing;\n    };\n    return PopulatedScope;\n}(BindingScope));\n/**\n * @param {?} message\n * @param {?} fileName\n * @param {?} line\n * @param {?} column\n * @return {?}\n */\nfunction positionalError(message, fileName, line, column) {\n    var /** @type {?} */ result = new Error(message);\n    (/** @type {?} */ (result)).fileName = fileName;\n    (/** @type {?} */ (result)).line = line;\n    (/** @type {?} */ (result)).column = column;\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ResolvedStaticSymbol = (function () {\n    function ResolvedStaticSymbol(symbol, metadata) {\n        this.symbol = symbol;\n        this.metadata = metadata;\n    }\n    return ResolvedStaticSymbol;\n}());\n/**\n * The host of the SymbolResolverHost disconnects the implementation from TypeScript / other\n * language\n * services and from underlying file systems.\n * @record\n */\n\nvar SUPPORTED_SCHEMA_VERSION = 3;\n/**\n * This class is responsible for loading metadata per symbol,\n * and normalizing references between symbols.\n *\n * Internally, it only uses symbols without members,\n * and deduces the values for symbols with members based\n * on these symbols.\n */\nvar StaticSymbolResolver = (function () {\n    function StaticSymbolResolver(host, staticSymbolCache, summaryResolver, errorRecorder) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryResolver = summaryResolver;\n        this.errorRecorder = errorRecorder;\n        this.metadataCache = new Map();\n        this.resolvedSymbols = new Map();\n        this.resolvedFilePaths = new Set();\n        this.importAs = new Map();\n        this.symbolResourcePaths = new Map();\n        this.symbolFromFile = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveSymbol = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        if (staticSymbol.members.length > 0) {\n            return /** @type {?} */ ((this._resolveSymbolMembers(staticSymbol)));\n        }\n        // Note: always ask for a summary first,\n        // as we might have read shallow metadata via a .d.ts file\n        // for the symbol.\n        var /** @type {?} */ resultFromSummary = /** @type {?} */ ((this._resolveSymbolFromSummary(staticSymbol)));\n        if (resultFromSummary) {\n            return resultFromSummary;\n        }\n        var /** @type {?} */ resultFromCache = this.resolvedSymbols.get(staticSymbol);\n        if (resultFromCache) {\n            return resultFromCache;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        this._createSymbolsOf(staticSymbol.filePath);\n        return /** @type {?} */ ((this.resolvedSymbols.get(staticSymbol)));\n    };\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param staticSymbol the symbol for which to generate a import symbol\n     */\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getImportAs = /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        if (staticSymbol.members.length) {\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(baseImportAs.filePath, baseImportAs.name, staticSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ summarizedFileName = stripSummaryForJitFileSuffix(staticSymbol.filePath);\n        if (summarizedFileName !== staticSymbol.filePath) {\n            var /** @type {?} */ summarizedName = stripSummaryForJitNameSuffix(staticSymbol.name);\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(summarizedFileName, summarizedName, staticSymbol.members);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(summaryForJitFileName(baseImportAs.filePath), summaryForJitName(baseImportAs.name), baseSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ result = this.summaryResolver.getImportAs(staticSymbol);\n        if (!result) {\n            result = /** @type {?} */ ((this.importAs.get(staticSymbol)));\n        }\n        return result;\n    };\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     */\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getResourcePath = /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        return this.symbolResourcePaths.get(staticSymbol) || staticSymbol.filePath;\n    };\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     */\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getTypeArity = /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        // If the file is a factory/ngsummary file, don't resolve the symbol as doing so would\n        // cause the metadata for an factory/ngsummary file to be loaded which doesn't exist.\n        // All references to generated classes must include the correct arity whenever\n        // generating code.\n        if (isGeneratedFile(staticSymbol.filePath)) {\n            return null;\n        }\n        var /** @type {?} */ resolvedSymbol = this.resolveSymbol(staticSymbol);\n        while (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            resolvedSymbol = this.resolveSymbol(resolvedSymbol.metadata);\n        }\n        return (resolvedSymbol && resolvedSymbol.metadata && resolvedSymbol.metadata.arity) || null;\n    };\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     */\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.fileNameToModuleName = /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    function (importedFilePath, containingFilePath) {\n        return this.knownFileNameToModuleNames.get(importedFilePath) ||\n            this.host.fileNameToModuleName(importedFilePath, containingFilePath);\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordImportAs = /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        this.importAs.set(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordModuleNameForFileName = /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    function (fileName, moduleName) {\n        this.knownFileNameToModuleNames.set(fileName, moduleName);\n    };\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param fileName the file to invalidate\n     */\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.invalidateFile = /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    function (fileName) {\n        this.metadataCache.delete(fileName);\n        this.resolvedFilePaths.delete(fileName);\n        var /** @type {?} */ symbols = this.symbolFromFile.get(fileName);\n        if (symbols) {\n            this.symbolFromFile.delete(fileName);\n            for (var _i = 0, symbols_1 = symbols; _i < symbols_1.length; _i++) {\n                var symbol = symbols_1[_i];\n                this.resolvedSymbols.delete(symbol);\n                this.importAs.delete(symbol);\n                this.symbolResourcePaths.delete(symbol);\n            }\n        }\n    };\n    /* @internal */\n    /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.ignoreErrorsFor = /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    function (cb) {\n        var /** @type {?} */ recorder = this.errorRecorder;\n        this.errorRecorder = function () { };\n        try {\n            return cb();\n        }\n        finally {\n            this.errorRecorder = recorder;\n        }\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolMembers = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ members = staticSymbol.members;\n        var /** @type {?} */ baseResolvedSymbol = this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name));\n        if (!baseResolvedSymbol) {\n            return null;\n        }\n        var /** @type {?} */ baseMetadata = baseResolvedSymbol.metadata;\n        if (baseMetadata instanceof StaticSymbol) {\n            return new ResolvedStaticSymbol(staticSymbol, this.getStaticSymbol(baseMetadata.filePath, baseMetadata.name, members));\n        }\n        else if (baseMetadata && baseMetadata.__symbolic === 'class') {\n            if (baseMetadata.statics && members.length === 1) {\n                return new ResolvedStaticSymbol(staticSymbol, baseMetadata.statics[members[0]]);\n            }\n        }\n        else {\n            var /** @type {?} */ value = baseMetadata;\n            for (var /** @type {?} */ i = 0; i < members.length && value; i++) {\n                value = value[members[i]];\n            }\n            return new ResolvedStaticSymbol(staticSymbol, value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolFromSummary = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(staticSymbol);\n        return summary ? new ResolvedStaticSymbol(staticSymbol, summary.metadata) : null;\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     * @param members a symbol for a static member of the named type\n     */\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getStaticSymbol = /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        return this.staticSymbolCache.get(declarationFile, name, members);\n    };\n    /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param filePath the absolute path to examine for decorators.\n     * @returns true if any class in the file has a decorator.\n     */\n    /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param {?} filePath the absolute path to examine for decorators.\n     * @return {?} true if any class in the file has a decorator.\n     */\n    StaticSymbolResolver.prototype.hasDecorators = /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param {?} filePath the absolute path to examine for decorators.\n     * @return {?} true if any class in the file has a decorator.\n     */\n    function (filePath) {\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['metadata']) {\n            return Object.keys(metadata['metadata']).some(function (metadataKey) {\n                var /** @type {?} */ entry = metadata['metadata'][metadataKey];\n                return entry && entry.__symbolic === 'class' && entry.decorators;\n            });\n        }\n        return false;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var /** @type {?} */ summarySymbols = this.summaryResolver.getSymbolsOf(filePath);\n        if (summarySymbols) {\n            return summarySymbols;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files, but `summaryResolver.isLibraryFile` returns true.\n        this._createSymbolsOf(filePath);\n        var /** @type {?} */ metadataSymbols = [];\n        this.resolvedSymbols.forEach(function (resolvedSymbol) {\n            if (resolvedSymbol.symbol.filePath === filePath) {\n                metadataSymbols.push(resolvedSymbol.symbol);\n            }\n        });\n        return metadataSymbols;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._createSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var _this = this;\n        if (this.resolvedFilePaths.has(filePath)) {\n            return;\n        }\n        this.resolvedFilePaths.add(filePath);\n        var /** @type {?} */ resolvedSymbols = [];\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        // handle the symbols in one of the re-export location\n        if (metadata['exports']) {\n            var _loop_1 = function (moduleExport) {\n                // handle the symbols in the list of explicitly re-exported symbols.\n                if (moduleExport.export) {\n                    moduleExport.export.forEach(function (exportSymbol) {\n                        var /** @type {?} */ symbolName;\n                        if (typeof exportSymbol === 'string') {\n                            symbolName = exportSymbol;\n                        }\n                        else {\n                            symbolName = exportSymbol.as;\n                        }\n                        symbolName = unescapeIdentifier(symbolName);\n                        var /** @type {?} */ symName = symbolName;\n                        if (typeof exportSymbol !== 'string') {\n                            symName = unescapeIdentifier(exportSymbol.name);\n                        }\n                        var /** @type {?} */ resolvedModule = _this.resolveModule(moduleExport.from, filePath);\n                        if (resolvedModule) {\n                            var /** @type {?} */ targetSymbol = _this.getStaticSymbol(resolvedModule, symName);\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, symbolName);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        }\n                    });\n                }\n                else {\n                    // handle the symbols via export * directives.\n                    var /** @type {?} */ resolvedModule = this_1.resolveModule(moduleExport.from, filePath);\n                    if (resolvedModule) {\n                        var /** @type {?} */ nestedExports = this_1.getSymbolsOf(resolvedModule);\n                        nestedExports.forEach(function (targetSymbol) {\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, targetSymbol.name);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        });\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var _i = 0, _a = metadata['exports']; _i < _a.length; _i++) {\n                var moduleExport = _a[_i];\n                _loop_1(moduleExport);\n            }\n        }\n        // handle the actual metadata. Has to be after the exports\n        // as there migth be collisions in the names, and we want the symbols\n        // of the current module to win ofter reexports.\n        if (metadata['metadata']) {\n            // handle direct declarations of the symbol\n            var /** @type {?} */ topLevelSymbolNames_1 = new Set(Object.keys(metadata['metadata']).map(unescapeIdentifier));\n            var /** @type {?} */ origins_1 = metadata['origins'] || {};\n            Object.keys(metadata['metadata']).forEach(function (metadataKey) {\n                var /** @type {?} */ symbolMeta = metadata['metadata'][metadataKey];\n                var /** @type {?} */ name = unescapeIdentifier(metadataKey);\n                var /** @type {?} */ symbol = _this.getStaticSymbol(filePath, name);\n                var /** @type {?} */ origin = origins_1.hasOwnProperty(metadataKey) && origins_1[metadataKey];\n                if (origin) {\n                    // If the symbol is from a bundled index, use the declaration location of the\n                    // symbol so relative references (such as './my.html') will be calculated\n                    // correctly.\n                    var /** @type {?} */ originFilePath = _this.resolveModule(origin, filePath);\n                    if (!originFilePath) {\n                        _this.reportError(new Error(\"Couldn't resolve original symbol for \" + origin + \" from \" + filePath));\n                    }\n                    else {\n                        _this.symbolResourcePaths.set(symbol, originFilePath);\n                    }\n                }\n                resolvedSymbols.push(_this.createResolvedSymbol(symbol, filePath, topLevelSymbolNames_1, symbolMeta));\n            });\n        }\n        resolvedSymbols.forEach(function (resolvedSymbol) { return _this.resolvedSymbols.set(resolvedSymbol.symbol, resolvedSymbol); });\n        this.symbolFromFile.set(filePath, resolvedSymbols.map(function (resolvedSymbol) { return resolvedSymbol.symbol; }));\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createResolvedSymbol = /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (sourceSymbol, topLevelPath, topLevelSymbolNames, metadata) {\n        // For classes that don't have Angular summaries / metadata,\n        // we only keep their arity, but nothing else\n        // (e.g. their constructor parameters).\n        // We do this to prevent introducing deep imports\n        // as we didn't generate .ngfactory.ts files with proper reexports.\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) && metadata &&\n            metadata['__symbolic'] === 'class') {\n            var /** @type {?} */ transformedMeta_1 = { __symbolic: 'class', arity: metadata.arity };\n            return new ResolvedStaticSymbol(sourceSymbol, transformedMeta_1);\n        }\n        var /** @type {?} */ self = this;\n        var ReferenceTransformer = (function (_super) {\n            __extends(ReferenceTransformer, _super);\n            function ReferenceTransformer() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            ReferenceTransformer.prototype.visitStringMap = /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            function (map, functionParams) {\n                var /** @type {?} */ symbolic = map['__symbolic'];\n                if (symbolic === 'function') {\n                    var /** @type {?} */ oldLen = functionParams.length;\n                    functionParams.push.apply(functionParams, (map['parameters'] || []));\n                    var /** @type {?} */ result = _super.prototype.visitStringMap.call(this, map, functionParams);\n                    functionParams.length = oldLen;\n                    return result;\n                }\n                else if (symbolic === 'reference') {\n                    var /** @type {?} */ module = map['module'];\n                    var /** @type {?} */ name_1 = map['name'] ? unescapeIdentifier(map['name']) : map['name'];\n                    if (!name_1) {\n                        return null;\n                    }\n                    var /** @type {?} */ filePath = void 0;\n                    if (module) {\n                        filePath = /** @type {?} */ ((self.resolveModule(module, sourceSymbol.filePath)));\n                        if (!filePath) {\n                            return {\n                                __symbolic: 'error',\n                                message: \"Could not resolve \" + module + \" relative to \" + sourceSymbol.filePath + \".\"\n                            };\n                        }\n                        return self.getStaticSymbol(filePath, name_1);\n                    }\n                    else if (functionParams.indexOf(name_1) >= 0) {\n                        // reference to a function parameter\n                        return { __symbolic: 'reference', name: name_1 };\n                    }\n                    else {\n                        if (topLevelSymbolNames.has(name_1)) {\n                            return self.getStaticSymbol(topLevelPath, name_1);\n                        }\n                        // ambient value\n                        null;\n                    }\n                }\n                else {\n                    return _super.prototype.visitStringMap.call(this, map, functionParams);\n                }\n            };\n            return ReferenceTransformer;\n        }(ValueTransformer));\n        var /** @type {?} */ transformedMeta = visitValue(metadata, new ReferenceTransformer(), []);\n        if (transformedMeta instanceof StaticSymbol) {\n            return this.createExport(sourceSymbol, transformedMeta);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createExport = /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) &&\n            this.summaryResolver.isLibraryFile(targetSymbol.filePath)) {\n            // This case is for an ng library importing symbols from a plain ts library\n            // transitively.\n            // Note: We rely on the fact that we discover symbols in the direction\n            // from source files to library files\n            this.importAs.set(targetSymbol, this.getImportAs(sourceSymbol) || sourceSymbol);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.reportError = /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getModuleMetadata = /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    function (module) {\n        var /** @type {?} */ moduleMetadata = this.metadataCache.get(module);\n        if (!moduleMetadata) {\n            var /** @type {?} */ moduleMetadatas = this.host.getMetadataFor(module);\n            if (moduleMetadatas) {\n                var /** @type {?} */ maxVersion_1 = -1;\n                moduleMetadatas.forEach(function (md) {\n                    if (md['version'] > maxVersion_1) {\n                        maxVersion_1 = md['version'];\n                        moduleMetadata = md;\n                    }\n                });\n            }\n            if (!moduleMetadata) {\n                moduleMetadata =\n                    { __symbolic: 'module', version: SUPPORTED_SCHEMA_VERSION, module: module, metadata: {} };\n            }\n            if (moduleMetadata['version'] != SUPPORTED_SCHEMA_VERSION) {\n                var /** @type {?} */ errorMessage = moduleMetadata['version'] == 2 ?\n                    \"Unsupported metadata version \" + moduleMetadata['version'] + \" for module \" + module + \". This module should be compiled with a newer version of ngc\" :\n                    \"Metadata version mismatch for module \" + module + \", found version \" + moduleMetadata['version'] + \", expected \" + SUPPORTED_SCHEMA_VERSION;\n                this.reportError(new Error(errorMessage));\n            }\n            this.metadataCache.set(module, moduleMetadata);\n        }\n        return moduleMetadata;\n    };\n    /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolByModule = /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (module, symbolName, containingFile) {\n        var /** @type {?} */ filePath = this.resolveModule(module, containingFile);\n        if (!filePath) {\n            this.reportError(new Error(\"Could not resolve module \" + module + (containingFile ? \" relative to $ {\\n            containingFile\\n          } \" : '')));\n            return this.getStaticSymbol(\"ERROR:\" + module, symbolName);\n        }\n        return this.getStaticSymbol(filePath, symbolName);\n    };\n    /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveModule = /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (module, containingFile) {\n        try {\n            return this.host.moduleNameToFileName(module, containingFile);\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Could not resolve module '\" + module + \"' relative to file \" + containingFile);\n            this.reportError(e, undefined, containingFile);\n        }\n        return null;\n    };\n    return StaticSymbolResolver;\n}());\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction unescapeIdentifier(identifier) {\n    return identifier.startsWith('___') ? identifier.substr(1) : identifier;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\nvar AotSummaryResolver = (function () {\n    function AotSummaryResolver(host, staticSymbolCache) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryCache = new Map();\n        this.loadedFilePaths = new Map();\n        this.importAs = new Map();\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.isLibraryFile = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        // Note: We need to strip the .ngfactory. file path,\n        // so this method also works for generated files\n        // (for which host.isSourceFile will always return false).\n        return !this.host.isSourceFile(stripGeneratedFileSuffix(filePath));\n    };\n    /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.toSummaryFileName = /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    function (filePath, referringSrcFileName) {\n        return this.host.toSummaryFileName(filePath, referringSrcFileName);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.fromSummaryFileName = /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    function (fileName, referringLibFileName) {\n        return this.host.fromSummaryFileName(fileName, referringLibFileName);\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.resolveSummary = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        var /** @type {?} */ summary = this.summaryCache.get(staticSymbol);\n        if (!summary) {\n            this._loadSummaryFile(staticSymbol.filePath);\n            summary = /** @type {?} */ ((this.summaryCache.get(staticSymbol)));\n        }\n        return summary || null;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        if (this._loadSummaryFile(filePath)) {\n            return Array.from(this.summaryCache.keys()).filter(function (symbol) { return symbol.filePath === filePath; });\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getImportAs = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        return /** @type {?} */ ((this.importAs.get(staticSymbol)));\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) { this.summaryCache.set(summary.symbol, summary); };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype._loadSummaryFile = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var _this = this;\n        var /** @type {?} */ hasSummary = this.loadedFilePaths.get(filePath);\n        if (hasSummary != null) {\n            return hasSummary;\n        }\n        var /** @type {?} */ json = null;\n        if (this.isLibraryFile(filePath)) {\n            var /** @type {?} */ summaryFilePath = summaryFileName(filePath);\n            try {\n                json = this.host.loadSummary(summaryFilePath);\n            }\n            catch (/** @type {?} */ e) {\n                console.error(\"Error loading summary file \" + summaryFilePath);\n                throw e;\n            }\n        }\n        hasSummary = json != null;\n        this.loadedFilePaths.set(filePath, hasSummary);\n        if (json) {\n            var _a = deserializeSummaries(this.staticSymbolCache, this, filePath, json), summaries = _a.summaries, importAs = _a.importAs;\n            summaries.forEach(function (summary) { return _this.summaryCache.set(summary.symbol, summary); });\n            importAs.forEach(function (importAs) {\n                _this.importAs.set(importAs.symbol, _this.staticSymbolCache.get(ngfactoryFilePath(filePath), importAs.importAs));\n            });\n        }\n        return hasSummary;\n    };\n    return AotSummaryResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} host\n * @return {?}\n */\nfunction createAotUrlResolver(host) {\n    return {\n        resolve: function (basePath, url) {\n            var /** @type {?} */ filePath = host.resourceNameToFileName(url, basePath);\n            if (!filePath) {\n                throw syntaxError(\"Couldn't resolve resource \" + url + \" from \" + basePath);\n            }\n            return filePath;\n        }\n    };\n}\n/**\n * Creates a new AotCompiler based on options and a host.\n * @param {?} compilerHost\n * @param {?} options\n * @return {?}\n */\nfunction createAotCompiler(compilerHost, options) {\n    var /** @type {?} */ translations = options.translations || '';\n    var /** @type {?} */ urlResolver = createAotUrlResolver(compilerHost);\n    var /** @type {?} */ symbolCache = new StaticSymbolCache();\n    var /** @type {?} */ summaryResolver = new AotSummaryResolver(compilerHost, symbolCache);\n    var /** @type {?} */ symbolResolver = new StaticSymbolResolver(compilerHost, symbolCache, summaryResolver);\n    var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, symbolResolver);\n    var /** @type {?} */ htmlParser = new I18NHtmlParser(new HtmlParser(), translations, options.i18nFormat, options.missingTranslation, console);\n    var /** @type {?} */ config = new CompilerConfig({\n        defaultEncapsulation: ViewEncapsulation.Emulated,\n        useJit: false,\n        enableLegacyTemplate: options.enableLegacyTemplate === true,\n        missingTranslation: options.missingTranslation,\n        preserveWhitespaces: options.preserveWhitespaces,\n    });\n    var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return compilerHost.loadResource(url); } }, urlResolver, htmlParser, config);\n    var /** @type {?} */ expressionParser = new Parser(new Lexer());\n    var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n    var /** @type {?} */ tmplParser = new TemplateParser(config, staticReflector, expressionParser, elementSchemaRegistry, htmlParser, console, []);\n    var /** @type {?} */ resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n    // TODO(vicb): do not pass options.i18nFormat here\n    var /** @type {?} */ viewCompiler = new ViewCompiler(staticReflector);\n    var /** @type {?} */ typeCheckCompiler = new TypeCheckCompiler(options, staticReflector);\n    var /** @type {?} */ compiler = new AotCompiler(config, options, compilerHost, staticReflector, resolver, tmplParser, new StyleCompiler(urlResolver), viewCompiler, typeCheckCompiler, new NgModuleCompiler(staticReflector), new TypeScriptEmitter(), summaryResolver, symbolResolver);\n    return { compiler: compiler, reflector: staticReflector };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\n/**\n * @abstract\n */\nvar SummaryResolver = (function () {\n    function SummaryResolver() {\n    }\n    return SummaryResolver;\n}());\nvar JitSummaryResolver = (function () {\n    function JitSummaryResolver() {\n        this._summaries = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.isLibraryFile = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.toSummaryFileName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return fileName; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.fromSummaryFileName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return fileName; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.resolveSummary = /**\n     * @param {?} reference\n     * @return {?}\n     */\n    function (reference) {\n        return this._summaries.get(reference) || null;\n    };\n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getSymbolsOf = /**\n     * @return {?}\n     */\n    function () { return []; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getImportAs = /**\n     * @param {?} reference\n     * @return {?}\n     */\n    function (reference) { return reference; };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) { this._summaries.set(summary.symbol, summary); };\n    return JitSummaryResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} statements\n * @param {?} reflector\n * @return {?}\n */\nfunction interpretStatements(statements, reflector) {\n    var /** @type {?} */ ctx = new _ExecutionContext(null, null, null, new Map());\n    var /** @type {?} */ visitor = new StatementInterpreter(reflector);\n    visitor.visitAllStatements(statements, ctx);\n    var /** @type {?} */ result = {};\n    ctx.exports.forEach(function (exportName) { result[exportName] = ctx.vars.get(exportName); });\n    return result;\n}\n/**\n * @param {?} varNames\n * @param {?} varValues\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n    var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n    for (var /** @type {?} */ i = 0; i < varNames.length; i++) {\n        childCtx.vars.set(varNames[i], varValues[i]);\n    }\n    var /** @type {?} */ result = visitor.visitAllStatements(statements, childCtx);\n    return result ? result.value : null;\n}\nvar _ExecutionContext = (function () {\n    function _ExecutionContext(parent, instance, className, vars) {\n        this.parent = parent;\n        this.instance = instance;\n        this.className = className;\n        this.vars = vars;\n        this.exports = [];\n    }\n    /**\n     * @return {?}\n     */\n    _ExecutionContext.prototype.createChildWihtLocalVars = /**\n     * @return {?}\n     */\n    function () {\n        return new _ExecutionContext(this, this.instance, this.className, new Map());\n    };\n    return _ExecutionContext;\n}());\nvar ReturnValue = (function () {\n    function ReturnValue(value) {\n        this.value = value;\n    }\n    return ReturnValue;\n}());\n/**\n * @param {?} _classStmt\n * @param {?} _ctx\n * @param {?} _visitor\n * @return {?}\n */\nfunction createDynamicClass(_classStmt, _ctx, _visitor) {\n    var /** @type {?} */ propertyDescriptors = {};\n    _classStmt.getters.forEach(function (getter) {\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[getter.name] = {\n            configurable: false,\n            get: function () {\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    _classStmt.methods.forEach(function (method) {\n        var /** @type {?} */ paramNames = method.params.map(function (param) { return param.name; });\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[/** @type {?} */ ((method.name))] = {\n            writable: false,\n            configurable: false,\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    var /** @type {?} */ ctorParamNames = _classStmt.constructorMethod.params.map(function (param) { return param.name; });\n    // Note: use `function` instead of arrow function to capture `this`\n    var /** @type {?} */ ctor = function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n        _classStmt.fields.forEach(function (field) { _this[field.name] = undefined; });\n        _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n    };\n    var /** @type {?} */ superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n    ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n    return ctor;\n}\nvar StatementInterpreter = (function () {\n    function StatementInterpreter(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    StatementInterpreter.prototype.debugAst = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) { return debugOutputAstAsTypeScript(ast); };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.vars.set(stmt.name, stmt.value.visitExpression(this, ctx));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(expr.name)) {\n                currCtx.vars.set(expr.name, value);\n                return value;\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + expr.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    return ctx.instance.__proto__;\n                case BuiltinVar.This:\n                    return ctx.instance;\n                case BuiltinVar.CatchError:\n                    varName = CATCH_ERROR_VAR$2;\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = CATCH_STACK_VAR$2;\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(varName)) {\n                return currCtx.vars.get(varName);\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + varName);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ index = expr.index.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[index] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[expr.name] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeMethodExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ args = this.visitAllExpressions(expr.args, ctx);\n        var /** @type {?} */ result;\n        if (expr.builtin != null) {\n            switch (expr.builtin) {\n                case BuiltinMethod.ConcatArray:\n                    result = receiver.concat.apply(receiver, args);\n                    break;\n                case BuiltinMethod.SubscribeObservable:\n                    result = receiver.subscribe({ next: args[0] });\n                    break;\n                case BuiltinMethod.Bind:\n                    result = receiver.bind.apply(receiver, args);\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin method \" + expr.builtin);\n            }\n        }\n        else {\n            result = receiver[/** @type {?} */ ((expr.name))].apply(receiver, args);\n        }\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(stmt.args, ctx);\n        var /** @type {?} */ fnExpr = stmt.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n            return null;\n        }\n        else {\n            var /** @type {?} */ fn$$1 = stmt.fn.visitExpression(this, ctx);\n            return fn$$1.apply(null, args);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        return new ReturnValue(stmt.value.visitExpression(this, ctx));\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ clazz = createDynamicClass(stmt, ctx, this);\n        ctx.vars.set(stmt.name, clazz);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        return stmt.expr.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ condition = stmt.condition.visitExpression(this, ctx);\n        if (condition) {\n            return this.visitAllStatements(stmt.trueCase, ctx);\n        }\n        else if (stmt.falseCase != null) {\n            return this.visitAllStatements(stmt.falseCase, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        try {\n            return this.visitAllStatements(stmt.bodyStmts, ctx);\n        }\n        catch (/** @type {?} */ e) {\n            var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n            childCtx.vars.set(CATCH_ERROR_VAR$2, e);\n            childCtx.vars.set(CATCH_STACK_VAR$2, e.stack);\n            return this.visitAllStatements(stmt.catchStmts, childCtx);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        throw stmt.error.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    function (stmt, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(ast.args, ctx);\n        var /** @type {?} */ clazz = ast.classExpr.visitExpression(this, ctx);\n        return new (clazz.bind.apply(clazz, [void 0].concat(args)))();\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) { return ast.value; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return this.reflector.resolveExternalReference(ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.condition.visitExpression(this, ctx)) {\n            return ast.trueCase.visitExpression(this, ctx);\n        }\n        else if (ast.falseCase != null) {\n            return ast.falseCase.visitExpression(this, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return !ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return ast.value.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ paramNames = ast.params.map(function (param) { return param.name; });\n        return _declareFn(paramNames, ast.statements, ctx, this);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ paramNames = stmt.params.map(function (param) { return param.name; });\n        ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ lhs = function () { return ast.lhs.visitExpression(_this, ctx); };\n        var /** @type {?} */ rhs = function () { return ast.rhs.visitExpression(_this, ctx); };\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                return lhs() == rhs();\n            case BinaryOperator.Identical:\n                return lhs() === rhs();\n            case BinaryOperator.NotEquals:\n                return lhs() != rhs();\n            case BinaryOperator.NotIdentical:\n                return lhs() !== rhs();\n            case BinaryOperator.And:\n                return lhs() && rhs();\n            case BinaryOperator.Or:\n                return lhs() || rhs();\n            case BinaryOperator.Plus:\n                return lhs() + rhs();\n            case BinaryOperator.Minus:\n                return lhs() - rhs();\n            case BinaryOperator.Divide:\n                return lhs() / rhs();\n            case BinaryOperator.Multiply:\n                return lhs() * rhs();\n            case BinaryOperator.Modulo:\n                return lhs() % rhs();\n            case BinaryOperator.Lower:\n                return lhs() < rhs();\n            case BinaryOperator.LowerEquals:\n                return lhs() <= rhs();\n            case BinaryOperator.Bigger:\n                return lhs() > rhs();\n            case BinaryOperator.BiggerEquals:\n                return lhs() >= rhs();\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        result = receiver[ast.name];\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ prop = ast.index.visitExpression(this, ctx);\n        return receiver[prop];\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return this.visitAllExpressions(ast.entries, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        ast.entries.forEach(function (entry) { return result[entry.key] = entry.value.visitExpression(_this, ctx); });\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ values = this.visitAllExpressions(ast.parts, context);\n        return values[values.length - 1];\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllExpressions = /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expressions, ctx) {\n        var _this = this;\n        return expressions.map(function (expr) { return expr.visitExpression(_this, ctx); });\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllStatements = /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (statements, ctx) {\n        for (var /** @type {?} */ i = 0; i < statements.length; i++) {\n            var /** @type {?} */ stmt = statements[i];\n            var /** @type {?} */ val = stmt.visitStatement(this, ctx);\n            if (val instanceof ReturnValue) {\n                return val;\n            }\n        }\n        return null;\n    };\n    return StatementInterpreter;\n}());\n/**\n * @param {?} varNames\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _declareFn(varNames, statements, ctx, visitor) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n    };\n}\nvar CATCH_ERROR_VAR$2 = 'error';\nvar CATCH_STACK_VAR$2 = 'stack';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar AbstractJsEmitterVisitor = (function (_super) {\n    __extends(AbstractJsEmitterVisitor, _super);\n    function AbstractJsEmitterVisitor() {\n        return _super.call(this, false) || this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        this._visitClassConstructor(stmt, ctx);\n        if (stmt.parent != null) {\n            ctx.print(stmt, stmt.name + \".prototype = Object.create(\");\n            stmt.parent.visitExpression(this, ctx);\n            ctx.println(stmt, \".prototype);\");\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(stmt, getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(stmt, method, ctx); });\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassConstructor = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        if (stmt.constructorMethod != null) {\n            this._visitParams(stmt.constructorMethod.params, ctx);\n        }\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (stmt.constructorMethod != null) {\n            if (stmt.constructorMethod.body.length > 0) {\n                ctx.println(stmt, \"var self = this;\");\n                this.visitAllStatements(stmt.constructorMethod.body, ctx);\n            }\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassGetter = /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, getter, ctx) {\n        ctx.println(stmt, \"Object.defineProperty(\" + stmt.name + \".prototype, '\" + getter.name + \"', { get: function() {\");\n        ctx.incIndent();\n        if (getter.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(getter.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}});\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassMethod = /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, method, ctx) {\n        ctx.print(stmt, stmt.name + \".prototype.\" + method.name + \" = function(\");\n        this._visitParams(method.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (method.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(method.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"};\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.builtin === BuiltinVar.This) {\n            ctx.print(ast, 'self');\n        }\n        else if (ast.builtin === BuiltinVar.Super) {\n            throw new Error(\"'super' needs to be handled at a parent ast node, not at the variable level!\");\n        }\n        else {\n            _super.prototype.visitReadVarExpr.call(this, ast, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"var \" + stmt.name + \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ fnExpr = expr.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            /** @type {?} */ ((/** @type {?} */ ((ctx.currentClass)).parent)).visitExpression(this, ctx);\n            ctx.print(expr, \".call(this\");\n            if (expr.args.length > 0) {\n                ctx.print(expr, \", \");\n                this.visitAllExpressions(expr.args, ctx, ',');\n            }\n            ctx.print(expr, \")\");\n        }\n        else {\n            _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"function(\");\n        this._visitParams(ast.params, ctx);\n        ctx.println(ast, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack')).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitParams = /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (params, ctx) {\n        this.visitAllObjects(function (param) { return ctx.print(null, param.name); }, params, ctx, ',');\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = /**\n     * @param {?} method\n     * @return {?}\n     */\n    function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    return AbstractJsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} sourceUrl\n * @param {?} ctx\n * @param {?} vars\n * @param {?} createSourceMap\n * @return {?}\n */\nfunction evalExpression(sourceUrl$$1, ctx, vars, createSourceMap) {\n    var /** @type {?} */ fnBody = ctx.toSource() + \"\\n//# sourceURL=\" + sourceUrl$$1;\n    var /** @type {?} */ fnArgNames = [];\n    var /** @type {?} */ fnArgValues = [];\n    for (var /** @type {?} */ argName in vars) {\n        fnArgNames.push(argName);\n        fnArgValues.push(vars[argName]);\n    }\n    if (createSourceMap) {\n        // using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise\n        // E.g. ```\n        // function anonymous(a,b,c\n        // /**/) { ... }```\n        // We don't want to hard code this fact, so we auto detect it via an empty function first.\n        var /** @type {?} */ emptyFn = new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat('return null;'))))().toString();\n        var /** @type {?} */ headerLines = emptyFn.slice(0, emptyFn.indexOf('return null;')).split('\\n').length - 1;\n        fnBody += \"\\n\" + ctx.toSourceMapGenerator(sourceUrl$$1, sourceUrl$$1, headerLines).toJsComment();\n    }\n    return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);\n}\n/**\n * @param {?} sourceUrl\n * @param {?} statements\n * @param {?} reflector\n * @param {?} createSourceMaps\n * @return {?}\n */\nfunction jitStatements(sourceUrl$$1, statements, reflector, createSourceMaps) {\n    var /** @type {?} */ converter = new JitEmitterVisitor(reflector);\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    converter.visitAllStatements(statements, ctx);\n    converter.createReturnStmt(ctx);\n    return evalExpression(sourceUrl$$1, ctx, converter.getArgs(), createSourceMaps);\n}\nvar JitEmitterVisitor = (function (_super) {\n    __extends(JitEmitterVisitor, _super);\n    function JitEmitterVisitor(reflector) {\n        var _this = _super.call(this) || this;\n        _this.reflector = reflector;\n        _this._evalArgNames = [];\n        _this._evalArgValues = [];\n        _this._evalExportedVars = [];\n        return _this;\n    }\n    /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.createReturnStmt = /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ctx) {\n        var /** @type {?} */ stmt = new ReturnStatement(new LiteralMapExpr(this._evalExportedVars.map(function (resultVar) { return new LiteralMapEntry(resultVar, variable(resultVar), false); })));\n        stmt.visitStatement(this, ctx);\n    };\n    /**\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.getArgs = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = {};\n        for (var /** @type {?} */ i = 0; i < this._evalArgNames.length; i++) {\n            result[this._evalArgNames[i]] = this._evalArgValues[i];\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = this.reflector.resolveExternalReference(ast.value);\n        var /** @type {?} */ id = this._evalArgValues.indexOf(value);\n        if (id === -1) {\n            id = this._evalArgValues.length;\n            this._evalArgValues.push(value);\n            var /** @type {?} */ name_1 = identifierName({ reference: value }) || 'val';\n            this._evalArgNames.push(\"jit_\" + name_1 + \"_\" + id);\n        }\n        ctx.print(ast, this._evalArgNames[id]);\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareVarStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareFunctionStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareClassStmt.call(this, stmt, ctx);\n    };\n    return JitEmitterVisitor;\n}(AbstractJsEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n *\n * \\@security When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar JitCompiler = (function () {\n    function JitCompiler(_metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _summaryResolver, _reflector, _compilerConfig, _console, getExtraNgModuleProviders) {\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._summaryResolver = _summaryResolver;\n        this._reflector = _reflector;\n        this._compilerConfig = _compilerConfig;\n        this._console = _console;\n        this.getExtraNgModuleProviders = getExtraNgModuleProviders;\n        this._compiledTemplateCache = new Map();\n        this._compiledHostTemplateCache = new Map();\n        this._compiledDirectiveWrapperCache = new Map();\n        this._compiledNgModuleCache = new Map();\n        this._sharedStylesheetCount = 0;\n    }\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleSync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndComponents(moduleType, true));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAsync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return Promise.resolve(this._compileModuleAndComponents(moduleType, false));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsSync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndAllComponents(moduleType, true));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsAsync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return Promise.resolve(this._compileModuleAndAllComponents(moduleType, false));\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    JitCompiler.prototype.getComponentFactory = /**\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        var /** @type {?} */ summary = this._metadataResolver.getDirectiveSummary(component);\n        return /** @type {?} */ (summary.componentFactory);\n    };\n    /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    JitCompiler.prototype.loadAotSummaries = /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    function (summaries) {\n        var _this = this;\n        this.clearCache();\n        flattenSummaries(summaries).forEach(function (summary) {\n            _this._summaryResolver.addSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n        });\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    JitCompiler.prototype.hasAotSummary = /**\n     * @param {?} ref\n     * @return {?}\n     */\n    function (ref) { return !!this._summaryResolver.resolveSummary(ref); };\n    /**\n     * @param {?} ids\n     * @return {?}\n     */\n    JitCompiler.prototype._filterJitIdentifiers = /**\n     * @param {?} ids\n     * @return {?}\n     */\n    function (ids) {\n        var _this = this;\n        return ids.map(function (mod) { return mod.reference; }).filter(function (ref) { return !_this.hasAotSummary(ref); });\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndComponents = /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            _this._compileComponents(moduleType, null);\n            return _this._compileModule(moduleType);\n        });\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndAllComponents = /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            var /** @type {?} */ componentFactories = [];\n            _this._compileComponents(moduleType, componentFactories);\n            return {\n                ngModuleFactory: _this._compileModule(moduleType),\n                componentFactories: componentFactories\n            };\n        });\n    };\n    /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._loadModules = /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (mainModule, isSync) {\n        var _this = this;\n        var /** @type {?} */ loading = [];\n        var /** @type {?} */ mainNgModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        // Note: for runtime compilation, we want to transitively compile all modules,\n        // so we also need to load the declared directives / pipes for all nested modules.\n        this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach(function (nestedNgModule) {\n            // getNgModuleMetadata only returns null if the value passed in is not an NgModule\n            var /** @type {?} */ moduleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(nestedNgModule)));\n            _this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach(function (ref) {\n                var /** @type {?} */ promise = _this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference, ref, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            _this._filterJitIdentifiers(moduleMeta.declaredPipes)\n                .forEach(function (ref) { return _this._metadataResolver.getOrLoadPipeMetadata(ref); });\n        });\n        return SyncAsync.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModule = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        var /** @type {?} */ ngModuleFactory = /** @type {?} */ ((this._compiledNgModuleCache.get(moduleType)));\n        if (!ngModuleFactory) {\n            var /** @type {?} */ moduleMeta = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(moduleType)));\n            // Always provide a bound Compiler\n            var /** @type {?} */ extraProviders = this.getExtraNgModuleProviders(moduleMeta.type.reference);\n            var /** @type {?} */ outputCtx = createOutputContext();\n            var /** @type {?} */ compileResult = this._ngModuleCompiler.compile(outputCtx, moduleMeta, extraProviders);\n            ngModuleFactory = this._interpretOrJit(ngModuleJitUrl(moduleMeta), outputCtx.statements)[compileResult.ngModuleFactoryVar];\n            this._compiledNgModuleCache.set(moduleMeta.type.reference, ngModuleFactory);\n        }\n        return ngModuleFactory;\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    JitCompiler.prototype._compileComponents = /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    function (mainModule, allComponentFactories) {\n        var _this = this;\n        var /** @type {?} */ ngModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        var /** @type {?} */ moduleByJitDirective = new Map();\n        var /** @type {?} */ templates = new Set();\n        var /** @type {?} */ transJitModules = this._filterJitIdentifiers(ngModule.transitiveModule.modules);\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                moduleByJitDirective.set(dirRef, localModuleMeta);\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    templates.add(_this._createCompiledTemplate(dirMeta, localModuleMeta));\n                    if (allComponentFactories) {\n                        var /** @type {?} */ template = _this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n                        templates.add(template);\n                        allComponentFactories.push(/** @type {?} */ (dirMeta.componentFactory));\n                    }\n                }\n            });\n        });\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    dirMeta.entryComponents.forEach(function (entryComponentType) {\n                        var /** @type {?} */ moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                        templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                    });\n                }\n            });\n            localModuleMeta.entryComponents.forEach(function (entryComponentType) {\n                if (!_this.hasAotSummary(entryComponentType.componentType.reference)) {\n                    var /** @type {?} */ moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                    templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                }\n            });\n        });\n        templates.forEach(function (template) { return _this._compileTemplate(template); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCacheFor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        this._compiledNgModuleCache.delete(type);\n        this._metadataResolver.clearCacheFor(type);\n        this._compiledHostTemplateCache.delete(type);\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(type);\n        if (compiledTemplate) {\n            this._compiledTemplateCache.delete(type);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () {\n        this._metadataResolver.clearCache();\n        this._compiledTemplateCache.clear();\n        this._compiledHostTemplateCache.clear();\n        this._compiledNgModuleCache.clear();\n    };\n    /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledHostTemplate = /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (compType, ngModule) {\n        if (!ngModule) {\n            throw new Error(\"Component \" + stringify(compType) + \" is not part of any NgModule or the module has not been imported into your module.\");\n        }\n        var /** @type {?} */ compiledTemplate = this._compiledHostTemplateCache.get(compType);\n        if (!compiledTemplate) {\n            var /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n            assertComponent(compMeta);\n            var /** @type {?} */ hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta, (/** @type {?} */ (compMeta.componentFactory)).viewDefFactory);\n            compiledTemplate =\n                new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n            this._compiledHostTemplateCache.set(compType, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (compMeta, ngModule) {\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n        if (!compiledTemplate) {\n            assertComponent(compMeta);\n            compiledTemplate = new CompiledTemplate(false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n            this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} template\n     * @return {?}\n     */\n    JitCompiler.prototype._compileTemplate = /**\n     * @param {?} template\n     * @return {?}\n     */\n    function (template) {\n        var _this = this;\n        if (template.isCompiled) {\n            return;\n        }\n        var /** @type {?} */ compMeta = template.compMeta;\n        var /** @type {?} */ externalStylesheetsByModuleUrl = new Map();\n        var /** @type {?} */ outputContext = createOutputContext();\n        var /** @type {?} */ componentStylesheet = this._styleCompiler.compileComponent(outputContext, compMeta); /** @type {?} */\n        ((compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n            var /** @type {?} */ compiledStylesheet = _this._styleCompiler.compileStyles(createOutputContext(), compMeta, stylesheetMeta);\n            externalStylesheetsByModuleUrl.set(/** @type {?} */ ((stylesheetMeta.moduleUrl)), compiledStylesheet);\n        });\n        this._resolveStylesCompileResult(componentStylesheet, externalStylesheetsByModuleUrl);\n        var /** @type {?} */ pipes = template.ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var _a = this._parseTemplate(compMeta, template.ngModule, template.directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ compileResult = this._viewCompiler.compileComponent(outputContext, compMeta, parsedTemplate, variable(componentStylesheet.stylesVar), usedPipes);\n        var /** @type {?} */ evalResult = this._interpretOrJit(templateJitUrl(template.ngModule.type, template.compMeta), outputContext.statements);\n        var /** @type {?} */ viewClass = evalResult[compileResult.viewClassVar];\n        var /** @type {?} */ rendererType = evalResult[compileResult.rendererTypeVar];\n        template.compiled(viewClass, rendererType);\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    JitCompiler.prototype._parseTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        // Note: ! is ok here as components always have a template.\n        var /** @type {?} */ preserveWhitespaces = /** @type {?} */ ((compMeta.template)).preserveWhitespaces;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        return this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveStylesCompileResult = /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    function (result, externalStylesheetsByModuleUrl) {\n        var _this = this;\n        result.dependencies.forEach(function (dep, i) {\n            var /** @type {?} */ nestedCompileResult = /** @type {?} */ ((externalStylesheetsByModuleUrl.get(dep.moduleUrl)));\n            var /** @type {?} */ nestedStylesArr = _this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n            dep.setValue(nestedStylesArr);\n        });\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveAndEvalStylesCompileResult = /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    function (result, externalStylesheetsByModuleUrl) {\n        this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n        return this._interpretOrJit(sharedStylesheetJitUrl(result.meta, this._sharedStylesheetCount++), result.outputCtx.statements)[result.stylesVar];\n    };\n    /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @return {?}\n     */\n    JitCompiler.prototype._interpretOrJit = /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @return {?}\n     */\n    function (sourceUrl$$1, statements) {\n        if (!this._compilerConfig.useJit) {\n            return interpretStatements(statements, this._reflector);\n        }\n        else {\n            return jitStatements(sourceUrl$$1, statements, this._reflector, this._compilerConfig.jitDevMode);\n        }\n    };\n    return JitCompiler;\n}());\nvar CompiledTemplate = (function () {\n    function CompiledTemplate(isHost, compType, compMeta, ngModule, directives) {\n        this.isHost = isHost;\n        this.compType = compType;\n        this.compMeta = compMeta;\n        this.ngModule = ngModule;\n        this.directives = directives;\n        this._viewClass = /** @type {?} */ ((null));\n        this.isCompiled = false;\n    }\n    /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    CompiledTemplate.prototype.compiled = /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    function (viewClass, rendererType) {\n        this._viewClass = viewClass;\n        (/** @type {?} */ (this.compMeta.componentViewType)).setDelegate(viewClass);\n        for (var /** @type {?} */ prop in rendererType) {\n            (/** @type {?} */ (this.compMeta.rendererType))[prop] = rendererType[prop];\n        }\n        this.isCompiled = true;\n    };\n    return CompiledTemplate;\n}());\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction assertComponent(meta) {\n    if (!meta.isComponent) {\n        throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n    }\n}\n/**\n * @param {?} fn\n * @param {?=} out\n * @return {?}\n */\nfunction flattenSummaries(fn$$1, out) {\n    if (out === void 0) { out = []; }\n    fn$$1().forEach(function (entry) {\n        if (typeof entry === 'function') {\n            flattenSummaries(entry, out);\n        }\n        else {\n            out.push(entry);\n        }\n    });\n    return out;\n}\n/**\n * @return {?}\n */\nfunction createOutputContext() {\n    var /** @type {?} */ importExpr$$1 = function (symbol) {\n        return importExpr({ name: identifierName(symbol), moduleName: null, runtime: symbol });\n    };\n    return { statements: [], genFilePath: '', importExpr: importExpr$$1 };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Provides access to reflection data about symbols that the compiler needs.\n * @abstract\n */\nvar CompileReflector = (function () {\n    function CompileReflector() {\n    }\n    return CompileReflector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Create a {\\@link UrlResolver} with no package prefix.\n * @return {?}\n */\nfunction createUrlResolverWithoutPackagePrefix() {\n    return new UrlResolver();\n}\n/**\n * @return {?}\n */\nfunction createOfflineCompileUrlResolver() {\n    return new UrlResolver('.');\n}\n/**\n * @record\n */\n\nvar UrlResolver = (function () {\n    function UrlResolverImpl(_packagePrefix) {\n        if (_packagePrefix === void 0) { _packagePrefix = null; }\n        this._packagePrefix = _packagePrefix;\n    }\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     */\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    UrlResolverImpl.prototype.resolve = /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    function (baseUrl, url) {\n        var /** @type {?} */ resolvedUrl = url;\n        if (baseUrl != null && baseUrl.length > 0) {\n            resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n        }\n        var /** @type {?} */ resolvedParts = _split(resolvedUrl);\n        var /** @type {?} */ prefix = this._packagePrefix;\n        if (prefix != null && resolvedParts != null &&\n            resolvedParts[_ComponentIndex.Scheme] == 'package') {\n            var /** @type {?} */ path = resolvedParts[_ComponentIndex.Path];\n            prefix = prefix.replace(/\\/+$/, '');\n            path = path.replace(/^\\/+/, '');\n            return prefix + \"/\" + path;\n        }\n        return resolvedUrl;\n    };\n    return UrlResolverImpl;\n}());\n/**\n * Extract the scheme of a URL.\n * @param {?} url\n * @return {?}\n */\nfunction getUrlScheme(url) {\n    var /** @type {?} */ match = _split(url);\n    return (match && match[_ComponentIndex.Scheme]) || '';\n}\n/**\n * Builds a URI string from already-encoded parts.\n *\n * No encoding is performed.  Any component may be omitted as either null or\n * undefined.\n *\n * @param {?=} opt_scheme The scheme such as 'http'.\n * @param {?=} opt_userInfo The user name before the '\\@'.\n * @param {?=} opt_domain The domain such as 'www.google.com', already\n *     URI-encoded.\n * @param {?=} opt_port The port number.\n * @param {?=} opt_path The path, already URI-encoded.  If it is not\n *     empty, it must begin with a slash.\n * @param {?=} opt_queryData The URI-encoded query data.\n * @param {?=} opt_fragment The URI-encoded fragment identifier.\n * @return {?} The fully combined URI.\n */\nfunction _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n    var /** @type {?} */ out = [];\n    if (opt_scheme != null) {\n        out.push(opt_scheme + ':');\n    }\n    if (opt_domain != null) {\n        out.push('//');\n        if (opt_userInfo != null) {\n            out.push(opt_userInfo + '@');\n        }\n        out.push(opt_domain);\n        if (opt_port != null) {\n            out.push(':' + opt_port);\n        }\n    }\n    if (opt_path != null) {\n        out.push(opt_path);\n    }\n    if (opt_queryData != null) {\n        out.push('?' + opt_queryData);\n    }\n    if (opt_fragment != null) {\n        out.push('#' + opt_fragment);\n    }\n    return out.join('');\n}\n/**\n * A regular expression for breaking a URI into its component parts.\n *\n * {\\@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n * \\@internal\n */\nvar _splitRe = new RegExp('^' +\n    '(?:' +\n    '([^:/?#.]+)' +\n    ':)?' +\n    '(?://' +\n    '(?:([^/?#]*)@)?' +\n    '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' +\n    '(?::([0-9]+))?' +\n    ')?' +\n    '([^?#]+)?' +\n    '(?:\\\\?([^#]*))?' +\n    '(?:#(.*))?' +\n    '$');\n/** @enum {number} */\nvar _ComponentIndex = {\n    Scheme: 1,\n    UserInfo: 2,\n    Domain: 3,\n    Port: 4,\n    Path: 5,\n    QueryData: 6,\n    Fragment: 7,\n};\n_ComponentIndex[_ComponentIndex.Scheme] = \"Scheme\";\n_ComponentIndex[_ComponentIndex.UserInfo] = \"UserInfo\";\n_ComponentIndex[_ComponentIndex.Domain] = \"Domain\";\n_ComponentIndex[_ComponentIndex.Port] = \"Port\";\n_ComponentIndex[_ComponentIndex.Path] = \"Path\";\n_ComponentIndex[_ComponentIndex.QueryData] = \"QueryData\";\n_ComponentIndex[_ComponentIndex.Fragment] = \"Fragment\";\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n * </pre>\n *\n * @param {?} uri The URI string to examine.\n * @return {?} Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\nfunction _split(uri) {\n    return /** @type {?} */ ((uri.match(_splitRe)));\n}\n/**\n * Removes dot segments in given path component, as described in\n * RFC 3986, section 5.2.4.\n *\n * @param {?} path A non-empty path component.\n * @return {?} Path component with removed dot segments.\n */\nfunction _removeDotSegments(path) {\n    if (path == '/')\n        return '/';\n    var /** @type {?} */ leadingSlash = path[0] == '/' ? '/' : '';\n    var /** @type {?} */ trailingSlash = path[path.length - 1] === '/' ? '/' : '';\n    var /** @type {?} */ segments = path.split('/');\n    var /** @type {?} */ out = [];\n    var /** @type {?} */ up = 0;\n    for (var /** @type {?} */ pos = 0; pos < segments.length; pos++) {\n        var /** @type {?} */ segment = segments[pos];\n        switch (segment) {\n            case '':\n            case '.':\n                break;\n            case '..':\n                if (out.length > 0) {\n                    out.pop();\n                }\n                else {\n                    up++;\n                }\n                break;\n            default:\n                out.push(segment);\n        }\n    }\n    if (leadingSlash == '') {\n        while (up-- > 0) {\n            out.unshift('..');\n        }\n        if (out.length === 0)\n            out.push('.');\n    }\n    return leadingSlash + out.join('/') + trailingSlash;\n}\n/**\n * Takes an array of the parts from split and canonicalizes the path part\n * and then joins all the parts.\n * @param {?} parts\n * @return {?}\n */\nfunction _joinAndCanonicalizePath(parts) {\n    var /** @type {?} */ path = parts[_ComponentIndex.Path];\n    path = path == null ? '' : _removeDotSegments(path);\n    parts[_ComponentIndex.Path] = path;\n    return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n}\n/**\n * Resolves a URL.\n * @param {?} base The URL acting as the base URL.\n * @param {?} url\n * @return {?}\n */\nfunction _resolveUrl(base, url) {\n    var /** @type {?} */ parts = _split(encodeURI(url));\n    var /** @type {?} */ baseParts = _split(base);\n    if (parts[_ComponentIndex.Scheme] != null) {\n        return _joinAndCanonicalizePath(parts);\n    }\n    else {\n        parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n    }\n    for (var /** @type {?} */ i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n        if (parts[i] == null) {\n            parts[i] = baseParts[i];\n        }\n    }\n    if (parts[_ComponentIndex.Path][0] == '/') {\n        return _joinAndCanonicalizePath(parts);\n    }\n    var /** @type {?} */ path = baseParts[_ComponentIndex.Path];\n    if (path == null)\n        path = '/';\n    var /** @type {?} */ index = path.lastIndexOf('/');\n    path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];\n    parts[_ComponentIndex.Path] = path;\n    return _joinAndCanonicalizePath(parts);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An interface for retrieving documents by URL that the compiler uses\n * to load templates.\n */\nvar ResourceLoader = (function () {\n    function ResourceLoader() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    ResourceLoader.prototype.get = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) { return ''; };\n    return ResourceLoader;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extract i18n messages from source code\n */\n/**\n * The host of the Extractor disconnects the implementation from TypeScript / other language\n * services and from underlying file systems.\n * @record\n */\n\nvar Extractor = (function () {\n    function Extractor(host, staticSymbolResolver, messageBundle, metadataResolver) {\n        this.host = host;\n        this.staticSymbolResolver = staticSymbolResolver;\n        this.messageBundle = messageBundle;\n        this.metadataResolver = metadataResolver;\n    }\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    Extractor.prototype.extract = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var _a = analyzeAndValidateNgModules(rootFiles, this.host, this.staticSymbolResolver, this.metadataResolver), files = _a.files, ngModules = _a.ngModules;\n        return Promise\n            .all(ngModules.map(function (ngModule) {\n            return _this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false);\n        }))\n            .then(function () {\n            var /** @type {?} */ errors = [];\n            files.forEach(function (file) {\n                var /** @type {?} */ compMetas = [];\n                file.directives.forEach(function (directiveType) {\n                    var /** @type {?} */ dirMeta = _this.metadataResolver.getDirectiveMetadata(directiveType);\n                    if (dirMeta && dirMeta.isComponent) {\n                        compMetas.push(dirMeta);\n                    }\n                });\n                compMetas.forEach(function (compMeta) {\n                    var /** @type {?} */ html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                    var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                    errors.push.apply(errors, /** @type {?} */ ((_this.messageBundle.updateFromTemplate(html, file.fileName, interpolationConfig))));\n                });\n            });\n            if (errors.length) {\n                throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n            }\n            return _this.messageBundle;\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    Extractor.create = /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    function (host, locale) {\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        var /** @type {?} */ urlResolver = createAotUrlResolver(host);\n        var /** @type {?} */ symbolCache = new StaticSymbolCache();\n        var /** @type {?} */ summaryResolver = new AotSummaryResolver(host, symbolCache);\n        var /** @type {?} */ staticSymbolResolver = new StaticSymbolResolver(host, symbolCache, summaryResolver);\n        var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, staticSymbolResolver);\n        var /** @type {?} */ config = new CompilerConfig({ defaultEncapsulation: ViewEncapsulation.Emulated, useJit: false });\n        var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return host.loadResource(url); } }, urlResolver, htmlParser, config);\n        var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n        var /** @type {?} */ resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        var /** @type {?} */ extractor = new Extractor(host, staticSymbolResolver, messageBundle, resolver);\n        return { extractor: extractor, staticReflector: staticReflector };\n    };\n    return Extractor;\n}());\n\nexports.core = core;\nexports.CompilerConfig = CompilerConfig;\nexports.preserveWhitespacesDefault = preserveWhitespacesDefault;\nexports.Identifiers = Identifiers;\nexports.JitCompiler = JitCompiler;\nexports.DirectiveResolver = DirectiveResolver;\nexports.PipeResolver = PipeResolver;\nexports.NgModuleResolver = NgModuleResolver;\nexports.DEFAULT_INTERPOLATION_CONFIG = DEFAULT_INTERPOLATION_CONFIG;\nexports.InterpolationConfig = InterpolationConfig;\nexports.NgModuleCompiler = NgModuleCompiler;\nexports.AssertNotNull = AssertNotNull;\nexports.BinaryOperator = BinaryOperator;\nexports.BinaryOperatorExpr = BinaryOperatorExpr;\nexports.BuiltinMethod = BuiltinMethod;\nexports.BuiltinVar = BuiltinVar;\nexports.CastExpr = CastExpr;\nexports.ClassStmt = ClassStmt;\nexports.CommaExpr = CommaExpr;\nexports.CommentStmt = CommentStmt;\nexports.ConditionalExpr = ConditionalExpr;\nexports.DeclareFunctionStmt = DeclareFunctionStmt;\nexports.DeclareVarStmt = DeclareVarStmt;\nexports.ExpressionStatement = ExpressionStatement;\nexports.ExternalExpr = ExternalExpr;\nexports.ExternalReference = ExternalReference;\nexports.FunctionExpr = FunctionExpr;\nexports.IfStmt = IfStmt;\nexports.InstantiateExpr = InstantiateExpr;\nexports.InvokeFunctionExpr = InvokeFunctionExpr;\nexports.InvokeMethodExpr = InvokeMethodExpr;\nexports.LiteralArrayExpr = LiteralArrayExpr;\nexports.LiteralExpr = LiteralExpr;\nexports.LiteralMapExpr = LiteralMapExpr;\nexports.NotExpr = NotExpr;\nexports.ReadKeyExpr = ReadKeyExpr;\nexports.ReadPropExpr = ReadPropExpr;\nexports.ReadVarExpr = ReadVarExpr;\nexports.ReturnStatement = ReturnStatement;\nexports.ThrowStmt = ThrowStmt;\nexports.TryCatchStmt = TryCatchStmt;\nexports.WriteKeyExpr = WriteKeyExpr;\nexports.WritePropExpr = WritePropExpr;\nexports.WriteVarExpr = WriteVarExpr;\nexports.StmtModifier = StmtModifier;\nexports.Statement = Statement;\nexports.collectExternalReferences = collectExternalReferences;\nexports.EmitterVisitorContext = EmitterVisitorContext;\nexports.ViewCompiler = ViewCompiler;\nexports.getParseErrors = getParseErrors;\nexports.isSyntaxError = isSyntaxError;\nexports.syntaxError = syntaxError;\nexports.Version = Version;\nexports.VERSION = VERSION;\nexports.TextAst = TextAst;\nexports.BoundTextAst = BoundTextAst;\nexports.AttrAst = AttrAst;\nexports.BoundElementPropertyAst = BoundElementPropertyAst;\nexports.BoundEventAst = BoundEventAst;\nexports.ReferenceAst = ReferenceAst;\nexports.VariableAst = VariableAst;\nexports.ElementAst = ElementAst;\nexports.EmbeddedTemplateAst = EmbeddedTemplateAst;\nexports.BoundDirectivePropertyAst = BoundDirectivePropertyAst;\nexports.DirectiveAst = DirectiveAst;\nexports.ProviderAst = ProviderAst;\nexports.ProviderAstType = ProviderAstType;\nexports.NgContentAst = NgContentAst;\nexports.PropertyBindingType = PropertyBindingType;\nexports.NullTemplateVisitor = NullTemplateVisitor;\nexports.RecursiveTemplateAstVisitor = RecursiveTemplateAstVisitor;\nexports.templateVisitAll = templateVisitAll;\nexports.CompileAnimationEntryMetadata = CompileAnimationEntryMetadata;\nexports.CompileAnimationStateMetadata = CompileAnimationStateMetadata;\nexports.CompileAnimationStateDeclarationMetadata = CompileAnimationStateDeclarationMetadata;\nexports.CompileAnimationStateTransitionMetadata = CompileAnimationStateTransitionMetadata;\nexports.CompileAnimationMetadata = CompileAnimationMetadata;\nexports.CompileAnimationKeyframesSequenceMetadata = CompileAnimationKeyframesSequenceMetadata;\nexports.CompileAnimationStyleMetadata = CompileAnimationStyleMetadata;\nexports.CompileAnimationAnimateMetadata = CompileAnimationAnimateMetadata;\nexports.CompileAnimationWithStepsMetadata = CompileAnimationWithStepsMetadata;\nexports.CompileAnimationSequenceMetadata = CompileAnimationSequenceMetadata;\nexports.CompileAnimationGroupMetadata = CompileAnimationGroupMetadata;\nexports.identifierName = identifierName;\nexports.identifierModuleUrl = identifierModuleUrl;\nexports.viewClassName = viewClassName;\nexports.rendererTypeName = rendererTypeName;\nexports.hostViewClassName = hostViewClassName;\nexports.componentFactoryName = componentFactoryName;\nexports.CompileSummaryKind = CompileSummaryKind;\nexports.tokenName = tokenName;\nexports.tokenReference = tokenReference;\nexports.CompileStylesheetMetadata = CompileStylesheetMetadata;\nexports.CompileTemplateMetadata = CompileTemplateMetadata;\nexports.CompileDirectiveMetadata = CompileDirectiveMetadata;\nexports.CompilePipeMetadata = CompilePipeMetadata;\nexports.CompileNgModuleMetadata = CompileNgModuleMetadata;\nexports.TransitiveCompileNgModuleMetadata = TransitiveCompileNgModuleMetadata;\nexports.ProviderMeta = ProviderMeta;\nexports.flatten = flatten;\nexports.sourceUrl = sourceUrl;\nexports.templateSourceUrl = templateSourceUrl;\nexports.sharedStylesheetJitUrl = sharedStylesheetJitUrl;\nexports.ngModuleJitUrl = ngModuleJitUrl;\nexports.templateJitUrl = templateJitUrl;\nexports.createAotUrlResolver = createAotUrlResolver;\nexports.createAotCompiler = createAotCompiler;\nexports.AotCompiler = AotCompiler;\nexports.analyzeNgModules = analyzeNgModules;\nexports.analyzeAndValidateNgModules = analyzeAndValidateNgModules;\nexports.analyzeFile = analyzeFile;\nexports.mergeAnalyzedFiles = mergeAnalyzedFiles;\nexports.GeneratedFile = GeneratedFile;\nexports.toTypeScript = toTypeScript;\nexports.StaticReflector = StaticReflector;\nexports.StaticSymbol = StaticSymbol;\nexports.StaticSymbolCache = StaticSymbolCache;\nexports.ResolvedStaticSymbol = ResolvedStaticSymbol;\nexports.StaticSymbolResolver = StaticSymbolResolver;\nexports.unescapeIdentifier = unescapeIdentifier;\nexports.AotSummaryResolver = AotSummaryResolver;\nexports.AstPath = AstPath;\nexports.SummaryResolver = SummaryResolver;\nexports.JitSummaryResolver = JitSummaryResolver;\nexports.CompileReflector = CompileReflector;\nexports.createUrlResolverWithoutPackagePrefix = createUrlResolverWithoutPackagePrefix;\nexports.createOfflineCompileUrlResolver = createOfflineCompileUrlResolver;\nexports.UrlResolver = UrlResolver;\nexports.getUrlScheme = getUrlScheme;\nexports.ResourceLoader = ResourceLoader;\nexports.ElementSchemaRegistry = ElementSchemaRegistry;\nexports.Extractor = Extractor;\nexports.I18NHtmlParser = I18NHtmlParser;\nexports.MessageBundle = MessageBundle;\nexports.Serializer = Serializer;\nexports.Xliff = Xliff;\nexports.Xliff2 = Xliff2;\nexports.Xmb = Xmb;\nexports.Xtb = Xtb;\nexports.DirectiveNormalizer = DirectiveNormalizer;\nexports.ParserError = ParserError;\nexports.ParseSpan = ParseSpan;\nexports.AST = AST;\nexports.Quote = Quote;\nexports.EmptyExpr = EmptyExpr;\nexports.ImplicitReceiver = ImplicitReceiver;\nexports.Chain = Chain;\nexports.Conditional = Conditional;\nexports.PropertyRead = PropertyRead;\nexports.PropertyWrite = PropertyWrite;\nexports.SafePropertyRead = SafePropertyRead;\nexports.KeyedRead = KeyedRead;\nexports.KeyedWrite = KeyedWrite;\nexports.BindingPipe = BindingPipe;\nexports.LiteralPrimitive = LiteralPrimitive;\nexports.LiteralArray = LiteralArray;\nexports.LiteralMap = LiteralMap;\nexports.Interpolation = Interpolation;\nexports.Binary = Binary;\nexports.PrefixNot = PrefixNot;\nexports.NonNullAssert = NonNullAssert;\nexports.MethodCall = MethodCall;\nexports.SafeMethodCall = SafeMethodCall;\nexports.FunctionCall = FunctionCall;\nexports.ASTWithSource = ASTWithSource;\nexports.TemplateBinding = TemplateBinding;\nexports.NullAstVisitor = NullAstVisitor;\nexports.RecursiveAstVisitor = RecursiveAstVisitor;\nexports.AstTransformer = AstTransformer;\nexports.visitAstChildren = visitAstChildren;\nexports.TokenType = TokenType;\nexports.Lexer = Lexer;\nexports.Token = Token;\nexports.EOF = EOF;\nexports.isIdentifier = isIdentifier;\nexports.isQuote = isQuote;\nexports.SplitInterpolation = SplitInterpolation;\nexports.TemplateBindingParseResult = TemplateBindingParseResult;\nexports.Parser = Parser;\nexports._ParseAST = _ParseAST;\nexports.ERROR_COMPONENT_TYPE = ERROR_COMPONENT_TYPE;\nexports.CompileMetadataResolver = CompileMetadataResolver;\nexports.Text = Text;\nexports.Expansion = Expansion;\nexports.ExpansionCase = ExpansionCase;\nexports.Attribute = Attribute$1;\nexports.Element = Element;\nexports.Comment = Comment;\nexports.visitAll = visitAll;\nexports.RecursiveVisitor = RecursiveVisitor;\nexports.findNode = findNode;\nexports.ParseTreeResult = ParseTreeResult;\nexports.TreeError = TreeError;\nexports.HtmlParser = HtmlParser;\nexports.HtmlTagDefinition = HtmlTagDefinition;\nexports.getHtmlTagDefinition = getHtmlTagDefinition;\nexports.TagContentType = TagContentType;\nexports.splitNsName = splitNsName;\nexports.isNgContainer = isNgContainer;\nexports.isNgContent = isNgContent;\nexports.isNgTemplate = isNgTemplate;\nexports.getNsPrefix = getNsPrefix;\nexports.mergeNsAndName = mergeNsAndName;\nexports.NAMED_ENTITIES = NAMED_ENTITIES;\nexports.NGSP_UNICODE = NGSP_UNICODE;\nexports.debugOutputAstAsTypeScript = debugOutputAstAsTypeScript;\nexports.TypeScriptEmitter = TypeScriptEmitter;\nexports.ParseLocation = ParseLocation;\nexports.ParseSourceFile = ParseSourceFile;\nexports.ParseSourceSpan = ParseSourceSpan;\nexports.ParseErrorLevel = ParseErrorLevel;\nexports.ParseError = ParseError;\nexports.typeSourceSpan = typeSourceSpan;\nexports.DomElementSchemaRegistry = DomElementSchemaRegistry;\nexports.CssSelector = CssSelector;\nexports.SelectorMatcher = SelectorMatcher;\nexports.SelectorListContext = SelectorListContext;\nexports.SelectorContext = SelectorContext;\nexports.StylesCompileDependency = StylesCompileDependency;\nexports.CompiledStylesheet = CompiledStylesheet;\nexports.StyleCompiler = StyleCompiler;\nexports.TemplateParseError = TemplateParseError;\nexports.TemplateParseResult = TemplateParseResult;\nexports.TemplateParser = TemplateParser;\nexports.splitClasses = splitClasses;\nexports.createElementCssSelector = createElementCssSelector;\nexports.removeSummaryDuplicates = removeSummaryDuplicates;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=compiler.umd.js.map\n"]}