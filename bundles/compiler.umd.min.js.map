{"version":3,"sources":["/home/travis/build/angular/angular/dist/packages-dist/compiler/bundles/compiler.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","compiler","core","this","_angular_core","templateVisitAll","visitor","asts","context","result","visit","ast","forEach","astResult","push","splitNsName","elementName","colonIndex","indexOf","Error","slice","isNgContainer","tagName","isNgContent","isNgTemplate","getNsPrefix","fullName","mergeNsAndName","prefix","localName","getHtmlTagDefinition","TAG_DEFINITIONS","toLowerCase","_DEFAULT_TAG_DEFINITION","dashCaseToCamelCase","input","replace","DASH_CASE_REGEXP","m","_i","arguments","length","toUpperCase","splitAtColon","defaultValues","_splitAt","splitAtPeriod","character","characterIndex","trim","visitValue","value","Array","isArray","visitArray","isStrictStringMap","visitStringMap","visitPrimitive","visitOther","isDefined","val","undefined","noUndefined","syntaxError","msg","error","ERROR_SYNTAX_ERROR","isSyntaxError","escapeRegExp","s","obj","Object","getPrototypeOf","STRING_MAP_PROTO","utf8Encode","str","encoded","index","codePoint","charCodeAt","low","String","fromCharCode","_sanitizeIdentifier","name","identifierName","compileIdentifier","reference","ref","StaticSymbol","identifier","ɵstringify","_anonymousTypeIndex","identifierModuleUrl","filePath","ɵreflector","importUri","viewClassName","compType","embeddedTemplateIndex","rendererTypeName","hostViewClassName","dirWrapperClassName","dirType","componentFactoryName","tokenName","token","tokenReference","createHostComponentMeta","hostTypeReference","compMeta","hostViewType","template","CssSelector","parse","getMatchingElementTemplate","CompileDirectiveMetadata","create","isHost","type","diDeps","lifecycleHooks","CompileTemplateMetadata","encapsulation","ViewEncapsulation","None","templateUrl","styles","styleUrls","ngContentSelectors","animations","isInline","externalStylesheets","interpolation","exportAs","changeDetection","ChangeDetectionStrategy","Default","inputs","outputs","host","isComponent","selector","providers","viewProviders","queries","viewQueries","componentViewType","rendererType","id","data","entryComponents","componentFactory","_normalizeArray","flatten","list","reduce","flat","item","flatItem","concat","sourceUrl","url","templateSourceUrl","ngModuleType","templateMeta","sharedStylesheetJitUrl","meta","pathParts","split","baseName","ngModuleJitUrl","moduleMeta","templateJitUrl","visitAstChildren","visitAll","visitBinary","left","right","visitChain","expressions","visitConditional","condition","trueExp","falseExp","visitFunctionCall","target","args","visitImplicitReceiver","visitInterpolation","visitKeyedRead","key","visitKeyedWrite","visitLiteralArray","visitLiteralMap","visitLiteralPrimitive","visitMethodCall","receiver","visitPipe","exp","visitPrefixNot","expression","visitNonNullAssert","visitPropertyRead","visitPropertyWrite","visitQuote","visitSafeMethodCall","visitSafePropertyRead","isWhitespace","code","$TAB","$SPACE","$NBSP","isDigit","$0","$9","isAsciiLetter","$a","$z","$A","$Z","isAsciiHexDigit","$f","$F","CompilerInjectable","x","assertArrayOfStrings","isDevMode","i","assertInterpolationSymbols","start_1","end_1","INTERPOLATION_BLACKLIST_REGEXPS","regexp","test","newCharacterToken","Token","TokenType","Character","newIdentifierToken","text","Identifier","newKeywordToken","Keyword","newOperatorToken","Operator","newStringToken","newNumberToken","n","Number","newErrorToken","message","isIdentifierStart","$_","$$","isIdentifier","scanner","_Scanner","peek","advance","$EOF","isIdentifierPart","isExponentStart","$e","$E","isExponentSign","$MINUS","$PLUS","isQuote","$SQ","$DQ","$BT","unescape","$n","$LF","$FF","$r","$CR","$t","$v","$VTAB","parseIntAutoRadix","parseInt","isNaN","_createInterpolateRegExp","config","pattern","start","end","RegExp","typeSourceSpan","kind","moduleUrl","sourceFileName","sourceFile","ParseSourceFile","ParseSourceSpan","ParseLocation","nodes","spanOf","sourceSpan","offset","Element","endSourceSpan","children","findNode","position","path","_super","class_1","apply","__extends","prototype","span","RecursiveVisitor","AstPath","tokenize","source","getTagDefinition","tokenizeExpansionForms","interpolationConfig","DEFAULT_INTERPOLATION_CONFIG","_Tokenizer","_unexpectedCharacterErrorMsg","charCode","char","_unknownEntityErrorMsg","entitySrc","isNotWhitespace","isNameEnd","$GT","$SLASH","$EQ","isPrefixEnd","isDigitEntityEnd","$SEMICOLON","isNamedEntityEnd","isExpansionFormStart","isInterpolationStart","$LBRACE","isExpansionCaseStart","compareCharCodeCaseInsensitive","code1","code2","toUpperCaseCharCode","mergeTextTokens","srcTokens","dstTokens","lastDstToken","TokenType$1","TEXT","parts","lastOnStack","stack","element","createI18nMessageFactory","_I18nVisitor","_expParser","meaning","description","toI18nMessage","_extractPlaceholderName","_CUSTOM_PH_EXP","extractMessages","implicitTags","implicitAttrs","_Visitor","extract","mergeTranslations","translations","merge","_isOpeningComment","Comment","startsWith","_isClosingComment","_getI18nAttr","p","attrs","find","attr","_I18N_ATTR","_parseMessageMeta","i18n","idIndex","ID_SEPARATOR","descIndex","MEANING_SEPARATOR","_a","meaningAndDesc","_b","getXmlTagDefinition","_TAG_DEFINITION","digest","sha1","serializeNodes","join","decimalDigest","_SerializerIgnoreIcuExpVisitor","map","a","computeMsgId","serializerVisitor","utf8","words32","stringToWords32","Endian","Big","len","w","b","c","d","e","h0","h1","h2","h3","h4","j","rol32","_c","fk","f","k","temp","add32","_d","_e","byteStringToHexString","words32ToByteString","fingerprint","hash32","hi","lo","him","lom","add64","rol64","byteStringToDecString","wordAt","Little","mix","sub32","add32to64","high","ah","al","bh","bl","carry","l","h","count","endian","byteAt","word","word32ToByteString","hex","toString","decimal","toThePower","addBigInt","numberTimesBigInt","reverse","y","sum","Math","max","tmpSum","num","product","bToThePower","serialize","node","_visitor","_escapeXml","_ESCAPED_CHARS","entry","getCtypeForTag","tag","getTypeForTag","digest$1","toPublicName","internalName","createLazyProperty","messages","valueFn","defineProperty","configurable","enumerable","get","set","_","createSerializer","format","Xmb","Xtb","Xliff2","Xliff","assetUrl","pkg","resolveIdentifier","runtime","createIdentifier","identifierToken","createIdentifierToken","expandNodes","expander","_Expander","ExpansionResult","isExpanded","errors","_expandPluralForm","cases","PLURAL_CASES","match","ExpansionError","valueSourceSpan","expansionResult","Attribute$1","switchAttr","switchValue","switchValueSourceSpan","_expandDefaultForm","_transformProvider","provider","useExisting","useValue","deps","useClass","useFactory","multi","_transformProviderAst","eager","ProviderAst","multiProvider","providerType","_resolveProvidersFromDirectives","directives","targetErrors","providersByToken","Map","directive","dirProvider","_resolveProviders","ProviderAstType","Component","Directive","directivesWithComponentFirst","filter","dir","PublicService","PrivateService","targetProvidersByToken","resolvedProvider","ProviderError","isUseValue","_getViewQueries","component","viewQueryId","query","_addQueryToTokenMap","queryId","_getContentQueries","contentQueryStartId","contentQueryId","contentQueries","directiveIndex","selectors","isStyleUrlResolvable","schemeMatch","URL_WITH_SCHEMA_REGEXP","extractStyleUrls","resolver","baseUrl","cssText","foundUrls","modifiedCssText","CSS_COMMENT_REGEXP","CSS_IMPORT_REGEXP","resolve","StyleWithImports","_isAnimationLabel","calcPossibleSecurityContexts","registry","propName","isAttribute","ctxs","elementNames","allKnownElementNames","notElementNames","Set","notSelectors","isElementSelector","possibleElementNames","has","securityContext","SecurityContext","NONE","from","sort","preparseElement","selectAttr","hrefAttr","relAttr","nonBindable","projectAs","lcAttrName","NG_CONTENT_SELECT_ATTR","LINK_STYLE_HREF_ATTR","LINK_STYLE_REL_ATTR","NG_NON_BINDABLE_ATTR","NG_PROJECT_AS","normalizeNgContentSelect","nodeName","PreparsedElementType","OTHER","NG_CONTENT","STYLE_ELEMENT","STYLE","SCRIPT_ELEMENT","SCRIPT","LINK_ELEMENT","LINK_STYLE_REL_VALUE","STYLESHEET","PreparsedElement","warnOnlyOnce","warnings","warningCounts","splitClasses","classAttrValue","createElementCssSelector","attributes","cssSelector","elNameNoNs","setElement","attrName","attrNameNoNs","attrValue","addAttribute","CLASS_ATTR","classes","className","addClassName","_isEmptyTextNode","Text","removeSummaryDuplicates","items","values","isEmptyExpression","ASTWithSource","EmptyExpr","isTemplate","el","enableLegacyTemplate","reportDeprecation","tagNoNs","TEMPLATE_ELEMENT","TEMPLATE_ELEMENT_DEPRECATION_WARNING","createUrlResolverWithoutPackagePrefix","UrlResolver","createOfflineCompileUrlResolver","getUrlScheme","_split","_ComponentIndex","Scheme","_buildFromEncodedParts","opt_scheme","opt_userInfo","opt_domain","opt_port","opt_path","opt_queryData","opt_fragment","out","uri","_splitRe","_removeDotSegments","leadingSlash","trailingSlash","segments","up","pos","segment","pop","unshift","_joinAndCanonicalizePath","Path","UserInfo","Domain","Port","QueryData","Fragment","_resolveUrl","base","encodeURI","baseParts","lastIndexOf","substring","isDirectiveMetadata","findLast","arr","ngfactoryFilePath","forceSourceFile","urlWithSuffix","splitTypescriptSuffix","stripGeneratedFileSuffix","GENERATED_FILE","isGeneratedFile","endsWith","lastDot","summaryFileName","fileName","fileNameWithoutSuffix","STRIP_SRC_FILE_SUFFIXES","summaryForJitFileName","stripSummaryForJitFileSuffix","JIT_SUMMARY_FILE","summaryForJitName","symbolName","stripSummaryForJitNameSuffix","JIT_SUMMARY_NAME","hasLifecycleHook","hook","getHookName","ɵLifecycleHooks","OnInit","OnDestroy","DoCheck","OnChanges","AfterContentInit","AfterContentChecked","AfterViewInit","AfterViewChecked","_isNgModuleMetadata","NgModule","_isPipeMetadata","Pipe","flattenArray","tree","resolveForwardRef","dedupeArray","array","flattenAndDedupeArray","isValidType","Type","componentModuleUrl","reflector","cmpMetadata","resourceUri","moduleId","scheme","MODULE_SUFFIX","stringifyType","extractIdentifiers","targetIdentifiers","_CompileValueConverter","componentStillLoadingError","ɵERROR_COMPONENT_TYPE","findReadVarNames","stmts","_ReadVarVisitor","visitAllStatements","varNames","applySourceSpanToStatementIfNeeded","stmt","transformer","_ApplySourceSpanTransformer","visitStatement","applySourceSpanToExpressionIfNeeded","expr","visitExpression","variable","ReadVarExpr","importExpr","typeParams","ExternalExpr","importType","typeModifiers","expressionType","ExpressionType","literalArr","LiteralArrayExpr","literalMap","quoted","LiteralMapExpr","LiteralMapEntry","not","NotExpr","assertNotNull","AssertNotNull","fn","params","body","FunctionExpr","literal","LiteralExpr","createClassStmt","parentArgs","superCtorStmts","parent","SUPER_EXPR","callFn","toStmt","builder","concatClassBuilderParts","builders","ctor","ClassMethod","ctorParams","ctorStmts","ClassStmt","fields","getters","methods","modifiers","convertValueToOutputAst","_ValueOutputAstTransformer","createDiTokenExpression","toBase64String","b64","i1","i2","i3","toBase64Digit","toBase64VLQ","digit","B64_DIGITS","escapeIdentifier","escapeDollar","alwaysQuote","_SINGLE_QUOTE_ESCAPE_STRING_RE","requiresQuotes","_LEGAL_IDENTIFIER_RE","_createIndent","res","_INDENT_WITH","debugOutputAstAsTypeScript","converter","_TsEmitterVisitor","_debugFilePath","fileNameToModuleName","containingFilePath","getImportAs","symbol","getTypeArity","ctx","EmitterVisitorContext","createRoot","Statement","Expression","Type$1","visitType","toSource","registerContext","specs","specs_1","spec","SECURITY_SCHEMA","_isPixelDimensionStyle","prop","stripComments","_commentRe","extractSourceMappingUrl","matcher","_sourceMappingUrlRe","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","_ruleRe","content","suffix","contentPrefix","BLOCK_PLACEHOLDER","blocks","rule","CssRule","inputParts","_curlyRe","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","CLOSE_CURLY","OPEN_CURLY","StringWithEscapedBlocks","getStylesVarName","convertActionBinding","localResolver","implicitReceiver","action","bindingId","DefaultLocalResolver","actionWithoutBuiltins","convertPropertyBindingBuiltins","createLiteralArrayConverter","argCount","createLiteralMapConverter","keys","createPipeConverter","_AstToIrVisitor","actionStmts","flattenStatements","_Mode","prependTemporaryDecls","temporaryCount","lastIndex","preventDefaultVar","lastStatement","returnExpr","convertStmtIntoExpression","createPreventDefaultVar","cast","DYNAMIC_TYPE","notIdentical","toDeclStmt","StmtModifier","Final","ConvertActionBindingResult","converterFactory","convertBuiltins","convertPropertyBinding","expressionWithoutBuiltins","currValExpr","createCurrValueExpr","outputExpr","temporaryDeclaration","ConvertPropertyBindingResult","_BuiltinAstConverter","temporaryName","temporaryNumber","DeclareVarStmt","NULL_EXPR","statements","ensureStatementMode","mode","ensureExpressionMode","convertToStatementIfNeeded","arg","output","ExpressionStatement","ReturnStatement","providerDef","providerAst","multiProviderDef","singleProviderDef","convertDeps","providerIndex","dep","depIndex","paramName","allParams","FnParam","allDepDefs","depDef","exprs","depExprs","instantiate","providerExpr","INFERRED_TYPE","flags","depsExpr","providerMeta","tokenExpr","tokenMeta","isValue","isSkipSelf","isOptional","needsAdditionalRootNode","astNodes","lastAstNode","EmbeddedTemplateAst","hasViewContainer","ElementAst","NgContentAst","lifecycleHookToNodeFlag","lifecycleHook","nodeFlag","elementBindingDef","inputAst","dirAst","PropertyBindingType","Attribute","Property","Animation","bindingType","Class","Style","unit","fixedAttrsDef","elementAst","mapResult","attrAst","hostAttributes","prevValue","mergeAttributeValue","attrValue1","attrValue2","CLASS_ATTR$1","STYLE_ATTR","callCheckStmt","nodeIndex","CHECK_VAR","VIEW_VAR","callUnwrapValue","bindingIdx","Identifiers","unwrapValue","findStaticQueryIds","staticQueryIds","dynamicQueryIds","queryMatches","child","childData","add","delete","staticViewQueryIds","nodeStaticQueryIds","createComponentFactoryResolver","componentDirMeta","entryComponentFactories","entryComponent","ComponentFactoryResolver","classMeta","NgModuleRef","CodegenComponentFactoryResolver","elementEventNameAndTarget","eventAst","isAnimation","phase","calcStaticDynamicQueryFlags","queryIds","isFirst","serializeSummaries","summaryResolver","symbolResolver","symbols","types","toJsonSerializer","ToJsonSerializer","forJitSerializer","ForJitSerializer","resolvedSymbol","addOrMergeSummary","metadata","processedIndex","isLibraryFile","summary","resolveSummary","resolveSymbol","addLibType","addSourceType","summaryKind","CompileSummaryKind","ngModuleSummary","exportedDirectives","exportedPipes","summary_1","json","exportedVars","forJit","deserializeSummaries","symbolCache","deserializer","FromJsonDeserializer","deserialize","_resolveStyleStatements","compileResult","fileSuffix","dependencies","valuePlaceholder","getStaticSymbol","_stylesModuleUrl","isShimmed","stylesheetUrl","shim","_assertComponent","analyzeNgModules","programStaticSymbols","metadataResolver","_createNgModules","ngModules","symbolsMissingModule","_analyzeNgModules","analyzeAndValidateNgModules","programSymbols","ngModuleMetas","moduleMetasByRef","ngModule","ngModuleByPipeOrDirective","ngModulesByFile","ngDirectivesByFile","ngPipesByFile","ngInjectablesByFile","filePaths","isInjectable","ngModuleMeta","srcFileUrl","declaredDirectives","dirIdentifier","fileUrl","declaredPipes","pipeIdentifier","files","srcUrl","pipes","injectables","extractProgramSymbols","staticSymbolResolver","staticSymbols","isSourceFile","getSymbolsOf","symbolMeta","__symbolic","programPipesAndDirectives","ngModulePipesAndDirective","addNgModule","staticSymbol","getNgModuleMetadata","pipe","transitiveModule","modules","modMeta","isDirective","isPipe","isStaticType","shouldIgnore","expandedMessage","typeName","produceErrorMessage","mapStringMap","transform","HIDDEN_KEY","isPrimitive","o","positionalError","line","column","unescapeIdentifier","substr","createAotCompiler","compilerHost","options","urlResolver","StaticSymbolCache","AotSummaryResolver","StaticSymbolResolver","staticReflector","StaticReflector","StaticAndDynamicReflectionCapabilities","install","console","ɵConsole","htmlParser","I18NHtmlParser","HtmlParser","i18nFormat","missingTranslation","CompilerConfig","defaultEncapsulation","Emulated","useJit","normalizer","DirectiveNormalizer","loadResource","expressionParser","Parser","Lexer","elementSchemaRegistry","DomElementSchemaRegistry","tmplParser","TemplateParser","CompileMetadataResolver","NgModuleResolver","DirectiveResolver","PipeResolver","viewCompiler","ViewCompiler","AotCompiler","StyleCompiler","NgModuleCompiler","TypeScriptEmitter","locale","genFilePreamble","interpretStatements","resultVars","stmtsWithReturn","resultVar","_ExecutionContext","StatementInterpreter","_executeFunctionStatements","varValues","childCtx","createChildWihtLocalVars","vars","createDynamicClass","_classStmt","_ctx","propertyDescriptors","getter","instanceCtx","method","paramNames","param","writable","ctorParamNames","constructorMethod","_this","field","superClass","_declareFn","evalExpression","sourceUrl$$1","fnBody","fnArgNames","fnArgValues","argName","emptyFn","Function","bind","headerLines","toSourceMapGenerator","toJsComment","jitStatements","JitEmitterVisitor","returnStmt","getArgs","assertComponent","flattenSummaries","fn$$1","_initReflector","reflectionCapabilities","ɵReflectionCapabilities","_mergeOptions","optionsArr","_lastDefined","_mergeArrays","__","constructor","hasOwnProperty","VERSION","Version","TextAst","ngContentIndex","visitText","BoundTextAst","visitBoundText","AttrAst","visitAttr","BoundElementPropertyAst","visitElementProperty","BoundEventAst","handler","calcFullName","visitEvent","ReferenceAst","visitReference","VariableAst","visitVariable","references","visitElement","variables","visitEmbeddedTemplate","BoundDirectivePropertyAst","directiveName","templateName","visitDirectiveProperty","DirectiveAst","hostProperties","hostEvents","visitDirective","Builtin","visitNgContent","NullTemplateVisitor","RecursiveTemplateAstVisitor","call","visitChildren","cb","results","t","members","assertNoMembers","JSON","stringify","cache","declarationFile","memberSuffix","TagContentType","RAW_TEXT","ESCAPABLE_RAW_TEXT","PARSABLE_DATA","NAMED_ENTITIES","Aacute","aacute","Acirc","acirc","acute","AElig","aelig","Agrave","agrave","alefsym","Alpha","alpha","amp","and","ang","apos","Aring","aring","asymp","Atilde","atilde","Auml","auml","bdquo","Beta","beta","brvbar","bull","cap","Ccedil","ccedil","cedil","cent","Chi","chi","circ","clubs","cong","copy","crarr","cup","curren","dagger","Dagger","darr","dArr","deg","Delta","delta","diams","divide","Eacute","eacute","Ecirc","ecirc","Egrave","egrave","empty","emsp","ensp","Epsilon","epsilon","equiv","Eta","eta","ETH","eth","Euml","euml","euro","exist","fnof","forall","frac12","frac14","frac34","frasl","Gamma","gamma","ge","gt","harr","hArr","hearts","hellip","Iacute","iacute","Icirc","icirc","iexcl","Igrave","igrave","image","infin","int","Iota","iota","iquest","isin","Iuml","iuml","Kappa","kappa","Lambda","lambda","lang","laquo","larr","lArr","lceil","ldquo","le","lfloor","lowast","loz","lrm","lsaquo","lsquo","lt","macr","mdash","micro","middot","minus","Mu","mu","nabla","nbsp","ndash","ne","ni","notin","nsub","Ntilde","ntilde","Nu","nu","Oacute","oacute","Ocirc","ocirc","OElig","oelig","Ograve","ograve","oline","Omega","omega","Omicron","omicron","oplus","or","ordf","ordm","Oslash","oslash","Otilde","otilde","otimes","Ouml","ouml","para","permil","perp","Phi","phi","Pi","pi","piv","plusmn","pound","prime","Prime","prod","Psi","psi","quot","radic","rang","raquo","rarr","rArr","rceil","rdquo","real","reg","rfloor","Rho","rho","rlm","rsaquo","rsquo","sbquo","Scaron","scaron","sdot","sect","shy","Sigma","sigma","sigmaf","sim","spades","sub","sube","sup","sup1","sup2","sup3","supe","szlig","Tau","tau","there4","Theta","theta","thetasym","thinsp","THORN","thorn","tilde","times","trade","Uacute","uacute","uarr","uArr","Ucirc","ucirc","Ugrave","ugrave","uml","upsih","Upsilon","upsilon","Uuml","uuml","weierp","Xi","xi","Yacute","yacute","yen","yuml","Yuml","Zeta","zeta","zwj","zwnj","HtmlTagDefinition","closedByChildren","requiredParents","implicitNamespacePrefix","contentType","closedByParent","isVoid","_f","ignoreFirstLf","canSelfClose","parentToAdd","requireExtraParent","currentParent","lcParent","isParentTemplate","isClosedByChild","area","embed","link","img","hr","br","track","wbr","thead","tbody","tfoot","tr","td","th","col","svg","math","li","dt","dd","rb","rt","rtc","rp","optgroup","option","pre","listing","style","script","title","textarea","_SELECTOR_REGEXP","classNames","_addResult","cssSel","current","inNot","exec","hasElementSelector","classAttr","klass","notSelector","SelectorMatcher","_elementMap","_elementPartialMap","_classMap","_classPartialMap","_attrValueMap","_attrValuePartialMap","_listContexts","createNotMatcher","notMatcher","addSelectables","cssSelectors","callbackCtxt","listContext","SelectorListContext","_addSelectable","selectable","SelectorContext","isTerminal","_addTerminal","_addPartial","terminalMap","terminalValuesMap","partialMap","partialValuesMap","terminalList","matchedCallback","alreadyMatched","_matchTerminal","_matchPartial","selectables","starSelectables","finalize","nestedSelector","cbContext","callback","ValueTransformer","SyncAsyncResult","syncResult","asyncResult","Promise","HOST_REG_EXP","CompileAnimationEntryMetadata","definitions","CompileAnimationStateMetadata","CompileAnimationStateDeclarationMetadata","stateNameExpr","CompileAnimationStateTransitionMetadata","stateChangeExpr","steps","CompileAnimationMetadata","CompileAnimationKeyframesSequenceMetadata","CompileAnimationStyleMetadata","CompileAnimationAnimateMetadata","timings","CompileAnimationWithStepsMetadata","CompileAnimationSequenceMetadata","CompileAnimationGroupMetadata","Injectable","CompileStylesheetMetadata","toSummary","anim","hostListeners","matches","inputsMap","bindConfig","outputsMap","CompilePipeMetadata","pure","CompileNgModuleMetadata","bootstrapComponents","importedModules","exportedModules","schemas","TransitiveCompileNgModuleMetadata","directivesSet","exportedDirectivesSet","pipesSet","exportedPipesSet","modulesSet","entryComponentsSet","addProvider","addDirective","addExportedDirective","addPipe","addExportedPipe","addModule","addEntryComponent","ec","componentType","ProviderMeta","ParserError","errLocation","ctxLocation","ParseSpan","AST","Quote","uninterpretedExpression","location","ImplicitReceiver","Chain","Conditional","PropertyRead","PropertyWrite","SafePropertyRead","KeyedRead","KeyedWrite","BindingPipe","LiteralPrimitive","LiteralArray","LiteralMap","Interpolation","strings","Binary","operation","PrefixNot","NonNullAssert","MethodCall","SafeMethodCall","FunctionCall","TemplateBinding","keyIsVar","NullAstVisitor","RecursiveAstVisitor","AstTransformer","$BANG","$HASH","$PERCENT","$AMPERSAND","$LPAREN","$RPAREN","$STAR","$COMMA","$PERIOD","$COLON","$LT","$QUESTION","$X","$LBRACKET","$BACKSLASH","$RBRACKET","$CARET","$u","$x","$BAR","$RBRACE","InterpolationConfig","fromArray","markers","KEYWORDS","tokens","scanToken","decorators","ctorParameters","numValue","strValue","isCharacter","isNumber","isString","isOperator","operater","isKeyword","isKeywordLet","isKeywordAs","isKeywordNull","isKeywordUndefined","isKeywordTrue","isKeywordFalse","isKeywordThis","isError","toNumber","EOF","scanIdentifier","scanNumber","scanCharacter","scanString","scanOperator","scanComplexOperator","one","twoCode","two","threeCode","three","simple","parseFloat","quote","buffer","marker","unescapedCode","last","SplitInterpolation","offsets","TemplateBindingParseResult","templateBindings","_lexer","parseAction","_checkNoInterpolation","sourceToLex","_stripComments","_ParseAST","parseChain","parseBinding","_parseBindingAst","parseSimpleBinding","SimpleExpressionChecker","check","_reportError","_parseQuote","prefixSeparatorIndex","parseTemplateBindings","prefixToken","prefixTokens","parseInterpolation","splitInterpolation","expressionText","_findInterpolationErrorColumn","wrapLiteralPrimitive","_commentStart","outerQuote","nextChar","partInErrIdx","inputLength","rparensExpected","rbracketsExpected","rbracesExpected","next","inputIndex","optionalCharacter","peekKeywordLet","peekKeywordAs","expectCharacter","optionalOperator","op","expectOperator","operator","expectIdentifierOrKeyword","expectIdentifierOrKeywordOrString","parsePipe","parseExpression","parseConditional","parseLogicalOr","yes","no","parseLogicalAnd","parseEquality","parseRelational","parseAdditive","parseMultiplicative","parsePrefix","parseCallChain","parsePrimary","parseAccessMemberOrMethodCall","parseCallArguments","elements","parseExpressionList","parseLiteralMap","literalValue","terminator","isSafe","positionals","expectTemplateBindingKey","operatorFound","bindings","rawKey","letStart","start_2","letName","locationText","skip","file","moveBy","ch","priorLine","getContext","maxChars","maxLines","startOffset","endOffset","ctxChars","ctxLines","before","after","details","ParseErrorLevel","WARNING","ERROR","ParseError","level","contextStr","parentOf","childOf","first","Expansion","visitExpansion","ExpansionCase","expSourceSpan","visitExpansionCase","valueSpan","visitAttribute","startSourceSpan","visitComment","TAG_OPEN_START","TAG_OPEN_END","TAG_OPEN_END_VOID","TAG_CLOSE","COMMENT_START","COMMENT_END","CDATA_START","CDATA_END","ATTR_NAME","ATTR_VALUE","DOC_TYPE","EXPANSION_FORM_START","EXPANSION_CASE_VALUE","EXPANSION_CASE_EXP_START","EXPANSION_CASE_EXP_END","EXPANSION_FORM_END","Token$1","TokenError","errorMsg","tokenType","TokenizeResult","_CR_OR_CRLF_REGEXP","_ControlFlowError","_file","_getTagDefinition","_tokenizeIcu","_interpolationConfig","_peek","_nextPeek","_index","_line","_column","_expansionCaseStack","_inInterpolation","_input","_length","_advance","_processCarriageReturns","_getLocation","_attemptCharCode","_consumeCdata","_consumeComment","_consumeDocType","_consumeTagClose","_consumeTagOpen","_tokenizeExpansionForm","_consumeText","_beginToken","_endToken","_consumeExpansionFormStart","_isInExpansionForm","_consumeExpansionCaseStart","_isInExpansionCase","_consumeExpansionCaseEnd","_consumeExpansionFormEnd","_getSpan","_currentTokenStart","_currentTokenType","_createError","_attemptCharCodeCaseInsensitive","_requireCharCode","_attemptStr","chars","initialPosition","_savePosition","_restorePosition","_attemptStrCaseInsensitive","_requireStr","_attemptCharCodeUntilFn","predicate","_requireCharCodeUntilFn","_attemptUntilChar","_readChar","decodeEntities","_decodeEntity","startPosition","isHex","numberStart","strNum","entity","_consumeRawText","firstCharOfEnd","attemptEndRest","tagCloseStart","textStart","textToken","_consumePrefixAndName","nameOrPrefixStart","nameStart","lowercaseTagName","savedPos","_consumeTagOpenStart","_consumeAttributeName","_consumeAttributeValue","_consumeTagOpenEnd","contentTokenType","_consumeRawTextWithTagClose","prefixAndName","quoteChar","valueStart","_readUntil","_isTextEnd","nbTokens","TreeError","ParseTreeResult","rootNodes","Parser$1","parseExpansionForms","tokensAndErrors","treeAndErrors","_TreeBuilder","build","_rootNodes","_errors","_elementStack","_consumeStartTag","_consumeEndTag","_closeVoidElement","_consumeExpansion","prev","_advanceIf","startToken","_addToParent","expCase","_parseExpansionCase","_collectExpansionExpTokens","parsedExp","expansionFormStack","_getParentElement","startTagToken","_consumeAttr","_getElementFullName","selfClosing","tagDef","_pushElement","_popElement","parentEl","_getParentElementSkippingContainers","container","newParent","_insertBeforeContainer","endTagToken","errMsg","stackIndex","splice","valueToken","parentElement","Message","placeholders","placeholderToMessage","sources","startLine","startCol","endLine","endCol","Text$1","Container","visitContainer","Icu","visitIcu","TagPlaceholder","startName","closeName","visitTagPlaceholder","Placeholder","visitPlaceholder","IcuPlaceholder","visitIcuPlaceholder","CloneVisitor","icu","expressionPlaceholder","ph","RecurseVisitor","TAG_TO_PLACEHOLDER_NAMES","A","B","BR","EM","H1","H2","H3","H4","H5","H6","HR","I","LI","LINK","OL","P","Q","S","SMALL","SUB","SUP","TBODY","TD","TFOOT","TH","THEAD","TR","TT","U","UL","PlaceholderRegistry","_placeHolderNameCounts","_signatureToName","getStartTagPlaceholderName","signature","_hashTag","upperTag","_generateUniqueName","getCloseTagPlaceholderName","_hashClosingTag","getPlaceholderName","upperName","uniqueName","getUniquePlaceholder","strAttrs","seen","_expressionParser","_isIcu","_icuDepth","_placeholderRegistry","_placeholderToContent","_placeholderToMessage","i18nodes","startPhName","closePhName","attribute","_visitTextWithInterpolation","comment","i18nIcuCases","i18nIcu","caze","expPh","phName","icuCase","sDelimiter","eDelimiter","lastStringIdx","I18nError","_I18N_ATTR_PREFIX","_I18N_COMMENT_PREFIX_REGEXP","ExtractionResult","_VisitorMode","Extract","Merge","_implicitTags","_implicitAttrs","_init","_inI18nBlock","_messages","_translations","wrapper","translatedNode","_mode","_mayBeAddBlockChildren","wasInIcu","_inIcu","_isInTranslatableSection","_addMessage","isOpening","isClosing","_inI18nNode","_depth","_blockStartDepth","_closeTranslatableSection","_blockChildren","_blockMeaningAndDesc","_translateMessage","_openTranslatableSection","wasInI18nNode","wasInImplicitNode","_inImplicitNode","childNodes","translatedChildNodes","i18nAttr","i18nMeta","isImplicit","some","isTopLevelImplicit","isTranslatable","visitNodes","visited","_visitAttributesOf","translatedAttrs","_translateAttributes","_msgCountAtSectionStart","_createI18nMessage","explicitAttrNameToValue","implicitAttrNames","msgMeta","i18nParsedMessageMeta","translatedAttributes","directChildren","startIndex","significantChildren","XmlTagDefinition","XmlParser","_SerializerVisitor","strCases","Serializer","write","load","createNameMapper","SimplePlaceholderMapper","mapName","internalToPublic","publicToNextId","publicToInternal","toInternalName","publicName","visitPlaceholderName","nextId","_Visitor$1","visitTag","_serializeAttributes","strChildren","visitDeclaration","decl","visitDoctype","doctype","rootTag","dtd","Declaration","unescapedAttrs","Doctype","Tag","Text$2","unescapedValue","CR","ws","_VERSION","_XMLNS","_DEFAULT_SOURCE_LANG","_PLACEHOLDER_TAG","_FILE_TAG","_SOURCE_TAG","_TARGET_TAG","_UNIT_TAG","_CONTEXT_GROUP_TAG","_CONTEXT_TAG","_WriteVisitor","transUnits","contextTags","contextGroupTag","purpose","context-type","transUnit","datatype","priority","source-language","original","xliff","version","xmlns","encoding","xliffParser","XliffParser","msgIdToHtml","i18nNodesByMsgId","XmlToI18n","msgId","convert","i18nNodes","ctype","startTagPh","closeTagPh","_locale","_unitMlString","_msgIdToHtml","xml","idAttr","_addError","innerTextStart","innerTextEnd","innerText","localeAttr","expansion","expansionCase","xmlIcu","nameAttr","caseMap","_VERSION$1","_XMLNS$1","_DEFAULT_SOURCE_LANG$1","_PLACEHOLDER_TAG$1","_PLACEHOLDER_SPANNING_TAG","_XLIFF_TAG","_SOURCE_TAG$1","_TARGET_TAG$1","_UNIT_TAG$1","_WriteVisitor$1","units","notes","category","srcLang","xliff2Parser","Xliff2Parser","XmlToI18n$1","tagPh","_nextPlaceholderId","disp","tagPc","equivStart","equivEnd","dispStart","dispEnd","versionAttr","startAttr","endAttr","startId","endId","_MESSAGES_TAG","_MESSAGE_TAG","_PLACEHOLDER_TAG$2","_EXEMPLE_TAG","_SOURCE_TAG$2","_DOCTYPE","exampleVisitor","ExampleVisitor","_Visitor$2","rootNode","sourceTags","addDefaultExamples","startEx","closeEx","exText","_TRANSLATIONS_TAG","_TRANSLATION_TAG","_PLACEHOLDER_TAG$3","xtbParser","XtbParser","XmlToI18n$2","xtb","_bundleDepth","langAttr","TranslationBundle","_i18nNodesByMsgId","mapperFactory","missingTranslationStrategy","MissingTranslationStrategy","Warning","_i18nToHtml","I18nToHtmlVisitor","serializer","digestFn","srcMsg","html","_digest","_mapperFactory","_missingTranslationStrategy","_console","_contextStack","_convertToText","_srcMsg","_mapper","mapper","warn","_htmlParser","translationsFormat","_translationBundle","parseResult","CORE","ANALYZE_FOR_ENTRY_COMPONENTS","ElementRef","ViewContainerRef","ChangeDetectorRef","QueryList","TemplateRef","ɵCodegenComponentFactoryResolver","ComponentFactory","ComponentRef","NgModuleFactory","NgModuleInjector","ɵNgModuleInjector","RegisterModuleFactoryFn","ɵregisterModuleFactory","Injector","LOCALE_ID","TRANSLATIONS_FORMAT","inlineInterpolate","ɵinlineInterpolate","interpolate","ɵinterpolate","EMPTY_ARRAY","ɵEMPTY_ARRAY","EMPTY_MAP","ɵEMPTY_MAP","Renderer","viewDef","ɵvid","elementDef","ɵeld","anchorDef","ɵand","textDef","ɵted","directiveDef","ɵdid","ɵprd","queryDef","ɵqud","pureArrayDef","ɵpad","pureObjectDef","ɵpod","purePipeDef","ɵppd","pipeDef","ɵpid","nodeValue","ɵnov","ngContentDef","ɵncd","ɵunv","createRendererType2","ɵcrt","RendererType2","ViewDefinition","createComponentFactory","ɵccf","expanded","ProviderViewContext","ProviderElementContext","viewContext","_parent","_isViewRoot","_directiveAsts","refs","_sourceSpan","_transformedProviders","_seenProviders","_hasViewContainer","_queriedTokens","_attrs","directivesMeta","directiveAst","_allProviders","_contentQueries","_addQueryReadsTo","templateRefId","refAst","defaultQueryValue","_getOrCreateLocalProvider","afterElement","sortedProviderTypes","transformProviders","sortedDirectives","dir1","dir2","allMatches","defaultValue","queryReadTokens","_getQueriesFor","queryValue","read","tokenRef","currentEl","distance","descendants","requestingProviderType","transformedProviderAst","transformedProviders","transformedUseValue","transformedUseExisting","transformedDeps","existingDiDep","_getDependency","_getLocalDependency","currElement","currEager","isSelf","prevElement","NgModuleProviderAnalyzer","extraProviders","ngModuleProvider","errorString","requestorSourceSpan","foundLocal","ElementSchemaRegistry","hasProperty","schemaMetas","hasElement","getMappedPropName","getDefaultComponentElementName","validateProperty","validateAttribute","normalizeAnimationStyleProperty","normalizeAnimationStyleValue","camelCaseProp","userProvidedProp","style$$1","PROPERTY_PARTS_SEPARATOR","ATTRIBUTE_PREFIX","CLASS_PREFIX","STYLE_PREFIX","ANIMATE_PROP_PREFIX","BoundPropertyType","DEFAULT","LITERAL_ATTR","ANIMATION","BoundProperty","BindingParser","_exprParser","_schemaRegistry","_targetErrors","pipesByName","_usedPipes","getUsedPipes","createDirectiveHostPropertyAsts","dirMeta","elementSelector","boundProps_1","parsePropertyBinding","createElementPropertyAst","createDirectiveHostEventAsts","targetEventAsts_1","parseEvent","sourceInfo","_reportExpressionParserErrors","_checkPipes","parseInlineTemplateBinding","targetMatchableAttrs","targetProps","targetVars","_parseTemplateBindings","binding","_parsePropertyAst","parseLiteralAttr","bindingsResult","warning","_parseAnimation","isAnimationProp","_parseBinding","parsePropertyInterpolation","isHostBinding","boundProp","boundPropertyName","securityContexts","_validatePropertyOrAttributeName","nsSeparatorIdx","ns","targetEvents","_parseAnimationEvent","_parseEvent","eventName","_parseAction","errors_1","collector","PipeCollector","pipeName","pipeMeta","isAttr","report","BIND_NAME_REGEXP","KW_BIND_IDX","KW_LET_IDX","KW_REF_IDX","KW_ON_IDX","KW_BINDON_IDX","KW_AT_IDX","IDENT_KW_IDX","IDENT_BANANA_BOX_IDX","IDENT_PROPERTY_IDX","IDENT_EVENT_IDX","TEMPLATE_ATTR","TEMPLATE_ATTR_PREFIX","TEXT_CSS_SELECTOR","TEMPLATE_ATTR_DEPRECATION_WARNING","TEMPLATE_TRANSFORMS","InjectionToken","TemplateParseError","TemplateParseResult","templateAst","usedPipes","_config","transforms","tryParse","tryParseHtml","expandHtml","getInterpolationConfig","htmlAstWithErrors","uniqDirectives","uniqPipes","providerViewContext","bindingParser","parseVisitor","TemplateParseVisitor","EMPTY_ELEMENT_CONTEXT","_assertNoReferenceDuplicationOnTemplate","forced","expandedHtmlAst","existingReferences","Optional","Inject","_bindingParser","_schemas","selectorMatcher","directivesIndex","ngContentCount","findNgContentIndex","queryStartIndex","preparsedElement","matchableAttrs","elementOrDirectiveProps","elementOrDirectiveRefs","elementVars","events","templateElementOrDirectiveProps","templateMatchableAttrs","templateElementVars","hasInlineTemplates","isTemplateElement","templateBindingsSource","hasBinding","_parseAttr","normalizedName","_normalizeAttributeName","hasTemplateBinding","elementCssSelector","_parseDirectives","directiveMetas","matchElement","boundDirectivePropNames","directiveAsts","_createDirectiveAsts","elementProps","_createElementPropertyAsts","isViewRoot","providerContext","NON_BINDABLE_VISITOR","ElementContext","parsedElement","projectionSelector","every","_assertAllEventsPublishedByDirectives","_assertNoComponentsNorElementBindingsOnTemplate","transformedDirectiveAsts","transformedHasViewContainer","_assertElementExists","_assertOnlyOneComponent","ngContentIndex_1","templateQueryStartIndex","templateSelector","templateDirectiveMetas","templateBoundDirectivePropNames","templateDirectiveAsts","templateElementProps","templateProviderContext","targetRefs","srcSpan","bindParts","_parseVariable","_parseReference","_parseAssignmentEvent","ElementOrDirectiveRef","size","props","elementSourceSpan","targetReferences","targetBoundDirectivePropNames","matchedReferences","directiveProperties","_checkPropertiesInSchema","_createDirectivePropertyAsts","elOrDirRef","refToken","boundProps","targetBoundDirectiveProps","boundPropsByName_1","isLiteral","dirProp","elProp","boundElementProps","_findComponentDirectives","_findComponentDirectiveNames","componentTypeNames","elName","allDirectiveEvents","event","NonBindableVisitor","attrNameAndValues","_ngContentIndexMatcher","_wildcardNgContentIndex","wildcardNgContentIndex","ngContentIndices","ResourceLoader","DEFAULT_PACKAGE_URL_PROVIDER","provide","PACKAGE_ROOT_URL","_packagePrefix","resolvedUrl","resolvedParts","_resourceLoader","_urlResolver","_resourceLoaderCache","clearCache","clear","clearCacheFor","normalizedDirective","stylesheet","_fetch","normalizeTemplate","prenormData","normalizedTemplateSync","normalizedTemplateAsync","normalizeTemplateSync","normalizeTemplateAsync","then","normalizedTemplate","normalizeExternalStylesheets","prenomData","normalizeLoadedTemplate","templateAbsUrl","rootNodesAndErrors","templateMetadataStyles","normalizeStylesheet","TemplatePreparseVisitor","templateStyles","_loadMissingExternalStylesheets","loadedStylesheets","all","styleUrl","loadedStyle","allStyleUrls","allStyles","styleWithImports","ngNonBindableStackCount","textContent_1","__assign","assign","_reflector","typeMetadata","annotations","throwIfNotFound","propertyMetadata","propMetadata","_mergeWithPropertyMetadata","dm","directiveType","Input","bindingPropertyName","Output","hostBindings","HostBinding","hostBinding","hostPropertyName","startWith","HostListener","hostListener","Query","_merge","_extractPublicName","def","_dedupeBindings","names","reversedResult","mergedInputs","mergedOutputs","mergedHost","mergedQueries","ɵReflectorReader","isNgModule","metas","annotation","SummaryResolver","getLibraryFileName","addSummary","JitSummaryResolver","_summaries","ERROR_COLLECTOR_TOKEN","_ngModuleResolver","_directiveResolver","_pipeResolver","_summaryResolver","_directiveNormalizer","_staticSymbolCache","_errorCollector","_nonNormalizedDirectiveCache","_directiveCache","_summaryCache","_pipeCache","_ngModuleCache","_ngModuleOfTypes","_createProxyClass","baseType","delegate","proxyClass","setDelegate","overriddenName","getGeneratedClass","getComponentViewClass","getHostComponentViewClass","getHostComponentType","HostClass","getRendererType","getComponentFactory","hostView","initComponentFactory","_loadSummary","typeSummary","loadDirectiveMetadata","isSync","getNonNormalizedDirectiveMetadata","createDirectiveMetadata","templateMetadata","normalizedDirMeta","cacheEntry","nonNormalizedTemplateMetadata","changeDetectionStrategy","entryComponentMetadata","_getProvidersMetadata","_getEntryComponentMetadata","_getQueriesMetadata","_getTypeMetadata","getDirectiveMetadata","getDirectiveSummary","dirSummary","getNgModuleSummary","moduleType","moduleSummary","loadNgModuleDirectiveAndPipeMetadata","loading","promise","_loadPipeMetadata","compileMeta","exportedNonModuleIdentifiers","imports","importedType","importedModuleType","moduleWithProviders","_checkSelfImport","importedModuleSummary","_getTypeDescriptor","exportedType","exportedModuleSummary","_getIdentifierMetadata","_getTransitiveNgModuleMetadata","declarations","declaredType","declaredIdentifier","_addTypeToModule","exportedId","bootstrap","oldModule","modulesByToken","modSummary","mod","comp","addedTokens","prevModules","moduleRef","ann","getInjectableSummary","_getInjectableMetadata","throwOnUnknownDeps","_getDependenciesMetadata","ɵLIFECYCLE_HOOKS_VALUES","_getFactoryMetadata","getPipeMetadata","pipeType","getPipeSummary","pipeSummary","getOrLoadPipeMetadata","pipeAnnotation","typeOrFunc","hasUnknownDeps","parameters","dependenciesMetadata","paramEntry","Host","Self","SkipSelf","attributeName","_getTokenMetadata","depsTokens","compileToken","targetEntryComponents","debugInfo","compileProviders","providerIdx","_validateProvider","providersInfo","soFar","seenProvider","seenProviderIdx","_getEntryComponentsFromProvider","getProviderMetadata","components","collectedIdentifiers","compileDeps","compileTypeMetadata","compileFactoryMetadata","isViewQuery","propertyName","_getQueryMetadata","_queryVarBindings","q","varName","otherType","TypeModifier","Const","hasModifier","modifier","BuiltinTypeName","Dynamic","Bool","Int","Inferred","BuiltinType","visitBuiltintType","visitExpressionType","ArrayType","of","visitArrayType","MapType","valueType","visitMapType","BOOL_TYPE","BinaryOperator","Equals","NotEquals","Identical","NotIdentical","Minus","Plus","Divide","Multiply","Modulo","And","Or","Lower","LowerEquals","Bigger","BiggerEquals","ReadPropExpr","ReadKeyExpr","callMethod","InvokeMethodExpr","InvokeFunctionExpr","InstantiateExpr","conditional","trueCase","falseCase","ConditionalExpr","equals","rhs","BinaryOperatorExpr","notEquals","identical","plus","multiply","modulo","lower","lowerEquals","bigger","biggerEquals","isBlank","TYPED_NULL_EXPR","CastExpr","BuiltinVar","This","Super","CatchError","CatchStack","builtin","visitReadVarExpr","WriteVarExpr","visitWriteVarExpr","WriteKeyExpr","visitWriteKeyExpr","WritePropExpr","visitWritePropExpr","BuiltinMethod","ConcatArray","SubscribeObservable","Bind","visitInvokeMethodExpr","visitInvokeFunctionExpr","classExpr","visitInstantiateExpr","visitLiteralExpr","visitExternalExpr","visitConditionalExpr","visitNotExpr","visitAssertNotNullExpr","visitCastExpr","visitFunctionExpr","DeclareFunctionStmt","lhs","visitBinaryOperatorExpr","visitReadPropExpr","visitReadKeyExpr","entries","visitLiteralArrayExpr","visitLiteralMapExpr","CommaExpr","visitCommaExpr","THIS_EXPR","Private","visitDeclareVarStmt","visitDeclareFunctionStmt","visitExpressionStmt","visitReturnStmt","AbstractClassPart","ClassField","ClassGetter","visitDeclareClassStmt","IfStmt","visitIfStmt","TryCatchStmt","bodyStmts","catchStmts","visitTryCatchStmt","ThrowStmt","visitThrowStmt","AstTransformer$1","transformExpr","transformStmt","visitAllExpressions","mapType","ctorMethod","visitCommentStmt","RecursiveAstVisitor$1","_clone","clone","QUOTED_KEYS","quotedSet","ComponentFactoryDependency","NgModuleCompileResult","ngModuleFactoryVar","compile","bootstrapComponentFactories","_InjectorBuilder","providerParser","injectorClass","ngModuleFactoryStmt","registerFactoryStmt","_ngModuleMeta","_entryComponentFactories","_bootstrapComponentFactories","_lazyProps","_tokens","_instances","_createStmts","_destroyStmts","providerValueExpressions","_getProviderValue","instance","_createProviderProperty","callNgOnDestroy","getMethodStmts","InjectMethodVars","notFoundResult","InjectorProps","injClassName","isMulti","isEager","resolvedProviderValueExpr","internalFieldProp","getterStmts","VERSION$1","JS_B64_PREFIX","SourceMapGenerator","sourcesContent","lines","lastCol0","hasMappings","addSource","addLine","addMapping","col0","sourceLine0","sourceCol0","currentLine","toJSON","sourcesIndex","mappings","lastSourceIndex","lastSourceLine0","lastSourceCol0","segAsStr","sourceRoot","CATCH_ERROR_VAR$1","CATCH_STACK_VAR$1","_EmittedLine","indent","srcSpans","_exportedVars","_indent","_classes","_lines","isExportedVar","println","lastPart","print","lineIsEmpty","_currentLine","newLine","removeEmptyLastLine","incIndent","decIndent","pushClass","clazz","popClass","sourceLines","sourceFilePath","genFilePath","startsAtLine","firstOffsetMapped","mapFirstOffsetIfNeeded","lineIdx","spans","spanIdx","sourceLine","sourceCol","AbstractEmitterVisitor","_escapeDollarInStrings","hasElseCase","lineWasEmpty","getBuiltinMethodName","opStr","useNewLine","visitAllObjects","separator","_importResolver","emitStatements","srcFilePath","preamble","preambleLines","reexports","exportedFilePath","reexportsCode","reexport","as","importsWithPrefixes","importedFilePath","sm","_genFilePath","typeExpression","defaultType","_visitIdentifier","_resolveStaticSymbol","_printColonType","_visitClassField","_visitClassConstructor","_visitClassGetter","_visitClassMethod","_visitParams","typeStr","arity","importReference","suppliedParameters","additionalParameters","HTML","URL","RESOURCE_URL","BOOLEAN","NUMBER","STRING","OBJECT","SCHEMA","_ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","_schema","encodedType","strType","strProperties","properties","typeNames","superName","superType","property","schema","NO_ERRORS_SCHEMA","CUSTOM_ELEMENTS_SCHEMA","elementProperties","strVal","valAndSuffixMatch","ShadowCss","strictStyling","shimCssText","hostSelector","sourceMappingUrl","_insertDirectives","_scopeCssText","_insertPolyfillDirectivesInCssText","_insertPolyfillRulesInCssText","_cssContentNextSelectorRe","_cssContentRuleRe","scopeSelector","unscopedRules","_extractUnscopedRulesFromCssText","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertShadowDOMSelectors","_scopeSelectors","r","_cssContentUnscopedRuleRe","_convertColonRule","_cssColonHostRe","_colonHostPartReplacer","_cssColonHostContextRe","_colonHostContextPartReplacer","regExp","partReplacer","_polyfillHostNoCombinator","_polyfillHost","_shadowDOMSelectorsRe","_scopeSelector","strict","_shadowDeepSelectors","deepParts","shallowPart","otherParts","applyScope","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","re","_makeScopeMatcher","lre","rre","_selectorReSuffix","_applySimpleSelectorScope","_polyfillHostRe","replaceBy_1","_polyfillHostNoCombinatorRe","hnc","colon","isRe","_scopeSelectorPart","scopedP","safeContent","SafeSelector","scopedSelector","sep","scopeAfter","scopedPart","restore","_colonHostContextRe","_polyfillHostContext","_colonHostRe","keep","replaceBy","_content","pseudo","_parenSuffix","COMPONENT_VARIABLE","HOST_ATTR","CONTENT_ATTR","StylesCompileDependency","StylesCompileResult","componentStylesheet","CompiledStylesheet","stylesVar","_shadowCss","compileComponent","_compileStyles","stylesheetMeta","compiledStylesheet","isComponentStylesheet","styleExpressions","plainStyle","_shimIfNeeded","EventHandlerVars","allowDefault","_converterFactory","BuiltinFunctionCall","_localResolver","_implicitReceiver","_nodeMap","_resultMap","_currentTemporary","_visit","fnResult","convertedArgs","leftMostSafe","leftMostSafeNode","convertSafeAccess","_getLocal","getLocal","varExpr","guardedExpression","temporary","needsTemporary","allocateTemporary","access","releaseTemporary","visitSome","tempNumber","IMPLICIT_TEMPLATE_VAR","ViewCompileResult","viewClassVar","rendererTypeVar","_genConfigNext","embeddedViewCount","renderComponentVarName","template_1","customRenderData","renderComponentVar","viewBuilderFactory","embeddedViewIndex","ViewBuilder","viewName","LOG_VAR","COMP_VAR","EVENT_NAME_VAR","ALLOW_DEFAULT_VAR","purePipeNodeIndices","refNodeIndices","_createPipe","queryIds_1","queryIndex","nodeFlags","nodeDef","targetStatements","_createNodeExpressions","updateRendererStmts","updateDirectivesStmts","nodeDefExprs","updateRendererFn","_createUpdateFn","updateDirectivesFn","viewFlags","OnPush","viewFactory","updateStmts","updateFn","preStmts","astWithSource","inter","updateRendererExpressions","bindingIndex","_preprocessUpdateExpression","updateRenderer","_visitElementOrTemplate","queryMatchesExpr","childVisitor","childCount","_createElementHandleEventFn","usedEvents","dirHostBindings","inputDefs","outputDefs","compAst","compRendererType","compView","ɵelementEventFullName","componentFactoryResolverProvider","_visitProvider","dirIndex","localDirAst","_visitDirective","dirHostEvents","queryMatchExprs","outputAst","elementNodeIndex","_visitProviderOrDirective","mapValue","updateDirectiveExpressions","dirContextExpr","hostEventAst","updateDirectives","currViewExpr","currBuilder","refNodeIndex","varAst","varValue","valueExpr_1","valueExpr_2","nodeIndex_1","compViewExpr","compBuilder","pipeNodeIndex","pipeValueExpr_1","nodeValueExpr_1","createUpdateStatements","allowEmptyExprs","updateBindingCount","nameResolver","self","logWithNodeDef","handlers","handleEventStmts","handleEventBindingCount","trueStmts","eventTarget","fullEventName","handleEventFn","GeneratedFile","genFileUrl","indexBySymbol","processedSummaryBySymbol","processedSummaries","clone_1","processedSummary","processValue","summaries","importAs","__symbol","baseSymbol","isLibrary","ngModuleSymbols","fnName","serializeSummaryWithDeps","jitExportAsName","serializeSummaryRef","serializeSummary","typeSymbol","jitImportedSymbol","Transformer","serializedSymbol","_host","_metadataResolver","_templateParser","_styleCompiler","_viewCompiler","_ngModuleCompiler","_outputEmitter","_localeId","_translationFormat","_genFilePreamble","_symbolResolver","compileAll","rootFiles","sourceModules","_compileSrcFile","generatedFiles","_createSummary","_compileModule","stylesCompileResults","compiledStyleSheet","_codgenStyles","compViewVars","_compileComponent","_compileComponentFactory","compRenderTypeVar","srcModule","_codegenSourceModule","targetExportedVars","symbolSummaries","typeData","appCompileResult","hostType","hostMeta","hostViewFactoryVar","compFactoryVar","inputsExprs","outputsExprs","directiveIdentifiers","componentStyles","parsedTemplate","stylesExpr","viewResult","stylesCompileResult","staticDelegate","dynamicDelegate","updateCapabilities","isReflectionEnabled","lcProperty","setter","resolveEnum","enumIdentifier","ANGULAR_CORE","IGNORE","knownMetadataClasses","knownMetadataFunctions","errorRecorder","annotationCache","propertyCache","parameterCache","methodCache","conversionMap","annotationForParentClassWithSummaryKind","annotationNames","initializeConversionMap","kc","_registerDecoratorOrConstructor","kf","_registerFunction","findSymbolDeclaration","getResourcePath","importSymbol","rootSymbol","findDeclaration","recordImportAs","containingFile","getSymbolByModule","classMetadata","getTypeMetadata","parentType","findParentType","parentAnnotations","ownAnnotations_1","simplify","requiredAnnotationTypes","typeHasRequiredAnnotation","requiredType","reportError","parentPropMetadata_1","parentProp","members_1","propData","parameters_1","ctorData","parameterTypes","parameterDecorators_1","paramType","nestedResult","_methodNames","methodNames","parentMethodNames_1","members_2","isMethod","trySimplify","injectionToken","opaqueToken","ContentChild","ContentChildren","ViewChild","ViewChildren","trigger","state","transition","animate","keyframes","sequence","group","originalRecorder","simplifyInContext","depth","resolveReferenceValue","simplifyCall","functionSymbol","targetFunction","calling","value_1","defaults","functionScope","BindingScope","result_1","oldScope","scope","done","result_2","spreadArray","spreadArray_1","spreadItem","value_2","declarationValue","operand","indexTarget","member","selectContext","selectTarget","localValue","missing","argExpressions","recordedSimplifyInContext","PopulatedScope","ResolvedStaticSymbol","SUPPORTED_SCHEMA_VERSION","staticSymbolCache","metadataCache","resolvedSymbols","resolvedFilePaths","symbolResourcePaths","symbolFromFile","knownFileNameToModuleNames","_resolveSymbolMembers","_resolveSymbolFromSummary","_createSymbolsOf","baseImportAs","summarizedFileName","summarizedName","sourceSymbol","targetSymbol","invalidateFile","symbols_1","baseResolvedSymbol","baseMetadata","statics","getModuleMetadata","topLevelSymbolNames_1","origins_1","metadataKey","origin","originFilePath","resolveModule","createResolvedSymbol","_loop_1","moduleExport","export","exportSymbol","symName","resolvedModule","createExport","this_1","nestedExports","topLevelPath","topLevelSymbolNames","transformedMeta_1","ReferenceTransformer","functionParams","symbolic","oldLen","module_1","transformedMeta","moduleMetadata","moduleMetadatas","getMetadataFor","maxVersion_1","md","errorMessage","moduleNameToFileName","summaryCache","loadedFilePaths","getOutputFileName","_loadSummaryFile","summaryFilePath","loadSummary","ReturnValue","debugAst","currCtx","__proto__","CATCH_ERROR_VAR$2","CATCH_STACK_VAR$2","subscribe","fnExpr","AbstractJsEmitterVisitor","_evalArgNames","_evalArgValues","JitCompiler","_injector","_compilerConfig","_compiledTemplateCache","_compiledHostTemplateCache","_compiledDirectiveWrapperCache","_compiledNgModuleCache","_sharedStylesheetCount","compileModuleSync","_compileModuleAndComponents","compileModuleAsync","compileModuleAndAllComponentsSync","_compileModuleAndAllComponents","compileModuleAndAllComponentsAsync","getNgContentSelectors","loadAotSummaries","hasAotSummary","_filterJitIdentifiers","ids","loadingPromise","_loadModules","createResult","_compileComponents","componentFactories","ModuleWithComponentFactories","mainModule","loadingPromises","mainNgModule","nestedNgModule","ngModuleFactory","moduleMeta_1","Compiler","ModuleBoundCompiler","allComponentFactories","moduleByJitDirective","templates","transJitModules","localMod","localModuleMeta","dirRef","_createCompiledTemplate","_createCompiledHostTemplate","entryComponentType","_compileTemplate","compiledTemplate","hostClass","ɵgetComponentViewDefinitionFactory","CompiledTemplate","isCompiled","externalStylesheetsByModuleUrl","_resolveStylesCompileResult","viewClass","viewClassAndRendererTypeVars","compiled","nestedCompileResult","nestedStylesArr","_resolveAndEvalStylesCompileResult","_viewClass","_delegate","_ngModule","injector","MessageBundle","updateFromTemplate","htmlParserResult","i18nParserResult","getMessages","filterSources","mapperVisitor","MapPlaceholderNames","msgList","src","transformedMessage","Extractor","messageBundle","compMetas","extractor","_NO_RESOURCE_LOADER","baseHtmlParser","COMPILER_PROVIDERS","ɵReflector","parser","TRANSLATIONS","JitCompilerFactory","defaultOptions","compilerOptions","useDebug","_defaultOptions","createCompiler","opts","ReflectiveInjector","resolveAndCreate","COMPILER_OPTIONS","platformCoreDynamic","createPlatformFactory","platformCore","CompilerFactory","PLATFORM_INITIALIZER","ImportResolver"],"mappings":"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CT6uE,wBAmBE1tE,kBAaJJ,iBAAgBl1B,cAAcilB,gBAAgBqgF,MAC1C,gBACA,cACA,gBAEJpwE,gBAAgBl1B,cAAcilB,gBAAgBsB,OAAQ,YAEtD2O,gBAAgBl1B,cAAcilB,gBAAgBsgF,KAC1C,eAAgB,YAAa,YAAa,YAAa,SACvD,SAAU,kBAAmB,kBAAmB,WAAY,cAC5D,UAAW,aAAc,YAAa,WAAY,SAClD,aAAc,gBAAiB,YAAa,eAAgB,cAEhErwE,gBAAgBl1B,cAAcilB,gBAAgBugF,cAC1C,cACA,kBACA,YACA,YACA,YACA,eACA,gBACA,aACA,YACA,YACA,kBACA,cACA;;;;;;;AASJ,GAAIC,SAAU,UACVC,OAAS,SACTC,OAAS,SACTC,OAAS,SAuDTC,QACA,4NACA,69BACA,4oCACA,mMACA,ilBACA,uBACA,2CACA,uBACA,wCACA,uBACA,kCACA,yCACA,mLACA,iJACA,eACA,yBACA,iCACA,iQACA,yHACA,sCACA,+BACA,4BACA,0BACA,8BACA,yCACA,6BACA,0BACA,uDACA,wCACA,qCACA,uGACA,iGACA,sOACA,mDACA,sBACA,wCACA,6BACA,2JACA,oJACA,wbACA,mEACA,+BACA,8BACA,6BACA,yHACA,yBACA,4HACA,8BACA,mDACA,2DACA,sCACA,kDACA,uIACA,yCACA,6EACA,wDACA,wBACA,gDACA,yBACA,2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,qBACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,2BACA,sBACA,+CACA,+CACA,+CACA,+CACA,6BACA,sBACA,sBACA,0BACA,2BACA,uBACA,2BACA,iCACA,0BACA,qBACA,2BACA,qBACA,oCACA,wBACA,4BACA,2BACA,qCACA,oBACA,qBACA,mBACA,uBACA,2BACA,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","file":"/home/travis/build/angular/angular/dist/packages-dist/compiler/bundles/compiler.umd.min.js","sourcesContent":["/**\n * @license Angular v4.2.0-beta.1-b9521b5\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', '@angular/core'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.compiler = global.ng.compiler || {}),global.ng.core));\n}(this, (function (exports,_angular_core) { 'use strict';\n\nvar __extends = (undefined && undefined.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * @license Angular v4.2.0-beta.1-b9521b5\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new _angular_core.Version('4.2.0-beta.1-b9521b5');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A segment of text within the template.\n */\nvar TextAst = (function () {\n    /**\n     * @param {?} value\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    function TextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TextAst.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n    return TextAst;\n}());\n/**\n * A bound expression within the text of a template.\n */\nvar BoundTextAst = (function () {\n    /**\n     * @param {?} value\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    function BoundTextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundTextAst.prototype.visit = function (visitor, context) {\n        return visitor.visitBoundText(this, context);\n    };\n    return BoundTextAst;\n}());\n/**\n * A plain attribute on an element.\n */\nvar AttrAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function AttrAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AttrAst.prototype.visit = function (visitor, context) { return visitor.visitAttr(this, context); };\n    return AttrAst;\n}());\n/**\n * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n * `[\\@trigger]=\"stateExp\"`)\n */\nvar BoundElementPropertyAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} type\n     * @param {?} securityContext\n     * @param {?} value\n     * @param {?} unit\n     * @param {?} sourceSpan\n     */\n    function BoundElementPropertyAst(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundElementPropertyAst.prototype.visit = function (visitor, context) {\n        return visitor.visitElementProperty(this, context);\n    };\n    Object.defineProperty(BoundElementPropertyAst.prototype, \"isAnimation\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.type === PropertyBindingType.Animation; },\n        enumerable: true,\n        configurable: true\n    });\n    return BoundElementPropertyAst;\n}());\n/**\n * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n * `(\\@trigger.phase)=\"callback($event)\"`).\n */\nvar BoundEventAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @param {?} handler\n     * @param {?} sourceSpan\n     */\n    function BoundEventAst(name, target, phase, handler, sourceSpan) {\n        this.name = name;\n        this.target = target;\n        this.phase = phase;\n        this.handler = handler;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    BoundEventAst.calcFullName = function (name, target, phase) {\n        if (target) {\n            return target + \":\" + name;\n        }\n        else if (phase) {\n            return \"@\" + name + \".\" + phase;\n        }\n        else {\n            return name;\n        }\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundEventAst.prototype.visit = function (visitor, context) {\n        return visitor.visitEvent(this, context);\n    };\n    Object.defineProperty(BoundEventAst.prototype, \"fullName\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return BoundEventAst.calcFullName(this.name, this.target, this.phase); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BoundEventAst.prototype, \"isAnimation\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return !!this.phase; },\n        enumerable: true,\n        configurable: true\n    });\n    return BoundEventAst;\n}());\n/**\n * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n */\nvar ReferenceAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function ReferenceAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReferenceAst.prototype.visit = function (visitor, context) {\n        return visitor.visitReference(this, context);\n    };\n    return ReferenceAst;\n}());\n/**\n * A variable declaration on a <ng-template> (e.g. `var-someName=\"someLocalName\"`).\n */\nvar VariableAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function VariableAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    VariableAst.prototype.visit = function (visitor, context) {\n        return visitor.visitVariable(this, context);\n    };\n    return VariableAst;\n}());\n/**\n * An element declaration in a template.\n */\nvar ElementAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} attrs\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} references\n     * @param {?} directives\n     * @param {?} providers\n     * @param {?} hasViewContainer\n     * @param {?} queryMatches\n     * @param {?} children\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     * @param {?} endSourceSpan\n     */\n    function ElementAst(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan, endSourceSpan) {\n        this.name = name;\n        this.attrs = attrs;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.references = references;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ElementAst.prototype.visit = function (visitor, context) {\n        return visitor.visitElement(this, context);\n    };\n    return ElementAst;\n}());\n/**\n * A `<ng-template>` element included in an Angular template.\n */\nvar EmbeddedTemplateAst = (function () {\n    /**\n     * @param {?} attrs\n     * @param {?} outputs\n     * @param {?} references\n     * @param {?} variables\n     * @param {?} directives\n     * @param {?} providers\n     * @param {?} hasViewContainer\n     * @param {?} queryMatches\n     * @param {?} children\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    function EmbeddedTemplateAst(attrs, outputs, references, variables, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan) {\n        this.attrs = attrs;\n        this.outputs = outputs;\n        this.references = references;\n        this.variables = variables;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    EmbeddedTemplateAst.prototype.visit = function (visitor, context) {\n        return visitor.visitEmbeddedTemplate(this, context);\n    };\n    return EmbeddedTemplateAst;\n}());\n/**\n * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n */\nvar BoundDirectivePropertyAst = (function () {\n    /**\n     * @param {?} directiveName\n     * @param {?} templateName\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\n        this.directiveName = directiveName;\n        this.templateName = templateName;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundDirectivePropertyAst.prototype.visit = function (visitor, context) {\n        return visitor.visitDirectiveProperty(this, context);\n    };\n    return BoundDirectivePropertyAst;\n}());\n/**\n * A directive declared on an element.\n */\nvar DirectiveAst = (function () {\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} hostProperties\n     * @param {?} hostEvents\n     * @param {?} contentQueryStartId\n     * @param {?} sourceSpan\n     */\n    function DirectiveAst(directive, inputs, hostProperties, hostEvents, contentQueryStartId, sourceSpan) {\n        this.directive = directive;\n        this.inputs = inputs;\n        this.hostProperties = hostProperties;\n        this.hostEvents = hostEvents;\n        this.contentQueryStartId = contentQueryStartId;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DirectiveAst.prototype.visit = function (visitor, context) {\n        return visitor.visitDirective(this, context);\n    };\n    return DirectiveAst;\n}());\n/**\n * A provider declared on an element\n */\nvar ProviderAst = (function () {\n    /**\n     * @param {?} token\n     * @param {?} multiProvider\n     * @param {?} eager\n     * @param {?} providers\n     * @param {?} providerType\n     * @param {?} lifecycleHooks\n     * @param {?} sourceSpan\n     */\n    function ProviderAst(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan) {\n        this.token = token;\n        this.multiProvider = multiProvider;\n        this.eager = eager;\n        this.providers = providers;\n        this.providerType = providerType;\n        this.lifecycleHooks = lifecycleHooks;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ProviderAst.prototype.visit = function (visitor, context) {\n        // No visit method in the visitor for now...\n        return null;\n    };\n    return ProviderAst;\n}());\nvar ProviderAstType = {};\nProviderAstType.PublicService = 0;\nProviderAstType.PrivateService = 1;\nProviderAstType.Component = 2;\nProviderAstType.Directive = 3;\nProviderAstType.Builtin = 4;\nProviderAstType[ProviderAstType.PublicService] = \"PublicService\";\nProviderAstType[ProviderAstType.PrivateService] = \"PrivateService\";\nProviderAstType[ProviderAstType.Component] = \"Component\";\nProviderAstType[ProviderAstType.Directive] = \"Directive\";\nProviderAstType[ProviderAstType.Builtin] = \"Builtin\";\n/**\n * Position where content is to be projected (instance of `<ng-content>` in a template).\n */\nvar NgContentAst = (function () {\n    /**\n     * @param {?} index\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    function NgContentAst(index, ngContentIndex, sourceSpan) {\n        this.index = index;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NgContentAst.prototype.visit = function (visitor, context) {\n        return visitor.visitNgContent(this, context);\n    };\n    return NgContentAst;\n}());\nvar PropertyBindingType = {};\nPropertyBindingType.Property = 0;\nPropertyBindingType.Attribute = 1;\nPropertyBindingType.Class = 2;\nPropertyBindingType.Style = 3;\nPropertyBindingType.Animation = 4;\nPropertyBindingType[PropertyBindingType.Property] = \"Property\";\nPropertyBindingType[PropertyBindingType.Attribute] = \"Attribute\";\nPropertyBindingType[PropertyBindingType.Class] = \"Class\";\nPropertyBindingType[PropertyBindingType.Style] = \"Style\";\nPropertyBindingType[PropertyBindingType.Animation] = \"Animation\";\n/**\n * A visitor that accepts each node but doesn't do anything. It is intended to be used\n * as the base class for a visitor that is only interested in a subset of the node types.\n */\nvar NullTemplateVisitor = (function () {\n    function NullTemplateVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitNgContent = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEmbeddedTemplate = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElement = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitReference = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitVariable = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEvent = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElementProperty = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitAttr = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitBoundText = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitText = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirective = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirectiveProperty = function (ast, context) { };\n    return NullTemplateVisitor;\n}());\n/**\n * Base class that can be used to build a visitor that visits each node\n * in an template ast recursively.\n */\nvar RecursiveTemplateAstVisitor = (function (_super) {\n    __extends(RecursiveTemplateAstVisitor, _super);\n    function RecursiveTemplateAstVisitor() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitEmbeddedTemplate = function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.references);\n            visit(ast.variables);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitElement = function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.inputs);\n            visit(ast.outputs);\n            visit(ast.references);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitDirective = function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.inputs);\n            visit(ast.hostProperties);\n            visit(ast.hostEvents);\n        });\n    };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitChildren = function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children && children.length)\n                results.push(templateVisitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveTemplateAstVisitor;\n}(NullTemplateVisitor));\n/**\n * Visit every node in a list of {\\@link TemplateAst}s with the given {\\@link TemplateAstVisitor}.\n * @param {?} visitor\n * @param {?} asts\n * @param {?=} context\n * @return {?}\n */\nfunction templateVisitAll(visitor, asts, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    asts.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\n/**\n * A token representing the a reference to a static type.\n *\n * This token is unique for a filePath and name and can be used as a hash table key.\n */\nvar StaticSymbol = (function () {\n    /**\n     * @param {?} filePath\n     * @param {?} name\n     * @param {?} members\n     */\n    function StaticSymbol(filePath, name, members) {\n        this.filePath = filePath;\n        this.name = name;\n        this.members = members;\n    }\n    /**\n     * @return {?}\n     */\n    StaticSymbol.prototype.assertNoMembers = function () {\n        if (this.members.length) {\n            throw new Error(\"Illegal state: symbol without members expected, but got \" + JSON.stringify(this) + \".\");\n        }\n    };\n    return StaticSymbol;\n}());\n/**\n * A cache of static symbol used by the StaticReflector to return the same symbol for the\n * same symbol values.\n */\nvar StaticSymbolCache = (function () {\n    function StaticSymbolCache() {\n        this.cache = new Map();\n    }\n    /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticSymbolCache.prototype.get = function (declarationFile, name, members) {\n        members = members || [];\n        var /** @type {?} */ memberSuffix = members.length ? \".\" + members.join('.') : '';\n        var /** @type {?} */ key = \"\\\"\" + declarationFile + \"\\\".\" + name + memberSuffix;\n        var /** @type {?} */ result = this.cache.get(key);\n        if (!result) {\n            result = new StaticSymbol(declarationFile, name, members);\n            this.cache.set(key, result);\n        }\n        return result;\n    };\n    return StaticSymbolCache;\n}());\nvar TagContentType = {};\nTagContentType.RAW_TEXT = 0;\nTagContentType.ESCAPABLE_RAW_TEXT = 1;\nTagContentType.PARSABLE_DATA = 2;\nTagContentType[TagContentType.RAW_TEXT] = \"RAW_TEXT\";\nTagContentType[TagContentType.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTagContentType[TagContentType.PARSABLE_DATA] = \"PARSABLE_DATA\";\n/**\n * @param {?} elementName\n * @return {?}\n */\nfunction splitNsName(elementName) {\n    if (elementName[0] != ':') {\n        return [null, elementName];\n    }\n    var /** @type {?} */ colonIndex = elementName.indexOf(':', 1);\n    if (colonIndex == -1) {\n        throw new Error(\"Unsupported format \\\"\" + elementName + \"\\\" expecting \\\":namespace:name\\\"\");\n    }\n    return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContainer(tagName) {\n    return splitNsName(tagName)[1] === 'ng-container';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContent(tagName) {\n    return splitNsName(tagName)[1] === 'ng-content';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgTemplate(tagName) {\n    return splitNsName(tagName)[1] === 'ng-template';\n}\n/**\n * @param {?} fullName\n * @return {?}\n */\nfunction getNsPrefix(fullName) {\n    return fullName === null ? null : splitNsName(fullName)[0];\n}\n/**\n * @param {?} prefix\n * @param {?} localName\n * @return {?}\n */\nfunction mergeNsAndName(prefix, localName) {\n    return prefix ? \":\" + prefix + \":\" + localName : localName;\n}\n// see http://www.w3.org/TR/html51/syntax.html#named-character-references\n// see https://html.spec.whatwg.org/multipage/entities.json\n// This list is not exhaustive to keep the compiler footprint low.\n// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not\n// exist.\nvar NAMED_ENTITIES = {\n    'Aacute': '\\u00C1',\n    'aacute': '\\u00E1',\n    'Acirc': '\\u00C2',\n    'acirc': '\\u00E2',\n    'acute': '\\u00B4',\n    'AElig': '\\u00C6',\n    'aelig': '\\u00E6',\n    'Agrave': '\\u00C0',\n    'agrave': '\\u00E0',\n    'alefsym': '\\u2135',\n    'Alpha': '\\u0391',\n    'alpha': '\\u03B1',\n    'amp': '&',\n    'and': '\\u2227',\n    'ang': '\\u2220',\n    'apos': '\\u0027',\n    'Aring': '\\u00C5',\n    'aring': '\\u00E5',\n    'asymp': '\\u2248',\n    'Atilde': '\\u00C3',\n    'atilde': '\\u00E3',\n    'Auml': '\\u00C4',\n    'auml': '\\u00E4',\n    'bdquo': '\\u201E',\n    'Beta': '\\u0392',\n    'beta': '\\u03B2',\n    'brvbar': '\\u00A6',\n    'bull': '\\u2022',\n    'cap': '\\u2229',\n    'Ccedil': '\\u00C7',\n    'ccedil': '\\u00E7',\n    'cedil': '\\u00B8',\n    'cent': '\\u00A2',\n    'Chi': '\\u03A7',\n    'chi': '\\u03C7',\n    'circ': '\\u02C6',\n    'clubs': '\\u2663',\n    'cong': '\\u2245',\n    'copy': '\\u00A9',\n    'crarr': '\\u21B5',\n    'cup': '\\u222A',\n    'curren': '\\u00A4',\n    'dagger': '\\u2020',\n    'Dagger': '\\u2021',\n    'darr': '\\u2193',\n    'dArr': '\\u21D3',\n    'deg': '\\u00B0',\n    'Delta': '\\u0394',\n    'delta': '\\u03B4',\n    'diams': '\\u2666',\n    'divide': '\\u00F7',\n    'Eacute': '\\u00C9',\n    'eacute': '\\u00E9',\n    'Ecirc': '\\u00CA',\n    'ecirc': '\\u00EA',\n    'Egrave': '\\u00C8',\n    'egrave': '\\u00E8',\n    'empty': '\\u2205',\n    'emsp': '\\u2003',\n    'ensp': '\\u2002',\n    'Epsilon': '\\u0395',\n    'epsilon': '\\u03B5',\n    'equiv': '\\u2261',\n    'Eta': '\\u0397',\n    'eta': '\\u03B7',\n    'ETH': '\\u00D0',\n    'eth': '\\u00F0',\n    'Euml': '\\u00CB',\n    'euml': '\\u00EB',\n    'euro': '\\u20AC',\n    'exist': '\\u2203',\n    'fnof': '\\u0192',\n    'forall': '\\u2200',\n    'frac12': '\\u00BD',\n    'frac14': '\\u00BC',\n    'frac34': '\\u00BE',\n    'frasl': '\\u2044',\n    'Gamma': '\\u0393',\n    'gamma': '\\u03B3',\n    'ge': '\\u2265',\n    'gt': '>',\n    'harr': '\\u2194',\n    'hArr': '\\u21D4',\n    'hearts': '\\u2665',\n    'hellip': '\\u2026',\n    'Iacute': '\\u00CD',\n    'iacute': '\\u00ED',\n    'Icirc': '\\u00CE',\n    'icirc': '\\u00EE',\n    'iexcl': '\\u00A1',\n    'Igrave': '\\u00CC',\n    'igrave': '\\u00EC',\n    'image': '\\u2111',\n    'infin': '\\u221E',\n    'int': '\\u222B',\n    'Iota': '\\u0399',\n    'iota': '\\u03B9',\n    'iquest': '\\u00BF',\n    'isin': '\\u2208',\n    'Iuml': '\\u00CF',\n    'iuml': '\\u00EF',\n    'Kappa': '\\u039A',\n    'kappa': '\\u03BA',\n    'Lambda': '\\u039B',\n    'lambda': '\\u03BB',\n    'lang': '\\u27E8',\n    'laquo': '\\u00AB',\n    'larr': '\\u2190',\n    'lArr': '\\u21D0',\n    'lceil': '\\u2308',\n    'ldquo': '\\u201C',\n    'le': '\\u2264',\n    'lfloor': '\\u230A',\n    'lowast': '\\u2217',\n    'loz': '\\u25CA',\n    'lrm': '\\u200E',\n    'lsaquo': '\\u2039',\n    'lsquo': '\\u2018',\n    'lt': '<',\n    'macr': '\\u00AF',\n    'mdash': '\\u2014',\n    'micro': '\\u00B5',\n    'middot': '\\u00B7',\n    'minus': '\\u2212',\n    'Mu': '\\u039C',\n    'mu': '\\u03BC',\n    'nabla': '\\u2207',\n    'nbsp': '\\u00A0',\n    'ndash': '\\u2013',\n    'ne': '\\u2260',\n    'ni': '\\u220B',\n    'not': '\\u00AC',\n    'notin': '\\u2209',\n    'nsub': '\\u2284',\n    'Ntilde': '\\u00D1',\n    'ntilde': '\\u00F1',\n    'Nu': '\\u039D',\n    'nu': '\\u03BD',\n    'Oacute': '\\u00D3',\n    'oacute': '\\u00F3',\n    'Ocirc': '\\u00D4',\n    'ocirc': '\\u00F4',\n    'OElig': '\\u0152',\n    'oelig': '\\u0153',\n    'Ograve': '\\u00D2',\n    'ograve': '\\u00F2',\n    'oline': '\\u203E',\n    'Omega': '\\u03A9',\n    'omega': '\\u03C9',\n    'Omicron': '\\u039F',\n    'omicron': '\\u03BF',\n    'oplus': '\\u2295',\n    'or': '\\u2228',\n    'ordf': '\\u00AA',\n    'ordm': '\\u00BA',\n    'Oslash': '\\u00D8',\n    'oslash': '\\u00F8',\n    'Otilde': '\\u00D5',\n    'otilde': '\\u00F5',\n    'otimes': '\\u2297',\n    'Ouml': '\\u00D6',\n    'ouml': '\\u00F6',\n    'para': '\\u00B6',\n    'permil': '\\u2030',\n    'perp': '\\u22A5',\n    'Phi': '\\u03A6',\n    'phi': '\\u03C6',\n    'Pi': '\\u03A0',\n    'pi': '\\u03C0',\n    'piv': '\\u03D6',\n    'plusmn': '\\u00B1',\n    'pound': '\\u00A3',\n    'prime': '\\u2032',\n    'Prime': '\\u2033',\n    'prod': '\\u220F',\n    'prop': '\\u221D',\n    'Psi': '\\u03A8',\n    'psi': '\\u03C8',\n    'quot': '\\u0022',\n    'radic': '\\u221A',\n    'rang': '\\u27E9',\n    'raquo': '\\u00BB',\n    'rarr': '\\u2192',\n    'rArr': '\\u21D2',\n    'rceil': '\\u2309',\n    'rdquo': '\\u201D',\n    'real': '\\u211C',\n    'reg': '\\u00AE',\n    'rfloor': '\\u230B',\n    'Rho': '\\u03A1',\n    'rho': '\\u03C1',\n    'rlm': '\\u200F',\n    'rsaquo': '\\u203A',\n    'rsquo': '\\u2019',\n    'sbquo': '\\u201A',\n    'Scaron': '\\u0160',\n    'scaron': '\\u0161',\n    'sdot': '\\u22C5',\n    'sect': '\\u00A7',\n    'shy': '\\u00AD',\n    'Sigma': '\\u03A3',\n    'sigma': '\\u03C3',\n    'sigmaf': '\\u03C2',\n    'sim': '\\u223C',\n    'spades': '\\u2660',\n    'sub': '\\u2282',\n    'sube': '\\u2286',\n    'sum': '\\u2211',\n    'sup': '\\u2283',\n    'sup1': '\\u00B9',\n    'sup2': '\\u00B2',\n    'sup3': '\\u00B3',\n    'supe': '\\u2287',\n    'szlig': '\\u00DF',\n    'Tau': '\\u03A4',\n    'tau': '\\u03C4',\n    'there4': '\\u2234',\n    'Theta': '\\u0398',\n    'theta': '\\u03B8',\n    'thetasym': '\\u03D1',\n    'thinsp': '\\u2009',\n    'THORN': '\\u00DE',\n    'thorn': '\\u00FE',\n    'tilde': '\\u02DC',\n    'times': '\\u00D7',\n    'trade': '\\u2122',\n    'Uacute': '\\u00DA',\n    'uacute': '\\u00FA',\n    'uarr': '\\u2191',\n    'uArr': '\\u21D1',\n    'Ucirc': '\\u00DB',\n    'ucirc': '\\u00FB',\n    'Ugrave': '\\u00D9',\n    'ugrave': '\\u00F9',\n    'uml': '\\u00A8',\n    'upsih': '\\u03D2',\n    'Upsilon': '\\u03A5',\n    'upsilon': '\\u03C5',\n    'Uuml': '\\u00DC',\n    'uuml': '\\u00FC',\n    'weierp': '\\u2118',\n    'Xi': '\\u039E',\n    'xi': '\\u03BE',\n    'Yacute': '\\u00DD',\n    'yacute': '\\u00FD',\n    'yen': '\\u00A5',\n    'yuml': '\\u00FF',\n    'Yuml': '\\u0178',\n    'Zeta': '\\u0396',\n    'zeta': '\\u03B6',\n    'zwj': '\\u200D',\n    'zwnj': '\\u200C',\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlTagDefinition = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function HtmlTagDefinition(_a) {\n        var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, _c = _b.contentType, contentType = _c === void 0 ? TagContentType.PARSABLE_DATA : _c, _d = _b.closedByParent, closedByParent = _d === void 0 ? false : _d, _e = _b.isVoid, isVoid = _e === void 0 ? false : _e, _f = _b.ignoreFirstLf, ignoreFirstLf = _f === void 0 ? false : _f;\n        var _this = this;\n        this.closedByChildren = {};\n        this.closedByParent = false;\n        this.canSelfClose = false;\n        if (closedByChildren && closedByChildren.length > 0) {\n            closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\n        }\n        this.isVoid = isVoid;\n        this.closedByParent = closedByParent || isVoid;\n        if (requiredParents && requiredParents.length > 0) {\n            this.requiredParents = {};\n            // The first parent is the list is automatically when none of the listed parents are present\n            this.parentToAdd = requiredParents[0];\n            requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\n        }\n        this.implicitNamespacePrefix = implicitNamespacePrefix || null;\n        this.contentType = contentType;\n        this.ignoreFirstLf = ignoreFirstLf;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.requireExtraParent = function (currentParent) {\n        if (!this.requiredParents) {\n            return false;\n        }\n        if (!currentParent) {\n            return true;\n        }\n        var /** @type {?} */ lcParent = currentParent.toLowerCase();\n        var /** @type {?} */ isParentTemplate = lcParent === 'template' || currentParent === 'ng-template';\n        return !isParentTemplate && this.requiredParents[lcParent] != true;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.isClosedByChild = function (name) {\n        return this.isVoid || name.toLowerCase() in this.closedByChildren;\n    };\n    return HtmlTagDefinition;\n}());\n// see http://www.w3.org/TR/html51/syntax.html#optional-tags\n// This implementation does not fully conform to the HTML5 spec.\nvar TAG_DEFINITIONS = {\n    'base': new HtmlTagDefinition({ isVoid: true }),\n    'meta': new HtmlTagDefinition({ isVoid: true }),\n    'area': new HtmlTagDefinition({ isVoid: true }),\n    'embed': new HtmlTagDefinition({ isVoid: true }),\n    'link': new HtmlTagDefinition({ isVoid: true }),\n    'img': new HtmlTagDefinition({ isVoid: true }),\n    'input': new HtmlTagDefinition({ isVoid: true }),\n    'param': new HtmlTagDefinition({ isVoid: true }),\n    'hr': new HtmlTagDefinition({ isVoid: true }),\n    'br': new HtmlTagDefinition({ isVoid: true }),\n    'source': new HtmlTagDefinition({ isVoid: true }),\n    'track': new HtmlTagDefinition({ isVoid: true }),\n    'wbr': new HtmlTagDefinition({ isVoid: true }),\n    'p': new HtmlTagDefinition({\n        closedByChildren: [\n            'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset', 'footer', 'form',\n            'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr',\n            'main', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'\n        ],\n        closedByParent: true\n    }),\n    'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n    'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n    'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n    'tr': new HtmlTagDefinition({\n        closedByChildren: ['tr'],\n        requiredParents: ['tbody', 'tfoot', 'thead'],\n        closedByParent: true\n    }),\n    'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n    'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n    'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n    'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n    'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n    'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n    'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n    'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n    'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n    'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'style': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'script': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'title': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT }),\n    'textarea': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n};\nvar _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getHtmlTagDefinition(tagName) {\n    return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' +\n    '([-\\\\w]+)|' +\n    '(?:\\\\.([-\\\\w]+))|' +\n    // \"-\" should appear first in the regexp below as FF31 parses \"[.-\\w]\" as a range\n    '(?:\\\\[([-.\\\\w*]+)(?:=([\\\"\\']?)([^\\\\]\\\"\\']*)\\\\5)?\\\\])|' +\n    // \"[name=\"value\"]\",\n    // \"[name='value']\"\n    '(\\\\))|' +\n    '(\\\\s*,\\\\s*)', // \",\"\n'g');\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nvar CssSelector = (function () {\n    function CssSelector() {\n        this.element = null;\n        this.classNames = [];\n        this.attrs = [];\n        this.notSelectors = [];\n    }\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CssSelector.parse = function (selector) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ _addResult = function (res, cssSel) {\n            if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n                cssSel.attrs.length == 0) {\n                cssSel.element = '*';\n            }\n            res.push(cssSel);\n        };\n        var /** @type {?} */ cssSelector = new CssSelector();\n        var /** @type {?} */ match;\n        var /** @type {?} */ current = cssSelector;\n        var /** @type {?} */ inNot = false;\n        _SELECTOR_REGEXP.lastIndex = 0;\n        while (match = _SELECTOR_REGEXP.exec(selector)) {\n            if (match[1]) {\n                if (inNot) {\n                    throw new Error('Nesting :not is not allowed in a selector');\n                }\n                inNot = true;\n                current = new CssSelector();\n                cssSelector.notSelectors.push(current);\n            }\n            if (match[2]) {\n                current.setElement(match[2]);\n            }\n            if (match[3]) {\n                current.addClassName(match[3]);\n            }\n            if (match[4]) {\n                current.addAttribute(match[4], match[6]);\n            }\n            if (match[7]) {\n                inNot = false;\n                current = cssSelector;\n            }\n            if (match[8]) {\n                if (inNot) {\n                    throw new Error('Multiple selectors in :not are not supported');\n                }\n                _addResult(results, cssSelector);\n                cssSelector = current = new CssSelector();\n            }\n        }\n        _addResult(results, cssSelector);\n        return results;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.isElementSelector = function () {\n        return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n            this.notSelectors.length === 0;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.hasElementSelector = function () { return !!this.element; };\n    /**\n     * @param {?=} element\n     * @return {?}\n     */\n    CssSelector.prototype.setElement = function (element) {\n        if (element === void 0) { element = null; }\n        this.element = element;\n    };\n    /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    CssSelector.prototype.getMatchingElementTemplate = function () {\n        var /** @type {?} */ tagName = this.element || 'div';\n        var /** @type {?} */ classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\n        var /** @type {?} */ attrs = '';\n        for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n            var /** @type {?} */ attrName = this.attrs[i];\n            var /** @type {?} */ attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\n            attrs += \" \" + attrName + attrValue;\n        }\n        return getHtmlTagDefinition(tagName).isVoid ? \"<\" + tagName + classAttr + attrs + \"/>\" :\n            \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\n    };\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    CssSelector.prototype.addAttribute = function (name, value) {\n        if (value === void 0) { value = ''; }\n        this.attrs.push(name, value && value.toLowerCase() || '');\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    CssSelector.prototype.addClassName = function (name) { this.classNames.push(name.toLowerCase()); };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.toString = function () {\n        var /** @type {?} */ res = this.element || '';\n        if (this.classNames) {\n            this.classNames.forEach(function (klass) { return res += \".\" + klass; });\n        }\n        if (this.attrs) {\n            for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n                var /** @type {?} */ name = this.attrs[i];\n                var /** @type {?} */ value = this.attrs[i + 1];\n                res += \"[\" + name + (value ? '=' + value : '') + \"]\";\n            }\n        }\n        this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\n        return res;\n    };\n    return CssSelector;\n}());\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nvar SelectorMatcher = (function () {\n    function SelectorMatcher() {\n        this._elementMap = new Map();\n        this._elementPartialMap = new Map();\n        this._classMap = new Map();\n        this._classPartialMap = new Map();\n        this._attrValueMap = new Map();\n        this._attrValuePartialMap = new Map();\n        this._listContexts = [];\n    }\n    /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    SelectorMatcher.createNotMatcher = function (notSelectors) {\n        var /** @type {?} */ notMatcher = new SelectorMatcher();\n        notMatcher.addSelectables(notSelectors, null);\n        return notMatcher;\n    };\n    /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    SelectorMatcher.prototype.addSelectables = function (cssSelectors, callbackCtxt) {\n        var /** @type {?} */ listContext = ((null));\n        if (cssSelectors.length > 1) {\n            listContext = new SelectorListContext(cssSelectors);\n            this._listContexts.push(listContext);\n        }\n        for (var /** @type {?} */ i = 0; i < cssSelectors.length; i++) {\n            this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n        }\n    };\n    /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addSelectable = function (cssSelector, callbackCtxt, listContext) {\n        var /** @type {?} */ matcher = this;\n        var /** @type {?} */ element = cssSelector.element;\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        var /** @type {?} */ selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n        if (element) {\n            var /** @type {?} */ isTerminal = attrs.length === 0 && classNames.length === 0;\n            if (isTerminal) {\n                this._addTerminal(matcher._elementMap, element, selectable);\n            }\n            else {\n                matcher = this._addPartial(matcher._elementPartialMap, element);\n            }\n        }\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ isTerminal = attrs.length === 0 && i === classNames.length - 1;\n                var /** @type {?} */ className = classNames[i];\n                if (isTerminal) {\n                    this._addTerminal(matcher._classMap, className, selectable);\n                }\n                else {\n                    matcher = this._addPartial(matcher._classPartialMap, className);\n                }\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ isTerminal = i === attrs.length - 2;\n                var /** @type {?} */ name = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                if (isTerminal) {\n                    var /** @type {?} */ terminalMap = matcher._attrValueMap;\n                    var /** @type {?} */ terminalValuesMap = terminalMap.get(name);\n                    if (!terminalValuesMap) {\n                        terminalValuesMap = new Map();\n                        terminalMap.set(name, terminalValuesMap);\n                    }\n                    this._addTerminal(terminalValuesMap, value, selectable);\n                }\n                else {\n                    var /** @type {?} */ partialMap = matcher._attrValuePartialMap;\n                    var /** @type {?} */ partialValuesMap = partialMap.get(name);\n                    if (!partialValuesMap) {\n                        partialValuesMap = new Map();\n                        partialMap.set(name, partialValuesMap);\n                    }\n                    matcher = this._addPartial(partialValuesMap, value);\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addTerminal = function (map, name, selectable) {\n        var /** @type {?} */ terminalList = map.get(name);\n        if (!terminalList) {\n            terminalList = [];\n            map.set(name, terminalList);\n        }\n        terminalList.push(selectable);\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addPartial = function (map, name) {\n        var /** @type {?} */ matcher = map.get(name);\n        if (!matcher) {\n            matcher = new SelectorMatcher();\n            map.set(name, matcher);\n        }\n        return matcher;\n    };\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    SelectorMatcher.prototype.match = function (cssSelector, matchedCallback) {\n        var /** @type {?} */ result = false;\n        var /** @type {?} */ element = ((cssSelector.element));\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        for (var /** @type {?} */ i = 0; i < this._listContexts.length; i++) {\n            this._listContexts[i].alreadyMatched = false;\n        }\n        result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n        result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n            result;\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ className = classNames[i];\n                result =\n                    this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n                result =\n                    this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n                        result;\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ name = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                var /** @type {?} */ terminalValuesMap = ((this._attrValueMap.get(name)));\n                if (value) {\n                    result =\n                        this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n                var /** @type {?} */ partialValuesMap = ((this._attrValuePartialMap.get(name)));\n                if (value) {\n                    result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n            }\n        }\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchTerminal = function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ selectables = map.get(name) || [];\n        var /** @type {?} */ starSelectables = ((map.get('*')));\n        if (starSelectables) {\n            selectables = selectables.concat(starSelectables);\n        }\n        if (selectables.length === 0) {\n            return false;\n        }\n        var /** @type {?} */ selectable;\n        var /** @type {?} */ result = false;\n        for (var /** @type {?} */ i = 0; i < selectables.length; i++) {\n            selectable = selectables[i];\n            result = selectable.finalize(cssSelector, matchedCallback) || result;\n        }\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchPartial = function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ nestedSelector = map.get(name);\n        if (!nestedSelector) {\n            return false;\n        }\n        // TODO(perf): get rid of recursion and measure again\n        // TODO(perf): don't pass the whole selector into the recursion,\n        // but only the not processed parts\n        return nestedSelector.match(cssSelector, matchedCallback);\n    };\n    return SelectorMatcher;\n}());\nvar SelectorListContext = (function () {\n    /**\n     * @param {?} selectors\n     */\n    function SelectorListContext(selectors) {\n        this.selectors = selectors;\n        this.alreadyMatched = false;\n    }\n    return SelectorListContext;\n}());\nvar SelectorContext = (function () {\n    /**\n     * @param {?} selector\n     * @param {?} cbContext\n     * @param {?} listContext\n     */\n    function SelectorContext(selector, cbContext, listContext) {\n        this.selector = selector;\n        this.cbContext = cbContext;\n        this.listContext = listContext;\n        this.notSelectors = selector.notSelectors;\n    }\n    /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    SelectorContext.prototype.finalize = function (cssSelector, callback) {\n        var /** @type {?} */ result = true;\n        if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n            var /** @type {?} */ notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n            result = !notMatcher.match(cssSelector, null);\n        }\n        if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n            if (this.listContext) {\n                this.listContext.alreadyMatched = true;\n            }\n            callback(this.selector, this.cbContext);\n        }\n        return result;\n    };\n    return SelectorContext;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar MODULE_SUFFIX = '';\nvar DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n/**\n * @param {?} input\n * @return {?}\n */\n/**\n * @param {?} input\n * @return {?}\n */\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return m[1].toUpperCase();\n    });\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtColon(input, defaultValues) {\n    return _splitAt(input, ':', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtPeriod(input, defaultValues) {\n    return _splitAt(input, '.', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} character\n * @param {?} defaultValues\n * @return {?}\n */\nfunction _splitAt(input, character, defaultValues) {\n    var /** @type {?} */ characterIndex = input.indexOf(character);\n    if (characterIndex == -1)\n        return defaultValues;\n    return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n}\n/**\n * @param {?} value\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nfunction visitValue(value, visitor, context) {\n    if (Array.isArray(value)) {\n        return visitor.visitArray(/** @type {?} */ (value), context);\n    }\n    if (isStrictStringMap(value)) {\n        return visitor.visitStringMap(/** @type {?} */ (value), context);\n    }\n    if (value == null || typeof value == 'string' || typeof value == 'number' ||\n        typeof value == 'boolean') {\n        return visitor.visitPrimitive(value, context);\n    }\n    return visitor.visitOther(value, context);\n}\n/**\n * @param {?} val\n * @return {?}\n */\nfunction isDefined(val) {\n    return val !== null && val !== undefined;\n}\n/**\n * @template T\n * @param {?} val\n * @return {?}\n */\nfunction noUndefined(val) {\n    return val === undefined ? ((null)) : val;\n}\nvar ValueTransformer = (function () {\n    function ValueTransformer() {\n    }\n    /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitArray = function (arr, context) {\n        var _this = this;\n        return arr.map(function (value) { return visitValue(value, _this, context); });\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitStringMap = function (map, context) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        Object.keys(map).forEach(function (key) { result[key] = visitValue(map[key], _this, context); });\n        return result;\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitPrimitive = function (value, context) { return value; };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitOther = function (value, context) { return value; };\n    return ValueTransformer;\n}());\nvar SyncAsyncResult = (function () {\n    /**\n     * @param {?} syncResult\n     * @param {?=} asyncResult\n     */\n    function SyncAsyncResult(syncResult, asyncResult) {\n        if (asyncResult === void 0) { asyncResult = null; }\n        this.syncResult = syncResult;\n        this.asyncResult = asyncResult;\n        if (!asyncResult) {\n            this.asyncResult = Promise.resolve(syncResult);\n        }\n    }\n    return SyncAsyncResult;\n}());\n/**\n * @param {?} msg\n * @return {?}\n */\nfunction syntaxError(msg) {\n    var /** @type {?} */ error = Error(msg);\n    ((error))[ERROR_SYNTAX_ERROR] = true;\n    return error;\n}\nvar ERROR_SYNTAX_ERROR = 'ngSyntaxError';\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isSyntaxError(error) {\n    return ((error))[ERROR_SYNTAX_ERROR];\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction escapeRegExp(s) {\n    return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\nvar STRING_MAP_PROTO = Object.getPrototypeOf({});\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isStrictStringMap(obj) {\n    return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction utf8Encode(str) {\n    var /** @type {?} */ encoded = '';\n    for (var /** @type {?} */ index = 0; index < str.length; index++) {\n        var /** @type {?} */ codePoint = str.charCodeAt(index);\n        // decode surrogate\n        // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        if (codePoint >= 0xd800 && codePoint <= 0xdbff && str.length > (index + 1)) {\n            var /** @type {?} */ low = str.charCodeAt(index + 1);\n            if (low >= 0xdc00 && low <= 0xdfff) {\n                index++;\n                codePoint = ((codePoint - 0xd800) << 10) + low - 0xdc00 + 0x10000;\n            }\n        }\n        if (codePoint <= 0x7f) {\n            encoded += String.fromCharCode(codePoint);\n        }\n        else if (codePoint <= 0x7ff) {\n            encoded += String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xc0, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0xffff) {\n            encoded += String.fromCharCode((codePoint >> 12) | 0xe0, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0x1fffff) {\n            encoded += String.fromCharCode(((codePoint >> 18) & 0x07) | 0xf0, ((codePoint >> 12) & 0x3f) | 0x80, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n    }\n    return encoded;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// group 0: \"[prop] or (event) or @trigger\"\n// group 1: \"prop\" from \"[prop]\"\n// group 2: \"event\" from \"(event)\"\n// group 3: \"@trigger\" from \"@trigger\"\nvar HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\nvar CompileAnimationEntryMetadata = (function () {\n    /**\n     * @param {?=} name\n     * @param {?=} definitions\n     */\n    function CompileAnimationEntryMetadata(name, definitions) {\n        if (name === void 0) { name = null; }\n        if (definitions === void 0) { definitions = null; }\n        this.name = name;\n        this.definitions = definitions;\n    }\n    return CompileAnimationEntryMetadata;\n}());\n/**\n * @abstract\n */\nvar CompileAnimationStateMetadata = (function () {\n    function CompileAnimationStateMetadata() {\n    }\n    return CompileAnimationStateMetadata;\n}());\nvar CompileAnimationStateDeclarationMetadata = (function (_super) {\n    __extends(CompileAnimationStateDeclarationMetadata, _super);\n    /**\n     * @param {?} stateNameExpr\n     * @param {?} styles\n     */\n    function CompileAnimationStateDeclarationMetadata(stateNameExpr, styles) {\n        var _this = _super.call(this) || this;\n        _this.stateNameExpr = stateNameExpr;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationStateDeclarationMetadata;\n}(CompileAnimationStateMetadata));\nvar CompileAnimationStateTransitionMetadata = (function (_super) {\n    __extends(CompileAnimationStateTransitionMetadata, _super);\n    /**\n     * @param {?} stateChangeExpr\n     * @param {?} steps\n     */\n    function CompileAnimationStateTransitionMetadata(stateChangeExpr, steps) {\n        var _this = _super.call(this) || this;\n        _this.stateChangeExpr = stateChangeExpr;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationStateTransitionMetadata;\n}(CompileAnimationStateMetadata));\n/**\n * @abstract\n */\nvar CompileAnimationMetadata = (function () {\n    function CompileAnimationMetadata() {\n    }\n    return CompileAnimationMetadata;\n}());\nvar CompileAnimationKeyframesSequenceMetadata = (function (_super) {\n    __extends(CompileAnimationKeyframesSequenceMetadata, _super);\n    /**\n     * @param {?=} steps\n     */\n    function CompileAnimationKeyframesSequenceMetadata(steps) {\n        if (steps === void 0) { steps = []; }\n        var _this = _super.call(this) || this;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationKeyframesSequenceMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationStyleMetadata = (function (_super) {\n    __extends(CompileAnimationStyleMetadata, _super);\n    /**\n     * @param {?} offset\n     * @param {?=} styles\n     */\n    function CompileAnimationStyleMetadata(offset, styles) {\n        if (styles === void 0) { styles = null; }\n        var _this = _super.call(this) || this;\n        _this.offset = offset;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationStyleMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationAnimateMetadata = (function (_super) {\n    __extends(CompileAnimationAnimateMetadata, _super);\n    /**\n     * @param {?=} timings\n     * @param {?=} styles\n     */\n    function CompileAnimationAnimateMetadata(timings, styles) {\n        if (timings === void 0) { timings = 0; }\n        if (styles === void 0) { styles = null; }\n        var _this = _super.call(this) || this;\n        _this.timings = timings;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationAnimateMetadata;\n}(CompileAnimationMetadata));\n/**\n * @abstract\n */\nvar CompileAnimationWithStepsMetadata = (function (_super) {\n    __extends(CompileAnimationWithStepsMetadata, _super);\n    /**\n     * @param {?=} steps\n     */\n    function CompileAnimationWithStepsMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        var _this = _super.call(this) || this;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationWithStepsMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationSequenceMetadata = (function (_super) {\n    __extends(CompileAnimationSequenceMetadata, _super);\n    /**\n     * @param {?=} steps\n     */\n    function CompileAnimationSequenceMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        return _super.call(this, steps) || this;\n    }\n    return CompileAnimationSequenceMetadata;\n}(CompileAnimationWithStepsMetadata));\nvar CompileAnimationGroupMetadata = (function (_super) {\n    __extends(CompileAnimationGroupMetadata, _super);\n    /**\n     * @param {?=} steps\n     */\n    function CompileAnimationGroupMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        return _super.call(this, steps) || this;\n    }\n    return CompileAnimationGroupMetadata;\n}(CompileAnimationWithStepsMetadata));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _sanitizeIdentifier(name) {\n    return name.replace(/\\W/g, '_');\n}\nvar _anonymousTypeIndex = 0;\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierName(compileIdentifier) {\n    if (!compileIdentifier || !compileIdentifier.reference) {\n        return null;\n    }\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.name;\n    }\n    if (ref['__anonymousType']) {\n        return ref['__anonymousType'];\n    }\n    var /** @type {?} */ identifier = _angular_core.ɵstringify(ref);\n    if (identifier.indexOf('(') >= 0) {\n        // case: anonymous functions!\n        identifier = \"anonymous_\" + _anonymousTypeIndex++;\n        ref['__anonymousType'] = identifier;\n    }\n    else {\n        identifier = _sanitizeIdentifier(identifier);\n    }\n    return identifier;\n}\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierModuleUrl(compileIdentifier) {\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.filePath;\n    }\n    return _angular_core.ɵreflector.importUri(ref);\n}\n/**\n * @param {?} compType\n * @param {?} embeddedTemplateIndex\n * @return {?}\n */\nfunction viewClassName(compType, embeddedTemplateIndex) {\n    return \"View_\" + identifierName({ reference: compType }) + \"_\" + embeddedTemplateIndex;\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction rendererTypeName(compType) {\n    return \"RenderType_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction hostViewClassName(compType) {\n    return \"HostView_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} dirType\n * @return {?}\n */\nfunction dirWrapperClassName(dirType) {\n    return \"Wrapper_\" + identifierName({ reference: dirType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction componentFactoryName(compType) {\n    return identifierName({ reference: compType }) + \"NgFactory\";\n}\nvar CompileSummaryKind = {};\nCompileSummaryKind.Pipe = 0;\nCompileSummaryKind.Directive = 1;\nCompileSummaryKind.NgModule = 2;\nCompileSummaryKind.Injectable = 3;\nCompileSummaryKind[CompileSummaryKind.Pipe] = \"Pipe\";\nCompileSummaryKind[CompileSummaryKind.Directive] = \"Directive\";\nCompileSummaryKind[CompileSummaryKind.NgModule] = \"NgModule\";\nCompileSummaryKind[CompileSummaryKind.Injectable] = \"Injectable\";\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenName(token) {\n    return token.value != null ? _sanitizeIdentifier(token.value) : identifierName(token.identifier);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenReference(token) {\n    if (token.identifier != null) {\n        return token.identifier.reference;\n    }\n    else {\n        return token.value;\n    }\n}\n/**\n * Metadata about a stylesheet\n */\nvar CompileStylesheetMetadata = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function CompileStylesheetMetadata(_a) {\n        var _b = _a === void 0 ? {} : _a, moduleUrl = _b.moduleUrl, styles = _b.styles, styleUrls = _b.styleUrls;\n        this.moduleUrl = moduleUrl || null;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n    }\n    return CompileStylesheetMetadata;\n}());\n/**\n * Metadata regarding compilation of a template.\n */\nvar CompileTemplateMetadata = (function () {\n    /**\n     * @param {?} __0\n     */\n    function CompileTemplateMetadata(_a) {\n        var encapsulation = _a.encapsulation, template = _a.template, templateUrl = _a.templateUrl, styles = _a.styles, styleUrls = _a.styleUrls, externalStylesheets = _a.externalStylesheets, animations = _a.animations, ngContentSelectors = _a.ngContentSelectors, interpolation = _a.interpolation, isInline = _a.isInline;\n        this.encapsulation = encapsulation;\n        this.template = template;\n        this.templateUrl = templateUrl;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n        this.externalStylesheets = _normalizeArray(externalStylesheets);\n        this.animations = animations ? flatten(animations) : [];\n        this.ngContentSelectors = ngContentSelectors || [];\n        if (interpolation && interpolation.length != 2) {\n            throw new Error(\"'interpolation' should have a start and an end symbol.\");\n        }\n        this.interpolation = interpolation;\n        this.isInline = isInline;\n    }\n    /**\n     * @return {?}\n     */\n    CompileTemplateMetadata.prototype.toSummary = function () {\n        return {\n            animations: this.animations.map(function (anim) { return anim.name; }),\n            ngContentSelectors: this.ngContentSelectors,\n            encapsulation: this.encapsulation,\n        };\n    };\n    return CompileTemplateMetadata;\n}());\n/**\n * Metadata regarding compilation of a directive.\n */\nvar CompileDirectiveMetadata = (function () {\n    /**\n     * @param {?} __0\n     */\n    function CompileDirectiveMetadata(_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, hostListeners = _a.hostListeners, hostProperties = _a.hostProperties, hostAttributes = _a.hostAttributes, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        this.isHost = !!isHost;\n        this.type = type;\n        this.isComponent = isComponent;\n        this.selector = selector;\n        this.exportAs = exportAs;\n        this.changeDetection = changeDetection;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.hostListeners = hostListeners;\n        this.hostProperties = hostProperties;\n        this.hostAttributes = hostAttributes;\n        this.providers = _normalizeArray(providers);\n        this.viewProviders = _normalizeArray(viewProviders);\n        this.queries = _normalizeArray(queries);\n        this.viewQueries = _normalizeArray(viewQueries);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.template = template;\n        this.componentViewType = componentViewType;\n        this.rendererType = rendererType;\n        this.componentFactory = componentFactory;\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    CompileDirectiveMetadata.create = function (_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, host = _a.host, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        var /** @type {?} */ hostListeners = {};\n        var /** @type {?} */ hostProperties = {};\n        var /** @type {?} */ hostAttributes = {};\n        if (host != null) {\n            Object.keys(host).forEach(function (key) {\n                var /** @type {?} */ value = host[key];\n                var /** @type {?} */ matches = key.match(HOST_REG_EXP);\n                if (matches === null) {\n                    hostAttributes[key] = value;\n                }\n                else if (matches[1] != null) {\n                    hostProperties[matches[1]] = value;\n                }\n                else if (matches[2] != null) {\n                    hostListeners[matches[2]] = value;\n                }\n            });\n        }\n        var /** @type {?} */ inputsMap = {};\n        if (inputs != null) {\n            inputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                inputsMap[parts[0]] = parts[1];\n            });\n        }\n        var /** @type {?} */ outputsMap = {};\n        if (outputs != null) {\n            outputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                outputsMap[parts[0]] = parts[1];\n            });\n        }\n        return new CompileDirectiveMetadata({\n            isHost: isHost,\n            type: type,\n            isComponent: !!isComponent, selector: selector, exportAs: exportAs, changeDetection: changeDetection,\n            inputs: inputsMap,\n            outputs: outputsMap,\n            hostListeners: hostListeners,\n            hostProperties: hostProperties,\n            hostAttributes: hostAttributes,\n            providers: providers,\n            viewProviders: viewProviders,\n            queries: queries,\n            viewQueries: viewQueries,\n            entryComponents: entryComponents,\n            template: template,\n            componentViewType: componentViewType,\n            rendererType: rendererType,\n            componentFactory: componentFactory,\n        });\n    };\n    /**\n     * @return {?}\n     */\n    CompileDirectiveMetadata.prototype.toSummary = function () {\n        return {\n            summaryKind: CompileSummaryKind.Directive,\n            type: this.type,\n            isComponent: this.isComponent,\n            selector: this.selector,\n            exportAs: this.exportAs,\n            inputs: this.inputs,\n            outputs: this.outputs,\n            hostListeners: this.hostListeners,\n            hostProperties: this.hostProperties,\n            hostAttributes: this.hostAttributes,\n            providers: this.providers,\n            viewProviders: this.viewProviders,\n            queries: this.queries,\n            viewQueries: this.viewQueries,\n            entryComponents: this.entryComponents,\n            changeDetection: this.changeDetection,\n            template: this.template && this.template.toSummary(),\n            componentViewType: this.componentViewType,\n            rendererType: this.rendererType,\n            componentFactory: this.componentFactory\n        };\n    };\n    return CompileDirectiveMetadata;\n}());\n/**\n * Construct {\\@link CompileDirectiveMetadata} from {\\@link ComponentTypeMetadata} and a selector.\n * @param {?} hostTypeReference\n * @param {?} compMeta\n * @param {?} hostViewType\n * @return {?}\n */\nfunction createHostComponentMeta(hostTypeReference, compMeta, hostViewType) {\n    var /** @type {?} */ template = CssSelector.parse(/** @type {?} */ ((compMeta.selector)))[0].getMatchingElementTemplate();\n    return CompileDirectiveMetadata.create({\n        isHost: true,\n        type: { reference: hostTypeReference, diDeps: [], lifecycleHooks: [] },\n        template: new CompileTemplateMetadata({\n            encapsulation: _angular_core.ViewEncapsulation.None,\n            template: template,\n            templateUrl: '',\n            styles: [],\n            styleUrls: [],\n            ngContentSelectors: [],\n            animations: [],\n            isInline: true,\n            externalStylesheets: [],\n            interpolation: null\n        }),\n        exportAs: null,\n        changeDetection: _angular_core.ChangeDetectionStrategy.Default,\n        inputs: [],\n        outputs: [],\n        host: {},\n        isComponent: true,\n        selector: '*',\n        providers: [],\n        viewProviders: [],\n        queries: [],\n        viewQueries: [],\n        componentViewType: hostViewType,\n        rendererType: { id: '__Host__', encapsulation: _angular_core.ViewEncapsulation.None, styles: [], data: {} },\n        entryComponents: [],\n        componentFactory: null\n    });\n}\nvar CompilePipeMetadata = (function () {\n    /**\n     * @param {?} __0\n     */\n    function CompilePipeMetadata(_a) {\n        var type = _a.type, name = _a.name, pure = _a.pure;\n        this.type = type;\n        this.name = name;\n        this.pure = !!pure;\n    }\n    /**\n     * @return {?}\n     */\n    CompilePipeMetadata.prototype.toSummary = function () {\n        return {\n            summaryKind: CompileSummaryKind.Pipe,\n            type: this.type,\n            name: this.name,\n            pure: this.pure\n        };\n    };\n    return CompilePipeMetadata;\n}());\n/**\n * Metadata regarding compilation of a module.\n */\nvar CompileNgModuleMetadata = (function () {\n    /**\n     * @param {?} __0\n     */\n    function CompileNgModuleMetadata(_a) {\n        var type = _a.type, providers = _a.providers, declaredDirectives = _a.declaredDirectives, exportedDirectives = _a.exportedDirectives, declaredPipes = _a.declaredPipes, exportedPipes = _a.exportedPipes, entryComponents = _a.entryComponents, bootstrapComponents = _a.bootstrapComponents, importedModules = _a.importedModules, exportedModules = _a.exportedModules, schemas = _a.schemas, transitiveModule = _a.transitiveModule, id = _a.id;\n        this.type = type || null;\n        this.declaredDirectives = _normalizeArray(declaredDirectives);\n        this.exportedDirectives = _normalizeArray(exportedDirectives);\n        this.declaredPipes = _normalizeArray(declaredPipes);\n        this.exportedPipes = _normalizeArray(exportedPipes);\n        this.providers = _normalizeArray(providers);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n        this.importedModules = _normalizeArray(importedModules);\n        this.exportedModules = _normalizeArray(exportedModules);\n        this.schemas = _normalizeArray(schemas);\n        this.id = id || null;\n        this.transitiveModule = transitiveModule || null;\n    }\n    /**\n     * @return {?}\n     */\n    CompileNgModuleMetadata.prototype.toSummary = function () {\n        var /** @type {?} */ module = ((this.transitiveModule));\n        return {\n            summaryKind: CompileSummaryKind.NgModule,\n            type: this.type,\n            entryComponents: module.entryComponents,\n            providers: module.providers,\n            modules: module.modules,\n            exportedDirectives: module.exportedDirectives,\n            exportedPipes: module.exportedPipes\n        };\n    };\n    return CompileNgModuleMetadata;\n}());\nvar TransitiveCompileNgModuleMetadata = (function () {\n    function TransitiveCompileNgModuleMetadata() {\n        this.directivesSet = new Set();\n        this.directives = [];\n        this.exportedDirectivesSet = new Set();\n        this.exportedDirectives = [];\n        this.pipesSet = new Set();\n        this.pipes = [];\n        this.exportedPipesSet = new Set();\n        this.exportedPipes = [];\n        this.modulesSet = new Set();\n        this.modules = [];\n        this.entryComponentsSet = new Set();\n        this.entryComponents = [];\n        this.providers = [];\n    }\n    /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addProvider = function (provider, module) {\n        this.providers.push({ provider: provider, module: module });\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addDirective = function (id) {\n        if (!this.directivesSet.has(id.reference)) {\n            this.directivesSet.add(id.reference);\n            this.directives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedDirective = function (id) {\n        if (!this.exportedDirectivesSet.has(id.reference)) {\n            this.exportedDirectivesSet.add(id.reference);\n            this.exportedDirectives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addPipe = function (id) {\n        if (!this.pipesSet.has(id.reference)) {\n            this.pipesSet.add(id.reference);\n            this.pipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedPipe = function (id) {\n        if (!this.exportedPipesSet.has(id.reference)) {\n            this.exportedPipesSet.add(id.reference);\n            this.exportedPipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addModule = function (id) {\n        if (!this.modulesSet.has(id.reference)) {\n            this.modulesSet.add(id.reference);\n            this.modules.push(id);\n        }\n    };\n    /**\n     * @param {?} ec\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addEntryComponent = function (ec) {\n        if (!this.entryComponentsSet.has(ec.componentType)) {\n            this.entryComponentsSet.add(ec.componentType);\n            this.entryComponents.push(ec);\n        }\n    };\n    return TransitiveCompileNgModuleMetadata;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _normalizeArray(obj) {\n    return obj || [];\n}\nvar ProviderMeta = (function () {\n    /**\n     * @param {?} token\n     * @param {?} __1\n     */\n    function ProviderMeta(token, _a) {\n        var useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n        this.token = token;\n        this.useClass = useClass || null;\n        this.useValue = useValue;\n        this.useExisting = useExisting;\n        this.useFactory = useFactory || null;\n        this.dependencies = deps || null;\n        this.multi = !!multi;\n    }\n    return ProviderMeta;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n        return ((flat)).concat(flatItem);\n    }, []);\n}\n/**\n * @param {?} url\n * @return {?}\n */\nfunction sourceUrl(url) {\n    // Note: We need 3 \"/\" so that ng shows up as a separate domain\n    // in the chrome dev tools.\n    return url.replace(/(\\w+:\\/\\/[\\w:-]+)?(\\/+)?/, 'ng:///');\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @param {?} templateMeta\n * @return {?}\n */\nfunction templateSourceUrl(ngModuleType, compMeta, templateMeta) {\n    var /** @type {?} */ url;\n    if (templateMeta.isInline) {\n        if (compMeta.type.reference instanceof StaticSymbol) {\n            // Note: a .ts file might contain multiple components with inline templates,\n            // so we need to give them unique urls, as these will be used for sourcemaps.\n            url = compMeta.type.reference.filePath + \".\" + compMeta.type.reference.name + \".html\";\n        }\n        else {\n            url = identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".html\";\n        }\n    }\n    else {\n        url = ((templateMeta.templateUrl));\n    }\n    // always prepend ng:// to make angular resources easy to find and not clobber\n    // user resources.\n    return sourceUrl(url);\n}\n/**\n * @param {?} meta\n * @param {?} id\n * @return {?}\n */\nfunction sharedStylesheetJitUrl(meta, id) {\n    var /** @type {?} */ pathParts = ((meta.moduleUrl)).split(/\\/\\\\/g);\n    var /** @type {?} */ baseName = pathParts[pathParts.length - 1];\n    return sourceUrl(\"css/\" + id + baseName + \".ngstyle.js\");\n}\n/**\n * @param {?} moduleMeta\n * @return {?}\n */\nfunction ngModuleJitUrl(moduleMeta) {\n    return sourceUrl(identifierName(moduleMeta.type) + \"/module.ngfactory.js\");\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @return {?}\n */\nfunction templateJitUrl(ngModuleType, compMeta) {\n    return sourceUrl(identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".ngfactory.js\");\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CompilerConfig = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function CompilerConfig(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.defaultEncapsulation, defaultEncapsulation = _c === void 0 ? _angular_core.ViewEncapsulation.Emulated : _c, _d = _b.useJit, useJit = _d === void 0 ? true : _d, missingTranslation = _b.missingTranslation, enableLegacyTemplate = _b.enableLegacyTemplate;\n        this.defaultEncapsulation = defaultEncapsulation;\n        this.useJit = !!useJit;\n        this.missingTranslation = missingTranslation || null;\n        this.enableLegacyTemplate = enableLegacyTemplate !== false;\n    }\n    return CompilerConfig;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParserError = (function () {\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     */\n    function ParserError(message, input, errLocation, ctxLocation) {\n        this.input = input;\n        this.errLocation = errLocation;\n        this.ctxLocation = ctxLocation;\n        this.message = \"Parser Error: \" + message + \" \" + errLocation + \" [\" + input + \"] in \" + ctxLocation;\n    }\n    return ParserError;\n}());\nvar ParseSpan = (function () {\n    /**\n     * @param {?} start\n     * @param {?} end\n     */\n    function ParseSpan(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    return ParseSpan;\n}());\nvar AST = (function () {\n    /**\n     * @param {?} span\n     */\n    function AST(span) {\n        this.span = span;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    AST.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return null;\n    };\n    /**\n     * @return {?}\n     */\n    AST.prototype.toString = function () { return 'AST'; };\n    return AST;\n}());\n/**\n * Represents a quoted expression of the form:\n *\n * quote = prefix `:` uninterpretedExpression\n * prefix = identifier\n * uninterpretedExpression = arbitrary string\n *\n * A quoted expression is meant to be pre-processed by an AST transformer that\n * converts it into another AST that no longer contains quoted expressions.\n * It is meant to allow third-party developers to extend Angular template\n * expression language. The `uninterpretedExpression` part of the quote is\n * therefore not interpreted by the Angular's own expression parser.\n */\nvar Quote = (function (_super) {\n    __extends(Quote, _super);\n    /**\n     * @param {?} span\n     * @param {?} prefix\n     * @param {?} uninterpretedExpression\n     * @param {?} location\n     */\n    function Quote(span, prefix, uninterpretedExpression, location) {\n        var _this = _super.call(this, span) || this;\n        _this.prefix = prefix;\n        _this.uninterpretedExpression = uninterpretedExpression;\n        _this.location = location;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Quote.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitQuote(this, context);\n    };\n    /**\n     * @return {?}\n     */\n    Quote.prototype.toString = function () { return 'Quote'; };\n    return Quote;\n}(AST));\nvar EmptyExpr = (function (_super) {\n    __extends(EmptyExpr, _super);\n    function EmptyExpr() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    EmptyExpr.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        // do nothing\n    };\n    return EmptyExpr;\n}(AST));\nvar ImplicitReceiver = (function (_super) {\n    __extends(ImplicitReceiver, _super);\n    function ImplicitReceiver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ImplicitReceiver.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitImplicitReceiver(this, context);\n    };\n    return ImplicitReceiver;\n}(AST));\n/**\n * Multiple expressions separated by a semicolon.\n */\nvar Chain = (function (_super) {\n    __extends(Chain, _super);\n    /**\n     * @param {?} span\n     * @param {?} expressions\n     */\n    function Chain(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Chain.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitChain(this, context);\n    };\n    return Chain;\n}(AST));\nvar Conditional = (function (_super) {\n    __extends(Conditional, _super);\n    /**\n     * @param {?} span\n     * @param {?} condition\n     * @param {?} trueExp\n     * @param {?} falseExp\n     */\n    function Conditional(span, condition, trueExp, falseExp) {\n        var _this = _super.call(this, span) || this;\n        _this.condition = condition;\n        _this.trueExp = trueExp;\n        _this.falseExp = falseExp;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Conditional.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitConditional(this, context);\n    };\n    return Conditional;\n}(AST));\nvar PropertyRead = (function (_super) {\n    __extends(PropertyRead, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     */\n    function PropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyRead.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyRead(this, context);\n    };\n    return PropertyRead;\n}(AST));\nvar PropertyWrite = (function (_super) {\n    __extends(PropertyWrite, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} value\n     */\n    function PropertyWrite(span, receiver, name, value) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyWrite.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyWrite(this, context);\n    };\n    return PropertyWrite;\n}(AST));\nvar SafePropertyRead = (function (_super) {\n    __extends(SafePropertyRead, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     */\n    function SafePropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafePropertyRead.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafePropertyRead(this, context);\n    };\n    return SafePropertyRead;\n}(AST));\nvar KeyedRead = (function (_super) {\n    __extends(KeyedRead, _super);\n    /**\n     * @param {?} span\n     * @param {?} obj\n     * @param {?} key\n     */\n    function KeyedRead(span, obj, key) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedRead.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedRead(this, context);\n    };\n    return KeyedRead;\n}(AST));\nvar KeyedWrite = (function (_super) {\n    __extends(KeyedWrite, _super);\n    /**\n     * @param {?} span\n     * @param {?} obj\n     * @param {?} key\n     * @param {?} value\n     */\n    function KeyedWrite(span, obj, key, value) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedWrite.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedWrite(this, context);\n    };\n    return KeyedWrite;\n}(AST));\nvar BindingPipe = (function (_super) {\n    __extends(BindingPipe, _super);\n    /**\n     * @param {?} span\n     * @param {?} exp\n     * @param {?} name\n     * @param {?} args\n     */\n    function BindingPipe(span, exp, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.exp = exp;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    BindingPipe.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPipe(this, context);\n    };\n    return BindingPipe;\n}(AST));\nvar LiteralPrimitive = (function (_super) {\n    __extends(LiteralPrimitive, _super);\n    /**\n     * @param {?} span\n     * @param {?} value\n     */\n    function LiteralPrimitive(span, value) {\n        var _this = _super.call(this, span) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralPrimitive.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralPrimitive(this, context);\n    };\n    return LiteralPrimitive;\n}(AST));\nvar LiteralArray = (function (_super) {\n    __extends(LiteralArray, _super);\n    /**\n     * @param {?} span\n     * @param {?} expressions\n     */\n    function LiteralArray(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralArray.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralArray(this, context);\n    };\n    return LiteralArray;\n}(AST));\nvar LiteralMap = (function (_super) {\n    __extends(LiteralMap, _super);\n    /**\n     * @param {?} span\n     * @param {?} keys\n     * @param {?} values\n     */\n    function LiteralMap(span, keys, values) {\n        var _this = _super.call(this, span) || this;\n        _this.keys = keys;\n        _this.values = values;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralMap.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralMap(this, context);\n    };\n    return LiteralMap;\n}(AST));\nvar Interpolation = (function (_super) {\n    __extends(Interpolation, _super);\n    /**\n     * @param {?} span\n     * @param {?} strings\n     * @param {?} expressions\n     */\n    function Interpolation(span, strings, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.strings = strings;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Interpolation.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitInterpolation(this, context);\n    };\n    return Interpolation;\n}(AST));\nvar Binary = (function (_super) {\n    __extends(Binary, _super);\n    /**\n     * @param {?} span\n     * @param {?} operation\n     * @param {?} left\n     * @param {?} right\n     */\n    function Binary(span, operation, left, right) {\n        var _this = _super.call(this, span) || this;\n        _this.operation = operation;\n        _this.left = left;\n        _this.right = right;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Binary.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitBinary(this, context);\n    };\n    return Binary;\n}(AST));\nvar PrefixNot = (function (_super) {\n    __extends(PrefixNot, _super);\n    /**\n     * @param {?} span\n     * @param {?} expression\n     */\n    function PrefixNot(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PrefixNot.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPrefixNot(this, context);\n    };\n    return PrefixNot;\n}(AST));\nvar NonNullAssert = (function (_super) {\n    __extends(NonNullAssert, _super);\n    /**\n     * @param {?} span\n     * @param {?} expression\n     */\n    function NonNullAssert(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    NonNullAssert.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitNonNullAssert(this, context);\n    };\n    return NonNullAssert;\n}(AST));\nvar MethodCall = (function (_super) {\n    __extends(MethodCall, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} args\n     */\n    function MethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    MethodCall.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitMethodCall(this, context);\n    };\n    return MethodCall;\n}(AST));\nvar SafeMethodCall = (function (_super) {\n    __extends(SafeMethodCall, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} args\n     */\n    function SafeMethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafeMethodCall.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafeMethodCall(this, context);\n    };\n    return SafeMethodCall;\n}(AST));\nvar FunctionCall = (function (_super) {\n    __extends(FunctionCall, _super);\n    /**\n     * @param {?} span\n     * @param {?} target\n     * @param {?} args\n     */\n    function FunctionCall(span, target, args) {\n        var _this = _super.call(this, span) || this;\n        _this.target = target;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    FunctionCall.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitFunctionCall(this, context);\n    };\n    return FunctionCall;\n}(AST));\nvar ASTWithSource = (function (_super) {\n    __extends(ASTWithSource, _super);\n    /**\n     * @param {?} ast\n     * @param {?} source\n     * @param {?} location\n     * @param {?} errors\n     */\n    function ASTWithSource(ast, source, location, errors) {\n        var _this = _super.call(this, new ParseSpan(0, source == null ? 0 : source.length)) || this;\n        _this.ast = ast;\n        _this.source = source;\n        _this.location = location;\n        _this.errors = errors;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ASTWithSource.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return this.ast.visit(visitor, context);\n    };\n    /**\n     * @return {?}\n     */\n    ASTWithSource.prototype.toString = function () { return this.source + \" in \" + this.location; };\n    return ASTWithSource;\n}(AST));\nvar TemplateBinding = (function () {\n    /**\n     * @param {?} span\n     * @param {?} key\n     * @param {?} keyIsVar\n     * @param {?} name\n     * @param {?} expression\n     */\n    function TemplateBinding(span, key, keyIsVar, name, expression) {\n        this.span = span;\n        this.key = key;\n        this.keyIsVar = keyIsVar;\n        this.name = name;\n        this.expression = expression;\n    }\n    return TemplateBinding;\n}());\nvar NullAstVisitor = (function () {\n    function NullAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitBinary = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitChain = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitConditional = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitFunctionCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitImplicitReceiver = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitInterpolation = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedWrite = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralArray = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralMap = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralPrimitive = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitMethodCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPipe = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPrefixNot = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitNonNullAssert = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyWrite = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitQuote = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafeMethodCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafePropertyRead = function (ast, context) { };\n    return NullAstVisitor;\n}());\nvar RecursiveAstVisitor = (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinary = function (ast, context) {\n        ast.left.visit(this);\n        ast.right.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitChain = function (ast, context) { return this.visitAll(ast.expressions, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditional = function (ast, context) {\n        ast.condition.visit(this);\n        ast.trueExp.visit(this);\n        ast.falseExp.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPipe = function (ast, context) {\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionCall = function (ast, context) {\n        ((ast.target)).visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitImplicitReceiver = function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInterpolation = function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedRead = function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedWrite = function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArray = function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMap = function (ast, context) { return this.visitAll(ast.values, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralPrimitive = function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMethodCall = function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPrefixNot = function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNonNullAssert = function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyRead = function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyWrite = function (ast, context) {\n        ast.receiver.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafePropertyRead = function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafeMethodCall = function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAll = function (asts, context) {\n        var _this = this;\n        asts.forEach(function (ast) { return ast.visit(_this, context); });\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitQuote = function (ast, context) { return null; };\n    return RecursiveAstVisitor;\n}());\nvar AstTransformer = (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitImplicitReceiver = function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInterpolation = function (ast, context) {\n        return new Interpolation(ast.span, ast.strings, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralPrimitive = function (ast, context) {\n        return new LiteralPrimitive(ast.span, ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyRead = function (ast, context) {\n        return new PropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyWrite = function (ast, context) {\n        return new PropertyWrite(ast.span, ast.receiver.visit(this), ast.name, ast.value.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafePropertyRead = function (ast, context) {\n        return new SafePropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitMethodCall = function (ast, context) {\n        return new MethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafeMethodCall = function (ast, context) {\n        return new SafeMethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionCall = function (ast, context) {\n        return new FunctionCall(ast.span, /** @type {?} */ ((ast.target)).visit(this), this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArray = function (ast, context) {\n        return new LiteralArray(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMap = function (ast, context) {\n        return new LiteralMap(ast.span, ast.keys, this.visitAll(ast.values));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinary = function (ast, context) {\n        return new Binary(ast.span, ast.operation, ast.left.visit(this), ast.right.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPrefixNot = function (ast, context) {\n        return new PrefixNot(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNonNullAssert = function (ast, context) {\n        return new NonNullAssert(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditional = function (ast, context) {\n        return new Conditional(ast.span, ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPipe = function (ast, context) {\n        return new BindingPipe(ast.span, ast.exp.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedRead = function (ast, context) {\n        return new KeyedRead(ast.span, ast.obj.visit(this), ast.key.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedWrite = function (ast, context) {\n        return new KeyedWrite(ast.span, ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));\n    };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAll = function (asts) {\n        var /** @type {?} */ res = new Array(asts.length);\n        for (var /** @type {?} */ i = 0; i < asts.length; ++i) {\n            res[i] = asts[i].visit(this);\n        }\n        return res;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitChain = function (ast, context) {\n        return new Chain(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitQuote = function (ast, context) {\n        return new Quote(ast.span, ast.prefix, ast.uninterpretedExpression, ast.location);\n    };\n    return AstTransformer;\n}());\n/**\n * @param {?} ast\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nfunction visitAstChildren(ast, visitor, context) {\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function visit(ast) {\n        visitor.visit && visitor.visit(ast, context) || ast.visit(visitor, context);\n    }\n    /**\n     * @template T\n     * @param {?} asts\n     * @return {?}\n     */\n    function visitAll(asts) { asts.forEach(visit); }\n    ast.visit({\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitBinary: function (ast) {\n            visit(ast.left);\n            visit(ast.right);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitChain: function (ast) { visitAll(ast.expressions); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitConditional: function (ast) {\n            visit(ast.condition);\n            visit(ast.trueExp);\n            visit(ast.falseExp);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitFunctionCall: function (ast) {\n            if (ast.target) {\n                visit(ast.target);\n            }\n            visitAll(ast.args);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitImplicitReceiver: function (ast) { },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitInterpolation: function (ast) { visitAll(ast.expressions); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitKeyedRead: function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitKeyedWrite: function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n            visit(ast.obj);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitLiteralArray: function (ast) { visitAll(ast.expressions); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitLiteralMap: function (ast) { },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitLiteralPrimitive: function (ast) { },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitMethodCall: function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitPipe: function (ast) {\n            visit(ast.exp);\n            visitAll(ast.args);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitPrefixNot: function (ast) { visit(ast.expression); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitNonNullAssert: function (ast) { visit(ast.expression); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitPropertyRead: function (ast) { visit(ast.receiver); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitPropertyWrite: function (ast) {\n            visit(ast.receiver);\n            visit(ast.value);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitQuote: function (ast) { },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitSafeMethodCall: function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitSafePropertyRead: function (ast) { visit(ast.receiver); },\n    });\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar $EOF = 0;\nvar $TAB = 9;\nvar $LF = 10;\nvar $VTAB = 11;\nvar $FF = 12;\nvar $CR = 13;\nvar $SPACE = 32;\nvar $BANG = 33;\nvar $DQ = 34;\nvar $HASH = 35;\nvar $$ = 36;\nvar $PERCENT = 37;\nvar $AMPERSAND = 38;\nvar $SQ = 39;\nvar $LPAREN = 40;\nvar $RPAREN = 41;\nvar $STAR = 42;\nvar $PLUS = 43;\nvar $COMMA = 44;\nvar $MINUS = 45;\nvar $PERIOD = 46;\nvar $SLASH = 47;\nvar $COLON = 58;\nvar $SEMICOLON = 59;\nvar $LT = 60;\nvar $EQ = 61;\nvar $GT = 62;\nvar $QUESTION = 63;\nvar $0 = 48;\nvar $9 = 57;\nvar $A = 65;\nvar $E = 69;\nvar $F = 70;\nvar $X = 88;\nvar $Z = 90;\nvar $LBRACKET = 91;\nvar $BACKSLASH = 92;\nvar $RBRACKET = 93;\nvar $CARET = 94;\nvar $_ = 95;\nvar $a = 97;\nvar $e = 101;\nvar $f = 102;\nvar $n = 110;\nvar $r = 114;\nvar $t = 116;\nvar $u = 117;\nvar $v = 118;\nvar $x = 120;\nvar $z = 122;\nvar $LBRACE = 123;\nvar $BAR = 124;\nvar $RBRACE = 125;\nvar $NBSP = 160;\nvar $BT = 96;\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isWhitespace(code) {\n    return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigit(code) {\n    return $0 <= code && code <= $9;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiLetter(code) {\n    return code >= $a && code <= $z || code >= $A && code <= $Z;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiHexDigit(code) {\n    return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n}\n/**\n * A replacement for \\@Injectable to be used in the compiler, so that\n * we don't try to evaluate the metadata in the compiler during AoT.\n * This decorator is enough to make the compiler work with the ReflectiveInjector though.\n * \\@Annotation\n * @return {?}\n */\nfunction CompilerInjectable() {\n    return function (x) { return x; };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertArrayOfStrings(identifier, value) {\n    if (!_angular_core.isDevMode() || value == null) {\n        return;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n    }\n    for (var /** @type {?} */ i = 0; i < value.length; i += 1) {\n        if (typeof value[i] !== 'string') {\n            throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n        }\n    }\n}\nvar INTERPOLATION_BLACKLIST_REGEXPS = [\n    /^\\s*$/,\n    /[<>]/,\n    /^[{}]$/,\n    /&(#|[a-z])/i,\n    /^\\/\\//,\n];\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertInterpolationSymbols(identifier, value) {\n    if (value != null && !(Array.isArray(value) && value.length == 2)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array, [start, end].\");\n    }\n    else if (_angular_core.isDevMode() && value != null) {\n        var /** @type {?} */ start_1 = (value[0]);\n        var /** @type {?} */ end_1 = (value[1]);\n        // black list checking\n        INTERPOLATION_BLACKLIST_REGEXPS.forEach(function (regexp) {\n            if (regexp.test(start_1) || regexp.test(end_1)) {\n                throw new Error(\"['\" + start_1 + \"', '\" + end_1 + \"'] contains unusable interpolation symbol.\");\n            }\n        });\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar InterpolationConfig = (function () {\n    /**\n     * @param {?} start\n     * @param {?} end\n     */\n    function InterpolationConfig(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    /**\n     * @param {?} markers\n     * @return {?}\n     */\n    InterpolationConfig.fromArray = function (markers) {\n        if (!markers) {\n            return DEFAULT_INTERPOLATION_CONFIG;\n        }\n        assertInterpolationSymbols('interpolation', markers);\n        return new InterpolationConfig(markers[0], markers[1]);\n    };\n    \n    return InterpolationConfig;\n}());\nvar DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TokenType = {};\nTokenType.Character = 0;\nTokenType.Identifier = 1;\nTokenType.Keyword = 2;\nTokenType.String = 3;\nTokenType.Operator = 4;\nTokenType.Number = 5;\nTokenType.Error = 6;\nTokenType[TokenType.Character] = \"Character\";\nTokenType[TokenType.Identifier] = \"Identifier\";\nTokenType[TokenType.Keyword] = \"Keyword\";\nTokenType[TokenType.String] = \"String\";\nTokenType[TokenType.Operator] = \"Operator\";\nTokenType[TokenType.Number] = \"Number\";\nTokenType[TokenType.Error] = \"Error\";\nvar KEYWORDS = ['var', 'let', 'as', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\nvar Lexer = (function () {\n    function Lexer() {\n    }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    Lexer.prototype.tokenize = function (text) {\n        var /** @type {?} */ scanner = new _Scanner(text);\n        var /** @type {?} */ tokens = [];\n        var /** @type {?} */ token = scanner.scanToken();\n        while (token != null) {\n            tokens.push(token);\n            token = scanner.scanToken();\n        }\n        return tokens;\n    };\n    return Lexer;\n}());\nLexer.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nLexer.ctorParameters = function () { return []; };\nvar Token = (function () {\n    /**\n     * @param {?} index\n     * @param {?} type\n     * @param {?} numValue\n     * @param {?} strValue\n     */\n    function Token(index, type, numValue, strValue) {\n        this.index = index;\n        this.type = type;\n        this.numValue = numValue;\n        this.strValue = strValue;\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    Token.prototype.isCharacter = function (code) {\n        return this.type == TokenType.Character && this.numValue == code;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isNumber = function () { return this.type == TokenType.Number; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isString = function () { return this.type == TokenType.String; };\n    /**\n     * @param {?} operater\n     * @return {?}\n     */\n    Token.prototype.isOperator = function (operater) {\n        return this.type == TokenType.Operator && this.strValue == operater;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isIdentifier = function () { return this.type == TokenType.Identifier; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeyword = function () { return this.type == TokenType.Keyword; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordLet = function () { return this.type == TokenType.Keyword && this.strValue == 'let'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordAs = function () { return this.type == TokenType.Keyword && this.strValue == 'as'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordNull = function () { return this.type == TokenType.Keyword && this.strValue == 'null'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordUndefined = function () {\n        return this.type == TokenType.Keyword && this.strValue == 'undefined';\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordTrue = function () { return this.type == TokenType.Keyword && this.strValue == 'true'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordFalse = function () { return this.type == TokenType.Keyword && this.strValue == 'false'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordThis = function () { return this.type == TokenType.Keyword && this.strValue == 'this'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isError = function () { return this.type == TokenType.Error; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toNumber = function () { return this.type == TokenType.Number ? this.numValue : -1; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toString = function () {\n        switch (this.type) {\n            case TokenType.Character:\n            case TokenType.Identifier:\n            case TokenType.Keyword:\n            case TokenType.Operator:\n            case TokenType.String:\n            case TokenType.Error:\n                return this.strValue;\n            case TokenType.Number:\n                return this.numValue.toString();\n            default:\n                return null;\n        }\n    };\n    return Token;\n}());\n/**\n * @param {?} index\n * @param {?} code\n * @return {?}\n */\nfunction newCharacterToken(index, code) {\n    return new Token(index, TokenType.Character, code, String.fromCharCode(code));\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newIdentifierToken(index, text) {\n    return new Token(index, TokenType.Identifier, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newKeywordToken(index, text) {\n    return new Token(index, TokenType.Keyword, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newOperatorToken(index, text) {\n    return new Token(index, TokenType.Operator, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newStringToken(index, text) {\n    return new Token(index, TokenType.String, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} n\n * @return {?}\n */\nfunction newNumberToken(index, n) {\n    return new Token(index, TokenType.Number, n, '');\n}\n/**\n * @param {?} index\n * @param {?} message\n * @return {?}\n */\nfunction newErrorToken(index, message) {\n    return new Token(index, TokenType.Error, 0, message);\n}\nvar EOF = new Token(-1, TokenType.Character, 0, '');\nvar _Scanner = (function () {\n    /**\n     * @param {?} input\n     */\n    function _Scanner(input) {\n        this.input = input;\n        this.peek = 0;\n        this.index = -1;\n        this.length = input.length;\n        this.advance();\n    }\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.advance = function () {\n        this.peek = ++this.index >= this.length ? $EOF : this.input.charCodeAt(this.index);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanToken = function () {\n        var /** @type {?} */ input = this.input, /** @type {?} */ length = this.length;\n        var /** @type {?} */ peek = this.peek, /** @type {?} */ index = this.index;\n        // Skip whitespace.\n        while (peek <= $SPACE) {\n            if (++index >= length) {\n                peek = $EOF;\n                break;\n            }\n            else {\n                peek = input.charCodeAt(index);\n            }\n        }\n        this.peek = peek;\n        this.index = index;\n        if (index >= length) {\n            return null;\n        }\n        // Handle identifiers and numbers.\n        if (isIdentifierStart(peek))\n            return this.scanIdentifier();\n        if (isDigit(peek))\n            return this.scanNumber(index);\n        var /** @type {?} */ start = index;\n        switch (peek) {\n            case $PERIOD:\n                this.advance();\n                return isDigit(this.peek) ? this.scanNumber(start) :\n                    newCharacterToken(start, $PERIOD);\n            case $LPAREN:\n            case $RPAREN:\n            case $LBRACE:\n            case $RBRACE:\n            case $LBRACKET:\n            case $RBRACKET:\n            case $COMMA:\n            case $COLON:\n            case $SEMICOLON:\n                return this.scanCharacter(start, peek);\n            case $SQ:\n            case $DQ:\n                return this.scanString();\n            case $HASH:\n            case $PLUS:\n            case $MINUS:\n            case $STAR:\n            case $SLASH:\n            case $PERCENT:\n            case $CARET:\n                return this.scanOperator(start, String.fromCharCode(peek));\n            case $QUESTION:\n                return this.scanComplexOperator(start, '?', $PERIOD, '.');\n            case $LT:\n            case $GT:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=');\n            case $BANG:\n            case $EQ:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=', $EQ, '=');\n            case $AMPERSAND:\n                return this.scanComplexOperator(start, '&', $AMPERSAND, '&');\n            case $BAR:\n                return this.scanComplexOperator(start, '|', $BAR, '|');\n            case $NBSP:\n                while (isWhitespace(this.peek))\n                    this.advance();\n                return this.scanToken();\n        }\n        this.advance();\n        return this.error(\"Unexpected character [\" + String.fromCharCode(peek) + \"]\", 0);\n    };\n    /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    _Scanner.prototype.scanCharacter = function (start, code) {\n        this.advance();\n        return newCharacterToken(start, code);\n    };\n    /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    _Scanner.prototype.scanOperator = function (start, str) {\n        this.advance();\n        return newOperatorToken(start, str);\n    };\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    _Scanner.prototype.scanComplexOperator = function (start, one, twoCode, two, threeCode, three) {\n        this.advance();\n        var /** @type {?} */ str = one;\n        if (this.peek == twoCode) {\n            this.advance();\n            str += two;\n        }\n        if (threeCode != null && this.peek == threeCode) {\n            this.advance();\n            str += three;\n        }\n        return newOperatorToken(start, str);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanIdentifier = function () {\n        var /** @type {?} */ start = this.index;\n        this.advance();\n        while (isIdentifierPart(this.peek))\n            this.advance();\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n            newIdentifierToken(start, str);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Scanner.prototype.scanNumber = function (start) {\n        var /** @type {?} */ simple = (this.index === start);\n        this.advance(); // Skip initial digit.\n        while (true) {\n            if (isDigit(this.peek)) {\n            }\n            else if (this.peek == $PERIOD) {\n                simple = false;\n            }\n            else if (isExponentStart(this.peek)) {\n                this.advance();\n                if (isExponentSign(this.peek))\n                    this.advance();\n                if (!isDigit(this.peek))\n                    return this.error('Invalid exponent', -1);\n                simple = false;\n            }\n            else {\n                break;\n            }\n            this.advance();\n        }\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        var /** @type {?} */ value = simple ? parseIntAutoRadix(str) : parseFloat(str);\n        return newNumberToken(start, value);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanString = function () {\n        var /** @type {?} */ start = this.index;\n        var /** @type {?} */ quote = this.peek;\n        this.advance(); // Skip initial quote.\n        var /** @type {?} */ buffer = '';\n        var /** @type {?} */ marker = this.index;\n        var /** @type {?} */ input = this.input;\n        while (this.peek != quote) {\n            if (this.peek == $BACKSLASH) {\n                buffer += input.substring(marker, this.index);\n                this.advance();\n                var /** @type {?} */ unescapedCode = void 0;\n                // Workaround for TS2.1-introduced type strictness\n                this.peek = this.peek;\n                if (this.peek == $u) {\n                    // 4 character hex code for unicode character.\n                    var /** @type {?} */ hex = input.substring(this.index + 1, this.index + 5);\n                    if (/^[0-9a-f]+$/i.test(hex)) {\n                        unescapedCode = parseInt(hex, 16);\n                    }\n                    else {\n                        return this.error(\"Invalid unicode escape [\\\\u\" + hex + \"]\", 0);\n                    }\n                    for (var /** @type {?} */ i = 0; i < 5; i++) {\n                        this.advance();\n                    }\n                }\n                else {\n                    unescapedCode = unescape(this.peek);\n                    this.advance();\n                }\n                buffer += String.fromCharCode(unescapedCode);\n                marker = this.index;\n            }\n            else if (this.peek == $EOF) {\n                return this.error('Unterminated quote', 0);\n            }\n            else {\n                this.advance();\n            }\n        }\n        var /** @type {?} */ last = input.substring(marker, this.index);\n        this.advance(); // Skip terminating quote.\n        return newStringToken(start, buffer + last);\n    };\n    /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    _Scanner.prototype.error = function (message, offset) {\n        var /** @type {?} */ position = this.index + offset;\n        return newErrorToken(position, \"Lexer Error: \" + message + \" at column \" + position + \" in expression [\" + this.input + \"]\");\n    };\n    return _Scanner;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierStart(code) {\n    return ($a <= code && code <= $z) || ($A <= code && code <= $Z) ||\n        (code == $_) || (code == $$);\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction isIdentifier(input) {\n    if (input.length == 0)\n        return false;\n    var /** @type {?} */ scanner = new _Scanner(input);\n    if (!isIdentifierStart(scanner.peek))\n        return false;\n    scanner.advance();\n    while (scanner.peek !== $EOF) {\n        if (!isIdentifierPart(scanner.peek))\n            return false;\n        scanner.advance();\n    }\n    return true;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierPart(code) {\n    return isAsciiLetter(code) || isDigit(code) || (code == $_) ||\n        (code == $$);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentStart(code) {\n    return code == $e || code == $E;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentSign(code) {\n    return code == $MINUS || code == $PLUS;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isQuote(code) {\n    return code === $SQ || code === $DQ || code === $BT;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction unescape(code) {\n    switch (code) {\n        case $n:\n            return $LF;\n        case $f:\n            return $FF;\n        case $r:\n            return $CR;\n        case $t:\n            return $TAB;\n        case $v:\n            return $VTAB;\n        default:\n            return code;\n    }\n}\n/**\n * @param {?} text\n * @return {?}\n */\nfunction parseIntAutoRadix(text) {\n    var /** @type {?} */ result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SplitInterpolation = (function () {\n    /**\n     * @param {?} strings\n     * @param {?} expressions\n     * @param {?} offsets\n     */\n    function SplitInterpolation(strings, expressions, offsets) {\n        this.strings = strings;\n        this.expressions = expressions;\n        this.offsets = offsets;\n    }\n    return SplitInterpolation;\n}());\nvar TemplateBindingParseResult = (function () {\n    /**\n     * @param {?} templateBindings\n     * @param {?} warnings\n     * @param {?} errors\n     */\n    function TemplateBindingParseResult(templateBindings, warnings, errors) {\n        this.templateBindings = templateBindings;\n        this.warnings = warnings;\n        this.errors = errors;\n    }\n    return TemplateBindingParseResult;\n}());\n/**\n * @param {?} config\n * @return {?}\n */\nfunction _createInterpolateRegExp(config) {\n    var /** @type {?} */ pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n    return new RegExp(pattern, 'g');\n}\nvar Parser = (function () {\n    /**\n     * @param {?} _lexer\n     */\n    function Parser(_lexer) {\n        this._lexer = _lexer;\n        this.errors = [];\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseAction = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(this._stripComments(input));\n        var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseBinding = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseSimpleBinding = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        var /** @type {?} */ errors = SimpleExpressionChecker.check(ast);\n        if (errors.length > 0) {\n            this._reportError(\"Host binding expression cannot contain \" + errors.join(' '), input, location);\n        }\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    Parser.prototype._reportError = function (message, input, errLocation, ctxLocation) {\n        this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._parseBindingAst = function (input, location, interpolationConfig) {\n        // Quotes expressions use 3rd-party expression language. We don't want to use\n        // our lexer or parser for that, so we check for that ahead of time.\n        var /** @type {?} */ quote = this._parseQuote(input, location);\n        if (quote != null) {\n            return quote;\n        }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n        return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype._parseQuote = function (input, location) {\n        if (input == null)\n            return null;\n        var /** @type {?} */ prefixSeparatorIndex = input.indexOf(':');\n        if (prefixSeparatorIndex == -1)\n            return null;\n        var /** @type {?} */ prefix = input.substring(0, prefixSeparatorIndex).trim();\n        if (!isIdentifier(prefix))\n            return null;\n        var /** @type {?} */ uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n        return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.parseTemplateBindings = function (prefixToken, input, location) {\n        var /** @type {?} */ tokens = this._lexer.tokenize(input);\n        if (prefixToken) {\n            // Prefix the tokens with the tokens from prefixToken but have them take no space (0 index).\n            var /** @type {?} */ prefixTokens = this._lexer.tokenize(prefixToken).map(function (t) {\n                t.index = 0;\n                return t;\n            });\n            tokens.unshift.apply(tokens, prefixTokens);\n        }\n        return new _ParseAST(input, location, tokens, input.length, false, this.errors, 0)\n            .parseTemplateBindings();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseInterpolation = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ split = this.splitInterpolation(input, location, interpolationConfig);\n        if (split == null)\n            return null;\n        var /** @type {?} */ expressions = [];\n        for (var /** @type {?} */ i = 0; i < split.expressions.length; ++i) {\n            var /** @type {?} */ expressionText = split.expressions[i];\n            var /** @type {?} */ sourceToLex = this._stripComments(expressionText);\n            var /** @type {?} */ tokens = this._lexer.tokenize(this._stripComments(split.expressions[i]));\n            var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n                .parseChain();\n            expressions.push(ast);\n        }\n        return new ASTWithSource(new Interpolation(new ParseSpan(0, input == null ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.splitInterpolation = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length <= 1) {\n            return null;\n        }\n        var /** @type {?} */ strings = [];\n        var /** @type {?} */ expressions = [];\n        var /** @type {?} */ offsets = [];\n        var /** @type {?} */ offset = 0;\n        for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n            var /** @type {?} */ part = parts[i];\n            if (i % 2 === 0) {\n                // fixed string\n                strings.push(part);\n                offset += part.length;\n            }\n            else if (part.trim().length > 0) {\n                offset += interpolationConfig.start.length;\n                expressions.push(part);\n                offsets.push(offset);\n                offset += part.length + interpolationConfig.end.length;\n            }\n            else {\n                this._reportError('Blank expressions are not allowed in interpolated strings', input, \"at column \" + this._findInterpolationErrorColumn(parts, i, interpolationConfig) + \" in\", location);\n                expressions.push('$implict');\n                offsets.push(offset);\n            }\n        }\n        return new SplitInterpolation(strings, expressions, offsets);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.wrapLiteralPrimitive = function (input, location) {\n        return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, input == null ? 0 : input.length), input), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._stripComments = function (input) {\n        var /** @type {?} */ i = this._commentStart(input);\n        return i != null ? input.substring(0, i).trim() : input;\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._commentStart = function (input) {\n        var /** @type {?} */ outerQuote = null;\n        for (var /** @type {?} */ i = 0; i < input.length - 1; i++) {\n            var /** @type {?} */ char = input.charCodeAt(i);\n            var /** @type {?} */ nextChar = input.charCodeAt(i + 1);\n            if (char === $SLASH && nextChar == $SLASH && outerQuote == null)\n                return i;\n            if (outerQuote === char) {\n                outerQuote = null;\n            }\n            else if (outerQuote == null && isQuote(char)) {\n                outerQuote = char;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._checkNoInterpolation = function (input, location, interpolationConfig) {\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length > 1) {\n            this._reportError(\"Got interpolation (\" + interpolationConfig.start + interpolationConfig.end + \") where expression was expected\", input, \"at column \" + this._findInterpolationErrorColumn(parts, 1, interpolationConfig) + \" in\", location);\n        }\n    };\n    /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._findInterpolationErrorColumn = function (parts, partInErrIdx, interpolationConfig) {\n        var /** @type {?} */ errLocation = '';\n        for (var /** @type {?} */ j = 0; j < partInErrIdx; j++) {\n            errLocation += j % 2 === 0 ?\n                parts[j] :\n                \"\" + interpolationConfig.start + parts[j] + interpolationConfig.end;\n        }\n        return errLocation.length;\n    };\n    return Parser;\n}());\nParser.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nParser.ctorParameters = function () { return [\n    { type: Lexer, },\n]; };\nvar _ParseAST = (function () {\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} tokens\n     * @param {?} inputLength\n     * @param {?} parseAction\n     * @param {?} errors\n     * @param {?} offset\n     */\n    function _ParseAST(input, location, tokens, inputLength, parseAction, errors, offset) {\n        this.input = input;\n        this.location = location;\n        this.tokens = tokens;\n        this.inputLength = inputLength;\n        this.parseAction = parseAction;\n        this.errors = errors;\n        this.offset = offset;\n        this.rparensExpected = 0;\n        this.rbracketsExpected = 0;\n        this.rbracesExpected = 0;\n        this.index = 0;\n    }\n    /**\n     * @param {?} offset\n     * @return {?}\n     */\n    _ParseAST.prototype.peek = function (offset) {\n        var /** @type {?} */ i = this.index + offset;\n        return i < this.tokens.length ? this.tokens[i] : EOF;\n    };\n    Object.defineProperty(_ParseAST.prototype, \"next\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.peek(0); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_ParseAST.prototype, \"inputIndex\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return (this.index < this.tokens.length) ? this.next.index + this.offset :\n                this.inputLength + this.offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _ParseAST.prototype.span = function (start) { return new ParseSpan(start, this.inputIndex); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.advance = function () { this.index++; };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalCharacter = function (code) {\n        if (this.next.isCharacter(code)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordLet = function () { return this.next.isKeywordLet(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordAs = function () { return this.next.isKeywordAs(); };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.expectCharacter = function (code) {\n        if (this.optionalCharacter(code))\n            return;\n        this.error(\"Missing expected \" + String.fromCharCode(code));\n    };\n    /**\n     * @param {?} op\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalOperator = function (op) {\n        if (this.next.isOperator(op)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @param {?} operator\n     * @return {?}\n     */\n    _ParseAST.prototype.expectOperator = function (operator) {\n        if (this.optionalOperator(operator))\n            return;\n        this.error(\"Missing expected operator \" + operator);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeyword = function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier or keyword\");\n            return '';\n        }\n        this.advance();\n        return n.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeywordOrString = function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier, keyword, or string\");\n            return '';\n        }\n        this.advance();\n        return n.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseChain = function () {\n        var /** @type {?} */ exprs = [];\n        var /** @type {?} */ start = this.inputIndex;\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ expr = this.parsePipe();\n            exprs.push(expr);\n            if (this.optionalCharacter($SEMICOLON)) {\n                if (!this.parseAction) {\n                    this.error('Binding expression cannot contain chained expression');\n                }\n                while (this.optionalCharacter($SEMICOLON)) {\n                } // read all semicolons\n            }\n            else if (this.index < this.tokens.length) {\n                this.error(\"Unexpected token '\" + this.next + \"'\");\n            }\n        }\n        if (exprs.length == 0)\n            return new EmptyExpr(this.span(start));\n        if (exprs.length == 1)\n            return exprs[0];\n        return new Chain(this.span(start), exprs);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePipe = function () {\n        var /** @type {?} */ result = this.parseExpression();\n        if (this.optionalOperator('|')) {\n            if (this.parseAction) {\n                this.error('Cannot have a pipe in an action expression');\n            }\n            do {\n                var /** @type {?} */ name = ((this.expectIdentifierOrKeyword()));\n                var /** @type {?} */ args = [];\n                while (this.optionalCharacter($COLON)) {\n                    args.push(this.parseExpression());\n                }\n                result = new BindingPipe(this.span(result.span.start), result, name, args);\n            } while (this.optionalOperator('|'));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpression = function () { return this.parseConditional(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseConditional = function () {\n        var /** @type {?} */ start = this.inputIndex;\n        var /** @type {?} */ result = this.parseLogicalOr();\n        if (this.optionalOperator('?')) {\n            var /** @type {?} */ yes = this.parsePipe();\n            var /** @type {?} */ no = void 0;\n            if (!this.optionalCharacter($COLON)) {\n                var /** @type {?} */ end = this.inputIndex;\n                var /** @type {?} */ expression = this.input.substring(start, end);\n                this.error(\"Conditional expression \" + expression + \" requires all 3 expressions\");\n                no = new EmptyExpr(this.span(start));\n            }\n            else {\n                no = this.parsePipe();\n            }\n            return new Conditional(this.span(start), result, yes, no);\n        }\n        else {\n            return result;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalOr = function () {\n        // '||'\n        var /** @type {?} */ result = this.parseLogicalAnd();\n        while (this.optionalOperator('||')) {\n            var /** @type {?} */ right = this.parseLogicalAnd();\n            result = new Binary(this.span(result.span.start), '||', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalAnd = function () {\n        // '&&'\n        var /** @type {?} */ result = this.parseEquality();\n        while (this.optionalOperator('&&')) {\n            var /** @type {?} */ right = this.parseEquality();\n            result = new Binary(this.span(result.span.start), '&&', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseEquality = function () {\n        // '==','!=','===','!=='\n        var /** @type {?} */ result = this.parseRelational();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '==':\n                case '===':\n                case '!=':\n                case '!==':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseRelational();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseRelational = function () {\n        // '<', '>', '<=', '>='\n        var /** @type {?} */ result = this.parseAdditive();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '<':\n                case '>':\n                case '<=':\n                case '>=':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseAdditive();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAdditive = function () {\n        // '+', '-'\n        var /** @type {?} */ result = this.parseMultiplicative();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '+':\n                case '-':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseMultiplicative();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseMultiplicative = function () {\n        // '*', '%', '/'\n        var /** @type {?} */ result = this.parsePrefix();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '*':\n                case '%':\n                case '/':\n                    this.advance();\n                    var /** @type {?} */ right = this.parsePrefix();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrefix = function () {\n        if (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ operator = this.next.strValue;\n            var /** @type {?} */ result = void 0;\n            switch (operator) {\n                case '+':\n                    this.advance();\n                    return this.parsePrefix();\n                case '-':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n                case '!':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new PrefixNot(this.span(start), result);\n            }\n        }\n        return this.parseCallChain();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallChain = function () {\n        var /** @type {?} */ result = this.parsePrimary();\n        while (true) {\n            if (this.optionalCharacter($PERIOD)) {\n                result = this.parseAccessMemberOrMethodCall(result, false);\n            }\n            else if (this.optionalOperator('?.')) {\n                result = this.parseAccessMemberOrMethodCall(result, true);\n            }\n            else if (this.optionalCharacter($LBRACKET)) {\n                this.rbracketsExpected++;\n                var /** @type {?} */ key = this.parsePipe();\n                this.rbracketsExpected--;\n                this.expectCharacter($RBRACKET);\n                if (this.optionalOperator('=')) {\n                    var /** @type {?} */ value = this.parseConditional();\n                    result = new KeyedWrite(this.span(result.span.start), result, key, value);\n                }\n                else {\n                    result = new KeyedRead(this.span(result.span.start), result, key);\n                }\n            }\n            else if (this.optionalCharacter($LPAREN)) {\n                this.rparensExpected++;\n                var /** @type {?} */ args = this.parseCallArguments();\n                this.rparensExpected--;\n                this.expectCharacter($RPAREN);\n                result = new FunctionCall(this.span(result.span.start), result, args);\n            }\n            else if (this.optionalOperator('!')) {\n                result = new NonNullAssert(this.span(result.span.start), result);\n            }\n            else {\n                return result;\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrimary = function () {\n        var /** @type {?} */ start = this.inputIndex;\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ result = this.parsePipe();\n            this.rparensExpected--;\n            this.expectCharacter($RPAREN);\n            return result;\n        }\n        else if (this.next.isKeywordNull()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), null);\n        }\n        else if (this.next.isKeywordUndefined()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), void 0);\n        }\n        else if (this.next.isKeywordTrue()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), true);\n        }\n        else if (this.next.isKeywordFalse()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), false);\n        }\n        else if (this.next.isKeywordThis()) {\n            this.advance();\n            return new ImplicitReceiver(this.span(start));\n        }\n        else if (this.optionalCharacter($LBRACKET)) {\n            this.rbracketsExpected++;\n            var /** @type {?} */ elements = this.parseExpressionList($RBRACKET);\n            this.rbracketsExpected--;\n            this.expectCharacter($RBRACKET);\n            return new LiteralArray(this.span(start), elements);\n        }\n        else if (this.next.isCharacter($LBRACE)) {\n            return this.parseLiteralMap();\n        }\n        else if (this.next.isIdentifier()) {\n            return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n        }\n        else if (this.next.isNumber()) {\n            var /** @type {?} */ value = this.next.toNumber();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), value);\n        }\n        else if (this.next.isString()) {\n            var /** @type {?} */ literalValue = this.next.toString();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), literalValue);\n        }\n        else if (this.index >= this.tokens.length) {\n            this.error(\"Unexpected end of expression: \" + this.input);\n            return new EmptyExpr(this.span(start));\n        }\n        else {\n            this.error(\"Unexpected token \" + this.next);\n            return new EmptyExpr(this.span(start));\n        }\n    };\n    /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpressionList = function (terminator) {\n        var /** @type {?} */ result = [];\n        if (!this.next.isCharacter(terminator)) {\n            do {\n                result.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLiteralMap = function () {\n        var /** @type {?} */ keys = [];\n        var /** @type {?} */ values = [];\n        var /** @type {?} */ start = this.inputIndex;\n        this.expectCharacter($LBRACE);\n        if (!this.optionalCharacter($RBRACE)) {\n            this.rbracesExpected++;\n            do {\n                var /** @type {?} */ key = ((this.expectIdentifierOrKeywordOrString()));\n                keys.push(key);\n                this.expectCharacter($COLON);\n                values.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n            this.rbracesExpected--;\n            this.expectCharacter($RBRACE);\n        }\n        return new LiteralMap(this.span(start), keys, values);\n    };\n    /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAccessMemberOrMethodCall = function (receiver, isSafe) {\n        if (isSafe === void 0) { isSafe = false; }\n        var /** @type {?} */ start = receiver.span.start;\n        var /** @type {?} */ id = ((this.expectIdentifierOrKeyword()));\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ args = this.parseCallArguments();\n            this.expectCharacter($RPAREN);\n            this.rparensExpected--;\n            var /** @type {?} */ span = this.span(start);\n            return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                new MethodCall(span, receiver, id, args);\n        }\n        else {\n            if (isSafe) {\n                if (this.optionalOperator('=')) {\n                    this.error('The \\'?.\\' operator cannot be used in the assignment');\n                    return new EmptyExpr(this.span(start));\n                }\n                else {\n                    return new SafePropertyRead(this.span(start), receiver, id);\n                }\n            }\n            else {\n                if (this.optionalOperator('=')) {\n                    if (!this.parseAction) {\n                        this.error('Bindings cannot contain assignments');\n                        return new EmptyExpr(this.span(start));\n                    }\n                    var /** @type {?} */ value = this.parseConditional();\n                    return new PropertyWrite(this.span(start), receiver, id, value);\n                }\n                else {\n                    return new PropertyRead(this.span(start), receiver, id);\n                }\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallArguments = function () {\n        if (this.next.isCharacter($RPAREN))\n            return [];\n        var /** @type {?} */ positionals = [];\n        do {\n            positionals.push(this.parsePipe());\n        } while (this.optionalCharacter($COMMA));\n        return (positionals);\n    };\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    _ParseAST.prototype.expectTemplateBindingKey = function () {\n        var /** @type {?} */ result = '';\n        var /** @type {?} */ operatorFound = false;\n        do {\n            result += this.expectIdentifierOrKeywordOrString();\n            operatorFound = this.optionalOperator('-');\n            if (operatorFound) {\n                result += '-';\n            }\n        } while (operatorFound);\n        return result.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseTemplateBindings = function () {\n        var /** @type {?} */ bindings = [];\n        var /** @type {?} */ prefix = ((null));\n        var /** @type {?} */ warnings = [];\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ keyIsVar = this.peekKeywordLet();\n            if (keyIsVar) {\n                this.advance();\n            }\n            var /** @type {?} */ rawKey = this.expectTemplateBindingKey();\n            var /** @type {?} */ key = rawKey;\n            if (!keyIsVar) {\n                if (prefix == null) {\n                    prefix = key;\n                }\n                else {\n                    key = prefix + key[0].toUpperCase() + key.substring(1);\n                }\n            }\n            this.optionalCharacter($COLON);\n            var /** @type {?} */ name = ((null));\n            var /** @type {?} */ expression = ((null));\n            if (keyIsVar) {\n                if (this.optionalOperator('=')) {\n                    name = this.expectTemplateBindingKey();\n                }\n                else {\n                    name = '\\$implicit';\n                }\n            }\n            else if (this.peekKeywordAs()) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                name = rawKey;\n                key = this.expectTemplateBindingKey(); // read local var name\n                keyIsVar = true;\n            }\n            else if (this.next !== EOF && !this.peekKeywordLet()) {\n                var /** @type {?} */ start_2 = this.inputIndex;\n                var /** @type {?} */ ast = this.parsePipe();\n                var /** @type {?} */ source = this.input.substring(start_2 - this.offset, this.inputIndex - this.offset);\n                expression = new ASTWithSource(ast, source, this.location, this.errors);\n            }\n            bindings.push(new TemplateBinding(this.span(start), key, keyIsVar, name, expression));\n            if (this.peekKeywordAs() && !keyIsVar) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                var /** @type {?} */ letName = this.expectTemplateBindingKey(); // read local var name\n                bindings.push(new TemplateBinding(this.span(letStart), letName, true, key, /** @type {?} */ ((null))));\n            }\n            if (!this.optionalCharacter($SEMICOLON)) {\n                this.optionalCharacter($COMMA);\n            }\n        }\n        return new TemplateBindingParseResult(bindings, warnings, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.error = function (message, index) {\n        if (index === void 0) { index = null; }\n        this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n        this.skip();\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.locationText = function (index) {\n        if (index === void 0) { index = null; }\n        if (index == null)\n            index = this.index;\n        return (index < this.tokens.length) ? \"at column \" + (this.tokens[index].index + 1) + \" in\" :\n            \"at the end of the expression\";\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.skip = function () {\n        var /** @type {?} */ n = this.next;\n        while (this.index < this.tokens.length && !n.isCharacter($SEMICOLON) &&\n            (this.rparensExpected <= 0 || !n.isCharacter($RPAREN)) &&\n            (this.rbracesExpected <= 0 || !n.isCharacter($RBRACE)) &&\n            (this.rbracketsExpected <= 0 || !n.isCharacter($RBRACKET))) {\n            if (this.next.isError()) {\n                this.errors.push(new ParserError(/** @type {?} */ ((this.next.toString())), this.input, this.locationText(), this.location));\n            }\n            this.advance();\n            n = this.next;\n        }\n    };\n    return _ParseAST;\n}());\nvar SimpleExpressionChecker = (function () {\n    function SimpleExpressionChecker() {\n        this.errors = [];\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    SimpleExpressionChecker.check = function (ast) {\n        var /** @type {?} */ s = new SimpleExpressionChecker();\n        ast.visit(s);\n        return s.errors;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitImplicitReceiver = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitInterpolation = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralPrimitive = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyWrite = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafePropertyRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitMethodCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafeMethodCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitFunctionCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralArray = function (ast, context) { this.visitAll(ast.expressions); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralMap = function (ast, context) { this.visitAll(ast.values); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitBinary = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPrefixNot = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitNonNullAssert = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitConditional = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPipe = function (ast, context) { this.errors.push('pipes'); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedWrite = function (ast, context) { };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitAll = function (asts) {\n        var _this = this;\n        return asts.map(function (node) { return node.visit(_this); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitChain = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitQuote = function (ast, context) { };\n    return SimpleExpressionChecker;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParseLocation = (function () {\n    /**\n     * @param {?} file\n     * @param {?} offset\n     * @param {?} line\n     * @param {?} col\n     */\n    function ParseLocation(file, offset, line, col) {\n        this.file = file;\n        this.offset = offset;\n        this.line = line;\n        this.col = col;\n    }\n    /**\n     * @return {?}\n     */\n    ParseLocation.prototype.toString = function () {\n        return this.offset != null ? this.file.url + \"@\" + this.line + \":\" + this.col : this.file.url;\n    };\n    /**\n     * @param {?} delta\n     * @return {?}\n     */\n    ParseLocation.prototype.moveBy = function (delta) {\n        var /** @type {?} */ source = this.file.content;\n        var /** @type {?} */ len = source.length;\n        var /** @type {?} */ offset = this.offset;\n        var /** @type {?} */ line = this.line;\n        var /** @type {?} */ col = this.col;\n        while (offset > 0 && delta < 0) {\n            offset--;\n            delta++;\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            if (ch == $LF) {\n                line--;\n                var /** @type {?} */ priorLine = source.substr(0, offset - 1).lastIndexOf(String.fromCharCode($LF));\n                col = priorLine > 0 ? offset - priorLine : offset;\n            }\n            else {\n                col--;\n            }\n        }\n        while (offset < len && delta > 0) {\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            offset++;\n            delta--;\n            if (ch == $LF) {\n                line++;\n                col = 0;\n            }\n            else {\n                col++;\n            }\n        }\n        return new ParseLocation(this.file, offset, line, col);\n    };\n    /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    ParseLocation.prototype.getContext = function (maxChars, maxLines) {\n        var /** @type {?} */ content = this.file.content;\n        var /** @type {?} */ startOffset = this.offset;\n        if (startOffset != null) {\n            if (startOffset > content.length - 1) {\n                startOffset = content.length - 1;\n            }\n            var /** @type {?} */ endOffset = startOffset;\n            var /** @type {?} */ ctxChars = 0;\n            var /** @type {?} */ ctxLines = 0;\n            while (ctxChars < maxChars && startOffset > 0) {\n                startOffset--;\n                ctxChars++;\n                if (content[startOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            ctxChars = 0;\n            ctxLines = 0;\n            while (ctxChars < maxChars && endOffset < content.length - 1) {\n                endOffset++;\n                ctxChars++;\n                if (content[endOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            return {\n                before: content.substring(startOffset, this.offset),\n                after: content.substring(this.offset, endOffset + 1),\n            };\n        }\n        return null;\n    };\n    return ParseLocation;\n}());\nvar ParseSourceFile = (function () {\n    /**\n     * @param {?} content\n     * @param {?} url\n     */\n    function ParseSourceFile(content, url) {\n        this.content = content;\n        this.url = url;\n    }\n    return ParseSourceFile;\n}());\nvar ParseSourceSpan = (function () {\n    /**\n     * @param {?} start\n     * @param {?} end\n     * @param {?=} details\n     */\n    function ParseSourceSpan(start, end, details) {\n        if (details === void 0) { details = null; }\n        this.start = start;\n        this.end = end;\n        this.details = details;\n    }\n    /**\n     * @return {?}\n     */\n    ParseSourceSpan.prototype.toString = function () {\n        return this.start.file.content.substring(this.start.offset, this.end.offset);\n    };\n    return ParseSourceSpan;\n}());\nvar ParseErrorLevel = {};\nParseErrorLevel.WARNING = 0;\nParseErrorLevel.ERROR = 1;\nParseErrorLevel[ParseErrorLevel.WARNING] = \"WARNING\";\nParseErrorLevel[ParseErrorLevel.ERROR] = \"ERROR\";\nvar ParseError = (function () {\n    /**\n     * @param {?} span\n     * @param {?} msg\n     * @param {?=} level\n     */\n    function ParseError(span, msg, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this.span = span;\n        this.msg = msg;\n        this.level = level;\n    }\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.toString = function () {\n        var /** @type {?} */ ctx = this.span.start.getContext(100, 3);\n        var /** @type {?} */ contextStr = ctx ? \" (\\\"\" + ctx.before + \"[\" + ParseErrorLevel[this.level] + \" ->]\" + ctx.after + \"\\\")\" : '';\n        var /** @type {?} */ details = this.span.details ? \", \" + this.span.details : '';\n        return \"\" + this.msg + contextStr + \": \" + this.span.start + details;\n    };\n    return ParseError;\n}());\n/**\n * @param {?} kind\n * @param {?} type\n * @return {?}\n */\nfunction typeSourceSpan(kind, type) {\n    var /** @type {?} */ moduleUrl = identifierModuleUrl(type);\n    var /** @type {?} */ sourceFileName = moduleUrl != null ? \"in \" + kind + \" \" + identifierName(type) + \" in \" + moduleUrl :\n        \"in \" + kind + \" \" + identifierName(type);\n    var /** @type {?} */ sourceFile = new ParseSourceFile('', sourceFileName);\n    return new ParseSourceSpan(new ParseLocation(sourceFile, -1, -1, -1), new ParseLocation(sourceFile, -1, -1, -1));\n}\n/**\n * A path is an ordered set of elements. Typically a path is to  a\n * particular offset in a source file. The head of the list is the top\n * most node. The tail is the node that contains the offset directly.\n *\n * For example, the expresion `a + b + c` might have an ast that looks\n * like:\n *     +\n *    / \\\n *   a   +\n *      / \\\n *     b   c\n *\n * The path to the node at offset 9 would be `['+' at 1-10, '+' at 7-10,\n * 'c' at 9-10]` and the path the node at offset 1 would be\n * `['+' at 1-10, 'a' at 1-2]`.\n */\nvar AstPath = (function () {\n    /**\n     * @param {?} path\n     * @param {?=} position\n     */\n    function AstPath(path, position) {\n        if (position === void 0) { position = -1; }\n        this.path = path;\n        this.position = position;\n    }\n    Object.defineProperty(AstPath.prototype, \"empty\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return !this.path || !this.path.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"head\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.path[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"tail\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.parentOf = function (node) {\n        return node && this.path[this.path.indexOf(node) - 1];\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.childOf = function (node) { return this.path[this.path.indexOf(node) + 1]; };\n    /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    AstPath.prototype.first = function (ctor) {\n        for (var /** @type {?} */ i = this.path.length - 1; i >= 0; i--) {\n            var /** @type {?} */ item = this.path[i];\n            if (item instanceof ctor)\n                return (item);\n        }\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.push = function (node) { this.path.push(node); };\n    /**\n     * @return {?}\n     */\n    AstPath.prototype.pop = function () { return ((this.path.pop())); };\n    return AstPath;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Text = (function () {\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Text.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Expansion = (function () {\n    /**\n     * @param {?} switchValue\n     * @param {?} type\n     * @param {?} cases\n     * @param {?} sourceSpan\n     * @param {?} switchValueSourceSpan\n     */\n    function Expansion(switchValue, type, cases, sourceSpan, switchValueSourceSpan) {\n        this.switchValue = switchValue;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n        this.switchValueSourceSpan = switchValueSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Expansion.prototype.visit = function (visitor, context) { return visitor.visitExpansion(this, context); };\n    return Expansion;\n}());\nvar ExpansionCase = (function () {\n    /**\n     * @param {?} value\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} valueSourceSpan\n     * @param {?} expSourceSpan\n     */\n    function ExpansionCase(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n        this.value = value;\n        this.expression = expression;\n        this.sourceSpan = sourceSpan;\n        this.valueSourceSpan = valueSourceSpan;\n        this.expSourceSpan = expSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpansionCase.prototype.visit = function (visitor, context) { return visitor.visitExpansionCase(this, context); };\n    return ExpansionCase;\n}());\nvar Attribute$1 = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?=} valueSpan\n     */\n    function Attribute$1(name, value, sourceSpan, valueSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n        this.valueSpan = valueSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Attribute$1.prototype.visit = function (visitor, context) { return visitor.visitAttribute(this, context); };\n    return Attribute$1;\n}());\nvar Element = (function () {\n    /**\n     * @param {?} name\n     * @param {?} attrs\n     * @param {?} children\n     * @param {?} sourceSpan\n     * @param {?=} startSourceSpan\n     * @param {?=} endSourceSpan\n     */\n    function Element(name, attrs, children, sourceSpan, startSourceSpan, endSourceSpan) {\n        if (startSourceSpan === void 0) { startSourceSpan = null; }\n        if (endSourceSpan === void 0) { endSourceSpan = null; }\n        this.name = name;\n        this.attrs = attrs;\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Element.prototype.visit = function (visitor, context) { return visitor.visitElement(this, context); };\n    return Element;\n}());\nvar Comment = (function () {\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function Comment(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Comment.prototype.visit = function (visitor, context) { return visitor.visitComment(this, context); };\n    return Comment;\n}());\n/**\n * @param {?} visitor\n * @param {?} nodes\n * @param {?=} context\n * @return {?}\n */\nfunction visitAll(visitor, nodes, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    nodes.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\nvar RecursiveVisitor = (function () {\n    function RecursiveVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitElement = function (ast, context) {\n        this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitAttribute = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitText = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitComment = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansion = function (ast, context) {\n        return this.visitChildren(context, function (visit) { visit(ast.cases); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansionCase = function (ast, context) { };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitChildren = function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children)\n                results.push(visitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveVisitor;\n}());\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction spanOf(ast) {\n    var /** @type {?} */ start = ast.sourceSpan.start.offset;\n    var /** @type {?} */ end = ast.sourceSpan.end.offset;\n    if (ast instanceof Element) {\n        if (ast.endSourceSpan) {\n            end = ast.endSourceSpan.end.offset;\n        }\n        else if (ast.children && ast.children.length) {\n            end = spanOf(ast.children[ast.children.length - 1]).end;\n        }\n    }\n    return { start: start, end: end };\n}\n/**\n * @param {?} nodes\n * @param {?} position\n * @return {?}\n */\nfunction findNode(nodes, position) {\n    var /** @type {?} */ path = [];\n    var /** @type {?} */ visitor = new (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        class_1.prototype.visit = function (ast, context) {\n            var /** @type {?} */ span = spanOf(ast);\n            if (span.start <= position && position < span.end) {\n                path.push(ast);\n            }\n            else {\n                // Returning a value here will result in the children being skipped.\n                return true;\n            }\n        };\n        return class_1;\n    }(RecursiveVisitor));\n    visitAll(visitor, nodes);\n    return new AstPath(path, position);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TokenType$1 = {};\nTokenType$1.TAG_OPEN_START = 0;\nTokenType$1.TAG_OPEN_END = 1;\nTokenType$1.TAG_OPEN_END_VOID = 2;\nTokenType$1.TAG_CLOSE = 3;\nTokenType$1.TEXT = 4;\nTokenType$1.ESCAPABLE_RAW_TEXT = 5;\nTokenType$1.RAW_TEXT = 6;\nTokenType$1.COMMENT_START = 7;\nTokenType$1.COMMENT_END = 8;\nTokenType$1.CDATA_START = 9;\nTokenType$1.CDATA_END = 10;\nTokenType$1.ATTR_NAME = 11;\nTokenType$1.ATTR_VALUE = 12;\nTokenType$1.DOC_TYPE = 13;\nTokenType$1.EXPANSION_FORM_START = 14;\nTokenType$1.EXPANSION_CASE_VALUE = 15;\nTokenType$1.EXPANSION_CASE_EXP_START = 16;\nTokenType$1.EXPANSION_CASE_EXP_END = 17;\nTokenType$1.EXPANSION_FORM_END = 18;\nTokenType$1.EOF = 19;\nTokenType$1[TokenType$1.TAG_OPEN_START] = \"TAG_OPEN_START\";\nTokenType$1[TokenType$1.TAG_OPEN_END] = \"TAG_OPEN_END\";\nTokenType$1[TokenType$1.TAG_OPEN_END_VOID] = \"TAG_OPEN_END_VOID\";\nTokenType$1[TokenType$1.TAG_CLOSE] = \"TAG_CLOSE\";\nTokenType$1[TokenType$1.TEXT] = \"TEXT\";\nTokenType$1[TokenType$1.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTokenType$1[TokenType$1.RAW_TEXT] = \"RAW_TEXT\";\nTokenType$1[TokenType$1.COMMENT_START] = \"COMMENT_START\";\nTokenType$1[TokenType$1.COMMENT_END] = \"COMMENT_END\";\nTokenType$1[TokenType$1.CDATA_START] = \"CDATA_START\";\nTokenType$1[TokenType$1.CDATA_END] = \"CDATA_END\";\nTokenType$1[TokenType$1.ATTR_NAME] = \"ATTR_NAME\";\nTokenType$1[TokenType$1.ATTR_VALUE] = \"ATTR_VALUE\";\nTokenType$1[TokenType$1.DOC_TYPE] = \"DOC_TYPE\";\nTokenType$1[TokenType$1.EXPANSION_FORM_START] = \"EXPANSION_FORM_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_VALUE] = \"EXPANSION_CASE_VALUE\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_START] = \"EXPANSION_CASE_EXP_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_END] = \"EXPANSION_CASE_EXP_END\";\nTokenType$1[TokenType$1.EXPANSION_FORM_END] = \"EXPANSION_FORM_END\";\nTokenType$1[TokenType$1.EOF] = \"EOF\";\nvar Token$1 = (function () {\n    /**\n     * @param {?} type\n     * @param {?} parts\n     * @param {?} sourceSpan\n     */\n    function Token$1(type, parts, sourceSpan) {\n        this.type = type;\n        this.parts = parts;\n        this.sourceSpan = sourceSpan;\n    }\n    return Token$1;\n}());\nvar TokenError = (function (_super) {\n    __extends(TokenError, _super);\n    /**\n     * @param {?} errorMsg\n     * @param {?} tokenType\n     * @param {?} span\n     */\n    function TokenError(errorMsg, tokenType, span) {\n        var _this = _super.call(this, span, errorMsg) || this;\n        _this.tokenType = tokenType;\n        return _this;\n    }\n    return TokenError;\n}(ParseError));\nvar TokenizeResult = (function () {\n    /**\n     * @param {?} tokens\n     * @param {?} errors\n     */\n    function TokenizeResult(tokens, errors) {\n        this.tokens = tokens;\n        this.errors = errors;\n    }\n    return TokenizeResult;\n}());\n/**\n * @param {?} source\n * @param {?} url\n * @param {?} getTagDefinition\n * @param {?=} tokenizeExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nfunction tokenize(source, url, getTagDefinition, tokenizeExpansionForms, interpolationConfig) {\n    if (tokenizeExpansionForms === void 0) { tokenizeExpansionForms = false; }\n    if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n    return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n        .tokenize();\n}\nvar _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n/**\n * @param {?} charCode\n * @return {?}\n */\nfunction _unexpectedCharacterErrorMsg(charCode) {\n    var /** @type {?} */ char = charCode === $EOF ? 'EOF' : String.fromCharCode(charCode);\n    return \"Unexpected character \\\"\" + char + \"\\\"\";\n}\n/**\n * @param {?} entitySrc\n * @return {?}\n */\nfunction _unknownEntityErrorMsg(entitySrc) {\n    return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\n}\nvar _ControlFlowError = (function () {\n    /**\n     * @param {?} error\n     */\n    function _ControlFlowError(error) {\n        this.error = error;\n    }\n    return _ControlFlowError;\n}());\nvar _Tokenizer = (function () {\n    /**\n     * @param {?} _file The html source\n     * @param {?} _getTagDefinition\n     * @param {?} _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n     * @param {?=} _interpolationConfig\n     */\n    function _Tokenizer(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig) {\n        if (_interpolationConfig === void 0) { _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._file = _file;\n        this._getTagDefinition = _getTagDefinition;\n        this._tokenizeIcu = _tokenizeIcu;\n        this._interpolationConfig = _interpolationConfig;\n        this._peek = -1;\n        this._nextPeek = -1;\n        this._index = -1;\n        this._line = 0;\n        this._column = -1;\n        this._expansionCaseStack = [];\n        this._inInterpolation = false;\n        this.tokens = [];\n        this.errors = [];\n        this._input = _file.content;\n        this._length = _file.content.length;\n        this._advance();\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    _Tokenizer.prototype._processCarriageReturns = function (content) {\n        // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n        // In order to keep the original position in the source, we can not\n        // pre-process it.\n        // Instead CRs are processed right before instantiating the tokens.\n        return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype.tokenize = function () {\n        while (this._peek !== $EOF) {\n            var /** @type {?} */ start = this._getLocation();\n            try {\n                if (this._attemptCharCode($LT)) {\n                    if (this._attemptCharCode($BANG)) {\n                        if (this._attemptCharCode($LBRACKET)) {\n                            this._consumeCdata(start);\n                        }\n                        else if (this._attemptCharCode($MINUS)) {\n                            this._consumeComment(start);\n                        }\n                        else {\n                            this._consumeDocType(start);\n                        }\n                    }\n                    else if (this._attemptCharCode($SLASH)) {\n                        this._consumeTagClose(start);\n                    }\n                    else {\n                        this._consumeTagOpen(start);\n                    }\n                }\n                else if (!(this._tokenizeIcu && this._tokenizeExpansionForm())) {\n                    this._consumeText();\n                }\n            }\n            catch (e) {\n                if (e instanceof _ControlFlowError) {\n                    this.errors.push(e.error);\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        this._beginToken(TokenType$1.EOF);\n        this._endToken([]);\n        return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _Tokenizer.prototype._tokenizeExpansionForm = function () {\n        if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n            this._consumeExpansionFormStart();\n            return true;\n        }\n        if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n            this._consumeExpansionCaseStart();\n            return true;\n        }\n        if (this._peek === $RBRACE) {\n            if (this._isInExpansionCase()) {\n                this._consumeExpansionCaseEnd();\n                return true;\n            }\n            if (this._isInExpansionForm()) {\n                this._consumeExpansionFormEnd();\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._getLocation = function () {\n        return new ParseLocation(this._file, this._index, this._line, this._column);\n    };\n    /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._getSpan = function (start, end) {\n        if (start === void 0) { start = this._getLocation(); }\n        if (end === void 0) { end = this._getLocation(); }\n        return new ParseSourceSpan(start, end);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._beginToken = function (type, start) {\n        if (start === void 0) { start = this._getLocation(); }\n        this._currentTokenStart = start;\n        this._currentTokenType = type;\n    };\n    /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._endToken = function (parts, end) {\n        if (end === void 0) { end = this._getLocation(); }\n        var /** @type {?} */ token = new Token$1(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n        this.tokens.push(token);\n        this._currentTokenStart = ((null));\n        this._currentTokenType = ((null));\n        return token;\n    };\n    /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    _Tokenizer.prototype._createError = function (msg, span) {\n        if (this._isInExpansionForm()) {\n            msg += \" (Do you have an unescaped \\\"{\\\" in your template? Use \\\"{{ '{' }}\\\") to escape it.)\";\n        }\n        var /** @type {?} */ error = new TokenError(msg, this._currentTokenType, span);\n        this._currentTokenStart = ((null));\n        this._currentTokenType = ((null));\n        return new _ControlFlowError(error);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._advance = function () {\n        if (this._index >= this._length) {\n            throw this._createError(_unexpectedCharacterErrorMsg($EOF), this._getSpan());\n        }\n        if (this._peek === $LF) {\n            this._line++;\n            this._column = 0;\n        }\n        else if (this._peek !== $LF && this._peek !== $CR) {\n            this._column++;\n        }\n        this._index++;\n        this._peek = this._index >= this._length ? $EOF : this._input.charCodeAt(this._index);\n        this._nextPeek =\n            this._index + 1 >= this._length ? $EOF : this._input.charCodeAt(this._index + 1);\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCode = function (charCode) {\n        if (this._peek === charCode) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeCaseInsensitive = function (charCode) {\n        if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCode = function (charCode) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptCharCode(charCode)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n        }\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStr = function (chars) {\n        var /** @type {?} */ len = chars.length;\n        if (this._index + len > this._length) {\n            return false;\n        }\n        var /** @type {?} */ initialPosition = this._savePosition();\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            if (!this._attemptCharCode(chars.charCodeAt(i))) {\n                // If attempting to parse the string fails, we want to reset the parser\n                // to where it was before the attempt\n                this._restorePosition(initialPosition);\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStrCaseInsensitive = function (chars) {\n        for (var /** @type {?} */ i = 0; i < chars.length; i++) {\n            if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireStr = function (chars) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptStr(chars)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeUntilFn = function (predicate) {\n        while (!predicate(this._peek)) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCodeUntilFn = function (predicate, len) {\n        var /** @type {?} */ start = this._getLocation();\n        this._attemptCharCodeUntilFn(predicate);\n        if (this._index - start.offset < len) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n        }\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptUntilChar = function (char) {\n        while (this._peek !== char) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._readChar = function (decodeEntities) {\n        if (decodeEntities && this._peek === $AMPERSAND) {\n            return this._decodeEntity();\n        }\n        else {\n            var /** @type {?} */ index = this._index;\n            this._advance();\n            return this._input[index];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._decodeEntity = function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._advance();\n        if (this._attemptCharCode($HASH)) {\n            var /** @type {?} */ isHex = this._attemptCharCode($x) || this._attemptCharCode($X);\n            var /** @type {?} */ numberStart = this._getLocation().offset;\n            this._attemptCharCodeUntilFn(isDigitEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            this._advance();\n            var /** @type {?} */ strNum = this._input.substring(numberStart, this._index - 1);\n            try {\n                var /** @type {?} */ charCode = parseInt(strNum, isHex ? 16 : 10);\n                return String.fromCharCode(charCode);\n            }\n            catch (e) {\n                var /** @type {?} */ entity = this._input.substring(start.offset + 1, this._index - 1);\n                throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n            }\n        }\n        else {\n            var /** @type {?} */ startPosition = this._savePosition();\n            this._attemptCharCodeUntilFn(isNamedEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                this._restorePosition(startPosition);\n                return '&';\n            }\n            this._advance();\n            var /** @type {?} */ name = this._input.substring(start.offset + 1, this._index - 1);\n            var /** @type {?} */ char = NAMED_ENTITIES[name];\n            if (!char) {\n                throw this._createError(_unknownEntityErrorMsg(name), this._getSpan(start));\n            }\n            return char;\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawText = function (decodeEntities, firstCharOfEnd, attemptEndRest) {\n        var /** @type {?} */ tagCloseStart;\n        var /** @type {?} */ textStart = this._getLocation();\n        this._beginToken(decodeEntities ? TokenType$1.ESCAPABLE_RAW_TEXT : TokenType$1.RAW_TEXT, textStart);\n        var /** @type {?} */ parts = [];\n        while (true) {\n            tagCloseStart = this._getLocation();\n            if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n                break;\n            }\n            if (this._index > tagCloseStart.offset) {\n                // add the characters consumed by the previous if statement to the output\n                parts.push(this._input.substring(tagCloseStart.offset, this._index));\n            }\n            while (this._peek !== firstCharOfEnd) {\n                parts.push(this._readChar(decodeEntities));\n            }\n        }\n        return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeComment = function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.COMMENT_START, start);\n        this._requireCharCode($MINUS);\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $MINUS, function () { return _this._attemptStr('->'); });\n        this._beginToken(TokenType$1.COMMENT_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeCdata = function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.CDATA_START, start);\n        this._requireStr('CDATA[');\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $RBRACKET, function () { return _this._attemptStr(']>'); });\n        this._beginToken(TokenType$1.CDATA_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeDocType = function (start) {\n        this._beginToken(TokenType$1.DOC_TYPE, start);\n        this._attemptUntilChar($GT);\n        this._advance();\n        this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumePrefixAndName = function () {\n        var /** @type {?} */ nameOrPrefixStart = this._index;\n        var /** @type {?} */ prefix = ((null));\n        while (this._peek !== $COLON && !isPrefixEnd(this._peek)) {\n            this._advance();\n        }\n        var /** @type {?} */ nameStart;\n        if (this._peek === $COLON) {\n            this._advance();\n            prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n            nameStart = this._index;\n        }\n        else {\n            nameStart = nameOrPrefixStart;\n        }\n        this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n        var /** @type {?} */ name = this._input.substring(nameStart, this._index);\n        return [prefix, name];\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpen = function (start) {\n        var /** @type {?} */ savedPos = this._savePosition();\n        var /** @type {?} */ tagName;\n        var /** @type {?} */ lowercaseTagName;\n        try {\n            if (!isAsciiLetter(this._peek)) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            var /** @type {?} */ nameStart = this._index;\n            this._consumeTagOpenStart(start);\n            tagName = this._input.substring(nameStart, this._index);\n            lowercaseTagName = tagName.toLowerCase();\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            while (this._peek !== $SLASH && this._peek !== $GT) {\n                this._consumeAttributeName();\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n                if (this._attemptCharCode($EQ)) {\n                    this._attemptCharCodeUntilFn(isNotWhitespace);\n                    this._consumeAttributeValue();\n                }\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n            }\n            this._consumeTagOpenEnd();\n        }\n        catch (e) {\n            if (e instanceof _ControlFlowError) {\n                // When the start tag is invalid, assume we want a \"<\"\n                this._restorePosition(savedPos);\n                // Back to back text tokens are merged at the end\n                this._beginToken(TokenType$1.TEXT, start);\n                this._endToken(['<']);\n                return;\n            }\n            throw e;\n        }\n        var /** @type {?} */ contentTokenType = this._getTagDefinition(tagName).contentType;\n        if (contentTokenType === TagContentType.RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, false);\n        }\n        else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, true);\n        }\n    };\n    /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawTextWithTagClose = function (lowercaseTagName, decodeEntities) {\n        var _this = this;\n        var /** @type {?} */ textToken = this._consumeRawText(decodeEntities, $LT, function () {\n            if (!_this._attemptCharCode($SLASH))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            return _this._attemptCharCode($GT);\n        });\n        this._beginToken(TokenType$1.TAG_CLOSE, textToken.sourceSpan.end);\n        this._endToken([/** @type {?} */ ((null)), lowercaseTagName]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenStart = function (start) {\n        this._beginToken(TokenType$1.TAG_OPEN_START, start);\n        var /** @type {?} */ parts = this._consumePrefixAndName();\n        this._endToken(parts);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeName = function () {\n        this._beginToken(TokenType$1.ATTR_NAME);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeValue = function () {\n        this._beginToken(TokenType$1.ATTR_VALUE);\n        var /** @type {?} */ value;\n        if (this._peek === $SQ || this._peek === $DQ) {\n            var /** @type {?} */ quoteChar = this._peek;\n            this._advance();\n            var /** @type {?} */ parts = [];\n            while (this._peek !== quoteChar) {\n                parts.push(this._readChar(true));\n            }\n            value = parts.join('');\n            this._advance();\n        }\n        else {\n            var /** @type {?} */ valueStart = this._index;\n            this._requireCharCodeUntilFn(isNameEnd, 1);\n            value = this._input.substring(valueStart, this._index);\n        }\n        this._endToken([this._processCarriageReturns(value)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenEnd = function () {\n        var /** @type {?} */ tokenType = this._attemptCharCode($SLASH) ? TokenType$1.TAG_OPEN_END_VOID : TokenType$1.TAG_OPEN_END;\n        this._beginToken(tokenType);\n        this._requireCharCode($GT);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagClose = function (start) {\n        this._beginToken(TokenType$1.TAG_CLOSE, start);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._requireCharCode($GT);\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormStart = function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_FORM_START);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ condition = this._readUntil($COMMA);\n        this._endToken([condition], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ type = this._readUntil($COMMA);\n        this._endToken([type], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseStart = function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_VALUE, this._getLocation());\n        var /** @type {?} */ value = this._readUntil($LBRACE).trim();\n        this._endToken([value], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_CASE_EXP_START);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseEnd = function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormEnd = function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeText = function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._beginToken(TokenType$1.TEXT, start);\n        var /** @type {?} */ parts = [];\n        do {\n            if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n                parts.push(this._interpolationConfig.start);\n                this._inInterpolation = true;\n            }\n            else if (this._interpolationConfig && this._inInterpolation &&\n                this._attemptStr(this._interpolationConfig.end)) {\n                parts.push(this._interpolationConfig.end);\n                this._inInterpolation = false;\n            }\n            else {\n                parts.push(this._readChar(true));\n            }\n        } while (!this._isTextEnd());\n        this._endToken([this._processCarriageReturns(parts.join(''))]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isTextEnd = function () {\n        if (this._peek === $LT || this._peek === $EOF) {\n            return true;\n        }\n        if (this._tokenizeIcu && !this._inInterpolation) {\n            if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                // start of an expansion form\n                return true;\n            }\n            if (this._peek === $RBRACE && this._isInExpansionCase()) {\n                // end of and expansion case\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._savePosition = function () {\n        return [this._peek, this._index, this._column, this._line, this.tokens.length];\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._readUntil = function (char) {\n        var /** @type {?} */ start = this._index;\n        this._attemptUntilChar(char);\n        return this._input.substring(start, this._index);\n    };\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    _Tokenizer.prototype._restorePosition = function (position) {\n        this._peek = position[0];\n        this._index = position[1];\n        this._column = position[2];\n        this._line = position[3];\n        var /** @type {?} */ nbTokens = position[4];\n        if (nbTokens < this.tokens.length) {\n            // remove any extra tokens\n            this.tokens = this.tokens.slice(0, nbTokens);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionCase = function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_CASE_EXP_START;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionForm = function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_FORM_START;\n    };\n    return _Tokenizer;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNotWhitespace(code) {\n    return !isWhitespace(code) || code === $EOF;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNameEnd(code) {\n    return isWhitespace(code) || code === $GT || code === $SLASH ||\n        code === $SQ || code === $DQ || code === $EQ;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isPrefixEnd(code) {\n    return (code < $a || $z < code) && (code < $A || $Z < code) &&\n        (code < $0 || code > $9);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigitEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiHexDigit(code);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNamedEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiLetter(code);\n}\n/**\n * @param {?} input\n * @param {?} offset\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction isExpansionFormStart(input, offset, interpolationConfig) {\n    var /** @type {?} */ isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n    return input.charCodeAt(offset) == $LBRACE && !isInterpolationStart;\n}\n/**\n * @param {?} peek\n * @return {?}\n */\nfunction isExpansionCaseStart(peek) {\n    return peek === $EQ || isAsciiLetter(peek);\n}\n/**\n * @param {?} code1\n * @param {?} code2\n * @return {?}\n */\nfunction compareCharCodeCaseInsensitive(code1, code2) {\n    return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction toUpperCaseCharCode(code) {\n    return code >= $a && code <= $z ? code - $a + $A : code;\n}\n/**\n * @param {?} srcTokens\n * @return {?}\n */\nfunction mergeTextTokens(srcTokens) {\n    var /** @type {?} */ dstTokens = [];\n    var /** @type {?} */ lastDstToken = undefined;\n    for (var /** @type {?} */ i = 0; i < srcTokens.length; i++) {\n        var /** @type {?} */ token = srcTokens[i];\n        if (lastDstToken && lastDstToken.type == TokenType$1.TEXT && token.type == TokenType$1.TEXT) {\n            lastDstToken.parts[0] += token.parts[0];\n            lastDstToken.sourceSpan.end = token.sourceSpan.end;\n        }\n        else {\n            lastDstToken = token;\n            dstTokens.push(lastDstToken);\n        }\n    }\n    return dstTokens;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TreeError = (function (_super) {\n    __extends(TreeError, _super);\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     */\n    function TreeError(elementName, span, msg) {\n        var _this = _super.call(this, span, msg) || this;\n        _this.elementName = elementName;\n        return _this;\n    }\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    TreeError.create = function (elementName, span, msg) {\n        return new TreeError(elementName, span, msg);\n    };\n    return TreeError;\n}(ParseError));\nvar ParseTreeResult = (function () {\n    /**\n     * @param {?} rootNodes\n     * @param {?} errors\n     */\n    function ParseTreeResult(rootNodes, errors) {\n        this.rootNodes = rootNodes;\n        this.errors = errors;\n    }\n    return ParseTreeResult;\n}());\nvar Parser$1 = (function () {\n    /**\n     * @param {?} getTagDefinition\n     */\n    function Parser$1(getTagDefinition) {\n        this.getTagDefinition = getTagDefinition;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser$1.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ tokensAndErrors = tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n        var /** @type {?} */ treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n        return new ParseTreeResult(treeAndErrors.rootNodes, ((tokensAndErrors.errors)).concat(treeAndErrors.errors));\n    };\n    return Parser$1;\n}());\nvar _TreeBuilder = (function () {\n    /**\n     * @param {?} tokens\n     * @param {?} getTagDefinition\n     */\n    function _TreeBuilder(tokens, getTagDefinition) {\n        this.tokens = tokens;\n        this.getTagDefinition = getTagDefinition;\n        this._index = -1;\n        this._rootNodes = [];\n        this._errors = [];\n        this._elementStack = [];\n        this._advance();\n    }\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype.build = function () {\n        while (this._peek.type !== TokenType$1.EOF) {\n            if (this._peek.type === TokenType$1.TAG_OPEN_START) {\n                this._consumeStartTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TAG_CLOSE) {\n                this._consumeEndTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.CDATA_START) {\n                this._closeVoidElement();\n                this._consumeCdata(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.COMMENT_START) {\n                this._closeVoidElement();\n                this._consumeComment(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TEXT || this._peek.type === TokenType$1.RAW_TEXT ||\n                this._peek.type === TokenType$1.ESCAPABLE_RAW_TEXT) {\n                this._closeVoidElement();\n                this._consumeText(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.EXPANSION_FORM_START) {\n                this._consumeExpansion(this._advance());\n            }\n            else {\n                // Skip all other tokens...\n                this._advance();\n            }\n        }\n        return new ParseTreeResult(this._rootNodes, this._errors);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advance = function () {\n        var /** @type {?} */ prev = this._peek;\n        if (this._index < this.tokens.length - 1) {\n            // Note: there is always an EOF token at the end\n            this._index++;\n        }\n        this._peek = this.tokens[this._index];\n        return prev;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advanceIf = function (type) {\n        if (this._peek.type === type) {\n            return this._advance();\n        }\n        return null;\n    };\n    /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeCdata = function (startToken) {\n        this._consumeText(this._advance());\n        this._advanceIf(TokenType$1.CDATA_END);\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeComment = function (token) {\n        var /** @type {?} */ text = this._advanceIf(TokenType$1.RAW_TEXT);\n        this._advanceIf(TokenType$1.COMMENT_END);\n        var /** @type {?} */ value = text != null ? text.parts[0].trim() : null;\n        this._addToParent(new Comment(value, token.sourceSpan));\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeExpansion = function (token) {\n        var /** @type {?} */ switchValue = this._advance();\n        var /** @type {?} */ type = this._advance();\n        var /** @type {?} */ cases = [];\n        // read =\n        while (this._peek.type === TokenType$1.EXPANSION_CASE_VALUE) {\n            var /** @type {?} */ expCase = this._parseExpansionCase();\n            if (!expCase)\n                return; // error\n            cases.push(expCase);\n        }\n        // read the final }\n        if (this._peek.type !== TokenType$1.EXPANSION_FORM_END) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n            return;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n        this._addToParent(new Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n        this._advance();\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._parseExpansionCase = function () {\n        var /** @type {?} */ value = this._advance();\n        // read {\n        if (this._peek.type !== TokenType$1.EXPANSION_CASE_EXP_START) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '{'.\"));\n            return null;\n        }\n        // read until }\n        var /** @type {?} */ start = this._advance();\n        var /** @type {?} */ exp = this._collectExpansionExpTokens(start);\n        if (!exp)\n            return null;\n        var /** @type {?} */ end = this._advance();\n        exp.push(new Token$1(TokenType$1.EOF, [], end.sourceSpan));\n        // parse everything in between { and }\n        var /** @type {?} */ parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n        if (parsedExp.errors.length > 0) {\n            this._errors = this._errors.concat(/** @type {?} */ (parsedExp.errors));\n            return null;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n        var /** @type {?} */ expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n        return new ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _TreeBuilder.prototype._collectExpansionExpTokens = function (start) {\n        var /** @type {?} */ exp = [];\n        var /** @type {?} */ expansionFormStack = [TokenType$1.EXPANSION_CASE_EXP_START];\n        while (true) {\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_START ||\n                this._peek.type === TokenType$1.EXPANSION_CASE_EXP_START) {\n                expansionFormStack.push(this._peek.type);\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_CASE_EXP_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_CASE_EXP_START)) {\n                    expansionFormStack.pop();\n                    if (expansionFormStack.length == 0)\n                        return exp;\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_FORM_START)) {\n                    expansionFormStack.pop();\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EOF) {\n                this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                return null;\n            }\n            exp.push(this._advance());\n        }\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeText = function (token) {\n        var /** @type {?} */ text = token.parts[0];\n        if (text.length > 0 && text[0] == '\\n') {\n            var /** @type {?} */ parent = this._getParentElement();\n            if (parent != null && parent.children.length == 0 &&\n                this.getTagDefinition(parent.name).ignoreFirstLf) {\n                text = text.substring(1);\n            }\n        }\n        if (text.length > 0) {\n            this._addToParent(new Text(text, token.sourceSpan));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._closeVoidElement = function () {\n        if (this._elementStack.length > 0) {\n            var /** @type {?} */ el = this._elementStack[this._elementStack.length - 1];\n            if (this.getTagDefinition(el.name).isVoid) {\n                this._elementStack.pop();\n            }\n        }\n    };\n    /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeStartTag = function (startTagToken) {\n        var /** @type {?} */ prefix = startTagToken.parts[0];\n        var /** @type {?} */ name = startTagToken.parts[1];\n        var /** @type {?} */ attrs = [];\n        while (this._peek.type === TokenType$1.ATTR_NAME) {\n            attrs.push(this._consumeAttr(this._advance()));\n        }\n        var /** @type {?} */ fullName = this._getElementFullName(prefix, name, this._getParentElement());\n        var /** @type {?} */ selfClosing = false;\n        // Note: There could have been a tokenizer error\n        // so that we don't get a token for the end tag...\n        if (this._peek.type === TokenType$1.TAG_OPEN_END_VOID) {\n            this._advance();\n            selfClosing = true;\n            var /** @type {?} */ tagDef = this.getTagDefinition(fullName);\n            if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n                this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\n            }\n        }\n        else if (this._peek.type === TokenType$1.TAG_OPEN_END) {\n            this._advance();\n            selfClosing = false;\n        }\n        var /** @type {?} */ end = this._peek.sourceSpan.start;\n        var /** @type {?} */ span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n        var /** @type {?} */ el = new Element(fullName, attrs, [], span, span, undefined);\n        this._pushElement(el);\n        if (selfClosing) {\n            this._popElement(fullName);\n            el.endSourceSpan = span;\n        }\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _TreeBuilder.prototype._pushElement = function (el) {\n        if (this._elementStack.length > 0) {\n            var /** @type {?} */ parentEl = this._elementStack[this._elementStack.length - 1];\n            if (this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n                this._elementStack.pop();\n            }\n        }\n        var /** @type {?} */ tagDef = this.getTagDefinition(el.name);\n        var _a = this._getParentElementSkippingContainers(), parent = _a.parent, container = _a.container;\n        if (parent && tagDef.requireExtraParent(parent.name)) {\n            var /** @type {?} */ newParent = new Element(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n            this._insertBeforeContainer(parent, container, newParent);\n        }\n        this._addToParent(el);\n        this._elementStack.push(el);\n    };\n    /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeEndTag = function (endTagToken) {\n        var /** @type {?} */ fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n        if (this._getParentElement()) {\n            ((this._getParentElement())).endSourceSpan = endTagToken.sourceSpan;\n        }\n        if (this.getTagDefinition(fullName).isVoid) {\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n        }\n        else if (!this._popElement(fullName)) {\n            var /** @type {?} */ errMsg = \"Unexpected closing tag \\\"\" + fullName + \"\\\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags\";\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n        }\n    };\n    /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._popElement = function (fullName) {\n        for (var /** @type {?} */ stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n            var /** @type {?} */ el = this._elementStack[stackIndex];\n            if (el.name == fullName) {\n                this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n                return true;\n            }\n            if (!this.getTagDefinition(el.name).closedByParent) {\n                return false;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeAttr = function (attrName) {\n        var /** @type {?} */ fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n        var /** @type {?} */ end = attrName.sourceSpan.end;\n        var /** @type {?} */ value = '';\n        var /** @type {?} */ valueSpan = ((undefined));\n        if (this._peek.type === TokenType$1.ATTR_VALUE) {\n            var /** @type {?} */ valueToken = this._advance();\n            value = valueToken.parts[0];\n            end = valueToken.sourceSpan.end;\n            valueSpan = valueToken.sourceSpan;\n        }\n        return new Attribute$1(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElement = function () {\n        return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n    };\n    /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElementSkippingContainers = function () {\n        var /** @type {?} */ container = null;\n        for (var /** @type {?} */ i = this._elementStack.length - 1; i >= 0; i--) {\n            if (!isNgContainer(this._elementStack[i].name)) {\n                return { parent: this._elementStack[i], container: container };\n            }\n            container = this._elementStack[i];\n        }\n        return { parent: this._elementStack[this._elementStack.length - 1], container: container };\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._addToParent = function (node) {\n        var /** @type {?} */ parent = this._getParentElement();\n        if (parent != null) {\n            parent.children.push(node);\n        }\n        else {\n            this._rootNodes.push(node);\n        }\n    };\n    /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._insertBeforeContainer = function (parent, container, node) {\n        if (!container) {\n            this._addToParent(node);\n            this._elementStack.push(node);\n        }\n        else {\n            if (parent) {\n                // replace the container with the new node in the children\n                var /** @type {?} */ index = parent.children.indexOf(container);\n                parent.children[index] = node;\n            }\n            else {\n                this._rootNodes.push(node);\n            }\n            node.children.push(container);\n            this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n        }\n    };\n    /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getElementFullName = function (prefix, localName, parentElement) {\n        if (prefix == null) {\n            prefix = ((this.getTagDefinition(localName).implicitNamespacePrefix));\n            if (prefix == null && parentElement != null) {\n                prefix = getNsPrefix(parentElement.name);\n            }\n        }\n        return mergeNsAndName(prefix, localName);\n    };\n    return _TreeBuilder;\n}());\n/**\n * @param {?} stack\n * @param {?} element\n * @return {?}\n */\nfunction lastOnStack(stack, element) {\n    return stack.length > 0 && stack[stack.length - 1] === element;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Message = (function () {\n    /**\n     * @param {?} nodes message AST\n     * @param {?} placeholders maps placeholder names to static content\n     * @param {?} placeholderToMessage maps placeholder names to messages (used for nested ICU messages)\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     */\n    function Message(nodes, placeholders, placeholderToMessage, meaning, description, id) {\n        this.nodes = nodes;\n        this.placeholders = placeholders;\n        this.placeholderToMessage = placeholderToMessage;\n        this.meaning = meaning;\n        this.description = description;\n        this.id = id;\n        if (nodes.length) {\n            this.sources = [{\n                    filePath: nodes[0].sourceSpan.start.file.url,\n                    startLine: nodes[0].sourceSpan.start.line + 1,\n                    startCol: nodes[0].sourceSpan.start.col + 1,\n                    endLine: nodes[nodes.length - 1].sourceSpan.end.line + 1,\n                    endCol: nodes[0].sourceSpan.start.col + 1\n                }];\n        }\n        else {\n            this.sources = [];\n        }\n    }\n    return Message;\n}());\nvar Text$1 = (function () {\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function Text$1(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Text$1.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n    return Text$1;\n}());\nvar Container = (function () {\n    /**\n     * @param {?} children\n     * @param {?} sourceSpan\n     */\n    function Container(children, sourceSpan) {\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Container.prototype.visit = function (visitor, context) { return visitor.visitContainer(this, context); };\n    return Container;\n}());\nvar Icu = (function () {\n    /**\n     * @param {?} expression\n     * @param {?} type\n     * @param {?} cases\n     * @param {?} sourceSpan\n     */\n    function Icu(expression, type, cases, sourceSpan) {\n        this.expression = expression;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Icu.prototype.visit = function (visitor, context) { return visitor.visitIcu(this, context); };\n    return Icu;\n}());\nvar TagPlaceholder = (function () {\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} startName\n     * @param {?} closeName\n     * @param {?} children\n     * @param {?} isVoid\n     * @param {?} sourceSpan\n     */\n    function TagPlaceholder(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n        this.tag = tag;\n        this.attrs = attrs;\n        this.startName = startName;\n        this.closeName = closeName;\n        this.children = children;\n        this.isVoid = isVoid;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    TagPlaceholder.prototype.visit = function (visitor, context) { return visitor.visitTagPlaceholder(this, context); };\n    return TagPlaceholder;\n}());\nvar Placeholder = (function () {\n    /**\n     * @param {?} value\n     * @param {?} name\n     * @param {?} sourceSpan\n     */\n    function Placeholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Placeholder.prototype.visit = function (visitor, context) { return visitor.visitPlaceholder(this, context); };\n    return Placeholder;\n}());\nvar IcuPlaceholder = (function () {\n    /**\n     * @param {?} value\n     * @param {?} name\n     * @param {?} sourceSpan\n     */\n    function IcuPlaceholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    IcuPlaceholder.prototype.visit = function (visitor, context) { return visitor.visitIcuPlaceholder(this, context); };\n    return IcuPlaceholder;\n}());\nvar CloneVisitor = (function () {\n    function CloneVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitText = function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var /** @type {?} */ children = container.children.map(function (n) { return n.visit(_this, context); });\n        return new Container(children, container.sourceSpan);\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = {};\n        Object.keys(icu.cases).forEach(function (key) { return cases[key] = icu.cases[key].visit(_this, context); });\n        var /** @type {?} */ msg = new Icu(icu.expression, icu.type, cases, icu.sourceSpan);\n        msg.expressionPlaceholder = icu.expressionPlaceholder;\n        return msg;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, context); });\n        return new TagPlaceholder(ph.tag, ph.attrs, ph.startName, ph.closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitPlaceholder = function (ph, context) {\n        return new Placeholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        return new IcuPlaceholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    return CloneVisitor;\n}());\nvar RecurseVisitor = (function () {\n    function RecurseVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitText = function (text, context) { };\n    \n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        container.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        Object.keys(icu.cases).forEach(function (k) { icu.cases[k].visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        ph.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitPlaceholder = function (ph, context) { };\n    \n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcuPlaceholder = function (ph, context) { };\n    \n    return RecurseVisitor;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TAG_TO_PLACEHOLDER_NAMES = {\n    'A': 'LINK',\n    'B': 'BOLD_TEXT',\n    'BR': 'LINE_BREAK',\n    'EM': 'EMPHASISED_TEXT',\n    'H1': 'HEADING_LEVEL1',\n    'H2': 'HEADING_LEVEL2',\n    'H3': 'HEADING_LEVEL3',\n    'H4': 'HEADING_LEVEL4',\n    'H5': 'HEADING_LEVEL5',\n    'H6': 'HEADING_LEVEL6',\n    'HR': 'HORIZONTAL_RULE',\n    'I': 'ITALIC_TEXT',\n    'LI': 'LIST_ITEM',\n    'LINK': 'MEDIA_LINK',\n    'OL': 'ORDERED_LIST',\n    'P': 'PARAGRAPH',\n    'Q': 'QUOTATION',\n    'S': 'STRIKETHROUGH_TEXT',\n    'SMALL': 'SMALL_TEXT',\n    'SUB': 'SUBSTRIPT',\n    'SUP': 'SUPERSCRIPT',\n    'TBODY': 'TABLE_BODY',\n    'TD': 'TABLE_CELL',\n    'TFOOT': 'TABLE_FOOTER',\n    'TH': 'TABLE_HEADER_CELL',\n    'THEAD': 'TABLE_HEADER',\n    'TR': 'TABLE_ROW',\n    'TT': 'MONOSPACED_TEXT',\n    'U': 'UNDERLINED_TEXT',\n    'UL': 'UNORDERED_LIST',\n};\n/**\n * Creates unique names for placeholder with different content.\n *\n * Returns the same placeholder name when the content is identical.\n *\n * \\@internal\n */\nvar PlaceholderRegistry = (function () {\n    function PlaceholderRegistry() {\n        this._placeHolderNameCounts = {};\n        this._signatureToName = {};\n    }\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getStartTagPlaceholderName = function (tag, attrs, isVoid) {\n        var /** @type {?} */ signature = this._hashTag(tag, attrs, isVoid);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(isVoid ? baseName : \"START_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getCloseTagPlaceholderName = function (tag) {\n        var /** @type {?} */ signature = this._hashClosingTag(tag);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(\"CLOSE_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getPlaceholderName = function (name, content) {\n        var /** @type {?} */ upperName = name.toUpperCase();\n        var /** @type {?} */ signature = \"PH: \" + upperName + \"=\" + content;\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ uniqueName = this._generateUniqueName(upperName);\n        this._signatureToName[signature] = uniqueName;\n        return uniqueName;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getUniquePlaceholder = function (name) {\n        return this._generateUniqueName(name.toUpperCase());\n    };\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashTag = function (tag, attrs, isVoid) {\n        var /** @type {?} */ start = \"<\" + tag;\n        var /** @type {?} */ strAttrs = Object.keys(attrs).sort().map(function (name) { return \" \" + name + \"=\" + attrs[name]; }).join('');\n        var /** @type {?} */ end = isVoid ? '/>' : \"></\" + tag + \">\";\n        return start + strAttrs + end;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashClosingTag = function (tag) { return this._hashTag(\"/\" + tag, {}, false); };\n    /**\n     * @param {?} base\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._generateUniqueName = function (base) {\n        var /** @type {?} */ seen = this._placeHolderNameCounts.hasOwnProperty(base);\n        if (!seen) {\n            this._placeHolderNameCounts[base] = 1;\n            return base;\n        }\n        var /** @type {?} */ id = this._placeHolderNameCounts[base];\n        this._placeHolderNameCounts[base] = id + 1;\n        return base + \"_\" + id;\n    };\n    return PlaceholderRegistry;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _expParser = new Parser(new Lexer());\n/**\n * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction createI18nMessageFactory(interpolationConfig) {\n    var /** @type {?} */ visitor = new _I18nVisitor(_expParser, interpolationConfig);\n    return function (nodes, meaning, description, id) { return visitor.toI18nMessage(nodes, meaning, description, id); };\n}\nvar _I18nVisitor = (function () {\n    /**\n     * @param {?} _expressionParser\n     * @param {?} _interpolationConfig\n     */\n    function _I18nVisitor(_expressionParser, _interpolationConfig) {\n        this._expressionParser = _expressionParser;\n        this._interpolationConfig = _interpolationConfig;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    _I18nVisitor.prototype.toI18nMessage = function (nodes, meaning, description, id) {\n        this._isIcu = nodes.length == 1 && nodes[0] instanceof Expansion;\n        this._icuDepth = 0;\n        this._placeholderRegistry = new PlaceholderRegistry();\n        this._placeholderToContent = {};\n        this._placeholderToMessage = {};\n        var /** @type {?} */ i18nodes = visitAll(this, nodes, {});\n        return new Message(i18nodes, this._placeholderToContent, this._placeholderToMessage, meaning, description, id);\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitElement = function (el, context) {\n        var /** @type {?} */ children = visitAll(this, el.children);\n        var /** @type {?} */ attrs = {};\n        el.attrs.forEach(function (attr) {\n            // Do not visit the attributes, translatable ones are top-level ASTs\n            attrs[attr.name] = attr.value;\n        });\n        var /** @type {?} */ isVoid = getHtmlTagDefinition(el.name).isVoid;\n        var /** @type {?} */ startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n        this._placeholderToContent[startPhName] = ((el.sourceSpan)).toString();\n        var /** @type {?} */ closePhName = '';\n        if (!isVoid) {\n            closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n            this._placeholderToContent[closePhName] = \"</\" + el.name + \">\";\n        }\n        return new TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, /** @type {?} */ ((el.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitAttribute = function (attribute, context) {\n        return this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitText = function (text, context) {\n        return this._visitTextWithInterpolation(text.value, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitComment = function (comment, context) { return null; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansion = function (icu, context) {\n        var _this = this;\n        this._icuDepth++;\n        var /** @type {?} */ i18nIcuCases = {};\n        var /** @type {?} */ i18nIcu = new Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n        icu.cases.forEach(function (caze) {\n            i18nIcuCases[caze.value] = new Container(caze.expression.map(function (node) { return node.visit(_this, {}); }), caze.expSourceSpan);\n        });\n        this._icuDepth--;\n        if (this._isIcu || this._icuDepth > 0) {\n            // Returns an ICU node when:\n            // - the message (vs a part of the message) is an ICU message, or\n            // - the ICU message is nested.\n            var /** @type {?} */ expPh = this._placeholderRegistry.getUniquePlaceholder(\"VAR_\" + icu.type);\n            i18nIcu.expressionPlaceholder = expPh;\n            this._placeholderToContent[expPh] = icu.switchValue;\n            return i18nIcu;\n        }\n        // Else returns a placeholder\n        // ICU placeholders should not be replaced with their original content but with the their\n        // translations. We need to create a new visitor (they are not re-entrant) to compute the\n        // message id.\n        // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n        var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n        var /** @type {?} */ visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n        this._placeholderToMessage[phName] = visitor.toI18nMessage([icu], '', '', '');\n        return new IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansionCase = function (icuCase, context) {\n        throw new Error('Unreachable code');\n    };\n    /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _I18nVisitor.prototype._visitTextWithInterpolation = function (text, sourceSpan) {\n        var /** @type {?} */ splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n        if (!splitInterpolation) {\n            // No expression, return a single text\n            return new Text$1(text, sourceSpan);\n        }\n        // Return a group of text + expressions\n        var /** @type {?} */ nodes = [];\n        var /** @type {?} */ container = new Container(nodes, sourceSpan);\n        var _a = this._interpolationConfig, sDelimiter = _a.start, eDelimiter = _a.end;\n        for (var /** @type {?} */ i = 0; i < splitInterpolation.strings.length - 1; i++) {\n            var /** @type {?} */ expression = splitInterpolation.expressions[i];\n            var /** @type {?} */ baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n            var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n            if (splitInterpolation.strings[i].length) {\n                // No need to add empty strings\n                nodes.push(new Text$1(splitInterpolation.strings[i], sourceSpan));\n            }\n            nodes.push(new Placeholder(expression, phName, sourceSpan));\n            this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n        }\n        // The last index contains no expression\n        var /** @type {?} */ lastStringIdx = splitInterpolation.strings.length - 1;\n        if (splitInterpolation.strings[lastStringIdx].length) {\n            nodes.push(new Text$1(splitInterpolation.strings[lastStringIdx], sourceSpan));\n        }\n        return container;\n    };\n    return _I18nVisitor;\n}());\nvar _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*(\"|')([\\s\\S]*?)\\1[\\s\\S]*\\)/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction _extractPlaceholderName(input) {\n    return input.split(_CUSTOM_PH_EXP)[2];\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An i18n error.\n */\nvar I18nError = (function (_super) {\n    __extends(I18nError, _super);\n    /**\n     * @param {?} span\n     * @param {?} msg\n     */\n    function I18nError(span, msg) {\n        return _super.call(this, span, msg) || this;\n    }\n    return I18nError;\n}(ParseError));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _I18N_ATTR = 'i18n';\nvar _I18N_ATTR_PREFIX = 'i18n-';\nvar _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\nvar MEANING_SEPARATOR = '|';\nvar ID_SEPARATOR = '@@';\n/**\n * Extract translatable messages from an html AST\n * @param {?} nodes\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.extract(nodes, interpolationConfig);\n}\n/**\n * @param {?} nodes\n * @param {?} translations\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.merge(nodes, translations, interpolationConfig);\n}\nvar ExtractionResult = (function () {\n    /**\n     * @param {?} messages\n     * @param {?} errors\n     */\n    function ExtractionResult(messages, errors) {\n        this.messages = messages;\n        this.errors = errors;\n    }\n    return ExtractionResult;\n}());\nvar _VisitorMode = {};\n_VisitorMode.Extract = 0;\n_VisitorMode.Merge = 1;\n_VisitorMode[_VisitorMode.Extract] = \"Extract\";\n_VisitorMode[_VisitorMode.Merge] = \"Merge\";\n/**\n * This Visitor is used:\n * 1. to extract all the translatable strings from an html AST (see `extract()`),\n * 2. to replace the translatable strings with the actual translations (see `merge()`)\n *\n * \\@internal\n */\nvar _Visitor = (function () {\n    /**\n     * @param {?} _implicitTags\n     * @param {?} _implicitAttrs\n     */\n    function _Visitor(_implicitTags, _implicitAttrs) {\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n    }\n    /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.extract = function (nodes, interpolationConfig) {\n        var _this = this;\n        this._init(_VisitorMode.Extract, interpolationConfig);\n        nodes.forEach(function (node) { return node.visit(_this, null); });\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ExtractionResult(this._messages, this._errors);\n    };\n    /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.merge = function (nodes, translations, interpolationConfig) {\n        this._init(_VisitorMode.Merge, interpolationConfig);\n        this._translations = translations;\n        // Construct a single fake root element\n        var /** @type {?} */ wrapper = new Element('wrapper', [], nodes, /** @type {?} */ ((undefined)), undefined, undefined);\n        var /** @type {?} */ translatedNode = wrapper.visit(this, null);\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ParseTreeResult(translatedNode.children, this._errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansionCase = function (icuCase, context) {\n        // Parse cases for translatable html attributes\n        var /** @type {?} */ expression = visitAll(this, icuCase.expression, context);\n        if (this._mode === _VisitorMode.Merge) {\n            return new ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n        }\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansion = function (icu, context) {\n        this._mayBeAddBlockChildren(icu);\n        var /** @type {?} */ wasInIcu = this._inIcu;\n        if (!this._inIcu) {\n            // nested ICU messages should not be extracted but top-level translated as a whole\n            if (this._isInTranslatableSection) {\n                this._addMessage([icu]);\n            }\n            this._inIcu = true;\n        }\n        var /** @type {?} */ cases = visitAll(this, icu.cases, context);\n        if (this._mode === _VisitorMode.Merge) {\n            icu = new Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n        }\n        this._inIcu = wasInIcu;\n        return icu;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitComment = function (comment, context) {\n        var /** @type {?} */ isOpening = _isOpeningComment(comment);\n        if (isOpening && this._isInTranslatableSection) {\n            this._reportError(comment, 'Could not start a block inside a translatable section');\n            return;\n        }\n        var /** @type {?} */ isClosing = _isClosingComment(comment);\n        if (isClosing && !this._inI18nBlock) {\n            this._reportError(comment, 'Trying to close an unopened block');\n            return;\n        }\n        if (!this._inI18nNode && !this._inIcu) {\n            if (!this._inI18nBlock) {\n                if (isOpening) {\n                    this._inI18nBlock = true;\n                    this._blockStartDepth = this._depth;\n                    this._blockChildren = [];\n                    this._blockMeaningAndDesc = ((comment.value)).replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n                    this._openTranslatableSection(comment);\n                }\n            }\n            else {\n                if (isClosing) {\n                    if (this._depth == this._blockStartDepth) {\n                        this._closeTranslatableSection(comment, this._blockChildren);\n                        this._inI18nBlock = false;\n                        var /** @type {?} */ message = ((this._addMessage(this._blockChildren, this._blockMeaningAndDesc)));\n                        // merge attributes in sections\n                        var /** @type {?} */ nodes = this._translateMessage(comment, message);\n                        return visitAll(this, nodes);\n                    }\n                    else {\n                        this._reportError(comment, 'I18N blocks should not cross element boundaries');\n                        return;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = function (text, context) {\n        if (this._isInTranslatableSection) {\n            this._mayBeAddBlockChildren(text);\n        }\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitElement = function (el, context) {\n        var _this = this;\n        this._mayBeAddBlockChildren(el);\n        this._depth++;\n        var /** @type {?} */ wasInI18nNode = this._inI18nNode;\n        var /** @type {?} */ wasInImplicitNode = this._inImplicitNode;\n        var /** @type {?} */ childNodes = [];\n        var /** @type {?} */ translatedChildNodes = ((undefined));\n        // Extract:\n        // - top level nodes with the (implicit) \"i18n\" attribute if not already in a section\n        // - ICU messages\n        var /** @type {?} */ i18nAttr = _getI18nAttr(el);\n        var /** @type {?} */ i18nMeta = i18nAttr ? i18nAttr.value : '';\n        var /** @type {?} */ isImplicit = this._implicitTags.some(function (tag) { return el.name === tag; }) && !this._inIcu &&\n            !this._isInTranslatableSection;\n        var /** @type {?} */ isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n        this._inImplicitNode = wasInImplicitNode || isImplicit;\n        if (!this._isInTranslatableSection && !this._inIcu) {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._inI18nNode = true;\n                var /** @type {?} */ message = ((this._addMessage(el.children, i18nMeta)));\n                translatedChildNodes = this._translateMessage(el, message);\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                var /** @type {?} */ isTranslatable = i18nAttr || isTopLevelImplicit;\n                if (isTranslatable)\n                    this._openTranslatableSection(el);\n                visitAll(this, el.children);\n                if (isTranslatable)\n                    this._closeTranslatableSection(el, el.children);\n            }\n        }\n        else {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                // Descend into child nodes for extraction\n                visitAll(this, el.children);\n            }\n        }\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ visitNodes = translatedChildNodes || el.children;\n            visitNodes.forEach(function (child) {\n                var /** @type {?} */ visited = child.visit(_this, context);\n                if (visited && !_this._isInTranslatableSection) {\n                    // Do not add the children from translatable sections (= i18n blocks here)\n                    // They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)\n                    childNodes = childNodes.concat(visited);\n                }\n            });\n        }\n        this._visitAttributesOf(el);\n        this._depth--;\n        this._inI18nNode = wasInI18nNode;\n        this._inImplicitNode = wasInImplicitNode;\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ translatedAttrs = this._translateAttributes(el);\n            return new Element(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitAttribute = function (attribute, context) {\n        throw new Error('unreachable code');\n    };\n    /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype._init = function (mode, interpolationConfig) {\n        this._mode = mode;\n        this._inI18nBlock = false;\n        this._inI18nNode = false;\n        this._depth = 0;\n        this._inIcu = false;\n        this._msgCountAtSectionStart = undefined;\n        this._errors = [];\n        this._messages = [];\n        this._inImplicitNode = false;\n        this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._visitAttributesOf = function (el) {\n        var _this = this;\n        var /** @type {?} */ explicitAttrNameToValue = {};\n        var /** @type {?} */ implicitAttrNames = this._implicitAttrs[el.name] || [];\n        el.attrs.filter(function (attr) { return attr.name.startsWith(_I18N_ATTR_PREFIX); })\n            .forEach(function (attr) { return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n            attr.value; });\n        el.attrs.forEach(function (attr) {\n            if (attr.name in explicitAttrNameToValue) {\n                _this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n            }\n            else if (implicitAttrNames.some(function (name) { return attr.name === name; })) {\n                _this._addMessage([attr]);\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    _Visitor.prototype._addMessage = function (ast, msgMeta) {\n        if (ast.length == 0 ||\n            ast.length == 1 && ast[0] instanceof Attribute$1 && !((ast[0])).value) {\n            // Do not create empty messages\n            return null;\n        }\n        var _a = _parseMessageMeta(msgMeta), meaning = _a.meaning, description = _a.description, id = _a.id;\n        var /** @type {?} */ message = this._createI18nMessage(ast, meaning, description, id);\n        this._messages.push(message);\n        return message;\n    };\n    /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    _Visitor.prototype._translateMessage = function (el, message) {\n        if (message && this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ nodes = this._translations.get(message);\n            if (nodes) {\n                return nodes;\n            }\n            this._reportError(el, \"Translation unavailable for message id=\\\"\" + this._translations.digest(message) + \"\\\"\");\n        }\n        return [];\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._translateAttributes = function (el) {\n        var _this = this;\n        var /** @type {?} */ attributes = el.attrs;\n        var /** @type {?} */ i18nParsedMessageMeta = {};\n        attributes.forEach(function (attr) {\n            if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                    _parseMessageMeta(attr.value);\n            }\n        });\n        var /** @type {?} */ translatedAttributes = [];\n        attributes.forEach(function (attr) {\n            if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                // strip i18n specific attributes\n                return;\n            }\n            if (attr.value && attr.value != '' && i18nParsedMessageMeta.hasOwnProperty(attr.name)) {\n                var _a = i18nParsedMessageMeta[attr.name], meaning = _a.meaning, description = _a.description, id = _a.id;\n                var /** @type {?} */ message = _this._createI18nMessage([attr], meaning, description, id);\n                var /** @type {?} */ nodes = _this._translations.get(message);\n                if (nodes) {\n                    if (nodes.length == 0) {\n                        translatedAttributes.push(new Attribute$1(attr.name, '', attr.sourceSpan));\n                    }\n                    else if (nodes[0] instanceof Text) {\n                        var /** @type {?} */ value = ((nodes[0])).value;\n                        translatedAttributes.push(new Attribute$1(attr.name, value, attr.sourceSpan));\n                    }\n                    else {\n                        _this._reportError(el, \"Unexpected translation for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                    }\n                }\n                else {\n                    _this._reportError(el, \"Translation unavailable for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                }\n            }\n            else {\n                translatedAttributes.push(attr);\n            }\n        });\n        return translatedAttributes;\n    };\n    /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._mayBeAddBlockChildren = function (node) {\n        if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n            this._blockChildren.push(node);\n        }\n    };\n    /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._openTranslatableSection = function (node) {\n        if (this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section start');\n        }\n        else {\n            this._msgCountAtSectionStart = this._messages.length;\n        }\n    };\n    Object.defineProperty(_Visitor.prototype, \"_isInTranslatableSection\", {\n        /**\n         * A translatable section could be:\n         * - the content of translatable element,\n         * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n         * @return {?}\n         */\n        get: function () {\n            return this._msgCountAtSectionStart !== void 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    _Visitor.prototype._closeTranslatableSection = function (node, directChildren) {\n        if (!this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section end');\n            return;\n        }\n        var /** @type {?} */ startIndex = this._msgCountAtSectionStart;\n        var /** @type {?} */ significantChildren = directChildren.reduce(function (count, node) { return count + (node instanceof Comment ? 0 : 1); }, 0);\n        if (significantChildren == 1) {\n            for (var /** @type {?} */ i = this._messages.length - 1; i >= startIndex; i--) {\n                var /** @type {?} */ ast = this._messages[i].nodes;\n                if (!(ast.length == 1 && ast[0] instanceof Text$1)) {\n                    this._messages.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this._msgCountAtSectionStart = undefined;\n    };\n    /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    _Visitor.prototype._reportError = function (node, msg) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), msg));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isOpeningComment(n) {\n    return !!(n instanceof Comment && n.value && n.value.startsWith('i18n'));\n}\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isClosingComment(n) {\n    return !!(n instanceof Comment && n.value && n.value === '/i18n');\n}\n/**\n * @param {?} p\n * @return {?}\n */\nfunction _getI18nAttr(p) {\n    return p.attrs.find(function (attr) { return attr.name === _I18N_ATTR; }) || null;\n}\n/**\n * @param {?=} i18n\n * @return {?}\n */\nfunction _parseMessageMeta(i18n) {\n    if (!i18n)\n        return { meaning: '', description: '', id: '' };\n    var /** @type {?} */ idIndex = i18n.indexOf(ID_SEPARATOR);\n    var /** @type {?} */ descIndex = i18n.indexOf(MEANING_SEPARATOR);\n    var _a = (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''], meaningAndDesc = _a[0], id = _a[1];\n    var _b = (descIndex > -1) ?\n        [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n        ['', meaningAndDesc], meaning = _b[0], description = _b[1];\n    return { meaning: meaning, description: description, id: id };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlTagDefinition = (function () {\n    function XmlTagDefinition() {\n        this.closedByParent = false;\n        this.contentType = TagContentType.PARSABLE_DATA;\n        this.isVoid = false;\n        this.ignoreFirstLf = false;\n        this.canSelfClose = true;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.requireExtraParent = function (currentParent) { return false; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.isClosedByChild = function (name) { return false; };\n    return XmlTagDefinition;\n}());\nvar _TAG_DEFINITION = new XmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getXmlTagDefinition(tagName) {\n    return _TAG_DEFINITION;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlParser = (function (_super) {\n    __extends(XmlParser, _super);\n    function XmlParser() {\n        return _super.call(this, getXmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    XmlParser.prototype.parse = function (source, url, parseExpansionForms) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms);\n    };\n    return XmlParser;\n}(Parser$1));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest(message) {\n    return message.id || sha1(serializeNodes(message.nodes).join('') + (\"[\" + message.meaning + \"]\"));\n}\n/**\n * @param {?} message\n * @return {?}\n */\nfunction decimalDigest(message) {\n    if (message.id) {\n        return message.id;\n    }\n    var /** @type {?} */ visitor = new _SerializerIgnoreIcuExpVisitor();\n    var /** @type {?} */ parts = message.nodes.map(function (a) { return a.visit(visitor, null); });\n    return computeMsgId(parts.join(''), message.meaning);\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * \\@internal\n */\nvar _SerializerVisitor = (function () {\n    function _SerializerVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitText = function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        return \"[\" + container.children.map(function (child) { return child.visit(_this); }).join(', ') + \"]\";\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        return \"{\" + icu.expression + \", \" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        return ph.isVoid ?\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\"/>\" :\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\">\" + ph.children.map(function (child) { return child.visit(_this); }).join(', ') + \"</ph name=\\\"\" + ph.closeName + \"\\\">\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitPlaceholder = function (ph, context) {\n        return ph.value ? \"<ph name=\\\"\" + ph.name + \"\\\">\" + ph.value + \"</ph>\" : \"<ph name=\\\"\" + ph.name + \"\\\"/>\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        return \"<ph icu name=\\\"\" + ph.name + \"\\\">\" + ph.value.visit(this) + \"</ph>\";\n    };\n    return _SerializerVisitor;\n}());\nvar serializerVisitor = new _SerializerVisitor();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serializeNodes(nodes) {\n    return nodes.map(function (a) { return a.visit(serializerVisitor, null); });\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n *\n * \\@internal\n */\nvar _SerializerIgnoreIcuExpVisitor = (function (_super) {\n    __extends(_SerializerIgnoreIcuExpVisitor, _super);\n    function _SerializerIgnoreIcuExpVisitor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerIgnoreIcuExpVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // Do not take the expression into account\n        return \"{\" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    return _SerializerIgnoreIcuExpVisitor;\n}(_SerializerVisitor));\n/**\n * Compute the SHA1 of the given string\n *\n * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n * @param {?} str\n * @return {?}\n */\nfunction sha1(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var /** @type {?} */ words32 = stringToWords32(utf8, Endian.Big);\n    var /** @type {?} */ len = utf8.length * 8;\n    var /** @type {?} */ w = new Array(80);\n    var _a = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], a = _a[0], b = _a[1], c = _a[2], d = _a[3], e = _a[4];\n    words32[len >> 5] |= 0x80 << (24 - len % 32);\n    words32[((len + 64 >> 9) << 4) + 15] = len;\n    for (var /** @type {?} */ i = 0; i < words32.length; i += 16) {\n        var _b = [a, b, c, d, e], h0 = _b[0], h1 = _b[1], h2 = _b[2], h3 = _b[3], h4 = _b[4];\n        for (var /** @type {?} */ j = 0; j < 80; j++) {\n            if (j < 16) {\n                w[j] = words32[i + j];\n            }\n            else {\n                w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            }\n            var _c = fk(j, b, c, d), f = _c[0], k = _c[1];\n            var /** @type {?} */ temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n            _d = [d, c, rol32(b, 30), a, temp], e = _d[0], d = _d[1], c = _d[2], b = _d[3], a = _d[4];\n        }\n        _e = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)], a = _e[0], b = _e[1], c = _e[2], d = _e[3], e = _e[4];\n    }\n    return byteStringToHexString(words32ToByteString([a, b, c, d, e]));\n    var _d, _e;\n}\n/**\n * @param {?} index\n * @param {?} b\n * @param {?} c\n * @param {?} d\n * @return {?}\n */\nfunction fk(index, b, c, d) {\n    if (index < 20) {\n        return [(b & c) | (~b & d), 0x5a827999];\n    }\n    if (index < 40) {\n        return [b ^ c ^ d, 0x6ed9eba1];\n    }\n    if (index < 60) {\n        return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n    }\n    return [b ^ c ^ d, 0xca62c1d6];\n}\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n * @param {?} str\n * @return {?}\n */\nfunction fingerprint(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var _a = [hash32(utf8, 0), hash32(utf8, 102072)], hi = _a[0], lo = _a[1];\n    if (hi == 0 && (lo == 0 || lo == 1)) {\n        hi = hi ^ 0x130f9bef;\n        lo = lo ^ -0x6b5f56d8;\n    }\n    return [hi, lo];\n}\n/**\n * @param {?} msg\n * @param {?} meaning\n * @return {?}\n */\nfunction computeMsgId(msg, meaning) {\n    var _a = fingerprint(msg), hi = _a[0], lo = _a[1];\n    if (meaning) {\n        var _b = fingerprint(meaning), him = _b[0], lom = _b[1];\n        _c = add64(rol64([hi, lo], 1), [him, lom]), hi = _c[0], lo = _c[1];\n    }\n    return byteStringToDecString(words32ToByteString([hi & 0x7fffffff, lo]));\n    var _c;\n}\n/**\n * @param {?} str\n * @param {?} c\n * @return {?}\n */\nfunction hash32(str, c) {\n    var _a = [0x9e3779b9, 0x9e3779b9], a = _a[0], b = _a[1];\n    var /** @type {?} */ i;\n    var /** @type {?} */ len = str.length;\n    for (i = 0; i + 12 <= len; i += 12) {\n        a = add32(a, wordAt(str, i, Endian.Little));\n        b = add32(b, wordAt(str, i + 4, Endian.Little));\n        c = add32(c, wordAt(str, i + 8, Endian.Little));\n        _b = mix([a, b, c]), a = _b[0], b = _b[1], c = _b[2];\n    }\n    a = add32(a, wordAt(str, i, Endian.Little));\n    b = add32(b, wordAt(str, i + 4, Endian.Little));\n    // the first byte of c is reserved for the length\n    c = add32(c, len);\n    c = add32(c, wordAt(str, i + 8, Endian.Little) << 8);\n    return mix([a, b, c])[2];\n    var _b;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction mix(_a) {\n    var a = _a[0], b = _a[1], c = _a[2];\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 13;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 8;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 13;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 12;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 16;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 5;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 3;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 10;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 15;\n    return [a, b, c];\n}\nvar Endian = {};\nEndian.Little = 0;\nEndian.Big = 1;\nEndian[Endian.Little] = \"Little\";\nEndian[Endian.Big] = \"Big\";\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32(a, b) {\n    return add32to64(a, b)[1];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32to64(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) + (b & 0xffff);\n    var /** @type {?} */ high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n    return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\n/**\n * @param {?} __0\n * @param {?} __1\n * @return {?}\n */\nfunction add64(_a, _b) {\n    var ah = _a[0], al = _a[1];\n    var bh = _b[0], bl = _b[1];\n    var _c = add32to64(al, bl), carry = _c[0], l = _c[1];\n    var /** @type {?} */ h = add32(add32(ah, bh), carry);\n    return [h, l];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction sub32(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) - (b & 0xffff);\n    var /** @type {?} */ high = (a >> 16) - (b >> 16) + (low >> 16);\n    return (high << 16) | (low & 0xffff);\n}\n/**\n * @param {?} a\n * @param {?} count\n * @return {?}\n */\nfunction rol32(a, count) {\n    return (a << count) | (a >>> (32 - count));\n}\n/**\n * @param {?} __0\n * @param {?} count\n * @return {?}\n */\nfunction rol64(_a, count) {\n    var hi = _a[0], lo = _a[1];\n    var /** @type {?} */ h = (hi << count) | (lo >>> (32 - count));\n    var /** @type {?} */ l = (lo << count) | (hi >>> (32 - count));\n    return [h, l];\n}\n/**\n * @param {?} str\n * @param {?} endian\n * @return {?}\n */\nfunction stringToWords32(str, endian) {\n    var /** @type {?} */ words32 = Array((str.length + 3) >>> 2);\n    for (var /** @type {?} */ i = 0; i < words32.length; i++) {\n        words32[i] = wordAt(str, i * 4, endian);\n    }\n    return words32;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @return {?}\n */\nfunction byteAt(str, index) {\n    return index >= str.length ? 0 : str.charCodeAt(index) & 0xff;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @param {?} endian\n * @return {?}\n */\nfunction wordAt(str, index, endian) {\n    var /** @type {?} */ word = 0;\n    if (endian === Endian.Big) {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << (24 - 8 * i);\n        }\n    }\n    else {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << 8 * i;\n        }\n    }\n    return word;\n}\n/**\n * @param {?} words32\n * @return {?}\n */\nfunction words32ToByteString(words32) {\n    return words32.reduce(function (str, word) { return str + word32ToByteString(word); }, '');\n}\n/**\n * @param {?} word\n * @return {?}\n */\nfunction word32ToByteString(word) {\n    var /** @type {?} */ str = '';\n    for (var /** @type {?} */ i = 0; i < 4; i++) {\n        str += String.fromCharCode((word >>> 8 * (3 - i)) & 0xff);\n    }\n    return str;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToHexString(str) {\n    var /** @type {?} */ hex = '';\n    for (var /** @type {?} */ i = 0; i < str.length; i++) {\n        var /** @type {?} */ b = byteAt(str, i);\n        hex += (b >>> 4).toString(16) + (b & 0x0f).toString(16);\n    }\n    return hex.toLowerCase();\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToDecString(str) {\n    var /** @type {?} */ decimal = '';\n    var /** @type {?} */ toThePower = '1';\n    for (var /** @type {?} */ i = str.length - 1; i >= 0; i--) {\n        decimal = addBigInt(decimal, numberTimesBigInt(byteAt(str, i), toThePower));\n        toThePower = numberTimesBigInt(256, toThePower);\n    }\n    return decimal.split('').reverse().join('');\n}\n/**\n * @param {?} x\n * @param {?} y\n * @return {?}\n */\nfunction addBigInt(x, y) {\n    var /** @type {?} */ sum = '';\n    var /** @type {?} */ len = Math.max(x.length, y.length);\n    for (var /** @type {?} */ i = 0, /** @type {?} */ carry = 0; i < len || carry; i++) {\n        var /** @type {?} */ tmpSum = carry + +(x[i] || 0) + +(y[i] || 0);\n        if (tmpSum >= 10) {\n            carry = 1;\n            sum += tmpSum - 10;\n        }\n        else {\n            carry = 0;\n            sum += tmpSum;\n        }\n    }\n    return sum;\n}\n/**\n * @param {?} num\n * @param {?} b\n * @return {?}\n */\nfunction numberTimesBigInt(num, b) {\n    var /** @type {?} */ product = '';\n    var /** @type {?} */ bToThePower = b;\n    for (; num !== 0; num = num >>> 1) {\n        if (num & 1)\n            product = addBigInt(product, bToThePower);\n        bToThePower = addBigInt(bToThePower, bToThePower);\n    }\n    return product;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar Serializer = (function () {\n    function Serializer() {\n    }\n    /**\n     * @abstract\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Serializer.prototype.write = function (messages, locale) { };\n    /**\n     * @abstract\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Serializer.prototype.load = function (content, url) { };\n    /**\n     * @abstract\n     * @param {?} message\n     * @return {?}\n     */\n    Serializer.prototype.digest = function (message) { };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Serializer.prototype.createNameMapper = function (message) { return null; };\n    return Serializer;\n}());\n/**\n * A simple mapper that take a function to transform an internal name to a public name\n */\nvar SimplePlaceholderMapper = (function (_super) {\n    __extends(SimplePlaceholderMapper, _super);\n    /**\n     * @param {?} message\n     * @param {?} mapName\n     */\n    function SimplePlaceholderMapper(message, mapName) {\n        var _this = _super.call(this) || this;\n        _this.mapName = mapName;\n        _this.internalToPublic = {};\n        _this.publicToNextId = {};\n        _this.publicToInternal = {};\n        message.nodes.forEach(function (node) { return node.visit(_this); });\n        return _this;\n    }\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toPublicName = function (internalName) {\n        return this.internalToPublic.hasOwnProperty(internalName) ?\n            this.internalToPublic[internalName] :\n            null;\n    };\n    /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toInternalName = function (publicName) {\n        return this.publicToInternal.hasOwnProperty(publicName) ? this.publicToInternal[publicName] :\n            null;\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitText = function (text, context) { return null; };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitTagPlaceholder = function (ph, context) {\n        this.visitPlaceholderName(ph.startName);\n        _super.prototype.visitTagPlaceholder.call(this, ph, context);\n        this.visitPlaceholderName(ph.closeName);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholder = function (ph, context) { this.visitPlaceholderName(ph.name); };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitIcuPlaceholder = function (ph, context) {\n        this.visitPlaceholderName(ph.name);\n    };\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholderName = function (internalName) {\n        if (!internalName || this.internalToPublic.hasOwnProperty(internalName)) {\n            return;\n        }\n        var /** @type {?} */ publicName = this.mapName(internalName);\n        if (this.publicToInternal.hasOwnProperty(publicName)) {\n            // Create a new XMB when it has already been used\n            var /** @type {?} */ nextId = this.publicToNextId[publicName];\n            this.publicToNextId[publicName] = nextId + 1;\n            publicName = publicName + \"_\" + nextId;\n        }\n        else {\n            this.publicToNextId[publicName] = 1;\n        }\n        this.internalToPublic[internalName] = publicName;\n        this.publicToInternal[publicName] = internalName;\n    };\n    return SimplePlaceholderMapper;\n}(RecurseVisitor));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _Visitor$1 = (function () {\n    function _Visitor$1() {\n    }\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    _Visitor$1.prototype.visitTag = function (tag) {\n        var _this = this;\n        var /** @type {?} */ strAttrs = this._serializeAttributes(tag.attrs);\n        if (tag.children.length == 0) {\n            return \"<\" + tag.name + strAttrs + \"/>\";\n        }\n        var /** @type {?} */ strChildren = tag.children.map(function (node) { return node.visit(_this); });\n        return \"<\" + tag.name + strAttrs + \">\" + strChildren.join('') + \"</\" + tag.name + \">\";\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    _Visitor$1.prototype.visitText = function (text) { return text.value; };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    _Visitor$1.prototype.visitDeclaration = function (decl) {\n        return \"<?xml\" + this._serializeAttributes(decl.attrs) + \" ?>\";\n    };\n    /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    _Visitor$1.prototype._serializeAttributes = function (attrs) {\n        var /** @type {?} */ strAttrs = Object.keys(attrs).map(function (name) { return name + \"=\\\"\" + attrs[name] + \"\\\"\"; }).join(' ');\n        return strAttrs.length > 0 ? ' ' + strAttrs : '';\n    };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    _Visitor$1.prototype.visitDoctype = function (doctype) {\n        return \"<!DOCTYPE \" + doctype.rootTag + \" [\\n\" + doctype.dtd + \"\\n]>\";\n    };\n    return _Visitor$1;\n}());\nvar _visitor = new _Visitor$1();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serialize(nodes) {\n    return nodes.map(function (node) { return node.visit(_visitor); }).join('');\n}\nvar Declaration = (function () {\n    /**\n     * @param {?} unescapedAttrs\n     */\n    function Declaration(unescapedAttrs) {\n        var _this = this;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Declaration.prototype.visit = function (visitor) { return visitor.visitDeclaration(this); };\n    return Declaration;\n}());\nvar Doctype = (function () {\n    /**\n     * @param {?} rootTag\n     * @param {?} dtd\n     */\n    function Doctype(rootTag, dtd) {\n        this.rootTag = rootTag;\n        this.dtd = dtd;\n    }\n    \n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Doctype.prototype.visit = function (visitor) { return visitor.visitDoctype(this); };\n    return Doctype;\n}());\nvar Tag = (function () {\n    /**\n     * @param {?} name\n     * @param {?=} unescapedAttrs\n     * @param {?=} children\n     */\n    function Tag(name, unescapedAttrs, children) {\n        if (unescapedAttrs === void 0) { unescapedAttrs = {}; }\n        if (children === void 0) { children = []; }\n        var _this = this;\n        this.name = name;\n        this.children = children;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Tag.prototype.visit = function (visitor) { return visitor.visitTag(this); };\n    return Tag;\n}());\nvar Text$2 = (function () {\n    /**\n     * @param {?} unescapedValue\n     */\n    function Text$2(unescapedValue) {\n        this.value = _escapeXml(unescapedValue);\n    }\n    \n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Text$2.prototype.visit = function (visitor) { return visitor.visitText(this); };\n    return Text$2;\n}());\nvar CR = (function (_super) {\n    __extends(CR, _super);\n    /**\n     * @param {?=} ws\n     */\n    function CR(ws) {\n        if (ws === void 0) { ws = 0; }\n        return _super.call(this, \"\\n\" + new Array(ws + 1).join(' ')) || this;\n    }\n    return CR;\n}(Text$2));\nvar _ESCAPED_CHARS = [\n    [/&/g, '&amp;'],\n    [/\"/g, '&quot;'],\n    [/'/g, '&apos;'],\n    [/</g, '&lt;'],\n    [/>/g, '&gt;'],\n];\n/**\n * @param {?} text\n * @return {?}\n */\nfunction _escapeXml(text) {\n    return _ESCAPED_CHARS.reduce(function (text, entry) { return text.replace(entry[0], entry[1]); }, text);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION = '1.2';\nvar _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG = 'en';\nvar _PLACEHOLDER_TAG = 'x';\nvar _FILE_TAG = 'file';\nvar _SOURCE_TAG = 'source';\nvar _TARGET_TAG = 'target';\nvar _UNIT_TAG = 'trans-unit';\nvar _CONTEXT_GROUP_TAG = 'context-group';\nvar _CONTEXT_TAG = 'context';\nvar Xliff = (function (_super) {\n    __extends(Xliff, _super);\n    function Xliff() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff.prototype.write = function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor();\n        var /** @type {?} */ transUnits = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ contextTags = [];\n            message.sources.forEach(function (source) {\n                var /** @type {?} */ contextGroupTag = new Tag(_CONTEXT_GROUP_TAG, { purpose: 'location' });\n                contextGroupTag.children.push(new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'sourcefile' }, [new Text$2(source.filePath)]), new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'linenumber' }, [new Text$2(\"\" + source.startLine)]), new CR(8));\n                contextTags.push(new CR(8), contextGroupTag);\n            });\n            var /** @type {?} */ transUnit = new Tag(_UNIT_TAG, { id: message.id, datatype: 'html' });\n            (_a = transUnit.children).push.apply(_a, [new CR(8), new Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes)), new CR(8), new Tag(_TARGET_TAG)].concat(contextTags));\n            if (message.description) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'description' }, [new Text$2(message.description)]));\n            }\n            if (message.meaning) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'meaning' }, [new Text$2(message.meaning)]));\n            }\n            transUnit.children.push(new CR(6));\n            transUnits.push(new CR(6), transUnit);\n            var _a;\n        });\n        var /** @type {?} */ body = new Tag('body', {}, transUnits.concat([new CR(4)]));\n        var /** @type {?} */ file = new Tag('file', {\n            'source-language': locale || _DEFAULT_SOURCE_LANG,\n            datatype: 'plaintext',\n            original: 'ng2.template',\n        }, [new CR(4), body, new CR(2)]);\n        var /** @type {?} */ xliff = new Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff.prototype.load = function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliffParser = new XliffParser();\n        var _a = xliffParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff.prototype.digest = function (message) { return digest(message); };\n    return Xliff;\n}(Serializer));\nvar _WriteVisitor = (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var /** @type {?} */ ctype = getCtypeForTag(ph.tag);\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype });\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.closeName, ctype: ctype });\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar XliffParser = (function () {\n    function XliffParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    XliffParser.prototype.parse = function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitElement = function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG:\n                this._unitMlString = ((null));\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG:\n                // ignore source message\n                break;\n            case _TARGET_TAG:\n                var /** @type {?} */ innerTextStart = ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _FILE_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'target-language'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                visitAll(this, element.children, null);\n                break;\n            default:\n                // TODO(vicb): assert file structure, xliff version\n                // For now only recurse on unhandled nodes\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitText = function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansion = function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansionCase = function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XliffParser.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XliffParser;\n}());\nvar XmlToI18n = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'id'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"id\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getCtypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n            return 'lb';\n        case 'img':\n            return 'image';\n        default:\n            return \"x-\" + tag;\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION$1 = '2.0';\nvar _XMLNS$1 = 'urn:oasis:names:tc:xliff:document:2.0';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG$1 = 'en';\nvar _PLACEHOLDER_TAG$1 = 'ph';\nvar _PLACEHOLDER_SPANNING_TAG = 'pc';\nvar _XLIFF_TAG = 'xliff';\nvar _SOURCE_TAG$1 = 'source';\nvar _TARGET_TAG$1 = 'target';\nvar _UNIT_TAG$1 = 'unit';\nvar Xliff2 = (function (_super) {\n    __extends(Xliff2, _super);\n    function Xliff2() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff2.prototype.write = function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor$1();\n        var /** @type {?} */ units = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ unit = new Tag(_UNIT_TAG$1, { id: message.id });\n            if (message.description || message.meaning) {\n                var /** @type {?} */ notes = new Tag('notes');\n                if (message.description) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'description' }, [new Text$2(message.description)]));\n                }\n                if (message.meaning) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'meaning' }, [new Text$2(message.meaning)]));\n                }\n                notes.children.push(new CR(6));\n                unit.children.push(new CR(6), notes);\n            }\n            var /** @type {?} */ segment = new Tag('segment');\n            segment.children.push(new CR(8), new Tag(_SOURCE_TAG$1, {}, visitor.serialize(message.nodes)), new CR(6));\n            unit.children.push(new CR(6), segment, new CR(4));\n            units.push(new CR(4), unit);\n        });\n        var /** @type {?} */ file = new Tag('file', { 'original': 'ng.template', id: 'ngi18n' }, units.concat([new CR(2)]));\n        var /** @type {?} */ xliff = new Tag(_XLIFF_TAG, { version: _VERSION$1, xmlns: _XMLNS$1, srcLang: locale || _DEFAULT_SOURCE_LANG$1 }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2.prototype.load = function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliff2Parser = new Xliff2Parser();\n        var _a = xliff2Parser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$1();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff2 parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2.prototype.digest = function (message) { return decimalDigest(message); };\n    return Xliff2;\n}(Serializer));\nvar _WriteVisitor$1 = (function () {\n    function _WriteVisitor$1() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitText = function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ type = getTypeForTag(ph.tag);\n        if (ph.isVoid) {\n            var /** @type {?} */ tagPh = new Tag(_PLACEHOLDER_TAG$1, {\n                id: (this._nextPlaceholderId++).toString(),\n                equiv: ph.startName,\n                type: type,\n                disp: \"<\" + ph.tag + \"/>\",\n            });\n            return [tagPh];\n        }\n        var /** @type {?} */ tagPc = new Tag(_PLACEHOLDER_SPANNING_TAG, {\n            id: (this._nextPlaceholderId++).toString(),\n            equivStart: ph.startName,\n            equivEnd: ph.closeName,\n            type: type,\n            dispStart: \"<\" + ph.tag + \">\",\n            dispEnd: \"</\" + ph.tag + \">\",\n        });\n        var /** @type {?} */ nodes = [].concat.apply([], ph.children.map(function (node) { return node.visit(_this); }));\n        if (nodes.length) {\n            nodes.forEach(function (node) { return tagPc.children.push(node); });\n        }\n        else {\n            tagPc.children.push(new Text$2(''));\n        }\n        return [tagPc];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG$1, {\n                id: (this._nextPlaceholderId++).toString(),\n                equiv: ph.name,\n                disp: \"{{\" + ph.value + \"}}\",\n            })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitIcuPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG$1, { id: (this._nextPlaceholderId++).toString() })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.serialize = function (nodes) {\n        var _this = this;\n        this._nextPlaceholderId = 0;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor$1;\n}());\nvar Xliff2Parser = (function () {\n    function Xliff2Parser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2Parser.prototype.parse = function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitElement = function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG$1:\n                this._unitMlString = null;\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG$1 + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG$1:\n                // ignore source message\n                break;\n            case _TARGET_TAG$1:\n                var /** @type {?} */ innerTextStart = ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _XLIFF_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'trgLang'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                var /** @type {?} */ versionAttr = element.attrs.find(function (attr) { return attr.name === 'version'; });\n                if (versionAttr) {\n                    var /** @type {?} */ version = versionAttr.value;\n                    if (version !== '2.0') {\n                        this._addError(element, \"The XLIFF file version \" + version + \" is not compatible with XLIFF 2.0 serializer\");\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                    }\n                }\n                break;\n            default:\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitText = function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansion = function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansionCase = function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2Parser.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return Xliff2Parser;\n}());\nvar XmlToI18n$1 = (function () {\n    function XmlToI18n$1() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.convert = function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] : [].concat.apply([], visitAll(this, xmlIcu.rootNodes));\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitText = function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitElement = function (el, context) {\n        var _this = this;\n        switch (el.name) {\n            case _PLACEHOLDER_TAG$1:\n                var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'equiv'; });\n                if (nameAttr) {\n                    return [new Placeholder('', nameAttr.value, el.sourceSpan)];\n                }\n                this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equiv\\\" attribute\");\n                break;\n            case _PLACEHOLDER_SPANNING_TAG:\n                var /** @type {?} */ startAttr = el.attrs.find(function (attr) { return attr.name === 'equivStart'; });\n                var /** @type {?} */ endAttr = el.attrs.find(function (attr) { return attr.name === 'equivEnd'; });\n                if (!startAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivStart\\\" attribute\");\n                }\n                else if (!endAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivEnd\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ startId = startAttr.value;\n                    var /** @type {?} */ endId = endAttr.value;\n                    var /** @type {?} */ nodes = [];\n                    return nodes.concat.apply(nodes, [new Placeholder('', startId, el.sourceSpan)].concat(el.children.map(function (node) { return node.visit(_this, null); }), [new Placeholder('', endId, el.sourceSpan)]));\n                }\n                break;\n            default:\n                this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitExpansion = function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitExpansionCase = function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: [].concat.apply([], visitAll(this, icuCase.expression)),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n$1.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XmlToI18n$1;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getTypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n        case 'b':\n        case 'i':\n        case 'u':\n            return 'fmt';\n        case 'img':\n            return 'image';\n        case 'a':\n            return 'link';\n        default:\n            return 'other';\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _MESSAGES_TAG = 'messagebundle';\nvar _MESSAGE_TAG = 'msg';\nvar _PLACEHOLDER_TAG$2 = 'ph';\nvar _EXEMPLE_TAG = 'ex';\nvar _SOURCE_TAG$2 = 'source';\nvar _DOCTYPE = \"<!ELEMENT messagebundle (msg)*>\\n<!ATTLIST messagebundle class CDATA #IMPLIED>\\n\\n<!ELEMENT msg (#PCDATA|ph|source)*>\\n<!ATTLIST msg id CDATA #IMPLIED>\\n<!ATTLIST msg seq CDATA #IMPLIED>\\n<!ATTLIST msg name CDATA #IMPLIED>\\n<!ATTLIST msg desc CDATA #IMPLIED>\\n<!ATTLIST msg meaning CDATA #IMPLIED>\\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\\n<!ATTLIST msg xml:space (default|preserve) \\\"default\\\">\\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\\n\\n<!ELEMENT source (#PCDATA)>\\n\\n<!ELEMENT ph (#PCDATA|ex)*>\\n<!ATTLIST ph name CDATA #REQUIRED>\\n\\n<!ELEMENT ex (#PCDATA)>\";\nvar Xmb = (function (_super) {\n    __extends(Xmb, _super);\n    function Xmb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xmb.prototype.write = function (messages, locale) {\n        var /** @type {?} */ exampleVisitor = new ExampleVisitor();\n        var /** @type {?} */ visitor = new _Visitor$2();\n        var /** @type {?} */ rootNode = new Tag(_MESSAGES_TAG);\n        messages.forEach(function (message) {\n            var /** @type {?} */ attrs = { id: message.id };\n            if (message.description) {\n                attrs['desc'] = message.description;\n            }\n            if (message.meaning) {\n                attrs['meaning'] = message.meaning;\n            }\n            var /** @type {?} */ sourceTags = [];\n            message.sources.forEach(function (source) {\n                sourceTags.push(new Tag(_SOURCE_TAG$2, {}, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            rootNode.children.push(new CR(2), new Tag(_MESSAGE_TAG, attrs, sourceTags.concat(visitor.serialize(message.nodes))));\n        });\n        rootNode.children.push(new CR());\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }),\n            new CR(),\n            new Doctype(_MESSAGES_TAG, _DOCTYPE),\n            new CR(),\n            exampleVisitor.addDefaultExamples(rootNode),\n            new CR(),\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xmb.prototype.load = function (content, url) {\n        throw new Error('Unsupported');\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.digest = function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.createNameMapper = function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xmb;\n}(Serializer));\nvar _Visitor$2 = (function () {\n    function _Visitor$2() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitText = function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitTagPlaceholder = function (ph, context) {\n        var /** @type {?} */ startEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"<\" + ph.tag + \">\")]);\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.startName }, [startEx]);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        var /** @type {?} */ closeEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"</\" + ph.tag + \">\")]);\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.closeName }, [closeEx]);\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitIcuPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _Visitor$2.prototype.serialize = function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _Visitor$2;\n}());\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest$1(message) {\n    return decimalDigest(message);\n}\nvar ExampleVisitor = (function () {\n    function ExampleVisitor() {\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    ExampleVisitor.prototype.addDefaultExamples = function (node) {\n        node.visit(this);\n        return node;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitTag = function (tag) {\n        var _this = this;\n        if (tag.name === _PLACEHOLDER_TAG$2) {\n            if (!tag.children || tag.children.length == 0) {\n                var /** @type {?} */ exText = new Text$2(tag.attrs['name'] || '...');\n                tag.children = [new Tag(_EXEMPLE_TAG, {}, [exText])];\n            }\n        }\n        else if (tag.children) {\n            tag.children.forEach(function (node) { return node.visit(_this); });\n        }\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitText = function (text) { };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDeclaration = function (decl) { };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDoctype = function (doctype) { };\n    return ExampleVisitor;\n}());\n/**\n * @param {?} internalName\n * @return {?}\n */\nfunction toPublicName(internalName) {\n    return internalName.toUpperCase().replace(/[^A-Z0-9_]/g, '_');\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _TRANSLATIONS_TAG = 'translationbundle';\nvar _TRANSLATION_TAG = 'translation';\nvar _PLACEHOLDER_TAG$3 = 'ph';\nvar Xtb = (function (_super) {\n    __extends(Xtb, _super);\n    function Xtb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xtb.prototype.write = function (messages, locale) { throw new Error('Unsupported'); };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xtb.prototype.load = function (content, url) {\n        // xtb to xml nodes\n        var /** @type {?} */ xtbParser = new XtbParser();\n        var _a = xtbParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$2();\n        // Because we should be able to load xtb files that rely on features not supported by angular,\n        // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n        // converted\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var /** @type {?} */ valueFn = function () {\n                var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, errors = _a.errors;\n                if (errors.length) {\n                    throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n                }\n                return i18nNodes;\n            };\n            createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n        });\n        if (errors.length) {\n            throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.digest = function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.createNameMapper = function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xtb;\n}(Serializer));\n/**\n * @param {?} messages\n * @param {?} id\n * @param {?} valueFn\n * @return {?}\n */\nfunction createLazyProperty(messages, id, valueFn) {\n    Object.defineProperty(messages, id, {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n            var /** @type {?} */ value = valueFn();\n            Object.defineProperty(messages, id, { enumerable: true, value: value });\n            return value;\n        },\n        set: function (_) { throw new Error('Could not overwrite an XTB translation'); },\n    });\n}\nvar XtbParser = (function () {\n    function XtbParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    XtbParser.prototype.parse = function (xtb, url) {\n        this._bundleDepth = 0;\n        this._msgIdToHtml = {};\n        // We can not parse the ICU messages at this point as some messages might not originate\n        // from Angular that could not be lex'd.\n        var /** @type {?} */ xml = new XmlParser().parse(xtb, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitElement = function (element, context) {\n        switch (element.name) {\n            case _TRANSLATIONS_TAG:\n                this._bundleDepth++;\n                if (this._bundleDepth > 1) {\n                    this._addError(element, \"<\" + _TRANSLATIONS_TAG + \"> elements can not be nested\");\n                }\n                var /** @type {?} */ langAttr = element.attrs.find(function (attr) { return attr.name === 'lang'; });\n                if (langAttr) {\n                    this._locale = langAttr.value;\n                }\n                visitAll(this, element.children, null);\n                this._bundleDepth--;\n                break;\n            case _TRANSLATION_TAG:\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _TRANSLATION_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        var /** @type {?} */ innerTextStart = ((element.startSourceSpan)).end.offset;\n                        var /** @type {?} */ innerTextEnd = ((element.endSourceSpan)).start.offset;\n                        var /** @type {?} */ content = ((element.startSourceSpan)).start.file.content;\n                        var /** @type {?} */ innerText = content.slice(/** @type {?} */ ((innerTextStart)), /** @type {?} */ ((innerTextEnd)));\n                        this._msgIdToHtml[id] = innerText;\n                    }\n                }\n                break;\n            default:\n                this._addError(element, 'Unexpected tag');\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitText = function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansion = function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansionCase = function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XtbParser.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XtbParser;\n}());\nvar XmlToI18n$2 = (function () {\n    function XmlToI18n$2() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.convert = function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitText = function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitExpansion = function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitExpansionCase = function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitElement = function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG$3) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'name'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG$3 + \"> misses the \\\"name\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n$2.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n$2;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlParser = (function (_super) {\n    __extends(HtmlParser, _super);\n    function HtmlParser() {\n        return _super.call(this, getHtmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    HtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms, interpolationConfig);\n    };\n    return HtmlParser;\n}(Parser$1));\nHtmlParser.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nHtmlParser.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for translated messages\n */\nvar TranslationBundle = (function () {\n    /**\n     * @param {?=} _i18nNodesByMsgId\n     * @param {?=} locale\n     * @param {?=} digest\n     * @param {?=} mapperFactory\n     * @param {?=} missingTranslationStrategy\n     * @param {?=} console\n     */\n    function TranslationBundle(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        if (missingTranslationStrategy === void 0) { missingTranslationStrategy = _angular_core.MissingTranslationStrategy.Warning; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this.digest = digest;\n        this.mapperFactory = mapperFactory;\n        this._i18nToHtml = new I18nToHtmlVisitor(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console);\n    }\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    TranslationBundle.load = function (content, url, serializer, missingTranslationStrategy, console) {\n        var _a = serializer.load(content, url), locale = _a.locale, i18nNodesByMsgId = _a.i18nNodesByMsgId;\n        var /** @type {?} */ digestFn = function (m) { return serializer.digest(m); };\n        var /** @type {?} */ mapperFactory = function (m) { return ((serializer.createNameMapper(m))); };\n        return new TranslationBundle(i18nNodesByMsgId, locale, digestFn, mapperFactory, missingTranslationStrategy, console);\n    };\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.get = function (srcMsg) {\n        var /** @type {?} */ html = this._i18nToHtml.convert(srcMsg);\n        if (html.errors.length) {\n            throw new Error(html.errors.join('\\n'));\n        }\n        return html.nodes;\n    };\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.has = function (srcMsg) { return this.digest(srcMsg) in this._i18nNodesByMsgId; };\n    return TranslationBundle;\n}());\nvar I18nToHtmlVisitor = (function () {\n    /**\n     * @param {?=} _i18nNodesByMsgId\n     * @param {?=} _locale\n     * @param {?=} _digest\n     * @param {?=} _mapperFactory\n     * @param {?=} _missingTranslationStrategy\n     * @param {?=} _console\n     */\n    function I18nToHtmlVisitor(_i18nNodesByMsgId, _locale, _digest, _mapperFactory, _missingTranslationStrategy, _console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this._locale = _locale;\n        this._digest = _digest;\n        this._mapperFactory = _mapperFactory;\n        this._missingTranslationStrategy = _missingTranslationStrategy;\n        this._console = _console;\n        this._contextStack = [];\n        this._errors = [];\n    }\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.convert = function (srcMsg) {\n        this._contextStack.length = 0;\n        this._errors.length = 0;\n        // i18n to text\n        var /** @type {?} */ text = this._convertToText(srcMsg);\n        // text to html\n        var /** @type {?} */ url = srcMsg.nodes[0].sourceSpan.start.file.url;\n        var /** @type {?} */ html = new HtmlParser().parse(text, url, true);\n        return {\n            nodes: html.rootNodes,\n            errors: this._errors.concat(html.errors),\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitText = function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        return container.children.map(function (n) { return n.visit(_this); }).join('');\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // TODO(vicb): Once all format switch to using expression placeholders\n        // we should throw when the placeholder is not in the source message\n        var /** @type {?} */ exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n            this._srcMsg.placeholders[icu.expression] :\n            icu.expression;\n        return \"{\" + exp + \", \" + icu.type + \", \" + cases.join(' ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitPlaceholder = function (ph, context) {\n        var /** @type {?} */ phName = this._mapper(ph.name);\n        if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n            return this._srcMsg.placeholders[phName];\n        }\n        if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n            return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n        }\n        this._addError(ph, \"Unknown placeholder \\\"\" + ph.name + \"\\\"\");\n        return '';\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ tag = \"\" + ph.tag;\n        var /** @type {?} */ attrs = Object.keys(ph.attrs).map(function (name) { return name + \"=\\\"\" + ph.attrs[name] + \"\\\"\"; }).join(' ');\n        if (ph.isVoid) {\n            return \"<\" + tag + \" \" + attrs + \"/>\";\n        }\n        var /** @type {?} */ children = ph.children.map(function (c) { return c.visit(_this); }).join('');\n        return \"<\" + tag + \" \" + attrs + \">\" + children + \"</\" + tag + \">\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        // An ICU placeholder references the source message to be serialized\n        return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n    };\n    /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._convertToText = function (srcMsg) {\n        var _this = this;\n        var /** @type {?} */ id = this._digest(srcMsg);\n        var /** @type {?} */ mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n        var /** @type {?} */ nodes;\n        this._contextStack.push({ msg: this._srcMsg, mapper: this._mapper });\n        this._srcMsg = srcMsg;\n        if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n            // When there is a translation use its nodes as the source\n            // And create a mapper to convert serialized placeholder names to internal names\n            nodes = this._i18nNodesByMsgId[id];\n            this._mapper = function (name) { return mapper ? ((mapper.toInternalName(name))) : name; };\n        }\n        else {\n            // When no translation has been found\n            // - report an error / a warning / nothing,\n            // - use the nodes from the original message\n            // - placeholders are already internal and need no mapper\n            if (this._missingTranslationStrategy === _angular_core.MissingTranslationStrategy.Error) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._addError(srcMsg.nodes[0], \"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            else if (this._console &&\n                this._missingTranslationStrategy === _angular_core.MissingTranslationStrategy.Warning) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._console.warn(\"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            nodes = srcMsg.nodes;\n            this._mapper = function (name) { return name; };\n        }\n        var /** @type {?} */ text = nodes.map(function (node) { return node.visit(_this); }).join('');\n        var /** @type {?} */ context = ((this._contextStack.pop()));\n        this._srcMsg = context.msg;\n        this._mapper = context.mapper;\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._addError = function (el, msg) {\n        this._errors.push(new I18nError(el.sourceSpan, msg));\n    };\n    return I18nToHtmlVisitor;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar I18NHtmlParser = (function () {\n    /**\n     * @param {?} _htmlParser\n     * @param {?=} translations\n     * @param {?=} translationsFormat\n     * @param {?=} missingTranslation\n     * @param {?=} console\n     */\n    function I18NHtmlParser(_htmlParser, translations, translationsFormat, missingTranslation, console) {\n        if (missingTranslation === void 0) { missingTranslation = _angular_core.MissingTranslationStrategy.Warning; }\n        this._htmlParser = _htmlParser;\n        if (translations) {\n            var serializer = createSerializer(translationsFormat);\n            this._translationBundle =\n                TranslationBundle.load(translations, 'i18n', serializer, missingTranslation, console);\n        }\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    I18NHtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n        if (!this._translationBundle) {\n            // Do not enable i18n when no translation bundle is provided\n            return parseResult;\n        }\n        if (parseResult.errors.length) {\n            return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n        }\n        return mergeTranslations(parseResult.rootNodes, this._translationBundle, interpolationConfig, [], {});\n    };\n    return I18NHtmlParser;\n}());\n/**\n * @param {?=} format\n * @return {?}\n */\nfunction createSerializer(format) {\n    format = (format || 'xlf').toLowerCase();\n    switch (format) {\n        case 'xmb':\n            return new Xmb();\n        case 'xtb':\n            return new Xtb();\n        case 'xliff2':\n        case 'xlf2':\n            return new Xliff2();\n        case 'xliff':\n        case 'xlf':\n        default:\n            return new Xliff();\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CORE = assetUrl('core');\nvar Identifiers = (function () {\n    function Identifiers() {\n    }\n    return Identifiers;\n}());\nIdentifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n    name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n    moduleUrl: CORE,\n    runtime: _angular_core.ANALYZE_FOR_ENTRY_COMPONENTS\n};\nIdentifiers.ElementRef = { name: 'ElementRef', moduleUrl: CORE, runtime: _angular_core.ElementRef };\nIdentifiers.NgModuleRef = { name: 'NgModuleRef', moduleUrl: CORE, runtime: _angular_core.NgModuleRef };\nIdentifiers.ViewContainerRef = { name: 'ViewContainerRef', moduleUrl: CORE, runtime: _angular_core.ViewContainerRef };\nIdentifiers.ChangeDetectorRef = { name: 'ChangeDetectorRef', moduleUrl: CORE, runtime: _angular_core.ChangeDetectorRef };\nIdentifiers.QueryList = { name: 'QueryList', moduleUrl: CORE, runtime: _angular_core.QueryList };\nIdentifiers.TemplateRef = { name: 'TemplateRef', moduleUrl: CORE, runtime: _angular_core.TemplateRef };\nIdentifiers.CodegenComponentFactoryResolver = {\n    name: 'ɵCodegenComponentFactoryResolver',\n    moduleUrl: CORE,\n    runtime: _angular_core.ɵCodegenComponentFactoryResolver\n};\nIdentifiers.ComponentFactoryResolver = {\n    name: 'ComponentFactoryResolver',\n    moduleUrl: CORE,\n    runtime: _angular_core.ComponentFactoryResolver\n};\nIdentifiers.ComponentFactory = { name: 'ComponentFactory', moduleUrl: CORE, runtime: _angular_core.ComponentFactory };\nIdentifiers.ComponentRef = { name: 'ComponentRef', moduleUrl: CORE, runtime: _angular_core.ComponentRef };\nIdentifiers.NgModuleFactory = { name: 'NgModuleFactory', moduleUrl: CORE, runtime: _angular_core.NgModuleFactory };\nIdentifiers.NgModuleInjector = {\n    name: 'ɵNgModuleInjector',\n    moduleUrl: CORE,\n    runtime: _angular_core.ɵNgModuleInjector,\n};\nIdentifiers.RegisterModuleFactoryFn = {\n    name: 'ɵregisterModuleFactory',\n    moduleUrl: CORE,\n    runtime: _angular_core.ɵregisterModuleFactory,\n};\nIdentifiers.Injector = { name: 'Injector', moduleUrl: CORE, runtime: _angular_core.Injector };\nIdentifiers.ViewEncapsulation = { name: 'ViewEncapsulation', moduleUrl: CORE, runtime: _angular_core.ViewEncapsulation };\nIdentifiers.ChangeDetectionStrategy = {\n    name: 'ChangeDetectionStrategy',\n    moduleUrl: CORE,\n    runtime: _angular_core.ChangeDetectionStrategy\n};\nIdentifiers.SecurityContext = {\n    name: 'SecurityContext',\n    moduleUrl: CORE,\n    runtime: _angular_core.SecurityContext,\n};\nIdentifiers.LOCALE_ID = { name: 'LOCALE_ID', moduleUrl: CORE, runtime: _angular_core.LOCALE_ID };\nIdentifiers.TRANSLATIONS_FORMAT = { name: 'TRANSLATIONS_FORMAT', moduleUrl: CORE, runtime: _angular_core.TRANSLATIONS_FORMAT };\nIdentifiers.inlineInterpolate = { name: 'ɵinlineInterpolate', moduleUrl: CORE, runtime: _angular_core.ɵinlineInterpolate };\nIdentifiers.interpolate = { name: 'ɵinterpolate', moduleUrl: CORE, runtime: _angular_core.ɵinterpolate };\nIdentifiers.EMPTY_ARRAY = { name: 'ɵEMPTY_ARRAY', moduleUrl: CORE, runtime: _angular_core.ɵEMPTY_ARRAY };\nIdentifiers.EMPTY_MAP = { name: 'ɵEMPTY_MAP', moduleUrl: CORE, runtime: _angular_core.ɵEMPTY_MAP };\nIdentifiers.Renderer = { name: 'Renderer', moduleUrl: CORE, runtime: _angular_core.Renderer };\nIdentifiers.viewDef = { name: 'ɵvid', moduleUrl: CORE, runtime: _angular_core.ɵvid };\nIdentifiers.elementDef = { name: 'ɵeld', moduleUrl: CORE, runtime: _angular_core.ɵeld };\nIdentifiers.anchorDef = { name: 'ɵand', moduleUrl: CORE, runtime: _angular_core.ɵand };\nIdentifiers.textDef = { name: 'ɵted', moduleUrl: CORE, runtime: _angular_core.ɵted };\nIdentifiers.directiveDef = { name: 'ɵdid', moduleUrl: CORE, runtime: _angular_core.ɵdid };\nIdentifiers.providerDef = { name: 'ɵprd', moduleUrl: CORE, runtime: _angular_core.ɵprd };\nIdentifiers.queryDef = { name: 'ɵqud', moduleUrl: CORE, runtime: _angular_core.ɵqud };\nIdentifiers.pureArrayDef = { name: 'ɵpad', moduleUrl: CORE, runtime: _angular_core.ɵpad };\nIdentifiers.pureObjectDef = { name: 'ɵpod', moduleUrl: CORE, runtime: _angular_core.ɵpod };\nIdentifiers.purePipeDef = { name: 'ɵppd', moduleUrl: CORE, runtime: _angular_core.ɵppd };\nIdentifiers.pipeDef = { name: 'ɵpid', moduleUrl: CORE, runtime: _angular_core.ɵpid };\nIdentifiers.nodeValue = { name: 'ɵnov', moduleUrl: CORE, runtime: _angular_core.ɵnov };\nIdentifiers.ngContentDef = { name: 'ɵncd', moduleUrl: CORE, runtime: _angular_core.ɵncd };\nIdentifiers.unwrapValue = { name: 'ɵunv', moduleUrl: CORE, runtime: _angular_core.ɵunv };\nIdentifiers.createRendererType2 = { name: 'ɵcrt', moduleUrl: CORE, runtime: _angular_core.ɵcrt };\nIdentifiers.RendererType2 = {\n    name: 'RendererType2',\n    moduleUrl: CORE,\n    // type only\n    runtime: null\n};\nIdentifiers.ViewDefinition = {\n    name: 'ɵViewDefinition',\n    moduleUrl: CORE,\n    // type only\n    runtime: null\n};\nIdentifiers.createComponentFactory = { name: 'ɵccf', moduleUrl: CORE, runtime: _angular_core.ɵccf };\n/**\n * @param {?} pkg\n * @param {?=} path\n * @param {?=} type\n * @return {?}\n */\nfunction assetUrl(pkg, path, type) {\n    if (path === void 0) { path = null; }\n    if (type === void 0) { type = 'src'; }\n    if (path == null) {\n        return \"@angular/\" + pkg;\n    }\n    else {\n        return \"@angular/\" + pkg + \"/\" + type + \"/\" + path;\n    }\n}\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction resolveIdentifier(identifier) {\n    var /** @type {?} */ name = identifier.name;\n    return _angular_core.ɵreflector.resolveIdentifier(name, identifier.moduleUrl, null, identifier.runtime);\n}\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction createIdentifier(identifier) {\n    return { reference: resolveIdentifier(identifier) };\n}\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction identifierToken(identifier) {\n    return { identifier: identifier };\n}\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction createIdentifierToken(identifier) {\n    return identifierToken(createIdentifier(identifier));\n}\n/**\n * @param {?} enumType\n * @param {?} name\n * @return {?}\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// http://cldr.unicode.org/index/cldr-spec/plural-rules\nvar PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n/**\n * Expands special forms into elements.\n *\n * For example,\n *\n * ```\n * { messages.length, plural,\n *   =0 {zero}\n *   =1 {one}\n *   other {more than one}\n * }\n * ```\n *\n * will be expanded into\n *\n * ```\n * <ng-container [ngPlural]=\"messages.length\">\n *   <ng-template ngPluralCase=\"=0\">zero</ng-template>\n *   <ng-template ngPluralCase=\"=1\">one</ng-template>\n *   <ng-template ngPluralCase=\"other\">more than one</ng-template>\n * </ng-container>\n * ```\n * @param {?} nodes\n * @return {?}\n */\nfunction expandNodes(nodes) {\n    var /** @type {?} */ expander = new _Expander();\n    return new ExpansionResult(visitAll(expander, nodes), expander.isExpanded, expander.errors);\n}\nvar ExpansionResult = (function () {\n    /**\n     * @param {?} nodes\n     * @param {?} expanded\n     * @param {?} errors\n     */\n    function ExpansionResult(nodes, expanded, errors) {\n        this.nodes = nodes;\n        this.expanded = expanded;\n        this.errors = errors;\n    }\n    return ExpansionResult;\n}());\nvar ExpansionError = (function (_super) {\n    __extends(ExpansionError, _super);\n    /**\n     * @param {?} span\n     * @param {?} errorMsg\n     */\n    function ExpansionError(span, errorMsg) {\n        return _super.call(this, span, errorMsg) || this;\n    }\n    return ExpansionError;\n}(ParseError));\n/**\n * Expand expansion forms (plural, select) to directives\n *\n * \\@internal\n */\nvar _Expander = (function () {\n    function _Expander() {\n        this.isExpanded = false;\n        this.errors = [];\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitElement = function (element, context) {\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitAttribute = function (attribute, context) { return attribute; };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitText = function (text, context) { return text; };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitComment = function (comment, context) { return comment; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansion = function (icu, context) {\n        this.isExpanded = true;\n        return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n            _expandDefaultForm(icu, this.errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansionCase = function (icuCase, context) {\n        throw new Error('Should not be reached');\n    };\n    return _Expander;\n}());\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandPluralForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n            errors.push(new ExpansionError(c.valueSourceSpan, \"Plural cases should be \\\"=<number>\\\" or one of \" + PLURAL_CASES.join(\", \")));\n        }\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        return new Element(\"ng-template\", [new Attribute$1('ngPluralCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandDefaultForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        if (c.value === 'other') {\n            // other is the default case when no values match\n            return new Element(\"ng-template\", [new Attribute$1('ngSwitchDefault', '', c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n        }\n        return new Element(\"ng-template\", [new Attribute$1('ngSwitchCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ProviderError = (function (_super) {\n    __extends(ProviderError, _super);\n    /**\n     * @param {?} message\n     * @param {?} span\n     */\n    function ProviderError(message, span) {\n        return _super.call(this, span, message) || this;\n    }\n    return ProviderError;\n}(ParseError));\nvar ProviderViewContext = (function () {\n    /**\n     * @param {?} component\n     */\n    function ProviderViewContext(component) {\n        var _this = this;\n        this.component = component;\n        this.errors = [];\n        this.viewQueries = _getViewQueries(component);\n        this.viewProviders = new Map();\n        component.viewProviders.forEach(function (provider) {\n            if (_this.viewProviders.get(tokenReference(provider.token)) == null) {\n                _this.viewProviders.set(tokenReference(provider.token), true);\n            }\n        });\n    }\n    return ProviderViewContext;\n}());\nvar ProviderElementContext = (function () {\n    /**\n     * @param {?} viewContext\n     * @param {?} _parent\n     * @param {?} _isViewRoot\n     * @param {?} _directiveAsts\n     * @param {?} attrs\n     * @param {?} refs\n     * @param {?} isTemplate\n     * @param {?} contentQueryStartId\n     * @param {?} _sourceSpan\n     */\n    function ProviderElementContext(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, isTemplate, contentQueryStartId, _sourceSpan) {\n        var _this = this;\n        this.viewContext = viewContext;\n        this._parent = _parent;\n        this._isViewRoot = _isViewRoot;\n        this._directiveAsts = _directiveAsts;\n        this._sourceSpan = _sourceSpan;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._hasViewContainer = false;\n        this._queriedTokens = new Map();\n        this._attrs = {};\n        attrs.forEach(function (attrAst) { return _this._attrs[attrAst.name] = attrAst.value; });\n        var directivesMeta = _directiveAsts.map(function (directiveAst) { return directiveAst.directive; });\n        this._allProviders =\n            _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n        this._contentQueries = _getContentQueries(contentQueryStartId, directivesMeta);\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._addQueryReadsTo(provider.token, provider.token, _this._queriedTokens);\n        });\n        if (isTemplate) {\n            var templateRefId = createIdentifierToken(Identifiers.TemplateRef);\n            this._addQueryReadsTo(templateRefId, templateRefId, this._queriedTokens);\n        }\n        refs.forEach(function (refAst) {\n            var defaultQueryValue = refAst.value || createIdentifierToken(Identifiers.ElementRef);\n            _this._addQueryReadsTo({ value: refAst.name }, defaultQueryValue, _this._queriedTokens);\n        });\n        if (this._queriedTokens.get(resolveIdentifier(Identifiers.ViewContainerRef))) {\n            this._hasViewContainer = true;\n        }\n        // create the providers that we know are eager first\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            var eager = provider.eager || _this._queriedTokens.get(tokenReference(provider.token));\n            if (eager) {\n                _this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ProviderElementContext.prototype.afterElement = function () {\n        var _this = this;\n        // collect lazy providers\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n        });\n    };\n    Object.defineProperty(ProviderElementContext.prototype, \"transformProviders\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return Array.from(this._transformedProviders.values());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedDirectiveAsts\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ sortedProviderTypes = this.transformProviders.map(function (provider) { return provider.token.identifier; });\n            var /** @type {?} */ sortedDirectives = this._directiveAsts.slice();\n            sortedDirectives.sort(function (dir1, dir2) { return sortedProviderTypes.indexOf(dir1.directive.type) -\n                sortedProviderTypes.indexOf(dir2.directive.type); });\n            return sortedDirectives;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedHasViewContainer\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._hasViewContainer; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"queryMatches\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ allMatches = [];\n            this._queriedTokens.forEach(function (matches) { allMatches.push.apply(allMatches, matches); });\n            return allMatches;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    ProviderElementContext.prototype._addQueryReadsTo = function (token, defaultValue, queryReadTokens) {\n        this._getQueriesFor(token).forEach(function (query) {\n            var /** @type {?} */ queryValue = query.meta.read || defaultValue;\n            var /** @type {?} */ tokenRef = tokenReference(queryValue);\n            var /** @type {?} */ queryMatches = queryReadTokens.get(tokenRef);\n            if (!queryMatches) {\n                queryMatches = [];\n                queryReadTokens.set(tokenRef, queryMatches);\n            }\n            queryMatches.push({ queryId: query.queryId, value: queryValue });\n        });\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getQueriesFor = function (token) {\n        var /** @type {?} */ result = [];\n        var /** @type {?} */ currentEl = this;\n        var /** @type {?} */ distance = 0;\n        var /** @type {?} */ queries;\n        while (currentEl !== null) {\n            queries = currentEl._contentQueries.get(tokenReference(token));\n            if (queries) {\n                result.push.apply(result, queries.filter(function (query) { return query.meta.descendants || distance <= 1; }));\n            }\n            if (currentEl._directiveAsts.length > 0) {\n                distance++;\n            }\n            currentEl = currentEl._parent;\n        }\n        queries = this.viewContext.viewQueries.get(tokenReference(token));\n        if (queries) {\n            result.push.apply(result, queries);\n        }\n        return result;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getOrCreateLocalProvider = function (requestingProviderType, token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider || ((requestingProviderType === ProviderAstType.Directive ||\n            requestingProviderType === ProviderAstType.PublicService) &&\n            resolvedProvider.providerType === ProviderAstType.PrivateService) ||\n            ((requestingProviderType === ProviderAstType.PrivateService ||\n                requestingProviderType === ProviderAstType.PublicService) &&\n                resolvedProvider.providerType === ProviderAstType.Builtin)) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this.viewContext.errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), this._sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = ((_this._getDependency(resolvedProvider.providerType, { token: provider.useExisting }, eager)));\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getLocalDependency = function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        if (dep.isAttribute) {\n            var /** @type {?} */ attrValue = this._attrs[((dep.token)).value];\n            return { isValue: true, value: attrValue == null ? null : attrValue };\n        }\n        if (dep.token != null) {\n            // access builtints\n            if ((requestingProviderType === ProviderAstType.Directive ||\n                requestingProviderType === ProviderAstType.Component)) {\n                if (tokenReference(dep.token) === resolveIdentifier(Identifiers.Renderer) ||\n                    tokenReference(dep.token) === resolveIdentifier(Identifiers.ElementRef) ||\n                    tokenReference(dep.token) === resolveIdentifier(Identifiers.ChangeDetectorRef) ||\n                    tokenReference(dep.token) === resolveIdentifier(Identifiers.TemplateRef)) {\n                    return dep;\n                }\n                if (tokenReference(dep.token) === resolveIdentifier(Identifiers.ViewContainerRef)) {\n                    this._hasViewContainer = true;\n                }\n            }\n            // access the injector\n            if (tokenReference(dep.token) === resolveIdentifier(Identifiers.Injector)) {\n                return dep;\n            }\n            // access providers\n            if (this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager) != null) {\n                return dep;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getDependency = function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ currElement = this;\n        var /** @type {?} */ currEager = eager;\n        var /** @type {?} */ result = null;\n        if (!dep.isSkipSelf) {\n            result = this._getLocalDependency(requestingProviderType, dep, eager);\n        }\n        if (dep.isSelf) {\n            if (!result && dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n        }\n        else {\n            // check parent elements\n            while (!result && currElement._parent) {\n                var /** @type {?} */ prevElement = currElement;\n                currElement = currElement._parent;\n                if (prevElement._isViewRoot) {\n                    currEager = false;\n                }\n                result = currElement._getLocalDependency(ProviderAstType.PublicService, dep, currEager);\n            }\n            // check @Host restriction\n            if (!result) {\n                if (!dep.isHost || this.viewContext.component.isHost ||\n                    this.viewContext.component.type.reference === tokenReference(/** @type {?} */ ((dep.token))) ||\n                    this.viewContext.viewProviders.get(tokenReference(/** @type {?} */ ((dep.token)))) != null) {\n                    result = dep;\n                }\n                else {\n                    result = dep.isOptional ? result = { isValue: true, value: null } : null;\n                }\n            }\n        }\n        if (!result) {\n            this.viewContext.errors.push(new ProviderError(\"No provider for \" + tokenName(/** @type {?} */ ((dep.token))), this._sourceSpan));\n        }\n        return result;\n    };\n    return ProviderElementContext;\n}());\nvar NgModuleProviderAnalyzer = (function () {\n    /**\n     * @param {?} ngModule\n     * @param {?} extraProviders\n     * @param {?} sourceSpan\n     */\n    function NgModuleProviderAnalyzer(ngModule, extraProviders, sourceSpan) {\n        var _this = this;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._errors = [];\n        this._allProviders = new Map();\n        ngModule.transitiveModule.modules.forEach(function (ngModuleType) {\n            var ngModuleProvider = { token: { identifier: ngModuleType }, useClass: ngModuleType };\n            _resolveProviders([ngModuleProvider], ProviderAstType.PublicService, true, sourceSpan, _this._errors, _this._allProviders);\n        });\n        _resolveProviders(ngModule.transitiveModule.providers.map(function (entry) { return entry.provider; }).concat(extraProviders), ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders);\n    }\n    /**\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype.parse = function () {\n        var _this = this;\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.token, provider.eager);\n        });\n        if (this._errors.length > 0) {\n            var /** @type {?} */ errorString = this._errors.join('\\n');\n            throw new Error(\"Provider parse errors:\\n\" + errorString);\n        }\n        return Array.from(this._transformedProviders.values());\n    };\n    /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider = function (token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this._errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), resolvedProvider.sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = _this._getDependency({ token: provider.useExisting }, eager, resolvedProvider.sourceSpan);\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getDependency = function (dep, eager, requestorSourceSpan) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ foundLocal = false;\n        if (!dep.isSkipSelf && dep.token != null) {\n            // access the injector\n            if (tokenReference(dep.token) === resolveIdentifier(Identifiers.Injector) ||\n                tokenReference(dep.token) === resolveIdentifier(Identifiers.ComponentFactoryResolver)) {\n                foundLocal = true;\n            }\n            else if (this._getOrCreateLocalProvider(dep.token, eager) != null) {\n                foundLocal = true;\n            }\n        }\n        var /** @type {?} */ result = dep;\n        if (dep.isSelf && !foundLocal) {\n            if (dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n            else {\n                this._errors.push(new ProviderError(\"No provider for \" + tokenName(/** @type {?} */ ((dep.token))), requestorSourceSpan));\n            }\n        }\n        return result;\n    };\n    return NgModuleProviderAnalyzer;\n}());\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProvider(provider, _a) {\n    var useExisting = _a.useExisting, useValue = _a.useValue, deps = _a.deps;\n    return {\n        token: provider.token,\n        useClass: provider.useClass,\n        useExisting: useExisting,\n        useFactory: provider.useFactory,\n        useValue: useValue,\n        deps: deps,\n        multi: provider.multi\n    };\n}\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProviderAst(provider, _a) {\n    var eager = _a.eager, providers = _a.providers;\n    return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan);\n}\n/**\n * @param {?} directives\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @return {?}\n */\nfunction _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n    var /** @type {?} */ providersByToken = new Map();\n    directives.forEach(function (directive) {\n        var /** @type {?} */ dirProvider = { token: { identifier: directive.type }, useClass: directive.type };\n        _resolveProviders([dirProvider], directive.isComponent ? ProviderAstType.Component : ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken);\n    });\n    // Note: directives need to be able to overwrite providers of a component!\n    var /** @type {?} */ directivesWithComponentFirst = directives.filter(function (dir) { return dir.isComponent; }).concat(directives.filter(function (dir) { return !dir.isComponent; }));\n    directivesWithComponentFirst.forEach(function (directive) {\n        _resolveProviders(directive.providers, ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken);\n        _resolveProviders(directive.viewProviders, ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken);\n    });\n    return providersByToken;\n}\n/**\n * @param {?} providers\n * @param {?} providerType\n * @param {?} eager\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @param {?} targetProvidersByToken\n * @return {?}\n */\nfunction _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken) {\n    providers.forEach(function (provider) {\n        var /** @type {?} */ resolvedProvider = targetProvidersByToken.get(tokenReference(provider.token));\n        if (resolvedProvider != null && !!resolvedProvider.multiProvider !== !!provider.multi) {\n            targetErrors.push(new ProviderError(\"Mixing multi and non multi provider is not possible for token \" + tokenName(resolvedProvider.token), sourceSpan));\n        }\n        if (!resolvedProvider) {\n            var /** @type {?} */ lifecycleHooks = provider.token.identifier &&\n                ((provider.token.identifier)).lifecycleHooks ?\n                ((provider.token.identifier)).lifecycleHooks :\n                [];\n            var /** @type {?} */ isUseValue = !(provider.useClass || provider.useExisting || provider.useFactory);\n            resolvedProvider = new ProviderAst(provider.token, !!provider.multi, eager || isUseValue, [provider], providerType, lifecycleHooks, sourceSpan);\n            targetProvidersByToken.set(tokenReference(provider.token), resolvedProvider);\n        }\n        else {\n            if (!provider.multi) {\n                resolvedProvider.providers.length = 0;\n            }\n            resolvedProvider.providers.push(provider);\n        }\n    });\n}\n/**\n * @param {?} component\n * @return {?}\n */\nfunction _getViewQueries(component) {\n    // Note: queries start with id 1 so we can use the number in a Bloom filter!\n    var /** @type {?} */ viewQueryId = 1;\n    var /** @type {?} */ viewQueries = new Map();\n    if (component.viewQueries) {\n        component.viewQueries.forEach(function (query) { return _addQueryToTokenMap(viewQueries, { meta: query, queryId: viewQueryId++ }); });\n    }\n    return viewQueries;\n}\n/**\n * @param {?} contentQueryStartId\n * @param {?} directives\n * @return {?}\n */\nfunction _getContentQueries(contentQueryStartId, directives) {\n    var /** @type {?} */ contentQueryId = contentQueryStartId;\n    var /** @type {?} */ contentQueries = new Map();\n    directives.forEach(function (directive, directiveIndex) {\n        if (directive.queries) {\n            directive.queries.forEach(function (query) { return _addQueryToTokenMap(contentQueries, { meta: query, queryId: contentQueryId++ }); });\n        }\n    });\n    return contentQueries;\n}\n/**\n * @param {?} map\n * @param {?} query\n * @return {?}\n */\nfunction _addQueryToTokenMap(map, query) {\n    query.meta.selectors.forEach(function (token) {\n        var /** @type {?} */ entry = map.get(tokenReference(token));\n        if (!entry) {\n            entry = [];\n            map.set(tokenReference(token), entry);\n        }\n        entry.push(query);\n    });\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar ElementSchemaRegistry = (function () {\n    function ElementSchemaRegistry() {\n    }\n    /**\n     * @abstract\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.hasProperty = function (tagName, propName, schemaMetas) { };\n    /**\n     * @abstract\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.hasElement = function (tagName, schemaMetas) { };\n    /**\n     * @abstract\n     * @param {?} elementName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.securityContext = function (elementName, propName, isAttribute) { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.allKnownElementNames = function () { };\n    /**\n     * @abstract\n     * @param {?} propName\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.getMappedPropName = function (propName) { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.getDefaultComponentElementName = function () { };\n    /**\n     * @abstract\n     * @param {?} name\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.validateProperty = function (name) { };\n    /**\n     * @abstract\n     * @param {?} name\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.validateAttribute = function (name) { };\n    /**\n     * @abstract\n     * @param {?} propName\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = function (propName) { };\n    /**\n     * @abstract\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.normalizeAnimationStyleValue = function (camelCaseProp, userProvidedProp, val) { };\n    return ElementSchemaRegistry;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar StyleWithImports = (function () {\n    /**\n     * @param {?} style\n     * @param {?} styleUrls\n     */\n    function StyleWithImports(style$$1, styleUrls) {\n        this.style = style$$1;\n        this.styleUrls = styleUrls;\n    }\n    return StyleWithImports;\n}());\n/**\n * @param {?} url\n * @return {?}\n */\nfunction isStyleUrlResolvable(url) {\n    if (url == null || url.length === 0 || url[0] == '/')\n        return false;\n    var /** @type {?} */ schemeMatch = url.match(URL_WITH_SCHEMA_REGEXP);\n    return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n}\n/**\n * Rewrites stylesheets by resolving and removing the \\@import urls that\n * are either relative or don't have a `package:` scheme\n * @param {?} resolver\n * @param {?} baseUrl\n * @param {?} cssText\n * @return {?}\n */\nfunction extractStyleUrls(resolver, baseUrl, cssText) {\n    var /** @type {?} */ foundUrls = [];\n    var /** @type {?} */ modifiedCssText = cssText.replace(CSS_COMMENT_REGEXP, '').replace(CSS_IMPORT_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ url = m[1] || m[2];\n        if (!isStyleUrlResolvable(url)) {\n            // Do not attempt to resolve non-package absolute URLs with URI scheme\n            return m[0];\n        }\n        foundUrls.push(resolver.resolve(baseUrl, url));\n        return '';\n    });\n    return new StyleWithImports(modifiedCssText, foundUrls);\n}\nvar CSS_IMPORT_REGEXP = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\nvar CSS_COMMENT_REGEXP = /\\/\\*.+?\\*\\//g;\nvar URL_WITH_SCHEMA_REGEXP = /^([^:/?#]+):/;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PROPERTY_PARTS_SEPARATOR = '.';\nvar ATTRIBUTE_PREFIX = 'attr';\nvar CLASS_PREFIX = 'class';\nvar STYLE_PREFIX = 'style';\nvar ANIMATE_PROP_PREFIX = 'animate-';\nvar BoundPropertyType = {};\nBoundPropertyType.DEFAULT = 0;\nBoundPropertyType.LITERAL_ATTR = 1;\nBoundPropertyType.ANIMATION = 2;\nBoundPropertyType[BoundPropertyType.DEFAULT] = \"DEFAULT\";\nBoundPropertyType[BoundPropertyType.LITERAL_ATTR] = \"LITERAL_ATTR\";\nBoundPropertyType[BoundPropertyType.ANIMATION] = \"ANIMATION\";\n/**\n * Represents a parsed property.\n */\nvar BoundProperty = (function () {\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} type\n     * @param {?} sourceSpan\n     */\n    function BoundProperty(name, expression, type, sourceSpan) {\n        this.name = name;\n        this.expression = expression;\n        this.type = type;\n        this.sourceSpan = sourceSpan;\n    }\n    Object.defineProperty(BoundProperty.prototype, \"isLiteral\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.type === BoundPropertyType.LITERAL_ATTR; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BoundProperty.prototype, \"isAnimation\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.type === BoundPropertyType.ANIMATION; },\n        enumerable: true,\n        configurable: true\n    });\n    return BoundProperty;\n}());\n/**\n * Parses bindings in templates and in the directive host area.\n */\nvar BindingParser = (function () {\n    /**\n     * @param {?} _exprParser\n     * @param {?} _interpolationConfig\n     * @param {?} _schemaRegistry\n     * @param {?} pipes\n     * @param {?} _targetErrors\n     */\n    function BindingParser(_exprParser, _interpolationConfig, _schemaRegistry, pipes, _targetErrors) {\n        var _this = this;\n        this._exprParser = _exprParser;\n        this._interpolationConfig = _interpolationConfig;\n        this._schemaRegistry = _schemaRegistry;\n        this._targetErrors = _targetErrors;\n        this.pipesByName = new Map();\n        this._usedPipes = new Map();\n        pipes.forEach(function (pipe) { return _this.pipesByName.set(pipe.name, pipe); });\n    }\n    /**\n     * @return {?}\n     */\n    BindingParser.prototype.getUsedPipes = function () { return Array.from(this._usedPipes.values()); };\n    /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostPropertyAsts = function (dirMeta, elementSelector, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostProperties) {\n            var /** @type {?} */ boundProps_1 = [];\n            Object.keys(dirMeta.hostProperties).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostProperties[propName];\n                if (typeof expression === 'string') {\n                    _this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host property binding \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return boundProps_1.map(function (prop) { return _this.createElementPropertyAst(elementSelector, prop); });\n        }\n        return null;\n    };\n    /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostEventAsts = function (dirMeta, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostListeners) {\n            var /** @type {?} */ targetEventAsts_1 = [];\n            Object.keys(dirMeta.hostListeners).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostListeners[propName];\n                if (typeof expression === 'string') {\n                    _this.parseEvent(propName, expression, sourceSpan, [], targetEventAsts_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host listener \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return targetEventAsts_1;\n        }\n        return null;\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.parseInterpolation = function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = ((this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig)));\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    BindingParser.prototype.parseInlineTemplateBinding = function (prefixToken, value, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n        var /** @type {?} */ bindings = this._parseTemplateBindings(prefixToken, value, sourceSpan);\n        for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n            var /** @type {?} */ binding = bindings[i];\n            if (binding.keyIsVar) {\n                targetVars.push(new VariableAst(binding.key, binding.name, sourceSpan));\n            }\n            else if (binding.expression) {\n                this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n            else {\n                targetMatchableAttrs.push([binding.key, '']);\n                this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseTemplateBindings = function (prefixToken, value, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ bindingsResult = this._exprParser.parseTemplateBindings(prefixToken, value, sourceInfo);\n            this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n            bindingsResult.templateBindings.forEach(function (binding) {\n                if (binding.expression) {\n                    _this._checkPipes(binding.expression, sourceSpan);\n                }\n            });\n            bindingsResult.warnings.forEach(function (warning) { _this._reportError(warning, sourceSpan, ParseErrorLevel.WARNING); });\n            return bindingsResult.templateBindings;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return [];\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parseLiteralAttr = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        if (_isAnimationLabel(name)) {\n            name = name.substring(1);\n            if (value) {\n                this._reportError(\"Assigning animation triggers via @prop=\\\"exp\\\" attributes with an expression is invalid.\" +\n                    \" Use property bindings (e.g. [@prop]=\\\"exp\\\") or use an attribute without a value (e.g. @prop) instead.\", sourceSpan, ParseErrorLevel.ERROR);\n            }\n            this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            targetProps.push(new BoundProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), BoundPropertyType.LITERAL_ATTR, sourceSpan));\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyBinding = function (name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ isAnimationProp = false;\n        if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n            isAnimationProp = true;\n            name = name.substring(ANIMATE_PROP_PREFIX.length);\n        }\n        else if (_isAnimationLabel(name)) {\n            isAnimationProp = true;\n            name = name.substring(1);\n        }\n        if (isAnimationProp) {\n            this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyInterpolation = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ expr = this.parseInterpolation(value, sourceSpan);\n        if (expr) {\n            this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parsePropertyAst = function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.DEFAULT, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimation = function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n        // This will occur when a @trigger is not paired with an expression.\n        // For animations it is valid to not have an expression since */void\n        // states will be applied by angular when the element is attached/detached\n        var /** @type {?} */ ast = this._parseBinding(expression || 'null', false, sourceSpan);\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.ANIMATION, sourceSpan));\n    };\n    /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseBinding = function (value, isHostBinding, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = isHostBinding ?\n                this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n                this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    BindingParser.prototype.createElementPropertyAst = function (elementSelector, boundProp) {\n        if (boundProp.isAnimation) {\n            return new BoundElementPropertyAst(boundProp.name, PropertyBindingType.Animation, _angular_core.SecurityContext.NONE, boundProp.expression, null, boundProp.sourceSpan);\n        }\n        var /** @type {?} */ unit = null;\n        var /** @type {?} */ bindingType = ((undefined));\n        var /** @type {?} */ boundPropertyName = null;\n        var /** @type {?} */ parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n        var /** @type {?} */ securityContexts = ((undefined));\n        // Check check for special cases (prefix style, attr, class)\n        if (parts.length > 1) {\n            if (parts[0] == ATTRIBUTE_PREFIX) {\n                boundPropertyName = parts[1];\n                this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n                securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n                var /** @type {?} */ nsSeparatorIdx = boundPropertyName.indexOf(':');\n                if (nsSeparatorIdx > -1) {\n                    var /** @type {?} */ ns = boundPropertyName.substring(0, nsSeparatorIdx);\n                    var /** @type {?} */ name = boundPropertyName.substring(nsSeparatorIdx + 1);\n                    boundPropertyName = mergeNsAndName(ns, name);\n                }\n                bindingType = PropertyBindingType.Attribute;\n            }\n            else if (parts[0] == CLASS_PREFIX) {\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Class;\n                securityContexts = [_angular_core.SecurityContext.NONE];\n            }\n            else if (parts[0] == STYLE_PREFIX) {\n                unit = parts.length > 2 ? parts[2] : null;\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Style;\n                securityContexts = [_angular_core.SecurityContext.STYLE];\n            }\n        }\n        // If not a special case, use the full property name\n        if (boundPropertyName === null) {\n            boundPropertyName = this._schemaRegistry.getMappedPropName(boundProp.name);\n            securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n            bindingType = PropertyBindingType.Property;\n            this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n        }\n        return new BoundElementPropertyAst(boundPropertyName, bindingType, securityContexts[0], boundProp.expression, unit, boundProp.sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype.parseEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        if (_isAnimationLabel(name)) {\n            name = name.substr(1);\n            this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n        }\n        else {\n            this._parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimationEvent = function (name, expression, sourceSpan, targetEvents) {\n        var /** @type {?} */ matches = splitAtPeriod(name, [name, '']);\n        var /** @type {?} */ eventName = matches[0];\n        var /** @type {?} */ phase = matches[1].toLowerCase();\n        if (phase) {\n            switch (phase) {\n                case 'start':\n                case 'done':\n                    var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n                    targetEvents.push(new BoundEventAst(eventName, null, phase, ast, sourceSpan));\n                    break;\n                default:\n                    this._reportError(\"The provided animation output phase value \\\"\" + phase + \"\\\" for \\\"@\" + eventName + \"\\\" is not supported (use start or done)\", sourceSpan);\n                    break;\n            }\n        }\n        else {\n            this._reportError(\"The animation trigger output event (@\" + eventName + \") is missing its phase value name (start or done are currently supported)\", sourceSpan);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        // long format: 'target: eventName'\n        var _a = splitAtColon(name, [/** @type {?} */ ((null)), name]), target = _a[0], eventName = _a[1];\n        var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n        targetMatchableAttrs.push([/** @type {?} */ ((name)), /** @type {?} */ ((ast.source))]);\n        targetEvents.push(new BoundEventAst(eventName, target, null, ast, sourceSpan));\n        // Don't detect directives for event names for now,\n        // so don't add the event name to the matchableAttrs\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseAction = function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n            if (ast) {\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            }\n            if (!ast || ast.ast instanceof EmptyExpr) {\n                this._reportError(\"Empty expressions are not allowed\", sourceSpan);\n                return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n            }\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    BindingParser.prototype._reportError = function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._reportExpressionParserErrors = function (errors, sourceSpan) {\n        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n            var error = errors_1[_i];\n            this._reportError(error.message, sourceSpan);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._checkPipes = function (ast, sourceSpan) {\n        var _this = this;\n        if (ast) {\n            var /** @type {?} */ collector = new PipeCollector();\n            ast.visit(collector);\n            collector.pipes.forEach(function (ast, pipeName) {\n                var /** @type {?} */ pipeMeta = _this.pipesByName.get(pipeName);\n                if (!pipeMeta) {\n                    _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", new ParseSourceSpan(sourceSpan.start.moveBy(ast.span.start), sourceSpan.start.moveBy(ast.span.end)));\n                }\n                else {\n                    _this._usedPipes.set(pipeName, pipeMeta);\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    BindingParser.prototype._validatePropertyOrAttributeName = function (propName, sourceSpan, isAttr) {\n        var /** @type {?} */ report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n            this._schemaRegistry.validateProperty(propName);\n        if (report.error) {\n            this._reportError(/** @type {?} */ ((report.msg)), sourceSpan, ParseErrorLevel.ERROR);\n        }\n    };\n    return BindingParser;\n}());\nvar PipeCollector = (function (_super) {\n    __extends(PipeCollector, _super);\n    function PipeCollector() {\n        var _this = _super.apply(this, arguments) || this;\n        _this.pipes = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    PipeCollector.prototype.visitPipe = function (ast, context) {\n        this.pipes.set(ast.name, ast);\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    return PipeCollector;\n}(RecursiveAstVisitor));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _isAnimationLabel(name) {\n    return name[0] == '@';\n}\n/**\n * @param {?} registry\n * @param {?} selector\n * @param {?} propName\n * @param {?} isAttribute\n * @return {?}\n */\nfunction calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n    var /** @type {?} */ ctxs = [];\n    CssSelector.parse(selector).forEach(function (selector) {\n        var /** @type {?} */ elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n        var /** @type {?} */ notElementNames = new Set(selector.notSelectors.filter(function (selector) { return selector.isElementSelector(); })\n            .map(function (selector) { return selector.element; }));\n        var /** @type {?} */ possibleElementNames = elementNames.filter(function (elementName) { return !notElementNames.has(elementName); });\n        ctxs.push.apply(ctxs, possibleElementNames.map(function (elementName) { return registry.securityContext(elementName, propName, isAttribute); }));\n    });\n    return ctxs.length === 0 ? [_angular_core.SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NG_CONTENT_SELECT_ATTR = 'select';\nvar LINK_ELEMENT = 'link';\nvar LINK_STYLE_REL_ATTR = 'rel';\nvar LINK_STYLE_HREF_ATTR = 'href';\nvar LINK_STYLE_REL_VALUE = 'stylesheet';\nvar STYLE_ELEMENT = 'style';\nvar SCRIPT_ELEMENT = 'script';\nvar NG_NON_BINDABLE_ATTR = 'ngNonBindable';\nvar NG_PROJECT_AS = 'ngProjectAs';\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction preparseElement(ast) {\n    var /** @type {?} */ selectAttr = ((null));\n    var /** @type {?} */ hrefAttr = ((null));\n    var /** @type {?} */ relAttr = ((null));\n    var /** @type {?} */ nonBindable = false;\n    var /** @type {?} */ projectAs = ((null));\n    ast.attrs.forEach(function (attr) {\n        var /** @type {?} */ lcAttrName = attr.name.toLowerCase();\n        if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n            selectAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n            hrefAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n            relAttr = attr.value;\n        }\n        else if (attr.name == NG_NON_BINDABLE_ATTR) {\n            nonBindable = true;\n        }\n        else if (attr.name == NG_PROJECT_AS) {\n            if (attr.value.length > 0) {\n                projectAs = attr.value;\n            }\n        }\n    });\n    selectAttr = normalizeNgContentSelect(selectAttr);\n    var /** @type {?} */ nodeName = ast.name.toLowerCase();\n    var /** @type {?} */ type = PreparsedElementType.OTHER;\n    if (isNgContent(nodeName)) {\n        type = PreparsedElementType.NG_CONTENT;\n    }\n    else if (nodeName == STYLE_ELEMENT) {\n        type = PreparsedElementType.STYLE;\n    }\n    else if (nodeName == SCRIPT_ELEMENT) {\n        type = PreparsedElementType.SCRIPT;\n    }\n    else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n        type = PreparsedElementType.STYLESHEET;\n    }\n    return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n}\nvar PreparsedElementType = {};\nPreparsedElementType.NG_CONTENT = 0;\nPreparsedElementType.STYLE = 1;\nPreparsedElementType.STYLESHEET = 2;\nPreparsedElementType.SCRIPT = 3;\nPreparsedElementType.OTHER = 4;\nPreparsedElementType[PreparsedElementType.NG_CONTENT] = \"NG_CONTENT\";\nPreparsedElementType[PreparsedElementType.STYLE] = \"STYLE\";\nPreparsedElementType[PreparsedElementType.STYLESHEET] = \"STYLESHEET\";\nPreparsedElementType[PreparsedElementType.SCRIPT] = \"SCRIPT\";\nPreparsedElementType[PreparsedElementType.OTHER] = \"OTHER\";\nvar PreparsedElement = (function () {\n    /**\n     * @param {?} type\n     * @param {?} selectAttr\n     * @param {?} hrefAttr\n     * @param {?} nonBindable\n     * @param {?} projectAs\n     */\n    function PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n        this.type = type;\n        this.selectAttr = selectAttr;\n        this.hrefAttr = hrefAttr;\n        this.nonBindable = nonBindable;\n        this.projectAs = projectAs;\n    }\n    return PreparsedElement;\n}());\n/**\n * @param {?} selectAttr\n * @return {?}\n */\nfunction normalizeNgContentSelect(selectAttr) {\n    if (selectAttr === null || selectAttr.length === 0) {\n        return '*';\n    }\n    return selectAttr;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n// Group 1 = \"bind-\"\nvar KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nvar KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nvar KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nvar KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nvar KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nvar KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nvar IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nvar IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nvar IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nvar IDENT_EVENT_IDX = 10;\n// deprecated in 4.x\nvar TEMPLATE_ELEMENT = 'template';\n// deprecated in 4.x\nvar TEMPLATE_ATTR = 'template';\nvar TEMPLATE_ATTR_PREFIX = '*';\nvar CLASS_ATTR = 'class';\nvar TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\nvar TEMPLATE_ELEMENT_DEPRECATION_WARNING = 'The <template> element is deprecated. Use <ng-template> instead';\nvar TEMPLATE_ATTR_DEPRECATION_WARNING = 'The template attribute is deprecated. Use an ng-template element instead.';\nvar warningCounts = {};\n/**\n * @param {?} warnings\n * @return {?}\n */\nfunction warnOnlyOnce(warnings) {\n    return function (error) {\n        if (warnings.indexOf(error.msg) !== -1) {\n            warningCounts[error.msg] = (warningCounts[error.msg] || 0) + 1;\n            return warningCounts[error.msg] <= 1;\n        }\n        return true;\n    };\n}\n/**\n * Provides an array of {@link TemplateAstVisitor}s which will be used to transform\n * parsed templates before compilation is invoked, allowing custom expression syntax\n * and other advanced transformations.\n *\n * This is currently an internal-only feature and not meant for general use.\n */\nvar TEMPLATE_TRANSFORMS = new _angular_core.InjectionToken('TemplateTransforms');\nvar TemplateParseError = (function (_super) {\n    __extends(TemplateParseError, _super);\n    /**\n     * @param {?} message\n     * @param {?} span\n     * @param {?} level\n     */\n    function TemplateParseError(message, span, level) {\n        return _super.call(this, span, message, level) || this;\n    }\n    return TemplateParseError;\n}(ParseError));\nvar TemplateParseResult = (function () {\n    /**\n     * @param {?=} templateAst\n     * @param {?=} usedPipes\n     * @param {?=} errors\n     */\n    function TemplateParseResult(templateAst, usedPipes, errors) {\n        this.templateAst = templateAst;\n        this.usedPipes = usedPipes;\n        this.errors = errors;\n    }\n    return TemplateParseResult;\n}());\nvar TemplateParser = (function () {\n    /**\n     * @param {?} _config\n     * @param {?} _exprParser\n     * @param {?} _schemaRegistry\n     * @param {?} _htmlParser\n     * @param {?} _console\n     * @param {?} transforms\n     */\n    function TemplateParser(_config, _exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n        this._config = _config;\n        this._exprParser = _exprParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._htmlParser = _htmlParser;\n        this._console = _console;\n        this.transforms = transforms;\n    }\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @return {?}\n     */\n    TemplateParser.prototype.parse = function (component, template, directives, pipes, schemas, templateUrl) {\n        var /** @type {?} */ result = this.tryParse(component, template, directives, pipes, schemas, templateUrl);\n        var /** @type {?} */ warnings = ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.WARNING; })\n            .filter(warnOnlyOnce([TEMPLATE_ATTR_DEPRECATION_WARNING, TEMPLATE_ELEMENT_DEPRECATION_WARNING]));\n        var /** @type {?} */ errors = ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.ERROR; });\n        if (warnings.length > 0) {\n            this._console.warn(\"Template parse warnings:\\n\" + warnings.join('\\n'));\n        }\n        if (errors.length > 0) {\n            var /** @type {?} */ errorString = errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString);\n        }\n        return { template: /** @type {?} */ ((result.templateAst)), pipes: /** @type {?} */ ((result.usedPipes)) };\n    };\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParse = function (component, template, directives, pipes, schemas, templateUrl) {\n        return this.tryParseHtml(this.expandHtml(/** @type {?} */ ((this._htmlParser)).parse(template, templateUrl, true, this.getInterpolationConfig(component))), component, directives, pipes, schemas);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParseHtml = function (htmlAstWithErrors, component, directives, pipes, schemas) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        var /** @type {?} */ usedPipes = [];\n        if (htmlAstWithErrors.rootNodes.length > 0) {\n            var /** @type {?} */ uniqDirectives = removeSummaryDuplicates(directives);\n            var /** @type {?} */ uniqPipes = removeSummaryDuplicates(pipes);\n            var /** @type {?} */ providerViewContext = new ProviderViewContext(component);\n            var /** @type {?} */ interpolationConfig = ((undefined));\n            if (component.template && component.template.interpolation) {\n                interpolationConfig = {\n                    start: component.template.interpolation[0],\n                    end: component.template.interpolation[1]\n                };\n            }\n            var /** @type {?} */ bindingParser = new BindingParser(this._exprParser, /** @type {?} */ ((interpolationConfig)), this._schemaRegistry, uniqPipes, errors);\n            var /** @type {?} */ parseVisitor = new TemplateParseVisitor(this._config, providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n            result = visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n            errors.push.apply(errors, providerViewContext.errors);\n            usedPipes.push.apply(usedPipes, bindingParser.getUsedPipes());\n        }\n        else {\n            result = [];\n        }\n        this._assertNoReferenceDuplicationOnTemplate(result, errors);\n        if (errors.length > 0) {\n            return new TemplateParseResult(result, usedPipes, errors);\n        }\n        if (this.transforms) {\n            this.transforms.forEach(function (transform) { result = templateVisitAll(transform, result); });\n        }\n        return new TemplateParseResult(result, usedPipes, errors);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    TemplateParser.prototype.expandHtml = function (htmlAstWithErrors, forced) {\n        if (forced === void 0) { forced = false; }\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        if (errors.length == 0 || forced) {\n            // Transform ICU messages to angular directives\n            var /** @type {?} */ expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n            errors.push.apply(errors, expandedHtmlAst.errors);\n            htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n        }\n        return htmlAstWithErrors;\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    TemplateParser.prototype.getInterpolationConfig = function (component) {\n        if (component.template) {\n            return InterpolationConfig.fromArray(component.template.interpolation);\n        }\n        return undefined;\n    };\n    /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate = function (result, errors) {\n        var /** @type {?} */ existingReferences = [];\n        result.filter(function (element) { return !!((element)).references; })\n            .forEach(function (element) { return ((element)).references.forEach(function (reference) {\n            var /** @type {?} */ name = reference.name;\n            if (existingReferences.indexOf(name) < 0) {\n                existingReferences.push(name);\n            }\n            else {\n                var /** @type {?} */ error = new TemplateParseError(\"Reference \\\"#\" + name + \"\\\" is defined several times\", reference.sourceSpan, ParseErrorLevel.ERROR);\n                errors.push(error);\n            }\n        }); });\n    };\n    return TemplateParser;\n}());\nTemplateParser.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nTemplateParser.ctorParameters = function () { return [\n    { type: CompilerConfig, },\n    { type: Parser, },\n    { type: ElementSchemaRegistry, },\n    { type: I18NHtmlParser, },\n    { type: _angular_core.ɵConsole, },\n    { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [TEMPLATE_TRANSFORMS,] },] },\n]; };\nvar TemplateParseVisitor = (function () {\n    /**\n     * @param {?} config\n     * @param {?} providerViewContext\n     * @param {?} directives\n     * @param {?} _bindingParser\n     * @param {?} _schemaRegistry\n     * @param {?} _schemas\n     * @param {?} _targetErrors\n     */\n    function TemplateParseVisitor(config, providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n        var _this = this;\n        this.config = config;\n        this.providerViewContext = providerViewContext;\n        this._bindingParser = _bindingParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._schemas = _schemas;\n        this._targetErrors = _targetErrors;\n        this.selectorMatcher = new SelectorMatcher();\n        this.directivesIndex = new Map();\n        this.ngContentCount = 0;\n        // Note: queries start with id 1 so we can use the number in a Bloom filter!\n        this.contentQueryStartId = providerViewContext.component.viewQueries.length + 1;\n        directives.forEach(function (directive, index) {\n            var selector = CssSelector.parse(directive.selector);\n            _this.selectorMatcher.addSelectables(selector, directive);\n            _this.directivesIndex.set(directive, index);\n        });\n    }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansion = function (expansion, context) { return null; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return null; };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitText = function (text, parent) {\n        var /** @type {?} */ ngContentIndex = ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        var /** @type {?} */ expr = this._bindingParser.parseInterpolation(text.value, /** @type {?} */ ((text.sourceSpan)));\n        return expr ? new BoundTextAst(expr, ngContentIndex, /** @type {?} */ ((text.sourceSpan))) :\n            new TextAst(text.value, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitAttribute = function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitComment = function (comment, context) { return null; };\n    /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitElement = function (element, parent) {\n        var _this = this;\n        var /** @type {?} */ queryStartIndex = this.contentQueryStartId;\n        var /** @type {?} */ nodeName = element.name;\n        var /** @type {?} */ preparsedElement = preparseElement(element);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE) {\n            // Skipping <script> for security reasons\n            // Skipping <style> as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n            isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n            // Skipping stylesheets with either relative urls or package scheme as we already processed\n            // them in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ matchableAttrs = [];\n        var /** @type {?} */ elementOrDirectiveProps = [];\n        var /** @type {?} */ elementOrDirectiveRefs = [];\n        var /** @type {?} */ elementVars = [];\n        var /** @type {?} */ events = [];\n        var /** @type {?} */ templateElementOrDirectiveProps = [];\n        var /** @type {?} */ templateMatchableAttrs = [];\n        var /** @type {?} */ templateElementVars = [];\n        var /** @type {?} */ hasInlineTemplates = false;\n        var /** @type {?} */ attrs = [];\n        var /** @type {?} */ isTemplateElement = isTemplate(element, this.config.enableLegacyTemplate, function (m, span) { return _this._reportError(m, span, ParseErrorLevel.WARNING); });\n        element.attrs.forEach(function (attr) {\n            var /** @type {?} */ hasBinding = _this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n            var /** @type {?} */ templateBindingsSource;\n            var /** @type {?} */ prefixToken;\n            var /** @type {?} */ normalizedName = _this._normalizeAttributeName(attr.name);\n            if (_this.config.enableLegacyTemplate && normalizedName == TEMPLATE_ATTR) {\n                _this._reportError(TEMPLATE_ATTR_DEPRECATION_WARNING, attr.sourceSpan, ParseErrorLevel.WARNING);\n                templateBindingsSource = attr.value;\n            }\n            else if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n                templateBindingsSource = attr.value;\n                prefixToken = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length) + ':';\n            }\n            var /** @type {?} */ hasTemplateBinding = templateBindingsSource != null;\n            if (hasTemplateBinding) {\n                if (hasInlineTemplates) {\n                    _this._reportError(\"Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *\", attr.sourceSpan);\n                }\n                hasInlineTemplates = true;\n                _this._bindingParser.parseInlineTemplateBinding(/** @type {?} */ ((prefixToken)), /** @type {?} */ ((templateBindingsSource)), attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, templateElementVars);\n            }\n            if (!hasBinding && !hasTemplateBinding) {\n                // don't include the bindings as attributes as well in the AST\n                attrs.push(_this.visitAttribute(attr, null));\n                matchableAttrs.push([attr.name, attr.value]);\n            }\n        });\n        var /** @type {?} */ elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);\n        var _a = this._parseDirectives(this.selectorMatcher, elementCssSelector), directiveMetas = _a.directives, matchElement = _a.matchElement;\n        var /** @type {?} */ references = [];\n        var /** @type {?} */ boundDirectivePropNames = new Set();\n        var /** @type {?} */ directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, /** @type {?} */ ((element.sourceSpan)), references, boundDirectivePropNames);\n        var /** @type {?} */ elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, boundDirectivePropNames);\n        var /** @type {?} */ isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n        var /** @type {?} */ providerContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), isViewRoot, directiveAsts, attrs, references, isTemplateElement, queryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n        var /** @type {?} */ children = visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? ((parent.providerContext)) : providerContext));\n        providerContext.afterElement();\n        // Override the actual selector when the `ngProjectAs` attribute is provided\n        var /** @type {?} */ projectionSelector = preparsedElement.projectAs != null ?\n            CssSelector.parse(preparsedElement.projectAs)[0] :\n            elementCssSelector;\n        var /** @type {?} */ ngContentIndex = ((parent.findNgContentIndex(projectionSelector)));\n        var /** @type {?} */ parsedElement;\n        if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n            if (element.children && !element.children.every(_isEmptyTextNode)) {\n                this._reportError(\"<ng-content> element cannot have content.\", /** @type {?} */ ((element.sourceSpan)));\n            }\n            parsedElement = new NgContentAst(this.ngContentCount++, hasInlineTemplates ? ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else if (isTemplateElement) {\n            this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n            this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, /** @type {?} */ ((element.sourceSpan)));\n            parsedElement = new EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else {\n            this._assertElementExists(matchElement, element);\n            this._assertOnlyOneComponent(directiveAsts, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ ngContentIndex_1 = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n            parsedElement = new ElementAst(nodeName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex_1, element.sourceSpan, element.endSourceSpan || null);\n        }\n        if (hasInlineTemplates) {\n            var /** @type {?} */ templateQueryStartIndex = this.contentQueryStartId;\n            var /** @type {?} */ templateSelector = createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);\n            var templateDirectiveMetas = this._parseDirectives(this.selectorMatcher, templateSelector).directives;\n            var /** @type {?} */ templateBoundDirectivePropNames = new Set();\n            var /** @type {?} */ templateDirectiveAsts = this._createDirectiveAsts(true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [], /** @type {?} */ ((element.sourceSpan)), [], templateBoundDirectivePropNames);\n            var /** @type {?} */ templateElementProps = this._createElementPropertyAsts(element.name, templateElementOrDirectiveProps, templateBoundDirectivePropNames);\n            this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ templateProviderContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), parent.isTemplateElement, templateDirectiveAsts, [], [], true, templateQueryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n            templateProviderContext.afterElement();\n            parsedElement = new EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches, [parsedElement], ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        return parsedElement;\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAttr = function (isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n        var /** @type {?} */ name = this._normalizeAttributeName(attr.name);\n        var /** @type {?} */ value = attr.value;\n        var /** @type {?} */ srcSpan = attr.sourceSpan;\n        var /** @type {?} */ bindParts = name.match(BIND_NAME_REGEXP);\n        var /** @type {?} */ hasBinding = false;\n        if (bindParts !== null) {\n            hasBinding = true;\n            if (bindParts[KW_BIND_IDX] != null) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[KW_LET_IDX]) {\n                if (isTemplateElement) {\n                    var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                    this._parseVariable(identifier, value, srcSpan, targetVars);\n                }\n                else {\n                    this._reportError(\"\\\"let-\\\" is only supported on template elements.\", srcSpan);\n                }\n            }\n            else if (bindParts[KW_REF_IDX]) {\n                var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                this._parseReference(identifier, value, srcSpan, targetRefs);\n            }\n            else if (bindParts[KW_ON_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_BINDON_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_AT_IDX]) {\n                this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[IDENT_PROPERTY_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_EVENT_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n        }\n        else {\n            hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        if (!hasBinding) {\n            this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        return hasBinding;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._normalizeAttributeName = function (attrName) {\n        return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseVariable = function (identifier, value, sourceSpan, targetVars) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n        }\n        targetVars.push(new VariableAst(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseReference = function (identifier, value, sourceSpan, targetRefs) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n        }\n        targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAssignmentEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        this._bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\n    };\n    /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseDirectives = function (selectorMatcher, elementCssSelector) {\n        var _this = this;\n        // Need to sort the directives so that we get consistent results throughout,\n        // as selectorMatcher uses Maps inside.\n        // Also deduplicate directives as they might match more than one time!\n        var /** @type {?} */ directives = new Array(this.directivesIndex.size);\n        // Whether any directive selector matches on the element name\n        var /** @type {?} */ matchElement = false;\n        selectorMatcher.match(elementCssSelector, function (selector, directive) {\n            directives[((_this.directivesIndex.get(directive)))] = directive;\n            matchElement = matchElement || selector.hasElementSelector();\n        });\n        return {\n            directives: directives.filter(function (dir) { return !!dir; }),\n            matchElement: matchElement,\n        };\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectiveAsts = function (isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences, targetBoundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ matchedReferences = new Set();\n        var /** @type {?} */ component = ((null));\n        var /** @type {?} */ directiveAsts = directives.map(function (directive) {\n            var /** @type {?} */ sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, \"Directive \" + identifierName(directive.type));\n            if (directive.isComponent) {\n                component = directive;\n            }\n            var /** @type {?} */ directiveProperties = [];\n            var /** @type {?} */ hostProperties = ((_this._bindingParser.createDirectiveHostPropertyAsts(directive, elementName, sourceSpan)));\n            // Note: We need to check the host properties here as well,\n            // as we don't know the element name in the DirectiveWrapperCompiler yet.\n            hostProperties = _this._checkPropertiesInSchema(elementName, hostProperties);\n            var /** @type {?} */ hostEvents = ((_this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan)));\n            _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties, targetBoundDirectivePropNames);\n            elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n                if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n                    (directive.exportAs == elOrDirRef.value)) {\n                    targetReferences.push(new ReferenceAst(elOrDirRef.name, identifierToken(directive.type), elOrDirRef.sourceSpan));\n                    matchedReferences.add(elOrDirRef.name);\n                }\n            });\n            var /** @type {?} */ contentQueryStartId = _this.contentQueryStartId;\n            _this.contentQueryStartId += directive.queries.length;\n            return new DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, contentQueryStartId, sourceSpan);\n        });\n        elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n            if (elOrDirRef.value.length > 0) {\n                if (!matchedReferences.has(elOrDirRef.name)) {\n                    _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + elOrDirRef.value + \"\\\"\", elOrDirRef.sourceSpan);\n                }\n            }\n            else if (!component) {\n                var /** @type {?} */ refToken = ((null));\n                if (isTemplateElement) {\n                    refToken = createIdentifierToken(Identifiers.TemplateRef);\n                }\n                targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.sourceSpan));\n            }\n        });\n        return directiveAsts;\n    };\n    /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectivePropertyAsts = function (directiveProperties, boundProps, targetBoundDirectiveProps, targetBoundDirectivePropNames) {\n        if (directiveProperties) {\n            var /** @type {?} */ boundPropsByName_1 = new Map();\n            boundProps.forEach(function (boundProp) {\n                var /** @type {?} */ prevValue = boundPropsByName_1.get(boundProp.name);\n                if (!prevValue || prevValue.isLiteral) {\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    boundPropsByName_1.set(boundProp.name, boundProp);\n                }\n            });\n            Object.keys(directiveProperties).forEach(function (dirProp) {\n                var /** @type {?} */ elProp = directiveProperties[dirProp];\n                var /** @type {?} */ boundProp = boundPropsByName_1.get(elProp);\n                // Bindings are optional, so this binding only needs to be set up if an expression is given.\n                if (boundProp) {\n                    targetBoundDirectivePropNames.add(boundProp.name);\n                    if (!isEmptyExpression(boundProp.expression)) {\n                        targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createElementPropertyAsts = function (elementName, props, boundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ boundElementProps = [];\n        props.forEach(function (prop) {\n            if (!prop.isLiteral && !boundDirectivePropNames.has(prop.name)) {\n                boundElementProps.push(_this._bindingParser.createElementPropertyAst(elementName, prop));\n            }\n        });\n        return this._checkPropertiesInSchema(elementName, boundElementProps);\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectives = function (directives) {\n        return directives.filter(function (directive) { return directive.directive.isComponent; });\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectiveNames = function (directives) {\n        return this._findComponentDirectives(directives)\n            .map(function (directive) { return ((identifierName(directive.directive.type))); });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertOnlyOneComponent = function (directives, sourceSpan) {\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 1) {\n            this._reportError(\"More than one component matched on this element.\\n\" +\n                \"Make sure that only one component's selector can match a given element.\\n\" +\n                (\"Conflicting components: \" + componentTypeNames.join(',')), sourceSpan);\n        }\n    };\n    /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertElementExists = function (matchElement, element) {\n        var /** @type {?} */ elName = element.name.replace(/^:xhtml:/, '');\n        if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n            var /** @type {?} */ errorMsg = \"'\" + elName + \"' is not a known element:\\n\";\n            errorMsg +=\n                \"1. If '\" + elName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n            if (elName.indexOf('-') > -1) {\n                errorMsg +=\n                    \"2. If '\" + elName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n            }\n            else {\n                errorMsg +=\n                    \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n            }\n            this._reportError(errorMsg, /** @type {?} */ ((element.sourceSpan)));\n        }\n    };\n    /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = function (directives, elementProps, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 0) {\n            this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\n        }\n        elementProps.forEach(function (prop) {\n            _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", sourceSpan);\n        });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = function (directives, events) {\n        var _this = this;\n        var /** @type {?} */ allDirectiveEvents = new Set();\n        directives.forEach(function (directive) {\n            Object.keys(directive.directive.outputs).forEach(function (k) {\n                var /** @type {?} */ eventName = directive.directive.outputs[k];\n                allDirectiveEvents.add(eventName);\n            });\n        });\n        events.forEach(function (event) {\n            if (event.target != null || !allDirectiveEvents.has(event.name)) {\n                _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", event.sourceSpan);\n            }\n        });\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._checkPropertiesInSchema = function (elementName, boundProps) {\n        var _this = this;\n        // Note: We can't filter out empty expressions before this method,\n        // as we still want to validate them!\n        return boundProps.filter(function (boundProp) {\n            if (boundProp.type === PropertyBindingType.Property &&\n                !_this._schemaRegistry.hasProperty(elementName, boundProp.name, _this._schemas)) {\n                var /** @type {?} */ errorMsg = \"Can't bind to '\" + boundProp.name + \"' since it isn't a known property of '\" + elementName + \"'.\";\n                if (elementName.startsWith('ng-')) {\n                    errorMsg +=\n                        \"\\n1. If '\" + boundProp.name + \"' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.\" +\n                            \"\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                else if (elementName.indexOf('-') > -1) {\n                    errorMsg +=\n                        \"\\n1. If '\" + elementName + \"' is an Angular component and it has '\" + boundProp.name + \"' input, then verify that it is part of this module.\" +\n                            (\"\\n2. If '\" + elementName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\") +\n                            \"\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                _this._reportError(errorMsg, boundProp.sourceSpan);\n            }\n            return !isEmptyExpression(boundProp.value);\n        });\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._reportError = function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    return TemplateParseVisitor;\n}());\nvar NonBindableVisitor = (function () {\n    function NonBindableVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitElement = function (ast, parent) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE ||\n            preparsedElement.type === PreparsedElementType.STYLESHEET) {\n            // Skipping <script> for security reasons\n            // Skipping <style> and stylesheets as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ attrNameAndValues = ast.attrs.map(function (attr) { return [attr.name, attr.value]; });\n        var /** @type {?} */ selector = createElementCssSelector(ast.name, attrNameAndValues);\n        var /** @type {?} */ ngContentIndex = parent.findNgContentIndex(selector);\n        var /** @type {?} */ children = visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n        return new ElementAst(ast.name, visitAll(this, ast.attrs), [], [], [], [], [], false, [], children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitComment = function (comment, context) { return null; };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitAttribute = function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitText = function (text, parent) {\n        var /** @type {?} */ ngContentIndex = ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        return new TextAst(text.value, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansion = function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return expansionCase; };\n    return NonBindableVisitor;\n}());\nvar ElementOrDirectiveRef = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function ElementOrDirectiveRef(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    return ElementOrDirectiveRef;\n}());\n/**\n * @param {?} classAttrValue\n * @return {?}\n */\nfunction splitClasses(classAttrValue) {\n    return classAttrValue.trim().split(/\\s+/g);\n}\nvar ElementContext = (function () {\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} _ngContentIndexMatcher\n     * @param {?} _wildcardNgContentIndex\n     * @param {?} providerContext\n     */\n    function ElementContext(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n        this.isTemplateElement = isTemplateElement;\n        this._ngContentIndexMatcher = _ngContentIndexMatcher;\n        this._wildcardNgContentIndex = _wildcardNgContentIndex;\n        this.providerContext = providerContext;\n    }\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    ElementContext.create = function (isTemplateElement, directives, providerContext) {\n        var /** @type {?} */ matcher = new SelectorMatcher();\n        var /** @type {?} */ wildcardNgContentIndex = ((null));\n        var /** @type {?} */ component = directives.find(function (directive) { return directive.directive.isComponent; });\n        if (component) {\n            var /** @type {?} */ ngContentSelectors = ((component.directive.template)).ngContentSelectors;\n            for (var /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n                var /** @type {?} */ selector = ngContentSelectors[i];\n                if (selector === '*') {\n                    wildcardNgContentIndex = i;\n                }\n                else {\n                    matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n                }\n            }\n        }\n        return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ElementContext.prototype.findNgContentIndex = function (selector) {\n        var /** @type {?} */ ngContentIndices = [];\n        this._ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\n        ngContentIndices.sort();\n        if (this._wildcardNgContentIndex != null) {\n            ngContentIndices.push(this._wildcardNgContentIndex);\n        }\n        return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n    };\n    return ElementContext;\n}());\n/**\n * @param {?} elementName\n * @param {?} attributes\n * @return {?}\n */\nfunction createElementCssSelector(elementName, attributes) {\n    var /** @type {?} */ cssSelector = new CssSelector();\n    var /** @type {?} */ elNameNoNs = splitNsName(elementName)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (var /** @type {?} */ i = 0; i < attributes.length; i++) {\n        var /** @type {?} */ attrName = attributes[i][0];\n        var /** @type {?} */ attrNameNoNs = splitNsName(attrName)[1];\n        var /** @type {?} */ attrValue = attributes[i][1];\n        cssSelector.addAttribute(attrNameNoNs, attrValue);\n        if (attrName.toLowerCase() == CLASS_ATTR) {\n            var /** @type {?} */ classes = splitClasses(attrValue);\n            classes.forEach(function (className) { return cssSelector.addClassName(className); });\n        }\n    }\n    return cssSelector;\n}\nvar EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nvar NON_BINDABLE_VISITOR = new NonBindableVisitor();\n/**\n * @param {?} node\n * @return {?}\n */\nfunction _isEmptyTextNode(node) {\n    return node instanceof Text && node.value.trim().length == 0;\n}\n/**\n * @template T\n * @param {?} items\n * @return {?}\n */\nfunction removeSummaryDuplicates(items) {\n    var /** @type {?} */ map = new Map();\n    items.forEach(function (item) {\n        if (!map.get(item.type.reference)) {\n            map.set(item.type.reference, item);\n        }\n    });\n    return Array.from(map.values());\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction isEmptyExpression(ast) {\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    return ast instanceof EmptyExpr;\n}\n/**\n * @param {?} el\n * @param {?} enableLegacyTemplate\n * @param {?} reportDeprecation\n * @return {?}\n */\nfunction isTemplate(el, enableLegacyTemplate, reportDeprecation) {\n    if (isNgTemplate(el.name))\n        return true;\n    var /** @type {?} */ tagNoNs = splitNsName(el.name)[1];\n    // `<template>` is HTML and case insensitive\n    if (tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n        if (enableLegacyTemplate && tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n            reportDeprecation(TEMPLATE_ELEMENT_DEPRECATION_WARNING, /** @type {?} */ ((el.sourceSpan)));\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * An interface for retrieving documents by URL that the compiler uses\n * to load templates.\n */\nvar ResourceLoader = (function () {\n    function ResourceLoader() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    ResourceLoader.prototype.get = function (url) { return null; };\n    return ResourceLoader;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a {\\@link UrlResolver} with no package prefix.\n * @return {?}\n */\nfunction createUrlResolverWithoutPackagePrefix() {\n    return new UrlResolver();\n}\n/**\n * @return {?}\n */\nfunction createOfflineCompileUrlResolver() {\n    return new UrlResolver('.');\n}\n/**\n * A default provider for {@link PACKAGE_ROOT_URL} that maps to '/'.\n */\nvar DEFAULT_PACKAGE_URL_PROVIDER = {\n    provide: _angular_core.PACKAGE_ROOT_URL,\n    useValue: '/'\n};\n/**\n * Used by the {\\@link Compiler} when resolving HTML and CSS template URLs.\n *\n * This class can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n *\n * ## Example\n *\n * {\\@example compiler/ts/url_resolver/url_resolver.ts region='url_resolver'}\n *\n * \\@security When compiling templates at runtime, you must\n * ensure that the entire template comes from a trusted source.\n * Attacker-controlled data introduced by a template could expose your\n * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar UrlResolver = (function () {\n    /**\n     * @param {?=} _packagePrefix\n     */\n    function UrlResolver(_packagePrefix) {\n        if (_packagePrefix === void 0) { _packagePrefix = null; }\n        this._packagePrefix = _packagePrefix;\n    }\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    UrlResolver.prototype.resolve = function (baseUrl, url) {\n        var /** @type {?} */ resolvedUrl = url;\n        if (baseUrl != null && baseUrl.length > 0) {\n            resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n        }\n        var /** @type {?} */ resolvedParts = _split(resolvedUrl);\n        var /** @type {?} */ prefix = this._packagePrefix;\n        if (prefix != null && resolvedParts != null &&\n            resolvedParts[_ComponentIndex.Scheme] == 'package') {\n            var /** @type {?} */ path = resolvedParts[_ComponentIndex.Path];\n            prefix = prefix.replace(/\\/+$/, '');\n            path = path.replace(/^\\/+/, '');\n            return prefix + \"/\" + path;\n        }\n        return resolvedUrl;\n    };\n    return UrlResolver;\n}());\nUrlResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nUrlResolver.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.PACKAGE_ROOT_URL,] },] },\n]; };\n/**\n * Extract the scheme of a URL.\n * @param {?} url\n * @return {?}\n */\nfunction getUrlScheme(url) {\n    var /** @type {?} */ match = _split(url);\n    return (match && match[_ComponentIndex.Scheme]) || '';\n}\n/**\n * Builds a URI string from already-encoded parts.\n *\n * No encoding is performed.  Any component may be omitted as either null or\n * undefined.\n *\n * @param {?=} opt_scheme The scheme such as 'http'.\n * @param {?=} opt_userInfo The user name before the '\\@'.\n * @param {?=} opt_domain The domain such as 'www.google.com', already\n *     URI-encoded.\n * @param {?=} opt_port The port number.\n * @param {?=} opt_path The path, already URI-encoded.  If it is not\n *     empty, it must begin with a slash.\n * @param {?=} opt_queryData The URI-encoded query data.\n * @param {?=} opt_fragment The URI-encoded fragment identifier.\n * @return {?} The fully combined URI.\n */\nfunction _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n    var /** @type {?} */ out = [];\n    if (opt_scheme != null) {\n        out.push(opt_scheme + ':');\n    }\n    if (opt_domain != null) {\n        out.push('//');\n        if (opt_userInfo != null) {\n            out.push(opt_userInfo + '@');\n        }\n        out.push(opt_domain);\n        if (opt_port != null) {\n            out.push(':' + opt_port);\n        }\n    }\n    if (opt_path != null) {\n        out.push(opt_path);\n    }\n    if (opt_queryData != null) {\n        out.push('?' + opt_queryData);\n    }\n    if (opt_fragment != null) {\n        out.push('#' + opt_fragment);\n    }\n    return out.join('');\n}\n/**\n * A regular expression for breaking a URI into its component parts.\n *\n * {\\@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n * \\@internal\n */\nvar _splitRe = new RegExp('^' +\n    '(?:' +\n    '([^:/?#.]+)' +\n    // used by other URL parts such as :,\n    // ?, /, #, and .\n    ':)?' +\n    '(?://' +\n    '(?:([^/?#]*)@)?' +\n    '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' +\n    // digits, dashes, dots, percent\n    // escapes, and unicode characters.\n    '(?::([0-9]+))?' +\n    ')?' +\n    '([^?#]+)?' +\n    '(?:\\\\?([^#]*))?' +\n    '(?:#(.*))?' +\n    '$');\nvar _ComponentIndex = {};\n_ComponentIndex.Scheme = 1;\n_ComponentIndex.UserInfo = 2;\n_ComponentIndex.Domain = 3;\n_ComponentIndex.Port = 4;\n_ComponentIndex.Path = 5;\n_ComponentIndex.QueryData = 6;\n_ComponentIndex.Fragment = 7;\n_ComponentIndex[_ComponentIndex.Scheme] = \"Scheme\";\n_ComponentIndex[_ComponentIndex.UserInfo] = \"UserInfo\";\n_ComponentIndex[_ComponentIndex.Domain] = \"Domain\";\n_ComponentIndex[_ComponentIndex.Port] = \"Port\";\n_ComponentIndex[_ComponentIndex.Path] = \"Path\";\n_ComponentIndex[_ComponentIndex.QueryData] = \"QueryData\";\n_ComponentIndex[_ComponentIndex.Fragment] = \"Fragment\";\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n * </pre>\n *\n * @param {?} uri The URI string to examine.\n * @return {?} Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\nfunction _split(uri) {\n    return ((uri.match(_splitRe)));\n}\n/**\n * Removes dot segments in given path component, as described in\n * RFC 3986, section 5.2.4.\n *\n * @param {?} path A non-empty path component.\n * @return {?} Path component with removed dot segments.\n */\nfunction _removeDotSegments(path) {\n    if (path == '/')\n        return '/';\n    var /** @type {?} */ leadingSlash = path[0] == '/' ? '/' : '';\n    var /** @type {?} */ trailingSlash = path[path.length - 1] === '/' ? '/' : '';\n    var /** @type {?} */ segments = path.split('/');\n    var /** @type {?} */ out = [];\n    var /** @type {?} */ up = 0;\n    for (var /** @type {?} */ pos = 0; pos < segments.length; pos++) {\n        var /** @type {?} */ segment = segments[pos];\n        switch (segment) {\n            case '':\n            case '.':\n                break;\n            case '..':\n                if (out.length > 0) {\n                    out.pop();\n                }\n                else {\n                    up++;\n                }\n                break;\n            default:\n                out.push(segment);\n        }\n    }\n    if (leadingSlash == '') {\n        while (up-- > 0) {\n            out.unshift('..');\n        }\n        if (out.length === 0)\n            out.push('.');\n    }\n    return leadingSlash + out.join('/') + trailingSlash;\n}\n/**\n * Takes an array of the parts from split and canonicalizes the path part\n * and then joins all the parts.\n * @param {?} parts\n * @return {?}\n */\nfunction _joinAndCanonicalizePath(parts) {\n    var /** @type {?} */ path = parts[_ComponentIndex.Path];\n    path = path == null ? '' : _removeDotSegments(path);\n    parts[_ComponentIndex.Path] = path;\n    return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n}\n/**\n * Resolves a URL.\n * @param {?} base The URL acting as the base URL.\n * @param {?} url\n * @return {?}\n */\nfunction _resolveUrl(base, url) {\n    var /** @type {?} */ parts = _split(encodeURI(url));\n    var /** @type {?} */ baseParts = _split(base);\n    if (parts[_ComponentIndex.Scheme] != null) {\n        return _joinAndCanonicalizePath(parts);\n    }\n    else {\n        parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n    }\n    for (var /** @type {?} */ i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n        if (parts[i] == null) {\n            parts[i] = baseParts[i];\n        }\n    }\n    if (parts[_ComponentIndex.Path][0] == '/') {\n        return _joinAndCanonicalizePath(parts);\n    }\n    var /** @type {?} */ path = baseParts[_ComponentIndex.Path];\n    if (path == null)\n        path = '/';\n    var /** @type {?} */ index = path.lastIndexOf('/');\n    path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];\n    parts[_ComponentIndex.Path] = path;\n    return _joinAndCanonicalizePath(parts);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DirectiveNormalizer = (function () {\n    /**\n     * @param {?} _resourceLoader\n     * @param {?} _urlResolver\n     * @param {?} _htmlParser\n     * @param {?} _config\n     */\n    function DirectiveNormalizer(_resourceLoader, _urlResolver, _htmlParser, _config) {\n        this._resourceLoader = _resourceLoader;\n        this._urlResolver = _urlResolver;\n        this._htmlParser = _htmlParser;\n        this._config = _config;\n        this._resourceLoaderCache = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCache = function () { this._resourceLoaderCache.clear(); };\n    /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCacheFor = function (normalizedDirective) {\n        var _this = this;\n        if (!normalizedDirective.isComponent) {\n            return;\n        }\n        var /** @type {?} */ template = ((normalizedDirective.template));\n        this._resourceLoaderCache.delete(/** @type {?} */ ((template.templateUrl)));\n        template.externalStylesheets.forEach(function (stylesheet) { _this._resourceLoaderCache.delete(/** @type {?} */ ((stylesheet.moduleUrl))); });\n    };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._fetch = function (url) {\n        var /** @type {?} */ result = this._resourceLoaderCache.get(url);\n        if (!result) {\n            result = ((this._resourceLoader.get(url)));\n            this._resourceLoaderCache.set(url, result);\n        }\n        return result;\n    };\n    /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplate = function (prenormData) {\n        var _this = this;\n        var /** @type {?} */ normalizedTemplateSync = ((null));\n        var /** @type {?} */ normalizedTemplateAsync = ((undefined));\n        if (isDefined(prenormData.template)) {\n            if (isDefined(prenormData.templateUrl)) {\n                throw syntaxError(\"'\" + _angular_core.ɵstringify(prenormData.componentType) + \"' component cannot define both template and templateUrl\");\n            }\n            if (typeof prenormData.template !== 'string') {\n                throw syntaxError(\"The template specified for component \" + _angular_core.ɵstringify(prenormData.componentType) + \" is not a string\");\n            }\n            normalizedTemplateSync = this.normalizeTemplateSync(prenormData);\n            normalizedTemplateAsync = Promise.resolve(/** @type {?} */ ((normalizedTemplateSync)));\n        }\n        else if (isDefined(prenormData.templateUrl)) {\n            if (typeof prenormData.templateUrl !== 'string') {\n                throw syntaxError(\"The templateUrl specified for component \" + _angular_core.ɵstringify(prenormData.componentType) + \" is not a string\");\n            }\n            normalizedTemplateAsync = this.normalizeTemplateAsync(prenormData);\n        }\n        else {\n            throw syntaxError(\"No template specified for component \" + _angular_core.ɵstringify(prenormData.componentType));\n        }\n        if (normalizedTemplateSync && normalizedTemplateSync.styleUrls.length === 0) {\n            // sync case\n            return new SyncAsyncResult(normalizedTemplateSync);\n        }\n        else {\n            // async case\n            return new SyncAsyncResult(null, normalizedTemplateAsync.then(function (normalizedTemplate) { return _this.normalizeExternalStylesheets(normalizedTemplate); }));\n        }\n    };\n    /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplateSync = function (prenomData) {\n        return this.normalizeLoadedTemplate(prenomData, /** @type {?} */ ((prenomData.template)), prenomData.moduleUrl);\n    };\n    /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplateAsync = function (prenomData) {\n        var _this = this;\n        var /** @type {?} */ templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, /** @type {?} */ ((prenomData.templateUrl)));\n        return this._fetch(templateUrl)\n            .then(function (value) { return _this.normalizeLoadedTemplate(prenomData, value, templateUrl); });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeLoadedTemplate = function (prenormData, template, templateAbsUrl) {\n        var /** @type {?} */ isInline = !!prenormData.template;\n        var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((prenormData.interpolation)));\n        var /** @type {?} */ rootNodesAndErrors = this._htmlParser.parse(template, templateSourceUrl({ reference: prenormData.ngModuleType }, { type: { reference: prenormData.componentType } }, { isInline: isInline, templateUrl: templateAbsUrl }), true, interpolationConfig);\n        if (rootNodesAndErrors.errors.length > 0) {\n            var /** @type {?} */ errorString = rootNodesAndErrors.errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString);\n        }\n        var /** @type {?} */ templateMetadataStyles = this.normalizeStylesheet(new CompileStylesheetMetadata({\n            styles: prenormData.styles,\n            styleUrls: prenormData.styleUrls,\n            moduleUrl: prenormData.moduleUrl\n        }));\n        var /** @type {?} */ visitor = new TemplatePreparseVisitor();\n        visitAll(visitor, rootNodesAndErrors.rootNodes);\n        var /** @type {?} */ templateStyles = this.normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n        var /** @type {?} */ encapsulation = prenormData.encapsulation;\n        if (encapsulation == null) {\n            encapsulation = this._config.defaultEncapsulation;\n        }\n        var /** @type {?} */ styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n        var /** @type {?} */ styleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n        if (encapsulation === _angular_core.ViewEncapsulation.Emulated && styles.length === 0 &&\n            styleUrls.length === 0) {\n            encapsulation = _angular_core.ViewEncapsulation.None;\n        }\n        return new CompileTemplateMetadata({\n            encapsulation: encapsulation,\n            template: template,\n            templateUrl: templateAbsUrl, styles: styles, styleUrls: styleUrls,\n            ngContentSelectors: visitor.ngContentSelectors,\n            animations: prenormData.animations,\n            interpolation: prenormData.interpolation, isInline: isInline,\n            externalStylesheets: []\n        });\n    };\n    /**\n     * @param {?} templateMeta\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeExternalStylesheets = function (templateMeta) {\n        return this._loadMissingExternalStylesheets(templateMeta.styleUrls)\n            .then(function (externalStylesheets) { return new CompileTemplateMetadata({\n            encapsulation: templateMeta.encapsulation,\n            template: templateMeta.template,\n            templateUrl: templateMeta.templateUrl,\n            styles: templateMeta.styles,\n            styleUrls: templateMeta.styleUrls,\n            externalStylesheets: externalStylesheets,\n            ngContentSelectors: templateMeta.ngContentSelectors,\n            animations: templateMeta.animations,\n            interpolation: templateMeta.interpolation,\n            isInline: templateMeta.isInline,\n        }); });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._loadMissingExternalStylesheets = function (styleUrls, loadedStylesheets) {\n        var _this = this;\n        if (loadedStylesheets === void 0) { loadedStylesheets = new Map(); }\n        return Promise\n            .all(styleUrls.filter(function (styleUrl) { return !loadedStylesheets.has(styleUrl); })\n            .map(function (styleUrl) { return _this._fetch(styleUrl).then(function (loadedStyle) {\n            var /** @type {?} */ stylesheet = _this.normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n            loadedStylesheets.set(styleUrl, stylesheet);\n            return _this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n        }); }))\n            .then(function (_) { return Array.from(loadedStylesheets.values()); });\n    };\n    /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeStylesheet = function (stylesheet) {\n        var _this = this;\n        var /** @type {?} */ moduleUrl = ((stylesheet.moduleUrl));\n        var /** @type {?} */ allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n            .map(function (url) { return _this._urlResolver.resolve(moduleUrl, url); });\n        var /** @type {?} */ allStyles = stylesheet.styles.map(function (style$$1) {\n            var /** @type {?} */ styleWithImports = extractStyleUrls(_this._urlResolver, moduleUrl, style$$1);\n            allStyleUrls.push.apply(allStyleUrls, styleWithImports.styleUrls);\n            return styleWithImports.style;\n        });\n        return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: moduleUrl });\n    };\n    return DirectiveNormalizer;\n}());\nDirectiveNormalizer.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nDirectiveNormalizer.ctorParameters = function () { return [\n    { type: ResourceLoader, },\n    { type: UrlResolver, },\n    { type: HtmlParser, },\n    { type: CompilerConfig, },\n]; };\nvar TemplatePreparseVisitor = (function () {\n    function TemplatePreparseVisitor() {\n        this.ngContentSelectors = [];\n        this.styles = [];\n        this.styleUrls = [];\n        this.ngNonBindableStackCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitElement = function (ast, context) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        switch (preparsedElement.type) {\n            case PreparsedElementType.NG_CONTENT:\n                if (this.ngNonBindableStackCount === 0) {\n                    this.ngContentSelectors.push(preparsedElement.selectAttr);\n                }\n                break;\n            case PreparsedElementType.STYLE:\n                var /** @type {?} */ textContent_1 = '';\n                ast.children.forEach(function (child) {\n                    if (child instanceof Text) {\n                        textContent_1 += child.value;\n                    }\n                });\n                this.styles.push(textContent_1);\n                break;\n            case PreparsedElementType.STYLESHEET:\n                this.styleUrls.push(preparsedElement.hrefAttr);\n                break;\n            default:\n                break;\n        }\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount++;\n        }\n        visitAll(this, ast.children);\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount--;\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansion = function (ast, context) { visitAll(this, ast.cases); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansionCase = function (ast, context) {\n        visitAll(this, ast.expression);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitComment = function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitAttribute = function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitText = function (ast, context) { return null; };\n    return TemplatePreparseVisitor;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __assign = (undefined && undefined.__assign) || Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n    }\n    return t;\n};\nvar DirectiveResolver = (function () {\n    /**\n     * @param {?=} _reflector\n     */\n    function DirectiveResolver(_reflector) {\n        if (_reflector === void 0) { _reflector = _angular_core.ɵreflector; }\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    DirectiveResolver.prototype.isDirective = function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    DirectiveResolver.prototype.resolve = function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n        if (typeMetadata) {\n            var /** @type {?} */ metadata = findLast(typeMetadata, isDirectiveMetadata);\n            if (metadata) {\n                var /** @type {?} */ propertyMetadata = this._reflector.propMetadata(type);\n                return this._mergeWithPropertyMetadata(metadata, propertyMetadata, type);\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Directive annotation found on \" + _angular_core.ɵstringify(type));\n        }\n        return null;\n    };\n    /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._mergeWithPropertyMetadata = function (dm, propertyMetadata, directiveType) {\n        var /** @type {?} */ inputs = [];\n        var /** @type {?} */ outputs = [];\n        var /** @type {?} */ host = {};\n        var /** @type {?} */ queries = {};\n        Object.keys(propertyMetadata).forEach(function (propName) {\n            var /** @type {?} */ input = findLast(propertyMetadata[propName], function (a) { return a instanceof _angular_core.Input; });\n            if (input) {\n                if (input.bindingPropertyName) {\n                    inputs.push(propName + \": \" + input.bindingPropertyName);\n                }\n                else {\n                    inputs.push(propName);\n                }\n            }\n            var /** @type {?} */ output = findLast(propertyMetadata[propName], function (a) { return a instanceof _angular_core.Output; });\n            if (output) {\n                if (output.bindingPropertyName) {\n                    outputs.push(propName + \": \" + output.bindingPropertyName);\n                }\n                else {\n                    outputs.push(propName);\n                }\n            }\n            var /** @type {?} */ hostBindings = propertyMetadata[propName].filter(function (a) { return a && a instanceof _angular_core.HostBinding; });\n            hostBindings.forEach(function (hostBinding) {\n                if (hostBinding.hostPropertyName) {\n                    var /** @type {?} */ startWith = hostBinding.hostPropertyName[0];\n                    if (startWith === '(') {\n                        throw new Error(\"@HostBinding can not bind to events. Use @HostListener instead.\");\n                    }\n                    else if (startWith === '[') {\n                        throw new Error(\"@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.\");\n                    }\n                    host[\"[\" + hostBinding.hostPropertyName + \"]\"] = propName;\n                }\n                else {\n                    host[\"[\" + propName + \"]\"] = propName;\n                }\n            });\n            var /** @type {?} */ hostListeners = propertyMetadata[propName].filter(function (a) { return a && a instanceof _angular_core.HostListener; });\n            hostListeners.forEach(function (hostListener) {\n                var /** @type {?} */ args = hostListener.args || [];\n                host[\"(\" + hostListener.eventName + \")\"] = propName + \"(\" + args.join(',') + \")\";\n            });\n            var /** @type {?} */ query = findLast(propertyMetadata[propName], function (a) { return a instanceof _angular_core.Query; });\n            if (query) {\n                queries[propName] = query;\n            }\n        });\n        return this._merge(dm, inputs, outputs, host, queries, directiveType);\n    };\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    DirectiveResolver.prototype._extractPublicName = function (def) { return splitAtColon(def, [/** @type {?} */ ((null)), def])[1].trim(); };\n    /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    DirectiveResolver.prototype._dedupeBindings = function (bindings) {\n        var /** @type {?} */ names = new Set();\n        var /** @type {?} */ reversedResult = [];\n        // go last to first to allow later entries to overwrite previous entries\n        for (var /** @type {?} */ i = bindings.length - 1; i >= 0; i--) {\n            var /** @type {?} */ binding = bindings[i];\n            var /** @type {?} */ name = this._extractPublicName(binding);\n            if (!names.has(name)) {\n                names.add(name);\n                reversedResult.push(binding);\n            }\n        }\n        return reversedResult.reverse();\n    };\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._merge = function (directive, inputs, outputs, host, queries, directiveType) {\n        var /** @type {?} */ mergedInputs = this._dedupeBindings(directive.inputs ? directive.inputs.concat(inputs) : inputs);\n        var /** @type {?} */ mergedOutputs = this._dedupeBindings(directive.outputs ? directive.outputs.concat(outputs) : outputs);\n        var /** @type {?} */ mergedHost = directive.host ? __assign({}, directive.host, host) : host;\n        var /** @type {?} */ mergedQueries = directive.queries ? __assign({}, directive.queries, queries) : queries;\n        if (directive instanceof _angular_core.Component) {\n            return new _angular_core.Component({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                moduleId: directive.moduleId,\n                queries: mergedQueries,\n                changeDetection: directive.changeDetection,\n                providers: directive.providers,\n                viewProviders: directive.viewProviders,\n                entryComponents: directive.entryComponents,\n                template: directive.template,\n                templateUrl: directive.templateUrl,\n                styles: directive.styles,\n                styleUrls: directive.styleUrls,\n                encapsulation: directive.encapsulation,\n                animations: directive.animations,\n                interpolation: directive.interpolation\n            });\n        }\n        else {\n            return new _angular_core.Directive({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                queries: mergedQueries,\n                providers: directive.providers\n            });\n        }\n    };\n    return DirectiveResolver;\n}());\nDirectiveResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nDirectiveResolver.ctorParameters = function () { return [\n    { type: _angular_core.ɵReflectorReader, },\n]; };\n/**\n * @param {?} type\n * @return {?}\n */\nfunction isDirectiveMetadata(type) {\n    return type instanceof _angular_core.Directive;\n}\n/**\n * @template T\n * @param {?} arr\n * @param {?} condition\n * @return {?}\n */\nfunction findLast(arr, condition) {\n    for (var /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n        if (condition(arr[i])) {\n            return arr[i];\n        }\n    }\n    return null;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nvar GENERATED_FILE = /\\.ngfactory\\.|\\.ngsummary\\./;\nvar JIT_SUMMARY_FILE = /\\.ngsummary\\./;\nvar JIT_SUMMARY_NAME = /NgSummary$/;\n/**\n * @param {?} filePath\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction ngfactoryFilePath(filePath, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(filePath, forceSourceFile);\n    return urlWithSuffix[0] + \".ngfactory\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripGeneratedFileSuffix(filePath) {\n    return filePath.replace(GENERATED_FILE, '.');\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction isGeneratedFile(filePath) {\n    return GENERATED_FILE.test(filePath);\n}\n/**\n * @param {?} path\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction splitTypescriptSuffix(path, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    if (path.endsWith('.d.ts')) {\n        return [path.slice(0, -5), forceSourceFile ? '.ts' : '.d.ts'];\n    }\n    var /** @type {?} */ lastDot = path.lastIndexOf('.');\n    if (lastDot !== -1) {\n        return [path.substring(0, lastDot), path.substring(lastDot)];\n    }\n    return [path, ''];\n}\n/**\n * @param {?} fileName\n * @return {?}\n */\nfunction summaryFileName(fileName) {\n    var /** @type {?} */ fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n    return fileNameWithoutSuffix + \".ngsummary.json\";\n}\n/**\n * @param {?} fileName\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction summaryForJitFileName(fileName, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(stripGeneratedFileSuffix(fileName), forceSourceFile);\n    return urlWithSuffix[0] + \".ngsummary\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripSummaryForJitFileSuffix(filePath) {\n    return filePath.replace(JIT_SUMMARY_FILE, '.');\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction summaryForJitName(symbolName) {\n    return symbolName + \"NgSummary\";\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction stripSummaryForJitNameSuffix(symbolName) {\n    return symbolName.replace(JIT_SUMMARY_NAME, '');\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} hook\n * @param {?} token\n * @return {?}\n */\nfunction hasLifecycleHook(hook, token) {\n    return _angular_core.ɵreflector.hasLifecycleHook(token, getHookName(hook));\n}\n/**\n * @param {?} hook\n * @return {?}\n */\nfunction getHookName(hook) {\n    switch (hook) {\n        case _angular_core.ɵLifecycleHooks.OnInit:\n            return 'ngOnInit';\n        case _angular_core.ɵLifecycleHooks.OnDestroy:\n            return 'ngOnDestroy';\n        case _angular_core.ɵLifecycleHooks.DoCheck:\n            return 'ngDoCheck';\n        case _angular_core.ɵLifecycleHooks.OnChanges:\n            return 'ngOnChanges';\n        case _angular_core.ɵLifecycleHooks.AfterContentInit:\n            return 'ngAfterContentInit';\n        case _angular_core.ɵLifecycleHooks.AfterContentChecked:\n            return 'ngAfterContentChecked';\n        case _angular_core.ɵLifecycleHooks.AfterViewInit:\n            return 'ngAfterViewInit';\n        case _angular_core.ɵLifecycleHooks.AfterViewChecked:\n            return 'ngAfterViewChecked';\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _isNgModuleMetadata(obj) {\n    return obj instanceof _angular_core.NgModule;\n}\n/**\n * Resolves types to {\\@link NgModule}.\n */\nvar NgModuleResolver = (function () {\n    /**\n     * @param {?=} _reflector\n     */\n    function NgModuleResolver(_reflector) {\n        if (_reflector === void 0) { _reflector = _angular_core.ɵreflector; }\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    NgModuleResolver.prototype.isNgModule = function (type) { return this._reflector.annotations(type).some(_isNgModuleMetadata); };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    NgModuleResolver.prototype.resolve = function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModuleMeta = findLast(this._reflector.annotations(type), _isNgModuleMetadata);\n        if (ngModuleMeta) {\n            return ngModuleMeta;\n        }\n        else {\n            if (throwIfNotFound) {\n                throw new Error(\"No NgModule metadata found for '\" + _angular_core.ɵstringify(type) + \"'.\");\n            }\n            return null;\n        }\n    };\n    return NgModuleResolver;\n}());\nNgModuleResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nNgModuleResolver.ctorParameters = function () { return [\n    { type: _angular_core.ɵReflectorReader, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} type\n * @return {?}\n */\nfunction _isPipeMetadata(type) {\n    return type instanceof _angular_core.Pipe;\n}\n/**\n * Resolve a `Type` for {\\@link Pipe}.\n *\n * This interface can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n */\nvar PipeResolver = (function () {\n    /**\n     * @param {?=} _reflector\n     */\n    function PipeResolver(_reflector) {\n        if (_reflector === void 0) { _reflector = _angular_core.ɵreflector; }\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    PipeResolver.prototype.isPipe = function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(_isPipeMetadata);\n    };\n    /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    PipeResolver.prototype.resolve = function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ metas = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n        if (metas) {\n            var /** @type {?} */ annotation = findLast(metas, _isPipeMetadata);\n            if (annotation) {\n                return annotation;\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Pipe decorator found on \" + _angular_core.ɵstringify(type));\n        }\n        return null;\n    };\n    return PipeResolver;\n}());\nPipeResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nPipeResolver.ctorParameters = function () { return [\n    { type: _angular_core.ɵReflectorReader, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar SummaryResolver = (function () {\n    function SummaryResolver() {\n    }\n    /**\n     * @abstract\n     * @param {?} fileName\n     * @return {?}\n     */\n    SummaryResolver.prototype.isLibraryFile = function (fileName) { };\n    /**\n     * @abstract\n     * @param {?} fileName\n     * @return {?}\n     */\n    SummaryResolver.prototype.getLibraryFileName = function (fileName) { };\n    /**\n     * @abstract\n     * @param {?} reference\n     * @return {?}\n     */\n    SummaryResolver.prototype.resolveSummary = function (reference) { };\n    /**\n     * @abstract\n     * @param {?} filePath\n     * @return {?}\n     */\n    SummaryResolver.prototype.getSymbolsOf = function (filePath) { };\n    /**\n     * @abstract\n     * @param {?} reference\n     * @return {?}\n     */\n    SummaryResolver.prototype.getImportAs = function (reference) { };\n    /**\n     * @abstract\n     * @param {?} summary\n     * @return {?}\n     */\n    SummaryResolver.prototype.addSummary = function (summary) { };\n    return SummaryResolver;\n}());\nvar JitSummaryResolver = (function () {\n    function JitSummaryResolver() {\n        this._summaries = new Map();\n    }\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.isLibraryFile = function (fileName) { return false; };\n    \n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getLibraryFileName = function (fileName) { return null; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.resolveSummary = function (reference) {\n        return this._summaries.get(reference) || null;\n    };\n    \n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getSymbolsOf = function (filePath) { return []; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getImportAs = function (reference) { return reference; };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.addSummary = function (summary) { this._summaries.set(summary.symbol, summary); };\n    \n    return JitSummaryResolver;\n}());\nJitSummaryResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nJitSummaryResolver.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ERROR_COLLECTOR_TOKEN = new _angular_core.InjectionToken('ErrorCollector');\nvar CompileMetadataResolver = (function () {\n    /**\n     * @param {?} _config\n     * @param {?} _ngModuleResolver\n     * @param {?} _directiveResolver\n     * @param {?} _pipeResolver\n     * @param {?} _summaryResolver\n     * @param {?} _schemaRegistry\n     * @param {?} _directiveNormalizer\n     * @param {?} _console\n     * @param {?} _staticSymbolCache\n     * @param {?=} _reflector\n     * @param {?=} _errorCollector\n     */\n    function CompileMetadataResolver(_config, _ngModuleResolver, _directiveResolver, _pipeResolver, _summaryResolver, _schemaRegistry, _directiveNormalizer, _console, _staticSymbolCache, _reflector, _errorCollector) {\n        if (_reflector === void 0) { _reflector = _angular_core.ɵreflector; }\n        this._config = _config;\n        this._ngModuleResolver = _ngModuleResolver;\n        this._directiveResolver = _directiveResolver;\n        this._pipeResolver = _pipeResolver;\n        this._summaryResolver = _summaryResolver;\n        this._schemaRegistry = _schemaRegistry;\n        this._directiveNormalizer = _directiveNormalizer;\n        this._console = _console;\n        this._staticSymbolCache = _staticSymbolCache;\n        this._reflector = _reflector;\n        this._errorCollector = _errorCollector;\n        this._nonNormalizedDirectiveCache = new Map();\n        this._directiveCache = new Map();\n        this._summaryCache = new Map();\n        this._pipeCache = new Map();\n        this._ngModuleCache = new Map();\n        this._ngModuleOfTypes = new Map();\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCacheFor = function (type) {\n        var /** @type {?} */ dirMeta = this._directiveCache.get(type);\n        this._directiveCache.delete(type);\n        this._nonNormalizedDirectiveCache.delete(type);\n        this._summaryCache.delete(type);\n        this._pipeCache.delete(type);\n        this._ngModuleOfTypes.delete(type);\n        // Clear all of the NgModule as they contain transitive information!\n        this._ngModuleCache.clear();\n        if (dirMeta) {\n            this._directiveNormalizer.clearCacheFor(dirMeta);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCache = function () {\n        this._directiveCache.clear();\n        this._nonNormalizedDirectiveCache.clear();\n        this._summaryCache.clear();\n        this._pipeCache.clear();\n        this._ngModuleCache.clear();\n        this._ngModuleOfTypes.clear();\n        this._directiveNormalizer.clearCache();\n    };\n    /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._createProxyClass = function (baseType, name) {\n        var /** @type {?} */ delegate = null;\n        var /** @type {?} */ proxyClass = (function () {\n            if (!delegate) {\n                throw new Error(\"Illegal state: Class \" + name + \" for type \" + _angular_core.ɵstringify(baseType) + \" is not compiled yet!\");\n            }\n            return delegate.apply(this, arguments);\n        });\n        proxyClass.setDelegate = function (d) {\n            delegate = d;\n            ((proxyClass)).prototype = d.prototype;\n        };\n        // Make stringify work correctly\n        ((proxyClass)).overriddenName = name;\n        return proxyClass;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getGeneratedClass = function (dirType, name) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n        }\n        else {\n            return this._createProxyClass(dirType, name);\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentViewClass = function (dirType) {\n        return this.getGeneratedClass(dirType, viewClassName(dirType, 0));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentViewClass = function (dirType) {\n        return this.getGeneratedClass(dirType, hostViewClassName(dirType));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentType = function (dirType) {\n        var /** @type {?} */ name = identifierName({ reference: dirType }) + \"_Host\";\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(dirType.filePath, name);\n        }\n        else {\n            var /** @type {?} */ HostClass = (function HostClass() { });\n            HostClass.overriddenName = name;\n            return HostClass;\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getRendererType = function (dirType) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), rendererTypeName(dirType));\n        }\n        else {\n            // returning an object as proxy,\n            // that we fill later during runtime compilation.\n            return ({});\n        }\n    };\n    /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentFactory = function (selector, dirType, inputs, outputs) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), componentFactoryName(dirType));\n        }\n        else {\n            var /** @type {?} */ hostView = this.getHostComponentViewClass(dirType);\n            // Note: ngContentSelectors will be filled later once the template is\n            // loaded.\n            return _angular_core.ɵccf(selector, dirType, /** @type {?} */ (hostView), inputs, outputs, []);\n        }\n    };\n    /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.initComponentFactory = function (factory, ngContentSelectors) {\n        if (!(factory instanceof StaticSymbol)) {\n            (_a = factory.ngContentSelectors).push.apply(_a, ngContentSelectors);\n        }\n        var _a;\n    };\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadSummary = function (type, kind) {\n        var /** @type {?} */ typeSummary = this._summaryCache.get(type);\n        if (!typeSummary) {\n            var /** @type {?} */ summary = this._summaryResolver.resolveSummary(type);\n            typeSummary = summary ? summary.type : null;\n            this._summaryCache.set(type, typeSummary || null);\n        }\n        return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n    };\n    /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadDirectiveMetadata = function (ngModuleType, directiveType, isSync) {\n        var _this = this;\n        if (this._directiveCache.has(directiveType)) {\n            return null;\n        }\n        directiveType = _angular_core.resolveForwardRef(directiveType);\n        var _a = ((this.getNonNormalizedDirectiveMetadata(directiveType))), annotation = _a.annotation, metadata = _a.metadata;\n        var /** @type {?} */ createDirectiveMetadata = function (templateMetadata) {\n            var /** @type {?} */ normalizedDirMeta = new CompileDirectiveMetadata({\n                isHost: false,\n                type: metadata.type,\n                isComponent: metadata.isComponent,\n                selector: metadata.selector,\n                exportAs: metadata.exportAs,\n                changeDetection: metadata.changeDetection,\n                inputs: metadata.inputs,\n                outputs: metadata.outputs,\n                hostListeners: metadata.hostListeners,\n                hostProperties: metadata.hostProperties,\n                hostAttributes: metadata.hostAttributes,\n                providers: metadata.providers,\n                viewProviders: metadata.viewProviders,\n                queries: metadata.queries,\n                viewQueries: metadata.viewQueries,\n                entryComponents: metadata.entryComponents,\n                componentViewType: metadata.componentViewType,\n                rendererType: metadata.rendererType,\n                componentFactory: metadata.componentFactory,\n                template: templateMetadata\n            });\n            if (templateMetadata) {\n                _this.initComponentFactory(/** @type {?} */ ((metadata.componentFactory)), templateMetadata.ngContentSelectors);\n            }\n            _this._directiveCache.set(directiveType, normalizedDirMeta);\n            _this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n            return normalizedDirMeta;\n        };\n        if (metadata.isComponent) {\n            var /** @type {?} */ template = ((metadata.template));\n            var /** @type {?} */ templateMeta = this._directiveNormalizer.normalizeTemplate({\n                ngModuleType: ngModuleType,\n                componentType: directiveType,\n                moduleUrl: componentModuleUrl(this._reflector, directiveType, annotation),\n                encapsulation: template.encapsulation,\n                template: template.template,\n                templateUrl: template.templateUrl,\n                styles: template.styles,\n                styleUrls: template.styleUrls,\n                animations: template.animations,\n                interpolation: template.interpolation\n            });\n            if (templateMeta.syncResult) {\n                createDirectiveMetadata(templateMeta.syncResult);\n                return null;\n            }\n            else {\n                if (isSync) {\n                    this._reportError(componentStillLoadingError(directiveType), directiveType);\n                    return null;\n                }\n                return ((templateMeta.asyncResult)).then(createDirectiveMetadata);\n            }\n        }\n        else {\n            // directive\n            createDirectiveMetadata(null);\n            return null;\n        }\n    };\n    /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNonNormalizedDirectiveMetadata = function (directiveType) {\n        var _this = this;\n        directiveType = _angular_core.resolveForwardRef(directiveType);\n        if (!directiveType) {\n            return null;\n        }\n        var /** @type {?} */ cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n        if (cacheEntry) {\n            return cacheEntry;\n        }\n        var /** @type {?} */ dirMeta = this._directiveResolver.resolve(directiveType, false);\n        if (!dirMeta) {\n            return null;\n        }\n        var /** @type {?} */ nonNormalizedTemplateMetadata = ((undefined));\n        if (dirMeta instanceof _angular_core.Component) {\n            // component\n            assertArrayOfStrings('styles', dirMeta.styles);\n            assertArrayOfStrings('styleUrls', dirMeta.styleUrls);\n            assertInterpolationSymbols('interpolation', dirMeta.interpolation);\n            var /** @type {?} */ animations = dirMeta.animations;\n            nonNormalizedTemplateMetadata = new CompileTemplateMetadata({\n                encapsulation: noUndefined(dirMeta.encapsulation),\n                template: noUndefined(dirMeta.template),\n                templateUrl: noUndefined(dirMeta.templateUrl),\n                styles: dirMeta.styles || [],\n                styleUrls: dirMeta.styleUrls || [],\n                animations: animations || [],\n                interpolation: noUndefined(dirMeta.interpolation),\n                isInline: !!dirMeta.template,\n                externalStylesheets: [],\n                ngContentSelectors: []\n            });\n        }\n        var /** @type {?} */ changeDetectionStrategy = ((null));\n        var /** @type {?} */ viewProviders = [];\n        var /** @type {?} */ entryComponentMetadata = [];\n        var /** @type {?} */ selector = dirMeta.selector;\n        if (dirMeta instanceof _angular_core.Component) {\n            // Component\n            changeDetectionStrategy = ((dirMeta.changeDetection));\n            if (dirMeta.viewProviders) {\n                viewProviders = this._getProvidersMetadata(dirMeta.viewProviders, entryComponentMetadata, \"viewProviders for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n            }\n            if (dirMeta.entryComponents) {\n                entryComponentMetadata = flattenAndDedupeArray(dirMeta.entryComponents)\n                    .map(function (type) { return ((_this._getEntryComponentMetadata(type))); })\n                    .concat(entryComponentMetadata);\n            }\n            if (!selector) {\n                selector = this._schemaRegistry.getDefaultComponentElementName();\n            }\n        }\n        else {\n            // Directive\n            if (!selector) {\n                this._reportError(syntaxError(\"Directive \" + stringifyType(directiveType) + \" has no selector, please add it!\"), directiveType);\n                selector = 'error';\n            }\n        }\n        var /** @type {?} */ providers = [];\n        if (dirMeta.providers != null) {\n            providers = this._getProvidersMetadata(dirMeta.providers, entryComponentMetadata, \"providers for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n        }\n        var /** @type {?} */ queries = [];\n        var /** @type {?} */ viewQueries = [];\n        if (dirMeta.queries != null) {\n            queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n            viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n        }\n        var /** @type {?} */ metadata = CompileDirectiveMetadata.create({\n            isHost: false,\n            selector: selector,\n            exportAs: noUndefined(dirMeta.exportAs),\n            isComponent: !!nonNormalizedTemplateMetadata,\n            type: this._getTypeMetadata(directiveType),\n            template: nonNormalizedTemplateMetadata,\n            changeDetection: changeDetectionStrategy,\n            inputs: dirMeta.inputs || [],\n            outputs: dirMeta.outputs || [],\n            host: dirMeta.host || {},\n            providers: providers || [],\n            viewProviders: viewProviders || [],\n            queries: queries || [],\n            viewQueries: viewQueries || [],\n            entryComponents: entryComponentMetadata,\n            componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                null,\n            rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : null,\n            componentFactory: null\n        });\n        if (nonNormalizedTemplateMetadata) {\n            metadata.componentFactory =\n                this.getComponentFactory(selector, directiveType, metadata.inputs, metadata.outputs);\n        }\n        cacheEntry = { metadata: metadata, annotation: dirMeta };\n        this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n        return cacheEntry;\n    };\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveMetadata = function (directiveType) {\n        var /** @type {?} */ dirMeta = ((this._directiveCache.get(directiveType)));\n        if (!dirMeta) {\n            this._reportError(syntaxError(\"Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive \" + stringifyType(directiveType) + \".\"), directiveType);\n        }\n        return dirMeta;\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveSummary = function (dirType) {\n        var /** @type {?} */ dirSummary = (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (!dirSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for directive \" + stringifyType(dirType) + \".\"), dirType);\n        }\n        return dirSummary;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isDirective = function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Directive) ||\n            this._directiveResolver.isDirective(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isPipe = function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Pipe) ||\n            this._pipeResolver.isPipe(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isNgModule = function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.NgModule) ||\n            this._ngModuleResolver.isNgModule(type);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleSummary = function (moduleType) {\n        var /** @type {?} */ moduleSummary = (this._loadSummary(moduleType, CompileSummaryKind.NgModule));\n        if (!moduleSummary) {\n            var /** @type {?} */ moduleMeta = this.getNgModuleMetadata(moduleType, false);\n            moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n            if (moduleSummary) {\n                this._summaryCache.set(moduleType, moduleSummary);\n            }\n        }\n        return moduleSummary;\n    };\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadNgModuleDirectiveAndPipeMetadata = function (moduleType, isSync, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n        var /** @type {?} */ loading = [];\n        if (ngModule) {\n            ngModule.declaredDirectives.forEach(function (id) {\n                var /** @type {?} */ promise = _this.loadDirectiveMetadata(moduleType, id.reference, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            ngModule.declaredPipes.forEach(function (id) { return _this._loadPipeMetadata(id.reference); });\n        }\n        return Promise.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleMetadata = function (moduleType, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        moduleType = _angular_core.resolveForwardRef(moduleType);\n        var /** @type {?} */ compileMeta = this._ngModuleCache.get(moduleType);\n        if (compileMeta) {\n            return compileMeta;\n        }\n        var /** @type {?} */ meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n        if (!meta) {\n            return null;\n        }\n        var /** @type {?} */ declaredDirectives = [];\n        var /** @type {?} */ exportedNonModuleIdentifiers = [];\n        var /** @type {?} */ declaredPipes = [];\n        var /** @type {?} */ importedModules = [];\n        var /** @type {?} */ exportedModules = [];\n        var /** @type {?} */ providers = [];\n        var /** @type {?} */ entryComponents = [];\n        var /** @type {?} */ bootstrapComponents = [];\n        var /** @type {?} */ schemas = [];\n        if (meta.imports) {\n            flattenAndDedupeArray(meta.imports).forEach(function (importedType) {\n                var /** @type {?} */ importedModuleType = ((undefined));\n                if (isValidType(importedType)) {\n                    importedModuleType = importedType;\n                }\n                else if (importedType && importedType.ngModule) {\n                    var /** @type {?} */ moduleWithProviders = importedType;\n                    importedModuleType = moduleWithProviders.ngModule;\n                    if (moduleWithProviders.providers) {\n                        providers.push.apply(providers, _this._getProvidersMetadata(moduleWithProviders.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(importedModuleType) + \"'\", [], importedType));\n                    }\n                }\n                if (importedModuleType) {\n                    if (_this._checkSelfImport(moduleType, importedModuleType))\n                        return;\n                    var /** @type {?} */ importedModuleSummary = _this.getNgModuleSummary(importedModuleType);\n                    if (!importedModuleSummary) {\n                        _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(importedType) + \" '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'. Please add a @NgModule annotation.\"), moduleType);\n                        return;\n                    }\n                    importedModules.push(importedModuleSummary);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n            });\n        }\n        if (meta.exports) {\n            flattenAndDedupeArray(meta.exports).forEach(function (exportedType) {\n                if (!isValidType(exportedType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(exportedType) + \"' exported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ exportedModuleSummary = _this.getNgModuleSummary(exportedType);\n                if (exportedModuleSummary) {\n                    exportedModules.push(exportedModuleSummary);\n                }\n                else {\n                    exportedNonModuleIdentifiers.push(_this._getIdentifierMetadata(exportedType));\n                }\n            });\n        }\n        // Note: This will be modified later, so we rely on\n        // getting a new instance every time!\n        var /** @type {?} */ transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n        if (meta.declarations) {\n            flattenAndDedupeArray(meta.declarations).forEach(function (declaredType) {\n                if (!isValidType(declaredType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ declaredIdentifier = _this._getIdentifierMetadata(declaredType);\n                if (_this.isDirective(declaredType)) {\n                    transitiveModule.addDirective(declaredIdentifier);\n                    declaredDirectives.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else if (_this.isPipe(declaredType)) {\n                    transitiveModule.addPipe(declaredIdentifier);\n                    transitiveModule.pipes.push(declaredIdentifier);\n                    declaredPipes.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(declaredType) + \" '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\"), moduleType);\n                    return;\n                }\n            });\n        }\n        var /** @type {?} */ exportedDirectives = [];\n        var /** @type {?} */ exportedPipes = [];\n        exportedNonModuleIdentifiers.forEach(function (exportedId) {\n            if (transitiveModule.directivesSet.has(exportedId.reference)) {\n                exportedDirectives.push(exportedId);\n                transitiveModule.addExportedDirective(exportedId);\n            }\n            else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n                exportedPipes.push(exportedId);\n                transitiveModule.addExportedPipe(exportedId);\n            }\n            else {\n                _this._reportError(syntaxError(\"Can't export \" + _this._getTypeDescriptor(exportedId.reference) + \" \" + stringifyType(exportedId.reference) + \" from \" + stringifyType(moduleType) + \" as it was neither declared nor imported!\"), moduleType);\n                return;\n            }\n        });\n        // The providers of the module have to go last\n        // so that they overwrite any other provider we already added.\n        if (meta.providers) {\n            providers.push.apply(providers, this._getProvidersMetadata(meta.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(moduleType) + \"'\", [], moduleType));\n        }\n        if (meta.entryComponents) {\n            entryComponents.push.apply(entryComponents, flattenAndDedupeArray(meta.entryComponents)\n                .map(function (type) { return ((_this._getEntryComponentMetadata(type))); }));\n        }\n        if (meta.bootstrap) {\n            flattenAndDedupeArray(meta.bootstrap).forEach(function (type) {\n                if (!isValidType(type)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(type) + \"' used in the bootstrap property of module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                bootstrapComponents.push(_this._getIdentifierMetadata(type));\n            });\n        }\n        entryComponents.push.apply(entryComponents, bootstrapComponents.map(function (type) { return ((_this._getEntryComponentMetadata(type.reference))); }));\n        if (meta.schemas) {\n            schemas.push.apply(schemas, flattenAndDedupeArray(meta.schemas));\n        }\n        compileMeta = new CompileNgModuleMetadata({\n            type: this._getTypeMetadata(moduleType),\n            providers: providers,\n            entryComponents: entryComponents,\n            bootstrapComponents: bootstrapComponents,\n            schemas: schemas,\n            declaredDirectives: declaredDirectives,\n            exportedDirectives: exportedDirectives,\n            declaredPipes: declaredPipes,\n            exportedPipes: exportedPipes,\n            importedModules: importedModules,\n            exportedModules: exportedModules,\n            transitiveModule: transitiveModule,\n            id: meta.id || null,\n        });\n        entryComponents.forEach(function (id) { return transitiveModule.addEntryComponent(id); });\n        providers.forEach(function (provider) { return transitiveModule.addProvider(provider, /** @type {?} */ ((compileMeta)).type); });\n        transitiveModule.addModule(compileMeta.type);\n        this._ngModuleCache.set(moduleType, compileMeta);\n        return compileMeta;\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._checkSelfImport = function (moduleType, importedModuleType) {\n        if (moduleType === importedModuleType) {\n            this._reportError(syntaxError(\"'\" + stringifyType(moduleType) + \"' module can't import itself\"), moduleType);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeDescriptor = function (type) {\n        if (this.isDirective(type)) {\n            return 'directive';\n        }\n        if (this.isPipe(type)) {\n            return 'pipe';\n        }\n        if (this.isNgModule(type)) {\n            return 'module';\n        }\n        if (((type)).provide) {\n            return 'provider';\n        }\n        return 'value';\n    };\n    /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._addTypeToModule = function (type, moduleType) {\n        var /** @type {?} */ oldModule = this._ngModuleOfTypes.get(type);\n        if (oldModule && oldModule !== moduleType) {\n            this._reportError(syntaxError(\"Type \" + stringifyType(type) + \" is part of the declarations of 2 modules: \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \"! \" +\n                (\"Please consider moving \" + stringifyType(type) + \" to a higher module that imports \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \". \") +\n                (\"You can also create a new NgModule that exports and includes \" + stringifyType(type) + \" then import that NgModule in \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \".\")), moduleType);\n            return;\n        }\n        this._ngModuleOfTypes.set(type, moduleType);\n    };\n    /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata = function (importedModules, exportedModules) {\n        // collect `providers` / `entryComponents` from all imported and all exported modules\n        var /** @type {?} */ result = new TransitiveCompileNgModuleMetadata();\n        var /** @type {?} */ modulesByToken = new Map();\n        importedModules.concat(exportedModules).forEach(function (modSummary) {\n            modSummary.modules.forEach(function (mod) { return result.addModule(mod); });\n            modSummary.entryComponents.forEach(function (comp) { return result.addEntryComponent(comp); });\n            var /** @type {?} */ addedTokens = new Set();\n            modSummary.providers.forEach(function (entry) {\n                var /** @type {?} */ tokenRef = tokenReference(entry.provider.token);\n                var /** @type {?} */ prevModules = modulesByToken.get(tokenRef);\n                if (!prevModules) {\n                    prevModules = new Set();\n                    modulesByToken.set(tokenRef, prevModules);\n                }\n                var /** @type {?} */ moduleRef = entry.module.reference;\n                // Note: the providers of one module may still contain multiple providers\n                // per token (e.g. for multi providers), and we need to preserve these.\n                if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n                    prevModules.add(moduleRef);\n                    addedTokens.add(tokenRef);\n                    result.addProvider(entry.provider, entry.module);\n                }\n            });\n        });\n        exportedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addExportedDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addExportedPipe(id); });\n        });\n        importedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addPipe(id); });\n        });\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getIdentifierMetadata = function (type) {\n        type = _angular_core.resolveForwardRef(type);\n        return { reference: type };\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isInjectable = function (type) {\n        var /** @type {?} */ annotations = this._reflector.annotations(type);\n        // Note: We need an exact check here as @Component / @Directive / ... inherit\n        // from @CompilerInjectable!\n        return annotations.some(function (ann) { return ann.constructor === _angular_core.Injectable; });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getInjectableSummary = function (type) {\n        return {\n            summaryKind: CompileSummaryKind.Injectable,\n            type: this._getTypeMetadata(type, null, false)\n        };\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getInjectableMetadata = function (type, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        var /** @type {?} */ typeSummary = this._loadSummary(type, CompileSummaryKind.Injectable);\n        if (typeSummary) {\n            return typeSummary.type;\n        }\n        return this._getTypeMetadata(type, dependencies);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeMetadata = function (type, dependencies, throwOnUnknownDeps) {\n        if (dependencies === void 0) { dependencies = null; }\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ identifier = this._getIdentifierMetadata(type);\n        return {\n            reference: identifier.reference,\n            diDeps: this._getDependenciesMetadata(identifier.reference, dependencies, throwOnUnknownDeps),\n            lifecycleHooks: _angular_core.ɵLIFECYCLE_HOOKS_VALUES.filter(function (hook) { return hasLifecycleHook(hook, identifier.reference); }),\n        };\n    };\n    /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getFactoryMetadata = function (factory, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        factory = _angular_core.resolveForwardRef(factory);\n        return { reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies) };\n    };\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeMetadata = function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            this._reportError(syntaxError(\"Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeMeta || null;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeSummary = function (pipeType) {\n        var /** @type {?} */ pipeSummary = (this._loadSummary(pipeType, CompileSummaryKind.Pipe));\n        if (!pipeSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeSummary;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getOrLoadPipeMetadata = function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            pipeMeta = this._loadPipeMetadata(pipeType);\n        }\n        return pipeMeta;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadPipeMetadata = function (pipeType) {\n        pipeType = _angular_core.resolveForwardRef(pipeType);\n        var /** @type {?} */ pipeAnnotation = ((this._pipeResolver.resolve(pipeType)));\n        var /** @type {?} */ pipeMeta = new CompilePipeMetadata({\n            type: this._getTypeMetadata(pipeType),\n            name: pipeAnnotation.name,\n            pure: !!pipeAnnotation.pure\n        });\n        this._pipeCache.set(pipeType, pipeMeta);\n        this._summaryCache.set(pipeType, pipeMeta.toSummary());\n        return pipeMeta;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getDependenciesMetadata = function (typeOrFunc, dependencies, throwOnUnknownDeps) {\n        var _this = this;\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ hasUnknownDeps = false;\n        var /** @type {?} */ params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n        var /** @type {?} */ dependenciesMetadata = params.map(function (param) {\n            var /** @type {?} */ isAttribute = false;\n            var /** @type {?} */ isHost = false;\n            var /** @type {?} */ isSelf = false;\n            var /** @type {?} */ isSkipSelf = false;\n            var /** @type {?} */ isOptional = false;\n            var /** @type {?} */ token = null;\n            if (Array.isArray(param)) {\n                param.forEach(function (paramEntry) {\n                    if (paramEntry instanceof _angular_core.Host) {\n                        isHost = true;\n                    }\n                    else if (paramEntry instanceof _angular_core.Self) {\n                        isSelf = true;\n                    }\n                    else if (paramEntry instanceof _angular_core.SkipSelf) {\n                        isSkipSelf = true;\n                    }\n                    else if (paramEntry instanceof _angular_core.Optional) {\n                        isOptional = true;\n                    }\n                    else if (paramEntry instanceof _angular_core.Attribute) {\n                        isAttribute = true;\n                        token = paramEntry.attributeName;\n                    }\n                    else if (paramEntry instanceof _angular_core.Inject) {\n                        token = paramEntry.token;\n                    }\n                    else if (paramEntry instanceof _angular_core.InjectionToken) {\n                        token = paramEntry;\n                    }\n                    else if (isValidType(paramEntry) && token == null) {\n                        token = paramEntry;\n                    }\n                });\n            }\n            else {\n                token = param;\n            }\n            if (token == null) {\n                hasUnknownDeps = true;\n                return ((null));\n            }\n            return {\n                isAttribute: isAttribute,\n                isHost: isHost,\n                isSelf: isSelf,\n                isSkipSelf: isSkipSelf,\n                isOptional: isOptional,\n                token: _this._getTokenMetadata(token)\n            };\n        });\n        if (hasUnknownDeps) {\n            var /** @type {?} */ depsTokens = dependenciesMetadata.map(function (dep) { return dep ? stringifyType(dep.token) : '?'; }).join(', ');\n            var /** @type {?} */ message = \"Can't resolve all parameters for \" + stringifyType(typeOrFunc) + \": (\" + depsTokens + \").\";\n            if (throwOnUnknownDeps) {\n                this._reportError(syntaxError(message), typeOrFunc);\n            }\n            else {\n                this._console.warn(\"Warning: \" + message + \" This will become an error in Angular v5.x\");\n            }\n        }\n        return dependenciesMetadata;\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTokenMetadata = function (token) {\n        token = _angular_core.resolveForwardRef(token);\n        var /** @type {?} */ compileToken;\n        if (typeof token === 'string') {\n            compileToken = { value: token };\n        }\n        else {\n            compileToken = { identifier: { reference: token } };\n        }\n        return compileToken;\n    };\n    /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getProvidersMetadata = function (providers, targetEntryComponents, debugInfo, compileProviders, type) {\n        var _this = this;\n        if (compileProviders === void 0) { compileProviders = []; }\n        providers.forEach(function (provider, providerIdx) {\n            if (Array.isArray(provider)) {\n                _this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n            }\n            else {\n                provider = _angular_core.resolveForwardRef(provider);\n                var /** @type {?} */ providerMeta = ((undefined));\n                if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n                    _this._validateProvider(provider);\n                    providerMeta = new ProviderMeta(provider.provide, provider);\n                }\n                else if (isValidType(provider)) {\n                    providerMeta = new ProviderMeta(provider, { useClass: provider });\n                }\n                else if (provider === void 0) {\n                    _this._reportError(syntaxError(\"Encountered undefined provider! Usually this means you have a circular dependencies (might be caused by using 'barrel' index.ts files.\"));\n                    return;\n                }\n                else {\n                    var /** @type {?} */ providersInfo = ((providers.reduce(function (soFar, seenProvider, seenProviderIdx) {\n                        if (seenProviderIdx < providerIdx) {\n                            soFar.push(\"\" + stringifyType(seenProvider));\n                        }\n                        else if (seenProviderIdx == providerIdx) {\n                            soFar.push(\"?\" + stringifyType(seenProvider) + \"?\");\n                        }\n                        else if (seenProviderIdx == providerIdx + 1) {\n                            soFar.push('...');\n                        }\n                        return soFar;\n                    }, [])))\n                        .join(', ');\n                    _this._reportError(syntaxError(\"Invalid \" + (debugInfo ? debugInfo : 'provider') + \" - only instances of Provider and Type are allowed, got: [\" + providersInfo + \"]\"), type);\n                    return;\n                }\n                if (providerMeta.token === resolveIdentifier(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n                    targetEntryComponents.push.apply(targetEntryComponents, _this._getEntryComponentsFromProvider(providerMeta, type));\n                }\n                else {\n                    compileProviders.push(_this.getProviderMetadata(providerMeta));\n                }\n            }\n        });\n        return compileProviders;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._validateProvider = function (provider) {\n        if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n            this._reportError(syntaxError(\"Invalid provider for \" + stringifyType(provider.provide) + \". useClass cannot be \" + provider.useClass + \".\\n           Usually it happens when:\\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\\n           2. Class was used before it was declared. Use forwardRef in this case.\"));\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentsFromProvider = function (provider, type) {\n        var _this = this;\n        var /** @type {?} */ components = [];\n        var /** @type {?} */ collectedIdentifiers = [];\n        if (provider.useFactory || provider.useExisting || provider.useClass) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!\"), type);\n            return [];\n        }\n        if (!provider.multi) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!\"), type);\n            return [];\n        }\n        extractIdentifiers(provider.useValue, collectedIdentifiers);\n        collectedIdentifiers.forEach(function (identifier) {\n            var /** @type {?} */ entry = _this._getEntryComponentMetadata(identifier.reference, false);\n            if (entry) {\n                components.push(entry);\n            }\n        });\n        return components;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentMetadata = function (dirType, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n        if (dirMeta && dirMeta.metadata.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirMeta.metadata.componentFactory)) };\n        }\n        var /** @type {?} */ dirSummary = (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (dirSummary && dirSummary.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirSummary.componentFactory)) };\n        }\n        if (throwIfNotFound) {\n            throw syntaxError(dirType.name + \" cannot be used as an entry component.\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getProviderMetadata = function (provider) {\n        var /** @type {?} */ compileDeps = ((undefined));\n        var /** @type {?} */ compileTypeMetadata = ((null));\n        var /** @type {?} */ compileFactoryMetadata = ((null));\n        var /** @type {?} */ token = this._getTokenMetadata(provider.token);\n        if (provider.useClass) {\n            compileTypeMetadata = this._getInjectableMetadata(provider.useClass, provider.dependencies);\n            compileDeps = compileTypeMetadata.diDeps;\n            if (provider.token === provider.useClass) {\n                // use the compileTypeMetadata as it contains information about lifecycleHooks...\n                token = { identifier: compileTypeMetadata };\n            }\n        }\n        else if (provider.useFactory) {\n            compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n            compileDeps = compileFactoryMetadata.diDeps;\n        }\n        return {\n            token: token,\n            useClass: compileTypeMetadata,\n            useValue: provider.useValue,\n            useFactory: compileFactoryMetadata,\n            useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : undefined,\n            deps: compileDeps,\n            multi: provider.multi\n        };\n    };\n    /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueriesMetadata = function (queries, isViewQuery, directiveType) {\n        var _this = this;\n        var /** @type {?} */ res = [];\n        Object.keys(queries).forEach(function (propertyName) {\n            var /** @type {?} */ query = queries[propertyName];\n            if (query.isViewQuery === isViewQuery) {\n                res.push(_this._getQueryMetadata(query, propertyName, directiveType));\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._queryVarBindings = function (selector) { return selector.split(/\\s*,\\s*/); };\n    /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueryMetadata = function (q, propertyName, typeOrFunc) {\n        var _this = this;\n        var /** @type {?} */ selectors;\n        if (typeof q.selector === 'string') {\n            selectors =\n                this._queryVarBindings(q.selector).map(function (varName) { return _this._getTokenMetadata(varName); });\n        }\n        else {\n            if (!q.selector) {\n                this._reportError(syntaxError(\"Can't construct a query for the property \\\"\" + propertyName + \"\\\" of \\\"\" + stringifyType(typeOrFunc) + \"\\\" since the query selector wasn't defined.\"), typeOrFunc);\n                selectors = [];\n            }\n            else {\n                selectors = [this._getTokenMetadata(q.selector)];\n            }\n        }\n        return {\n            selectors: selectors,\n            first: q.first,\n            descendants: q.descendants, propertyName: propertyName,\n            read: q.read ? this._getTokenMetadata(q.read) : ((null))\n        };\n    };\n    /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._reportError = function (error, type, otherType) {\n        if (this._errorCollector) {\n            this._errorCollector(error, type);\n            if (otherType) {\n                this._errorCollector(error, otherType);\n            }\n        }\n        else {\n            throw error;\n        }\n    };\n    return CompileMetadataResolver;\n}());\nCompileMetadataResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nCompileMetadataResolver.ctorParameters = function () { return [\n    { type: CompilerConfig, },\n    { type: NgModuleResolver, },\n    { type: DirectiveResolver, },\n    { type: PipeResolver, },\n    { type: SummaryResolver, },\n    { type: ElementSchemaRegistry, },\n    { type: DirectiveNormalizer, },\n    { type: _angular_core.ɵConsole, },\n    { type: StaticSymbolCache, decorators: [{ type: _angular_core.Optional },] },\n    { type: _angular_core.ɵReflectorReader, },\n    { type: undefined, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [ERROR_COLLECTOR_TOKEN,] },] },\n]; };\n/**\n * @param {?} tree\n * @param {?=} out\n * @return {?}\n */\nfunction flattenArray(tree, out) {\n    if (out === void 0) { out = []; }\n    if (tree) {\n        for (var /** @type {?} */ i = 0; i < tree.length; i++) {\n            var /** @type {?} */ item = _angular_core.resolveForwardRef(tree[i]);\n            if (Array.isArray(item)) {\n                flattenArray(item, out);\n            }\n            else {\n                out.push(item);\n            }\n        }\n    }\n    return out;\n}\n/**\n * @param {?} array\n * @return {?}\n */\nfunction dedupeArray(array) {\n    if (array) {\n        return Array.from(new Set(array));\n    }\n    return [];\n}\n/**\n * @param {?} tree\n * @return {?}\n */\nfunction flattenAndDedupeArray(tree) {\n    return dedupeArray(flattenArray(tree));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValidType(value) {\n    return (value instanceof StaticSymbol) || (value instanceof _angular_core.Type);\n}\n/**\n * @param {?} reflector\n * @param {?} type\n * @param {?} cmpMetadata\n * @return {?}\n */\nfunction componentModuleUrl(reflector, type, cmpMetadata) {\n    if (type instanceof StaticSymbol) {\n        return reflector.resourceUri(type);\n    }\n    var /** @type {?} */ moduleId = cmpMetadata.moduleId;\n    if (typeof moduleId === 'string') {\n        var /** @type {?} */ scheme = getUrlScheme(moduleId);\n        return scheme ? moduleId : \"package:\" + moduleId + MODULE_SUFFIX;\n    }\n    else if (moduleId !== null && moduleId !== void 0) {\n        throw syntaxError(\"moduleId should be a string in \\\"\" + stringifyType(type) + \"\\\". See https://goo.gl/wIDDiL for more information.\\n\" +\n            \"If you're using Webpack you should inline the template and the styles, see https://goo.gl/X2J8zc.\");\n    }\n    return ((reflector.importUri(type)));\n}\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nfunction extractIdentifiers(value, targetIdentifiers) {\n    visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\nvar _CompileValueConverter = (function (_super) {\n    __extends(_CompileValueConverter, _super);\n    function _CompileValueConverter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    _CompileValueConverter.prototype.visitOther = function (value, targetIdentifiers) {\n        targetIdentifiers.push({ reference: value });\n    };\n    return _CompileValueConverter;\n}(ValueTransformer));\n/**\n * @param {?} type\n * @return {?}\n */\nfunction stringifyType(type) {\n    if (type instanceof StaticSymbol) {\n        return type.name + \" in \" + type.filePath;\n    }\n    else {\n        return _angular_core.ɵstringify(type);\n    }\n}\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n * @param {?} compType\n * @return {?}\n */\nfunction componentStillLoadingError(compType) {\n    var /** @type {?} */ error = Error(\"Can't compile synchronously as \" + _angular_core.ɵstringify(compType) + \" is still being loaded!\");\n    ((error))[_angular_core.ɵERROR_COMPONENT_TYPE] = compType;\n    return error;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TypeModifier = {};\nTypeModifier.Const = 0;\nTypeModifier[TypeModifier.Const] = \"Const\";\n/**\n * @abstract\n */\nvar Type$1 = (function () {\n    /**\n     * @param {?=} modifiers\n     */\n    function Type$1(modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n    }\n    /**\n     * @abstract\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Type$1.prototype.visitType = function (visitor, context) { };\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Type$1.prototype.hasModifier = function (modifier) { return ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Type$1;\n}());\nvar BuiltinTypeName = {};\nBuiltinTypeName.Dynamic = 0;\nBuiltinTypeName.Bool = 1;\nBuiltinTypeName.String = 2;\nBuiltinTypeName.Int = 3;\nBuiltinTypeName.Number = 4;\nBuiltinTypeName.Function = 5;\nBuiltinTypeName.Inferred = 6;\nBuiltinTypeName[BuiltinTypeName.Dynamic] = \"Dynamic\";\nBuiltinTypeName[BuiltinTypeName.Bool] = \"Bool\";\nBuiltinTypeName[BuiltinTypeName.String] = \"String\";\nBuiltinTypeName[BuiltinTypeName.Int] = \"Int\";\nBuiltinTypeName[BuiltinTypeName.Number] = \"Number\";\nBuiltinTypeName[BuiltinTypeName.Function] = \"Function\";\nBuiltinTypeName[BuiltinTypeName.Inferred] = \"Inferred\";\nvar BuiltinType = (function (_super) {\n    __extends(BuiltinType, _super);\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     */\n    function BuiltinType(name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BuiltinType.prototype.visitType = function (visitor, context) {\n        return visitor.visitBuiltintType(this, context);\n    };\n    return BuiltinType;\n}(Type$1));\nvar ExpressionType = (function (_super) {\n    __extends(ExpressionType, _super);\n    /**\n     * @param {?} value\n     * @param {?=} modifiers\n     */\n    function ExpressionType(value, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionType.prototype.visitType = function (visitor, context) {\n        return visitor.visitExpressionType(this, context);\n    };\n    return ExpressionType;\n}(Type$1));\nvar ArrayType = (function (_super) {\n    __extends(ArrayType, _super);\n    /**\n     * @param {?} of\n     * @param {?=} modifiers\n     */\n    function ArrayType(of, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.of = of;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ArrayType.prototype.visitType = function (visitor, context) {\n        return visitor.visitArrayType(this, context);\n    };\n    return ArrayType;\n}(Type$1));\nvar MapType = (function (_super) {\n    __extends(MapType, _super);\n    /**\n     * @param {?} valueType\n     * @param {?=} modifiers\n     */\n    function MapType(valueType, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.valueType = valueType || null;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    MapType.prototype.visitType = function (visitor, context) { return visitor.visitMapType(this, context); };\n    return MapType;\n}(Type$1));\nvar DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\nvar INFERRED_TYPE = new BuiltinType(BuiltinTypeName.Inferred);\nvar BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\nvar INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\nvar NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\nvar STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\nvar FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\nvar BinaryOperator = {};\nBinaryOperator.Equals = 0;\nBinaryOperator.NotEquals = 1;\nBinaryOperator.Identical = 2;\nBinaryOperator.NotIdentical = 3;\nBinaryOperator.Minus = 4;\nBinaryOperator.Plus = 5;\nBinaryOperator.Divide = 6;\nBinaryOperator.Multiply = 7;\nBinaryOperator.Modulo = 8;\nBinaryOperator.And = 9;\nBinaryOperator.Or = 10;\nBinaryOperator.Lower = 11;\nBinaryOperator.LowerEquals = 12;\nBinaryOperator.Bigger = 13;\nBinaryOperator.BiggerEquals = 14;\nBinaryOperator[BinaryOperator.Equals] = \"Equals\";\nBinaryOperator[BinaryOperator.NotEquals] = \"NotEquals\";\nBinaryOperator[BinaryOperator.Identical] = \"Identical\";\nBinaryOperator[BinaryOperator.NotIdentical] = \"NotIdentical\";\nBinaryOperator[BinaryOperator.Minus] = \"Minus\";\nBinaryOperator[BinaryOperator.Plus] = \"Plus\";\nBinaryOperator[BinaryOperator.Divide] = \"Divide\";\nBinaryOperator[BinaryOperator.Multiply] = \"Multiply\";\nBinaryOperator[BinaryOperator.Modulo] = \"Modulo\";\nBinaryOperator[BinaryOperator.And] = \"And\";\nBinaryOperator[BinaryOperator.Or] = \"Or\";\nBinaryOperator[BinaryOperator.Lower] = \"Lower\";\nBinaryOperator[BinaryOperator.LowerEquals] = \"LowerEquals\";\nBinaryOperator[BinaryOperator.Bigger] = \"Bigger\";\nBinaryOperator[BinaryOperator.BiggerEquals] = \"BiggerEquals\";\n/**\n * @abstract\n */\nvar Expression = (function () {\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     */\n    function Expression(type, sourceSpan) {\n        this.type = type || null;\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @abstract\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Expression.prototype.visitExpression = function (visitor, context) { };\n    /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.prop = function (name, sourceSpan) {\n        return new ReadPropExpr(this, name, null, sourceSpan);\n    };\n    /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.key = function (index, type, sourceSpan) {\n        return new ReadKeyExpr(this, index, type, sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callMethod = function (name, params, sourceSpan) {\n        return new InvokeMethodExpr(this, name, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callFn = function (params, sourceSpan) {\n        return new InvokeFunctionExpr(this, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.instantiate = function (params, type, sourceSpan) {\n        return new InstantiateExpr(this, params, type, sourceSpan);\n    };\n    /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.conditional = function (trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        return new ConditionalExpr(this, trueCase, falseCase, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.equals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notEquals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.identical = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notIdentical = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.minus = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.plus = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.divide = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.multiply = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.modulo = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.and = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.And, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.or = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lower = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lowerEquals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.bigger = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.biggerEquals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.isBlank = function (sourceSpan) {\n        // Note: We use equals by purpose here to compare to null and undefined in JS.\n        // We use the typed null to allow strictNullChecks to narrow types.\n        return this.equals(TYPED_NULL_EXPR, sourceSpan);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.cast = function (type, sourceSpan) {\n        return new CastExpr(this, type, sourceSpan);\n    };\n    /**\n     * @return {?}\n     */\n    Expression.prototype.toStmt = function () { return new ExpressionStatement(this, null); };\n    return Expression;\n}());\nvar BuiltinVar = {};\nBuiltinVar.This = 0;\nBuiltinVar.Super = 1;\nBuiltinVar.CatchError = 2;\nBuiltinVar.CatchStack = 3;\nBuiltinVar[BuiltinVar.This] = \"This\";\nBuiltinVar[BuiltinVar.Super] = \"Super\";\nBuiltinVar[BuiltinVar.CatchError] = \"CatchError\";\nBuiltinVar[BuiltinVar.CatchStack] = \"CatchStack\";\nvar ReadVarExpr = (function (_super) {\n    __extends(ReadVarExpr, _super);\n    /**\n     * @param {?} name\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function ReadVarExpr(name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        if (typeof name === 'string') {\n            _this.name = name;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = name;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadVarExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitReadVarExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadVarExpr.prototype.set = function (value) {\n        if (!this.name) {\n            throw new Error(\"Built in variable \" + this.builtin + \" can not be assigned to.\");\n        }\n        return new WriteVarExpr(this.name, value, null, this.sourceSpan);\n    };\n    return ReadVarExpr;\n}(Expression));\nvar WriteVarExpr = (function (_super) {\n    __extends(WriteVarExpr, _super);\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function WriteVarExpr(name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteVarExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWriteVarExpr(this, context);\n    };\n    /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    WriteVarExpr.prototype.toDeclStmt = function (type, modifiers) {\n        return new DeclareVarStmt(this.name, this.value, type, modifiers, this.sourceSpan);\n    };\n    return WriteVarExpr;\n}(Expression));\nvar WriteKeyExpr = (function (_super) {\n    __extends(WriteKeyExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} index\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function WriteKeyExpr(receiver, index, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWriteKeyExpr(this, context);\n    };\n    return WriteKeyExpr;\n}(Expression));\nvar WritePropExpr = (function (_super) {\n    __extends(WritePropExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function WritePropExpr(receiver, name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WritePropExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWritePropExpr(this, context);\n    };\n    return WritePropExpr;\n}(Expression));\nvar BuiltinMethod = {};\nBuiltinMethod.ConcatArray = 0;\nBuiltinMethod.SubscribeObservable = 1;\nBuiltinMethod.Bind = 2;\nBuiltinMethod[BuiltinMethod.ConcatArray] = \"ConcatArray\";\nBuiltinMethod[BuiltinMethod.SubscribeObservable] = \"SubscribeObservable\";\nBuiltinMethod[BuiltinMethod.Bind] = \"Bind\";\nvar InvokeMethodExpr = (function (_super) {\n    __extends(InvokeMethodExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} method\n     * @param {?} args\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function InvokeMethodExpr(receiver, method, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.args = args;\n        if (typeof method === 'string') {\n            _this.name = method;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = method;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitInvokeMethodExpr(this, context);\n    };\n    return InvokeMethodExpr;\n}(Expression));\nvar InvokeFunctionExpr = (function (_super) {\n    __extends(InvokeFunctionExpr, _super);\n    /**\n     * @param {?} fn\n     * @param {?} args\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function InvokeFunctionExpr(fn, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.fn = fn;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitInvokeFunctionExpr(this, context);\n    };\n    return InvokeFunctionExpr;\n}(Expression));\nvar InstantiateExpr = (function (_super) {\n    __extends(InstantiateExpr, _super);\n    /**\n     * @param {?} classExpr\n     * @param {?} args\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function InstantiateExpr(classExpr, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.classExpr = classExpr;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InstantiateExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitInstantiateExpr(this, context);\n    };\n    return InstantiateExpr;\n}(Expression));\nvar LiteralExpr = (function (_super) {\n    __extends(LiteralExpr, _super);\n    /**\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function LiteralExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitLiteralExpr(this, context);\n    };\n    return LiteralExpr;\n}(Expression));\nvar ExternalExpr = (function (_super) {\n    __extends(ExternalExpr, _super);\n    /**\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} typeParams\n     * @param {?=} sourceSpan\n     */\n    function ExternalExpr(value, type, typeParams, sourceSpan) {\n        if (typeParams === void 0) { typeParams = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        _this.typeParams = typeParams;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExternalExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitExternalExpr(this, context);\n    };\n    return ExternalExpr;\n}(Expression));\nvar ConditionalExpr = (function (_super) {\n    __extends(ConditionalExpr, _super);\n    /**\n     * @param {?} condition\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function ConditionalExpr(condition, trueCase, falseCase, type, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        var _this = _super.call(this, type || trueCase.type, sourceSpan) || this;\n        _this.condition = condition;\n        _this.falseCase = falseCase;\n        _this.trueCase = trueCase;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ConditionalExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitConditionalExpr(this, context);\n    };\n    return ConditionalExpr;\n}(Expression));\nvar NotExpr = (function (_super) {\n    __extends(NotExpr, _super);\n    /**\n     * @param {?} condition\n     * @param {?=} sourceSpan\n     */\n    function NotExpr(condition, sourceSpan) {\n        var _this = _super.call(this, BOOL_TYPE, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NotExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitNotExpr(this, context);\n    };\n    return NotExpr;\n}(Expression));\nvar AssertNotNull = (function (_super) {\n    __extends(AssertNotNull, _super);\n    /**\n     * @param {?} condition\n     * @param {?=} sourceSpan\n     */\n    function AssertNotNull(condition, sourceSpan) {\n        var _this = _super.call(this, condition.type, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AssertNotNull.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitAssertNotNullExpr(this, context);\n    };\n    return AssertNotNull;\n}(Expression));\nvar CastExpr = (function (_super) {\n    __extends(CastExpr, _super);\n    /**\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function CastExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CastExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitCastExpr(this, context);\n    };\n    return CastExpr;\n}(Expression));\nvar FnParam = (function () {\n    /**\n     * @param {?} name\n     * @param {?=} type\n     */\n    function FnParam(name, type) {\n        if (type === void 0) { type = null; }\n        this.name = name;\n        this.type = type;\n    }\n    return FnParam;\n}());\nvar FunctionExpr = (function (_super) {\n    __extends(FunctionExpr, _super);\n    /**\n     * @param {?} params\n     * @param {?} statements\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function FunctionExpr(params, statements, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.params = params;\n        _this.statements = statements;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    FunctionExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitFunctionExpr(this, context);\n    };\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    FunctionExpr.prototype.toDeclStmt = function (name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers, this.sourceSpan);\n    };\n    return FunctionExpr;\n}(Expression));\nvar BinaryOperatorExpr = (function (_super) {\n    __extends(BinaryOperatorExpr, _super);\n    /**\n     * @param {?} operator\n     * @param {?} lhs\n     * @param {?} rhs\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function BinaryOperatorExpr(operator, lhs, rhs, type, sourceSpan) {\n        var _this = _super.call(this, type || lhs.type, sourceSpan) || this;\n        _this.operator = operator;\n        _this.rhs = rhs;\n        _this.lhs = lhs;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitBinaryOperatorExpr(this, context);\n    };\n    return BinaryOperatorExpr;\n}(Expression));\nvar ReadPropExpr = (function (_super) {\n    __extends(ReadPropExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function ReadPropExpr(receiver, name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadPropExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitReadPropExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadPropExpr.prototype.set = function (value) {\n        return new WritePropExpr(this.receiver, this.name, value, null, this.sourceSpan);\n    };\n    return ReadPropExpr;\n}(Expression));\nvar ReadKeyExpr = (function (_super) {\n    __extends(ReadKeyExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function ReadKeyExpr(receiver, index, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitReadKeyExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.set = function (value) {\n        return new WriteKeyExpr(this.receiver, this.index, value, null, this.sourceSpan);\n    };\n    return ReadKeyExpr;\n}(Expression));\nvar LiteralArrayExpr = (function (_super) {\n    __extends(LiteralArrayExpr, _super);\n    /**\n     * @param {?} entries\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function LiteralArrayExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitLiteralArrayExpr(this, context);\n    };\n    return LiteralArrayExpr;\n}(Expression));\nvar LiteralMapEntry = (function () {\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @param {?=} quoted\n     */\n    function LiteralMapEntry(key, value, quoted) {\n        if (quoted === void 0) { quoted = false; }\n        this.key = key;\n        this.value = value;\n        this.quoted = quoted;\n    }\n    return LiteralMapEntry;\n}());\nvar LiteralMapExpr = (function (_super) {\n    __extends(LiteralMapExpr, _super);\n    /**\n     * @param {?} entries\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function LiteralMapExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        _this.valueType = null;\n        if (type) {\n            _this.valueType = type.valueType;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitLiteralMapExpr(this, context);\n    };\n    return LiteralMapExpr;\n}(Expression));\nvar CommaExpr = (function (_super) {\n    __extends(CommaExpr, _super);\n    /**\n     * @param {?} parts\n     * @param {?=} sourceSpan\n     */\n    function CommaExpr(parts, sourceSpan) {\n        var _this = _super.call(this, parts[parts.length - 1].type, sourceSpan) || this;\n        _this.parts = parts;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommaExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitCommaExpr(this, context);\n    };\n    return CommaExpr;\n}(Expression));\nvar THIS_EXPR = new ReadVarExpr(BuiltinVar.This, null, null);\nvar SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super, null, null);\nvar CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError, null, null);\nvar CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack, null, null);\nvar NULL_EXPR = new LiteralExpr(null, null, null);\nvar TYPED_NULL_EXPR = new LiteralExpr(null, INFERRED_TYPE, null);\nvar StmtModifier = {};\nStmtModifier.Final = 0;\nStmtModifier.Private = 1;\nStmtModifier[StmtModifier.Final] = \"Final\";\nStmtModifier[StmtModifier.Private] = \"Private\";\n/**\n * @abstract\n */\nvar Statement = (function () {\n    /**\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    function Statement(modifiers, sourceSpan) {\n        this.modifiers = modifiers || [];\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @abstract\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Statement.prototype.visitStatement = function (visitor, context) { };\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Statement.prototype.hasModifier = function (modifier) { return ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Statement;\n}());\nvar DeclareVarStmt = (function (_super) {\n    __extends(DeclareVarStmt, _super);\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    function DeclareVarStmt(name, value, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        _this.type = type || value.type;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitDeclareVarStmt(this, context);\n    };\n    return DeclareVarStmt;\n}(Statement));\nvar DeclareFunctionStmt = (function (_super) {\n    __extends(DeclareFunctionStmt, _super);\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?} statements\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    function DeclareFunctionStmt(name, params, statements, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.statements = statements;\n        _this.type = type || null;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitDeclareFunctionStmt(this, context);\n    };\n    return DeclareFunctionStmt;\n}(Statement));\nvar ExpressionStatement = (function (_super) {\n    __extends(ExpressionStatement, _super);\n    /**\n     * @param {?} expr\n     * @param {?=} sourceSpan\n     */\n    function ExpressionStatement(expr, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.expr = expr;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionStatement.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitExpressionStmt(this, context);\n    };\n    return ExpressionStatement;\n}(Statement));\nvar ReturnStatement = (function (_super) {\n    __extends(ReturnStatement, _super);\n    /**\n     * @param {?} value\n     * @param {?=} sourceSpan\n     */\n    function ReturnStatement(value, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReturnStatement.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitReturnStmt(this, context);\n    };\n    return ReturnStatement;\n}(Statement));\nvar AbstractClassPart = (function () {\n    /**\n     * @param {?} type\n     * @param {?} modifiers\n     */\n    function AbstractClassPart(type, modifiers) {\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n        this.type = type || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    AbstractClassPart.prototype.hasModifier = function (modifier) { return ((this.modifiers)).indexOf(modifier) !== -1; };\n    return AbstractClassPart;\n}());\nvar ClassField = (function (_super) {\n    __extends(ClassField, _super);\n    /**\n     * @param {?} name\n     * @param {?=} type\n     * @param {?=} modifiers\n     */\n    function ClassField(name, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    return ClassField;\n}(AbstractClassPart));\nvar ClassMethod = (function (_super) {\n    __extends(ClassMethod, _super);\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?} body\n     * @param {?=} type\n     * @param {?=} modifiers\n     */\n    function ClassMethod(name, params, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.body = body;\n        return _this;\n    }\n    return ClassMethod;\n}(AbstractClassPart));\nvar ClassGetter = (function (_super) {\n    __extends(ClassGetter, _super);\n    /**\n     * @param {?} name\n     * @param {?} body\n     * @param {?=} type\n     * @param {?=} modifiers\n     */\n    function ClassGetter(name, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.body = body;\n        return _this;\n    }\n    return ClassGetter;\n}(AbstractClassPart));\nvar ClassStmt = (function (_super) {\n    __extends(ClassStmt, _super);\n    /**\n     * @param {?} name\n     * @param {?} parent\n     * @param {?} fields\n     * @param {?} getters\n     * @param {?} constructorMethod\n     * @param {?} methods\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    function ClassStmt(name, parent, fields, getters, constructorMethod, methods, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.parent = parent;\n        _this.fields = fields;\n        _this.getters = getters;\n        _this.constructorMethod = constructorMethod;\n        _this.methods = methods;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ClassStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitDeclareClassStmt(this, context);\n    };\n    return ClassStmt;\n}(Statement));\nvar IfStmt = (function (_super) {\n    __extends(IfStmt, _super);\n    /**\n     * @param {?} condition\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     */\n    function IfStmt(condition, trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = []; }\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.condition = condition;\n        _this.trueCase = trueCase;\n        _this.falseCase = falseCase;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    IfStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitIfStmt(this, context);\n    };\n    return IfStmt;\n}(Statement));\nvar TryCatchStmt = (function (_super) {\n    __extends(TryCatchStmt, _super);\n    /**\n     * @param {?} bodyStmts\n     * @param {?} catchStmts\n     * @param {?=} sourceSpan\n     */\n    function TryCatchStmt(bodyStmts, catchStmts, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.bodyStmts = bodyStmts;\n        _this.catchStmts = catchStmts;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TryCatchStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitTryCatchStmt(this, context);\n    };\n    return TryCatchStmt;\n}(Statement));\nvar ThrowStmt = (function (_super) {\n    __extends(ThrowStmt, _super);\n    /**\n     * @param {?} error\n     * @param {?=} sourceSpan\n     */\n    function ThrowStmt(error, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.error = error;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ThrowStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitThrowStmt(this, context);\n    };\n    return ThrowStmt;\n}(Statement));\nvar AstTransformer$1 = (function () {\n    function AstTransformer$1() {\n    }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.transformExpr = function (expr, context) { return expr; };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.transformStmt = function (stmt, context) { return stmt; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitReadVarExpr = function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitWriteVarExpr = function (expr, context) {\n        return this.transformExpr(new WriteVarExpr(expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitWriteKeyExpr = function (expr, context) {\n        return this.transformExpr(new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitWritePropExpr = function (expr, context) {\n        return this.transformExpr(new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitInvokeMethodExpr = function (ast, context) {\n        var /** @type {?} */ method = ast.builtin || ast.name;\n        return this.transformExpr(new InvokeMethodExpr(ast.receiver.visitExpression(this, context), /** @type {?} */ ((method)), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitInvokeFunctionExpr = function (ast, context) {\n        return this.transformExpr(new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitInstantiateExpr = function (ast, context) {\n        return this.transformExpr(new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitLiteralExpr = function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitExternalExpr = function (ast, context) {\n        return this.transformExpr(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitConditionalExpr = function (ast, context) {\n        return this.transformExpr(new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), /** @type {?} */ ((ast.falseCase)).visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitNotExpr = function (ast, context) {\n        return this.transformExpr(new NotExpr(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitAssertNotNullExpr = function (ast, context) {\n        return this.transformExpr(new AssertNotNull(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitCastExpr = function (ast, context) {\n        return this.transformExpr(new CastExpr(ast.value.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitFunctionExpr = function (ast, context) {\n        return this.transformExpr(new FunctionExpr(ast.params, this.visitAllStatements(ast.statements, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitBinaryOperatorExpr = function (ast, context) {\n        return this.transformExpr(new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitReadPropExpr = function (ast, context) {\n        return this.transformExpr(new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitReadKeyExpr = function (ast, context) {\n        return this.transformExpr(new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitLiteralArrayExpr = function (ast, context) {\n        return this.transformExpr(new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitLiteralMapExpr = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ entries = ast.entries.map(function (entry) { return new LiteralMapEntry(entry.key, entry.value.visitExpression(_this, context), entry.quoted); });\n        var /** @type {?} */ mapType = new MapType(ast.valueType, null);\n        return this.transformExpr(new LiteralMapExpr(entries, mapType, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitCommaExpr = function (ast, context) {\n        return this.transformExpr(new CommaExpr(this.visitAllExpressions(ast.parts, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitAllExpressions = function (exprs, context) {\n        var _this = this;\n        return exprs.map(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitDeclareVarStmt = function (stmt, context) {\n        return this.transformStmt(new DeclareVarStmt(stmt.name, stmt.value.visitExpression(this, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n        return this.transformStmt(new DeclareFunctionStmt(stmt.name, stmt.params, this.visitAllStatements(stmt.statements, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitExpressionStmt = function (stmt, context) {\n        return this.transformStmt(new ExpressionStatement(stmt.expr.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitReturnStmt = function (stmt, context) {\n        return this.transformStmt(new ReturnStatement(stmt.value.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitDeclareClassStmt = function (stmt, context) {\n        var _this = this;\n        var /** @type {?} */ parent = ((stmt.parent)).visitExpression(this, context);\n        var /** @type {?} */ getters = stmt.getters.map(function (getter) { return new ClassGetter(getter.name, _this.visitAllStatements(getter.body, context), getter.type, getter.modifiers); });\n        var /** @type {?} */ ctorMethod = stmt.constructorMethod &&\n            new ClassMethod(stmt.constructorMethod.name, stmt.constructorMethod.params, this.visitAllStatements(stmt.constructorMethod.body, context), stmt.constructorMethod.type, stmt.constructorMethod.modifiers);\n        var /** @type {?} */ methods = stmt.methods.map(function (method) { return new ClassMethod(method.name, method.params, _this.visitAllStatements(method.body, context), method.type, method.modifiers); });\n        return this.transformStmt(new ClassStmt(stmt.name, parent, stmt.fields, getters, ctorMethod, methods, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitIfStmt = function (stmt, context) {\n        return this.transformStmt(new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitTryCatchStmt = function (stmt, context) {\n        return this.transformStmt(new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitThrowStmt = function (stmt, context) {\n        return this.transformStmt(new ThrowStmt(stmt.error.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitCommentStmt = function (stmt, context) {\n        return this.transformStmt(stmt, context);\n    };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitAllStatements = function (stmts, context) {\n        var _this = this;\n        return stmts.map(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return AstTransformer$1;\n}());\nvar RecursiveAstVisitor$1 = (function () {\n    function RecursiveAstVisitor$1() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitReadVarExpr = function (ast, context) { return ast; };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitWriteVarExpr = function (expr, context) {\n        expr.value.visitExpression(this, context);\n        return expr;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitWriteKeyExpr = function (expr, context) {\n        expr.receiver.visitExpression(this, context);\n        expr.index.visitExpression(this, context);\n        expr.value.visitExpression(this, context);\n        return expr;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitWritePropExpr = function (expr, context) {\n        expr.receiver.visitExpression(this, context);\n        expr.value.visitExpression(this, context);\n        return expr;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitInvokeMethodExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitInvokeFunctionExpr = function (ast, context) {\n        ast.fn.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitInstantiateExpr = function (ast, context) {\n        ast.classExpr.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitLiteralExpr = function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitExternalExpr = function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitConditionalExpr = function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        ast.trueCase.visitExpression(this, context); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitNotExpr = function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitAssertNotNullExpr = function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitCastExpr = function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitFunctionExpr = function (ast, context) {\n        this.visitAllStatements(ast.statements, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitBinaryOperatorExpr = function (ast, context) {\n        ast.lhs.visitExpression(this, context);\n        ast.rhs.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitReadPropExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitReadKeyExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitLiteralArrayExpr = function (ast, context) {\n        this.visitAllExpressions(ast.entries, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitLiteralMapExpr = function (ast, context) {\n        var _this = this;\n        ast.entries.forEach(function (entry) { return entry.value.visitExpression(_this, context); });\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitCommaExpr = function (ast, context) {\n        this.visitAllExpressions(ast.parts, context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitAllExpressions = function (exprs, context) {\n        var _this = this;\n        exprs.forEach(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitDeclareVarStmt = function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n        this.visitAllStatements(stmt.statements, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitExpressionStmt = function (stmt, context) {\n        stmt.expr.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitReturnStmt = function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitDeclareClassStmt = function (stmt, context) {\n        var _this = this;\n        ((stmt.parent)).visitExpression(this, context);\n        stmt.getters.forEach(function (getter) { return _this.visitAllStatements(getter.body, context); });\n        if (stmt.constructorMethod) {\n            this.visitAllStatements(stmt.constructorMethod.body, context);\n        }\n        stmt.methods.forEach(function (method) { return _this.visitAllStatements(method.body, context); });\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitIfStmt = function (stmt, context) {\n        stmt.condition.visitExpression(this, context);\n        this.visitAllStatements(stmt.trueCase, context);\n        this.visitAllStatements(stmt.falseCase, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitTryCatchStmt = function (stmt, context) {\n        this.visitAllStatements(stmt.bodyStmts, context);\n        this.visitAllStatements(stmt.catchStmts, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitThrowStmt = function (stmt, context) {\n        stmt.error.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitCommentStmt = function (stmt, context) { return stmt; };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitAllStatements = function (stmts, context) {\n        var _this = this;\n        stmts.forEach(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return RecursiveAstVisitor$1;\n}());\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction findReadVarNames(stmts) {\n    var /** @type {?} */ visitor = new _ReadVarVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.varNames;\n}\nvar _ReadVarVisitor = (function (_super) {\n    __extends(_ReadVarVisitor, _super);\n    function _ReadVarVisitor() {\n        var _this = _super.apply(this, arguments) || this;\n        _this.varNames = new Set();\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n        // Don't descend into nested functions\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareClassStmt = function (stmt, context) {\n        // Don't descend into nested classes\n        return stmt;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitReadVarExpr = function (ast, context) {\n        if (ast.name) {\n            this.varNames.add(ast.name);\n        }\n        return null;\n    };\n    return _ReadVarVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmt\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToStatementIfNeeded(stmt, sourceSpan) {\n    if (!sourceSpan) {\n        return stmt;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return stmt.visitStatement(transformer, null);\n}\n/**\n * @param {?} expr\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToExpressionIfNeeded(expr, sourceSpan) {\n    if (!sourceSpan) {\n        return expr;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return expr.visitExpression(transformer, null);\n}\nvar _ApplySourceSpanTransformer = (function (_super) {\n    __extends(_ApplySourceSpanTransformer, _super);\n    /**\n     * @param {?} sourceSpan\n     */\n    function _ApplySourceSpanTransformer(sourceSpan) {\n        var _this = _super.call(this) || this;\n        _this.sourceSpan = sourceSpan;\n        return _this;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype._clone = function (obj) {\n        var /** @type {?} */ clone = Object.create(obj.constructor.prototype);\n        for (var /** @type {?} */ prop in obj) {\n            clone[prop] = obj[prop];\n        }\n        return clone;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformExpr = function (expr, context) {\n        if (!expr.sourceSpan) {\n            expr = this._clone(expr);\n            expr.sourceSpan = this.sourceSpan;\n        }\n        return expr;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformStmt = function (stmt, context) {\n        if (!stmt.sourceSpan) {\n            stmt = this._clone(stmt);\n            stmt.sourceSpan = this.sourceSpan;\n        }\n        return stmt;\n    };\n    return _ApplySourceSpanTransformer;\n}(AstTransformer$1));\n/**\n * @param {?} name\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction variable(name, type, sourceSpan) {\n    return new ReadVarExpr(name, type, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction importExpr(id, typeParams, sourceSpan) {\n    if (typeParams === void 0) { typeParams = null; }\n    return new ExternalExpr(id, null, typeParams, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction importType(id, typeParams, typeModifiers) {\n    if (typeParams === void 0) { typeParams = null; }\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return id != null ? expressionType(importExpr(id, typeParams, null), typeModifiers) : null;\n}\n/**\n * @param {?} expr\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction expressionType(expr, typeModifiers) {\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return expr != null ? ((new ExpressionType(expr, typeModifiers))) : null;\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literalArr(values, type, sourceSpan) {\n    return new LiteralArrayExpr(values, type, sourceSpan);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @param {?=} quoted\n * @return {?}\n */\nfunction literalMap(values, type, quoted) {\n    if (type === void 0) { type = null; }\n    if (quoted === void 0) { quoted = false; }\n    return new LiteralMapExpr(values.map(function (entry) { return new LiteralMapEntry(entry[0], entry[1], quoted); }), type, null);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction not(expr, sourceSpan) {\n    return new NotExpr(expr, sourceSpan);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction assertNotNull(expr, sourceSpan) {\n    return new AssertNotNull(expr, sourceSpan);\n}\n/**\n * @param {?} params\n * @param {?} body\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction fn(params, body, type, sourceSpan) {\n    return new FunctionExpr(params, body, type, sourceSpan);\n}\n/**\n * @param {?} value\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literal(value, type, sourceSpan) {\n    return new LiteralExpr(value, type, sourceSpan);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a new class stmts based on the given data.\n * @param {?} config\n * @return {?}\n */\nfunction createClassStmt(config) {\n    var /** @type {?} */ parentArgs = config.parentArgs || [];\n    var /** @type {?} */ superCtorStmts = config.parent ? [SUPER_EXPR.callFn(parentArgs).toStmt()] : [];\n    var /** @type {?} */ builder = concatClassBuilderParts(Array.isArray(config.builders) ? config.builders : [config.builders]);\n    var /** @type {?} */ ctor = new ClassMethod(null, config.ctorParams || [], superCtorStmts.concat(builder.ctorStmts));\n    return new ClassStmt(config.name, config.parent || null, builder.fields, builder.getters, ctor, builder.methods, config.modifiers || [], config.sourceSpan);\n}\n/**\n * @param {?} builders\n * @return {?}\n */\nfunction concatClassBuilderParts(builders) {\n    return {\n        fields: [].concat.apply([], ((builders.map((function (builder) { return builder.fields || []; }))))),\n        methods: [].concat.apply([], ((builders.map(function (builder) { return builder.methods || []; })))),\n        getters: [].concat.apply([], ((builders.map(function (builder) { return builder.getters || []; })))),\n        ctorStmts: [].concat.apply([], ((builders.map(function (builder) { return builder.ctorStmts || []; })))),\n    };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUOTED_KEYS = '$quoted$';\n/**\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nfunction convertValueToOutputAst(value, type) {\n    if (type === void 0) { type = null; }\n    return visitValue(value, new _ValueOutputAstTransformer(), type);\n}\nvar _ValueOutputAstTransformer = (function () {\n    function _ValueOutputAstTransformer() {\n    }\n    /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitArray = function (arr, type) {\n        var _this = this;\n        return literalArr(arr.map(function (value) { return visitValue(value, _this, null); }), type);\n    };\n    /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitStringMap = function (map, type) {\n        var _this = this;\n        var /** @type {?} */ entries = [];\n        var /** @type {?} */ quotedSet = new Set(map && map[QUOTED_KEYS]);\n        Object.keys(map).forEach(function (key) {\n            entries.push(new LiteralMapEntry(key, visitValue(map[key], _this, null), quotedSet.has(key)));\n        });\n        return new LiteralMapExpr(entries, type);\n    };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitPrimitive = function (value, type) { return literal(value, type); };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitOther = function (value, type) {\n        if (value instanceof Expression) {\n            return value;\n        }\n        else {\n            return importExpr({ reference: value });\n        }\n    };\n    return _ValueOutputAstTransformer;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This is currently not read, but will probably be used in the future.\n * We keep it as we already pass it through all the rigth places...\n */\nvar ComponentFactoryDependency = (function () {\n    /**\n     * @param {?} compType\n     */\n    function ComponentFactoryDependency(compType) {\n        this.compType = compType;\n    }\n    return ComponentFactoryDependency;\n}());\nvar NgModuleCompileResult = (function () {\n    /**\n     * @param {?} statements\n     * @param {?} ngModuleFactoryVar\n     * @param {?} dependencies\n     */\n    function NgModuleCompileResult(statements, ngModuleFactoryVar, dependencies) {\n        this.statements = statements;\n        this.ngModuleFactoryVar = ngModuleFactoryVar;\n        this.dependencies = dependencies;\n    }\n    return NgModuleCompileResult;\n}());\nvar NgModuleCompiler = (function () {\n    function NgModuleCompiler() {\n    }\n    /**\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.compile = function (ngModuleMeta, extraProviders) {\n        var /** @type {?} */ sourceSpan = typeSourceSpan('NgModule', ngModuleMeta.type);\n        var /** @type {?} */ deps = [];\n        var /** @type {?} */ bootstrapComponentFactories = [];\n        var /** @type {?} */ entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents.map(function (entryComponent) {\n            if (ngModuleMeta.bootstrapComponents.some(function (id) { return id.reference === entryComponent.componentType; })) {\n                bootstrapComponentFactories.push({ reference: entryComponent.componentFactory });\n            }\n            deps.push(new ComponentFactoryDependency(entryComponent.componentType));\n            return { reference: entryComponent.componentFactory };\n        });\n        var /** @type {?} */ builder = new _InjectorBuilder(ngModuleMeta, entryComponentFactories, bootstrapComponentFactories, sourceSpan);\n        var /** @type {?} */ providerParser = new NgModuleProviderAnalyzer(ngModuleMeta, extraProviders, sourceSpan);\n        providerParser.parse().forEach(function (provider) { return builder.addProvider(provider); });\n        var /** @type {?} */ injectorClass = builder.build();\n        var /** @type {?} */ ngModuleFactoryVar = identifierName(ngModuleMeta.type) + \"NgFactory\";\n        var /** @type {?} */ ngModuleFactoryStmt = variable(ngModuleFactoryVar)\n            .set(importExpr(createIdentifier(Identifiers.NgModuleFactory))\n            .instantiate([variable(injectorClass.name), importExpr(ngModuleMeta.type)], importType(createIdentifier(Identifiers.NgModuleFactory), [/** @type {?} */ ((importType(ngModuleMeta.type)))], [TypeModifier.Const])))\n            .toDeclStmt(null, [StmtModifier.Final]);\n        var /** @type {?} */ stmts = [injectorClass, ngModuleFactoryStmt];\n        if (ngModuleMeta.id) {\n            var /** @type {?} */ registerFactoryStmt = importExpr(createIdentifier(Identifiers.RegisterModuleFactoryFn))\n                .callFn([literal(ngModuleMeta.id), variable(ngModuleFactoryVar)])\n                .toStmt();\n            stmts.push(registerFactoryStmt);\n        }\n        return new NgModuleCompileResult(stmts, ngModuleFactoryVar, deps);\n    };\n    return NgModuleCompiler;\n}());\nNgModuleCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nNgModuleCompiler.ctorParameters = function () { return []; };\nvar _InjectorBuilder = (function () {\n    /**\n     * @param {?} _ngModuleMeta\n     * @param {?} _entryComponentFactories\n     * @param {?} _bootstrapComponentFactories\n     * @param {?} _sourceSpan\n     */\n    function _InjectorBuilder(_ngModuleMeta, _entryComponentFactories, _bootstrapComponentFactories, _sourceSpan) {\n        this._ngModuleMeta = _ngModuleMeta;\n        this._entryComponentFactories = _entryComponentFactories;\n        this._bootstrapComponentFactories = _bootstrapComponentFactories;\n        this._sourceSpan = _sourceSpan;\n        this.fields = [];\n        this.getters = [];\n        this.methods = [];\n        this.ctorStmts = [];\n        this._lazyProps = new Map();\n        this._tokens = [];\n        this._instances = new Map();\n        this._createStmts = [];\n        this._destroyStmts = [];\n    }\n    /**\n     * @param {?} resolvedProvider\n     * @return {?}\n     */\n    _InjectorBuilder.prototype.addProvider = function (resolvedProvider) {\n        var _this = this;\n        var /** @type {?} */ providerValueExpressions = resolvedProvider.providers.map(function (provider) { return _this._getProviderValue(provider); });\n        var /** @type {?} */ propName = \"_\" + tokenName(resolvedProvider.token) + \"_\" + this._instances.size;\n        var /** @type {?} */ instance = this._createProviderProperty(propName, resolvedProvider, providerValueExpressions, resolvedProvider.multiProvider, resolvedProvider.eager);\n        if (resolvedProvider.lifecycleHooks.indexOf(_angular_core.ɵLifecycleHooks.OnDestroy) !== -1) {\n            var /** @type {?} */ callNgOnDestroy = instance.callMethod('ngOnDestroy', []);\n            if (!resolvedProvider.eager) {\n                callNgOnDestroy = ((this._lazyProps.get(instance.name))).and(callNgOnDestroy);\n            }\n            this._destroyStmts.push(callNgOnDestroy.toStmt());\n        }\n        this._tokens.push(resolvedProvider.token);\n        this._instances.set(tokenReference(resolvedProvider.token), instance);\n    };\n    /**\n     * @return {?}\n     */\n    _InjectorBuilder.prototype.build = function () {\n        var _this = this;\n        var /** @type {?} */ getMethodStmts = this._tokens.map(function (token) {\n            var /** @type {?} */ providerExpr = ((_this._instances.get(tokenReference(token))));\n            return new IfStmt(InjectMethodVars.token.identical(createDiTokenExpression(token)), [new ReturnStatement(providerExpr)]);\n        });\n        var /** @type {?} */ methods = [\n            new ClassMethod('createInternal', [], this._createStmts.concat(new ReturnStatement(/** @type {?} */ ((this._instances.get(this._ngModuleMeta.type.reference))))), importType(this._ngModuleMeta.type)),\n            new ClassMethod('getInternal', [\n                new FnParam(/** @type {?} */ ((InjectMethodVars.token.name)), DYNAMIC_TYPE),\n                new FnParam(/** @type {?} */ ((InjectMethodVars.notFoundResult.name)), DYNAMIC_TYPE)\n            ], getMethodStmts.concat([new ReturnStatement(InjectMethodVars.notFoundResult)]), DYNAMIC_TYPE),\n            new ClassMethod('destroyInternal', [], this._destroyStmts),\n        ];\n        var /** @type {?} */ parentArgs = [\n            variable(InjectorProps.parent.name),\n            literalArr(this._entryComponentFactories.map(function (componentFactory) { return importExpr(componentFactory); })),\n            literalArr(this._bootstrapComponentFactories.map(function (componentFactory) { return importExpr(componentFactory); }))\n        ];\n        var /** @type {?} */ injClassName = identifierName(this._ngModuleMeta.type) + \"Injector\";\n        return createClassStmt({\n            name: injClassName,\n            ctorParams: [new FnParam(InjectorProps.parent.name, importType(createIdentifier(Identifiers.Injector)))],\n            parent: importExpr(createIdentifier(Identifiers.NgModuleInjector), [/** @type {?} */ ((importType(this._ngModuleMeta.type)))]),\n            parentArgs: parentArgs,\n            builders: [{ methods: methods }, this]\n        });\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    _InjectorBuilder.prototype._getProviderValue = function (provider) {\n        var _this = this;\n        var /** @type {?} */ result;\n        if (provider.useExisting != null) {\n            result = this._getDependency({ token: provider.useExisting });\n        }\n        else if (provider.useFactory != null) {\n            var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n            var /** @type {?} */ depsExpr = deps.map(function (dep) { return _this._getDependency(dep); });\n            result = importExpr(provider.useFactory).callFn(depsExpr);\n        }\n        else if (provider.useClass != null) {\n            var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n            var /** @type {?} */ depsExpr = deps.map(function (dep) { return _this._getDependency(dep); });\n            result =\n                importExpr(provider.useClass).instantiate(depsExpr, importType(provider.useClass));\n        }\n        else {\n            result = convertValueToOutputAst(provider.useValue);\n        }\n        return result;\n    };\n    /**\n     * @param {?} propName\n     * @param {?} provider\n     * @param {?} providerValueExpressions\n     * @param {?} isMulti\n     * @param {?} isEager\n     * @return {?}\n     */\n    _InjectorBuilder.prototype._createProviderProperty = function (propName, provider, providerValueExpressions, isMulti, isEager) {\n        var /** @type {?} */ resolvedProviderValueExpr;\n        var /** @type {?} */ type;\n        if (isMulti) {\n            resolvedProviderValueExpr = literalArr(providerValueExpressions);\n            type = new ArrayType(DYNAMIC_TYPE);\n        }\n        else {\n            resolvedProviderValueExpr = providerValueExpressions[0];\n            type = ((providerValueExpressions[0].type));\n        }\n        if (!type) {\n            type = DYNAMIC_TYPE;\n        }\n        if (isEager) {\n            this.fields.push(new ClassField(propName, type));\n            this._createStmts.push(THIS_EXPR.prop(propName).set(resolvedProviderValueExpr).toStmt());\n        }\n        else {\n            var /** @type {?} */ internalFieldProp = THIS_EXPR.prop(\"_\" + propName);\n            this.fields.push(new ClassField(internalFieldProp.name, type));\n            // Note: Equals is important for JS so that it also checks the undefined case!\n            var /** @type {?} */ getterStmts = [\n                new IfStmt(internalFieldProp.isBlank(), [internalFieldProp.set(resolvedProviderValueExpr).toStmt()]),\n                new ReturnStatement(internalFieldProp)\n            ];\n            this.getters.push(new ClassGetter(propName, getterStmts, type));\n            this._lazyProps.set(propName, internalFieldProp);\n        }\n        return THIS_EXPR.prop(propName);\n    };\n    /**\n     * @param {?} dep\n     * @return {?}\n     */\n    _InjectorBuilder.prototype._getDependency = function (dep) {\n        var /** @type {?} */ result = ((null));\n        if (dep.isValue) {\n            result = literal(dep.value);\n        }\n        if (!dep.isSkipSelf) {\n            if (dep.token) {\n                if (tokenReference(dep.token) === resolveIdentifier(Identifiers.Injector)) {\n                    result = THIS_EXPR;\n                }\n                else if (tokenReference(dep.token) === resolveIdentifier(Identifiers.ComponentFactoryResolver)) {\n                    result = THIS_EXPR.prop('componentFactoryResolver');\n                }\n            }\n            if (!result) {\n                result = ((this._instances.get(tokenReference(/** @type {?} */ ((dep.token))))));\n            }\n        }\n        if (!result) {\n            var /** @type {?} */ args = [createDiTokenExpression(/** @type {?} */ ((dep.token)))];\n            if (dep.isOptional) {\n                args.push(NULL_EXPR);\n            }\n            result = InjectorProps.parent.callMethod('get', args);\n        }\n        return result;\n    };\n    return _InjectorBuilder;\n}());\n/**\n * @param {?} token\n * @return {?}\n */\nfunction createDiTokenExpression(token) {\n    if (token.value != null) {\n        return literal(token.value);\n    }\n    else {\n        return importExpr(/** @type {?} */ ((token.identifier)));\n    }\n}\nvar InjectorProps = (function () {\n    function InjectorProps() {\n    }\n    return InjectorProps;\n}());\nInjectorProps.parent = THIS_EXPR.prop('parent');\nvar InjectMethodVars = (function () {\n    function InjectMethodVars() {\n    }\n    return InjectMethodVars;\n}());\nInjectMethodVars.token = variable('token');\nInjectMethodVars.notFoundResult = variable('notFoundResult');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\nvar VERSION$1 = 3;\nvar JS_B64_PREFIX = '# sourceMappingURL=data:application/json;base64,';\nvar SourceMapGenerator = (function () {\n    /**\n     * @param {?=} file\n     */\n    function SourceMapGenerator(file) {\n        if (file === void 0) { file = null; }\n        this.file = file;\n        this.sourcesContent = new Map();\n        this.lines = [];\n        this.lastCol0 = 0;\n        this.hasMappings = false;\n    }\n    /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addSource = function (url, content) {\n        if (content === void 0) { content = null; }\n        if (!this.sourcesContent.has(url)) {\n            this.sourcesContent.set(url, content);\n        }\n        return this;\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addLine = function () {\n        this.lines.push([]);\n        this.lastCol0 = 0;\n        return this;\n    };\n    /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addMapping = function (col0, sourceUrl, sourceLine0, sourceCol0) {\n        if (!this.currentLine) {\n            throw new Error(\"A line must be added before mappings can be added\");\n        }\n        if (sourceUrl != null && !this.sourcesContent.has(sourceUrl)) {\n            throw new Error(\"Unknown source file \\\"\" + sourceUrl + \"\\\"\");\n        }\n        if (col0 == null) {\n            throw new Error(\"The column in the generated code must be provided\");\n        }\n        if (col0 < this.lastCol0) {\n            throw new Error(\"Mapping should be added in output order\");\n        }\n        if (sourceUrl && (sourceLine0 == null || sourceCol0 == null)) {\n            throw new Error(\"The source location must be provided when a source url is provided\");\n        }\n        this.hasMappings = true;\n        this.lastCol0 = col0;\n        this.currentLine.push({ col0: col0, sourceUrl: sourceUrl, sourceLine0: sourceLine0, sourceCol0: sourceCol0 });\n        return this;\n    };\n    Object.defineProperty(SourceMapGenerator.prototype, \"currentLine\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.lines.slice(-1)[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJSON = function () {\n        var _this = this;\n        if (!this.hasMappings) {\n            return null;\n        }\n        var /** @type {?} */ sourcesIndex = new Map();\n        var /** @type {?} */ sources = [];\n        var /** @type {?} */ sourcesContent = [];\n        Array.from(this.sourcesContent.keys()).forEach(function (url, i) {\n            sourcesIndex.set(url, i);\n            sources.push(url);\n            sourcesContent.push(_this.sourcesContent.get(url) || null);\n        });\n        var /** @type {?} */ mappings = '';\n        var /** @type {?} */ lastCol0 = 0;\n        var /** @type {?} */ lastSourceIndex = 0;\n        var /** @type {?} */ lastSourceLine0 = 0;\n        var /** @type {?} */ lastSourceCol0 = 0;\n        this.lines.forEach(function (segments) {\n            lastCol0 = 0;\n            mappings += segments\n                .map(function (segment) {\n                // zero-based starting column of the line in the generated code\n                var /** @type {?} */ segAsStr = toBase64VLQ(segment.col0 - lastCol0);\n                lastCol0 = segment.col0;\n                if (segment.sourceUrl != null) {\n                    // zero-based index into the “sources” list\n                    segAsStr +=\n                        toBase64VLQ(/** @type {?} */ ((sourcesIndex.get(segment.sourceUrl))) - lastSourceIndex);\n                    lastSourceIndex = ((sourcesIndex.get(segment.sourceUrl)));\n                    // the zero-based starting line in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceLine0)) - lastSourceLine0);\n                    lastSourceLine0 = ((segment.sourceLine0));\n                    // the zero-based starting column in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceCol0)) - lastSourceCol0);\n                    lastSourceCol0 = ((segment.sourceCol0));\n                }\n                return segAsStr;\n            })\n                .join(',');\n            mappings += ';';\n        });\n        mappings = mappings.slice(0, -1);\n        return {\n            'file': this.file || '',\n            'version': VERSION$1,\n            'sourceRoot': '',\n            'sources': sources,\n            'sourcesContent': sourcesContent,\n            'mappings': mappings,\n        };\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJsComment = function () {\n        return this.hasMappings ? '//' + JS_B64_PREFIX + toBase64String(JSON.stringify(this, null, 0)) :\n            '';\n    };\n    return SourceMapGenerator;\n}());\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64String(value) {\n    var /** @type {?} */ b64 = '';\n    value = utf8Encode(value);\n    for (var /** @type {?} */ i = 0; i < value.length;) {\n        var /** @type {?} */ i1 = value.charCodeAt(i++);\n        var /** @type {?} */ i2 = value.charCodeAt(i++);\n        var /** @type {?} */ i3 = value.charCodeAt(i++);\n        b64 += toBase64Digit(i1 >> 2);\n        b64 += toBase64Digit(((i1 & 3) << 4) | (isNaN(i2) ? 0 : i2 >> 4));\n        b64 += isNaN(i2) ? '=' : toBase64Digit(((i2 & 15) << 2) | (i3 >> 6));\n        b64 += isNaN(i2) || isNaN(i3) ? '=' : toBase64Digit(i3 & 63);\n    }\n    return b64;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64VLQ(value) {\n    value = value < 0 ? ((-value) << 1) + 1 : value << 1;\n    var /** @type {?} */ out = '';\n    do {\n        var /** @type {?} */ digit = value & 31;\n        value = value >> 5;\n        if (value > 0) {\n            digit = digit | 32;\n        }\n        out += toBase64Digit(digit);\n    } while (value > 0);\n    return out;\n}\nvar B64_DIGITS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64Digit(value) {\n    if (value < 0 || value >= 64) {\n        throw new Error(\"Can only encode value in the range [0, 63]\");\n    }\n    return B64_DIGITS[value];\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\nvar _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\nvar _INDENT_WITH = '  ';\nvar CATCH_ERROR_VAR$1 = variable('error', null, null);\nvar CATCH_STACK_VAR$1 = variable('stack', null, null);\n/**\n * @abstract\n */\nvar _EmittedLine = (function () {\n    /**\n     * @param {?} indent\n     */\n    function _EmittedLine(indent) {\n        this.indent = indent;\n        this.parts = [];\n        this.srcSpans = [];\n    }\n    return _EmittedLine;\n}());\nvar EmitterVisitorContext = (function () {\n    /**\n     * @param {?} _exportedVars\n     * @param {?} _indent\n     */\n    function EmitterVisitorContext(_exportedVars, _indent) {\n        this._exportedVars = _exportedVars;\n        this._indent = _indent;\n        this._classes = [];\n        this._lines = [new _EmittedLine(_indent)];\n    }\n    /**\n     * @param {?} exportedVars\n     * @return {?}\n     */\n    EmitterVisitorContext.createRoot = function (exportedVars) {\n        return new EmitterVisitorContext(exportedVars, 0);\n    };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"_currentLine\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._lines[this._lines.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} varName\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.isExportedVar = function (varName) { return this._exportedVars.indexOf(varName) !== -1; };\n    /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.println = function (from, lastPart) {\n        if (lastPart === void 0) { lastPart = ''; }\n        this.print(from || null, lastPart, true);\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineIsEmpty = function () { return this._currentLine.parts.length === 0; };\n    /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.print = function (from, part, newLine) {\n        if (newLine === void 0) { newLine = false; }\n        if (part.length > 0) {\n            this._currentLine.parts.push(part);\n            this._currentLine.srcSpans.push(from && from.sourceSpan || null);\n        }\n        if (newLine) {\n            this._lines.push(new _EmittedLine(this._indent));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.removeEmptyLastLine = function () {\n        if (this.lineIsEmpty()) {\n            this._lines.pop();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.incIndent = function () {\n        this._indent++;\n        this._currentLine.indent = this._indent;\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.decIndent = function () {\n        this._indent--;\n        this._currentLine.indent = this._indent;\n    };\n    /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.pushClass = function (clazz) { this._classes.push(clazz); };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.popClass = function () { return ((this._classes.pop())); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"currentClass\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSource = function () {\n        return this.sourceLines\n            .map(function (l) { return l.parts.length > 0 ? _createIndent(l.indent) + l.parts.join('') : ''; })\n            .join('\\n');\n    };\n    /**\n     * @param {?} sourceFilePath\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSourceMapGenerator = function (sourceFilePath, genFilePath, startsAtLine) {\n        if (startsAtLine === void 0) { startsAtLine = 0; }\n        var /** @type {?} */ map = new SourceMapGenerator(genFilePath);\n        var /** @type {?} */ firstOffsetMapped = false;\n        var /** @type {?} */ mapFirstOffsetIfNeeded = function () {\n            if (!firstOffsetMapped) {\n                // Add a single space so that tools won't try to load the file from disk.\n                // Note: We are using virtual urls like `ng:///`, so we have to\n                // provide a content here.\n                map.addSource(sourceFilePath, ' ').addMapping(0, sourceFilePath, 0, 0);\n                firstOffsetMapped = true;\n            }\n        };\n        for (var /** @type {?} */ i = 0; i < startsAtLine; i++) {\n            map.addLine();\n            mapFirstOffsetIfNeeded();\n        }\n        this.sourceLines.forEach(function (line, lineIdx) {\n            map.addLine();\n            var /** @type {?} */ spans = line.srcSpans;\n            var /** @type {?} */ parts = line.parts;\n            var /** @type {?} */ col0 = line.indent * _INDENT_WITH.length;\n            var /** @type {?} */ spanIdx = 0;\n            // skip leading parts without source spans\n            while (spanIdx < spans.length && !spans[spanIdx]) {\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n            }\n            if (spanIdx < spans.length && lineIdx === 0 && col0 === 0) {\n                firstOffsetMapped = true;\n            }\n            else {\n                mapFirstOffsetIfNeeded();\n            }\n            while (spanIdx < spans.length) {\n                var /** @type {?} */ span = ((spans[spanIdx]));\n                var /** @type {?} */ source = span.start.file;\n                var /** @type {?} */ sourceLine = span.start.line;\n                var /** @type {?} */ sourceCol = span.start.col;\n                map.addSource(source.url, source.content)\n                    .addMapping(col0, source.url, sourceLine, sourceCol);\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n                // assign parts without span or the same span to the previous segment\n                while (spanIdx < spans.length && (span === spans[spanIdx] || !spans[spanIdx])) {\n                    col0 += parts[spanIdx].length;\n                    spanIdx++;\n                }\n            }\n        });\n        return map;\n    };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"sourceLines\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (this._lines.length && this._lines[this._lines.length - 1].parts.length === 0) {\n                return this._lines.slice(0, -1);\n            }\n            return this._lines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EmitterVisitorContext;\n}());\n/**\n * @abstract\n */\nvar AbstractEmitterVisitor = (function () {\n    /**\n     * @param {?} _escapeDollarInStrings\n     */\n    function AbstractEmitterVisitor(_escapeDollarInStrings) {\n        this._escapeDollarInStrings = _escapeDollarInStrings;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitExpressionStmt = function (stmt, ctx) {\n        stmt.expr.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReturnStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"return \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCastExpr = function (ast, context) { };\n    /**\n     * @abstract\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) { };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitIfStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"if (\");\n        stmt.condition.visitExpression(this, ctx);\n        ctx.print(stmt, \") {\");\n        var /** @type {?} */ hasElseCase = stmt.falseCase != null && stmt.falseCase.length > 0;\n        if (stmt.trueCase.length <= 1 && !hasElseCase) {\n            ctx.print(stmt, \" \");\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.removeEmptyLastLine();\n            ctx.print(stmt, \" \");\n        }\n        else {\n            ctx.println();\n            ctx.incIndent();\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.decIndent();\n            if (hasElseCase) {\n                ctx.println(stmt, \"} else {\");\n                ctx.incIndent();\n                this.visitAllStatements(stmt.falseCase, ctx);\n                ctx.decIndent();\n            }\n        }\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) { };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitThrowStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"throw \");\n        stmt.error.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommentStmt = function (stmt, ctx) {\n        var /** @type {?} */ lines = stmt.comment.split('\\n');\n        lines.forEach(function (line) { ctx.println(stmt, \"// \" + line); });\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) { };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteVarExpr = function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        ctx.print(expr, expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteKeyExpr = function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \"[\");\n        expr.index.visitExpression(this, ctx);\n        ctx.print(expr, \"] = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWritePropExpr = function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \".\" + expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeMethodExpr = function (expr, ctx) {\n        expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ name = expr.name;\n        if (expr.builtin != null) {\n            name = this.getBuiltinMethodName(expr.builtin);\n            if (name == null) {\n                // some builtins just mean to skip the call.\n                return null;\n            }\n        }\n        ctx.print(expr, \".\" + name + \"(\");\n        this.visitAllExpressions(expr.args, ctx, \",\");\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} method\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.getBuiltinMethodName = function (method) { };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {\n        expr.fn.visitExpression(this, ctx);\n        ctx.print(expr, \"(\");\n        this.visitAllExpressions(expr.args, ctx, ',');\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {\n        var /** @type {?} */ varName = ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    varName = 'super';\n                    break;\n                case BuiltinVar.This:\n                    varName = 'this';\n                    break;\n                case BuiltinVar.CatchError:\n                    varName = ((CATCH_ERROR_VAR$1.name));\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = ((CATCH_STACK_VAR$1.name));\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        ctx.print(ast, varName);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInstantiateExpr = function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        ast.classExpr.visitExpression(this, ctx);\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralExpr = function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (typeof value === 'string') {\n            ctx.print(ast, escapeIdentifier(value, this._escapeDollarInStrings));\n        }\n        else {\n            ctx.print(ast, \"\" + value);\n        }\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) { };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitConditionalExpr = function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        ast.condition.visitExpression(this, ctx);\n        ctx.print(ast, '? ');\n        ast.trueCase.visitExpression(this, ctx);\n        ctx.print(ast, ': '); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitNotExpr = function (ast, ctx) {\n        ctx.print(ast, '!');\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAssertNotNullExpr = function (ast, ctx) {\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) { };\n    /**\n     * @abstract\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr = function (ast, ctx) {\n        var /** @type {?} */ opStr;\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                opStr = '==';\n                break;\n            case BinaryOperator.Identical:\n                opStr = '===';\n                break;\n            case BinaryOperator.NotEquals:\n                opStr = '!=';\n                break;\n            case BinaryOperator.NotIdentical:\n                opStr = '!==';\n                break;\n            case BinaryOperator.And:\n                opStr = '&&';\n                break;\n            case BinaryOperator.Or:\n                opStr = '||';\n                break;\n            case BinaryOperator.Plus:\n                opStr = '+';\n                break;\n            case BinaryOperator.Minus:\n                opStr = '-';\n                break;\n            case BinaryOperator.Divide:\n                opStr = '/';\n                break;\n            case BinaryOperator.Multiply:\n                opStr = '*';\n                break;\n            case BinaryOperator.Modulo:\n                opStr = '%';\n                break;\n            case BinaryOperator.Lower:\n                opStr = '<';\n                break;\n            case BinaryOperator.LowerEquals:\n                opStr = '<=';\n                break;\n            case BinaryOperator.Bigger:\n                opStr = '>';\n                break;\n            case BinaryOperator.BiggerEquals:\n                opStr = '>=';\n                break;\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n        ctx.print(ast, \"(\");\n        ast.lhs.visitExpression(this, ctx);\n        ctx.print(ast, \" \" + opStr + \" \");\n        ast.rhs.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadPropExpr = function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \".\");\n        ctx.print(ast, ast.name);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadKeyExpr = function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \"[\");\n        ast.index.visitExpression(this, ctx);\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n        var /** @type {?} */ useNewLine = ast.entries.length > 1;\n        ctx.print(ast, \"[\", useNewLine);\n        ctx.incIndent();\n        this.visitAllExpressions(ast.entries, ctx, ',', useNewLine);\n        ctx.decIndent();\n        ctx.print(ast, \"]\", useNewLine);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralMapExpr = function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ useNewLine = ast.entries.length > 1;\n        ctx.print(ast, \"{\", useNewLine);\n        ctx.incIndent();\n        this.visitAllObjects(function (entry) {\n            ctx.print(ast, escapeIdentifier(entry.key, _this._escapeDollarInStrings, entry.quoted) + \": \");\n            entry.value.visitExpression(_this, ctx);\n        }, ast.entries, ctx, ',', useNewLine);\n        ctx.decIndent();\n        ctx.print(ast, \"}\", useNewLine);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommaExpr = function (ast, ctx) {\n        ctx.print(ast, '(');\n        this.visitAllExpressions(ast.parts, ctx, ',');\n        ctx.print(ast, ')');\n        return null;\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @param {?=} newLine\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllExpressions = function (expressions, ctx, separator, newLine) {\n        var _this = this;\n        if (newLine === void 0) { newLine = false; }\n        this.visitAllObjects(function (expr) { return expr.visitExpression(_this, ctx); }, expressions, ctx, separator, newLine);\n    };\n    /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @param {?=} newLine\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllObjects = function (handler, expressions, ctx, separator, newLine) {\n        if (newLine === void 0) { newLine = false; }\n        for (var /** @type {?} */ i = 0; i < expressions.length; i++) {\n            if (i > 0) {\n                ctx.print(null, separator, newLine);\n            }\n            handler(expressions[i]);\n        }\n        if (newLine) {\n            ctx.println();\n        }\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllStatements = function (statements, ctx) {\n        var _this = this;\n        statements.forEach(function (stmt) { return stmt.visitStatement(_this, ctx); });\n    };\n    return AbstractEmitterVisitor;\n}());\n/**\n * @param {?} input\n * @param {?} escapeDollar\n * @param {?=} alwaysQuote\n * @return {?}\n */\nfunction escapeIdentifier(input, escapeDollar, alwaysQuote) {\n    if (alwaysQuote === void 0) { alwaysQuote = true; }\n    if (input == null) {\n        return null;\n    }\n    var /** @type {?} */ body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, function () {\n        var match = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            match[_i] = arguments[_i];\n        }\n        if (match[0] == '$') {\n            return escapeDollar ? '\\\\$' : '$';\n        }\n        else if (match[0] == '\\n') {\n            return '\\\\n';\n        }\n        else if (match[0] == '\\r') {\n            return '\\\\r';\n        }\n        else {\n            return \"\\\\\" + match[0];\n        }\n    });\n    var /** @type {?} */ requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n    return requiresQuotes ? \"'\" + body + \"'\" : body;\n}\n/**\n * @param {?} count\n * @return {?}\n */\nfunction _createIndent(count) {\n    var /** @type {?} */ res = '';\n    for (var /** @type {?} */ i = 0; i < count; i++) {\n        res += _INDENT_WITH;\n    }\n    return res;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _debugFilePath = '/debug/lib';\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction debugOutputAstAsTypeScript(ast) {\n    var /** @type {?} */ converter = new _TsEmitterVisitor(_debugFilePath, {\n        /**\n         * @param {?} filePath\n         * @param {?} containingFilePath\n         * @return {?}\n         */\n        fileNameToModuleName: function (filePath, containingFilePath) { return filePath; },\n        /**\n         * @param {?} symbol\n         * @return {?}\n         */\n        getImportAs: function (symbol) { return null; },\n        getTypeArity: function (symbol) { return null; }\n    });\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot([]);\n    var /** @type {?} */ asts = Array.isArray(ast) ? ast : [ast];\n    asts.forEach(function (ast) {\n        if (ast instanceof Statement) {\n            ast.visitStatement(converter, ctx);\n        }\n        else if (ast instanceof Expression) {\n            ast.visitExpression(converter, ctx);\n        }\n        else if (ast instanceof Type$1) {\n            ast.visitType(converter, ctx);\n        }\n        else {\n            throw new Error(\"Don't know how to print debug info for \" + ast);\n        }\n    });\n    return ctx.toSource();\n}\nvar TypeScriptEmitter = (function () {\n    /**\n     * @param {?} _importResolver\n     */\n    function TypeScriptEmitter(_importResolver) {\n        this._importResolver = _importResolver;\n    }\n    /**\n     * @param {?} srcFilePath\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?} exportedVars\n     * @param {?=} preamble\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatements = function (srcFilePath, genFilePath, stmts, exportedVars, preamble) {\n        var _this = this;\n        if (preamble === void 0) { preamble = ''; }\n        var /** @type {?} */ converter = new _TsEmitterVisitor(genFilePath, this._importResolver);\n        var /** @type {?} */ ctx = EmitterVisitorContext.createRoot(exportedVars);\n        converter.visitAllStatements(stmts, ctx);\n        var /** @type {?} */ preambleLines = preamble ? preamble.split('\\n') : [];\n        converter.reexports.forEach(function (reexports, exportedFilePath) {\n            var /** @type {?} */ reexportsCode = reexports.map(function (reexport) { return reexport.name + \" as \" + reexport.as; }).join(',');\n            preambleLines.push(\"export {\" + reexportsCode + \"} from '\" + _this._importResolver.fileNameToModuleName(exportedFilePath, genFilePath) + \"';\");\n        });\n        converter.importsWithPrefixes.forEach(function (prefix, importedFilePath) {\n            // Note: can't write the real word for import as it screws up system.js auto detection...\n            preambleLines.push(\"imp\" +\n                (\"ort * as \" + prefix + \" from '\" + _this._importResolver.fileNameToModuleName(importedFilePath, genFilePath) + \"';\"));\n        });\n        var /** @type {?} */ sm = ctx.toSourceMapGenerator(srcFilePath, genFilePath, preambleLines.length).toJsComment();\n        var /** @type {?} */ lines = preambleLines.concat([ctx.toSource(), sm]);\n        if (sm) {\n            // always add a newline at the end, as some tools have bugs without it.\n            lines.push('');\n        }\n        return lines.join('\\n');\n    };\n    return TypeScriptEmitter;\n}());\nvar _TsEmitterVisitor = (function (_super) {\n    __extends(_TsEmitterVisitor, _super);\n    /**\n     * @param {?} _genFilePath\n     * @param {?} _importResolver\n     */\n    function _TsEmitterVisitor(_genFilePath, _importResolver) {\n        var _this = _super.call(this, false) || this;\n        _this._genFilePath = _genFilePath;\n        _this._importResolver = _importResolver;\n        _this.typeExpression = 0;\n        _this.importsWithPrefixes = new Map();\n        _this.reexports = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitType = function (t, ctx, defaultType) {\n        if (defaultType === void 0) { defaultType = 'any'; }\n        if (t) {\n            this.typeExpression++;\n            t.visitType(this, ctx);\n            this.typeExpression--;\n        }\n        else {\n            ctx.print(null, defaultType);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralExpr = function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (value == null && ast.type != INFERRED_TYPE) {\n            ctx.print(ast, \"(\" + value + \" as any)\");\n            return null;\n        }\n        return _super.prototype.visitLiteralExpr.call(this, ast, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n        if (ast.entries.length === 0) {\n            ctx.print(ast, '(');\n        }\n        var /** @type {?} */ result = _super.prototype.visitLiteralArrayExpr.call(this, ast, ctx);\n        if (ast.entries.length === 0) {\n            ctx.print(ast, ' as any[])');\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {\n        this._visitIdentifier(ast.value, ast.typeParams, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitAssertNotNullExpr = function (ast, ctx) {\n        var /** @type {?} */ result = _super.prototype.visitAssertNotNullExpr.call(this, ast, ctx);\n        ctx.print(ast, '!');\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        if (ctx.isExportedVar(stmt.name) && stmt.value instanceof ExternalExpr && !stmt.type) {\n            // check for a reexport\n            var _a = this._resolveStaticSymbol(stmt.value.value), name = _a.name, filePath = _a.filePath, members = _a.members;\n            if (((members)).length === 0 && filePath !== this._genFilePath) {\n                var /** @type {?} */ reexports = this.reexports.get(filePath);\n                if (!reexports) {\n                    reexports = [];\n                    this.reexports.set(filePath, reexports);\n                }\n                reexports.push({ name: name, as: stmt.name });\n                return null;\n            }\n        }\n        if (ctx.isExportedVar(stmt.name)) {\n            ctx.print(stmt, \"export \");\n        }\n        if (stmt.hasModifier(StmtModifier.Final)) {\n            ctx.print(stmt, \"const\");\n        }\n        else {\n            ctx.print(stmt, \"var\");\n        }\n        ctx.print(stmt, \" \" + stmt.name);\n        this._printColonType(stmt.type, ctx);\n        ctx.print(stmt, \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {\n        ctx.print(ast, \"(<\"); /** @type {?} */\n        ((ast.type)).visitType(this, ctx);\n        ctx.print(ast, \">\");\n        ast.value.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitInstantiateExpr = function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        this.typeExpression++;\n        ast.classExpr.visitExpression(this, ctx);\n        this.typeExpression--;\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        if (ctx.isExportedVar(stmt.name)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"class \" + stmt.name);\n        if (stmt.parent != null) {\n            ctx.print(stmt, \" extends \");\n            this.typeExpression++;\n            stmt.parent.visitExpression(this, ctx);\n            this.typeExpression--;\n        }\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        stmt.fields.forEach(function (field) { return _this._visitClassField(field, ctx); });\n        if (stmt.constructorMethod != null) {\n            this._visitClassConstructor(stmt, ctx);\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(method, ctx); });\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassField = function (field, ctx) {\n        if (field.hasModifier(StmtModifier.Private)) {\n            // comment out as a workaround for #10967\n            ctx.print(null, \"/*private*/ \");\n        }\n        ctx.print(null, field.name);\n        this._printColonType(field.type, ctx);\n        ctx.println(null, \";\");\n    };\n    /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassGetter = function (getter, ctx) {\n        if (getter.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, \"get \" + getter.name + \"()\");\n        this._printColonType(getter.type, ctx);\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(getter.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {\n        ctx.print(stmt, \"constructor(\");\n        this._visitParams(stmt.constructorMethod.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.constructorMethod.body, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassMethod = function (method, ctx) {\n        if (method.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, method.name + \"(\");\n        this._visitParams(method.params, ctx);\n        ctx.print(null, \")\");\n        this._printColonType(method.type, ctx, 'void');\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(method.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        this._visitParams(ast.params, ctx);\n        ctx.print(ast, \")\");\n        this._printColonType(ast.type, ctx, 'void');\n        ctx.println(ast, \" => {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        if (ctx.isExportedVar(stmt.name)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.print(stmt, \")\");\n        this._printColonType(stmt.type, ctx, 'void');\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack', null)).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitBuiltintType = function (type, ctx) {\n        var /** @type {?} */ typeStr;\n        switch (type.name) {\n            case BuiltinTypeName.Bool:\n                typeStr = 'boolean';\n                break;\n            case BuiltinTypeName.Dynamic:\n                typeStr = 'any';\n                break;\n            case BuiltinTypeName.Function:\n                typeStr = 'Function';\n                break;\n            case BuiltinTypeName.Number:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.Int:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.String:\n                typeStr = 'string';\n                break;\n            default:\n                throw new Error(\"Unsupported builtin type \" + type.name);\n        }\n        ctx.print(null, typeStr);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExpressionType = function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitArrayType = function (type, ctx) {\n        this.visitType(type.of, ctx);\n        ctx.print(null, \"[]\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitMapType = function (type, ctx) {\n        ctx.print(null, \"{[key: string]:\");\n        this.visitType(type.valueType, ctx);\n        ctx.print(null, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitParams = function (params, ctx) {\n        var _this = this;\n        this.visitAllObjects(function (param) {\n            ctx.print(null, param.name);\n            _this._printColonType(param.type, ctx);\n        }, params, ctx, ',');\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._resolveStaticSymbol = function (value) {\n        var /** @type {?} */ reference = value.reference;\n        if (!(reference instanceof StaticSymbol)) {\n            throw new Error(\"Internal error: unknown identifier \" + JSON.stringify(value));\n        }\n        var /** @type {?} */ arity = this._importResolver.getTypeArity(reference) || undefined;\n        var /** @type {?} */ importReference = this._importResolver.getImportAs(reference) || reference;\n        return {\n            name: importReference.name,\n            filePath: importReference.filePath,\n            members: importReference.members, arity: arity\n        };\n    };\n    /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitIdentifier = function (value, typeParams, ctx) {\n        var _this = this;\n        var _a = this._resolveStaticSymbol(value), name = _a.name, filePath = _a.filePath, members = _a.members, arity = _a.arity;\n        if (filePath != this._genFilePath) {\n            var /** @type {?} */ prefix = this.importsWithPrefixes.get(filePath);\n            if (prefix == null) {\n                prefix = \"import\" + this.importsWithPrefixes.size;\n                this.importsWithPrefixes.set(filePath, prefix);\n            }\n            ctx.print(null, prefix + \".\");\n        }\n        if (((members)).length) {\n            ctx.print(null, name);\n            ctx.print(null, '.');\n            ctx.print(null, /** @type {?} */ ((members)).join('.'));\n        }\n        else {\n            ctx.print(null, name);\n        }\n        if (this.typeExpression > 0) {\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedParameters = (typeParams && typeParams.length) || 0;\n            var /** @type {?} */ additionalParameters = (arity || 0) - suppliedParameters;\n            if (suppliedParameters > 0 || additionalParameters > 0) {\n                ctx.print(null, \"<\");\n                if (suppliedParameters > 0) {\n                    this.visitAllObjects(function (type) { return type.visitType(_this, ctx); }, /** @type {?} */ ((typeParams)), ctx, ',');\n                }\n                if (additionalParameters > 0) {\n                    for (var /** @type {?} */ i = 0; i < additionalParameters; i++) {\n                        if (i > 0 || suppliedParameters > 0)\n                            ctx.print(null, ',');\n                        ctx.print(null, 'any');\n                    }\n                }\n                ctx.print(null, \">\");\n            }\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._printColonType = function (type, ctx, defaultType) {\n        if (type !== INFERRED_TYPE) {\n            ctx.print(null, ':');\n            this.visitType(type, ctx, defaultType);\n        }\n    };\n    return _TsEmitterVisitor;\n}(AbstractEmitterVisitor));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// =================================================================================================\n// =================================================================================================\n// =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========\n// =================================================================================================\n// =================================================================================================\n//\n//        DO NOT EDIT THIS LIST OF SECURITY SENSITIVE PROPERTIES WITHOUT A SECURITY REVIEW!\n//                               Reach out to mprobst for details.\n//\n// =================================================================================================\n/** Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'. */\nvar SECURITY_SCHEMA = {};\n/**\n * @param {?} ctx\n * @param {?} specs\n * @return {?}\n */\nfunction registerContext(ctx, specs) {\n    for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n        var spec = specs_1[_i];\n        SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n    }\n}\n// Case is insignificant below, all element and attribute names are lower-cased for lookup.\nregisterContext(_angular_core.SecurityContext.HTML, [\n    'iframe|srcdoc',\n    '*|innerHTML',\n    '*|outerHTML',\n]);\nregisterContext(_angular_core.SecurityContext.STYLE, ['*|style']);\n// NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\nregisterContext(_angular_core.SecurityContext.URL, [\n    '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n    'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n    'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n    'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n]);\nregisterContext(_angular_core.SecurityContext.RESOURCE_URL, [\n    'applet|code',\n    'applet|codebase',\n    'base|href',\n    'embed|src',\n    'frame|src',\n    'head|profile',\n    'html|manifest',\n    'iframe|src',\n    'link|href',\n    'media|src',\n    'object|codebase',\n    'object|data',\n    'script|src',\n]);\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BOOLEAN = 'boolean';\nvar NUMBER = 'number';\nvar STRING = 'string';\nvar OBJECT = 'object';\n/**\n * This array represents the DOM schema. It encodes inheritance, properties, and events.\n *\n * ## Overview\n *\n * Each line represents one kind of element. The `element_inheritance` and properties are joined\n * using `element_inheritance|properties` syntax.\n *\n * ## Element Inheritance\n *\n * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n * Here the individual elements are separated by `,` (commas). Every element in the list\n * has identical properties.\n *\n * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n * specified then `\"\"` (blank) element is assumed.\n *\n * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n * elements.\n *\n * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n *\n * ## Properties\n *\n * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n * by a special character designating its type:\n *\n * - (no prefix): property is a string.\n * - `*`: property represents an event.\n * - `!`: property is a boolean.\n * - `#`: property is a number.\n * - `%`: property is an object.\n *\n * ## Query\n *\n * The class creates an internal squas representation which allows to easily answer the query of\n * if a given property exist on a given element.\n *\n * NOTE: We don't yet support querying for types or events.\n * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n *       see dom_element_schema_registry_spec.ts\n */\n// =================================================================================================\n// =================================================================================================\n// =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========\n// =================================================================================================\n// =================================================================================================\n//\n//                       DO NOT EDIT THIS DOM SCHEMA WITHOUT A SECURITY REVIEW!\n//\n// Newly added properties must be security reviewed and assigned an appropriate SecurityContext in\n// dom_security_schema.ts. Reach out to mprobst & rjamet for details.\n//\n// =================================================================================================\nvar SCHEMA = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*beforecopy,*beforecut,*beforepaste,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*copy,*cuechange,*cut,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*message,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*paste,*pause,*play,*playing,*progress,*ratechange,*reset,*resize,*scroll,*search,*seeked,*seeking,*select,*selectstart,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*beforecopy,*beforecut,*beforepaste,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*copy,*cuechange,*cut,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*message,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*paste,*pause,*play,*playing,*progress,*ratechange,*reset,*resize,*scroll,*search,*seeked,*seeking,*select,*selectstart,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,keytype,name',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:cursor^:svg:|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n];\nvar _ATTR_TO_PROP = {\n    'class': 'className',\n    'for': 'htmlFor',\n    'formaction': 'formAction',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\nvar DomElementSchemaRegistry = (function (_super) {\n    __extends(DomElementSchemaRegistry, _super);\n    function DomElementSchemaRegistry() {\n        var _this = _super.call(this) || this;\n        _this._schema = {};\n        SCHEMA.forEach(function (encodedType) {\n            var type = {};\n            var _a = encodedType.split('|'), strType = _a[0], strProperties = _a[1];\n            var properties = strProperties.split(',');\n            var _b = strType.split('^'), typeNames = _b[0], superName = _b[1];\n            typeNames.split(',').forEach(function (tag) { return _this._schema[tag.toLowerCase()] = type; });\n            var superType = superName && _this._schema[superName.toLowerCase()];\n            if (superType) {\n                Object.keys(superType).forEach(function (prop) { type[prop] = superType[prop]; });\n            }\n            properties.forEach(function (property) {\n                if (property.length > 0) {\n                    switch (property[0]) {\n                        case '*':\n                            // We don't yet support events.\n                            // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                            // will\n                            // almost certainly introduce bad XSS vulnerabilities.\n                            // type[property.substring(1)] = EVENT;\n                            break;\n                        case '!':\n                            type[property.substring(1)] = BOOLEAN;\n                            break;\n                        case '#':\n                            type[property.substring(1)] = NUMBER;\n                            break;\n                        case '%':\n                            type[property.substring(1)] = OBJECT;\n                            break;\n                        default:\n                            type[property] = STRING;\n                    }\n                }\n            });\n        });\n        return _this;\n    }\n    /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasProperty = function (tagName, propName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === _angular_core.NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return false;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === _angular_core.CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Can't tell now as we don't know which properties a custom element will get\n                // once it is instantiated\n                return true;\n            }\n        }\n        var /** @type {?} */ elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n        return !!elementProperties[propName];\n    };\n    /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasElement = function (tagName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === _angular_core.NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return true;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === _angular_core.CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Allow any custom elements\n                return true;\n            }\n        }\n        return !!this._schema[tagName.toLowerCase()];\n    };\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.securityContext = function (tagName, propName, isAttribute) {\n        if (isAttribute) {\n            // NB: For security purposes, use the mapped property name, not the attribute name.\n            propName = this.getMappedPropName(propName);\n        }\n        // Make sure comparisons are case insensitive, so that case differences between attribute and\n        // property names do not have a security impact.\n        tagName = tagName.toLowerCase();\n        propName = propName.toLowerCase();\n        var /** @type {?} */ ctx = SECURITY_SCHEMA[tagName + '|' + propName];\n        if (ctx) {\n            return ctx;\n        }\n        ctx = SECURITY_SCHEMA['*|' + propName];\n        return ctx ? ctx : _angular_core.SecurityContext.NONE;\n    };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getMappedPropName = function (propName) { return _ATTR_TO_PROP[propName] || propName; };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getDefaultComponentElementName = function () { return 'ng-component'; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateProperty = function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateAttribute = function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.allKnownElementNames = function () { return Object.keys(this._schema); };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = function (propName) {\n        return dashCaseToCamelCase(propName);\n    };\n    /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue = function (camelCaseProp, userProvidedProp, val) {\n        var /** @type {?} */ unit = '';\n        var /** @type {?} */ strVal = val.toString().trim();\n        var /** @type {?} */ errorMsg = ((null));\n        if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n            if (typeof val === 'number') {\n                unit = 'px';\n            }\n            else {\n                var /** @type {?} */ valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errorMsg = \"Please provide a CSS unit value for \" + userProvidedProp + \":\" + val;\n                }\n            }\n        }\n        return { error: errorMsg, value: strVal + unit };\n    };\n    return DomElementSchemaRegistry;\n}(ElementSchemaRegistry));\nDomElementSchemaRegistry.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nDomElementSchemaRegistry.ctorParameters = function () { return []; };\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction _isPixelDimensionStyle(prop) {\n    switch (prop) {\n        case 'width':\n        case 'height':\n        case 'minWidth':\n        case 'minHeight':\n        case 'maxWidth':\n        case 'maxHeight':\n        case 'left':\n        case 'top':\n        case 'bottom':\n        case 'right':\n        case 'fontSize':\n        case 'outlineWidth':\n        case 'outlineOffset':\n        case 'paddingTop':\n        case 'paddingLeft':\n        case 'paddingBottom':\n        case 'paddingRight':\n        case 'marginTop':\n        case 'marginLeft':\n        case 'marginBottom':\n        case 'marginRight':\n        case 'borderRadius':\n        case 'borderWidth':\n        case 'borderTopWidth':\n        case 'borderLeftWidth':\n        case 'borderRightWidth':\n        case 'borderBottomWidth':\n        case 'textIndent':\n            return true;\n        default:\n            return false;\n    }\n}\nvar ShadowCss = (function () {\n    function ShadowCss() {\n        this.strictStyling = true;\n    }\n    /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype.shimCssText = function (cssText, selector, hostSelector) {\n        if (hostSelector === void 0) { hostSelector = ''; }\n        var /** @type {?} */ sourceMappingUrl = extractSourceMappingUrl(cssText);\n        cssText = stripComments(cssText);\n        cssText = this._insertDirectives(cssText);\n        return this._scopeCssText(cssText, selector, hostSelector) + sourceMappingUrl;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertDirectives = function (cssText) {\n        cssText = this._insertPolyfillDirectivesInCssText(cssText);\n        return this._insertPolyfillRulesInCssText(cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillDirectivesInCssText = function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentNextSelectorRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return m[2] + '{';\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillRulesInCssText = function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentRuleRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            var /** @type {?} */ rule = m[0].replace(m[1], '').replace(m[2], '');\n            return m[4] + rule;\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeCssText = function (cssText, scopeSelector, hostSelector) {\n        var /** @type {?} */ unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n        // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n        cssText = this._insertPolyfillHostInCssText(cssText);\n        cssText = this._convertColonHost(cssText);\n        cssText = this._convertColonHostContext(cssText);\n        cssText = this._convertShadowDOMSelectors(cssText);\n        if (scopeSelector) {\n            cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n        }\n        cssText = cssText + '\\n' + unscopedRules;\n        return cssText.trim();\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._extractUnscopedRulesFromCssText = function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        var /** @type {?} */ r = '';\n        var /** @type {?} */ m;\n        _cssContentUnscopedRuleRe.lastIndex = 0;\n        while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n            var /** @type {?} */ rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n            r += rule + '\\n\\n';\n        }\n        return r;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHost = function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHostContext = function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonRule = function (cssText, regExp, partReplacer) {\n        // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n        return cssText.replace(regExp, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            if (m[2]) {\n                var /** @type {?} */ parts = m[2].split(',');\n                var /** @type {?} */ r = [];\n                for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n                    var /** @type {?} */ p = parts[i].trim();\n                    if (!p)\n                        break;\n                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                }\n                return r.join(',');\n            }\n            else {\n                return _polyfillHostNoCombinator + m[3];\n            }\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostContextPartReplacer = function (host, part, suffix) {\n        if (part.indexOf(_polyfillHost) > -1) {\n            return this._colonHostPartReplacer(host, part, suffix);\n        }\n        else {\n            return host + part + suffix + ', ' + part + ' ' + host + suffix;\n        }\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostPartReplacer = function (host, part, suffix) {\n        return host + part.replace(_polyfillHost, '') + suffix;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertShadowDOMSelectors = function (cssText) {\n        return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelectors = function (cssText, scopeSelector, hostSelector) {\n        var _this = this;\n        return processRules(cssText, function (rule) {\n            var /** @type {?} */ selector = rule.selector;\n            var /** @type {?} */ content = rule.content;\n            if (rule.selector[0] != '@') {\n                selector =\n                    _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n            }\n            return new CssRule(selector, content);\n        });\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelector = function (selector, scopeSelector, hostSelector, strict) {\n        var _this = this;\n        return selector.split(',')\n            .map(function (part) { return part.trim().split(_shadowDeepSelectors); })\n            .map(function (deepParts) {\n            var shallowPart = deepParts[0], otherParts = deepParts.slice(1);\n            var /** @type {?} */ applyScope = function (shallowPart) {\n                if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                    return strict ?\n                        _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                        _this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n                }\n                else {\n                    return shallowPart;\n                }\n            };\n            return [applyScope(shallowPart)].concat(otherParts).join(' ');\n        })\n            .join(', ');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._selectorNeedsScoping = function (selector, scopeSelector) {\n        var /** @type {?} */ re = this._makeScopeMatcher(scopeSelector);\n        return !re.test(selector);\n    };\n    /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._makeScopeMatcher = function (scopeSelector) {\n        var /** @type {?} */ lre = /\\[/g;\n        var /** @type {?} */ rre = /\\]/g;\n        scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n        return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySelectorScope = function (selector, scopeSelector, hostSelector) {\n        // Difference from webcomponents.js: scopeSelector could not be an array\n        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {\n        // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n        _polyfillHostRe.lastIndex = 0;\n        if (_polyfillHostRe.test(selector)) {\n            var /** @type {?} */ replaceBy_1 = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\n            return selector\n                .replace(_polyfillHostNoCombinatorRe, function (hnc, selector) {\n                return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                    return before + replaceBy_1 + colon + after;\n                });\n            })\n                .replace(_polyfillHostRe, replaceBy_1 + ' ');\n        }\n        return scopeSelector + ' ' + selector;\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applyStrictSelectorScope = function (selector, scopeSelector, hostSelector) {\n        var _this = this;\n        var /** @type {?} */ isRe = /\\[is=([^\\]]*)\\]/g;\n        scopeSelector = scopeSelector.replace(isRe, function (_) {\n            var parts = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                parts[_i - 1] = arguments[_i];\n            }\n            return parts[0];\n        });\n        var /** @type {?} */ attrName = '[' + scopeSelector + ']';\n        var /** @type {?} */ _scopeSelectorPart = function (p) {\n            var /** @type {?} */ scopedP = p.trim();\n            if (!scopedP) {\n                return '';\n            }\n            if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n            }\n            else {\n                // remove :host since it should be unnecessary\n                var /** @type {?} */ t = p.replace(_polyfillHostRe, '');\n                if (t.length > 0) {\n                    var /** @type {?} */ matches = t.match(/([^:]*)(:*)(.*)/);\n                    if (matches) {\n                        scopedP = matches[1] + attrName + matches[2] + matches[3];\n                    }\n                }\n            }\n            return scopedP;\n        };\n        var /** @type {?} */ safeContent = new SafeSelector(selector);\n        selector = safeContent.content();\n        var /** @type {?} */ scopedSelector = '';\n        var /** @type {?} */ startIndex = 0;\n        var /** @type {?} */ res;\n        var /** @type {?} */ sep = /( |>|\\+|~(?!=))\\s*/g;\n        var /** @type {?} */ scopeAfter = selector.indexOf(_polyfillHostNoCombinator);\n        while ((res = sep.exec(selector)) !== null) {\n            var /** @type {?} */ separator = res[1];\n            var /** @type {?} */ part = selector.slice(startIndex, res.index).trim();\n            // if a selector appears before :host-context it should not be shimmed as it\n            // matches on ancestor elements and not on elements in the host's shadow\n            var /** @type {?} */ scopedPart = startIndex >= scopeAfter ? _scopeSelectorPart(part) : part;\n            scopedSelector += scopedPart + \" \" + separator + \" \";\n            startIndex = sep.lastIndex;\n        }\n        scopedSelector += _scopeSelectorPart(selector.substring(startIndex));\n        // replace the placeholders with their original values\n        return safeContent.restore(scopedSelector);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillHostInCssText = function (selector) {\n        return selector.replace(_colonHostContextRe, _polyfillHostContext)\n            .replace(_colonHostRe, _polyfillHost);\n    };\n    return ShadowCss;\n}());\nvar SafeSelector = (function () {\n    /**\n     * @param {?} selector\n     */\n    function SafeSelector(selector) {\n        var _this = this;\n        this.placeholders = [];\n        this.index = 0;\n        // Replaces attribute selectors with placeholders.\n        // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n        selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n            var replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(keep);\n            _this.index++;\n            return replaceBy;\n        });\n        // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n        // WS and \"+\" would otherwise be interpreted as selector separators.\n        this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n            var replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(exp);\n            _this.index++;\n            return pseudo + replaceBy;\n        });\n    }\n    \n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    SafeSelector.prototype.restore = function (content) {\n        var _this = this;\n        return content.replace(/__ph-(\\d+)__/g, function (ph, index) { return _this.placeholders[+index]; });\n    };\n    /**\n     * @return {?}\n     */\n    SafeSelector.prototype.content = function () { return this._content; };\n    return SafeSelector;\n}());\nvar _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\nvar _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _polyfillHost = '-shadowcsshost';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g,\n    // Deprecated selectors\n    /\\/shadow-deep\\//g,\n    /\\/shadow\\//g,\n];\nvar _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)/g;\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stripComments(input) {\n    return input.replace(_commentRe, '');\n}\n// all comments except inline source mapping\nvar _sourceMappingUrlRe = /\\/\\*\\s*#\\s*sourceMappingURL=[\\s\\S]+?\\*\\//;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction extractSourceMappingUrl(input) {\n    var /** @type {?} */ matcher = input.match(_sourceMappingUrlRe);\n    return matcher ? matcher[0] : '';\n}\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar CssRule = (function () {\n    /**\n     * @param {?} selector\n     * @param {?} content\n     */\n    function CssRule(selector, content) {\n        this.selector = selector;\n        this.content = content;\n    }\n    return CssRule;\n}());\n/**\n * @param {?} input\n * @param {?} ruleCallback\n * @return {?}\n */\nfunction processRules(input, ruleCallback) {\n    var /** @type {?} */ inputWithEscapedBlocks = escapeBlocks(input);\n    var /** @type {?} */ nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ selector = m[2];\n        var /** @type {?} */ content = '';\n        var /** @type {?} */ suffix = m[4];\n        var /** @type {?} */ contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var /** @type {?} */ rule = ruleCallback(new CssRule(selector, content));\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n}\nvar StringWithEscapedBlocks = (function () {\n    /**\n     * @param {?} escapedString\n     * @param {?} blocks\n     */\n    function StringWithEscapedBlocks(escapedString, blocks) {\n        this.escapedString = escapedString;\n        this.blocks = blocks;\n    }\n    return StringWithEscapedBlocks;\n}());\n/**\n * @param {?} input\n * @return {?}\n */\nfunction escapeBlocks(input) {\n    var /** @type {?} */ inputParts = input.split(_curlyRe);\n    var /** @type {?} */ resultParts = [];\n    var /** @type {?} */ escapedBlocks = [];\n    var /** @type {?} */ bracketCount = 0;\n    var /** @type {?} */ currentBlockParts = [];\n    for (var /** @type {?} */ partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var /** @type {?} */ part = inputParts[partIndex];\n        if (part == CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part == OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\nvar CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\nvar StylesCompileDependency = (function () {\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} isShimmed\n     * @param {?} valuePlaceholder\n     */\n    function StylesCompileDependency(name, moduleUrl, isShimmed, valuePlaceholder) {\n        this.name = name;\n        this.moduleUrl = moduleUrl;\n        this.isShimmed = isShimmed;\n        this.valuePlaceholder = valuePlaceholder;\n    }\n    return StylesCompileDependency;\n}());\nvar StylesCompileResult = (function () {\n    /**\n     * @param {?} componentStylesheet\n     * @param {?} externalStylesheets\n     */\n    function StylesCompileResult(componentStylesheet, externalStylesheets) {\n        this.componentStylesheet = componentStylesheet;\n        this.externalStylesheets = externalStylesheets;\n    }\n    return StylesCompileResult;\n}());\nvar CompiledStylesheet = (function () {\n    /**\n     * @param {?} statements\n     * @param {?} stylesVar\n     * @param {?} dependencies\n     * @param {?} isShimmed\n     * @param {?} meta\n     */\n    function CompiledStylesheet(statements, stylesVar, dependencies, isShimmed, meta) {\n        this.statements = statements;\n        this.stylesVar = stylesVar;\n        this.dependencies = dependencies;\n        this.isShimmed = isShimmed;\n        this.meta = meta;\n    }\n    return CompiledStylesheet;\n}());\nvar StyleCompiler = (function () {\n    /**\n     * @param {?} _urlResolver\n     */\n    function StyleCompiler(_urlResolver) {\n        this._urlResolver = _urlResolver;\n        this._shadowCss = new ShadowCss();\n    }\n    /**\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileComponent = function (comp) {\n        var _this = this;\n        var /** @type {?} */ template = ((comp.template));\n        var /** @type {?} */ externalStylesheets = [];\n        var /** @type {?} */ componentStylesheet = this._compileStyles(comp, new CompileStylesheetMetadata({\n            styles: template.styles,\n            styleUrls: template.styleUrls,\n            moduleUrl: identifierModuleUrl(comp.type)\n        }), true);\n        template.externalStylesheets.forEach(function (stylesheetMeta) {\n            var /** @type {?} */ compiledStylesheet = _this._compileStyles(comp, stylesheetMeta, false);\n            externalStylesheets.push(compiledStylesheet);\n        });\n        return new StylesCompileResult(componentStylesheet, externalStylesheets);\n    };\n    /**\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    StyleCompiler.prototype._compileStyles = function (comp, stylesheet, isComponentStylesheet) {\n        var _this = this;\n        var /** @type {?} */ shim = ((comp.template)).encapsulation === _angular_core.ViewEncapsulation.Emulated;\n        var /** @type {?} */ styleExpressions = stylesheet.styles.map(function (plainStyle) { return literal(_this._shimIfNeeded(plainStyle, shim)); });\n        var /** @type {?} */ dependencies = [];\n        for (var /** @type {?} */ i = 0; i < stylesheet.styleUrls.length; i++) {\n            var /** @type {?} */ identifier = { reference: null };\n            dependencies.push(new StylesCompileDependency(getStylesVarName(null), stylesheet.styleUrls[i], shim, identifier));\n            styleExpressions.push(new ExternalExpr(identifier));\n        }\n        // styles variable contains plain strings and arrays of other styles arrays (recursive),\n        // so we set its type to dynamic.\n        var /** @type {?} */ stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n        var /** @type {?} */ stmt = variable(stylesVar)\n            .set(literalArr(styleExpressions, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])))\n            .toDeclStmt(null, [StmtModifier.Final]);\n        return new CompiledStylesheet([stmt], stylesVar, dependencies, shim, stylesheet);\n    };\n    /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype._shimIfNeeded = function (style$$1, shim) {\n        return shim ? this._shadowCss.shimCssText(style$$1, CONTENT_ATTR, HOST_ATTR) : style$$1;\n    };\n    return StyleCompiler;\n}());\nStyleCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nStyleCompiler.ctorParameters = function () { return [\n    { type: UrlResolver, },\n]; };\n/**\n * @param {?} component\n * @return {?}\n */\nfunction getStylesVarName(component) {\n    var /** @type {?} */ result = \"styles\";\n    if (component) {\n        result += \"_\" + identifierName(component.type);\n    }\n    return result;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventHandlerVars = (function () {\n    function EventHandlerVars() {\n    }\n    return EventHandlerVars;\n}());\nEventHandlerVars.event = variable('$event');\nvar ConvertActionBindingResult = (function () {\n    /**\n     * @param {?} stmts\n     * @param {?} allowDefault\n     */\n    function ConvertActionBindingResult(stmts, allowDefault) {\n        this.stmts = stmts;\n        this.allowDefault = allowDefault;\n    }\n    return ConvertActionBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression is\n * used in an action binding (e.g. an event handler).\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} action\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertActionBinding(localResolver, implicitReceiver, action, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ actionWithoutBuiltins = convertPropertyBindingBuiltins({\n        createLiteralArrayConverter: function (argCount) {\n            // Note: no caching for literal arrays in actions.\n            return function (args) { return literalArr(args); };\n        },\n        createLiteralMapConverter: function (keys) {\n            // Note: no caching for literal maps in actions.\n            return function (args) { return literalMap(/** @type {?} */ (keys.map(function (key, i) { return [key, args[i]]; }))); };\n        },\n        createPipeConverter: function (name) {\n            throw new Error(\"Illegal State: Actions are not allowed to contain pipes. Pipe: \" + name);\n        }\n    }, action);\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ actionStmts = [];\n    flattenStatements(actionWithoutBuiltins.visit(visitor, _Mode.Statement), actionStmts);\n    prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n    var /** @type {?} */ lastIndex = actionStmts.length - 1;\n    var /** @type {?} */ preventDefaultVar = ((null));\n    if (lastIndex >= 0) {\n        var /** @type {?} */ lastStatement = actionStmts[lastIndex];\n        var /** @type {?} */ returnExpr = convertStmtIntoExpression(lastStatement);\n        if (returnExpr) {\n            // Note: We need to cast the result of the method call to dynamic,\n            // as it might be a void method!\n            preventDefaultVar = createPreventDefaultVar(bindingId);\n            actionStmts[lastIndex] =\n                preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false)))\n                    .toDeclStmt(null, [StmtModifier.Final]);\n        }\n    }\n    return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertPropertyBindingBuiltins(converterFactory, ast) {\n    return convertBuiltins(converterFactory, ast);\n}\nvar ConvertPropertyBindingResult = (function () {\n    /**\n     * @param {?} stmts\n     * @param {?} currValExpr\n     */\n    function ConvertPropertyBindingResult(stmts, currValExpr) {\n        this.stmts = stmts;\n        this.currValExpr = currValExpr;\n    }\n    return ConvertPropertyBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression\n * is used in property binding. The expression has to be preprocessed via\n * `convertPropertyBindingBuiltins`.\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} expressionWithoutBuiltins\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertPropertyBinding(localResolver, implicitReceiver, expressionWithoutBuiltins, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ currValExpr = createCurrValueExpr(bindingId);\n    var /** @type {?} */ stmts = [];\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ outputExpr = expressionWithoutBuiltins.visit(visitor, _Mode.Expression);\n    if (visitor.temporaryCount) {\n        for (var /** @type {?} */ i = 0; i < visitor.temporaryCount; i++) {\n            stmts.push(temporaryDeclaration(bindingId, i));\n        }\n    }\n    stmts.push(currValExpr.set(outputExpr).toDeclStmt(null, [StmtModifier.Final]));\n    return new ConvertPropertyBindingResult(stmts, currValExpr);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertBuiltins(converterFactory, ast) {\n    var /** @type {?} */ visitor = new _BuiltinAstConverter(converterFactory);\n    return ast.visit(visitor);\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryName(bindingId, temporaryNumber) {\n    return \"tmp_\" + bindingId + \"_\" + temporaryNumber;\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryDeclaration(bindingId, temporaryNumber) {\n    return new DeclareVarStmt(temporaryName(bindingId, temporaryNumber), NULL_EXPR);\n}\n/**\n * @param {?} temporaryCount\n * @param {?} bindingId\n * @param {?} statements\n * @return {?}\n */\nfunction prependTemporaryDecls(temporaryCount, bindingId, statements) {\n    for (var /** @type {?} */ i = temporaryCount - 1; i >= 0; i--) {\n        statements.unshift(temporaryDeclaration(bindingId, i));\n    }\n}\nvar _Mode = {};\n_Mode.Statement = 0;\n_Mode.Expression = 1;\n_Mode[_Mode.Statement] = \"Statement\";\n_Mode[_Mode.Expression] = \"Expression\";\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureStatementMode(mode, ast) {\n    if (mode !== _Mode.Statement) {\n        throw new Error(\"Expected a statement, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureExpressionMode(mode, ast) {\n    if (mode !== _Mode.Expression) {\n        throw new Error(\"Expected an expression, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} expr\n * @return {?}\n */\nfunction convertToStatementIfNeeded(mode, expr) {\n    if (mode === _Mode.Statement) {\n        return expr.toStmt();\n    }\n    else {\n        return expr;\n    }\n}\nvar _BuiltinAstConverter = (function (_super) {\n    __extends(_BuiltinAstConverter, _super);\n    /**\n     * @param {?} _converterFactory\n     */\n    function _BuiltinAstConverter(_converterFactory) {\n        var _this = _super.call(this) || this;\n        _this._converterFactory = _converterFactory;\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitPipe = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = [ast.exp].concat(ast.args).map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createPipeConverter(ast.name, args.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralArray = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.expressions.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralArrayConverter(ast.expressions.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralMap = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.values.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralMapConverter(ast.keys));\n    };\n    return _BuiltinAstConverter;\n}(AstTransformer));\nvar _AstToIrVisitor = (function () {\n    /**\n     * @param {?} _localResolver\n     * @param {?} _implicitReceiver\n     * @param {?} bindingId\n     */\n    function _AstToIrVisitor(_localResolver, _implicitReceiver, bindingId) {\n        this._localResolver = _localResolver;\n        this._implicitReceiver = _implicitReceiver;\n        this.bindingId = bindingId;\n        this._nodeMap = new Map();\n        this._resultMap = new Map();\n        this._currentTemporary = 0;\n        this.temporaryCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitBinary = function (ast, mode) {\n        var /** @type {?} */ op;\n        switch (ast.operation) {\n            case '+':\n                op = BinaryOperator.Plus;\n                break;\n            case '-':\n                op = BinaryOperator.Minus;\n                break;\n            case '*':\n                op = BinaryOperator.Multiply;\n                break;\n            case '/':\n                op = BinaryOperator.Divide;\n                break;\n            case '%':\n                op = BinaryOperator.Modulo;\n                break;\n            case '&&':\n                op = BinaryOperator.And;\n                break;\n            case '||':\n                op = BinaryOperator.Or;\n                break;\n            case '==':\n                op = BinaryOperator.Equals;\n                break;\n            case '!=':\n                op = BinaryOperator.NotEquals;\n                break;\n            case '===':\n                op = BinaryOperator.Identical;\n                break;\n            case '!==':\n                op = BinaryOperator.NotIdentical;\n                break;\n            case '<':\n                op = BinaryOperator.Lower;\n                break;\n            case '>':\n                op = BinaryOperator.Bigger;\n                break;\n            case '<=':\n                op = BinaryOperator.LowerEquals;\n                break;\n            case '>=':\n                op = BinaryOperator.BiggerEquals;\n                break;\n            default:\n                throw new Error(\"Unsupported operation \" + ast.operation);\n        }\n        return convertToStatementIfNeeded(mode, new BinaryOperatorExpr(op, this._visit(ast.left, _Mode.Expression), this._visit(ast.right, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitChain = function (ast, mode) {\n        ensureStatementMode(mode, ast);\n        return this.visitAll(ast.expressions, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitConditional = function (ast, mode) {\n        var /** @type {?} */ value = this._visit(ast.condition, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, value.conditional(this._visit(ast.trueExp, _Mode.Expression), this._visit(ast.falseExp, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPipe = function (ast, mode) {\n        throw new Error(\"Illegal state: Pipes should have been converted into functions. Pipe: \" + ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitFunctionCall = function (ast, mode) {\n        var /** @type {?} */ convertedArgs = this.visitAll(ast.args, _Mode.Expression);\n        var /** @type {?} */ fnResult;\n        if (ast instanceof BuiltinFunctionCall) {\n            fnResult = ast.converter(convertedArgs);\n        }\n        else {\n            fnResult = this._visit(/** @type {?} */ ((ast.target)), _Mode.Expression).callFn(convertedArgs);\n        }\n        return convertToStatementIfNeeded(mode, fnResult);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitImplicitReceiver = function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        return this._implicitReceiver;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitInterpolation = function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        var /** @type {?} */ args = [literal(ast.expressions.length)];\n        for (var /** @type {?} */ i = 0; i < ast.strings.length - 1; i++) {\n            args.push(literal(ast.strings[i]));\n            args.push(this._visit(ast.expressions[i], _Mode.Expression));\n        }\n        args.push(literal(ast.strings[ast.strings.length - 1]));\n        return ast.expressions.length <= 9 ?\n            importExpr(createIdentifier(Identifiers.inlineInterpolate)).callFn(args) :\n            importExpr(createIdentifier(Identifiers.interpolate)).callFn([\n                args[0], literalArr(args.slice(1))\n            ]);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedRead = function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            return convertToStatementIfNeeded(mode, this._visit(ast.obj, _Mode.Expression).key(this._visit(ast.key, _Mode.Expression)));\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedWrite = function (ast, mode) {\n        var /** @type {?} */ obj = this._visit(ast.obj, _Mode.Expression);\n        var /** @type {?} */ key = this._visit(ast.key, _Mode.Expression);\n        var /** @type {?} */ value = this._visit(ast.value, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralArray = function (ast, mode) {\n        throw new Error(\"Illegal State: literal arrays should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralMap = function (ast, mode) {\n        throw new Error(\"Illegal State: literal maps should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralPrimitive = function (ast, mode) {\n        return convertToStatementIfNeeded(mode, literal(ast.value));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._getLocal = function (name) { return this._localResolver.getLocal(name); };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitMethodCall = function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ args = this.visitAll(ast.args, _Mode.Expression);\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                var /** @type {?} */ varExpr = this._getLocal(ast.name);\n                if (varExpr) {\n                    result = varExpr.callFn(args);\n                }\n            }\n            if (result == null) {\n                result = receiver.callMethod(ast.name, args);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPrefixNot = function (ast, mode) {\n        return convertToStatementIfNeeded(mode, not(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitNonNullAssert = function (ast, mode) {\n        return convertToStatementIfNeeded(mode, assertNotNull(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyRead = function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                result = this._getLocal(ast.name);\n            }\n            if (result == null) {\n                result = receiver.prop(ast.name);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyWrite = function (ast, mode) {\n        var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n        if (receiver === this._implicitReceiver) {\n            var /** @type {?} */ varExpr = this._getLocal(ast.name);\n            if (varExpr) {\n                throw new Error('Cannot assign to a reference or variable!');\n            }\n        }\n        return convertToStatementIfNeeded(mode, receiver.prop(ast.name).set(this._visit(ast.value, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafePropertyRead = function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafeMethodCall = function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitAll = function (asts, mode) {\n        var _this = this;\n        return asts.map(function (ast) { return _this._visit(ast, mode); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitQuote = function (ast, mode) {\n        throw new Error(\"Quotes are not supported for evaluation!\\n        Statement: \" + ast.uninterpretedExpression + \" located at \" + ast.location);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._visit = function (ast, mode) {\n        var /** @type {?} */ result = this._resultMap.get(ast);\n        if (result)\n            return result;\n        return (this._nodeMap.get(ast) || ast).visit(this, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.convertSafeAccess = function (ast, leftMostSafe, mode) {\n        // If the expression contains a safe access node on the left it needs to be converted to\n        // an expression that guards the access to the member by checking the receiver for blank. As\n        // execution proceeds from left to right, the left most part of the expression must be guarded\n        // first but, because member access is left associative, the right side of the expression is at\n        // the top of the AST. The desired result requires lifting a copy of the the left part of the\n        // expression up to test it for blank before generating the unguarded version.\n        // Consider, for example the following expression: a?.b.c?.d.e\n        // This results in the ast:\n        //         .\n        //        / \\\n        //       ?.   e\n        //      /  \\\n        //     .    d\n        //    / \\\n        //   ?.  c\n        //  /  \\\n        // a    b\n        // The following tree should be generated:\n        //\n        //        /---- ? ----\\\n        //       /      |      \\\n        //     a   /--- ? ---\\  null\n        //        /     |     \\\n        //       .      .     null\n        //      / \\    / \\\n        //     .  c   .   e\n        //    / \\    / \\\n        //   a   b  ,   d\n        //         / \\\n        //        .   c\n        //       / \\\n        //      a   b\n        //\n        // Notice that the first guard condition is the left hand of the left most safe access node\n        // which comes in as leftMostSafe to this routine.\n        var /** @type {?} */ guardedExpression = this._visit(leftMostSafe.receiver, _Mode.Expression);\n        var /** @type {?} */ temporary = ((undefined));\n        if (this.needsTemporary(leftMostSafe.receiver)) {\n            // If the expression has method calls or pipes then we need to save the result into a\n            // temporary variable to avoid calling stateful or impure code more than once.\n            temporary = this.allocateTemporary();\n            // Preserve the result in the temporary variable\n            guardedExpression = temporary.set(guardedExpression);\n            // Ensure all further references to the guarded expression refer to the temporary instead.\n            this._resultMap.set(leftMostSafe.receiver, temporary);\n        }\n        var /** @type {?} */ condition = guardedExpression.isBlank();\n        // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n        // leftMostNode with its unguarded version in the call to `this.visit()`.\n        if (leftMostSafe instanceof SafeMethodCall) {\n            this._nodeMap.set(leftMostSafe, new MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n        }\n        else {\n            this._nodeMap.set(leftMostSafe, new PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n        }\n        // Recursively convert the node now without the guarded member access.\n        var /** @type {?} */ access = this._visit(ast, _Mode.Expression);\n        // Remove the mapping. This is not strictly required as the converter only traverses each node\n        // once but is safer if the conversion is changed to traverse the nodes more than once.\n        this._nodeMap.delete(leftMostSafe);\n        // If we allocated a temporary, release it.\n        if (temporary) {\n            this.releaseTemporary(temporary);\n        }\n        // Produce the conditional\n        return convertToStatementIfNeeded(mode, condition.conditional(literal(null), access));\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.leftMostSafeNode = function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        return ast.visit({\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitBinary: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitChain: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitConditional: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitFunctionCall: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitImplicitReceiver: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitInterpolation: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedRead: function (ast) { return visit(this, ast.obj); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedWrite: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralArray: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralMap: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralPrimitive: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitMethodCall: function (ast) { return visit(this, ast.receiver); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPipe: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPrefixNot: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitNonNullAssert: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyRead: function (ast) { return visit(this, ast.receiver); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyWrite: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitQuote: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafeMethodCall: function (ast) { return visit(this, ast.receiver) || ast; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafePropertyRead: function (ast) {\n                return visit(this, ast.receiver) || ast;\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.needsTemporary = function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return ast && (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        var /** @type {?} */ visitSome = function (visitor, ast) {\n            return ast.some(function (ast) { return visit(visitor, ast); });\n        };\n        return ast.visit({\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitBinary: function (ast) { return visit(this, ast.left) || visit(this, ast.right); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitChain: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitConditional: function (ast) {\n                return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                    visit(this, ast.falseExp);\n            },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitFunctionCall: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitImplicitReceiver: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitInterpolation: function (ast) { return visitSome(this, ast.expressions); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedRead: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedWrite: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralArray: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralMap: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralPrimitive: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitMethodCall: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPipe: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPrefixNot: function (ast) { return visit(this, ast.expression); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitNonNullAssert: function (ast) { return visit(this, ast.expression); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyRead: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyWrite: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitQuote: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafeMethodCall: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafePropertyRead: function (ast) { return false; }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.allocateTemporary = function () {\n        var /** @type {?} */ tempNumber = this._currentTemporary++;\n        this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n        return new ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n    };\n    /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.releaseTemporary = function (temporary) {\n        this._currentTemporary--;\n        if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n            throw new Error(\"Temporary \" + temporary.name + \" released out of order\");\n        }\n    };\n    return _AstToIrVisitor;\n}());\n/**\n * @param {?} arg\n * @param {?} output\n * @return {?}\n */\nfunction flattenStatements(arg, output) {\n    if (Array.isArray(arg)) {\n        ((arg)).forEach(function (entry) { return flattenStatements(entry, output); });\n    }\n    else {\n        output.push(arg);\n    }\n}\nvar DefaultLocalResolver = (function () {\n    function DefaultLocalResolver() {\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DefaultLocalResolver.prototype.getLocal = function (name) {\n        if (name === EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        return null;\n    };\n    return DefaultLocalResolver;\n}());\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createCurrValueExpr(bindingId) {\n    return variable(\"currVal_\" + bindingId); // fix syntax highlighting: `\n}\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createPreventDefaultVar(bindingId) {\n    return variable(\"pd_\" + bindingId);\n}\n/**\n * @param {?} stmt\n * @return {?}\n */\nfunction convertStmtIntoExpression(stmt) {\n    if (stmt instanceof ExpressionStatement) {\n        return stmt.expr;\n    }\n    else if (stmt instanceof ReturnStatement) {\n        return stmt.value;\n    }\n    return null;\n}\nvar BuiltinFunctionCall = (function (_super) {\n    __extends(BuiltinFunctionCall, _super);\n    /**\n     * @param {?} span\n     * @param {?} args\n     * @param {?} converter\n     */\n    function BuiltinFunctionCall(span, args, converter) {\n        var _this = _super.call(this, span, null, args) || this;\n        _this.args = args;\n        _this.converter = converter;\n        return _this;\n    }\n    return BuiltinFunctionCall;\n}(FunctionCall));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CLASS_ATTR$1 = 'class';\nvar STYLE_ATTR = 'style';\nvar IMPLICIT_TEMPLATE_VAR = '\\$implicit';\nvar ViewCompileResult = (function () {\n    /**\n     * @param {?} statements\n     * @param {?} viewClassVar\n     * @param {?} rendererTypeVar\n     */\n    function ViewCompileResult(statements, viewClassVar, rendererTypeVar) {\n        this.statements = statements;\n        this.viewClassVar = viewClassVar;\n        this.rendererTypeVar = rendererTypeVar;\n    }\n    return ViewCompileResult;\n}());\nvar ViewCompiler = (function () {\n    /**\n     * @param {?} _genConfigNext\n     * @param {?} _schemaRegistry\n     */\n    function ViewCompiler(_genConfigNext, _schemaRegistry) {\n        this._genConfigNext = _genConfigNext;\n        this._schemaRegistry = _schemaRegistry;\n    }\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    ViewCompiler.prototype.compileComponent = function (component, template, styles, usedPipes) {\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ staticQueryIds = findStaticQueryIds(template);\n        var /** @type {?} */ statements = [];\n        var /** @type {?} */ renderComponentVarName = ((undefined));\n        if (!component.isHost) {\n            var /** @type {?} */ template_1 = ((component.template));\n            var /** @type {?} */ customRenderData = [];\n            if (template_1.animations && template_1.animations.length) {\n                customRenderData.push(new LiteralMapEntry('animation', convertValueToOutputAst(template_1.animations), true));\n            }\n            var /** @type {?} */ renderComponentVar = variable(rendererTypeName(component.type.reference));\n            renderComponentVarName = ((renderComponentVar.name));\n            statements.push(renderComponentVar\n                .set(importExpr(createIdentifier(Identifiers.createRendererType2))\n                .callFn([new LiteralMapExpr([\n                    new LiteralMapEntry('encapsulation', literal(template_1.encapsulation)),\n                    new LiteralMapEntry('styles', styles),\n                    new LiteralMapEntry('data', new LiteralMapExpr(customRenderData))\n                ])]))\n                .toDeclStmt(importType(createIdentifier(Identifiers.RendererType2)), [StmtModifier.Final]));\n        }\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder(parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        statements.push.apply(statements, visitor.build());\n        return new ViewCompileResult(statements, visitor.viewName, renderComponentVarName);\n    };\n    return ViewCompiler;\n}());\nViewCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nViewCompiler.ctorParameters = function () { return [\n    { type: CompilerConfig, },\n    { type: ElementSchemaRegistry, },\n]; };\nvar LOG_VAR = variable('l');\nvar VIEW_VAR = variable('v');\nvar CHECK_VAR = variable('ck');\nvar COMP_VAR = variable('co');\nvar EVENT_NAME_VAR = variable('en');\nvar ALLOW_DEFAULT_VAR = variable(\"ad\");\nvar ViewBuilder = (function () {\n    /**\n     * @param {?} parent\n     * @param {?} component\n     * @param {?} embeddedViewIndex\n     * @param {?} usedPipes\n     * @param {?} staticQueryIds\n     * @param {?} viewBuilderFactory\n     */\n    function ViewBuilder(parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory) {\n        this.parent = parent;\n        this.component = component;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.usedPipes = usedPipes;\n        this.staticQueryIds = staticQueryIds;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.nodes = [];\n        this.purePipeNodeIndices = Object.create(null);\n        this.refNodeIndices = Object.create(null);\n        this.variables = [];\n        this.children = [];\n        // TODO(tbosch): The old view compiler used to use an `any` type\n        // for the context in any embedded view. We keep this behaivor for now\n        // to be able to introduce the new view compiler without too many errors.\n        this.compType =\n            this.embeddedViewIndex > 0 ? DYNAMIC_TYPE : importType(this.component.type);\n    }\n    Object.defineProperty(ViewBuilder.prototype, \"viewName\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return viewClassName(this.component.type.reference, this.embeddedViewIndex);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = function (variables, astNodes) {\n        var _this = this;\n        this.variables = variables;\n        // create the pipes for the pure pipes immediately, so that we know their indices.\n        if (!this.parent) {\n            this.usedPipes.forEach(function (pipe) {\n                if (pipe.pure) {\n                    _this.purePipeNodeIndices[pipe.name] = _this._createPipe(null, pipe);\n                }\n            });\n        }\n        if (!this.parent) {\n            var /** @type {?} */ queryIds_1 = staticViewQueryIds(this.staticQueryIds);\n            this.component.viewQueries.forEach(function (query, queryIndex) {\n                // Note: queries start with id 1 so we can use the number in a Bloom filter!\n                var /** @type {?} */ queryId = queryIndex + 1;\n                var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n                var /** @type {?} */ flags = 134217728 /* TypeViewQuery */ | calcStaticDynamicQueryFlags(queryIds_1, queryId, query.first);\n                _this.nodes.push(function () { return ({\n                    sourceSpan: null,\n                    nodeFlags: flags,\n                    nodeDef: importExpr(createIdentifier(Identifiers.queryDef)).callFn([\n                        literal(flags), literal(queryId),\n                        new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType))])\n                    ])\n                }); });\n            });\n        }\n        templateVisitAll(this, astNodes);\n        if (this.parent && (astNodes.length === 0 || needsAdditionalRootNode(astNodes))) {\n            // if the view is an embedded view, then we need to add an additional root node in some cases\n            this.nodes.push(function () { return ({\n                sourceSpan: null,\n                nodeFlags: 1 /* TypeElement */,\n                nodeDef: importExpr(createIdentifier(Identifiers.anchorDef)).callFn([\n                    literal(0 /* None */), NULL_EXPR, NULL_EXPR, literal(0)\n                ])\n            }); });\n        }\n    };\n    /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = function (targetStatements) {\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(targetStatements); });\n        var _a = this._createNodeExpressions(), updateRendererStmts = _a.updateRendererStmts, updateDirectivesStmts = _a.updateDirectivesStmts, nodeDefExprs = _a.nodeDefExprs;\n        var /** @type {?} */ updateRendererFn = this._createUpdateFn(updateRendererStmts);\n        var /** @type {?} */ updateDirectivesFn = this._createUpdateFn(updateDirectivesStmts);\n        var /** @type {?} */ viewFlags = 0;\n        if (!this.parent && this.component.changeDetection === _angular_core.ChangeDetectionStrategy.OnPush) {\n            viewFlags |= 2 /* OnPush */;\n        }\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(this.viewName, [new FnParam(/** @type {?} */ ((LOG_VAR.name)))], [new ReturnStatement(importExpr(createIdentifier(Identifiers.viewDef)).callFn([\n                literal(viewFlags),\n                literalArr(nodeDefExprs),\n                updateDirectivesFn,\n                updateRendererFn,\n            ]))], importType(createIdentifier(Identifiers.ViewDefinition)));\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    ViewBuilder.prototype._createUpdateFn = function (updateStmts) {\n        var /** @type {?} */ updateFn;\n        if (updateStmts.length > 0) {\n            var /** @type {?} */ preStmts = [];\n            if (!this.component.isHost && findReadVarNames(updateStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            updateFn = fn([\n                new FnParam(/** @type {?} */ ((CHECK_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE)\n            ], preStmts.concat(updateStmts), INFERRED_TYPE);\n        }\n        else {\n            updateFn = NULL_EXPR;\n        }\n        return updateFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = function (ast, context) {\n        // ngContentDef(ngContentIndex: number, index: number): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 8 /* TypeNgContent */,\n            nodeDef: importExpr(createIdentifier(Identifiers.ngContentDef)).callFn([\n                literal(ast.ngContentIndex), literal(ast.index)\n            ])\n        }); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = function (ast, context) {\n        // textDef(ngContentIndex: number, constants: string[]): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 2 /* TypeText */,\n            nodeDef: importExpr(createIdentifier(Identifiers.textDef)).callFn([\n                literal(ast.ngContentIndex), literalArr([literal(ast.value)])\n            ])\n        }); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var /** @type {?} */ astWithSource = (ast.value);\n        var /** @type {?} */ inter = (astWithSource.ast);\n        var /** @type {?} */ updateRendererExpressions = inter.expressions.map(function (expr, bindingIndex) { return _this._preprocessUpdateExpression({ nodeIndex: nodeIndex, bindingIndex: bindingIndex, sourceSpan: ast.sourceSpan, context: COMP_VAR, value: expr }); });\n        // textDef(ngContentIndex: number, constants: string[]): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 2 /* TypeText */,\n            nodeDef: importExpr(createIdentifier(Identifiers.textDef)).callFn([\n                literal(ast.ngContentIndex), literalArr(inter.strings.map(function (s) { return literal(s); }))\n            ]),\n            updateRenderer: updateRendererExpressions\n        }); };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, queryMatchesExpr = _a.queryMatchesExpr, hostEvents = _a.hostEvents;\n        var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n        this.children.push(childVisitor);\n        childVisitor.visitAll(ast.variables, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        // anchorDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n        //   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:\n        //   ViewDefinitionFactory): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 1 /* TypeElement */ | flags,\n            nodeDef: importExpr(createIdentifier(Identifiers.anchorDef)).callFn([\n                literal(flags),\n                queryMatchesExpr,\n                literal(ast.ngContentIndex),\n                literal(childCount),\n                _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                variable(childVisitor.viewName),\n            ])\n        }); };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        // Using a null element name creates an anchor.\n        var /** @type {?} */ elName = isNgContainer(ast.name) ? null : ast.name;\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, usedEvents = _a.usedEvents, queryMatchesExpr = _a.queryMatchesExpr, dirHostBindings = _a.hostBindings, hostEvents = _a.hostEvents;\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        if (elName) {\n            var /** @type {?} */ hostBindings = ast.inputs\n                .map(function (inputAst) { return ({\n                context: /** @type {?} */ (COMP_VAR),\n                inputAst: inputAst,\n                dirAst: /** @type {?} */ (null),\n            }); })\n                .concat(dirHostBindings);\n            if (hostBindings.length) {\n                updateRendererExpressions =\n                    hostBindings.map(function (hostBinding, bindingIndex) { return _this._preprocessUpdateExpression({\n                        context: hostBinding.context,\n                        nodeIndex: nodeIndex,\n                        bindingIndex: bindingIndex,\n                        sourceSpan: hostBinding.inputAst.sourceSpan,\n                        value: hostBinding.inputAst.value\n                    }); });\n                inputDefs = hostBindings.map(function (hostBinding) { return elementBindingDef(hostBinding.inputAst, hostBinding.dirAst); });\n            }\n            outputDefs = usedEvents.map(function (_a) {\n                var target = _a[0], eventName = _a[1];\n                return literalArr([literal(target), literal(eventName)]);\n            });\n        }\n        templateVisitAll(this, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var /** @type {?} */ compAst = ast.directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        var /** @type {?} */ compRendererType = NULL_EXPR;\n        var /** @type {?} */ compView = NULL_EXPR;\n        if (compAst) {\n            compView = importExpr({ reference: compAst.directive.componentViewType });\n            compRendererType = importExpr({ reference: compAst.directive.rendererType });\n        }\n        // elementDef(\n        //   flags: NodeFlags, matchedQueriesDsl: [string | number, QueryValueType][],\n        //   ngContentIndex: number, childCount: number, namespaceAndName: string,\n        //   fixedAttrs: [string, string][] = [],\n        //   bindings?: [BindingFlags, string, string | SecurityContext][],\n        //   outputs?: ([OutputType.ElementOutput | OutputType.DirectiveHostOutput, string, string])[],\n        //   handleEvent?: ElementHandleEventFn,\n        //   componentView?: () => ViewDefinition, componentRendererType?: RendererType2): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 1 /* TypeElement */ | flags,\n            nodeDef: importExpr(createIdentifier(Identifiers.elementDef)).callFn([\n                literal(flags),\n                queryMatchesExpr,\n                literal(ast.ngContentIndex),\n                literal(childCount),\n                literal(elName),\n                elName ? fixedAttrsDef(ast) : NULL_EXPR,\n                inputDefs.length ? literalArr(inputDefs) : NULL_EXPR,\n                outputDefs.length ? literalArr(outputDefs) : NULL_EXPR,\n                _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                compView,\n                compRendererType,\n            ]),\n            updateRenderer: updateRendererExpressions\n        }); };\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitElementOrTemplate = function (nodeIndex, ast) {\n        var _this = this;\n        var /** @type {?} */ flags = 0;\n        if (ast.hasViewContainer) {\n            flags |= 16777216 /* EmbeddedViews */;\n        }\n        var /** @type {?} */ usedEvents = new Map();\n        ast.outputs.forEach(function (event) {\n            var _a = elementEventNameAndTarget(event, null), name = _a.name, target = _a.target;\n            usedEvents.set(_angular_core.ɵelementEventFullName(target, name), [target, name]);\n        });\n        ast.directives.forEach(function (dirAst) {\n            dirAst.hostEvents.forEach(function (event) {\n                var _a = elementEventNameAndTarget(event, dirAst), name = _a.name, target = _a.target;\n                usedEvents.set(_angular_core.ɵelementEventFullName(target, name), [target, name]);\n            });\n        });\n        var /** @type {?} */ hostBindings = [];\n        var /** @type {?} */ hostEvents = [];\n        var /** @type {?} */ componentFactoryResolverProvider = createComponentFactoryResolver(ast.directives);\n        if (componentFactoryResolverProvider) {\n            this._visitProvider(componentFactoryResolverProvider, ast.queryMatches);\n        }\n        ast.providers.forEach(function (providerAst, providerIndex) {\n            var /** @type {?} */ dirAst = ((undefined));\n            var /** @type {?} */ dirIndex = ((undefined));\n            ast.directives.forEach(function (localDirAst, i) {\n                if (localDirAst.directive.type.reference === tokenReference(providerAst.token)) {\n                    dirAst = localDirAst;\n                    dirIndex = i;\n                }\n            });\n            if (dirAst) {\n                var _a = _this._visitDirective(providerAst, dirAst, dirIndex, nodeIndex, ast.references, ast.queryMatches, usedEvents, /** @type {?} */ ((_this.staticQueryIds.get(/** @type {?} */ (ast))))), dirHostBindings = _a.hostBindings, dirHostEvents = _a.hostEvents;\n                hostBindings.push.apply(hostBindings, dirHostBindings);\n                hostEvents.push.apply(hostEvents, dirHostEvents);\n            }\n            else {\n                _this._visitProvider(providerAst, ast.queryMatches);\n            }\n        });\n        var /** @type {?} */ queryMatchExprs = [];\n        ast.queryMatches.forEach(function (match) {\n            var /** @type {?} */ valueType = ((undefined));\n            if (tokenReference(match.value) === resolveIdentifier(Identifiers.ElementRef)) {\n                valueType = 0 /* ElementRef */;\n            }\n            else if (tokenReference(match.value) === resolveIdentifier(Identifiers.ViewContainerRef)) {\n                valueType = 3 /* ViewContainerRef */;\n            }\n            else if (tokenReference(match.value) === resolveIdentifier(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(valueType)]));\n            }\n        });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ valueType = ((undefined));\n            if (!ref.value) {\n                valueType = 1 /* RenderElement */;\n            }\n            else if (tokenReference(ref.value) === resolveIdentifier(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(valueType)]));\n            }\n        });\n        ast.outputs.forEach(function (outputAst) {\n            hostEvents.push({ context: COMP_VAR, eventAst: outputAst, dirAst: /** @type {?} */ ((null)) });\n        });\n        return {\n            flags: flags,\n            usedEvents: Array.from(usedEvents.values()),\n            queryMatchesExpr: queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n            hostBindings: hostBindings,\n            hostEvents: hostEvents\n        };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitDirective = function (providerAst, dirAst, directiveIndex, elementNodeIndex, refs, queryMatches, usedEvents, queryIds) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        dirAst.directive.queries.forEach(function (query, queryIndex) {\n            var /** @type {?} */ queryId = dirAst.contentQueryStartId + queryIndex;\n            var /** @type {?} */ flags = 67108864 /* TypeContentQuery */ | calcStaticDynamicQueryFlags(queryIds, queryId, query.first);\n            var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n            _this.nodes.push(function () { return ({\n                sourceSpan: dirAst.sourceSpan,\n                nodeFlags: flags,\n                nodeDef: importExpr(createIdentifier(Identifiers.queryDef)).callFn([\n                    literal(flags), literal(queryId),\n                    new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType))])\n                ]),\n            }); });\n        });\n        // Note: the operation below might also create new nodeDefs,\n        // but we don't want them to be a child of a directive,\n        // as they might be a provider/pipe on their own.\n        // I.e. we only allow queries as children of directives nodes.\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var _a = this._visitProviderOrDirective(providerAst, queryMatches), flags = _a.flags, queryMatchExprs = _a.queryMatchExprs, providerExpr = _a.providerExpr, depsExpr = _a.depsExpr;\n        refs.forEach(function (ref) {\n            if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(4 /* Provider */)]));\n            }\n        });\n        if (dirAst.directive.isComponent) {\n            flags |= 32768 /* Component */;\n        }\n        var /** @type {?} */ inputDefs = dirAst.inputs.map(function (inputAst, inputIndex) {\n            var /** @type {?} */ mapValue = literalArr([literal(inputIndex), literal(inputAst.directiveName)]);\n            // Note: it's important to not quote the key so that we can capture renames by minifiers!\n            return new LiteralMapEntry(inputAst.directiveName, mapValue, false);\n        });\n        var /** @type {?} */ outputDefs = [];\n        var /** @type {?} */ dirMeta = dirAst.directive;\n        Object.keys(dirMeta.outputs).forEach(function (propName) {\n            var /** @type {?} */ eventName = dirMeta.outputs[propName];\n            if (usedEvents.has(eventName)) {\n                // Note: it's important to not quote the key so that we can capture renames by minifiers!\n                outputDefs.push(new LiteralMapEntry(propName, literal(eventName), false));\n            }\n        });\n        var /** @type {?} */ updateDirectiveExpressions = [];\n        if (dirAst.inputs.length || (flags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0) {\n            updateDirectiveExpressions =\n                dirAst.inputs.map(function (input, bindingIndex) { return _this._preprocessUpdateExpression({\n                    nodeIndex: nodeIndex,\n                    bindingIndex: bindingIndex,\n                    sourceSpan: input.sourceSpan,\n                    context: COMP_VAR,\n                    value: input.value\n                }); });\n        }\n        var /** @type {?} */ dirContextExpr = importExpr(createIdentifier(Identifiers.nodeValue)).callFn([\n            VIEW_VAR, literal(nodeIndex)\n        ]);\n        var /** @type {?} */ hostBindings = dirAst.hostProperties.map(function (inputAst) { return ({\n            context: dirContextExpr,\n            dirAst: dirAst,\n            inputAst: inputAst,\n        }); });\n        var /** @type {?} */ hostEvents = dirAst.hostEvents.map(function (hostEventAst) { return ({\n            context: dirContextExpr,\n            eventAst: hostEventAst, dirAst: dirAst,\n        }); });\n        // directiveDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], childCount: number, ctor:\n        //   any,\n        //   deps: ([DepFlags, any] | any)[], props?: {[name: string]: [number, string]},\n        //   outputs?: {[name: string]: string}, component?: () => ViewDefinition): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: dirAst.sourceSpan,\n            nodeFlags: 16384 /* TypeDirective */ | flags,\n            nodeDef: importExpr(createIdentifier(Identifiers.directiveDef)).callFn([\n                literal(flags), queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n                literal(childCount), providerExpr, depsExpr,\n                inputDefs.length ? new LiteralMapExpr(inputDefs) : NULL_EXPR,\n                outputDefs.length ? new LiteralMapExpr(outputDefs) : NULL_EXPR\n            ]),\n            updateDirectives: updateDirectiveExpressions,\n            directive: dirAst.directive.type,\n        }); };\n        return { hostBindings: hostBindings, hostEvents: hostEvents };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProvider = function (providerAst, queryMatches) {\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        var _a = this._visitProviderOrDirective(providerAst, queryMatches), flags = _a.flags, queryMatchExprs = _a.queryMatchExprs, providerExpr = _a.providerExpr, depsExpr = _a.depsExpr;\n        // providerDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,\n        //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: providerAst.sourceSpan,\n            nodeFlags: flags,\n            nodeDef: importExpr(createIdentifier(Identifiers.providerDef)).callFn([\n                literal(flags), queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n                tokenExpr(providerAst.token), providerExpr, depsExpr\n            ])\n        }); };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProviderOrDirective = function (providerAst, queryMatches) {\n        var /** @type {?} */ flags = 0;\n        if (!providerAst.eager) {\n            flags |= 4096 /* LazyProvider */;\n        }\n        if (providerAst.providerType === ProviderAstType.PrivateService) {\n            flags |= 8192 /* PrivateProvider */;\n        }\n        providerAst.lifecycleHooks.forEach(function (lifecycleHook) {\n            // for regular providers, we only support ngOnDestroy\n            if (lifecycleHook === _angular_core.ɵLifecycleHooks.OnDestroy ||\n                providerAst.providerType === ProviderAstType.Directive ||\n                providerAst.providerType === ProviderAstType.Component) {\n                flags |= lifecycleHookToNodeFlag(lifecycleHook);\n            }\n        });\n        var /** @type {?} */ queryMatchExprs = [];\n        queryMatches.forEach(function (match) {\n            if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(4 /* Provider */)]));\n            }\n        });\n        var _a = providerDef(providerAst), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, providerType = _a.flags;\n        return { flags: flags | providerType, queryMatchExprs: queryMatchExprs, providerExpr: providerExpr, depsExpr: depsExpr };\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        var /** @type {?} */ currViewExpr = VIEW_VAR;\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent,\n            currViewExpr = currViewExpr.prop('parent').cast(DYNAMIC_TYPE)) {\n            // check references\n            var /** @type {?} */ refNodeIndex = currBuilder.refNodeIndices[name];\n            if (refNodeIndex != null) {\n                return importExpr(createIdentifier(Identifiers.nodeValue)).callFn([\n                    currViewExpr, literal(refNodeIndex)\n                ]);\n            }\n            // check variables\n            var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n            if (varAst) {\n                var /** @type {?} */ varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n                return currViewExpr.prop('context').prop(varValue);\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype.createLiteralArrayConverter = function (sourceSpan, argCount) {\n        if (argCount === 0) {\n            var /** @type {?} */ valueExpr_1 = importExpr(createIdentifier(Identifiers.EMPTY_ARRAY));\n            return function () { return valueExpr_1; };\n        }\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // pureArrayDef(argCount: number): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: sourceSpan,\n            nodeFlags: 32 /* TypePureArray */,\n            nodeDef: importExpr(createIdentifier(Identifiers.pureArrayDef)).callFn([literal(argCount)])\n        }); });\n        return function (args) { return callCheckStmt(nodeIndex, args); };\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    ViewBuilder.prototype.createLiteralMapConverter = function (sourceSpan, keys) {\n        if (keys.length === 0) {\n            var /** @type {?} */ valueExpr_2 = importExpr(createIdentifier(Identifiers.EMPTY_MAP));\n            return function () { return valueExpr_2; };\n        }\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // function pureObjectDef(propertyNames: string[]): NodeDef\n        this.nodes.push(function () { return ({\n            sourceSpan: sourceSpan,\n            nodeFlags: 64 /* TypePureObject */,\n            nodeDef: importExpr(createIdentifier(Identifiers.pureObjectDef))\n                .callFn([literalArr(keys.map(function (key) { return literal(key); }))])\n        }); });\n        return function (args) { return callCheckStmt(nodeIndex, args); };\n    };\n    /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype.createPipeConverter = function (expression, name, argCount) {\n        var /** @type {?} */ pipe = ((this.usedPipes.find(function (pipeSummary) { return pipeSummary.name === name; })));\n        if (pipe.pure) {\n            var /** @type {?} */ nodeIndex_1 = this.nodes.length;\n            // function purePipeDef(argCount: number): NodeDef;\n            this.nodes.push(function () { return ({\n                sourceSpan: expression.sourceSpan,\n                nodeFlags: 128 /* TypePurePipe */,\n                nodeDef: importExpr(createIdentifier(Identifiers.purePipeDef))\n                    .callFn([literal(argCount)])\n            }); });\n            // find underlying pipe in the component view\n            var /** @type {?} */ compViewExpr = VIEW_VAR;\n            var /** @type {?} */ compBuilder = this;\n            while (compBuilder.parent) {\n                compBuilder = compBuilder.parent;\n                compViewExpr = compViewExpr.prop('parent').cast(DYNAMIC_TYPE);\n            }\n            var /** @type {?} */ pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n            var /** @type {?} */ pipeValueExpr_1 = importExpr(createIdentifier(Identifiers.nodeValue)).callFn([\n                compViewExpr, literal(pipeNodeIndex)\n            ]);\n            return function (args) { return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, callCheckStmt(nodeIndex_1, [pipeValueExpr_1].concat(args))); };\n        }\n        else {\n            var /** @type {?} */ nodeIndex = this._createPipe(expression.sourceSpan, pipe);\n            var /** @type {?} */ nodeValueExpr_1 = importExpr(createIdentifier(Identifiers.nodeValue)).callFn([\n                VIEW_VAR, literal(nodeIndex)\n            ]);\n            return function (args) { return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, nodeValueExpr_1.callMethod('transform', args)); };\n        }\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipe = function (sourceSpan, pipe) {\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        var /** @type {?} */ flags = 0;\n        pipe.type.lifecycleHooks.forEach(function (lifecycleHook) {\n            // for pipes, we only support ngOnDestroy\n            if (lifecycleHook === _angular_core.ɵLifecycleHooks.OnDestroy) {\n                flags |= lifecycleHookToNodeFlag(lifecycleHook);\n            }\n        });\n        var /** @type {?} */ depExprs = pipe.type.diDeps.map(depDef);\n        // function pipeDef(\n        //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n        this.nodes.push(function () { return ({\n            sourceSpan: sourceSpan,\n            nodeFlags: 16 /* TypePipe */,\n            nodeDef: importExpr(createIdentifier(Identifiers.pipeDef)).callFn([\n                literal(flags), importExpr(pipe.type), literalArr(depExprs)\n            ])\n        }); });\n        return nodeIndex;\n    };\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype._preprocessUpdateExpression = function (expression) {\n        var _this = this;\n        return {\n            nodeIndex: expression.nodeIndex,\n            bindingIndex: expression.bindingIndex,\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) { return _this.createLiteralArrayConverter(expression.sourceSpan, argCount); },\n                createLiteralMapConverter: function (keys) { return _this.createLiteralMapConverter(expression.sourceSpan, keys); },\n                createPipeConverter: function (name, argCount) { return _this.createPipeConverter(expression, name, argCount); }\n            }, expression.value)\n        };\n    };\n    /**\n     * @return {?}\n     */\n    ViewBuilder.prototype._createNodeExpressions = function () {\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ updateBindingCount = 0;\n        var /** @type {?} */ updateRendererStmts = [];\n        var /** @type {?} */ updateDirectivesStmts = [];\n        var /** @type {?} */ nodeDefExprs = this.nodes.map(function (factory, nodeIndex) {\n            var _a = factory(), nodeDef = _a.nodeDef, nodeFlags = _a.nodeFlags, updateDirectives = _a.updateDirectives, updateRenderer = _a.updateRenderer, sourceSpan = _a.sourceSpan;\n            if (updateRenderer) {\n                updateRendererStmts.push.apply(updateRendererStmts, createUpdateStatements(nodeIndex, sourceSpan, updateRenderer, false));\n            }\n            if (updateDirectives) {\n                updateDirectivesStmts.push.apply(updateDirectivesStmts, createUpdateStatements(nodeIndex, sourceSpan, updateDirectives, (nodeFlags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0));\n            }\n            // We use a comma expression to call the log function before\n            // the nodeDef function, but still use the result of the nodeDef function\n            // as the value.\n            // Note: We only add the logger to elements / text nodes,\n            // so we don't generate too much code.\n            var /** @type {?} */ logWithNodeDef = nodeFlags & 3 /* CatRenderNode */ ?\n                new CommaExpr([LOG_VAR.callFn([]).callFn([]), nodeDef]) :\n                nodeDef;\n            return applySourceSpanToExpressionIfNeeded(logWithNodeDef, sourceSpan);\n        });\n        return { updateRendererStmts: updateRendererStmts, updateDirectivesStmts: updateDirectivesStmts, nodeDefExprs: nodeDefExprs };\n        /**\n         * @param {?} nodeIndex\n         * @param {?} sourceSpan\n         * @param {?} expressions\n         * @param {?} allowEmptyExprs\n         * @return {?}\n         */\n        function createUpdateStatements(nodeIndex, sourceSpan, expressions, allowEmptyExprs) {\n            var /** @type {?} */ updateStmts = [];\n            var /** @type {?} */ exprs = expressions.map(function (_a) {\n                var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n                var /** @type {?} */ bindingId = \"\" + updateBindingCount++;\n                var /** @type {?} */ nameResolver = context === COMP_VAR ? self : null;\n                var _b = convertPropertyBinding(nameResolver, context, value, bindingId), stmts = _b.stmts, currValExpr = _b.currValExpr;\n                updateStmts.push.apply(updateStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n                return applySourceSpanToExpressionIfNeeded(currValExpr, sourceSpan);\n            });\n            if (expressions.length || allowEmptyExprs) {\n                updateStmts.push(applySourceSpanToStatementIfNeeded(callCheckStmt(nodeIndex, exprs).toStmt(), sourceSpan));\n            }\n            return updateStmts;\n        }\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    ViewBuilder.prototype._createElementHandleEventFn = function (nodeIndex, handlers) {\n        var _this = this;\n        var /** @type {?} */ handleEventStmts = [];\n        var /** @type {?} */ handleEventBindingCount = 0;\n        handlers.forEach(function (_a) {\n            var context = _a.context, eventAst = _a.eventAst, dirAst = _a.dirAst;\n            var /** @type {?} */ bindingId = \"\" + handleEventBindingCount++;\n            var /** @type {?} */ nameResolver = context === COMP_VAR ? _this : null;\n            var _b = convertActionBinding(nameResolver, context, eventAst.handler, bindingId), stmts = _b.stmts, allowDefault = _b.allowDefault;\n            var /** @type {?} */ trueStmts = stmts;\n            if (allowDefault) {\n                trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n            }\n            var _c = elementEventNameAndTarget(eventAst, dirAst), eventTarget = _c.target, eventName = _c.name;\n            var /** @type {?} */ fullEventName = _angular_core.ɵelementEventFullName(eventTarget, eventName);\n            handleEventStmts.push(applySourceSpanToStatementIfNeeded(new IfStmt(literal(fullEventName).identical(EVENT_NAME_VAR), trueStmts), eventAst.sourceSpan));\n        });\n        var /** @type {?} */ handleEventFn;\n        if (handleEventStmts.length > 0) {\n            var /** @type {?} */ preStmts = [ALLOW_DEFAULT_VAR.set(literal(true)).toDeclStmt(BOOL_TYPE)];\n            if (!this.component.isHost && findReadVarNames(handleEventStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            handleEventFn = fn([\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EVENT_NAME_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EventHandlerVars.event.name)), INFERRED_TYPE)\n            ], preStmts.concat(handleEventStmts, [new ReturnStatement(ALLOW_DEFAULT_VAR)]), INFERRED_TYPE);\n        }\n        else {\n            handleEventFn = NULL_EXPR;\n        }\n        return handleEventFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = function (ast, context) { };\n    return ViewBuilder;\n}());\n/**\n * @param {?} providerAst\n * @return {?}\n */\nfunction providerDef(providerAst) {\n    return providerAst.multiProvider ?\n        multiProviderDef(providerAst.providers) :\n        singleProviderDef(providerAst.providerType, providerAst.providers[0]);\n}\n/**\n * @param {?} providers\n * @return {?}\n */\nfunction multiProviderDef(providers) {\n    var /** @type {?} */ allDepDefs = [];\n    var /** @type {?} */ allParams = [];\n    var /** @type {?} */ exprs = providers.map(function (provider, providerIndex) {\n        var /** @type {?} */ expr;\n        if (provider.useClass) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useClass.diDeps);\n            expr = importExpr(provider.useClass).instantiate(depExprs);\n        }\n        else if (provider.useFactory) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useFactory.diDeps);\n            expr = importExpr(provider.useFactory).callFn(depExprs);\n        }\n        else if (provider.useExisting) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, [{ token: provider.useExisting }]);\n            expr = depExprs[0];\n        }\n        else {\n            expr = convertValueToOutputAst(provider.useValue);\n        }\n        return expr;\n    });\n    var /** @type {?} */ providerExpr = fn(allParams, [new ReturnStatement(literalArr(exprs))], INFERRED_TYPE);\n    return { providerExpr: providerExpr, flags: 1024 /* TypeFactoryProvider */, depsExpr: literalArr(allDepDefs) };\n    /**\n     * @param {?} providerIndex\n     * @param {?} deps\n     * @return {?}\n     */\n    function convertDeps(providerIndex, deps) {\n        return deps.map(function (dep, depIndex) {\n            var /** @type {?} */ paramName = \"p\" + providerIndex + \"_\" + depIndex;\n            allParams.push(new FnParam(paramName, DYNAMIC_TYPE));\n            allDepDefs.push(depDef(dep));\n            return variable(paramName);\n        });\n    }\n}\n/**\n * @param {?} providerType\n * @param {?} providerMeta\n * @return {?}\n */\nfunction singleProviderDef(providerType, providerMeta) {\n    var /** @type {?} */ providerExpr;\n    var /** @type {?} */ flags;\n    var /** @type {?} */ deps;\n    if (providerType === ProviderAstType.Directive || providerType === ProviderAstType.Component) {\n        providerExpr = importExpr(/** @type {?} */ ((providerMeta.useClass)));\n        flags = 16384 /* TypeDirective */;\n        deps = providerMeta.deps || ((providerMeta.useClass)).diDeps;\n    }\n    else {\n        if (providerMeta.useClass) {\n            providerExpr = importExpr(providerMeta.useClass);\n            flags = 512 /* TypeClassProvider */;\n            deps = providerMeta.deps || providerMeta.useClass.diDeps;\n        }\n        else if (providerMeta.useFactory) {\n            providerExpr = importExpr(providerMeta.useFactory);\n            flags = 1024 /* TypeFactoryProvider */;\n            deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n        }\n        else if (providerMeta.useExisting) {\n            providerExpr = NULL_EXPR;\n            flags = 2048 /* TypeUseExistingProvider */;\n            deps = [{ token: providerMeta.useExisting }];\n        }\n        else {\n            providerExpr = convertValueToOutputAst(providerMeta.useValue);\n            flags = 256 /* TypeValueProvider */;\n            deps = [];\n        }\n    }\n    var /** @type {?} */ depsExpr = literalArr(deps.map(function (dep) { return depDef(dep); }));\n    return { providerExpr: providerExpr, flags: flags, depsExpr: depsExpr };\n}\n/**\n * @param {?} tokenMeta\n * @return {?}\n */\nfunction tokenExpr(tokenMeta) {\n    return tokenMeta.identifier ? importExpr(tokenMeta.identifier) : literal(tokenMeta.value);\n}\n/**\n * @param {?} dep\n * @return {?}\n */\nfunction depDef(dep) {\n    // Note: the following fields have already been normalized out by provider_analyzer:\n    // - isAttribute, isSelf, isHost\n    var /** @type {?} */ expr = dep.isValue ? convertValueToOutputAst(dep.value) : tokenExpr(/** @type {?} */ ((dep.token)));\n    var /** @type {?} */ flags = 0;\n    if (dep.isSkipSelf) {\n        flags |= 1 /* SkipSelf */;\n    }\n    if (dep.isOptional) {\n        flags |= 2 /* Optional */;\n    }\n    if (dep.isValue) {\n        flags |= 8 /* Value */;\n    }\n    return flags === 0 /* None */ ? expr : literalArr([literal(flags), expr]);\n}\n/**\n * @param {?} astNodes\n * @return {?}\n */\nfunction needsAdditionalRootNode(astNodes) {\n    var /** @type {?} */ lastAstNode = astNodes[astNodes.length - 1];\n    if (lastAstNode instanceof EmbeddedTemplateAst) {\n        return lastAstNode.hasViewContainer;\n    }\n    if (lastAstNode instanceof ElementAst) {\n        if (isNgContainer(lastAstNode.name) && lastAstNode.children.length) {\n            return needsAdditionalRootNode(lastAstNode.children);\n        }\n        return lastAstNode.hasViewContainer;\n    }\n    return lastAstNode instanceof NgContentAst;\n}\n/**\n * @param {?} lifecycleHook\n * @return {?}\n */\nfunction lifecycleHookToNodeFlag(lifecycleHook) {\n    var /** @type {?} */ nodeFlag = 0;\n    switch (lifecycleHook) {\n        case _angular_core.ɵLifecycleHooks.AfterContentChecked:\n            nodeFlag = 2097152 /* AfterContentChecked */;\n            break;\n        case _angular_core.ɵLifecycleHooks.AfterContentInit:\n            nodeFlag = 1048576 /* AfterContentInit */;\n            break;\n        case _angular_core.ɵLifecycleHooks.AfterViewChecked:\n            nodeFlag = 8388608 /* AfterViewChecked */;\n            break;\n        case _angular_core.ɵLifecycleHooks.AfterViewInit:\n            nodeFlag = 4194304 /* AfterViewInit */;\n            break;\n        case _angular_core.ɵLifecycleHooks.DoCheck:\n            nodeFlag = 262144 /* DoCheck */;\n            break;\n        case _angular_core.ɵLifecycleHooks.OnChanges:\n            nodeFlag = 524288 /* OnChanges */;\n            break;\n        case _angular_core.ɵLifecycleHooks.OnDestroy:\n            nodeFlag = 131072 /* OnDestroy */;\n            break;\n        case _angular_core.ɵLifecycleHooks.OnInit:\n            nodeFlag = 65536 /* OnInit */;\n            break;\n    }\n    return nodeFlag;\n}\n/**\n * @param {?} inputAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementBindingDef(inputAst, dirAst) {\n    switch (inputAst.type) {\n        case PropertyBindingType.Attribute:\n            return literalArr([\n                literal(1 /* TypeElementAttribute */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Property:\n            return literalArr([\n                literal(8 /* TypeProperty */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Animation:\n            var /** @type {?} */ bindingType = 8 /* TypeProperty */ |\n                (dirAst && dirAst.directive.isComponent ? 32 /* SyntheticHostProperty */ :\n                    16 /* SyntheticProperty */);\n            return literalArr([\n                literal(bindingType), literal('@' + inputAst.name), literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Class:\n            return literalArr([literal(2 /* TypeElementClass */), literal(inputAst.name), NULL_EXPR]);\n        case PropertyBindingType.Style:\n            return literalArr([\n                literal(4 /* TypeElementStyle */), literal(inputAst.name), literal(inputAst.unit)\n            ]);\n    }\n}\n/**\n * @param {?} elementAst\n * @return {?}\n */\nfunction fixedAttrsDef(elementAst) {\n    var /** @type {?} */ mapResult = Object.create(null);\n    elementAst.attrs.forEach(function (attrAst) { mapResult[attrAst.name] = attrAst.value; });\n    elementAst.directives.forEach(function (dirAst) {\n        Object.keys(dirAst.directive.hostAttributes).forEach(function (name) {\n            var /** @type {?} */ value = dirAst.directive.hostAttributes[name];\n            var /** @type {?} */ prevValue = mapResult[name];\n            mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n        });\n    });\n    // Note: We need to sort to get a defined output order\n    // for tests and for caching generated artifacts...\n    return literalArr(Object.keys(mapResult).sort().map(function (attrName) { return literalArr([literal(attrName), literal(mapResult[attrName])]); }));\n}\n/**\n * @param {?} attrName\n * @param {?} attrValue1\n * @param {?} attrValue2\n * @return {?}\n */\nfunction mergeAttributeValue(attrName, attrValue1, attrValue2) {\n    if (attrName == CLASS_ATTR$1 || attrName == STYLE_ATTR) {\n        return attrValue1 + \" \" + attrValue2;\n    }\n    else {\n        return attrValue2;\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} exprs\n * @return {?}\n */\nfunction callCheckStmt(nodeIndex, exprs) {\n    if (exprs.length > 10) {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(1 /* Dynamic */), literalArr(exprs)]);\n    }\n    else {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(0 /* Inline */)].concat(exprs));\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} bindingIdx\n * @param {?} expr\n * @return {?}\n */\nfunction callUnwrapValue(nodeIndex, bindingIdx, expr) {\n    return importExpr(createIdentifier(Identifiers.unwrapValue)).callFn([\n        VIEW_VAR, literal(nodeIndex), literal(bindingIdx), expr\n    ]);\n}\n/**\n * @param {?} nodes\n * @param {?=} result\n * @return {?}\n */\nfunction findStaticQueryIds(nodes, result) {\n    if (result === void 0) { result = new Map(); }\n    nodes.forEach(function (node) {\n        var /** @type {?} */ staticQueryIds = new Set();\n        var /** @type {?} */ dynamicQueryIds = new Set();\n        var /** @type {?} */ queryMatches = ((undefined));\n        if (node instanceof ElementAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        else if (node instanceof EmbeddedTemplateAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        if (queryMatches) {\n            queryMatches.forEach(function (match) { return staticQueryIds.add(match.queryId); });\n        }\n        dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n        result.set(node, { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds });\n    });\n    return result;\n}\n/**\n * @param {?} nodeStaticQueryIds\n * @return {?}\n */\nfunction staticViewQueryIds(nodeStaticQueryIds) {\n    var /** @type {?} */ staticQueryIds = new Set();\n    var /** @type {?} */ dynamicQueryIds = new Set();\n    Array.from(nodeStaticQueryIds.values()).forEach(function (entry) {\n        entry.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n        entry.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n    });\n    dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n    return { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds };\n}\n/**\n * @param {?} directives\n * @return {?}\n */\nfunction createComponentFactoryResolver(directives) {\n    var /** @type {?} */ componentDirMeta = directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n    if (componentDirMeta && componentDirMeta.directive.entryComponents.length) {\n        var /** @type {?} */ entryComponentFactories = componentDirMeta.directive.entryComponents.map(function (entryComponent) { return importExpr({ reference: entryComponent.componentFactory }); });\n        var /** @type {?} */ token = createIdentifierToken(Identifiers.ComponentFactoryResolver);\n        var /** @type {?} */ classMeta = {\n            diDeps: [\n                { isValue: true, value: literalArr(entryComponentFactories) },\n                { token: token, isSkipSelf: true, isOptional: true },\n                { token: createIdentifierToken(Identifiers.NgModuleRef) },\n            ],\n            lifecycleHooks: [],\n            reference: resolveIdentifier(Identifiers.CodegenComponentFactoryResolver)\n        };\n        return new ProviderAst(token, false, true, [{ token: token, multi: false, useClass: classMeta }], ProviderAstType.PrivateService, [], componentDirMeta.sourceSpan);\n    }\n    return null;\n}\n/**\n * @param {?} eventAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementEventNameAndTarget(eventAst, dirAst) {\n    if (eventAst.isAnimation) {\n        return {\n            name: \"@\" + eventAst.name + \".\" + eventAst.phase,\n            target: dirAst && dirAst.directive.isComponent ? 'component' : null\n        };\n    }\n    else {\n        return eventAst;\n    }\n}\n/**\n * @param {?} queryIds\n * @param {?} queryId\n * @param {?} isFirst\n * @return {?}\n */\nfunction calcStaticDynamicQueryFlags(queryIds, queryId, isFirst) {\n    var /** @type {?} */ flags = 0;\n    // Note: We only make queries static that query for a single item.\n    // This is because of backwards compatibility with the old view compiler...\n    if (isFirst && (queryIds.staticQueryIds.has(queryId) || !queryIds.dynamicQueryIds.has(queryId))) {\n        flags |= 268435456 /* StaticQuery */;\n    }\n    else {\n        flags |= 536870912 /* DynamicQuery */;\n    }\n    return flags;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar GeneratedFile = (function () {\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} genFileUrl\n     * @param {?} source\n     */\n    function GeneratedFile(srcFileUrl, genFileUrl, source) {\n        this.srcFileUrl = srcFileUrl;\n        this.genFileUrl = genFileUrl;\n        this.source = source;\n    }\n    return GeneratedFile;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} summaryResolver\n * @param {?} symbolResolver\n * @param {?} symbols\n * @param {?} types\n * @return {?}\n */\nfunction serializeSummaries(summaryResolver, symbolResolver, symbols, types) {\n    var /** @type {?} */ toJsonSerializer = new ToJsonSerializer(symbolResolver, summaryResolver);\n    var /** @type {?} */ forJitSerializer = new ForJitSerializer(symbolResolver);\n    // for symbols, we use everything except for the class metadata itself\n    // (we keep the statics though), as the class metadata is contained in the\n    // CompileTypeSummary.\n    symbols.forEach(function (resolvedSymbol) { return toJsonSerializer.addOrMergeSummary({ symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata }); });\n    // Add summaries that are referenced by the given symbols (transitively)\n    // Note: the serializer.symbols array might be growing while\n    // we execute the loop!\n    for (var /** @type {?} */ processedIndex = 0; processedIndex < toJsonSerializer.symbols.length; processedIndex++) {\n        var /** @type {?} */ symbol = toJsonSerializer.symbols[processedIndex];\n        if (summaryResolver.isLibraryFile(symbol.filePath)) {\n            var /** @type {?} */ summary = summaryResolver.resolveSummary(symbol);\n            if (!summary) {\n                // some symbols might originate from a plain typescript library\n                // that just exported .d.ts and .metadata.json files, i.e. where no summary\n                // files were created.\n                var /** @type {?} */ resolvedSymbol = symbolResolver.resolveSymbol(symbol);\n                if (resolvedSymbol) {\n                    summary = { symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata };\n                }\n            }\n            if (summary) {\n                if (summary.type) {\n                    forJitSerializer.addLibType(summary.type);\n                }\n                toJsonSerializer.addOrMergeSummary(summary);\n            }\n        }\n    }\n    // Add type summaries.\n    // Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,\n    // as the type summaries already contain the transitive data that they require\n    // (in a minimal way).\n    types.forEach(function (_a) {\n        var summary = _a.summary, metadata = _a.metadata;\n        forJitSerializer.addSourceType(summary, metadata);\n        toJsonSerializer.addOrMergeSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n        if (summary.summaryKind === CompileSummaryKind.NgModule) {\n            var /** @type {?} */ ngModuleSummary = (summary);\n            ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach(function (id) {\n                var /** @type {?} */ symbol = id.reference;\n                if (summaryResolver.isLibraryFile(symbol.filePath)) {\n                    var /** @type {?} */ summary_1 = summaryResolver.resolveSummary(symbol);\n                    if (summary_1) {\n                        toJsonSerializer.addOrMergeSummary(summary_1);\n                    }\n                }\n            });\n        }\n    });\n    var _a = toJsonSerializer.serialize(), json = _a.json, exportAs = _a.exportAs;\n    var _b = forJitSerializer.serialize(exportAs), statements = _b.statements, exportedVars = _b.exportedVars;\n    return { json: json, forJit: { statements: statements, exportedVars: exportedVars }, exportAs: exportAs };\n}\n/**\n * @param {?} symbolCache\n * @param {?} json\n * @return {?}\n */\nfunction deserializeSummaries(symbolCache, json) {\n    var /** @type {?} */ deserializer = new FromJsonDeserializer(symbolCache);\n    return deserializer.deserialize(json);\n}\nvar ToJsonSerializer = (function (_super) {\n    __extends(ToJsonSerializer, _super);\n    /**\n     * @param {?} symbolResolver\n     * @param {?} summaryResolver\n     */\n    function ToJsonSerializer(symbolResolver, summaryResolver) {\n        var _this = _super.call(this) || this;\n        _this.symbolResolver = symbolResolver;\n        _this.summaryResolver = summaryResolver;\n        // Note: This only contains symbols without members.\n        _this.symbols = [];\n        _this.indexBySymbol = new Map();\n        _this.processedSummaryBySymbol = new Map();\n        _this.processedSummaries = [];\n        return _this;\n    }\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.addOrMergeSummary = function (summary) {\n        var /** @type {?} */ symbolMeta = summary.metadata;\n        if (symbolMeta && symbolMeta.__symbolic === 'class') {\n            // For classes, we keep everything except their class decorators.\n            // We need to keep e.g. the ctor args, method names, method decorators\n            // so that the class can be extended in another compilation unit.\n            // We don't keep the class decorators as\n            // 1) they refer to data\n            //   that should not cause a rebuild of downstream compilation units\n            //   (e.g. inline templates of @Component, or @NgModule.declarations)\n            // 2) their data is already captured in TypeSummaries, e.g. DirectiveSummary.\n            var /** @type {?} */ clone_1 = {};\n            Object.keys(symbolMeta).forEach(function (propName) {\n                if (propName !== 'decorators') {\n                    clone_1[propName] = symbolMeta[propName];\n                }\n            });\n            symbolMeta = clone_1;\n        }\n        var /** @type {?} */ processedSummary = this.processedSummaryBySymbol.get(summary.symbol);\n        if (!processedSummary) {\n            processedSummary = this.processValue({ symbol: summary.symbol });\n            this.processedSummaries.push(processedSummary);\n            this.processedSummaryBySymbol.set(summary.symbol, processedSummary);\n        }\n        // Note: == on purpose to compare with undefined!\n        if (processedSummary.metadata == null && symbolMeta != null) {\n            processedSummary.metadata = this.processValue(symbolMeta);\n        }\n        // Note: == on purpose to compare with undefined!\n        if (processedSummary.type == null && summary.type != null) {\n            processedSummary.type = this.processValue(summary.type);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.serialize = function () {\n        var _this = this;\n        var /** @type {?} */ exportAs = [];\n        var /** @type {?} */ json = JSON.stringify({\n            summaries: this.processedSummaries,\n            symbols: this.symbols.map(function (symbol, index) {\n                symbol.assertNoMembers();\n                var /** @type {?} */ importAs = ((undefined));\n                if (_this.summaryResolver.isLibraryFile(symbol.filePath)) {\n                    importAs = symbol.name + \"_\" + index;\n                    exportAs.push({ symbol: symbol, exportAs: importAs });\n                }\n                return {\n                    __symbol: index,\n                    name: symbol.name,\n                    // We convert the source filenames tinto output filenames,\n                    // as the generated summary file will be used when teh current\n                    // compilation unit is used as a library\n                    filePath: _this.summaryResolver.getLibraryFileName(symbol.filePath),\n                    importAs: importAs\n                };\n            })\n        });\n        return { json: json, exportAs: exportAs };\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.processValue = function (value) { return visitValue(value, this, null); };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitOther = function (value, context) {\n        if (value instanceof StaticSymbol) {\n            var /** @type {?} */ baseSymbol = this.symbolResolver.getStaticSymbol(value.filePath, value.name);\n            var /** @type {?} */ index = this.indexBySymbol.get(baseSymbol);\n            // Note: == on purpose to compare with undefined!\n            if (index == null) {\n                index = this.indexBySymbol.size;\n                this.indexBySymbol.set(baseSymbol, index);\n                this.symbols.push(baseSymbol);\n            }\n            return { __symbol: index, members: value.members };\n        }\n    };\n    return ToJsonSerializer;\n}(ValueTransformer));\nvar ForJitSerializer = (function () {\n    /**\n     * @param {?} symbolResolver\n     */\n    function ForJitSerializer(symbolResolver) {\n        this.symbolResolver = symbolResolver;\n        this.data = new Map();\n    }\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addSourceType = function (summary, metadata) {\n        this.data.set(summary.type.reference, { summary: summary, metadata: metadata, isLibrary: false });\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addLibType = function (summary) {\n        this.data.set(summary.type.reference, { summary: summary, metadata: null, isLibrary: true });\n    };\n    /**\n     * @param {?} exportAs\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serialize = function (exportAs) {\n        var _this = this;\n        var /** @type {?} */ statements = [];\n        var /** @type {?} */ exportedVars = [];\n        var /** @type {?} */ ngModuleSymbols = new Set();\n        Array.from(this.data.values()).forEach(function (_a) {\n            var summary = _a.summary, metadata = _a.metadata, isLibrary = _a.isLibrary;\n            if (summary.summaryKind === CompileSummaryKind.NgModule) {\n                // collect the symbols that refer to NgModule classes.\n                // Note: we can't just rely on `summary.type.summaryKind` to determine this as\n                // we don't add the summaries of all referenced symbols when we serialize type summaries.\n                // See serializeSummaries for details.\n                ngModuleSymbols.add(summary.type.reference);\n                var /** @type {?} */ modSummary = (summary);\n                modSummary.modules.forEach(function (mod) { ngModuleSymbols.add(mod.reference); });\n            }\n            if (!isLibrary) {\n                var /** @type {?} */ fnName = summaryForJitName(summary.type.reference.name);\n                statements.push(fn([], [new ReturnStatement(_this.serializeSummaryWithDeps(summary, /** @type {?} */ ((metadata))))], new ArrayType(DYNAMIC_TYPE))\n                    .toDeclStmt(fnName, [StmtModifier.Final]));\n                exportedVars.push(fnName);\n            }\n        });\n        exportAs.forEach(function (entry) {\n            var /** @type {?} */ symbol = entry.symbol;\n            if (ngModuleSymbols.has(symbol)) {\n                var /** @type {?} */ jitExportAsName = summaryForJitName(entry.exportAs);\n                statements.push(variable(jitExportAsName).set(_this.serializeSummaryRef(symbol)).toDeclStmt());\n                exportedVars.push(jitExportAsName);\n            }\n        });\n        return { statements: statements, exportedVars: exportedVars };\n    };\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryWithDeps = function (summary, metadata) {\n        var _this = this;\n        var /** @type {?} */ expressions = [this.serializeSummary(summary)];\n        var /** @type {?} */ providers = [];\n        if (metadata instanceof CompileNgModuleMetadata) {\n            expressions.push.apply(expressions, \n            // For directives / pipes, we only add the declared ones,\n            // and rely on transitively importing NgModules to get the transitive\n            // summaries.\n            metadata.declaredDirectives.concat(metadata.declaredPipes)\n                .map(function (type) { return type.reference; })\n                .concat(metadata.transitiveModule.modules.map(function (type) { return type.reference; })\n                .filter(function (ref) { return ref !== metadata.type.reference; }))\n                .map(function (ref) { return _this.serializeSummaryRef(ref); }));\n            // Note: We don't use `NgModuleSummary.providers`, as that one is transitive,\n            // and we already have transitive modules.\n            providers = metadata.providers;\n        }\n        else if (summary.summaryKind === CompileSummaryKind.Directive) {\n            var /** @type {?} */ dirSummary = (summary);\n            providers = dirSummary.providers.concat(dirSummary.viewProviders);\n        }\n        // Note: We can't just refer to the `ngsummary.ts` files for `useClass` providers (as we do for\n        // declaredDirectives / declaredPipes), as we allow\n        // providers without ctor arguments to skip the `@Injectable` decorator,\n        // i.e. we didn't generate .ngsummary.ts files for these.\n        expressions.push.apply(expressions, providers.filter(function (provider) { return !!provider.useClass; }).map(function (provider) { return _this.serializeSummary(/** @type {?} */ ({\n            summaryKind: CompileSummaryKind.Injectable, type: provider.useClass\n        })); }));\n        return literalArr(expressions);\n    };\n    /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryRef = function (typeSymbol) {\n        var /** @type {?} */ jitImportedSymbol = this.symbolResolver.getStaticSymbol(summaryForJitFileName(typeSymbol.filePath), summaryForJitName(typeSymbol.name));\n        return importExpr({ reference: jitImportedSymbol });\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummary = function (data) {\n        var Transformer = (function () {\n            function Transformer() {\n            }\n            /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitArray = function (arr, context) {\n                var _this = this;\n                return literalArr(arr.map(function (entry) { return visitValue(entry, _this, context); }));\n            };\n            /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitStringMap = function (map, context) {\n                var _this = this;\n                return new LiteralMapExpr(Object.keys(map).map(function (key) { return new LiteralMapEntry(key, visitValue(map[key], _this, context)); }));\n            };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitPrimitive = function (value, context) { return literal(value); };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitOther = function (value, context) {\n                if (value instanceof StaticSymbol) {\n                    return importExpr({ reference: value });\n                }\n                else {\n                    throw new Error(\"Illegal State: Encountered value \" + value);\n                }\n            };\n            return Transformer;\n        }());\n        return visitValue(data, new Transformer(), null);\n    };\n    return ForJitSerializer;\n}());\nvar FromJsonDeserializer = (function (_super) {\n    __extends(FromJsonDeserializer, _super);\n    /**\n     * @param {?} symbolCache\n     */\n    function FromJsonDeserializer(symbolCache) {\n        var _this = _super.call(this) || this;\n        _this.symbolCache = symbolCache;\n        return _this;\n    }\n    /**\n     * @param {?} json\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.deserialize = function (json) {\n        var _this = this;\n        var /** @type {?} */ data = JSON.parse(json);\n        var /** @type {?} */ importAs = [];\n        this.symbols = [];\n        data.symbols.forEach(function (serializedSymbol) {\n            var /** @type {?} */ symbol = _this.symbolCache.get(serializedSymbol.filePath, serializedSymbol.name);\n            _this.symbols.push(symbol);\n            if (serializedSymbol.importAs) {\n                importAs.push({ symbol: symbol, importAs: serializedSymbol.importAs });\n            }\n        });\n        var /** @type {?} */ summaries = visitValue(data.summaries, this, null);\n        return { summaries: summaries, importAs: importAs };\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.visitStringMap = function (map, context) {\n        if ('__symbol' in map) {\n            var /** @type {?} */ baseSymbol = this.symbols[map['__symbol']];\n            var /** @type {?} */ members = map['members'];\n            return members.length ? this.symbolCache.get(baseSymbol.filePath, baseSymbol.name, members) :\n                baseSymbol;\n        }\n        else {\n            return _super.prototype.visitStringMap.call(this, map, context);\n        }\n    };\n    return FromJsonDeserializer;\n}(ValueTransformer));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AotCompiler = (function () {\n    /**\n     * @param {?} _config\n     * @param {?} _host\n     * @param {?} _metadataResolver\n     * @param {?} _templateParser\n     * @param {?} _styleCompiler\n     * @param {?} _viewCompiler\n     * @param {?} _ngModuleCompiler\n     * @param {?} _outputEmitter\n     * @param {?} _summaryResolver\n     * @param {?} _localeId\n     * @param {?} _translationFormat\n     * @param {?} _genFilePreamble\n     * @param {?} _symbolResolver\n     */\n    function AotCompiler(_config, _host, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _outputEmitter, _summaryResolver, _localeId, _translationFormat, _genFilePreamble, _symbolResolver) {\n        this._config = _config;\n        this._host = _host;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._outputEmitter = _outputEmitter;\n        this._summaryResolver = _summaryResolver;\n        this._localeId = _localeId;\n        this._translationFormat = _translationFormat;\n        this._genFilePreamble = _genFilePreamble;\n        this._symbolResolver = _symbolResolver;\n    }\n    /**\n     * @return {?}\n     */\n    AotCompiler.prototype.clearCache = function () { this._metadataResolver.clearCache(); };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.compileAll = function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ programSymbols = extractProgramSymbols(this._symbolResolver, rootFiles, this._host);\n        var _a = analyzeAndValidateNgModules(programSymbols, this._host, this._metadataResolver), ngModuleByPipeOrDirective = _a.ngModuleByPipeOrDirective, files = _a.files, ngModules = _a.ngModules;\n        return Promise\n            .all(ngModules.map(function (ngModule) { return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false); }))\n            .then(function () {\n            var /** @type {?} */ sourceModules = files.map(function (file) { return _this._compileSrcFile(file.srcUrl, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables); });\n            return flatten(sourceModules);\n        });\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    AotCompiler.prototype._compileSrcFile = function (srcFileUrl, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n        var _this = this;\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(srcFileUrl, true)[1];\n        var /** @type {?} */ statements = [];\n        var /** @type {?} */ exportedVars = [];\n        var /** @type {?} */ generatedFiles = [];\n        generatedFiles.push.apply(generatedFiles, this._createSummary(srcFileUrl, directives, pipes, ngModules, injectables, statements, exportedVars));\n        // compile all ng modules\n        exportedVars.push.apply(exportedVars, ngModules.map(function (ngModuleType) { return _this._compileModule(ngModuleType, statements); }));\n        // compile components\n        directives.forEach(function (dirType) {\n            var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(/** @type {?} */ (dirType));\n            if (!compMeta.isComponent) {\n                return Promise.resolve(null);\n            }\n            var /** @type {?} */ ngModule = ngModuleByPipeOrDirective.get(dirType);\n            if (!ngModule) {\n                throw new Error(\"Internal Error: cannot determine the module for component \" + identifierName(compMeta.type) + \"!\");\n            }\n            _assertComponent(compMeta);\n            // compile styles\n            var /** @type {?} */ stylesCompileResults = _this._styleCompiler.compileComponent(compMeta);\n            stylesCompileResults.externalStylesheets.forEach(function (compiledStyleSheet) {\n                generatedFiles.push(_this._codgenStyles(srcFileUrl, compiledStyleSheet, fileSuffix));\n            });\n            // compile components\n            var /** @type {?} */ compViewVars = _this._compileComponent(compMeta, ngModule, ngModule.transitiveModule.directives, stylesCompileResults.componentStylesheet, fileSuffix, statements);\n            exportedVars.push(_this._compileComponentFactory(compMeta, ngModule, fileSuffix, statements), compViewVars.viewClassVar, compViewVars.compRenderTypeVar);\n        });\n        if (statements.length > 0) {\n            var /** @type {?} */ srcModule = this._codegenSourceModule(srcFileUrl, ngfactoryFilePath(srcFileUrl, true), statements, exportedVars);\n            generatedFiles.unshift(srcModule);\n        }\n        return generatedFiles;\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} targetStatements\n     * @param {?} targetExportedVars\n     * @return {?}\n     */\n    AotCompiler.prototype._createSummary = function (srcFileUrl, directives, pipes, ngModules, injectables, targetStatements, targetExportedVars) {\n        var _this = this;\n        var /** @type {?} */ symbolSummaries = this._symbolResolver.getSymbolsOf(srcFileUrl)\n            .map(function (symbol) { return _this._symbolResolver.resolveSymbol(symbol); });\n        var /** @type {?} */ typeData = ngModules.map(function (ref) { return ({\n            summary: /** @type {?} */ ((_this._metadataResolver.getNgModuleSummary(ref))),\n            metadata: /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(ref)))\n        }); }).concat(directives.map(function (ref) { return ({\n            summary: /** @type {?} */ ((_this._metadataResolver.getDirectiveSummary(ref))),\n            metadata: /** @type {?} */ ((_this._metadataResolver.getDirectiveMetadata(ref)))\n        }); }), pipes.map(function (ref) { return ({\n            summary: /** @type {?} */ ((_this._metadataResolver.getPipeSummary(ref))),\n            metadata: /** @type {?} */ ((_this._metadataResolver.getPipeMetadata(ref)))\n        }); }), injectables.map(function (ref) { return ({\n            summary: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))),\n            metadata: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))).type\n        }); }));\n        var _a = serializeSummaries(this._summaryResolver, this._symbolResolver, symbolSummaries, typeData), json = _a.json, exportAs = _a.exportAs, forJit = _a.forJit;\n        exportAs.forEach(function (entry) {\n            targetStatements.push(variable(entry.exportAs).set(importExpr({ reference: entry.symbol })).toDeclStmt());\n            targetExportedVars.push(entry.exportAs);\n        });\n        return [\n            new GeneratedFile(srcFileUrl, summaryFileName(srcFileUrl), json),\n            this._codegenSourceModule(srcFileUrl, summaryForJitFileName(srcFileUrl, true), forJit.statements, forJit.exportedVars)\n        ];\n    };\n    /**\n     * @param {?} ngModuleType\n     * @param {?} targetStatements\n     * @return {?}\n     */\n    AotCompiler.prototype._compileModule = function (ngModuleType, targetStatements) {\n        var /** @type {?} */ ngModule = ((this._metadataResolver.getNgModuleMetadata(ngModuleType)));\n        var /** @type {?} */ providers = [];\n        if (this._localeId) {\n            providers.push({\n                token: createIdentifierToken(Identifiers.LOCALE_ID),\n                useValue: this._localeId,\n            });\n        }\n        if (this._translationFormat) {\n            providers.push({\n                token: createIdentifierToken(Identifiers.TRANSLATIONS_FORMAT),\n                useValue: this._translationFormat\n            });\n        }\n        var /** @type {?} */ appCompileResult = this._ngModuleCompiler.compile(ngModule, providers);\n        targetStatements.push.apply(targetStatements, appCompileResult.statements);\n        return appCompileResult.ngModuleFactoryVar;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @param {?} targetStatements\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponentFactory = function (compMeta, ngModule, fileSuffix, targetStatements) {\n        var /** @type {?} */ hostType = this._metadataResolver.getHostComponentType(compMeta.type.reference);\n        var /** @type {?} */ hostMeta = createHostComponentMeta(hostType, compMeta, this._metadataResolver.getHostComponentViewClass(hostType));\n        var /** @type {?} */ hostViewFactoryVar = this._compileComponent(hostMeta, ngModule, [compMeta.type], null, fileSuffix, targetStatements)\n            .viewClassVar;\n        var /** @type {?} */ compFactoryVar = componentFactoryName(compMeta.type.reference);\n        var /** @type {?} */ inputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.inputs) {\n            var /** @type {?} */ templateName = compMeta.inputs[propName];\n            // Don't quote so that the key gets minified...\n            inputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        var /** @type {?} */ outputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.outputs) {\n            var /** @type {?} */ templateName = compMeta.outputs[propName];\n            // Don't quote so that the key gets minified...\n            outputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        targetStatements.push(variable(compFactoryVar)\n            .set(importExpr(createIdentifier(Identifiers.createComponentFactory)).callFn([\n            literal(compMeta.selector), importExpr(compMeta.type),\n            variable(hostViewFactoryVar), new LiteralMapExpr(inputsExprs),\n            new LiteralMapExpr(outputsExprs),\n            literalArr(/** @type {?} */ ((compMeta.template)).ngContentSelectors.map(function (selector) { return literal(selector); }))\n        ]))\n            .toDeclStmt(importType(createIdentifier(Identifiers.ComponentFactory), [/** @type {?} */ ((importType(compMeta.type)))], [TypeModifier.Const]), [StmtModifier.Final]));\n        return compFactoryVar;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @param {?} targetStatements\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponent = function (compMeta, ngModule, directiveIdentifiers, componentStyles, fileSuffix, targetStatements) {\n        var _this = this;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var _a = this._templateParser.parse(compMeta, /** @type {?} */ ((((compMeta.template)).template)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template)))), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ stylesExpr = componentStyles ? variable(componentStyles.stylesVar) : literalArr([]);\n        var /** @type {?} */ viewResult = this._viewCompiler.compileComponent(compMeta, parsedTemplate, stylesExpr, usedPipes);\n        if (componentStyles) {\n            targetStatements.push.apply(targetStatements, _resolveStyleStatements(this._symbolResolver, componentStyles, fileSuffix));\n        }\n        targetStatements.push.apply(targetStatements, viewResult.statements);\n        return { viewClassVar: viewResult.viewClassVar, compRenderTypeVar: viewResult.rendererTypeVar };\n    };\n    /**\n     * @param {?} fileUrl\n     * @param {?} stylesCompileResult\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._codgenStyles = function (fileUrl, stylesCompileResult, fileSuffix) {\n        _resolveStyleStatements(this._symbolResolver, stylesCompileResult, fileSuffix);\n        return this._codegenSourceModule(fileUrl, _stylesModuleUrl(/** @type {?} */ ((stylesCompileResult.meta.moduleUrl)), stylesCompileResult.isShimmed, fileSuffix), stylesCompileResult.statements, [stylesCompileResult.stylesVar]);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} genFileUrl\n     * @param {?} statements\n     * @param {?} exportedVars\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenSourceModule = function (srcFileUrl, genFileUrl, statements, exportedVars) {\n        return new GeneratedFile(srcFileUrl, genFileUrl, this._outputEmitter.emitStatements(sourceUrl(srcFileUrl), genFileUrl, statements, exportedVars, this._genFilePreamble));\n    };\n    return AotCompiler;\n}());\n/**\n * @param {?} reflector\n * @param {?} compileResult\n * @param {?} fileSuffix\n * @return {?}\n */\nfunction _resolveStyleStatements(reflector, compileResult, fileSuffix) {\n    compileResult.dependencies.forEach(function (dep) {\n        dep.valuePlaceholder.reference = reflector.getStaticSymbol(_stylesModuleUrl(dep.moduleUrl, dep.isShimmed, fileSuffix), dep.name);\n    });\n    return compileResult.statements;\n}\n/**\n * @param {?} stylesheetUrl\n * @param {?} shim\n * @param {?} suffix\n * @return {?}\n */\nfunction _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n    return \"\" + stylesheetUrl + (shim ? '.shim' : '') + \".ngstyle\" + suffix;\n}\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction _assertComponent(meta) {\n    if (!meta.isComponent) {\n        throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n    }\n}\n/**\n * @param {?} programStaticSymbols\n * @param {?} host\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeNgModules(programStaticSymbols, host, metadataResolver) {\n    var _a = _createNgModules(programStaticSymbols, host, metadataResolver), ngModules = _a.ngModules, symbolsMissingModule = _a.symbolsMissingModule;\n    return _analyzeNgModules(programStaticSymbols, ngModules, symbolsMissingModule, metadataResolver);\n}\n/**\n * @param {?} programStaticSymbols\n * @param {?} host\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeAndValidateNgModules(programStaticSymbols, host, metadataResolver) {\n    var /** @type {?} */ result = analyzeNgModules(programStaticSymbols, host, metadataResolver);\n    if (result.symbolsMissingModule && result.symbolsMissingModule.length) {\n        var /** @type {?} */ messages = result.symbolsMissingModule.map(function (s) { return \"Cannot determine the module for class \" + s.name + \" in \" + s.filePath + \"! Add \" + s.name + \" to the NgModule to fix it.\"; });\n        throw syntaxError(messages.join('\\n'));\n    }\n    return result;\n}\n/**\n * @param {?} programSymbols\n * @param {?} ngModuleMetas\n * @param {?} symbolsMissingModule\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _analyzeNgModules(programSymbols, ngModuleMetas, symbolsMissingModule, metadataResolver) {\n    var /** @type {?} */ moduleMetasByRef = new Map();\n    ngModuleMetas.forEach(function (ngModule) { return moduleMetasByRef.set(ngModule.type.reference, ngModule); });\n    var /** @type {?} */ ngModuleByPipeOrDirective = new Map();\n    var /** @type {?} */ ngModulesByFile = new Map();\n    var /** @type {?} */ ngDirectivesByFile = new Map();\n    var /** @type {?} */ ngPipesByFile = new Map();\n    var /** @type {?} */ ngInjectablesByFile = new Map();\n    var /** @type {?} */ filePaths = new Set();\n    // Make sure we produce an analyzed file for each input file\n    programSymbols.forEach(function (symbol) {\n        var /** @type {?} */ filePath = symbol.filePath;\n        filePaths.add(filePath);\n        if (metadataResolver.isInjectable(symbol)) {\n            ngInjectablesByFile.set(filePath, (ngInjectablesByFile.get(filePath) || []).concat(symbol));\n        }\n    });\n    // Looping over all modules to construct:\n    // - a map from file to modules `ngModulesByFile`,\n    // - a map from file to directives `ngDirectivesByFile`,\n    // - a map from file to pipes `ngPipesByFile`,\n    // - a map from directive/pipe to module `ngModuleByPipeOrDirective`.\n    ngModuleMetas.forEach(function (ngModuleMeta) {\n        var /** @type {?} */ srcFileUrl = ngModuleMeta.type.reference.filePath;\n        filePaths.add(srcFileUrl);\n        ngModulesByFile.set(srcFileUrl, (ngModulesByFile.get(srcFileUrl) || []).concat(ngModuleMeta.type.reference));\n        ngModuleMeta.declaredDirectives.forEach(function (dirIdentifier) {\n            var /** @type {?} */ fileUrl = dirIdentifier.reference.filePath;\n            filePaths.add(fileUrl);\n            ngDirectivesByFile.set(fileUrl, (ngDirectivesByFile.get(fileUrl) || []).concat(dirIdentifier.reference));\n            ngModuleByPipeOrDirective.set(dirIdentifier.reference, ngModuleMeta);\n        });\n        ngModuleMeta.declaredPipes.forEach(function (pipeIdentifier) {\n            var /** @type {?} */ fileUrl = pipeIdentifier.reference.filePath;\n            filePaths.add(fileUrl);\n            ngPipesByFile.set(fileUrl, (ngPipesByFile.get(fileUrl) || []).concat(pipeIdentifier.reference));\n            ngModuleByPipeOrDirective.set(pipeIdentifier.reference, ngModuleMeta);\n        });\n    });\n    var /** @type {?} */ files = [];\n    filePaths.forEach(function (srcUrl) {\n        var /** @type {?} */ directives = ngDirectivesByFile.get(srcUrl) || [];\n        var /** @type {?} */ pipes = ngPipesByFile.get(srcUrl) || [];\n        var /** @type {?} */ ngModules = ngModulesByFile.get(srcUrl) || [];\n        var /** @type {?} */ injectables = ngInjectablesByFile.get(srcUrl) || [];\n        files.push({ srcUrl: srcUrl, directives: directives, pipes: pipes, ngModules: ngModules, injectables: injectables });\n    });\n    return {\n        // map directive/pipe to module\n        ngModuleByPipeOrDirective: ngModuleByPipeOrDirective,\n        // list modules and directives for every source file\n        files: files,\n        ngModules: ngModuleMetas, symbolsMissingModule: symbolsMissingModule\n    };\n}\n/**\n * @param {?} staticSymbolResolver\n * @param {?} files\n * @param {?} host\n * @return {?}\n */\nfunction extractProgramSymbols(staticSymbolResolver, files, host) {\n    var /** @type {?} */ staticSymbols = [];\n    files.filter(function (fileName) { return host.isSourceFile(fileName); }).forEach(function (sourceFile) {\n        staticSymbolResolver.getSymbolsOf(sourceFile).forEach(function (symbol) {\n            var /** @type {?} */ resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            var /** @type {?} */ symbolMeta = resolvedSymbol.metadata;\n            if (symbolMeta) {\n                if (symbolMeta.__symbolic != 'error') {\n                    // Ignore symbols that are only included to record error information.\n                    staticSymbols.push(resolvedSymbol.symbol);\n                }\n            }\n        });\n    });\n    return staticSymbols;\n}\n/**\n * @param {?} programStaticSymbols\n * @param {?} host\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _createNgModules(programStaticSymbols, host, metadataResolver) {\n    var /** @type {?} */ ngModules = new Map();\n    var /** @type {?} */ programPipesAndDirectives = [];\n    var /** @type {?} */ ngModulePipesAndDirective = new Set();\n    var /** @type {?} */ addNgModule = function (staticSymbol) {\n        if (ngModules.has(staticSymbol) || !host.isSourceFile(staticSymbol.filePath)) {\n            return false;\n        }\n        var /** @type {?} */ ngModule = metadataResolver.getNgModuleMetadata(staticSymbol, false);\n        if (ngModule) {\n            ngModules.set(ngModule.type.reference, ngModule);\n            ngModule.declaredDirectives.forEach(function (dir) { return ngModulePipesAndDirective.add(dir.reference); });\n            ngModule.declaredPipes.forEach(function (pipe) { return ngModulePipesAndDirective.add(pipe.reference); });\n            // For every input module add the list of transitively included modules\n            ngModule.transitiveModule.modules.forEach(function (modMeta) { return addNgModule(modMeta.reference); });\n        }\n        return !!ngModule;\n    };\n    programStaticSymbols.forEach(function (staticSymbol) {\n        if (!addNgModule(staticSymbol) &&\n            (metadataResolver.isDirective(staticSymbol) || metadataResolver.isPipe(staticSymbol))) {\n            programPipesAndDirectives.push(staticSymbol);\n        }\n    });\n    // Throw an error if any of the program pipe or directives is not declared by a module\n    var /** @type {?} */ symbolsMissingModule = programPipesAndDirectives.filter(function (s) { return !ngModulePipesAndDirective.has(s); });\n    return { ngModules: Array.from(ngModules.values()), symbolsMissingModule: symbolsMissingModule };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar StaticAndDynamicReflectionCapabilities = (function () {\n    /**\n     * @param {?} staticDelegate\n     */\n    function StaticAndDynamicReflectionCapabilities(staticDelegate) {\n        this.staticDelegate = staticDelegate;\n        this.dynamicDelegate = new _angular_core.ɵReflectionCapabilities();\n    }\n    /**\n     * @param {?} staticDelegate\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.install = function (staticDelegate) {\n        _angular_core.ɵreflector.updateCapabilities(new StaticAndDynamicReflectionCapabilities(staticDelegate));\n    };\n    /**\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.factory = function (type) { return this.dynamicDelegate.factory(type); };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n        return isStaticType(type) ? this.staticDelegate.hasLifecycleHook(type, lcProperty) :\n            this.dynamicDelegate.hasLifecycleHook(type, lcProperty);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.parameters = function (type) {\n        return isStaticType(type) ? this.staticDelegate.parameters(type) :\n            this.dynamicDelegate.parameters(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.annotations = function (type) {\n        return isStaticType(type) ? this.staticDelegate.annotations(type) :\n            this.dynamicDelegate.annotations(type);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n        return isStaticType(typeOrFunc) ? this.staticDelegate.propMetadata(typeOrFunc) :\n            this.dynamicDelegate.propMetadata(typeOrFunc);\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.getter = function (name) { return this.dynamicDelegate.getter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.setter = function (name) { return this.dynamicDelegate.setter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.method = function (name) { return this.dynamicDelegate.method(name); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.importUri = function (type) { return ((this.staticDelegate.importUri(type))); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.resourceUri = function (type) { return this.staticDelegate.resourceUri(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n        return this.staticDelegate.resolveIdentifier(name, moduleUrl, members);\n    };\n    /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) {\n        if (isStaticType(enumIdentifier)) {\n            return this.staticDelegate.resolveEnum(enumIdentifier, name);\n        }\n        else {\n            return null;\n        }\n    };\n    return StaticAndDynamicReflectionCapabilities;\n}());\n/**\n * @param {?} type\n * @return {?}\n */\nfunction isStaticType(type) {\n    return typeof type === 'object' && type.name && type.filePath;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANGULAR_CORE = '@angular/core';\nvar HIDDEN_KEY = /^\\$.*\\$$/;\nvar IGNORE = {\n    __symbolic: 'ignore'\n};\n/**\n * @param {?} value\n * @return {?}\n */\nfunction shouldIgnore(value) {\n    return value && value.__symbolic == 'ignore';\n}\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nvar StaticReflector = (function () {\n    /**\n     * @param {?} summaryResolver\n     * @param {?} symbolResolver\n     * @param {?=} knownMetadataClasses\n     * @param {?=} knownMetadataFunctions\n     * @param {?=} errorRecorder\n     */\n    function StaticReflector(summaryResolver, symbolResolver, knownMetadataClasses, knownMetadataFunctions, errorRecorder) {\n        if (knownMetadataClasses === void 0) { knownMetadataClasses = []; }\n        if (knownMetadataFunctions === void 0) { knownMetadataFunctions = []; }\n        var _this = this;\n        this.summaryResolver = summaryResolver;\n        this.symbolResolver = symbolResolver;\n        this.errorRecorder = errorRecorder;\n        this.annotationCache = new Map();\n        this.propertyCache = new Map();\n        this.parameterCache = new Map();\n        this.methodCache = new Map();\n        this.conversionMap = new Map();\n        this.annotationForParentClassWithSummaryKind = new Map();\n        this.annotationNames = new Map();\n        this.initializeConversionMap();\n        knownMetadataClasses.forEach(function (kc) { return _this._registerDecoratorOrConstructor(_this.getStaticSymbol(kc.filePath, kc.name), kc.ctor); });\n        knownMetadataFunctions.forEach(function (kf) { return _this._registerFunction(_this.getStaticSymbol(kf.filePath, kf.name), kf.fn); });\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Directive, [_angular_core.Directive, _angular_core.Component]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Pipe, [_angular_core.Pipe]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.NgModule, [_angular_core.NgModule]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Injectable, [_angular_core.Injectable, _angular_core.Pipe, _angular_core.Directive, _angular_core.Component, _angular_core.NgModule]);\n        this.annotationNames.set(_angular_core.Directive, 'Directive');\n        this.annotationNames.set(_angular_core.Component, 'Component');\n        this.annotationNames.set(_angular_core.Pipe, 'Pipe');\n        this.annotationNames.set(_angular_core.NgModule, 'NgModule');\n        this.annotationNames.set(_angular_core.Injectable, 'Injectable');\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    StaticReflector.prototype.importUri = function (typeOrFunc) {\n        var /** @type {?} */ staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n        return staticSymbol ? staticSymbol.filePath : null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    StaticReflector.prototype.resourceUri = function (typeOrFunc) {\n        var /** @type {?} */ staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n        return this.symbolResolver.getResourcePath(staticSymbol);\n    };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @return {?}\n     */\n    StaticReflector.prototype.resolveIdentifier = function (name, moduleUrl, members) {\n        var /** @type {?} */ importSymbol = this.getStaticSymbol(moduleUrl, name);\n        var /** @type {?} */ rootSymbol = this.findDeclaration(moduleUrl, name);\n        if (importSymbol != rootSymbol) {\n            this.symbolResolver.recordImportAs(rootSymbol, importSymbol);\n        }\n        if (members && members.length) {\n            return this.getStaticSymbol(rootSymbol.filePath, rootSymbol.name, members);\n        }\n        return rootSymbol;\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.findDeclaration = function (moduleUrl, name, containingFile) {\n        return this.findSymbolDeclaration(this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    StaticReflector.prototype.findSymbolDeclaration = function (symbol) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n        if (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            return this.findSymbolDeclaration(resolvedSymbol.metadata);\n        }\n        else {\n            return symbol;\n        }\n    };\n    /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    StaticReflector.prototype.resolveEnum = function (enumIdentifier, name) {\n        var /** @type {?} */ staticSymbol = enumIdentifier;\n        var /** @type {?} */ members = (staticSymbol.members || []).concat(name);\n        return this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name, members);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.annotations = function (type) {\n        var _this = this;\n        var /** @type {?} */ annotations = this.annotationCache.get(type);\n        if (!annotations) {\n            annotations = [];\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentAnnotations = this.annotations(parentType);\n                annotations.push.apply(annotations, parentAnnotations);\n            }\n            var /** @type {?} */ ownAnnotations_1 = [];\n            if (classMetadata['decorators']) {\n                ownAnnotations_1 = this.simplify(type, classMetadata['decorators']);\n                annotations.push.apply(annotations, ownAnnotations_1);\n            }\n            if (parentType && !this.summaryResolver.isLibraryFile(type.filePath) &&\n                this.summaryResolver.isLibraryFile(parentType.filePath)) {\n                var /** @type {?} */ summary = this.summaryResolver.resolveSummary(parentType);\n                if (summary && summary.type) {\n                    var /** @type {?} */ requiredAnnotationTypes = ((this.annotationForParentClassWithSummaryKind.get(/** @type {?} */ ((summary.type.summaryKind)))));\n                    var /** @type {?} */ typeHasRequiredAnnotation = requiredAnnotationTypes.some(function (requiredType) { return ownAnnotations_1.some(function (ann) { return ann instanceof requiredType; }); });\n                    if (!typeHasRequiredAnnotation) {\n                        this.reportError(syntaxError(\"Class \" + type.name + \" in \" + type.filePath + \" extends from a \" + CompileSummaryKind[((summary.type.summaryKind))] + \" in another compilation unit without duplicating the decorator. \" +\n                            (\"Please add a \" + requiredAnnotationTypes.map(function (type) { return _this.annotationNames.get(type); }).join(' or ') + \" decorator to the class.\")), type);\n                    }\n                }\n            }\n            this.annotationCache.set(type, annotations.filter(function (ann) { return !!ann; }));\n        }\n        return annotations;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.propMetadata = function (type) {\n        var _this = this;\n        var /** @type {?} */ propMetadata = this.propertyCache.get(type);\n        if (!propMetadata) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            propMetadata = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentType);\n                Object.keys(parentPropMetadata_1).forEach(function (parentProp) {\n                    ((propMetadata))[parentProp] = parentPropMetadata_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_1 = classMetadata['members'] || {};\n            Object.keys(members_1).forEach(function (propName) {\n                var /** @type {?} */ propData = members_1[propName];\n                var /** @type {?} */ prop = ((propData))\n                    .find(function (a) { return a['__symbolic'] == 'property' || a['__symbolic'] == 'method'; });\n                var /** @type {?} */ decorators = [];\n                if (((propMetadata))[propName]) {\n                    decorators.push.apply(decorators, ((propMetadata))[propName]);\n                } /** @type {?} */\n                ((propMetadata))[propName] = decorators;\n                if (prop && prop['decorators']) {\n                    decorators.push.apply(decorators, _this.simplify(type, prop['decorators']));\n                }\n            });\n            this.propertyCache.set(type, propMetadata);\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.parameters = function (type) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"parameters received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return [];\n        }\n        try {\n            var /** @type {?} */ parameters_1 = this.parameterCache.get(type);\n            if (!parameters_1) {\n                var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n                var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n                var /** @type {?} */ members = classMetadata ? classMetadata['members'] : null;\n                var /** @type {?} */ ctorData = members ? members['__ctor__'] : null;\n                if (ctorData) {\n                    var /** @type {?} */ ctor = ((ctorData)).find(function (a) { return a['__symbolic'] == 'constructor'; });\n                    var /** @type {?} */ parameterTypes = (this.simplify(type, ctor['parameters'] || []));\n                    var /** @type {?} */ parameterDecorators_1 = (this.simplify(type, ctor['parameterDecorators'] || []));\n                    parameters_1 = [];\n                    parameterTypes.forEach(function (paramType, index) {\n                        var /** @type {?} */ nestedResult = [];\n                        if (paramType) {\n                            nestedResult.push(paramType);\n                        }\n                        var /** @type {?} */ decorators = parameterDecorators_1 ? parameterDecorators_1[index] : null;\n                        if (decorators) {\n                            nestedResult.push.apply(nestedResult, decorators);\n                        } /** @type {?} */\n                        ((parameters_1)).push(nestedResult);\n                    });\n                }\n                else if (parentType) {\n                    parameters_1 = this.parameters(parentType);\n                }\n                if (!parameters_1) {\n                    parameters_1 = [];\n                }\n                this.parameterCache.set(type, parameters_1);\n            }\n            return parameters_1;\n        }\n        catch (e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype._methodNames = function (type) {\n        var /** @type {?} */ methodNames = this.methodCache.get(type);\n        if (!methodNames) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            methodNames = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentMethodNames_1 = this._methodNames(parentType);\n                Object.keys(parentMethodNames_1).forEach(function (parentProp) {\n                    ((methodNames))[parentProp] = parentMethodNames_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_2 = classMetadata['members'] || {};\n            Object.keys(members_2).forEach(function (propName) {\n                var /** @type {?} */ propData = members_2[propName];\n                var /** @type {?} */ isMethod = ((propData)).some(function (a) { return a['__symbolic'] == 'method'; }); /** @type {?} */\n                ((methodNames))[propName] = ((methodNames))[propName] || isMethod;\n            });\n            this.methodCache.set(type, methodNames);\n        }\n        return methodNames;\n    };\n    /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    StaticReflector.prototype.findParentType = function (type, classMetadata) {\n        var /** @type {?} */ parentType = this.trySimplify(type, classMetadata['extends']);\n        if (parentType instanceof StaticSymbol) {\n            return parentType;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    StaticReflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"hasLifecycleHook received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n        }\n        try {\n            return !!this._methodNames(type)[lcProperty];\n        }\n        catch (e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    StaticReflector.prototype._registerDecoratorOrConstructor = function (type, ctor) {\n        this.conversionMap.set(type, function (context, args) { return new (ctor.bind.apply(ctor, [void 0].concat(args)))(); });\n    };\n    /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    StaticReflector.prototype._registerFunction = function (type, fn) {\n        this.conversionMap.set(type, function (context, args) { return fn.apply(undefined, args); });\n    };\n    /**\n     * @return {?}\n     */\n    StaticReflector.prototype.initializeConversionMap = function () {\n        this.injectionToken = this.findDeclaration(ANGULAR_CORE, 'InjectionToken');\n        this.opaqueToken = this.findDeclaration(ANGULAR_CORE, 'OpaqueToken');\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), _angular_core.Host);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Injectable'), _angular_core.Injectable);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), _angular_core.Self);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), _angular_core.SkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Inject'), _angular_core.Inject);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), _angular_core.Optional);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Attribute'), _angular_core.Attribute);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChild'), _angular_core.ContentChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChildren'), _angular_core.ContentChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChild'), _angular_core.ViewChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChildren'), _angular_core.ViewChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Input'), _angular_core.Input);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Output'), _angular_core.Output);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Pipe'), _angular_core.Pipe);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostBinding'), _angular_core.HostBinding);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostListener'), _angular_core.HostListener);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Directive'), _angular_core.Directive);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Component'), _angular_core.Component);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'NgModule'), _angular_core.NgModule);\n        // Note: Some metadata classes can be used directly with Provider.deps.\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), _angular_core.Host);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), _angular_core.Self);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), _angular_core.SkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), _angular_core.Optional);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'trigger'), _angular_core.trigger);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'state'), _angular_core.state);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'transition'), _angular_core.transition);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'style'), _angular_core.style);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'animate'), _angular_core.animate);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'keyframes'), _angular_core.keyframes);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'sequence'), _angular_core.sequence);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'group'), _angular_core.group);\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticReflector.prototype.getStaticSymbol = function (declarationFile, name, members) {\n        return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n    };\n    /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticReflector.prototype.reportError = function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.trySimplify = function (context, value) {\n        var /** @type {?} */ originalRecorder = this.errorRecorder;\n        this.errorRecorder = function (error, fileName) { };\n        var /** @type {?} */ result = this.simplify(context, value);\n        this.errorRecorder = originalRecorder;\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.simplify = function (context, value) {\n        var _this = this;\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ scope = BindingScope.empty;\n        var /** @type {?} */ calling = new Map();\n        /**\n         * @param {?} context\n         * @param {?} value\n         * @param {?} depth\n         * @return {?}\n         */\n        function simplifyInContext(context, value, depth) {\n            /**\n             * @param {?} staticSymbol\n             * @return {?}\n             */\n            function resolveReferenceValue(staticSymbol) {\n                var /** @type {?} */ resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n                return resolvedSymbol ? resolvedSymbol.metadata : null;\n            }\n            /**\n             * @param {?} functionSymbol\n             * @param {?} targetFunction\n             * @param {?} args\n             * @return {?}\n             */\n            function simplifyCall(functionSymbol, targetFunction, args) {\n                if (targetFunction && targetFunction['__symbolic'] == 'function') {\n                    if (calling.get(functionSymbol)) {\n                        throw new Error('Recursion not supported');\n                    }\n                    calling.set(functionSymbol, true);\n                    try {\n                        var /** @type {?} */ value_1 = targetFunction['value'];\n                        if (value_1 && (depth != 0 || value_1.__symbolic != 'error')) {\n                            var /** @type {?} */ parameters = targetFunction['parameters'];\n                            var /** @type {?} */ defaults = targetFunction.defaults;\n                            args = args.map(function (arg) { return simplifyInContext(context, arg, depth + 1); })\n                                .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                            if (defaults && defaults.length > args.length) {\n                                args.push.apply(args, defaults.slice(args.length).map(function (value) { return simplify(value); }));\n                            }\n                            var /** @type {?} */ functionScope = BindingScope.build();\n                            for (var /** @type {?} */ i = 0; i < parameters.length; i++) {\n                                functionScope.define(parameters[i], args[i]);\n                            }\n                            var /** @type {?} */ oldScope = scope;\n                            var /** @type {?} */ result_1;\n                            try {\n                                scope = functionScope.done();\n                                result_1 = simplifyInContext(functionSymbol, value_1, depth + 1);\n                            }\n                            finally {\n                                scope = oldScope;\n                            }\n                            return result_1;\n                        }\n                    }\n                    finally {\n                        calling.delete(functionSymbol);\n                    }\n                }\n                if (depth === 0) {\n                    // If depth is 0 we are evaluating the top level expression that is describing element\n                    // decorator. In this case, it is a decorator we don't understand, such as a custom\n                    // non-angular decorator, and we should just ignore it.\n                    return IGNORE;\n                }\n                return simplify({ __symbolic: 'error', message: 'Function call not supported', context: functionSymbol });\n            }\n            /**\n             * @param {?} expression\n             * @return {?}\n             */\n            function simplify(expression) {\n                if (isPrimitive(expression)) {\n                    return expression;\n                }\n                if (expression instanceof Array) {\n                    var /** @type {?} */ result_2 = [];\n                    for (var _i = 0, _a = ((expression)); _i < _a.length; _i++) {\n                        var item = _a[_i];\n                        // Check for a spread expression\n                        if (item && item.__symbolic === 'spread') {\n                            var /** @type {?} */ spreadArray = simplify(item.expression);\n                            if (Array.isArray(spreadArray)) {\n                                for (var _b = 0, spreadArray_1 = spreadArray; _b < spreadArray_1.length; _b++) {\n                                    var spreadItem = spreadArray_1[_b];\n                                    result_2.push(spreadItem);\n                                }\n                                continue;\n                            }\n                        }\n                        var /** @type {?} */ value_2 = simplify(item);\n                        if (shouldIgnore(value_2)) {\n                            continue;\n                        }\n                        result_2.push(value_2);\n                    }\n                    return result_2;\n                }\n                if (expression instanceof StaticSymbol) {\n                    // Stop simplification at builtin symbols\n                    if (expression === self.injectionToken || expression === self.opaqueToken ||\n                        self.conversionMap.has(expression)) {\n                        return expression;\n                    }\n                    else {\n                        var /** @type {?} */ staticSymbol = expression;\n                        var /** @type {?} */ declarationValue = resolveReferenceValue(staticSymbol);\n                        if (declarationValue) {\n                            return simplifyInContext(staticSymbol, declarationValue, depth + 1);\n                        }\n                        else {\n                            return staticSymbol;\n                        }\n                    }\n                }\n                if (expression) {\n                    if (expression['__symbolic']) {\n                        var /** @type {?} */ staticSymbol = void 0;\n                        switch (expression['__symbolic']) {\n                            case 'binop':\n                                var /** @type {?} */ left = simplify(expression['left']);\n                                if (shouldIgnore(left))\n                                    return left;\n                                var /** @type {?} */ right = simplify(expression['right']);\n                                if (shouldIgnore(right))\n                                    return right;\n                                switch (expression['operator']) {\n                                    case '&&':\n                                        return left && right;\n                                    case '||':\n                                        return left || right;\n                                    case '|':\n                                        return left | right;\n                                    case '^':\n                                        return left ^ right;\n                                    case '&':\n                                        return left & right;\n                                    case '==':\n                                        return left == right;\n                                    case '!=':\n                                        return left != right;\n                                    case '===':\n                                        return left === right;\n                                    case '!==':\n                                        return left !== right;\n                                    case '<':\n                                        return left < right;\n                                    case '>':\n                                        return left > right;\n                                    case '<=':\n                                        return left <= right;\n                                    case '>=':\n                                        return left >= right;\n                                    case '<<':\n                                        return left << right;\n                                    case '>>':\n                                        return left >> right;\n                                    case '+':\n                                        return left + right;\n                                    case '-':\n                                        return left - right;\n                                    case '*':\n                                        return left * right;\n                                    case '/':\n                                        return left / right;\n                                    case '%':\n                                        return left % right;\n                                }\n                                return null;\n                            case 'if':\n                                var /** @type {?} */ condition = simplify(expression['condition']);\n                                return condition ? simplify(expression['thenExpression']) :\n                                    simplify(expression['elseExpression']);\n                            case 'pre':\n                                var /** @type {?} */ operand = simplify(expression['operand']);\n                                if (shouldIgnore(operand))\n                                    return operand;\n                                switch (expression['operator']) {\n                                    case '+':\n                                        return operand;\n                                    case '-':\n                                        return -operand;\n                                    case '!':\n                                        return !operand;\n                                    case '~':\n                                        return ~operand;\n                                }\n                                return null;\n                            case 'index':\n                                var /** @type {?} */ indexTarget = simplify(expression['expression']);\n                                var /** @type {?} */ index = simplify(expression['index']);\n                                if (indexTarget && isPrimitive(index))\n                                    return indexTarget[index];\n                                return null;\n                            case 'select':\n                                var /** @type {?} */ member = expression['member'];\n                                var /** @type {?} */ selectContext = context;\n                                var /** @type {?} */ selectTarget = simplify(expression['expression']);\n                                if (selectTarget instanceof StaticSymbol) {\n                                    var /** @type {?} */ members = selectTarget.members.concat(member);\n                                    selectContext =\n                                        self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                                    var /** @type {?} */ declarationValue = resolveReferenceValue(selectContext);\n                                    if (declarationValue) {\n                                        return simplifyInContext(selectContext, declarationValue, depth + 1);\n                                    }\n                                    else {\n                                        return selectContext;\n                                    }\n                                }\n                                if (selectTarget && isPrimitive(member))\n                                    return simplifyInContext(selectContext, selectTarget[member], depth + 1);\n                                return null;\n                            case 'reference':\n                                // Note: This only has to deal with variable references,\n                                // as symbol references have been converted into StaticSymbols already\n                                // in the StaticSymbolResolver!\n                                var /** @type {?} */ name = expression['name'];\n                                var /** @type {?} */ localValue = scope.resolve(name);\n                                if (localValue != BindingScope.missing) {\n                                    return localValue;\n                                }\n                                break;\n                            case 'class':\n                                return context;\n                            case 'function':\n                                return context;\n                            case 'new':\n                            case 'call':\n                                // Determine if the function is a built-in conversion\n                                staticSymbol = simplifyInContext(context, expression['expression'], depth + 1);\n                                if (staticSymbol instanceof StaticSymbol) {\n                                    if (staticSymbol === self.injectionToken || staticSymbol === self.opaqueToken) {\n                                        // if somebody calls new InjectionToken, don't create an InjectionToken,\n                                        // but rather return the symbol to which the InjectionToken is assigned to.\n                                        return context;\n                                    }\n                                    var /** @type {?} */ argExpressions = expression['arguments'] || [];\n                                    var /** @type {?} */ converter = self.conversionMap.get(staticSymbol);\n                                    if (converter) {\n                                        var /** @type {?} */ args = argExpressions.map(function (arg) { return simplifyInContext(context, arg, depth + 1); })\n                                            .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                                        return converter(context, args);\n                                    }\n                                    else {\n                                        // Determine if the function is one we can simplify.\n                                        var /** @type {?} */ targetFunction = resolveReferenceValue(staticSymbol);\n                                        return simplifyCall(staticSymbol, targetFunction, argExpressions);\n                                    }\n                                }\n                                return IGNORE;\n                            case 'error':\n                                var /** @type {?} */ message = produceErrorMessage(expression);\n                                if (expression['line']) {\n                                    message =\n                                        message + \" (position \" + (expression['line'] + 1) + \":\" + (expression['character'] + 1) + \" in the original .ts file)\";\n                                    self.reportError(positionalError(message, context.filePath, expression['line'], expression['character']), context);\n                                }\n                                else {\n                                    self.reportError(new Error(message), context);\n                                }\n                                return IGNORE;\n                            case 'ignore':\n                                return expression;\n                        }\n                        return null;\n                    }\n                    return mapStringMap(expression, function (value, name) { return simplify(value); });\n                }\n                return IGNORE;\n            }\n            try {\n                return simplify(value);\n            }\n            catch (e) {\n                var /** @type {?} */ members = context.members.length ? \".\" + context.members.join('.') : '';\n                var /** @type {?} */ message = e.message + \", resolving symbol \" + context.name + members + \" in \" + context.filePath;\n                if (e.fileName) {\n                    throw positionalError(message, e.fileName, e.line, e.column);\n                }\n                throw syntaxError(message);\n            }\n        }\n        var /** @type {?} */ recordedSimplifyInContext = function (context, value, depth) {\n            try {\n                return simplifyInContext(context, value, depth);\n            }\n            catch (e) {\n                _this.reportError(e, context);\n            }\n        };\n        var /** @type {?} */ result = this.errorRecorder ? recordedSimplifyInContext(context, value, 0) :\n            simplifyInContext(context, value, 0);\n        if (shouldIgnore(result)) {\n            return undefined;\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.getTypeMetadata = function (type) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n        return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n            { __symbolic: 'class' };\n    };\n    return StaticReflector;\n}());\n/**\n * @param {?} error\n * @return {?}\n */\nfunction expandedMessage(error) {\n    switch (error.message) {\n        case 'Reference to non-exported class':\n            if (error.context && error.context.className) {\n                return \"Reference to a non-exported class \" + error.context.className + \". Consider exporting the class\";\n            }\n            break;\n        case 'Variable not initialized':\n            return 'Only initialized variables and constants can be referenced because the value of this variable is needed by the template compiler';\n        case 'Destructuring not supported':\n            return 'Referencing an exported destructured variable or constant is not supported by the template compiler. Consider simplifying this to avoid destructuring';\n        case 'Could not resolve type':\n            if (error.context && error.context.typeName) {\n                return \"Could not resolve type \" + error.context.typeName;\n            }\n            break;\n        case 'Function call not supported':\n            var /** @type {?} */ prefix = error.context && error.context.name ? \"Calling function '\" + error.context.name + \"', f\" : 'F';\n            return prefix +\n                'unction calls are not supported. Consider replacing the function or lambda with a reference to an exported function';\n        case 'Reference to a local symbol':\n            if (error.context && error.context.name) {\n                return \"Reference to a local (non-exported) symbol '\" + error.context.name + \"'. Consider exporting the symbol\";\n            }\n            break;\n    }\n    return error.message;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction produceErrorMessage(error) {\n    return \"Error encountered resolving symbol values statically. \" + expandedMessage(error);\n}\n/**\n * @param {?} input\n * @param {?} transform\n * @return {?}\n */\nfunction mapStringMap(input, transform) {\n    if (!input)\n        return {};\n    var /** @type {?} */ result = {};\n    Object.keys(input).forEach(function (key) {\n        var /** @type {?} */ value = transform(input[key], key);\n        if (!shouldIgnore(value)) {\n            if (HIDDEN_KEY.test(key)) {\n                Object.defineProperty(result, key, { enumerable: false, configurable: true, value: value });\n            }\n            else {\n                result[key] = value;\n            }\n        }\n    });\n    return result;\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPrimitive(o) {\n    return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\n/**\n * @abstract\n */\nvar BindingScope = (function () {\n    function BindingScope() {\n    }\n    /**\n     * @abstract\n     * @param {?} name\n     * @return {?}\n     */\n    BindingScope.prototype.resolve = function (name) { };\n    /**\n     * @return {?}\n     */\n    BindingScope.build = function () {\n        var /** @type {?} */ current = new Map();\n        return {\n            define: function (name, value) {\n                current.set(name, value);\n                return this;\n            },\n            done: function () {\n                return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n            }\n        };\n    };\n    return BindingScope;\n}());\nBindingScope.missing = {};\nBindingScope.empty = { resolve: function (name) { return BindingScope.missing; } };\nvar PopulatedScope = (function (_super) {\n    __extends(PopulatedScope, _super);\n    /**\n     * @param {?} bindings\n     */\n    function PopulatedScope(bindings) {\n        var _this = _super.call(this) || this;\n        _this.bindings = bindings;\n        return _this;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PopulatedScope.prototype.resolve = function (name) {\n        return this.bindings.has(name) ? this.bindings.get(name) : BindingScope.missing;\n    };\n    return PopulatedScope;\n}(BindingScope));\n/**\n * @param {?} message\n * @param {?} fileName\n * @param {?} line\n * @param {?} column\n * @return {?}\n */\nfunction positionalError(message, fileName, line, column) {\n    var /** @type {?} */ result = new Error(message);\n    ((result)).fileName = fileName;\n    ((result)).line = line;\n    ((result)).column = column;\n    return result;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ResolvedStaticSymbol = (function () {\n    /**\n     * @param {?} symbol\n     * @param {?} metadata\n     */\n    function ResolvedStaticSymbol(symbol, metadata) {\n        this.symbol = symbol;\n        this.metadata = metadata;\n    }\n    return ResolvedStaticSymbol;\n}());\nvar SUPPORTED_SCHEMA_VERSION = 3;\n/**\n * This class is responsible for loading metadata per symbol,\n * and normalizing references between symbols.\n *\n * Internally, it only uses symbols without members,\n * and deduces the values for symbols with members based\n * on these symbols.\n */\nvar StaticSymbolResolver = (function () {\n    /**\n     * @param {?} host\n     * @param {?} staticSymbolCache\n     * @param {?} summaryResolver\n     * @param {?=} errorRecorder\n     */\n    function StaticSymbolResolver(host, staticSymbolCache, summaryResolver, errorRecorder) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryResolver = summaryResolver;\n        this.errorRecorder = errorRecorder;\n        this.metadataCache = new Map();\n        this.resolvedSymbols = new Map();\n        this.resolvedFilePaths = new Set();\n        this.importAs = new Map();\n        this.symbolResourcePaths = new Map();\n        this.symbolFromFile = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveSymbol = function (staticSymbol) {\n        if (staticSymbol.members.length > 0) {\n            return ((this._resolveSymbolMembers(staticSymbol)));\n        }\n        var /** @type {?} */ result = this.resolvedSymbols.get(staticSymbol);\n        if (result) {\n            return result;\n        }\n        result = ((this._resolveSymbolFromSummary(staticSymbol)));\n        if (result) {\n            return result;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        this._createSymbolsOf(staticSymbol.filePath);\n        result = ((this.resolvedSymbols.get(staticSymbol)));\n        return result;\n    };\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getImportAs = function (staticSymbol) {\n        if (staticSymbol.members.length) {\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(baseImportAs.filePath, baseImportAs.name, staticSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ summarizedFileName = stripSummaryForJitFileSuffix(staticSymbol.filePath);\n        if (summarizedFileName !== staticSymbol.filePath) {\n            var /** @type {?} */ summarizedName = stripSummaryForJitNameSuffix(staticSymbol.name);\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(summarizedFileName, summarizedName, staticSymbol.members);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(summaryForJitFileName(baseImportAs.filePath), summaryForJitName(baseImportAs.name), baseSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ result = this.summaryResolver.getImportAs(staticSymbol);\n        if (!result) {\n            result = ((this.importAs.get(staticSymbol)));\n        }\n        return result;\n    };\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getResourcePath = function (staticSymbol) {\n        return this.symbolResourcePaths.get(staticSymbol) || staticSymbol.filePath;\n    };\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getTypeArity = function (staticSymbol) {\n        // If the file is a factory/ngsummary file, don't resolve the symbol as doing so would\n        // cause the metadata for an factory/ngsummary file to be loaded which doesn't exist.\n        // All references to generated classes must include the correct arity whenever\n        // generating code.\n        if (isGeneratedFile(staticSymbol.filePath)) {\n            return null;\n        }\n        var /** @type {?} */ resolvedSymbol = this.resolveSymbol(staticSymbol);\n        while (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            resolvedSymbol = this.resolveSymbol(resolvedSymbol.metadata);\n        }\n        return (resolvedSymbol && resolvedSymbol.metadata && resolvedSymbol.metadata.arity) || null;\n    };\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.fileNameToModuleName = function (importedFilePath, containingFilePath) {\n        if (importedFilePath === containingFilePath) {\n            return null;\n        }\n        return this.knownFileNameToModuleNames.get(importedFilePath) ||\n            this.host.fileNameToModuleName(importedFilePath, containingFilePath);\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordImportAs = function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        this.importAs.set(sourceSymbol, targetSymbol);\n    };\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.invalidateFile = function (fileName) {\n        this.metadataCache.delete(fileName);\n        this.resolvedFilePaths.delete(fileName);\n        var /** @type {?} */ symbols = this.symbolFromFile.get(fileName);\n        if (symbols) {\n            this.symbolFromFile.delete(fileName);\n            for (var _i = 0, symbols_1 = symbols; _i < symbols_1.length; _i++) {\n                var symbol = symbols_1[_i];\n                this.resolvedSymbols.delete(symbol);\n                this.importAs.delete(symbol);\n                this.symbolResourcePaths.delete(symbol);\n            }\n        }\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolMembers = function (staticSymbol) {\n        var /** @type {?} */ members = staticSymbol.members;\n        var /** @type {?} */ baseResolvedSymbol = this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name));\n        if (!baseResolvedSymbol) {\n            return null;\n        }\n        var /** @type {?} */ baseMetadata = baseResolvedSymbol.metadata;\n        if (baseMetadata instanceof StaticSymbol) {\n            return new ResolvedStaticSymbol(staticSymbol, this.getStaticSymbol(baseMetadata.filePath, baseMetadata.name, members));\n        }\n        else if (baseMetadata && baseMetadata.__symbolic === 'class') {\n            if (baseMetadata.statics && members.length === 1) {\n                return new ResolvedStaticSymbol(staticSymbol, baseMetadata.statics[members[0]]);\n            }\n        }\n        else {\n            var /** @type {?} */ value = baseMetadata;\n            for (var /** @type {?} */ i = 0; i < members.length && value; i++) {\n                value = value[members[i]];\n            }\n            return new ResolvedStaticSymbol(staticSymbol, value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolFromSummary = function (staticSymbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(staticSymbol);\n        return summary ? new ResolvedStaticSymbol(staticSymbol, summary.metadata) : null;\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getStaticSymbol = function (declarationFile, name, members) {\n        return this.staticSymbolCache.get(declarationFile, name, members);\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolsOf = function (filePath) {\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        var /** @type {?} */ symbols = new Set(this.summaryResolver.getSymbolsOf(filePath));\n        this._createSymbolsOf(filePath);\n        this.resolvedSymbols.forEach(function (resolvedSymbol) {\n            if (resolvedSymbol.symbol.filePath === filePath) {\n                symbols.add(resolvedSymbol.symbol);\n            }\n        });\n        return Array.from(symbols);\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._createSymbolsOf = function (filePath) {\n        var _this = this;\n        if (this.resolvedFilePaths.has(filePath)) {\n            return;\n        }\n        this.resolvedFilePaths.add(filePath);\n        var /** @type {?} */ resolvedSymbols = [];\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['importAs']) {\n            // Index bundle indices should use the importAs module name defined\n            // in the bundle.\n            this.knownFileNameToModuleNames.set(filePath, metadata['importAs']);\n        }\n        if (metadata['metadata']) {\n            // handle direct declarations of the symbol\n            var /** @type {?} */ topLevelSymbolNames_1 = new Set(Object.keys(metadata['metadata']).map(unescapeIdentifier));\n            var /** @type {?} */ origins_1 = metadata['origins'] || {};\n            Object.keys(metadata['metadata']).forEach(function (metadataKey) {\n                var /** @type {?} */ symbolMeta = metadata['metadata'][metadataKey];\n                var /** @type {?} */ name = unescapeIdentifier(metadataKey);\n                var /** @type {?} */ symbol = _this.getStaticSymbol(filePath, name);\n                var /** @type {?} */ origin = origins_1.hasOwnProperty(metadataKey) && origins_1[metadataKey];\n                if (origin) {\n                    // If the symbol is from a bundled index, use the declaration location of the\n                    // symbol so relative references (such as './my.html') will be calculated\n                    // correctly.\n                    var /** @type {?} */ originFilePath = _this.resolveModule(origin, filePath);\n                    if (!originFilePath) {\n                        _this.reportError(new Error(\"Couldn't resolve original symbol for \" + origin + \" from \" + filePath));\n                    }\n                    else {\n                        _this.symbolResourcePaths.set(symbol, originFilePath);\n                    }\n                }\n                resolvedSymbols.push(_this.createResolvedSymbol(symbol, filePath, topLevelSymbolNames_1, symbolMeta));\n            });\n        }\n        // handle the symbols in one of the re-export location\n        if (metadata['exports']) {\n            var _loop_1 = function (moduleExport) {\n                // handle the symbols in the list of explicitly re-exported symbols.\n                if (moduleExport.export) {\n                    moduleExport.export.forEach(function (exportSymbol) {\n                        var /** @type {?} */ symbolName;\n                        if (typeof exportSymbol === 'string') {\n                            symbolName = exportSymbol;\n                        }\n                        else {\n                            symbolName = exportSymbol.as;\n                        }\n                        symbolName = unescapeIdentifier(symbolName);\n                        var /** @type {?} */ symName = symbolName;\n                        if (typeof exportSymbol !== 'string') {\n                            symName = unescapeIdentifier(exportSymbol.name);\n                        }\n                        var /** @type {?} */ resolvedModule = _this.resolveModule(moduleExport.from, filePath);\n                        if (resolvedModule) {\n                            var /** @type {?} */ targetSymbol = _this.getStaticSymbol(resolvedModule, symName);\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, symbolName);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        }\n                    });\n                }\n                else {\n                    // handle the symbols via export * directives.\n                    var /** @type {?} */ resolvedModule = this_1.resolveModule(moduleExport.from, filePath);\n                    if (resolvedModule) {\n                        var /** @type {?} */ nestedExports = this_1.getSymbolsOf(resolvedModule);\n                        nestedExports.forEach(function (targetSymbol) {\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, targetSymbol.name);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        });\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var _i = 0, _a = metadata['exports']; _i < _a.length; _i++) {\n                var moduleExport = _a[_i];\n                _loop_1(/** @type {?} */ moduleExport);\n            }\n        }\n        resolvedSymbols.forEach(function (resolvedSymbol) { return _this.resolvedSymbols.set(resolvedSymbol.symbol, resolvedSymbol); });\n        this.symbolFromFile.set(filePath, resolvedSymbols.map(function (resolvedSymbol) { return resolvedSymbol.symbol; }));\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createResolvedSymbol = function (sourceSymbol, topLevelPath, topLevelSymbolNames, metadata) {\n        // For classes that don't have Angular summaries / metadata,\n        // we only keep their arity, but nothing else\n        // (e.g. their constructor parameters).\n        // We do this to prevent introducing deep imports\n        // as we didn't generate .ngfactory.ts files with proper reexports.\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) && metadata &&\n            metadata['__symbolic'] === 'class') {\n            var /** @type {?} */ transformedMeta_1 = { __symbolic: 'class', arity: metadata.arity };\n            return new ResolvedStaticSymbol(sourceSymbol, transformedMeta_1);\n        }\n        var /** @type {?} */ self = this;\n        var ReferenceTransformer = (function (_super) {\n            __extends(ReferenceTransformer, _super);\n            function ReferenceTransformer() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            ReferenceTransformer.prototype.visitStringMap = function (map, functionParams) {\n                var /** @type {?} */ symbolic = map['__symbolic'];\n                if (symbolic === 'function') {\n                    var /** @type {?} */ oldLen = functionParams.length;\n                    functionParams.push.apply(functionParams, (map['parameters'] || []));\n                    var /** @type {?} */ result = _super.prototype.visitStringMap.call(this, map, functionParams);\n                    functionParams.length = oldLen;\n                    return result;\n                }\n                else if (symbolic === 'reference') {\n                    var /** @type {?} */ module_1 = map['module'];\n                    var /** @type {?} */ name = map['name'] ? unescapeIdentifier(map['name']) : map['name'];\n                    if (!name) {\n                        return null;\n                    }\n                    var /** @type {?} */ filePath = void 0;\n                    if (module_1) {\n                        filePath = ((self.resolveModule(module_1, sourceSymbol.filePath)));\n                        if (!filePath) {\n                            return {\n                                __symbolic: 'error',\n                                message: \"Could not resolve \" + module_1 + \" relative to \" + sourceSymbol.filePath + \".\"\n                            };\n                        }\n                        return self.getStaticSymbol(filePath, name);\n                    }\n                    else if (functionParams.indexOf(name) >= 0) {\n                        // reference to a function parameter\n                        return { __symbolic: 'reference', name: name };\n                    }\n                    else {\n                        if (topLevelSymbolNames.has(name)) {\n                            return self.getStaticSymbol(topLevelPath, name);\n                        }\n                        // ambient value\n                        null;\n                    }\n                }\n                else {\n                    return _super.prototype.visitStringMap.call(this, map, functionParams);\n                }\n            };\n            return ReferenceTransformer;\n        }(ValueTransformer));\n        var /** @type {?} */ transformedMeta = visitValue(metadata, new ReferenceTransformer(), []);\n        if (transformedMeta instanceof StaticSymbol) {\n            return this.createExport(sourceSymbol, transformedMeta);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createExport = function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath)) {\n            // This case is for an ng library importing symbols from a plain ts library\n            // transitively.\n            // Note: We rely on the fact that we discover symbols in the direction\n            // from source files to library files\n            this.importAs.set(targetSymbol, this.getImportAs(sourceSymbol) || sourceSymbol);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.reportError = function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getModuleMetadata = function (module) {\n        var /** @type {?} */ moduleMetadata = this.metadataCache.get(module);\n        if (!moduleMetadata) {\n            var /** @type {?} */ moduleMetadatas = this.host.getMetadataFor(module);\n            if (moduleMetadatas) {\n                var /** @type {?} */ maxVersion_1 = -1;\n                moduleMetadatas.forEach(function (md) {\n                    if (md['version'] > maxVersion_1) {\n                        maxVersion_1 = md['version'];\n                        moduleMetadata = md;\n                    }\n                });\n            }\n            if (!moduleMetadata) {\n                moduleMetadata =\n                    { __symbolic: 'module', version: SUPPORTED_SCHEMA_VERSION, module: module, metadata: {} };\n            }\n            if (moduleMetadata['version'] != SUPPORTED_SCHEMA_VERSION) {\n                var /** @type {?} */ errorMessage = moduleMetadata['version'] == 2 ?\n                    \"Unsupported metadata version \" + moduleMetadata['version'] + \" for module \" + module + \". This module should be compiled with a newer version of ngc\" :\n                    \"Metadata version mismatch for module \" + module + \", found version \" + moduleMetadata['version'] + \", expected \" + SUPPORTED_SCHEMA_VERSION;\n                this.reportError(new Error(errorMessage));\n            }\n            this.metadataCache.set(module, moduleMetadata);\n        }\n        return moduleMetadata;\n    };\n    /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolByModule = function (module, symbolName, containingFile) {\n        var /** @type {?} */ filePath = this.resolveModule(module, containingFile);\n        if (!filePath) {\n            this.reportError(new Error(\"Could not resolve module \" + module + (containingFile ? \" relative to $ {\\n            containingFile\\n          } \" : '')));\n            return this.getStaticSymbol(\"ERROR:\" + module, symbolName);\n        }\n        return this.getStaticSymbol(filePath, symbolName);\n    };\n    /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveModule = function (module, containingFile) {\n        try {\n            return this.host.moduleNameToFileName(module, containingFile);\n        }\n        catch (e) {\n            console.error(\"Could not resolve module '\" + module + \"' relative to file \" + containingFile);\n            this.reportError(e, undefined, containingFile);\n        }\n        return null;\n    };\n    return StaticSymbolResolver;\n}());\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction unescapeIdentifier(identifier) {\n    return identifier.startsWith('___') ? identifier.substr(1) : identifier;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AotSummaryResolver = (function () {\n    /**\n     * @param {?} host\n     * @param {?} staticSymbolCache\n     */\n    function AotSummaryResolver(host, staticSymbolCache) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryCache = new Map();\n        this.loadedFilePaths = new Set();\n        this.importAs = new Map();\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.isLibraryFile = function (filePath) {\n        // Note: We need to strip the .ngfactory. file path,\n        // so this method also works for generated files\n        // (for which host.isSourceFile will always return false).\n        return !this.host.isSourceFile(stripGeneratedFileSuffix(filePath));\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getLibraryFileName = function (filePath) { return this.host.getOutputFileName(filePath); };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.resolveSummary = function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        var /** @type {?} */ summary = this.summaryCache.get(staticSymbol);\n        if (!summary) {\n            this._loadSummaryFile(staticSymbol.filePath);\n            summary = ((this.summaryCache.get(staticSymbol)));\n        }\n        return summary;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getSymbolsOf = function (filePath) {\n        this._loadSummaryFile(filePath);\n        return Array.from(this.summaryCache.keys()).filter(function (symbol) { return symbol.filePath === filePath; });\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getImportAs = function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        return ((this.importAs.get(staticSymbol)));\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.addSummary = function (summary) { this.summaryCache.set(summary.symbol, summary); };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype._loadSummaryFile = function (filePath) {\n        var _this = this;\n        if (this.loadedFilePaths.has(filePath)) {\n            return;\n        }\n        this.loadedFilePaths.add(filePath);\n        if (this.isLibraryFile(filePath)) {\n            var /** @type {?} */ summaryFilePath = summaryFileName(filePath);\n            var /** @type {?} */ json = void 0;\n            try {\n                json = this.host.loadSummary(summaryFilePath);\n            }\n            catch (e) {\n                console.error(\"Error loading summary file \" + summaryFilePath);\n                throw e;\n            }\n            if (json) {\n                var _a = deserializeSummaries(this.staticSymbolCache, json), summaries = _a.summaries, importAs = _a.importAs;\n                summaries.forEach(function (summary) { return _this.summaryCache.set(summary.symbol, summary); });\n                importAs.forEach(function (importAs) {\n                    _this.importAs.set(importAs.symbol, _this.staticSymbolCache.get(ngfactoryFilePath(filePath), importAs.importAs));\n                });\n            }\n        }\n    };\n    return AotSummaryResolver;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a new AotCompiler based on options and a host.\n * @param {?} compilerHost\n * @param {?} options\n * @return {?}\n */\nfunction createAotCompiler(compilerHost, options) {\n    var /** @type {?} */ translations = options.translations || '';\n    var /** @type {?} */ urlResolver = createOfflineCompileUrlResolver();\n    var /** @type {?} */ symbolCache = new StaticSymbolCache();\n    var /** @type {?} */ summaryResolver = new AotSummaryResolver(compilerHost, symbolCache);\n    var /** @type {?} */ symbolResolver = new StaticSymbolResolver(compilerHost, symbolCache, summaryResolver);\n    var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, symbolResolver);\n    StaticAndDynamicReflectionCapabilities.install(staticReflector);\n    var /** @type {?} */ console = new _angular_core.ɵConsole();\n    var /** @type {?} */ htmlParser = new I18NHtmlParser(new HtmlParser(), translations, options.i18nFormat, options.missingTranslation, console);\n    var /** @type {?} */ config = new CompilerConfig({\n        defaultEncapsulation: _angular_core.ViewEncapsulation.Emulated,\n        useJit: false,\n        enableLegacyTemplate: options.enableLegacyTemplate !== false,\n        missingTranslation: options.missingTranslation,\n    });\n    var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return compilerHost.loadResource(url); } }, urlResolver, htmlParser, config);\n    var /** @type {?} */ expressionParser = new Parser(new Lexer());\n    var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n    var /** @type {?} */ tmplParser = new TemplateParser(config, expressionParser, elementSchemaRegistry, htmlParser, console, []);\n    var /** @type {?} */ resolver = new CompileMetadataResolver(config, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n    // TODO(vicb): do not pass options.i18nFormat here\n    var /** @type {?} */ viewCompiler = new ViewCompiler(config, elementSchemaRegistry);\n    var /** @type {?} */ compiler = new AotCompiler(config, compilerHost, resolver, tmplParser, new StyleCompiler(urlResolver), viewCompiler, new NgModuleCompiler(), new TypeScriptEmitter(symbolResolver), summaryResolver, options.locale || null, options.i18nFormat || null, options.genFilePreamble || null, symbolResolver);\n    return { compiler: compiler, reflector: staticReflector };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} statements\n * @param {?} resultVars\n * @return {?}\n */\nfunction interpretStatements(statements, resultVars) {\n    var /** @type {?} */ stmtsWithReturn = statements.concat([new ReturnStatement(literalArr(resultVars.map(function (resultVar) { return variable(resultVar); })))]);\n    var /** @type {?} */ ctx = new _ExecutionContext(null, null, null, new Map());\n    var /** @type {?} */ visitor = new StatementInterpreter();\n    var /** @type {?} */ result = visitor.visitAllStatements(stmtsWithReturn, ctx);\n    return result != null ? result.value : null;\n}\n/**\n * @param {?} varNames\n * @param {?} varValues\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n    var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n    for (var /** @type {?} */ i = 0; i < varNames.length; i++) {\n        childCtx.vars.set(varNames[i], varValues[i]);\n    }\n    var /** @type {?} */ result = visitor.visitAllStatements(statements, childCtx);\n    return result ? result.value : null;\n}\nvar _ExecutionContext = (function () {\n    /**\n     * @param {?} parent\n     * @param {?} instance\n     * @param {?} className\n     * @param {?} vars\n     */\n    function _ExecutionContext(parent, instance, className, vars) {\n        this.parent = parent;\n        this.instance = instance;\n        this.className = className;\n        this.vars = vars;\n    }\n    /**\n     * @return {?}\n     */\n    _ExecutionContext.prototype.createChildWihtLocalVars = function () {\n        return new _ExecutionContext(this, this.instance, this.className, new Map());\n    };\n    return _ExecutionContext;\n}());\nvar ReturnValue = (function () {\n    /**\n     * @param {?} value\n     */\n    function ReturnValue(value) {\n        this.value = value;\n    }\n    return ReturnValue;\n}());\n/**\n * @param {?} _classStmt\n * @param {?} _ctx\n * @param {?} _visitor\n * @return {?}\n */\nfunction createDynamicClass(_classStmt, _ctx, _visitor) {\n    var /** @type {?} */ propertyDescriptors = {};\n    _classStmt.getters.forEach(function (getter) {\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[getter.name] = {\n            configurable: false,\n            get: function () {\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    _classStmt.methods.forEach(function (method) {\n        var /** @type {?} */ paramNames = method.params.map(function (param) { return param.name; });\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[((method.name))] = {\n            writable: false,\n            configurable: false,\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    var /** @type {?} */ ctorParamNames = _classStmt.constructorMethod.params.map(function (param) { return param.name; });\n    // Note: use `function` instead of arrow function to capture `this`\n    var /** @type {?} */ ctor = function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n        _classStmt.fields.forEach(function (field) { _this[field.name] = undefined; });\n        _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n    };\n    var /** @type {?} */ superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n    ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n    return ctor;\n}\nvar StatementInterpreter = (function () {\n    function StatementInterpreter() {\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    StatementInterpreter.prototype.debugAst = function (ast) { return debugOutputAstAsTypeScript(ast); };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        ctx.vars.set(stmt.name, stmt.value.visitExpression(this, ctx));\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteVarExpr = function (expr, ctx) {\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(expr.name)) {\n                currCtx.vars.set(expr.name, value);\n                return value;\n            }\n            currCtx = ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + expr.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadVarExpr = function (ast, ctx) {\n        var /** @type {?} */ varName = ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    return ctx.instance.__proto__;\n                case BuiltinVar.This:\n                    return ctx.instance;\n                case BuiltinVar.CatchError:\n                    varName = CATCH_ERROR_VAR$2;\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = CATCH_STACK_VAR$2;\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(varName)) {\n                return currCtx.vars.get(varName);\n            }\n            currCtx = ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + varName);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteKeyExpr = function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ index = expr.index.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[index] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWritePropExpr = function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[expr.name] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeMethodExpr = function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ args = this.visitAllExpressions(expr.args, ctx);\n        var /** @type {?} */ result;\n        if (expr.builtin != null) {\n            switch (expr.builtin) {\n                case BuiltinMethod.ConcatArray:\n                    result = receiver.concat.apply(receiver, args);\n                    break;\n                case BuiltinMethod.SubscribeObservable:\n                    result = receiver.subscribe({ next: args[0] });\n                    break;\n                case BuiltinMethod.Bind:\n                    result = receiver.bind.apply(receiver, args);\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin method \" + expr.builtin);\n            }\n        }\n        else {\n            result = receiver[((expr.name))].apply(receiver, args);\n        }\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeFunctionExpr = function (stmt, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(stmt.args, ctx);\n        var /** @type {?} */ fnExpr = stmt.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n            return null;\n        }\n        else {\n            var /** @type {?} */ fn$$1 = stmt.fn.visitExpression(this, ctx);\n            return fn$$1.apply(null, args);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReturnStmt = function (stmt, ctx) {\n        return new ReturnValue(stmt.value.visitExpression(this, ctx));\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        var /** @type {?} */ clazz = createDynamicClass(stmt, ctx, this);\n        ctx.vars.set(stmt.name, clazz);\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExpressionStmt = function (stmt, ctx) {\n        return stmt.expr.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitIfStmt = function (stmt, ctx) {\n        var /** @type {?} */ condition = stmt.condition.visitExpression(this, ctx);\n        if (condition) {\n            return this.visitAllStatements(stmt.trueCase, ctx);\n        }\n        else if (stmt.falseCase != null) {\n            return this.visitAllStatements(stmt.falseCase, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitTryCatchStmt = function (stmt, ctx) {\n        try {\n            return this.visitAllStatements(stmt.bodyStmts, ctx);\n        }\n        catch (e) {\n            var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n            childCtx.vars.set(CATCH_ERROR_VAR$2, e);\n            childCtx.vars.set(CATCH_STACK_VAR$2, e.stack);\n            return this.visitAllStatements(stmt.catchStmts, childCtx);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitThrowStmt = function (stmt, ctx) {\n        throw stmt.error.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommentStmt = function (stmt, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInstantiateExpr = function (ast, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(ast.args, ctx);\n        var /** @type {?} */ clazz = ast.classExpr.visitExpression(this, ctx);\n        return new (clazz.bind.apply(clazz, [void 0].concat(args)))();\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralExpr = function (ast, ctx) { return ast.value; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExternalExpr = function (ast, ctx) {\n        return ast.value.reference;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitConditionalExpr = function (ast, ctx) {\n        if (ast.condition.visitExpression(this, ctx)) {\n            return ast.trueCase.visitExpression(this, ctx);\n        }\n        else if (ast.falseCase != null) {\n            return ast.falseCase.visitExpression(this, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitNotExpr = function (ast, ctx) {\n        return !ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAssertNotNullExpr = function (ast, ctx) {\n        return ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCastExpr = function (ast, ctx) {\n        return ast.value.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitFunctionExpr = function (ast, ctx) {\n        var /** @type {?} */ paramNames = ast.params.map(function (param) { return param.name; });\n        return _declareFn(paramNames, ast.statements, ctx, this);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        var /** @type {?} */ paramNames = stmt.params.map(function (param) { return param.name; });\n        ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitBinaryOperatorExpr = function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ lhs = function () { return ast.lhs.visitExpression(_this, ctx); };\n        var /** @type {?} */ rhs = function () { return ast.rhs.visitExpression(_this, ctx); };\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                return lhs() == rhs();\n            case BinaryOperator.Identical:\n                return lhs() === rhs();\n            case BinaryOperator.NotEquals:\n                return lhs() != rhs();\n            case BinaryOperator.NotIdentical:\n                return lhs() !== rhs();\n            case BinaryOperator.And:\n                return lhs() && rhs();\n            case BinaryOperator.Or:\n                return lhs() || rhs();\n            case BinaryOperator.Plus:\n                return lhs() + rhs();\n            case BinaryOperator.Minus:\n                return lhs() - rhs();\n            case BinaryOperator.Divide:\n                return lhs() / rhs();\n            case BinaryOperator.Multiply:\n                return lhs() * rhs();\n            case BinaryOperator.Modulo:\n                return lhs() % rhs();\n            case BinaryOperator.Lower:\n                return lhs() < rhs();\n            case BinaryOperator.LowerEquals:\n                return lhs() <= rhs();\n            case BinaryOperator.Bigger:\n                return lhs() > rhs();\n            case BinaryOperator.BiggerEquals:\n                return lhs() >= rhs();\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadPropExpr = function (ast, ctx) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        result = receiver[ast.name];\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadKeyExpr = function (ast, ctx) {\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ prop = ast.index.visitExpression(this, ctx);\n        return receiver[prop];\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n        return this.visitAllExpressions(ast.entries, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralMapExpr = function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        ast.entries.forEach(function (entry) { return ((result))[entry.key] = entry.value.visitExpression(_this, ctx); });\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommaExpr = function (ast, context) {\n        var /** @type {?} */ values = this.visitAllExpressions(ast.parts, context);\n        return values[values.length - 1];\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllExpressions = function (expressions, ctx) {\n        var _this = this;\n        return expressions.map(function (expr) { return expr.visitExpression(_this, ctx); });\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllStatements = function (statements, ctx) {\n        for (var /** @type {?} */ i = 0; i < statements.length; i++) {\n            var /** @type {?} */ stmt = statements[i];\n            var /** @type {?} */ val = stmt.visitStatement(this, ctx);\n            if (val instanceof ReturnValue) {\n                return val;\n            }\n        }\n        return null;\n    };\n    return StatementInterpreter;\n}());\n/**\n * @param {?} varNames\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _declareFn(varNames, statements, ctx, visitor) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n    };\n}\nvar CATCH_ERROR_VAR$2 = 'error';\nvar CATCH_STACK_VAR$2 = 'stack';\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar AbstractJsEmitterVisitor = (function (_super) {\n    __extends(AbstractJsEmitterVisitor, _super);\n    function AbstractJsEmitterVisitor() {\n        return _super.call(this, false) || this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        this._visitClassConstructor(stmt, ctx);\n        if (stmt.parent != null) {\n            ctx.print(stmt, stmt.name + \".prototype = Object.create(\");\n            stmt.parent.visitExpression(this, ctx);\n            ctx.println(stmt, \".prototype);\");\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(stmt, getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(stmt, method, ctx); });\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        if (stmt.constructorMethod != null) {\n            this._visitParams(stmt.constructorMethod.params, ctx);\n        }\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (stmt.constructorMethod != null) {\n            if (stmt.constructorMethod.body.length > 0) {\n                ctx.println(stmt, \"var self = this;\");\n                this.visitAllStatements(stmt.constructorMethod.body, ctx);\n            }\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassGetter = function (stmt, getter, ctx) {\n        ctx.println(stmt, \"Object.defineProperty(\" + stmt.name + \".prototype, '\" + getter.name + \"', { get: function() {\");\n        ctx.incIndent();\n        if (getter.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(getter.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}});\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassMethod = function (stmt, method, ctx) {\n        ctx.print(stmt, stmt.name + \".prototype.\" + method.name + \" = function(\");\n        this._visitParams(method.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (method.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(method.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"};\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {\n        if (ast.builtin === BuiltinVar.This) {\n            ctx.print(ast, 'self');\n        }\n        else if (ast.builtin === BuiltinVar.Super) {\n            throw new Error(\"'super' needs to be handled at a parent ast node, not at the variable level!\");\n        }\n        else {\n            _super.prototype.visitReadVarExpr.call(this, ast, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"var \" + stmt.name + \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {\n        var /** @type {?} */ fnExpr = expr.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ((((ctx.currentClass)).parent)).visitExpression(this, ctx);\n            ctx.print(expr, \".call(this\");\n            if (expr.args.length > 0) {\n                ctx.print(expr, \", \");\n                this.visitAllExpressions(expr.args, ctx, ',');\n            }\n            ctx.print(expr, \")\");\n        }\n        else {\n            _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {\n        ctx.print(ast, \"function(\");\n        this._visitParams(ast.params, ctx);\n        ctx.println(ast, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack')).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitParams = function (params, ctx) {\n        this.visitAllObjects(function (param) { return ctx.print(null, param.name); }, params, ctx, ',');\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    return AbstractJsEmitterVisitor;\n}(AbstractEmitterVisitor));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} sourceUrl\n * @param {?} ctx\n * @param {?} vars\n * @return {?}\n */\nfunction evalExpression(sourceUrl$$1, ctx, vars) {\n    var /** @type {?} */ fnBody = ctx.toSource() + \"\\n//# sourceURL=\" + sourceUrl$$1;\n    var /** @type {?} */ fnArgNames = [];\n    var /** @type {?} */ fnArgValues = [];\n    for (var /** @type {?} */ argName in vars) {\n        fnArgNames.push(argName);\n        fnArgValues.push(vars[argName]);\n    }\n    if (_angular_core.isDevMode()) {\n        // using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise\n        // E.g. ```\n        // function anonymous(a,b,c\n        // /**/) { ... }```\n        // We don't want to hard code this fact, so we auto detect it via an empty function first.\n        var /** @type {?} */ emptyFn = new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat('return null;'))))().toString();\n        var /** @type {?} */ headerLines = emptyFn.slice(0, emptyFn.indexOf('return null;')).split('\\n').length - 1;\n        fnBody += \"\\n\" + ctx.toSourceMapGenerator(sourceUrl$$1, sourceUrl$$1, headerLines).toJsComment();\n    }\n    return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);\n}\n/**\n * @param {?} sourceUrl\n * @param {?} statements\n * @param {?} resultVars\n * @return {?}\n */\nfunction jitStatements(sourceUrl$$1, statements, resultVars) {\n    var /** @type {?} */ converter = new JitEmitterVisitor();\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot(resultVars);\n    var /** @type {?} */ returnStmt = new ReturnStatement(literalArr(resultVars.map(function (resultVar) { return variable(resultVar); })));\n    converter.visitAllStatements(statements.concat([returnStmt]), ctx);\n    return evalExpression(sourceUrl$$1, ctx, converter.getArgs());\n}\nvar JitEmitterVisitor = (function (_super) {\n    __extends(JitEmitterVisitor, _super);\n    function JitEmitterVisitor() {\n        var _this = _super.apply(this, arguments) || this;\n        _this._evalArgNames = [];\n        _this._evalArgValues = [];\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.getArgs = function () {\n        var /** @type {?} */ result = {};\n        for (var /** @type {?} */ i = 0; i < this._evalArgNames.length; i++) {\n            result[this._evalArgNames[i]] = this._evalArgValues[i];\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {\n        var /** @type {?} */ value = ast.value.reference;\n        var /** @type {?} */ id = this._evalArgValues.indexOf(value);\n        if (id === -1) {\n            id = this._evalArgValues.length;\n            this._evalArgValues.push(value);\n            var /** @type {?} */ name = identifierName(ast.value) || 'val';\n            this._evalArgNames.push(\"jit_\" + name + id);\n        }\n        ctx.print(ast, this._evalArgNames[id]);\n        return null;\n    };\n    return JitEmitterVisitor;\n}(AbstractJsEmitterVisitor));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n *\n * \\@security When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar JitCompiler = (function () {\n    /**\n     * @param {?} _injector\n     * @param {?} _metadataResolver\n     * @param {?} _templateParser\n     * @param {?} _styleCompiler\n     * @param {?} _viewCompiler\n     * @param {?} _ngModuleCompiler\n     * @param {?} _summaryResolver\n     * @param {?} _compilerConfig\n     * @param {?} _console\n     */\n    function JitCompiler(_injector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _summaryResolver, _compilerConfig, _console) {\n        this._injector = _injector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._summaryResolver = _summaryResolver;\n        this._compilerConfig = _compilerConfig;\n        this._console = _console;\n        this._compiledTemplateCache = new Map();\n        this._compiledHostTemplateCache = new Map();\n        this._compiledDirectiveWrapperCache = new Map();\n        this._compiledNgModuleCache = new Map();\n        this._sharedStylesheetCount = 0;\n    }\n    Object.defineProperty(JitCompiler.prototype, \"injector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleSync = function (moduleType) {\n        return ((this._compileModuleAndComponents(moduleType, true).syncResult));\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAsync = function (moduleType) {\n        return ((this._compileModuleAndComponents(moduleType, false).asyncResult));\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n        return ((this._compileModuleAndAllComponents(moduleType, true).syncResult));\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n        return ((this._compileModuleAndAllComponents(moduleType, false).asyncResult));\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    JitCompiler.prototype.getNgContentSelectors = function (component) {\n        this._console.warn('Compiler.getNgContentSelectors is deprecated. Use ComponentFactory.ngContentSelectors instead!');\n        var /** @type {?} */ template = this._compiledTemplateCache.get(component);\n        if (!template) {\n            throw new Error(\"The component \" + _angular_core.ɵstringify(component) + \" is not yet compiled!\");\n        }\n        return ((template.compMeta.template)).ngContentSelectors;\n    };\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    JitCompiler.prototype.getComponentFactory = function (component) {\n        var /** @type {?} */ summary = this._metadataResolver.getDirectiveSummary(component);\n        return (summary.componentFactory);\n    };\n    /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    JitCompiler.prototype.loadAotSummaries = function (summaries) {\n        var _this = this;\n        this.clearCache();\n        flattenSummaries(summaries).forEach(function (summary) {\n            _this._summaryResolver.addSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n        });\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    JitCompiler.prototype.hasAotSummary = function (ref) { return !!this._summaryResolver.resolveSummary(ref); };\n    /**\n     * @param {?} ids\n     * @return {?}\n     */\n    JitCompiler.prototype._filterJitIdentifiers = function (ids) {\n        var _this = this;\n        return ids.map(function (mod) { return mod.reference; }).filter(function (ref) { return !_this.hasAotSummary(ref); });\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndComponents = function (moduleType, isSync) {\n        var _this = this;\n        var /** @type {?} */ loadingPromise = this._loadModules(moduleType, isSync);\n        var /** @type {?} */ createResult = function () {\n            _this._compileComponents(moduleType, null);\n            return _this._compileModule(moduleType);\n        };\n        if (isSync) {\n            return new SyncAsyncResult(createResult());\n        }\n        else {\n            return new SyncAsyncResult(null, loadingPromise.then(createResult));\n        }\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndAllComponents = function (moduleType, isSync) {\n        var _this = this;\n        var /** @type {?} */ loadingPromise = this._loadModules(moduleType, isSync);\n        var /** @type {?} */ createResult = function () {\n            var /** @type {?} */ componentFactories = [];\n            _this._compileComponents(moduleType, componentFactories);\n            return new _angular_core.ModuleWithComponentFactories(_this._compileModule(moduleType), componentFactories);\n        };\n        if (isSync) {\n            return new SyncAsyncResult(createResult());\n        }\n        else {\n            return new SyncAsyncResult(null, loadingPromise.then(createResult));\n        }\n    };\n    /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._loadModules = function (mainModule, isSync) {\n        var _this = this;\n        var /** @type {?} */ loadingPromises = [];\n        var /** @type {?} */ mainNgModule = ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        // Note: for runtime compilation, we want to transitively compile all modules,\n        // so we also need to load the declared directives / pipes for all nested modules.\n        this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach(function (nestedNgModule) {\n            // getNgModuleMetadata only returns null if the value passed in is not an NgModule\n            var /** @type {?} */ moduleMeta = ((_this._metadataResolver.getNgModuleMetadata(nestedNgModule)));\n            _this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach(function (ref) {\n                var /** @type {?} */ promise = _this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference, ref, isSync);\n                if (promise) {\n                    loadingPromises.push(promise);\n                }\n            });\n            _this._filterJitIdentifiers(moduleMeta.declaredPipes)\n                .forEach(function (ref) { return _this._metadataResolver.getOrLoadPipeMetadata(ref); });\n        });\n        return Promise.all(loadingPromises);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModule = function (moduleType) {\n        var _this = this;\n        var /** @type {?} */ ngModuleFactory = ((this._compiledNgModuleCache.get(moduleType)));\n        if (!ngModuleFactory) {\n            var /** @type {?} */ moduleMeta_1 = ((this._metadataResolver.getNgModuleMetadata(moduleType)));\n            // Always provide a bound Compiler\n            var /** @type {?} */ extraProviders = [this._metadataResolver.getProviderMetadata(new ProviderMeta(_angular_core.Compiler, { useFactory: function () { return new ModuleBoundCompiler(_this, moduleMeta_1.type.reference); } }))];\n            var /** @type {?} */ compileResult = this._ngModuleCompiler.compile(moduleMeta_1, extraProviders);\n            if (!this._compilerConfig.useJit) {\n                ngModuleFactory =\n                    interpretStatements(compileResult.statements, [compileResult.ngModuleFactoryVar])[0];\n            }\n            else {\n                ngModuleFactory = jitStatements(ngModuleJitUrl(moduleMeta_1), compileResult.statements, [compileResult.ngModuleFactoryVar])[0];\n            }\n            this._compiledNgModuleCache.set(moduleMeta_1.type.reference, ngModuleFactory);\n        }\n        return ngModuleFactory;\n    };\n    /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    JitCompiler.prototype._compileComponents = function (mainModule, allComponentFactories) {\n        var _this = this;\n        var /** @type {?} */ ngModule = ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        var /** @type {?} */ moduleByJitDirective = new Map();\n        var /** @type {?} */ templates = new Set();\n        var /** @type {?} */ transJitModules = this._filterJitIdentifiers(ngModule.transitiveModule.modules);\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                moduleByJitDirective.set(dirRef, localModuleMeta);\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    templates.add(_this._createCompiledTemplate(dirMeta, localModuleMeta));\n                    if (allComponentFactories) {\n                        var /** @type {?} */ template = _this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n                        templates.add(template);\n                        allComponentFactories.push(/** @type {?} */ (dirMeta.componentFactory));\n                    }\n                }\n            });\n        });\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    dirMeta.entryComponents.forEach(function (entryComponentType) {\n                        var /** @type {?} */ moduleMeta = ((moduleByJitDirective.get(entryComponentType.componentType)));\n                        templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                    });\n                }\n            });\n            localModuleMeta.entryComponents.forEach(function (entryComponentType) {\n                if (!_this.hasAotSummary(entryComponentType.componentType.reference)) {\n                    var /** @type {?} */ moduleMeta = ((moduleByJitDirective.get(entryComponentType.componentType)));\n                    templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                }\n            });\n        });\n        templates.forEach(function (template) { return _this._compileTemplate(template); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCacheFor = function (type) {\n        this._compiledNgModuleCache.delete(type);\n        this._metadataResolver.clearCacheFor(type);\n        this._compiledHostTemplateCache.delete(type);\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(type);\n        if (compiledTemplate) {\n            this._compiledTemplateCache.delete(type);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCache = function () {\n        this._metadataResolver.clearCache();\n        this._compiledTemplateCache.clear();\n        this._compiledHostTemplateCache.clear();\n        this._compiledNgModuleCache.clear();\n    };\n    /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledHostTemplate = function (compType, ngModule) {\n        if (!ngModule) {\n            throw new Error(\"Component \" + _angular_core.ɵstringify(compType) + \" is not part of any NgModule or the module has not been imported into your module.\");\n        }\n        var /** @type {?} */ compiledTemplate = this._compiledHostTemplateCache.get(compType);\n        if (!compiledTemplate) {\n            var /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n            assertComponent(compMeta);\n            var /** @type {?} */ componentFactory = (compMeta.componentFactory);\n            var /** @type {?} */ hostClass = this._metadataResolver.getHostComponentType(compType);\n            var /** @type {?} */ hostMeta = createHostComponentMeta(hostClass, compMeta, /** @type {?} */ (_angular_core.ɵgetComponentViewDefinitionFactory(componentFactory)));\n            compiledTemplate =\n                new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n            this._compiledHostTemplateCache.set(compType, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledTemplate = function (compMeta, ngModule) {\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n        if (!compiledTemplate) {\n            assertComponent(compMeta);\n            compiledTemplate = new CompiledTemplate(false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n            this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} template\n     * @return {?}\n     */\n    JitCompiler.prototype._compileTemplate = function (template) {\n        var _this = this;\n        if (template.isCompiled) {\n            return;\n        }\n        var /** @type {?} */ compMeta = template.compMeta;\n        var /** @type {?} */ externalStylesheetsByModuleUrl = new Map();\n        var /** @type {?} */ stylesCompileResult = this._styleCompiler.compileComponent(compMeta);\n        stylesCompileResult.externalStylesheets.forEach(function (r) { externalStylesheetsByModuleUrl.set(/** @type {?} */ ((r.meta.moduleUrl)), r); });\n        this._resolveStylesCompileResult(stylesCompileResult.componentStylesheet, externalStylesheetsByModuleUrl);\n        var /** @type {?} */ directives = template.directives.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = template.ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var _a = this._templateParser.parse(compMeta, /** @type {?} */ ((((compMeta.template)).template)), directives, pipes, template.ngModule.schemas, templateSourceUrl(template.ngModule.type, template.compMeta, /** @type {?} */ ((template.compMeta.template)))), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ compileResult = this._viewCompiler.compileComponent(compMeta, parsedTemplate, variable(stylesCompileResult.componentStylesheet.stylesVar), usedPipes);\n        var /** @type {?} */ statements = stylesCompileResult.componentStylesheet.statements.concat(compileResult.statements);\n        var /** @type {?} */ viewClassAndRendererTypeVars = compMeta.isHost ?\n            [compileResult.viewClassVar] :\n            [compileResult.viewClassVar, compileResult.rendererTypeVar];\n        var /** @type {?} */ viewClass;\n        var /** @type {?} */ rendererType;\n        if (!this._compilerConfig.useJit) {\n            _b = interpretStatements(statements, viewClassAndRendererTypeVars), viewClass = _b[0], rendererType = _b[1];\n        }\n        else {\n            _c = jitStatements(templateJitUrl(template.ngModule.type, template.compMeta), statements, viewClassAndRendererTypeVars), viewClass = _c[0], rendererType = _c[1];\n        }\n        template.compiled(viewClass, rendererType);\n        var _b, _c;\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveStylesCompileResult = function (result, externalStylesheetsByModuleUrl) {\n        var _this = this;\n        result.dependencies.forEach(function (dep, i) {\n            var /** @type {?} */ nestedCompileResult = ((externalStylesheetsByModuleUrl.get(dep.moduleUrl)));\n            var /** @type {?} */ nestedStylesArr = _this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n            dep.valuePlaceholder.reference = nestedStylesArr;\n        });\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveAndEvalStylesCompileResult = function (result, externalStylesheetsByModuleUrl) {\n        this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n        if (!this._compilerConfig.useJit) {\n            return interpretStatements(result.statements, [result.stylesVar])[0];\n        }\n        else {\n            return jitStatements(sharedStylesheetJitUrl(result.meta, this._sharedStylesheetCount++), result.statements, [result.stylesVar])[0];\n        }\n    };\n    return JitCompiler;\n}());\nJitCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nJitCompiler.ctorParameters = function () { return [\n    { type: _angular_core.Injector, },\n    { type: CompileMetadataResolver, },\n    { type: TemplateParser, },\n    { type: StyleCompiler, },\n    { type: ViewCompiler, },\n    { type: NgModuleCompiler, },\n    { type: SummaryResolver, },\n    { type: CompilerConfig, },\n    { type: _angular_core.ɵConsole, },\n]; };\nvar CompiledTemplate = (function () {\n    /**\n     * @param {?} isHost\n     * @param {?} compType\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directives\n     */\n    function CompiledTemplate(isHost, compType, compMeta, ngModule, directives) {\n        this.isHost = isHost;\n        this.compType = compType;\n        this.compMeta = compMeta;\n        this.ngModule = ngModule;\n        this.directives = directives;\n        this._viewClass = ((null));\n        this.isCompiled = false;\n    }\n    /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    CompiledTemplate.prototype.compiled = function (viewClass, rendererType) {\n        this._viewClass = viewClass;\n        ((this.compMeta.componentViewType)).setDelegate(viewClass);\n        for (var /** @type {?} */ prop in rendererType) {\n            ((this.compMeta.rendererType))[prop] = rendererType[prop];\n        }\n        this.isCompiled = true;\n    };\n    return CompiledTemplate;\n}());\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction assertComponent(meta) {\n    if (!meta.isComponent) {\n        throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n    }\n}\n/**\n * Implements `Compiler` by delegating to the JitCompiler using a known module.\n */\nvar ModuleBoundCompiler = (function () {\n    /**\n     * @param {?} _delegate\n     * @param {?} _ngModule\n     */\n    function ModuleBoundCompiler(_delegate, _ngModule) {\n        this._delegate = _delegate;\n        this._ngModule = _ngModule;\n    }\n    Object.defineProperty(ModuleBoundCompiler.prototype, \"_injector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._delegate.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.compileModuleSync = function (moduleType) {\n        return this._delegate.compileModuleSync(moduleType);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.compileModuleAsync = function (moduleType) {\n        return this._delegate.compileModuleAsync(moduleType);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n        return this._delegate.compileModuleAndAllComponentsSync(moduleType);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n        return this._delegate.compileModuleAndAllComponentsAsync(moduleType);\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.getNgContentSelectors = function (component) {\n        return this._delegate.getNgContentSelectors(component);\n    };\n    /**\n     * Clears all caches\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.clearCache = function () { this._delegate.clearCache(); };\n    /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.clearCacheFor = function (type) { this._delegate.clearCacheFor(type); };\n    return ModuleBoundCompiler;\n}());\n/**\n * @param {?} fn\n * @param {?=} out\n * @return {?}\n */\nfunction flattenSummaries(fn$$1, out) {\n    if (out === void 0) { out = []; }\n    fn$$1().forEach(function (entry) {\n        if (typeof entry === 'function') {\n            flattenSummaries(entry, out);\n        }\n        else {\n            out.push(entry);\n        }\n    });\n    return out;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for message extracted from the templates.\n */\nvar MessageBundle = (function () {\n    /**\n     * @param {?} _htmlParser\n     * @param {?} _implicitTags\n     * @param {?} _implicitAttrs\n     * @param {?=} _locale\n     */\n    function MessageBundle(_htmlParser, _implicitTags, _implicitAttrs, _locale) {\n        if (_locale === void 0) { _locale = null; }\n        this._htmlParser = _htmlParser;\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n        this._locale = _locale;\n        this._messages = [];\n    }\n    /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    MessageBundle.prototype.updateFromTemplate = function (html, url, interpolationConfig) {\n        var /** @type {?} */ htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n        if (htmlParserResult.errors.length) {\n            return htmlParserResult.errors;\n        }\n        var /** @type {?} */ i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n        if (i18nParserResult.errors.length) {\n            return i18nParserResult.errors;\n        }\n        (_a = this._messages).push.apply(_a, i18nParserResult.messages);\n        return [];\n        var _a;\n    };\n    /**\n     * @return {?}\n     */\n    MessageBundle.prototype.getMessages = function () { return this._messages; };\n    /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    MessageBundle.prototype.write = function (serializer, filterSources) {\n        var /** @type {?} */ messages = {};\n        var /** @type {?} */ mapperVisitor = new MapPlaceholderNames();\n        // Deduplicate messages based on their ID\n        this._messages.forEach(function (message) {\n            var /** @type {?} */ id = serializer.digest(message);\n            if (!messages.hasOwnProperty(id)) {\n                messages[id] = message;\n            }\n            else {\n                (_a = messages[id].sources).push.apply(_a, message.sources);\n            }\n            var _a;\n        });\n        // Transform placeholder names using the serializer mapping\n        var /** @type {?} */ msgList = Object.keys(messages).map(function (id) {\n            var /** @type {?} */ mapper = serializer.createNameMapper(messages[id]);\n            var /** @type {?} */ src = messages[id];\n            var /** @type {?} */ nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n            var /** @type {?} */ transformedMessage = new Message(nodes, {}, {}, src.meaning, src.description, id);\n            transformedMessage.sources = src.sources;\n            if (filterSources) {\n                transformedMessage.sources.forEach(function (source) { return source.filePath = filterSources(source.filePath); });\n            }\n            return transformedMessage;\n        });\n        return serializer.write(msgList, this._locale);\n    };\n    return MessageBundle;\n}());\nvar MapPlaceholderNames = (function (_super) {\n    __extends(MapPlaceholderNames, _super);\n    function MapPlaceholderNames() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.convert = function (nodes, mapper) {\n        var _this = this;\n        return mapper ? nodes.map(function (n) { return n.visit(_this, mapper); }) : nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitTagPlaceholder = function (ph, mapper) {\n        var _this = this;\n        var /** @type {?} */ startName = ((mapper.toPublicName(ph.startName)));\n        var /** @type {?} */ closeName = ph.closeName ? ((mapper.toPublicName(ph.closeName))) : ph.closeName;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, mapper); });\n        return new TagPlaceholder(ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitPlaceholder = function (ph, mapper) {\n        return new Placeholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitIcuPlaceholder = function (ph, mapper) {\n        return new IcuPlaceholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    return MapPlaceholderNames;\n}(CloneVisitor));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extract i18n messages from source code\n */\nvar Extractor = (function () {\n    /**\n     * @param {?} host\n     * @param {?} staticSymbolResolver\n     * @param {?} messageBundle\n     * @param {?} metadataResolver\n     */\n    function Extractor(host, staticSymbolResolver, messageBundle, metadataResolver) {\n        this.host = host;\n        this.staticSymbolResolver = staticSymbolResolver;\n        this.messageBundle = messageBundle;\n        this.metadataResolver = metadataResolver;\n    }\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    Extractor.prototype.extract = function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ programSymbols = extractProgramSymbols(this.staticSymbolResolver, rootFiles, this.host);\n        var _a = analyzeAndValidateNgModules(programSymbols, this.host, this.metadataResolver), files = _a.files, ngModules = _a.ngModules;\n        return Promise\n            .all(ngModules.map(function (ngModule) { return _this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false); }))\n            .then(function () {\n            var /** @type {?} */ errors = [];\n            files.forEach(function (file) {\n                var /** @type {?} */ compMetas = [];\n                file.directives.forEach(function (directiveType) {\n                    var /** @type {?} */ dirMeta = _this.metadataResolver.getDirectiveMetadata(directiveType);\n                    if (dirMeta && dirMeta.isComponent) {\n                        compMetas.push(dirMeta);\n                    }\n                });\n                compMetas.forEach(function (compMeta) {\n                    var /** @type {?} */ html = ((((compMeta.template)).template));\n                    var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                    errors.push.apply(errors, ((_this.messageBundle.updateFromTemplate(html, file.srcUrl, interpolationConfig))));\n                });\n            });\n            if (errors.length) {\n                throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n            }\n            return _this.messageBundle;\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    Extractor.create = function (host, locale) {\n        var /** @type {?} */ htmlParser = new I18NHtmlParser(new HtmlParser());\n        var /** @type {?} */ urlResolver = createOfflineCompileUrlResolver();\n        var /** @type {?} */ symbolCache = new StaticSymbolCache();\n        var /** @type {?} */ summaryResolver = new AotSummaryResolver(host, symbolCache);\n        var /** @type {?} */ staticSymbolResolver = new StaticSymbolResolver(host, symbolCache, summaryResolver);\n        var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, staticSymbolResolver);\n        StaticAndDynamicReflectionCapabilities.install(staticReflector);\n        var /** @type {?} */ config = new CompilerConfig({ defaultEncapsulation: _angular_core.ViewEncapsulation.Emulated, useJit: false });\n        var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return host.loadResource(url); } }, urlResolver, htmlParser, config);\n        var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n        var /** @type {?} */ resolver = new CompileMetadataResolver(config, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, new _angular_core.ɵConsole(), symbolCache, staticReflector);\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        var /** @type {?} */ extractor = new Extractor(host, staticSymbolResolver, messageBundle, resolver);\n        return { extractor: extractor, staticReflector: staticReflector };\n    };\n    return Extractor;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _NO_RESOURCE_LOADER = {\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    get: function (url) {\n        throw new Error(\"No ResourceLoader implementation has been provided. Can't read the url \\\"\" + url + \"\\\"\");\n    }\n};\nvar baseHtmlParser = new _angular_core.InjectionToken('HtmlParser');\n/**\n * A set of providers that provide `JitCompiler` and its dependencies to use for\n * template compilation.\n */\nvar COMPILER_PROVIDERS = [\n    { provide: _angular_core.ɵReflector, useValue: _angular_core.ɵreflector },\n    { provide: _angular_core.ɵReflectorReader, useExisting: _angular_core.ɵReflector },\n    { provide: ResourceLoader, useValue: _NO_RESOURCE_LOADER },\n    JitSummaryResolver,\n    { provide: SummaryResolver, useExisting: JitSummaryResolver },\n    _angular_core.ɵConsole,\n    Lexer,\n    Parser,\n    {\n        provide: baseHtmlParser,\n        useClass: HtmlParser,\n    },\n    {\n        provide: I18NHtmlParser,\n        useFactory: function (parser, translations, format, config, console) { return new I18NHtmlParser(parser, translations, format, /** @type {?} */ ((config.missingTranslation)), console); },\n        deps: [\n            baseHtmlParser,\n            [new _angular_core.Optional(), new _angular_core.Inject(_angular_core.TRANSLATIONS)],\n            [new _angular_core.Optional(), new _angular_core.Inject(_angular_core.TRANSLATIONS_FORMAT)],\n            [CompilerConfig],\n            [_angular_core.ɵConsole],\n        ]\n    },\n    {\n        provide: HtmlParser,\n        useExisting: I18NHtmlParser,\n    },\n    TemplateParser,\n    DirectiveNormalizer,\n    CompileMetadataResolver,\n    DEFAULT_PACKAGE_URL_PROVIDER,\n    StyleCompiler,\n    ViewCompiler,\n    NgModuleCompiler,\n    { provide: CompilerConfig, useValue: new CompilerConfig() },\n    JitCompiler,\n    { provide: _angular_core.Compiler, useExisting: JitCompiler },\n    DomElementSchemaRegistry,\n    { provide: ElementSchemaRegistry, useExisting: DomElementSchemaRegistry },\n    UrlResolver,\n    DirectiveResolver,\n    PipeResolver,\n    NgModuleResolver,\n];\nvar JitCompilerFactory = (function () {\n    /**\n     * @param {?} defaultOptions\n     */\n    function JitCompilerFactory(defaultOptions) {\n        var compilerOptions = {\n            useDebug: _angular_core.isDevMode(),\n            useJit: true,\n            defaultEncapsulation: _angular_core.ViewEncapsulation.Emulated,\n            missingTranslation: _angular_core.MissingTranslationStrategy.Warning,\n            enableLegacyTemplate: true,\n        };\n        this._defaultOptions = [compilerOptions].concat(defaultOptions);\n    }\n    /**\n     * @param {?=} options\n     * @return {?}\n     */\n    JitCompilerFactory.prototype.createCompiler = function (options) {\n        if (options === void 0) { options = []; }\n        var /** @type {?} */ opts = _mergeOptions(this._defaultOptions.concat(options));\n        var /** @type {?} */ injector = _angular_core.ReflectiveInjector.resolveAndCreate([\n            COMPILER_PROVIDERS, {\n                provide: CompilerConfig,\n                useFactory: function () {\n                    return new CompilerConfig({\n                        // let explicit values from the compiler options overwrite options\n                        // from the app providers\n                        useJit: opts.useJit,\n                        // let explicit values from the compiler options overwrite options\n                        // from the app providers\n                        defaultEncapsulation: opts.defaultEncapsulation,\n                        missingTranslation: opts.missingTranslation,\n                        enableLegacyTemplate: opts.enableLegacyTemplate,\n                    });\n                },\n                deps: []\n            }, /** @type {?} */ ((opts.providers))\n        ]);\n        return injector.get(_angular_core.Compiler);\n    };\n    return JitCompilerFactory;\n}());\nJitCompilerFactory.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nJitCompilerFactory.ctorParameters = function () { return [\n    { type: Array, decorators: [{ type: _angular_core.Inject, args: [_angular_core.COMPILER_OPTIONS,] },] },\n]; };\n/**\n * @return {?}\n */\nfunction _initReflector() {\n    _angular_core.ɵreflector.reflectionCapabilities = new _angular_core.ɵReflectionCapabilities();\n}\n/**\n * A platform that included corePlatform and the compiler.\n *\n * \\@experimental\n */\nvar platformCoreDynamic = _angular_core.createPlatformFactory(_angular_core.platformCore, 'coreDynamic', [\n    { provide: _angular_core.COMPILER_OPTIONS, useValue: {}, multi: true },\n    { provide: _angular_core.CompilerFactory, useClass: JitCompilerFactory },\n    { provide: _angular_core.PLATFORM_INITIALIZER, useValue: _initReflector, multi: true },\n]);\n/**\n * @param {?} optionsArr\n * @return {?}\n */\nfunction _mergeOptions(optionsArr) {\n    return {\n        useJit: _lastDefined(optionsArr.map(function (options) { return options.useJit; })),\n        defaultEncapsulation: _lastDefined(optionsArr.map(function (options) { return options.defaultEncapsulation; })),\n        providers: _mergeArrays(optionsArr.map(function (options) { return ((options.providers)); })),\n        missingTranslation: _lastDefined(optionsArr.map(function (options) { return options.missingTranslation; })),\n    };\n}\n/**\n * @template T\n * @param {?} args\n * @return {?}\n */\nfunction _lastDefined(args) {\n    for (var /** @type {?} */ i = args.length - 1; i >= 0; i--) {\n        if (args[i] !== undefined) {\n            return args[i];\n        }\n    }\n    return undefined;\n}\n/**\n * @param {?} parts\n * @return {?}\n */\nfunction _mergeArrays(parts) {\n    var /** @type {?} */ result = [];\n    parts.forEach(function (part) { return part && result.push.apply(result, part); });\n    return result;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Interface that defines how import statements should be generated.\n * @abstract\n */\nvar ImportResolver = (function () {\n    function ImportResolver() {\n    }\n    /**\n     * Converts a file path to a module name that can be used as an `import.\n     * I.e. `path/to/importedFile.ts` should be imported by `path/to/containingFile.ts`.\n     * @abstract\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    ImportResolver.prototype.fileNameToModuleName = function (importedFilePath, containingFilePath) { };\n    /**\n     * Converts the given StaticSymbol into another StaticSymbol that should be used\n     * to generate the import from.\n     * @abstract\n     * @param {?} symbol\n     * @return {?}\n     */\n    ImportResolver.prototype.getImportAs = function (symbol) { };\n    /**\n     * Determine the arity of a type.\n     * @abstract\n     * @param {?} symbol\n     * @return {?}\n     */\n    ImportResolver.prototype.getTypeArity = function (symbol) { };\n    return ImportResolver;\n}());\n\nexports.VERSION = VERSION;\nexports.TEMPLATE_TRANSFORMS = TEMPLATE_TRANSFORMS;\nexports.CompilerConfig = CompilerConfig;\nexports.JitCompiler = JitCompiler;\nexports.DirectiveResolver = DirectiveResolver;\nexports.PipeResolver = PipeResolver;\nexports.NgModuleResolver = NgModuleResolver;\nexports.DEFAULT_INTERPOLATION_CONFIG = DEFAULT_INTERPOLATION_CONFIG;\nexports.InterpolationConfig = InterpolationConfig;\nexports.NgModuleCompiler = NgModuleCompiler;\nexports.ViewCompiler = ViewCompiler;\nexports.isSyntaxError = isSyntaxError;\nexports.syntaxError = syntaxError;\nexports.TextAst = TextAst;\nexports.BoundTextAst = BoundTextAst;\nexports.AttrAst = AttrAst;\nexports.BoundElementPropertyAst = BoundElementPropertyAst;\nexports.BoundEventAst = BoundEventAst;\nexports.ReferenceAst = ReferenceAst;\nexports.VariableAst = VariableAst;\nexports.ElementAst = ElementAst;\nexports.EmbeddedTemplateAst = EmbeddedTemplateAst;\nexports.BoundDirectivePropertyAst = BoundDirectivePropertyAst;\nexports.DirectiveAst = DirectiveAst;\nexports.ProviderAst = ProviderAst;\nexports.ProviderAstType = ProviderAstType;\nexports.NgContentAst = NgContentAst;\nexports.PropertyBindingType = PropertyBindingType;\nexports.NullTemplateVisitor = NullTemplateVisitor;\nexports.RecursiveTemplateAstVisitor = RecursiveTemplateAstVisitor;\nexports.templateVisitAll = templateVisitAll;\nexports.CompileAnimationEntryMetadata = CompileAnimationEntryMetadata;\nexports.CompileAnimationStateMetadata = CompileAnimationStateMetadata;\nexports.CompileAnimationStateDeclarationMetadata = CompileAnimationStateDeclarationMetadata;\nexports.CompileAnimationStateTransitionMetadata = CompileAnimationStateTransitionMetadata;\nexports.CompileAnimationMetadata = CompileAnimationMetadata;\nexports.CompileAnimationKeyframesSequenceMetadata = CompileAnimationKeyframesSequenceMetadata;\nexports.CompileAnimationStyleMetadata = CompileAnimationStyleMetadata;\nexports.CompileAnimationAnimateMetadata = CompileAnimationAnimateMetadata;\nexports.CompileAnimationWithStepsMetadata = CompileAnimationWithStepsMetadata;\nexports.CompileAnimationSequenceMetadata = CompileAnimationSequenceMetadata;\nexports.CompileAnimationGroupMetadata = CompileAnimationGroupMetadata;\nexports.identifierName = identifierName;\nexports.identifierModuleUrl = identifierModuleUrl;\nexports.viewClassName = viewClassName;\nexports.rendererTypeName = rendererTypeName;\nexports.hostViewClassName = hostViewClassName;\nexports.dirWrapperClassName = dirWrapperClassName;\nexports.componentFactoryName = componentFactoryName;\nexports.CompileSummaryKind = CompileSummaryKind;\nexports.tokenName = tokenName;\nexports.tokenReference = tokenReference;\nexports.CompileStylesheetMetadata = CompileStylesheetMetadata;\nexports.CompileTemplateMetadata = CompileTemplateMetadata;\nexports.CompileDirectiveMetadata = CompileDirectiveMetadata;\nexports.createHostComponentMeta = createHostComponentMeta;\nexports.CompilePipeMetadata = CompilePipeMetadata;\nexports.CompileNgModuleMetadata = CompileNgModuleMetadata;\nexports.TransitiveCompileNgModuleMetadata = TransitiveCompileNgModuleMetadata;\nexports.ProviderMeta = ProviderMeta;\nexports.flatten = flatten;\nexports.sourceUrl = sourceUrl;\nexports.templateSourceUrl = templateSourceUrl;\nexports.sharedStylesheetJitUrl = sharedStylesheetJitUrl;\nexports.ngModuleJitUrl = ngModuleJitUrl;\nexports.templateJitUrl = templateJitUrl;\nexports.createAotCompiler = createAotCompiler;\nexports.AotCompiler = AotCompiler;\nexports.analyzeNgModules = analyzeNgModules;\nexports.analyzeAndValidateNgModules = analyzeAndValidateNgModules;\nexports.extractProgramSymbols = extractProgramSymbols;\nexports.GeneratedFile = GeneratedFile;\nexports.StaticReflector = StaticReflector;\nexports.StaticAndDynamicReflectionCapabilities = StaticAndDynamicReflectionCapabilities;\nexports.StaticSymbol = StaticSymbol;\nexports.StaticSymbolCache = StaticSymbolCache;\nexports.ResolvedStaticSymbol = ResolvedStaticSymbol;\nexports.StaticSymbolResolver = StaticSymbolResolver;\nexports.unescapeIdentifier = unescapeIdentifier;\nexports.AotSummaryResolver = AotSummaryResolver;\nexports.AstPath = AstPath;\nexports.SummaryResolver = SummaryResolver;\nexports.JitSummaryResolver = JitSummaryResolver;\nexports.COMPILER_PROVIDERS = COMPILER_PROVIDERS;\nexports.JitCompilerFactory = JitCompilerFactory;\nexports.platformCoreDynamic = platformCoreDynamic;\nexports.createUrlResolverWithoutPackagePrefix = createUrlResolverWithoutPackagePrefix;\nexports.createOfflineCompileUrlResolver = createOfflineCompileUrlResolver;\nexports.DEFAULT_PACKAGE_URL_PROVIDER = DEFAULT_PACKAGE_URL_PROVIDER;\nexports.UrlResolver = UrlResolver;\nexports.getUrlScheme = getUrlScheme;\nexports.ResourceLoader = ResourceLoader;\nexports.ElementSchemaRegistry = ElementSchemaRegistry;\nexports.Extractor = Extractor;\nexports.I18NHtmlParser = I18NHtmlParser;\nexports.MessageBundle = MessageBundle;\nexports.Serializer = Serializer;\nexports.Xliff = Xliff;\nexports.Xliff2 = Xliff2;\nexports.Xmb = Xmb;\nexports.Xtb = Xtb;\nexports.DirectiveNormalizer = DirectiveNormalizer;\nexports.ParserError = ParserError;\nexports.ParseSpan = ParseSpan;\nexports.AST = AST;\nexports.Quote = Quote;\nexports.EmptyExpr = EmptyExpr;\nexports.ImplicitReceiver = ImplicitReceiver;\nexports.Chain = Chain;\nexports.Conditional = Conditional;\nexports.PropertyRead = PropertyRead;\nexports.PropertyWrite = PropertyWrite;\nexports.SafePropertyRead = SafePropertyRead;\nexports.KeyedRead = KeyedRead;\nexports.KeyedWrite = KeyedWrite;\nexports.BindingPipe = BindingPipe;\nexports.LiteralPrimitive = LiteralPrimitive;\nexports.LiteralArray = LiteralArray;\nexports.LiteralMap = LiteralMap;\nexports.Interpolation = Interpolation;\nexports.Binary = Binary;\nexports.PrefixNot = PrefixNot;\nexports.NonNullAssert = NonNullAssert;\nexports.MethodCall = MethodCall;\nexports.SafeMethodCall = SafeMethodCall;\nexports.FunctionCall = FunctionCall;\nexports.ASTWithSource = ASTWithSource;\nexports.TemplateBinding = TemplateBinding;\nexports.NullAstVisitor = NullAstVisitor;\nexports.RecursiveAstVisitor = RecursiveAstVisitor;\nexports.AstTransformer = AstTransformer;\nexports.visitAstChildren = visitAstChildren;\nexports.TokenType = TokenType;\nexports.Lexer = Lexer;\nexports.Token = Token;\nexports.EOF = EOF;\nexports.isIdentifier = isIdentifier;\nexports.isQuote = isQuote;\nexports.SplitInterpolation = SplitInterpolation;\nexports.TemplateBindingParseResult = TemplateBindingParseResult;\nexports.Parser = Parser;\nexports._ParseAST = _ParseAST;\nexports.ERROR_COLLECTOR_TOKEN = ERROR_COLLECTOR_TOKEN;\nexports.CompileMetadataResolver = CompileMetadataResolver;\nexports.componentModuleUrl = componentModuleUrl;\nexports.Text = Text;\nexports.Expansion = Expansion;\nexports.ExpansionCase = ExpansionCase;\nexports.Attribute = Attribute$1;\nexports.Element = Element;\nexports.Comment = Comment;\nexports.visitAll = visitAll;\nexports.RecursiveVisitor = RecursiveVisitor;\nexports.findNode = findNode;\nexports.ParseTreeResult = ParseTreeResult;\nexports.TreeError = TreeError;\nexports.HtmlParser = HtmlParser;\nexports.HtmlTagDefinition = HtmlTagDefinition;\nexports.getHtmlTagDefinition = getHtmlTagDefinition;\nexports.TagContentType = TagContentType;\nexports.splitNsName = splitNsName;\nexports.isNgContainer = isNgContainer;\nexports.isNgContent = isNgContent;\nexports.isNgTemplate = isNgTemplate;\nexports.getNsPrefix = getNsPrefix;\nexports.mergeNsAndName = mergeNsAndName;\nexports.NAMED_ENTITIES = NAMED_ENTITIES;\nexports.ImportResolver = ImportResolver;\nexports.debugOutputAstAsTypeScript = debugOutputAstAsTypeScript;\nexports.TypeScriptEmitter = TypeScriptEmitter;\nexports.ParseLocation = ParseLocation;\nexports.ParseSourceFile = ParseSourceFile;\nexports.ParseSourceSpan = ParseSourceSpan;\nexports.ParseErrorLevel = ParseErrorLevel;\nexports.ParseError = ParseError;\nexports.typeSourceSpan = typeSourceSpan;\nexports.DomElementSchemaRegistry = DomElementSchemaRegistry;\nexports.CssSelector = CssSelector;\nexports.SelectorMatcher = SelectorMatcher;\nexports.SelectorListContext = SelectorListContext;\nexports.SelectorContext = SelectorContext;\nexports.StylesCompileDependency = StylesCompileDependency;\nexports.StylesCompileResult = StylesCompileResult;\nexports.CompiledStylesheet = CompiledStylesheet;\nexports.StyleCompiler = StyleCompiler;\nexports.TemplateParseError = TemplateParseError;\nexports.TemplateParseResult = TemplateParseResult;\nexports.TemplateParser = TemplateParser;\nexports.splitClasses = splitClasses;\nexports.createElementCssSelector = createElementCssSelector;\nexports.removeSummaryDuplicates = removeSummaryDuplicates;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=compiler.umd.js.map\n"]}