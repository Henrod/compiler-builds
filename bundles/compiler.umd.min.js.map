{"version":3,"sources":["/home/travis/build/angular/angular/dist/packages-dist/compiler/bundles/compiler.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","compiler","core","this","_angular_core","templateVisitAll","visitor","asts","context","result","visit","ast","forEach","astResult","push","splitNsName","elementName","colonIndex","indexOf","Error","slice","getNsPrefix","fullName","mergeNsAndName","prefix","localName","getHtmlTagDefinition","tagName","TAG_DEFINITIONS","toLowerCase","_DEFAULT_TAG_DEFINITION","dashCaseToCamelCase","input","replace","DASH_CASE_REGEXP","m","_i","arguments","length","toUpperCase","splitAtColon","defaultValues","_splitAt","splitAtPeriod","character","characterIndex","trim","visitValue","value","Array","isArray","visitArray","isStrictStringMap","visitStringMap","visitPrimitive","visitOther","syntaxError","msg","error","ERROR_SYNTAX_ERROR","isSyntaxError","escapeRegExp","s","obj","Object","getPrototypeOf","STRING_MAP_PROTO","utf8Encode","str","encoded","index","codePoint","charCodeAt","low","String","fromCharCode","_sanitizeIdentifier","name","identifierName","compileIdentifier","reference","ref","StaticSymbol","identifier","ɵstringify","_anonymousTypeIndex","identifierModuleUrl","filePath","ɵreflector","importUri","viewClassName","compType","embeddedTemplateIndex","rendererTypeName","hostViewClassName","dirWrapperClassName","dirType","componentFactoryName","tokenName","token","tokenReference","createHostComponentMeta","hostTypeReference","compMeta","hostViewType","template","CssSelector","parse","selector","getMatchingElementTemplate","CompileDirectiveMetadata","create","isHost","type","diDeps","lifecycleHooks","CompileTemplateMetadata","encapsulation","ViewEncapsulation","None","templateUrl","styles","styleUrls","ngContentSelectors","animations","isInline","changeDetection","ChangeDetectionStrategy","Default","inputs","outputs","host","isComponent","providers","viewProviders","queries","viewQueries","componentViewType","rendererType","id","data","_normalizeArray","flatten","list","reduce","flat","item","flatItem","concat","sourceUrl","url","templateSourceUrl","ngModuleType","templateMeta","sharedStylesheetJitUrl","meta","pathParts","moduleUrl","split","baseName","ngModuleJitUrl","moduleMeta","templateJitUrl","isWhitespace","code","$TAB","$SPACE","$NBSP","isDigit","$0","$9","isAsciiLetter","$a","$z","$A","$Z","isAsciiHexDigit","$f","$F","CompilerInjectable","x","assertArrayOfStrings","isDevMode","i","assertInterpolationSymbols","start_1","end_1","INTERPOLATION_BLACKLIST_REGEXPS","regexp","test","newCharacterToken","Token","TokenType","Character","newIdentifierToken","text","Identifier","newKeywordToken","Keyword","newOperatorToken","Operator","newStringToken","newNumberToken","n","Number","newErrorToken","message","isIdentifierStart","$_","$$","isIdentifier","scanner","_Scanner","peek","advance","$EOF","isIdentifierPart","isExponentStart","$e","$E","isExponentSign","$MINUS","$PLUS","isQuote","$SQ","$DQ","$BT","unescape","$n","$LF","$FF","$r","$CR","$t","$v","$VTAB","parseIntAutoRadix","parseInt","isNaN","_createInterpolateRegExp","config","pattern","start","end","RegExp","typeSourceSpan","kind","sourceFileName","sourceFile","ParseSourceFile","ParseSourceSpan","ParseLocation","visitAll","nodes","tokenize","source","getTagDefinition","tokenizeExpansionForms","interpolationConfig","DEFAULT_INTERPOLATION_CONFIG","_Tokenizer","_unexpectedCharacterErrorMsg","charCode","char","_unknownEntityErrorMsg","entitySrc","isNotWhitespace","isNameEnd","$GT","$SLASH","$EQ","isPrefixEnd","isDigitEntityEnd","$SEMICOLON","isNamedEntityEnd","isExpansionFormStart","offset","isInterpolationStart","$LBRACE","isExpansionCaseStart","compareCharCodeCaseInsensitive","code1","code2","toUpperCaseCharCode","mergeTextTokens","srcTokens","lastDstToken","dstTokens","TokenType$1","TEXT","parts","sourceSpan","lastOnStack","stack","element","createI18nMessageFactory","_I18nVisitor","_expParser","meaning","description","toI18nMessage","_extractPlaceholderName","_CUSTOM_PH_EXP","extractMessages","implicitTags","implicitAttrs","_Visitor","extract","mergeTranslations","translations","merge","_isOpeningComment","Comment","startsWith","_isClosingComment","_getI18nAttr","p","attrs","find","attr","_I18N_ATTR","_parseMessageMeta","i18n","idIndex","ID_SEPARATOR","descIndex","MEANING_SEPARATOR","_a","meaningAndDesc","_b","getXmlTagDefinition","_TAG_DEFINITION","digest","sha1","serializeNodes","join","decimalDigest","_SerializerIgnoreIcuExpVisitor","map","a","computeMsgId","serializerVisitor","utf8","words32","stringToWords32","Endian","Big","len","w","b","c","d","e","h0","h1","h2","h3","h4","j","rol32","_c","fk","f","k","temp","add32","_d","_e","byteStringToHexString","words32ToByteString","fingerprint","hash32","hi","lo","him","lom","add64","rol64","byteStringToDecString","wordAt","Little","mix","sub32","add32to64","high","ah","al","bh","bl","carry","l","h","count","endian","byteAt","word","word32ToByteString","hex","toString","decimal","toThePower","addBigInt","numberTimesBigInt","reverse","y","sum","Math","max","tmpSum","num","product","bToThePower","serialize","node","_visitor","_escapeXml","_ESCAPED_CHARS","entry","getCtypeForTag","tag","digest$1","toPublicName","internalName","createLazyProperty","messages","valueFn","defineProperty","configurable","enumerable","get","set","_","createSerializer","format","Xmb","Xtb","Xliff","assetUrl","pkg","path","resolveIdentifier","runtime","createIdentifier","identifierToken","createIdentifierToken","expandNodes","expander","_Expander","ExpansionResult","isExpanded","errors","_expandPluralForm","children","cases","PLURAL_CASES","match","ExpansionError","valueSourceSpan","expansionResult","expression","apply","Element","Attribute$1","switchAttr","switchValue","switchValueSourceSpan","_expandDefaultForm","_transformProvider","provider","useExisting","useValue","deps","useClass","useFactory","multi","_transformProviderAst","eager","ProviderAst","multiProvider","providerType","_resolveProvidersFromDirectives","directives","targetErrors","providersByToken","Map","directive","dirProvider","_resolveProviders","ProviderAstType","Component","Directive","directivesWithComponentFirst","filter","dir","PublicService","PrivateService","targetProvidersByToken","resolvedProvider","ProviderError","isUseValue","_getViewQueries","component","viewQueryId","query","_addQueryToTokenMap","queryId","_getContentQueries","contentQueryStartId","contentQueryId","contentQueries","directiveIndex","selectors","isStyleUrlResolvable","schemeMatch","URL_WITH_SCHEMA_REGEXP","extractStyleUrls","resolver","baseUrl","cssText","foundUrls","modifiedCssText","CSS_COMMENT_REGEXP","CSS_IMPORT_REGEXP","resolve","StyleWithImports","_isAnimationLabel","calcPossibleSecurityContexts","registry","propName","isAttribute","ctxs","elementNames","allKnownElementNames","notElementNames","Set","notSelectors","isElementSelector","possibleElementNames","has","securityContext","SecurityContext","NONE","from","sort","preparseElement","selectAttr","hrefAttr","relAttr","nonBindable","projectAs","lcAttrName","NG_CONTENT_SELECT_ATTR","LINK_STYLE_HREF_ATTR","LINK_STYLE_REL_ATTR","NG_NON_BINDABLE_ATTR","NG_PROJECT_AS","normalizeNgContentSelect","nodeName","PreparsedElementType","OTHER","NG_CONTENT_ELEMENT","NG_CONTENT","STYLE_ELEMENT","STYLE","SCRIPT_ELEMENT","SCRIPT","LINK_ELEMENT","LINK_STYLE_REL_VALUE","STYLESHEET","PreparsedElement","splitClasses","classAttrValue","createElementCssSelector","attributes","cssSelector","elNameNoNs","setElement","attrName","attrNameNoNs","attrValue","addAttribute","CLASS_ATTR","classes","className","addClassName","_isEmptyTextNode","Text","removeSummaryDuplicates","items","values","isEmptyExpression","ASTWithSource","EmptyExpr","isTemplate","el","enableLegacyTemplate","reportDeprecation","tagNoNs","NG_TEMPLATE_ELEMENT","TEMPLATE_ELEMENT","createUrlResolverWithoutPackagePrefix","UrlResolver","createOfflineCompileUrlResolver","getUrlScheme","_split","_ComponentIndex","Scheme","_buildFromEncodedParts","opt_scheme","opt_userInfo","opt_domain","opt_port","opt_path","opt_queryData","opt_fragment","out","uri","_splitRe","_removeDotSegments","leadingSlash","trailingSlash","segments","up","pos","segment","pop","unshift","_joinAndCanonicalizePath","Path","UserInfo","Domain","Port","QueryData","Fragment","_resolveUrl","base","encodeURI","baseParts","lastIndexOf","substring","isDirectiveMetadata","findLast","arr","condition","ngfactoryFilePath","urlWithSuffix","splitTypescriptSuffix","stripNgFactory","NG_FACTORY","isNgFactoryFile","endsWith","lastDot","summaryFileName","fileName","fileNameWithoutSuffix","STRIP_SRC_FILE_SUFFIXES","hasLifecycleHook","hook","getHookName","ɵLifecycleHooks","OnInit","OnDestroy","DoCheck","OnChanges","AfterContentInit","AfterContentChecked","AfterViewInit","AfterViewChecked","_isNgModuleMetadata","NgModule","_isPipeMetadata","Pipe","flattenArray","tree","resolveForwardRef","dedupeArray","array","flattenAndDedupeArray","isValidType","Type","componentModuleUrl","reflector","cmpMetadata","resourceUri","moduleId","scheme","MODULE_SUFFIX","stringifyType","extractIdentifiers","targetIdentifiers","_CompileValueConverter","componentStillLoadingError","ɵERROR_COMPONENT_TYPE","findReadVarNames","stmts","_ReadVarVisitor","visitAllStatements","varNames","applySourceSpanToStatementIfNeeded","stmt","transformer","_ApplySourceSpanTransformer","visitStatement","applySourceSpanToExpressionIfNeeded","expr","visitExpression","variable","ReadVarExpr","importExpr","typeParams","ExternalExpr","importType","typeModifiers","expressionType","ExpressionType","literalArr","LiteralArrayExpr","literalMap","quoted","LiteralMapExpr","LiteralMapEntry","not","NotExpr","fn","params","body","FunctionExpr","literal","LiteralExpr","createClassStmt","parentArgs","superCtorStmts","parent","SUPER_EXPR","callFn","toStmt","builder","concatClassBuilderParts","builders","ctor","ClassMethod","ctorParams","ctorStmts","ClassStmt","fields","getters","methods","modifiers","convertValueToOutputAst","_ValueOutputAstTransformer","createDiTokenExpression","toBase64String","b64","i1","i2","i3","toBase64Digit","toBase64VLQ","digit","B64_DIGITS","escapeIdentifier","escapeDollar","alwaysQuote","_SINGLE_QUOTE_ESCAPE_STRING_RE","requiresQuotes","_LEGAL_IDENTIFIER_RE","_createIndent","res","_INDENT_WITH","debugOutputAstAsTypeScript","converter","_TsEmitterVisitor","_debugFilePath","fileNameToModuleName","containingFilePath","getImportAs","symbol","getTypeArity","ctx","EmitterVisitorContext","createRoot","Statement","Expression","Type$1","visitType","toSource","registerContext","specs","specs_1","spec","SECURITY_SCHEMA","_isPixelDimensionStyle","prop","stripComments","_commentRe","extractSourceMappingUrl","matcher","_sourceMappingUrlRe","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","_ruleRe","content","suffix","contentPrefix","BLOCK_PLACEHOLDER","blocks","rule","CssRule","inputParts","_curlyRe","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","CLOSE_CURLY","OPEN_CURLY","StringWithEscapedBlocks","getStylesVarName","convertActionBinding","localResolver","implicitReceiver","action","bindingId","DefaultLocalResolver","actionWithoutBuiltins","convertPropertyBindingBuiltins","createLiteralArrayConverter","argCount","args","createLiteralMapConverter","keys","key","createPipeConverter","_AstToIrVisitor","actionStmts","flattenStatements","_Mode","prependTemporaryDecls","temporaryCount","lastIndex","preventDefaultVar","lastStatement","returnExpr","convertStmtIntoExpression","createPreventDefaultVar","cast","DYNAMIC_TYPE","notIdentical","toDeclStmt","StmtModifier","Final","ConvertActionBindingResult","converterFactory","convertBuiltins","convertPropertyBinding","expressionWithoutBuiltins","currValExpr","createCurrValueExpr","outputExpr","temporaryDeclaration","ConvertPropertyBindingResult","_BuiltinAstConverter","temporaryName","temporaryNumber","DeclareVarStmt","NULL_EXPR","statements","ensureStatementMode","mode","ensureExpressionMode","convertToStatementIfNeeded","arg","output","ExpressionStatement","ReturnStatement","providerDef","providerAst","multiProviderDef","singleProviderDef","convertDeps","providerIndex","dep","depIndex","paramName","allParams","FnParam","allDepDefs","depDef","exprs","depExprs","instantiate","providerExpr","INFERRED_TYPE","flags","depsExpr","providerMeta","tokenExpr","tokenMeta","isValue","isSkipSelf","isOptional","needsAdditionalRootNode","astNodes","lastAstNode","EmbeddedTemplateAst","hasViewContainer","ElementAst","NG_CONTAINER_TAG","NgContentAst","lifecycleHookToNodeFlag","lifecycleHook","nodeFlag","elementBindingDef","inputAst","dirAst","PropertyBindingType","Attribute","Property","Animation","bindingType","Class","Style","unit","fixedAttrsDef","elementAst","mapResult","attrAst","hostAttributes","prevValue","mergeAttributeValue","attrValue1","attrValue2","CLASS_ATTR$1","STYLE_ATTR","callCheckStmt","nodeIndex","CHECK_VAR","VIEW_VAR","callUnwrapValue","bindingIdx","Identifiers","unwrapValue","findStaticQueryIds","queryMatches","staticQueryIds","dynamicQueryIds","child","childData","add","delete","staticViewQueryIds","nodeStaticQueryIds","createComponentFactoryResolver","componentDirMeta","entryComponents","entryComponentFactories","entryComponent","componentFactory","ComponentFactoryResolver","classMeta","NgModuleRef","CodegenComponentFactoryResolver","elementEventNameAndTarget","eventAst","isAnimation","phase","target","serializeSummaries","summaryResolver","symbolResolver","symbols","types","serializer","Serializer$1","resolvedSymbol","addOrMergeSummary","metadata","processedIndex","isLibraryFile","summary","resolveSummary","resolveSymbol","typeSummary","__symbolic","summaryKind","CompileSummaryKind","ngModuleSummary","exportedDirectives","exportedPipes","deserializeSummaries","symbolCache","json","deserializer","Deserializer","deserialize","_resolveStyleStatements","compileResult","fileSuffix","dependencies","valuePlaceholder","getStaticSymbol","_stylesModuleUrl","isShimmed","stylesheetUrl","shim","_assertComponent","analyzeNgModules","programStaticSymbols","metadataResolver","_createNgModules","ngModules","symbolsMissingModule","_analyzeNgModules","analyzeAndValidateNgModules","programSymbols","ngModuleMetas","moduleMetasByRef","ngModule","ngModuleByPipeOrDirective","ngModulesByFile","ngDirectivesByFile","ngPipesByFile","ngInjectablesByFile","filePaths","isInjectable","ngModuleMeta","srcFileUrl","declaredDirectives","dirIdentifier","fileUrl","declaredPipes","pipeIdentifier","files","srcUrl","pipes","injectables","extractProgramSymbols","staticSymbolResolver","staticSymbols","isSourceFile","getSymbolsOf","symbolMeta","programPipesAndDirectives","ngModulePipesAndDirective","addNgModule","staticSymbol","getNgModuleMetadata","pipe","transitiveModule","modules","modMeta","isDirective","isPipe","isStaticType","shouldIgnore","expandedMessage","typeName","produceErrorMessage","mapStringMap","transform","HIDDEN_KEY","isPrimitive","o","positionalError","line","column","unescapeIdentifier","substr","createAotCompiler","compilerHost","options","urlResolver","StaticSymbolCache","AotSummaryResolver","StaticSymbolResolver","staticReflector","StaticReflector","StaticAndDynamicReflectionCapabilities","install","console","ɵConsole","htmlParser","I18NHtmlParser","HtmlParser","i18nFormat","MissingTranslationStrategy","Warning","CompilerConfig","defaultEncapsulation","Emulated","useJit","normalizer","DirectiveNormalizer","loadResource","expressionParser","Parser","Lexer","elementSchemaRegistry","DomElementSchemaRegistry","tmplParser","TemplateParser","CompileMetadataResolver","NgModuleResolver","DirectiveResolver","PipeResolver","importResolver","viewCompiler","ViewCompiler","AotCompiler","StyleCompiler","NgModuleCompiler","TypeScriptEmitter","locale","genFilePreamble","interpretStatements","resultVars","stmtsWithReturn","resultVar","_ExecutionContext","StatementInterpreter","_executeFunctionStatements","varValues","childCtx","createChildWihtLocalVars","vars","createDynamicClass","_classStmt","_ctx","propertyDescriptors","getter","instanceCtx","method","paramNames","param","writable","ctorParamNames","constructorMethod","_this","field","undefined","superClass","prototype","_declareFn","evalExpression","sourceUrl$$1","fnBody","fnArgNames","fnArgValues","argName","emptyFn","Function","bind","headerLines","toSourceMapGenerator","toJsComment","jitStatements","JitEmitterVisitor","returnStmt","getArgs","assertComponent","_initReflector","reflectionCapabilities","ɵReflectionCapabilities","_mergeOptions","optionsArr","_lastDefined","_mergeArrays","missingTranslation","__extends","__","constructor","hasOwnProperty","VERSION","Version","TextAst","ngContentIndex","visitText","BoundTextAst","visitBoundText","AttrAst","visitAttr","BoundElementPropertyAst","visitElementProperty","BoundEventAst","handler","calcFullName","visitEvent","ReferenceAst","visitReference","VariableAst","visitVariable","references","endSourceSpan","visitElement","variables","visitEmbeddedTemplate","BoundDirectivePropertyAst","directiveName","templateName","visitDirectiveProperty","DirectiveAst","hostProperties","hostEvents","visitDirective","Builtin","visitNgContent","members","assertNoMembers","JSON","stringify","cache","declarationFile","memberSuffix","TagContentType","RAW_TEXT","ESCAPABLE_RAW_TEXT","PARSABLE_DATA","NAMED_ENTITIES","Aacute","aacute","Acirc","acirc","acute","AElig","aelig","Agrave","agrave","alefsym","Alpha","alpha","amp","and","ang","apos","Aring","aring","asymp","Atilde","atilde","Auml","auml","bdquo","Beta","beta","brvbar","bull","cap","Ccedil","ccedil","cedil","cent","Chi","chi","circ","clubs","cong","copy","crarr","cup","curren","dagger","Dagger","darr","dArr","deg","Delta","delta","diams","divide","Eacute","eacute","Ecirc","ecirc","Egrave","egrave","empty","emsp","ensp","Epsilon","epsilon","equiv","Eta","eta","ETH","eth","Euml","euml","euro","exist","fnof","forall","frac12","frac14","frac34","frasl","Gamma","gamma","ge","gt","harr","hArr","hearts","hellip","Iacute","iacute","Icirc","icirc","iexcl","Igrave","igrave","image","infin","int","Iota","iota","iquest","isin","Iuml","iuml","Kappa","kappa","Lambda","lambda","lang","laquo","larr","lArr","lceil","ldquo","le","lfloor","lowast","loz","lrm","lsaquo","lsquo","lt","macr","mdash","micro","middot","minus","Mu","mu","nabla","nbsp","ndash","ne","ni","notin","nsub","Ntilde","ntilde","Nu","nu","Oacute","oacute","Ocirc","ocirc","OElig","oelig","Ograve","ograve","oline","Omega","omega","Omicron","omicron","oplus","or","ordf","ordm","Oslash","oslash","Otilde","otilde","otimes","Ouml","ouml","para","permil","perp","Phi","phi","Pi","pi","piv","plusmn","pound","prime","Prime","prod","Psi","psi","quot","radic","rang","raquo","rarr","rArr","rceil","rdquo","real","reg","rfloor","Rho","rho","rlm","rsaquo","rsquo","sbquo","Scaron","scaron","sdot","sect","shy","Sigma","sigma","sigmaf","sim","spades","sub","sube","sup","sup1","sup2","sup3","supe","szlig","Tau","tau","there4","Theta","theta","thetasym","thinsp","THORN","thorn","tilde","times","trade","Uacute","uacute","uarr","uArr","Ucirc","ucirc","Ugrave","ugrave","uml","upsih","Upsilon","upsilon","Uuml","uuml","weierp","Xi","xi","Yacute","yacute","yen","yuml","Yuml","Zeta","zeta","zwj","zwnj","HtmlTagDefinition","closedByChildren","requiredParents","implicitNamespacePrefix","contentType","closedByParent","isVoid","_f","ignoreFirstLf","canSelfClose","parentToAdd","requireExtraParent","currentParent","lcParent","isParentTemplate","isClosedByChild","area","embed","link","img","hr","br","track","wbr","thead","tbody","tfoot","tr","td","th","col","svg","math","li","dt","dd","rb","rt","rtc","rp","optgroup","option","pre","listing","style","script","title","textarea","_SELECTOR_REGEXP","classNames","results","_addResult","cssSel","current","inNot","exec","hasElementSelector","classAttr","klass","notSelector","SelectorMatcher","_elementMap","_elementPartialMap","_classMap","_classPartialMap","_attrValueMap","_attrValuePartialMap","_listContexts","createNotMatcher","notMatcher","addSelectables","cssSelectors","callbackCtxt","listContext","SelectorListContext","_addSelectable","selectable","SelectorContext","isTerminal","_addTerminal","_addPartial","terminalMap","terminalValuesMap","partialMap","partialValuesMap","terminalList","matchedCallback","alreadyMatched","_matchTerminal","_matchPartial","selectables","starSelectables","finalize","nestedSelector","cbContext","callback","ValueTransformer","SyncAsyncResult","syncResult","asyncResult","Promise","HOST_REG_EXP","CompileAnimationEntryMetadata","definitions","CompileAnimationStateMetadata","CompileAnimationStateDeclarationMetadata","_super","stateNameExpr","call","CompileAnimationStateTransitionMetadata","stateChangeExpr","steps","CompileAnimationMetadata","CompileAnimationKeyframesSequenceMetadata","CompileAnimationStyleMetadata","CompileAnimationAnimateMetadata","timings","CompileAnimationWithStepsMetadata","CompileAnimationSequenceMetadata","CompileAnimationGroupMetadata","Injectable","CompileStylesheetMetadata","externalStylesheets","interpolation","toSummary","anim","exportAs","hostListeners","matches","inputsMap","bindConfig","outputsMap","CompilePipeMetadata","pure","CompileNgModuleMetadata","bootstrapComponents","importedModules","exportedModules","schemas","TransitiveCompileNgModuleMetadata","directivesSet","exportedDirectivesSet","pipesSet","exportedPipesSet","modulesSet","entryComponentsSet","addProvider","addDirective","addExportedDirective","addPipe","addExportedPipe","addModule","addEntryComponent","ec","componentType","ProviderMeta","ParserError","errLocation","ctxLocation","ParseSpan","AST","span","Quote","uninterpretedExpression","location","visitQuote","ImplicitReceiver","visitImplicitReceiver","Chain","expressions","visitChain","Conditional","trueExp","falseExp","visitConditional","PropertyRead","receiver","visitPropertyRead","PropertyWrite","visitPropertyWrite","SafePropertyRead","visitSafePropertyRead","KeyedRead","visitKeyedRead","KeyedWrite","visitKeyedWrite","BindingPipe","exp","visitPipe","LiteralPrimitive","visitLiteralPrimitive","LiteralArray","visitLiteralArray","LiteralMap","visitLiteralMap","Interpolation","strings","visitInterpolation","Binary","operation","left","right","visitBinary","PrefixNot","visitPrefixNot","MethodCall","visitMethodCall","SafeMethodCall","visitSafeMethodCall","FunctionCall","visitFunctionCall","TemplateBinding","keyIsVar","RecursiveAstVisitor","AstTransformer","$BANG","$HASH","$PERCENT","$AMPERSAND","$LPAREN","$RPAREN","$STAR","$COMMA","$PERIOD","$COLON","$LT","$QUESTION","$X","$LBRACKET","$BACKSLASH","$RBRACKET","$CARET","$u","$x","$BAR","$RBRACE","InterpolationConfig","fromArray","markers","KEYWORDS","tokens","scanToken","decorators","ctorParameters","numValue","strValue","isCharacter","isNumber","isString","isOperator","operater","isKeyword","isKeywordLet","isKeywordAs","isKeywordNull","isKeywordUndefined","isKeywordTrue","isKeywordFalse","isKeywordThis","isError","toNumber","EOF","scanIdentifier","scanNumber","scanCharacter","scanString","scanOperator","scanComplexOperator","one","twoCode","two","threeCode","three","simple","parseFloat","quote","buffer","marker","unescapedCode","last","position","SplitInterpolation","offsets","TemplateBindingParseResult","templateBindings","warnings","_lexer","parseAction","_checkNoInterpolation","sourceToLex","_stripComments","_ParseAST","parseChain","parseBinding","_parseBindingAst","parseSimpleBinding","SimpleExpressionChecker","check","_reportError","_parseQuote","prefixSeparatorIndex","parseTemplateBindings","prefixToken","prefixTokens","t","parseInterpolation","splitInterpolation","expressionText","_findInterpolationErrorColumn","wrapLiteralPrimitive","_commentStart","outerQuote","nextChar","partInErrIdx","inputLength","rparensExpected","rbracketsExpected","rbracesExpected","next","inputIndex","optionalCharacter","peekKeywordLet","peekKeywordAs","expectCharacter","optionalOperator","op","expectOperator","operator","expectIdentifierOrKeyword","expectIdentifierOrKeywordOrString","parsePipe","parseExpression","parseConditional","parseLogicalOr","yes","no","parseLogicalAnd","parseEquality","parseRelational","parseAdditive","parseMultiplicative","parsePrefix","parseCallChain","parsePrimary","parseAccessMemberOrMethodCall","parseCallArguments","elements","parseExpressionList","parseLiteralMap","literalValue","terminator","isSafe","positionals","expectTemplateBindingKey","operatorFound","bindings","rawKey","letStart","start_2","letName","locationText","skip","file","moveBy","ch","priorLine","getContext","maxChars","maxLines","startOffset","endOffset","ctxChars","ctxLines","before","after","details","ParseErrorLevel","WARNING","ERROR","ParseError","level","contextStr","Expansion","visitExpansion","ExpansionCase","expSourceSpan","visitExpansionCase","valueSpan","visitAttribute","startSourceSpan","visitComment","TAG_OPEN_START","TAG_OPEN_END","TAG_OPEN_END_VOID","TAG_CLOSE","COMMENT_START","COMMENT_END","CDATA_START","CDATA_END","ATTR_NAME","ATTR_VALUE","DOC_TYPE","EXPANSION_FORM_START","EXPANSION_CASE_VALUE","EXPANSION_CASE_EXP_START","EXPANSION_CASE_EXP_END","EXPANSION_FORM_END","Token$1","TokenError","errorMsg","tokenType","TokenizeResult","_CR_OR_CRLF_REGEXP","_ControlFlowError","_file","_getTagDefinition","_tokenizeIcu","_interpolationConfig","_peek","_nextPeek","_index","_line","_column","_expansionCaseStack","_inInterpolation","_input","_length","_advance","_processCarriageReturns","_getLocation","_attemptCharCode","_consumeCdata","_consumeComment","_consumeDocType","_consumeTagClose","_consumeTagOpen","_tokenizeExpansionForm","_consumeText","_beginToken","_endToken","_consumeExpansionFormStart","_isInExpansionForm","_consumeExpansionCaseStart","_isInExpansionCase","_consumeExpansionCaseEnd","_consumeExpansionFormEnd","_getSpan","_currentTokenStart","_currentTokenType","_createError","_attemptCharCodeCaseInsensitive","_requireCharCode","_attemptStr","chars","initialPosition","_savePosition","_restorePosition","_attemptStrCaseInsensitive","_requireStr","_attemptCharCodeUntilFn","predicate","_requireCharCodeUntilFn","_attemptUntilChar","_readChar","decodeEntities","_decodeEntity","startPosition","isHex","numberStart","strNum","entity","_consumeRawText","firstCharOfEnd","attemptEndRest","tagCloseStart","textStart","textToken","_consumePrefixAndName","nameOrPrefixStart","nameStart","lowercaseTagName","savedPos","_consumeTagOpenStart","_consumeAttributeName","_consumeAttributeValue","_consumeTagOpenEnd","contentTokenType","_consumeRawTextWithTagClose","prefixAndName","quoteChar","valueStart","_readUntil","_isTextEnd","nbTokens","TreeError","ParseTreeResult","rootNodes","Parser$1","parseExpansionForms","tokensAndErrors","treeAndErrors","_TreeBuilder","build","_rootNodes","_errors","_elementStack","_consumeStartTag","_consumeEndTag","_closeVoidElement","_consumeExpansion","prev","_advanceIf","startToken","_addToParent","expCase","_parseExpansionCase","_collectExpansionExpTokens","parsedExp","expansionFormStack","_getParentElement","startTagToken","_consumeAttr","_getElementFullName","selfClosing","tagDef","_pushElement","_popElement","parentEl","_getParentElementSkippingContainers","container","newParent","_insertBeforeContainer","endTagToken","errMsg","stackIndex","splice","valueToken","parentElement","Message","placeholders","placeholderToMessage","Text$1","Container","visitContainer","Icu","visitIcu","TagPlaceholder","startName","closeName","visitTagPlaceholder","Placeholder","visitPlaceholder","IcuPlaceholder","visitIcuPlaceholder","CloneVisitor","icu","expressionPlaceholder","ph","RecurseVisitor","TAG_TO_PLACEHOLDER_NAMES","A","B","BR","EM","H1","H2","H3","H4","H5","H6","HR","I","LI","LINK","OL","P","Q","S","SMALL","SUB","SUP","TBODY","TD","TFOOT","TH","THEAD","TR","TT","U","UL","PlaceholderRegistry","_placeHolderNameCounts","_signatureToName","getStartTagPlaceholderName","signature","_hashTag","upperTag","_generateUniqueName","getCloseTagPlaceholderName","_hashClosingTag","getPlaceholderName","upperName","uniqueName","getUniquePlaceholder","strAttrs","seen","_expressionParser","_isIcu","_icuDepth","_placeholderRegistry","_placeholderToContent","_placeholderToMessage","i18nodes","startPhName","closePhName","attribute","_visitTextWithInterpolation","comment","i18nIcuCases","i18nIcu","caze","expPh","phName","icuCase","sDelimiter","eDelimiter","lastStringIdx","I18nError","_I18N_ATTR_PREFIX","_I18N_COMMENT_PREFIX_REGEXP","ExtractionResult","_VisitorMode","Extract","Merge","_implicitTags","_implicitAttrs","_init","_inI18nBlock","_messages","_translations","wrapper","translatedNode","_mode","_mayBeAddBlockChildren","wasInIcu","_inIcu","_isInTranslatableSection","_addMessage","isOpening","isClosing","_inI18nNode","_depth","_blockStartDepth","_closeTranslatableSection","_blockChildren","_blockMeaningAndDesc","_translateMessage","_openTranslatableSection","translatedChildNodes","wasInI18nNode","wasInImplicitNode","_inImplicitNode","childNodes","i18nAttr","i18nMeta","isImplicit","some","isTopLevelImplicit","isTranslatable","visitNodes","visited","_visitAttributesOf","translatedAttrs","_translateAttributes","_msgCountAtSectionStart","_createI18nMessage","explicitAttrNameToValue","implicitAttrNames","msgMeta","i18nParsedMessageMeta","translatedAttributes","directChildren","startIndex","significantChildren","XmlTagDefinition","XmlParser","_SerializerVisitor","strCases","Serializer","write","load","createNameMapper","SimplePlaceholderMapper","mapName","internalToPublic","publicToNextId","publicToInternal","toInternalName","publicName","visitPlaceholderName","nextId","_Visitor$1","visitTag","_serializeAttributes","strChildren","visitDeclaration","decl","visitDoctype","doctype","rootTag","dtd","Declaration","unescapedAttrs","Doctype","Tag","Text$2","unescapedValue","CR","ws","_VERSION","_XMLNS","_DEFAULT_SOURCE_LANG","_PLACEHOLDER_TAG","_FILE_TAG","_SOURCE_TAG","_TARGET_TAG","_UNIT_TAG","_WriteVisitor","transUnits","transUnit","datatype","priority","source-language","original","xliff","version","xmlns","encoding","xliffParser","XliffParser","mlNodesByMsgId","i18nNodesByMsgId","XmlToI18n","msgId","convert","i18nNodes","_isInIcu","ctype","startTagPh","closeTagPh","_locale","_unitMlNodes","_mlNodesByMsgId","xml","idAttr","_addError","localeAttr","expansion","expansionCase","nameAttr","_MESSAGES_TAG","_MESSAGE_TAG","_PLACEHOLDER_TAG$1","_EXEMPLE_TAG","_DOCTYPE","exampleVisitor","ExampleVisitor","_Visitor$2","rootNode","addDefaultExamples","startEx","closeEx","exText","_TRANSLATIONS_TAG","_TRANSLATION_TAG","_PLACEHOLDER_TAG$2","xtbParser","XtbParser","msgIdToHtml","XmlToI18n$1","xtb","_bundleDepth","_msgIdToHtml","langAttr","innerTextStart","innerTextEnd","innerText","xmlIcu","caseMap","TranslationBundle","_i18nNodesByMsgId","mapperFactory","missingTranslationStrategy","_i18nToHtml","I18nToHtmlVisitor","digestFn","srcMsg","html","_digest","_mapperFactory","_missingTranslationStrategy","_console","_contextStack","_convertToText","_srcMsg","_mapper","mapper","warn","_htmlParser","translationsFormat","_translationBundle","parseResult","CORE","ANALYZE_FOR_ENTRY_COMPONENTS","ElementRef","ViewContainerRef","ChangeDetectorRef","QueryList","TemplateRef","ɵCodegenComponentFactoryResolver","ComponentFactory","ComponentRef","NgModuleFactory","NgModuleInjector","ɵNgModuleInjector","RegisterModuleFactoryFn","ɵregisterModuleFactory","Injector","LOCALE_ID","TRANSLATIONS_FORMAT","inlineInterpolate","ɵinlineInterpolate","interpolate","ɵinterpolate","EMPTY_ARRAY","ɵEMPTY_ARRAY","EMPTY_MAP","ɵEMPTY_MAP","Renderer","viewDef","ɵvid","elementDef","ɵeld","anchorDef","ɵand","textDef","ɵted","directiveDef","ɵdid","ɵprd","queryDef","ɵqud","pureArrayDef","ɵpad","pureObjectDef","ɵpod","purePipeDef","ɵppd","pipeDef","ɵpid","nodeValue","ɵnov","ngContentDef","ɵncd","ɵunv","createRendererType2","ɵcrt","RendererType2","ViewDefinition","createComponentFactory","ɵccf","expanded","ProviderViewContext","ProviderElementContext","viewContext","_parent","_isViewRoot","_directiveAsts","refs","_sourceSpan","_transformedProviders","_seenProviders","_hasViewContainer","_queriedTokens","_attrs","directivesMeta","directiveAst","_allProviders","_contentQueries","_addQueryReadsTo","templateRefId","refAst","defaultQueryValue","_getOrCreateLocalProvider","afterElement","sortedProviderTypes","transformProviders","sortedDirectives","dir1","dir2","allMatches","defaultValue","queryReadTokens","_getQueriesFor","queryValue","read","tokenRef","currentEl","distance","descendants","requestingProviderType","transformedProviderAst","transformedProviders","transformedDeps","transformedUseValue","transformedUseExisting","existingDiDep","_getDependency","_getLocalDependency","currElement","currEager","isSelf","prevElement","NgModuleProviderAnalyzer","extraProviders","ngModuleProvider","errorString","requestorSourceSpan","foundLocal","ElementSchemaRegistry","hasProperty","schemaMetas","hasElement","getMappedPropName","getDefaultComponentElementName","validateProperty","validateAttribute","normalizeAnimationStyleProperty","normalizeAnimationStyleValue","camelCaseProp","userProvidedProp","val","style$$1","PROPERTY_PARTS_SEPARATOR","ATTRIBUTE_PREFIX","CLASS_PREFIX","STYLE_PREFIX","ANIMATE_PROP_PREFIX","BoundPropertyType","DEFAULT","LITERAL_ATTR","ANIMATION","BoundProperty","BindingParser","_exprParser","_schemaRegistry","_targetErrors","pipesByName","_usedPipes","getUsedPipes","createDirectiveHostPropertyAsts","dirMeta","elementSelector","boundProps_1","parsePropertyBinding","createElementPropertyAst","createDirectiveHostEventAsts","targetEventAsts_1","parseEvent","sourceInfo","_reportExpressionParserErrors","_checkPipes","parseInlineTemplateBinding","targetMatchableAttrs","targetProps","targetVars","_parseTemplateBindings","binding","_parsePropertyAst","parseLiteralAttr","bindingsResult","warning","_parseAnimation","isAnimationProp","_parseBinding","parsePropertyInterpolation","isHostBinding","boundProp","securityContexts","boundPropertyName","_validatePropertyOrAttributeName","nsSeparatorIdx","ns","targetEvents","_parseAnimationEvent","_parseEvent","eventName","_parseAction","errors_1","collector","PipeCollector","pipeName","pipeMeta","isAttr","report","BIND_NAME_REGEXP","KW_BIND_IDX","KW_LET_IDX","KW_REF_IDX","KW_ON_IDX","KW_BINDON_IDX","KW_AT_IDX","IDENT_KW_IDX","IDENT_BANANA_BOX_IDX","IDENT_PROPERTY_IDX","IDENT_EVENT_IDX","TEMPLATE_ATTR","TEMPLATE_ATTR_PREFIX","TEXT_CSS_SELECTOR","TEMPLATE_TRANSFORMS","InjectionToken","TemplateParseError","TemplateParseResult","templateAst","usedPipes","_config","transforms","tryParse","tryParseHtml","expandHtml","getInterpolationConfig","htmlAstWithErrors","uniqDirectives","uniqPipes","providerViewContext","bindingParser","parseVisitor","TemplateParseVisitor","EMPTY_ELEMENT_CONTEXT","_assertNoReferenceDuplicationOnTemplate","forced","expandedHtmlAst","existingReferences","Optional","Inject","_bindingParser","_schemas","selectorMatcher","directivesIndex","ngContentCount","findNgContentIndex","queryStartIndex","preparsedElement","matchableAttrs","elementOrDirectiveProps","elementOrDirectiveRefs","elementVars","events","templateElementOrDirectiveProps","templateMatchableAttrs","templateElementVars","hasInlineTemplates","isTemplateElement","templateBindingsSource","hasBinding","_parseAttr","normalizedName","_normalizeAttributeName","hasTemplateBinding","elementCssSelector","_parseDirectives","directiveMetas","matchElement","boundDirectivePropNames","directiveAsts","_createDirectiveAsts","elementProps","_createElementPropertyAsts","isViewRoot","providerContext","NON_BINDABLE_VISITOR","ElementContext","parsedElement","projectionSelector","every","_assertAllEventsPublishedByDirectives","_assertNoComponentsNorElementBindingsOnTemplate","transformedDirectiveAsts","transformedHasViewContainer","_assertElementExists","_assertOnlyOneComponent","ngContentIndex_1","templateQueryStartIndex","templateSelector","templateDirectiveMetas","templateBoundDirectivePropNames","templateDirectiveAsts","templateElementProps","templateProviderContext","targetRefs","srcSpan","bindParts","_parseVariable","_parseReference","_parseAssignmentEvent","ElementOrDirectiveRef","size","props","elementSourceSpan","targetReferences","targetBoundDirectivePropNames","matchedReferences","directiveProperties","_checkPropertiesInSchema","_createDirectivePropertyAsts","elOrDirRef","refToken","boundProps","targetBoundDirectiveProps","boundPropsByName_1","isLiteral","dirProp","elProp","boundElementProps","_findComponentDirectives","_findComponentDirectiveNames","componentTypeNames","elName","allDirectiveEvents","event","NonBindableVisitor","attrNameAndValues","_ngContentIndexMatcher","_wildcardNgContentIndex","wildcardNgContentIndex","ngContentIndices","ResourceLoader","DEFAULT_PACKAGE_URL_PROVIDER","provide","PACKAGE_ROOT_URL","_packagePrefix","resolvedUrl","resolvedParts","_resourceLoader","_urlResolver","_resourceLoaderCache","clearCache","clear","clearCacheFor","normalizedDirective","stylesheet","_fetch","normalizeTemplate","prenormData","normalizedTemplateAsync","normalizedTemplateSync","normalizeTemplateSync","normalizeTemplateAsync","then","normalizedTemplate","normalizeExternalStylesheets","prenomData","normalizeLoadedTemplate","templateAbsUrl","rootNodesAndErrors","templateMetadataStyles","normalizeStylesheet","TemplatePreparseVisitor","templateStyles","_loadMissingExternalStylesheets","loadedStylesheets","all","styleUrl","loadedStyle","allStyleUrls","allStyles","styleWithImports","ngNonBindableStackCount","textContent_1","_reflector","typeMetadata","annotations","throwIfNotFound","propertyMetadata","propMetadata","_mergeWithPropertyMetadata","dm","directiveType","Input","bindingPropertyName","Output","hostBindings","HostBinding","hostBinding","hostPropertyName","startWith","HostListener","hostListener","Query","_merge","_extractPublicName","def","_dedupeBindings","names","reversedResult","mergedInputs","mergedOutputs","mergedHost","ɵmerge","mergedQueries","ɵReflectorReader","isNgModule","metas","annotation","SummaryResolver","getLibraryFileName","ERROR_COLLECTOR_TOKEN","_ngModuleResolver","_directiveResolver","_pipeResolver","_summaryResolver","_directiveNormalizer","_staticSymbolCache","_errorCollector","_nonNormalizedDirectiveCache","_directiveCache","_summaryCache","_pipeCache","_ngModuleCache","_ngModuleOfTypes","_createProxyClass","baseType","delegate","proxyClass","setDelegate","overriddenName","getGeneratedClass","getComponentViewClass","getHostComponentViewClass","getHostComponentType","HostClass","getRendererType","getComponentFactory","hostView","initComponentFactory","_loadSummary","_loadDirectiveMetadata","isSync","getNonNormalizedDirectiveMetadata","createDirectiveMetadata","templateMetadata","normalizedDirMeta","cacheEntry","nonNormalizedTemplateMetadata","changeDetectionStrategy","entryComponentMetadata","_getProvidersMetadata","_getEntryComponentMetadata","_getQueriesMetadata","_getTypeMetadata","getDirectiveMetadata","getDirectiveSummary","dirSummary","getNgModuleSummary","moduleType","moduleSummary","loadNgModuleDirectiveAndPipeMetadata","loading","promise","_loadPipeMetadata","compileMeta","exportedNonModuleIdentifiers","imports","importedType","importedModuleType","moduleWithProviders","_checkSelfImport","importedModuleSummary","_getTypeDescriptor","exportedType","exportedModuleSummary","_getIdentifierMetadata","_getTransitiveNgModuleMetadata","declarations","declaredType","declaredIdentifier","_addTypeToModule","exportedId","bootstrap","oldModule","modulesByToken","modSummary","mod","comp","addedTokens","prevModules","moduleRef","ann","getInjectableSummary","_getInjectableMetadata","throwOnUnknownDeps","_getDependenciesMetadata","ɵLIFECYCLE_HOOKS_VALUES","_getFactoryMetadata","getPipeMetadata","pipeType","getPipeSummary","pipeSummary","getOrLoadPipeMetadata","pipeAnnotation","typeOrFunc","hasUnknownDeps","parameters","dependenciesMetadata","paramEntry","Host","Self","SkipSelf","attributeName","_getTokenMetadata","depsTokens","compileToken","targetEntryComponents","debugInfo","compileProviders","providerIdx","_validateProvider","providersInfo","soFar","seenProvider","seenProviderIdx","_getEntryComponentsFromProvider","getProviderMetadata","components","collectedIdentifiers","compileDeps","compileTypeMetadata","compileFactoryMetadata","isViewQuery","propertyName","_getQueryMetadata","_queryVarBindings","q","varName","first","otherType","TypeModifier","Const","hasModifier","modifier","BuiltinTypeName","Dynamic","Bool","Int","Inferred","BuiltinType","visitBuiltintType","visitExpressionType","ArrayType","of","visitArrayType","MapType","valueType","visitMapType","BOOL_TYPE","BinaryOperator","Equals","NotEquals","Identical","NotIdentical","Minus","Plus","Divide","Multiply","Modulo","And","Or","Lower","LowerEquals","Bigger","BiggerEquals","ReadPropExpr","ReadKeyExpr","callMethod","InvokeMethodExpr","InvokeFunctionExpr","InstantiateExpr","conditional","trueCase","falseCase","ConditionalExpr","equals","rhs","BinaryOperatorExpr","notEquals","identical","plus","multiply","modulo","lower","lowerEquals","bigger","biggerEquals","isBlank","TYPED_NULL_EXPR","CastExpr","BuiltinVar","This","Super","CatchError","CatchStack","builtin","visitReadVarExpr","WriteVarExpr","visitWriteVarExpr","WriteKeyExpr","visitWriteKeyExpr","WritePropExpr","visitWritePropExpr","BuiltinMethod","ConcatArray","SubscribeObservable","Bind","visitInvokeMethodExpr","visitInvokeFunctionExpr","classExpr","visitInstantiateExpr","visitLiteralExpr","visitExternalExpr","visitConditionalExpr","visitNotExpr","visitCastExpr","visitFunctionExpr","DeclareFunctionStmt","lhs","visitBinaryOperatorExpr","visitReadPropExpr","visitReadKeyExpr","entries","visitLiteralArrayExpr","visitLiteralMapExpr","CommaExpr","visitCommaExpr","THIS_EXPR","Private","visitDeclareVarStmt","visitDeclareFunctionStmt","visitExpressionStmt","visitReturnStmt","AbstractClassPart","ClassField","ClassGetter","visitDeclareClassStmt","IfStmt","visitIfStmt","TryCatchStmt","bodyStmts","catchStmts","visitTryCatchStmt","ThrowStmt","visitThrowStmt","AstTransformer$1","transformExpr","transformStmt","visitAllExpressions","mapType","ctorMethod","visitCommentStmt","RecursiveAstVisitor$1","_clone","clone","QUOTED_KEYS","quotedSet","ComponentFactoryDependency","NgModuleCompileResult","ngModuleFactoryVar","compile","bootstrapComponentFactories","_InjectorBuilder","providerParser","injectorClass","ngModuleFactoryStmt","registerFactoryStmt","_ngModuleMeta","_entryComponentFactories","_bootstrapComponentFactories","_lazyProps","_tokens","_instances","_createStmts","_destroyStmts","providerValueExpressions","_getProviderValue","instance","_createProviderProperty","callNgOnDestroy","getMethodStmts","InjectMethodVars","notFoundResult","InjectorProps","injClassName","isMulti","isEager","resolvedProviderValueExpr","internalFieldProp","getterStmts","VERSION$1","JS_B64_PREFIX","SourceMapGenerator","sourcesContent","lines","lastCol0","hasMappings","addSource","addLine","addMapping","col0","sourceLine0","sourceCol0","currentLine","toJSON","sourcesIndex","sources","mappings","lastSourceIndex","lastSourceLine0","lastSourceCol0","segAsStr","sourceRoot","CATCH_ERROR_VAR$1","CATCH_STACK_VAR$1","_EmittedLine","indent","srcSpans","_exportedVars","_indent","_classes","_lines","exportedVars","isExportedVar","println","lastPart","print","lineIsEmpty","_currentLine","newLine","removeEmptyLastLine","incIndent","decIndent","pushClass","clazz","popClass","sourceLines","sourceFilePath","genFilePath","startsAtLine","firstOffsetMapped","mapFirstOffsetIfNeeded","lineIdx","spans","spanIdx","sourceLine","sourceCol","AbstractEmitterVisitor","_escapeDollarInStrings","hasElseCase","lineWasEmpty","getBuiltinMethodName","opStr","useNewLine","visitAllObjects","separator","_importResolver","emitStatements","srcFilePath","preamble","preambleLines","reexports","exportedFilePath","reexportsCode","reexport","as","importsWithPrefixes","importedFilePath","sm","_genFilePath","typeExpression","defaultType","_visitIdentifier","_resolveStaticSymbol","_printColonType","_visitClassField","_visitClassConstructor","_visitClassGetter","_visitClassMethod","_visitParams","typeStr","arity","importReference","suppliedParameters","additionalParameters","HTML","URL","RESOURCE_URL","BOOLEAN","NUMBER","STRING","OBJECT","SCHEMA","_ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","_schema","encodedType","strType","strProperties","properties","typeNames","superName","superType","property","schema","NO_ERRORS_SCHEMA","CUSTOM_ELEMENTS_SCHEMA","elementProperties","strVal","valAndSuffixMatch","ShadowCss","strictStyling","shimCssText","hostSelector","sourceMappingUrl","_insertDirectives","_scopeCssText","_insertPolyfillDirectivesInCssText","_insertPolyfillRulesInCssText","_cssContentNextSelectorRe","_cssContentRuleRe","scopeSelector","unscopedRules","_extractUnscopedRulesFromCssText","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertShadowDOMSelectors","_scopeSelectors","r","_cssContentUnscopedRuleRe","_convertColonRule","_cssColonHostRe","_colonHostPartReplacer","_cssColonHostContextRe","_colonHostContextPartReplacer","regExp","partReplacer","_polyfillHostNoCombinator","_polyfillHost","_shadowDOMSelectorsRe","_scopeSelector","strict","_shadowDeepSelectors","deepParts","shallowPart","otherParts","applyScope","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","re","_makeScopeMatcher","lre","rre","_selectorReSuffix","_applySimpleSelectorScope","_polyfillHostRe","replaceBy_1","_polyfillHostNoCombinatorRe","hnc","colon","isRe","_scopeSelectorPart","scopedP","safeContent","SafeSelector","scopedSelector","sep","scopeAfter","scopedPart","restore","_colonHostContextRe","_polyfillHostContext","_colonHostRe","keep","replaceBy","_content","pseudo","_parenSuffix","COMPONENT_VARIABLE","HOST_ATTR","CONTENT_ATTR","StylesCompileDependency","StylesCompileResult","componentStylesheet","CompiledStylesheet","stylesVar","_shadowCss","compileComponent","_compileStyles","stylesheetMeta","compiledStylesheet","isComponentStylesheet","styleExpressions","plainStyle","_shimIfNeeded","EventHandlerVars","allowDefault","_converterFactory","BuiltinFunctionCall","_localResolver","_implicitReceiver","_nodeMap","_resultMap","_currentTemporary","fnResult","convertedArgs","leftMostSafe","leftMostSafeNode","convertSafeAccess","_getLocal","getLocal","varExpr","temporary","guardedExpression","needsTemporary","allocateTemporary","access","releaseTemporary","visitSome","tempNumber","IMPLICIT_TEMPLATE_VAR","ViewCompileResult","viewClassVar","rendererTypeVar","_genConfigNext","renderComponentVarName","embeddedViewCount","customRenderData","renderComponentVar","viewBuilderFactory","embeddedViewIndex","ViewBuilder","viewName","LOG_VAR","COMP_VAR","EVENT_NAME_VAR","ALLOW_DEFAULT_VAR","purePipeNodeIndices","refNodeIndices","_createPipe","queryIds_1","queryIndex","nodeFlags","nodeDef","targetStatements","_createNodeExpressions","updateRendererStmts","updateDirectivesStmts","nodeDefExprs","updateRendererFn","_createUpdateFn","updateDirectivesFn","viewFlags","OnPush","viewFactory","updateStmts","updateFn","preStmts","astWithSource","inter","updateRendererExpressions","bindingIndex","_preprocessUpdateExpression","updateRenderer","_visitElementOrTemplate","queryMatchesExpr","childVisitor","childCount","_createElementHandleEventFn","usedEvents","dirHostBindings","inputDefs","outputDefs","compAst","compRendererType","compView","ɵelementEventFullName","componentFactoryResolverProvider","_visitProvider","dirIndex","localDirAst","_visitDirective","dirHostEvents","queryMatchExprs","outputAst","elementNodeIndex","queryIds","_visitProviderOrDirective","mapValue","updateDirectiveExpressions","dirContextExpr","hostEventAst","updateDirectives","currViewExpr","currBuilder","refNodeIndex","varAst","varValue","valueExpr_1","valueExpr_2","nodeIndex_1","compViewExpr","compBuilder","pipeNodeIndex","pipeValueExpr_1","nodeValueExpr_1","createUpdateStatements","allowEmptyExprs","updateBindingCount","nameResolver","self","logWithNodeDef","handlers","handleEventStmts","handleEventBindingCount","trueStmts","eventTarget","fullEventName","handleEventFn","GeneratedFile","genFileUrl","indexBySymbol","processedSummaryBySymbol","processedSummaries","statics","processedSummary","processValue","summaries","importAs","__symbol","baseSymbol","serializedSymbol","_host","_metadataResolver","_templateParser","_styleCompiler","_viewCompiler","_ngModuleCompiler","_outputEmitter","_localeId","_translationFormat","_genFilePreamble","_symbolResolver","compileAll","rootFiles","sourceModules","_compileSrcFile","generatedFiles","_createSummary","_compileModule","stylesCompileResults","compiledStyleSheet","_codgenStyles","compViewVars","_compileComponent","_compileComponentFactory","compRenderTypeVar","srcModule","_codegenSourceModule","targetExportedVars","symbolSummaries","typeSummaries","appCompileResult","hostType","hostMeta","hostViewFactoryVar","compFactoryVar","inputsExprs","outputsExprs","directiveIdentifiers","componentStyles","parsedTemplate","stylesExpr","viewResult","stylesCompileResult","staticDelegate","dynamicDelegate","updateCapabilities","isReflectionEnabled","lcProperty","setter","resolveEnum","enumIdentifier","ANGULAR_CORE","IGNORE","knownMetadataClasses","knownMetadataFunctions","errorRecorder","annotationCache","propertyCache","parameterCache","methodCache","conversionMap","initializeConversionMap","kc","_registerDecoratorOrConstructor","kf","_registerFunction","findSymbolDeclaration","getResourcePath","importSymbol","rootSymbol","findDeclaration","recordImportAs","containingFile","getSymbolByModule","classMetadata","getTypeMetadata","parentType","trySimplify","parentAnnotations","ownAnnotations","simplify","parentPropMetadata_1","parentProp","members_1","propData","reportError","parameters_1","ctorData","parameterTypes","parameterDecorators_1","paramType","nestedResult","_methodNames","methodNames","parentMethodNames_1","members_2","isMethod","injectionToken","opaqueToken","ContentChild","ContentChildren","ViewChild","ViewChildren","trigger","state","transition","animate","keyframes","sequence","group","originalRecorder","simplifyInContext","depth","resolveReferenceValue","simplifyCall","functionSymbol","targetFunction","calling","value_1","defaults","functionScope","BindingScope","result_1","oldScope","scope","done","result_2","spreadArray","spreadArray_1","spreadItem","value_2","declarationValue","operand","indexTarget","member","selectContext","selectTarget","localValue","missing","argExpressions","recordedSimplifyInContext","PopulatedScope","ResolvedStaticSymbol","SUPPORTED_SCHEMA_VERSION","staticSymbolCache","metadataCache","resolvedSymbols","resolvedFilePaths","symbolResourcePaths","_resolveSymbolMembers","_resolveSymbolFromSummary","_createSymbolsOf","baseImportAs","sourceSymbol","targetSymbol","baseResolvedSymbol","baseMetadata","getModuleMetadata","topLevelSymbolNames_1","origins_1","metadataKey","origin","originFilePath","resolveModule","createResolvedSymbol","_loop_1","moduleExport","export","exportSymbol","symbolName","symName","resolvedModule","createExport","this_1","nestedExports","topLevelPath","topLevelSymbolNames","ReferenceTransformer","functionParams","symbolic","oldLen","module_1","transformedMeta","moduleMetadata","moduleMetadatas","getMetadataFor","maxVersion_1","md","errorMessage","moduleNameToFileName","summaryCache","loadedFilePaths","getOutputFileName","_loadSummaryFile","summaryFilePath","loadSummary","ReturnValue","debugAst","currCtx","__proto__","CATCH_ERROR_VAR$2","CATCH_STACK_VAR$2","subscribe","fnExpr","fn$$1","AbstractJsEmitterVisitor","currentClass","_evalArgNames","_evalArgValues","JitCompiler","_injector","_compilerConfig","_compiledTemplateCache","_compiledHostTemplateCache","_compiledDirectiveWrapperCache","_compiledNgModuleCache","_sharedStylesheetCount","compileModuleSync","_compileModuleAndComponents","compileModuleAsync","compileModuleAndAllComponentsSync","_compileModuleAndAllComponents","compileModuleAndAllComponentsAsync","getNgContentSelectors","loadingPromise","_loadModules","createResult","_compileComponents","componentFactories","ModuleWithComponentFactories","mainModule","loadingPromises","localModuleMeta","ngModuleFactory","moduleMeta_1","Compiler","ModuleBoundCompiler","allComponentFactories","moduleByDirective","templates","localModuleSummary","_createCompiledTemplate","_createCompiledHostTemplate","entryComponentType","_compileTemplate","compiledTemplate","hostClass","ɵgetComponentViewDefinitionFactory","CompiledTemplate","isCompiled","externalStylesheetsByModuleUrl","_resolveStylesCompileResult","viewClass","viewClassAndRendererTypeVars","compiled","nestedCompileResult","nestedStylesArr","_resolveAndEvalStylesCompileResult","_viewClass","_delegate","_ngModule","injector","MessageBundle","updateFromTemplate","htmlParserResult","i18nParserResult","getMessages","mapperVisitor","MapPlaceholderNames","msgList","src","Extractor","messageBundle","compMetas","extractor","_NO_RESOURCE_LOADER","baseHtmlParser","COMPILER_PROVIDERS","ɵReflector","parser","TRANSLATIONS","JitCompilerFactory","defaultOptions","compilerOptions","useDebug","_defaultOptions","createCompiler","opts","ReflectiveInjector","resolveAndCreate","COMPILER_OPTIONS","platformCoreDynamic","createPlatformFactory","platformCore","CompilerFactory","PLATFORM_INITIALIZER","ImportResolver"],"mappings":"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B,gBAAgBuB,OAAQ,YAEtD+N,gBAAgB9wB,cAAcwhB,gBAAgBu+E,KAC1C,eAAgB,YAAa,YAAa,YAAa,SACvD,SAAU,kBAAmB,kBAAmB,WAAY,cAC5D,UAAW,aAAc,YAAa,WAAY,SAClD,aAAc,gBAAiB,YAAa,eAAgB,cAEhEjvE,gBAAgB9wB,cAAcwhB,gBAAgBw+E,cAC1C,cACA,kBACA,YACA,YACA,YACA,eACA,gBACA,aACA,YACA,YACA,kBACA,cACA;;;;;;;AASJ,GAAIC,SAAU,UACVC,OAAS,SACTC,OAAS,SACTC,OAAS,SAuDTC,QACA,4NACA,69BACA,4oCACA,mMACA,ilBACA,uBACA,2CACA,uBACA,wCACA,uBACA,kCACA,yCACA,mLACA,iJACA,eACA,yBACA,iCACA,iQACA,yHACA,sCACA,+BACA,4BACA,0BACA,8BACA,yCACA,6BACA,0BACA,uDACA,wCACA,qCACA,uGACA,iGACA,sOACA,mDACA,sBACA,wCACA,6BACA,2JACA,oJACA,wbACA,mEACA,+BACA,8BACA,6BACA,yHACA,yBACA,4HACA,8BACA,mDACA,2DACA,sCACA,kDACA,uIACA,yCACA,6EACA,wDACA,wBACA,gDACA,yBACA,2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,qBACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,2BACA,sBACA,+CACA,+CACA,+CACA,+CACA,6BACA,sBACA,sBACA,0BACA,2BACA,uBACA,2BACA,iCACA,0BACA,qBACA,2BACA,qBACA,oCACA,wBACA,4BACA,2BACA,qCACA,oBACA,qBACA,mBACA,uBACA,2BACA,sBACA,8BACA,+BACA,qCACA,2BACA,mDACA,yBACA,2BACA,mBACA,8CACA,6BACA,qBACA,mCACA,kCACA,kCACA,oBA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","file":"/home/travis/build/angular/angular/dist/packages-dist/compiler/bundles/compiler.umd.min.js","sourcesContent":["/**\n * @license Angular v4.0.0-rc.5-9319b5f\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', '@angular/core'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.compiler = global.ng.compiler || {}),global.ng.core));\n}(this, (function (exports,_angular_core) { 'use strict';\n\nvar __extends = (undefined && undefined.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * @license Angular v4.0.0-rc.5-9319b5f\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new _angular_core.Version('4.0.0-rc.5-9319b5f');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A segment of text within the template.\n */\nvar TextAst = (function () {\n    /**\n     * @param {?} value\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    function TextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TextAst.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n    return TextAst;\n}());\n/**\n * A bound expression within the text of a template.\n */\nvar BoundTextAst = (function () {\n    /**\n     * @param {?} value\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    function BoundTextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundTextAst.prototype.visit = function (visitor, context) {\n        return visitor.visitBoundText(this, context);\n    };\n    return BoundTextAst;\n}());\n/**\n * A plain attribute on an element.\n */\nvar AttrAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function AttrAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AttrAst.prototype.visit = function (visitor, context) { return visitor.visitAttr(this, context); };\n    return AttrAst;\n}());\n/**\n * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n * `[\\@trigger]=\"stateExp\"`)\n */\nvar BoundElementPropertyAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} type\n     * @param {?} securityContext\n     * @param {?} value\n     * @param {?} unit\n     * @param {?} sourceSpan\n     */\n    function BoundElementPropertyAst(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundElementPropertyAst.prototype.visit = function (visitor, context) {\n        return visitor.visitElementProperty(this, context);\n    };\n    Object.defineProperty(BoundElementPropertyAst.prototype, \"isAnimation\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.type === PropertyBindingType.Animation; },\n        enumerable: true,\n        configurable: true\n    });\n    return BoundElementPropertyAst;\n}());\n/**\n * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n * `(\\@trigger.phase)=\"callback($event)\"`).\n */\nvar BoundEventAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @param {?} handler\n     * @param {?} sourceSpan\n     */\n    function BoundEventAst(name, target, phase, handler, sourceSpan) {\n        this.name = name;\n        this.target = target;\n        this.phase = phase;\n        this.handler = handler;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    BoundEventAst.calcFullName = function (name, target, phase) {\n        if (target) {\n            return target + \":\" + name;\n        }\n        else if (phase) {\n            return \"@\" + name + \".\" + phase;\n        }\n        else {\n            return name;\n        }\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundEventAst.prototype.visit = function (visitor, context) {\n        return visitor.visitEvent(this, context);\n    };\n    Object.defineProperty(BoundEventAst.prototype, \"fullName\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return BoundEventAst.calcFullName(this.name, this.target, this.phase); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BoundEventAst.prototype, \"isAnimation\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return !!this.phase; },\n        enumerable: true,\n        configurable: true\n    });\n    return BoundEventAst;\n}());\n/**\n * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n */\nvar ReferenceAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function ReferenceAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReferenceAst.prototype.visit = function (visitor, context) {\n        return visitor.visitReference(this, context);\n    };\n    return ReferenceAst;\n}());\n/**\n * A variable declaration on a <ng-template> (e.g. `var-someName=\"someLocalName\"`).\n */\nvar VariableAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function VariableAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    VariableAst.prototype.visit = function (visitor, context) {\n        return visitor.visitVariable(this, context);\n    };\n    return VariableAst;\n}());\n/**\n * An element declaration in a template.\n */\nvar ElementAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} attrs\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} references\n     * @param {?} directives\n     * @param {?} providers\n     * @param {?} hasViewContainer\n     * @param {?} queryMatches\n     * @param {?} children\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     * @param {?} endSourceSpan\n     */\n    function ElementAst(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan, endSourceSpan) {\n        this.name = name;\n        this.attrs = attrs;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.references = references;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ElementAst.prototype.visit = function (visitor, context) {\n        return visitor.visitElement(this, context);\n    };\n    return ElementAst;\n}());\n/**\n * A `<ng-template>` element included in an Angular template.\n */\nvar EmbeddedTemplateAst = (function () {\n    /**\n     * @param {?} attrs\n     * @param {?} outputs\n     * @param {?} references\n     * @param {?} variables\n     * @param {?} directives\n     * @param {?} providers\n     * @param {?} hasViewContainer\n     * @param {?} queryMatches\n     * @param {?} children\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    function EmbeddedTemplateAst(attrs, outputs, references, variables, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan) {\n        this.attrs = attrs;\n        this.outputs = outputs;\n        this.references = references;\n        this.variables = variables;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    EmbeddedTemplateAst.prototype.visit = function (visitor, context) {\n        return visitor.visitEmbeddedTemplate(this, context);\n    };\n    return EmbeddedTemplateAst;\n}());\n/**\n * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n */\nvar BoundDirectivePropertyAst = (function () {\n    /**\n     * @param {?} directiveName\n     * @param {?} templateName\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\n        this.directiveName = directiveName;\n        this.templateName = templateName;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundDirectivePropertyAst.prototype.visit = function (visitor, context) {\n        return visitor.visitDirectiveProperty(this, context);\n    };\n    return BoundDirectivePropertyAst;\n}());\n/**\n * A directive declared on an element.\n */\nvar DirectiveAst = (function () {\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} hostProperties\n     * @param {?} hostEvents\n     * @param {?} contentQueryStartId\n     * @param {?} sourceSpan\n     */\n    function DirectiveAst(directive, inputs, hostProperties, hostEvents, contentQueryStartId, sourceSpan) {\n        this.directive = directive;\n        this.inputs = inputs;\n        this.hostProperties = hostProperties;\n        this.hostEvents = hostEvents;\n        this.contentQueryStartId = contentQueryStartId;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DirectiveAst.prototype.visit = function (visitor, context) {\n        return visitor.visitDirective(this, context);\n    };\n    return DirectiveAst;\n}());\n/**\n * A provider declared on an element\n */\nvar ProviderAst = (function () {\n    /**\n     * @param {?} token\n     * @param {?} multiProvider\n     * @param {?} eager\n     * @param {?} providers\n     * @param {?} providerType\n     * @param {?} lifecycleHooks\n     * @param {?} sourceSpan\n     */\n    function ProviderAst(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan) {\n        this.token = token;\n        this.multiProvider = multiProvider;\n        this.eager = eager;\n        this.providers = providers;\n        this.providerType = providerType;\n        this.lifecycleHooks = lifecycleHooks;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ProviderAst.prototype.visit = function (visitor, context) {\n        // No visit method in the visitor for now...\n        return null;\n    };\n    return ProviderAst;\n}());\nvar ProviderAstType = {};\nProviderAstType.PublicService = 0;\nProviderAstType.PrivateService = 1;\nProviderAstType.Component = 2;\nProviderAstType.Directive = 3;\nProviderAstType.Builtin = 4;\nProviderAstType[ProviderAstType.PublicService] = \"PublicService\";\nProviderAstType[ProviderAstType.PrivateService] = \"PrivateService\";\nProviderAstType[ProviderAstType.Component] = \"Component\";\nProviderAstType[ProviderAstType.Directive] = \"Directive\";\nProviderAstType[ProviderAstType.Builtin] = \"Builtin\";\n/**\n * Position where content is to be projected (instance of `<ng-content>` in a template).\n */\nvar NgContentAst = (function () {\n    /**\n     * @param {?} index\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    function NgContentAst(index, ngContentIndex, sourceSpan) {\n        this.index = index;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NgContentAst.prototype.visit = function (visitor, context) {\n        return visitor.visitNgContent(this, context);\n    };\n    return NgContentAst;\n}());\nvar PropertyBindingType = {};\nPropertyBindingType.Property = 0;\nPropertyBindingType.Attribute = 1;\nPropertyBindingType.Class = 2;\nPropertyBindingType.Style = 3;\nPropertyBindingType.Animation = 4;\nPropertyBindingType[PropertyBindingType.Property] = \"Property\";\nPropertyBindingType[PropertyBindingType.Attribute] = \"Attribute\";\nPropertyBindingType[PropertyBindingType.Class] = \"Class\";\nPropertyBindingType[PropertyBindingType.Style] = \"Style\";\nPropertyBindingType[PropertyBindingType.Animation] = \"Animation\";\n/**\n * Visit every node in a list of {\\@link TemplateAst}s with the given {\\@link TemplateAstVisitor}.\n * @param {?} visitor\n * @param {?} asts\n * @param {?=} context\n * @return {?}\n */\nfunction templateVisitAll(visitor, asts, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return visitor.visit(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    asts.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\n/**\n * A token representing the a reference to a static type.\n *\n * This token is unique for a filePath and name and can be used as a hash table key.\n */\nvar StaticSymbol = (function () {\n    /**\n     * @param {?} filePath\n     * @param {?} name\n     * @param {?} members\n     */\n    function StaticSymbol(filePath, name, members) {\n        this.filePath = filePath;\n        this.name = name;\n        this.members = members;\n    }\n    /**\n     * @return {?}\n     */\n    StaticSymbol.prototype.assertNoMembers = function () {\n        if (this.members.length) {\n            throw new Error(\"Illegal state: symbol without members expected, but got \" + JSON.stringify(this) + \".\");\n        }\n    };\n    return StaticSymbol;\n}());\n/**\n * A cache of static symbol used by the StaticReflector to return the same symbol for the\n * same symbol values.\n */\nvar StaticSymbolCache = (function () {\n    function StaticSymbolCache() {\n        this.cache = new Map();\n    }\n    /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticSymbolCache.prototype.get = function (declarationFile, name, members) {\n        members = members || [];\n        var /** @type {?} */ memberSuffix = members.length ? \".\" + members.join('.') : '';\n        var /** @type {?} */ key = \"\\\"\" + declarationFile + \"\\\".\" + name + memberSuffix;\n        var /** @type {?} */ result = this.cache.get(key);\n        if (!result) {\n            result = new StaticSymbol(declarationFile, name, members);\n            this.cache.set(key, result);\n        }\n        return result;\n    };\n    return StaticSymbolCache;\n}());\nvar TagContentType = {};\nTagContentType.RAW_TEXT = 0;\nTagContentType.ESCAPABLE_RAW_TEXT = 1;\nTagContentType.PARSABLE_DATA = 2;\nTagContentType[TagContentType.RAW_TEXT] = \"RAW_TEXT\";\nTagContentType[TagContentType.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTagContentType[TagContentType.PARSABLE_DATA] = \"PARSABLE_DATA\";\n/**\n * @param {?} elementName\n * @return {?}\n */\nfunction splitNsName(elementName) {\n    if (elementName[0] != ':') {\n        return [null, elementName];\n    }\n    var /** @type {?} */ colonIndex = elementName.indexOf(':', 1);\n    if (colonIndex == -1) {\n        throw new Error(\"Unsupported format \\\"\" + elementName + \"\\\" expecting \\\":namespace:name\\\"\");\n    }\n    return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n/**\n * @param {?} fullName\n * @return {?}\n */\nfunction getNsPrefix(fullName) {\n    return fullName === null ? null : splitNsName(fullName)[0];\n}\n/**\n * @param {?} prefix\n * @param {?} localName\n * @return {?}\n */\nfunction mergeNsAndName(prefix, localName) {\n    return prefix ? \":\" + prefix + \":\" + localName : localName;\n}\n// see http://www.w3.org/TR/html51/syntax.html#named-character-references\n// see https://html.spec.whatwg.org/multipage/entities.json\n// This list is not exhaustive to keep the compiler footprint low.\n// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not exist.\nvar NAMED_ENTITIES = {\n    'Aacute': '\\u00C1',\n    'aacute': '\\u00E1',\n    'Acirc': '\\u00C2',\n    'acirc': '\\u00E2',\n    'acute': '\\u00B4',\n    'AElig': '\\u00C6',\n    'aelig': '\\u00E6',\n    'Agrave': '\\u00C0',\n    'agrave': '\\u00E0',\n    'alefsym': '\\u2135',\n    'Alpha': '\\u0391',\n    'alpha': '\\u03B1',\n    'amp': '&',\n    'and': '\\u2227',\n    'ang': '\\u2220',\n    'apos': '\\u0027',\n    'Aring': '\\u00C5',\n    'aring': '\\u00E5',\n    'asymp': '\\u2248',\n    'Atilde': '\\u00C3',\n    'atilde': '\\u00E3',\n    'Auml': '\\u00C4',\n    'auml': '\\u00E4',\n    'bdquo': '\\u201E',\n    'Beta': '\\u0392',\n    'beta': '\\u03B2',\n    'brvbar': '\\u00A6',\n    'bull': '\\u2022',\n    'cap': '\\u2229',\n    'Ccedil': '\\u00C7',\n    'ccedil': '\\u00E7',\n    'cedil': '\\u00B8',\n    'cent': '\\u00A2',\n    'Chi': '\\u03A7',\n    'chi': '\\u03C7',\n    'circ': '\\u02C6',\n    'clubs': '\\u2663',\n    'cong': '\\u2245',\n    'copy': '\\u00A9',\n    'crarr': '\\u21B5',\n    'cup': '\\u222A',\n    'curren': '\\u00A4',\n    'dagger': '\\u2020',\n    'Dagger': '\\u2021',\n    'darr': '\\u2193',\n    'dArr': '\\u21D3',\n    'deg': '\\u00B0',\n    'Delta': '\\u0394',\n    'delta': '\\u03B4',\n    'diams': '\\u2666',\n    'divide': '\\u00F7',\n    'Eacute': '\\u00C9',\n    'eacute': '\\u00E9',\n    'Ecirc': '\\u00CA',\n    'ecirc': '\\u00EA',\n    'Egrave': '\\u00C8',\n    'egrave': '\\u00E8',\n    'empty': '\\u2205',\n    'emsp': '\\u2003',\n    'ensp': '\\u2002',\n    'Epsilon': '\\u0395',\n    'epsilon': '\\u03B5',\n    'equiv': '\\u2261',\n    'Eta': '\\u0397',\n    'eta': '\\u03B7',\n    'ETH': '\\u00D0',\n    'eth': '\\u00F0',\n    'Euml': '\\u00CB',\n    'euml': '\\u00EB',\n    'euro': '\\u20AC',\n    'exist': '\\u2203',\n    'fnof': '\\u0192',\n    'forall': '\\u2200',\n    'frac12': '\\u00BD',\n    'frac14': '\\u00BC',\n    'frac34': '\\u00BE',\n    'frasl': '\\u2044',\n    'Gamma': '\\u0393',\n    'gamma': '\\u03B3',\n    'ge': '\\u2265',\n    'gt': '>',\n    'harr': '\\u2194',\n    'hArr': '\\u21D4',\n    'hearts': '\\u2665',\n    'hellip': '\\u2026',\n    'Iacute': '\\u00CD',\n    'iacute': '\\u00ED',\n    'Icirc': '\\u00CE',\n    'icirc': '\\u00EE',\n    'iexcl': '\\u00A1',\n    'Igrave': '\\u00CC',\n    'igrave': '\\u00EC',\n    'image': '\\u2111',\n    'infin': '\\u221E',\n    'int': '\\u222B',\n    'Iota': '\\u0399',\n    'iota': '\\u03B9',\n    'iquest': '\\u00BF',\n    'isin': '\\u2208',\n    'Iuml': '\\u00CF',\n    'iuml': '\\u00EF',\n    'Kappa': '\\u039A',\n    'kappa': '\\u03BA',\n    'Lambda': '\\u039B',\n    'lambda': '\\u03BB',\n    'lang': '\\u27E8',\n    'laquo': '\\u00AB',\n    'larr': '\\u2190',\n    'lArr': '\\u21D0',\n    'lceil': '\\u2308',\n    'ldquo': '\\u201C',\n    'le': '\\u2264',\n    'lfloor': '\\u230A',\n    'lowast': '\\u2217',\n    'loz': '\\u25CA',\n    'lrm': '\\u200E',\n    'lsaquo': '\\u2039',\n    'lsquo': '\\u2018',\n    'lt': '<',\n    'macr': '\\u00AF',\n    'mdash': '\\u2014',\n    'micro': '\\u00B5',\n    'middot': '\\u00B7',\n    'minus': '\\u2212',\n    'Mu': '\\u039C',\n    'mu': '\\u03BC',\n    'nabla': '\\u2207',\n    'nbsp': '\\u00A0',\n    'ndash': '\\u2013',\n    'ne': '\\u2260',\n    'ni': '\\u220B',\n    'not': '\\u00AC',\n    'notin': '\\u2209',\n    'nsub': '\\u2284',\n    'Ntilde': '\\u00D1',\n    'ntilde': '\\u00F1',\n    'Nu': '\\u039D',\n    'nu': '\\u03BD',\n    'Oacute': '\\u00D3',\n    'oacute': '\\u00F3',\n    'Ocirc': '\\u00D4',\n    'ocirc': '\\u00F4',\n    'OElig': '\\u0152',\n    'oelig': '\\u0153',\n    'Ograve': '\\u00D2',\n    'ograve': '\\u00F2',\n    'oline': '\\u203E',\n    'Omega': '\\u03A9',\n    'omega': '\\u03C9',\n    'Omicron': '\\u039F',\n    'omicron': '\\u03BF',\n    'oplus': '\\u2295',\n    'or': '\\u2228',\n    'ordf': '\\u00AA',\n    'ordm': '\\u00BA',\n    'Oslash': '\\u00D8',\n    'oslash': '\\u00F8',\n    'Otilde': '\\u00D5',\n    'otilde': '\\u00F5',\n    'otimes': '\\u2297',\n    'Ouml': '\\u00D6',\n    'ouml': '\\u00F6',\n    'para': '\\u00B6',\n    'permil': '\\u2030',\n    'perp': '\\u22A5',\n    'Phi': '\\u03A6',\n    'phi': '\\u03C6',\n    'Pi': '\\u03A0',\n    'pi': '\\u03C0',\n    'piv': '\\u03D6',\n    'plusmn': '\\u00B1',\n    'pound': '\\u00A3',\n    'prime': '\\u2032',\n    'Prime': '\\u2033',\n    'prod': '\\u220F',\n    'prop': '\\u221D',\n    'Psi': '\\u03A8',\n    'psi': '\\u03C8',\n    'quot': '\\u0022',\n    'radic': '\\u221A',\n    'rang': '\\u27E9',\n    'raquo': '\\u00BB',\n    'rarr': '\\u2192',\n    'rArr': '\\u21D2',\n    'rceil': '\\u2309',\n    'rdquo': '\\u201D',\n    'real': '\\u211C',\n    'reg': '\\u00AE',\n    'rfloor': '\\u230B',\n    'Rho': '\\u03A1',\n    'rho': '\\u03C1',\n    'rlm': '\\u200F',\n    'rsaquo': '\\u203A',\n    'rsquo': '\\u2019',\n    'sbquo': '\\u201A',\n    'Scaron': '\\u0160',\n    'scaron': '\\u0161',\n    'sdot': '\\u22C5',\n    'sect': '\\u00A7',\n    'shy': '\\u00AD',\n    'Sigma': '\\u03A3',\n    'sigma': '\\u03C3',\n    'sigmaf': '\\u03C2',\n    'sim': '\\u223C',\n    'spades': '\\u2660',\n    'sub': '\\u2282',\n    'sube': '\\u2286',\n    'sum': '\\u2211',\n    'sup': '\\u2283',\n    'sup1': '\\u00B9',\n    'sup2': '\\u00B2',\n    'sup3': '\\u00B3',\n    'supe': '\\u2287',\n    'szlig': '\\u00DF',\n    'Tau': '\\u03A4',\n    'tau': '\\u03C4',\n    'there4': '\\u2234',\n    'Theta': '\\u0398',\n    'theta': '\\u03B8',\n    'thetasym': '\\u03D1',\n    'thinsp': '\\u2009',\n    'THORN': '\\u00DE',\n    'thorn': '\\u00FE',\n    'tilde': '\\u02DC',\n    'times': '\\u00D7',\n    'trade': '\\u2122',\n    'Uacute': '\\u00DA',\n    'uacute': '\\u00FA',\n    'uarr': '\\u2191',\n    'uArr': '\\u21D1',\n    'Ucirc': '\\u00DB',\n    'ucirc': '\\u00FB',\n    'Ugrave': '\\u00D9',\n    'ugrave': '\\u00F9',\n    'uml': '\\u00A8',\n    'upsih': '\\u03D2',\n    'Upsilon': '\\u03A5',\n    'upsilon': '\\u03C5',\n    'Uuml': '\\u00DC',\n    'uuml': '\\u00FC',\n    'weierp': '\\u2118',\n    'Xi': '\\u039E',\n    'xi': '\\u03BE',\n    'Yacute': '\\u00DD',\n    'yacute': '\\u00FD',\n    'yen': '\\u00A5',\n    'yuml': '\\u00FF',\n    'Yuml': '\\u0178',\n    'Zeta': '\\u0396',\n    'zeta': '\\u03B6',\n    'zwj': '\\u200D',\n    'zwnj': '\\u200C',\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlTagDefinition = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function HtmlTagDefinition(_a) {\n        var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, _c = _b.contentType, contentType = _c === void 0 ? TagContentType.PARSABLE_DATA : _c, _d = _b.closedByParent, closedByParent = _d === void 0 ? false : _d, _e = _b.isVoid, isVoid = _e === void 0 ? false : _e, _f = _b.ignoreFirstLf, ignoreFirstLf = _f === void 0 ? false : _f;\n        var _this = this;\n        this.closedByChildren = {};\n        this.closedByParent = false;\n        this.canSelfClose = false;\n        if (closedByChildren && closedByChildren.length > 0) {\n            closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\n        }\n        this.isVoid = isVoid;\n        this.closedByParent = closedByParent || isVoid;\n        if (requiredParents && requiredParents.length > 0) {\n            this.requiredParents = {};\n            // The first parent is the list is automatically when none of the listed parents are present\n            this.parentToAdd = requiredParents[0];\n            requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\n        }\n        this.implicitNamespacePrefix = implicitNamespacePrefix;\n        this.contentType = contentType;\n        this.ignoreFirstLf = ignoreFirstLf;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.requireExtraParent = function (currentParent) {\n        if (!this.requiredParents) {\n            return false;\n        }\n        if (!currentParent) {\n            return true;\n        }\n        var /** @type {?} */ lcParent = currentParent.toLowerCase();\n        var /** @type {?} */ isParentTemplate = lcParent === 'template' || currentParent === 'ng-template';\n        return !isParentTemplate && this.requiredParents[lcParent] != true;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.isClosedByChild = function (name) {\n        return this.isVoid || name.toLowerCase() in this.closedByChildren;\n    };\n    return HtmlTagDefinition;\n}());\n// see http://www.w3.org/TR/html51/syntax.html#optional-tags\n// This implementation does not fully conform to the HTML5 spec.\nvar TAG_DEFINITIONS = {\n    'base': new HtmlTagDefinition({ isVoid: true }),\n    'meta': new HtmlTagDefinition({ isVoid: true }),\n    'area': new HtmlTagDefinition({ isVoid: true }),\n    'embed': new HtmlTagDefinition({ isVoid: true }),\n    'link': new HtmlTagDefinition({ isVoid: true }),\n    'img': new HtmlTagDefinition({ isVoid: true }),\n    'input': new HtmlTagDefinition({ isVoid: true }),\n    'param': new HtmlTagDefinition({ isVoid: true }),\n    'hr': new HtmlTagDefinition({ isVoid: true }),\n    'br': new HtmlTagDefinition({ isVoid: true }),\n    'source': new HtmlTagDefinition({ isVoid: true }),\n    'track': new HtmlTagDefinition({ isVoid: true }),\n    'wbr': new HtmlTagDefinition({ isVoid: true }),\n    'p': new HtmlTagDefinition({\n        closedByChildren: [\n            'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset', 'footer', 'form',\n            'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr',\n            'main', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'\n        ],\n        closedByParent: true\n    }),\n    'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n    'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n    'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n    'tr': new HtmlTagDefinition({\n        closedByChildren: ['tr'],\n        requiredParents: ['tbody', 'tfoot', 'thead'],\n        closedByParent: true\n    }),\n    'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n    'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n    'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n    'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n    'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n    'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n    'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n    'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n    'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n    'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'style': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'script': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'title': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT }),\n    'textarea': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n};\nvar _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getHtmlTagDefinition(tagName) {\n    return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' +\n    '([-\\\\w]+)|' +\n    '(?:\\\\.([-\\\\w]+))|' +\n    // \"-\" should appear first in the regexp below as FF31 parses \"[.-\\w]\" as a range\n    '(?:\\\\[([-.\\\\w*]+)(?:=([\\\"\\']?)([^\\\\]\\\"\\']*)\\\\5)?\\\\])|' +\n    // \"[name=\"value\"]\",\n    // \"[name='value']\"\n    '(\\\\))|' +\n    '(\\\\s*,\\\\s*)', // \",\"\n'g');\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nvar CssSelector = (function () {\n    function CssSelector() {\n        this.element = null;\n        this.classNames = [];\n        this.attrs = [];\n        this.notSelectors = [];\n    }\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CssSelector.parse = function (selector) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ _addResult = function (res, cssSel) {\n            if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n                cssSel.attrs.length == 0) {\n                cssSel.element = '*';\n            }\n            res.push(cssSel);\n        };\n        var /** @type {?} */ cssSelector = new CssSelector();\n        var /** @type {?} */ match;\n        var /** @type {?} */ current = cssSelector;\n        var /** @type {?} */ inNot = false;\n        _SELECTOR_REGEXP.lastIndex = 0;\n        while (match = _SELECTOR_REGEXP.exec(selector)) {\n            if (match[1]) {\n                if (inNot) {\n                    throw new Error('Nesting :not is not allowed in a selector');\n                }\n                inNot = true;\n                current = new CssSelector();\n                cssSelector.notSelectors.push(current);\n            }\n            if (match[2]) {\n                current.setElement(match[2]);\n            }\n            if (match[3]) {\n                current.addClassName(match[3]);\n            }\n            if (match[4]) {\n                current.addAttribute(match[4], match[6]);\n            }\n            if (match[7]) {\n                inNot = false;\n                current = cssSelector;\n            }\n            if (match[8]) {\n                if (inNot) {\n                    throw new Error('Multiple selectors in :not are not supported');\n                }\n                _addResult(results, cssSelector);\n                cssSelector = current = new CssSelector();\n            }\n        }\n        _addResult(results, cssSelector);\n        return results;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.isElementSelector = function () {\n        return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n            this.notSelectors.length === 0;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.hasElementSelector = function () { return !!this.element; };\n    /**\n     * @param {?=} element\n     * @return {?}\n     */\n    CssSelector.prototype.setElement = function (element) {\n        if (element === void 0) { element = null; }\n        this.element = element;\n    };\n    /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    CssSelector.prototype.getMatchingElementTemplate = function () {\n        var /** @type {?} */ tagName = this.element || 'div';\n        var /** @type {?} */ classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\n        var /** @type {?} */ attrs = '';\n        for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n            var /** @type {?} */ attrName = this.attrs[i];\n            var /** @type {?} */ attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\n            attrs += \" \" + attrName + attrValue;\n        }\n        return getHtmlTagDefinition(tagName).isVoid ? \"<\" + tagName + classAttr + attrs + \"/>\" :\n            \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\n    };\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    CssSelector.prototype.addAttribute = function (name, value) {\n        if (value === void 0) { value = ''; }\n        this.attrs.push(name, value && value.toLowerCase() || '');\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    CssSelector.prototype.addClassName = function (name) { this.classNames.push(name.toLowerCase()); };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.toString = function () {\n        var /** @type {?} */ res = this.element || '';\n        if (this.classNames) {\n            this.classNames.forEach(function (klass) { return res += \".\" + klass; });\n        }\n        if (this.attrs) {\n            for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n                var /** @type {?} */ name = this.attrs[i];\n                var /** @type {?} */ value = this.attrs[i + 1];\n                res += \"[\" + name + (value ? '=' + value : '') + \"]\";\n            }\n        }\n        this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\n        return res;\n    };\n    return CssSelector;\n}());\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nvar SelectorMatcher = (function () {\n    function SelectorMatcher() {\n        this._elementMap = new Map();\n        this._elementPartialMap = new Map();\n        this._classMap = new Map();\n        this._classPartialMap = new Map();\n        this._attrValueMap = new Map();\n        this._attrValuePartialMap = new Map();\n        this._listContexts = [];\n    }\n    /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    SelectorMatcher.createNotMatcher = function (notSelectors) {\n        var /** @type {?} */ notMatcher = new SelectorMatcher();\n        notMatcher.addSelectables(notSelectors, null);\n        return notMatcher;\n    };\n    /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    SelectorMatcher.prototype.addSelectables = function (cssSelectors, callbackCtxt) {\n        var /** @type {?} */ listContext = null;\n        if (cssSelectors.length > 1) {\n            listContext = new SelectorListContext(cssSelectors);\n            this._listContexts.push(listContext);\n        }\n        for (var /** @type {?} */ i = 0; i < cssSelectors.length; i++) {\n            this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n        }\n    };\n    /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addSelectable = function (cssSelector, callbackCtxt, listContext) {\n        var /** @type {?} */ matcher = this;\n        var /** @type {?} */ element = cssSelector.element;\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        var /** @type {?} */ selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n        if (element) {\n            var /** @type {?} */ isTerminal = attrs.length === 0 && classNames.length === 0;\n            if (isTerminal) {\n                this._addTerminal(matcher._elementMap, element, selectable);\n            }\n            else {\n                matcher = this._addPartial(matcher._elementPartialMap, element);\n            }\n        }\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ isTerminal = attrs.length === 0 && i === classNames.length - 1;\n                var /** @type {?} */ className = classNames[i];\n                if (isTerminal) {\n                    this._addTerminal(matcher._classMap, className, selectable);\n                }\n                else {\n                    matcher = this._addPartial(matcher._classPartialMap, className);\n                }\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ isTerminal = i === attrs.length - 2;\n                var /** @type {?} */ name = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                if (isTerminal) {\n                    var /** @type {?} */ terminalMap = matcher._attrValueMap;\n                    var /** @type {?} */ terminalValuesMap = terminalMap.get(name);\n                    if (!terminalValuesMap) {\n                        terminalValuesMap = new Map();\n                        terminalMap.set(name, terminalValuesMap);\n                    }\n                    this._addTerminal(terminalValuesMap, value, selectable);\n                }\n                else {\n                    var /** @type {?} */ partialMap = matcher._attrValuePartialMap;\n                    var /** @type {?} */ partialValuesMap = partialMap.get(name);\n                    if (!partialValuesMap) {\n                        partialValuesMap = new Map();\n                        partialMap.set(name, partialValuesMap);\n                    }\n                    matcher = this._addPartial(partialValuesMap, value);\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addTerminal = function (map, name, selectable) {\n        var /** @type {?} */ terminalList = map.get(name);\n        if (!terminalList) {\n            terminalList = [];\n            map.set(name, terminalList);\n        }\n        terminalList.push(selectable);\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addPartial = function (map, name) {\n        var /** @type {?} */ matcher = map.get(name);\n        if (!matcher) {\n            matcher = new SelectorMatcher();\n            map.set(name, matcher);\n        }\n        return matcher;\n    };\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    SelectorMatcher.prototype.match = function (cssSelector, matchedCallback) {\n        var /** @type {?} */ result = false;\n        var /** @type {?} */ element = cssSelector.element;\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        for (var /** @type {?} */ i = 0; i < this._listContexts.length; i++) {\n            this._listContexts[i].alreadyMatched = false;\n        }\n        result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n        result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n            result;\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ className = classNames[i];\n                result =\n                    this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n                result =\n                    this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n                        result;\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ name = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                var /** @type {?} */ terminalValuesMap = this._attrValueMap.get(name);\n                if (value) {\n                    result =\n                        this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n                var /** @type {?} */ partialValuesMap = this._attrValuePartialMap.get(name);\n                if (value) {\n                    result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n            }\n        }\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchTerminal = function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ selectables = map.get(name) || [];\n        var /** @type {?} */ starSelectables = map.get('*');\n        if (starSelectables) {\n            selectables = selectables.concat(starSelectables);\n        }\n        if (selectables.length === 0) {\n            return false;\n        }\n        var /** @type {?} */ selectable;\n        var /** @type {?} */ result = false;\n        for (var /** @type {?} */ i = 0; i < selectables.length; i++) {\n            selectable = selectables[i];\n            result = selectable.finalize(cssSelector, matchedCallback) || result;\n        }\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchPartial = function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ nestedSelector = map.get(name);\n        if (!nestedSelector) {\n            return false;\n        }\n        // TODO(perf): get rid of recursion and measure again\n        // TODO(perf): don't pass the whole selector into the recursion,\n        // but only the not processed parts\n        return nestedSelector.match(cssSelector, matchedCallback);\n    };\n    return SelectorMatcher;\n}());\nvar SelectorListContext = (function () {\n    /**\n     * @param {?} selectors\n     */\n    function SelectorListContext(selectors) {\n        this.selectors = selectors;\n        this.alreadyMatched = false;\n    }\n    return SelectorListContext;\n}());\nvar SelectorContext = (function () {\n    /**\n     * @param {?} selector\n     * @param {?} cbContext\n     * @param {?} listContext\n     */\n    function SelectorContext(selector, cbContext, listContext) {\n        this.selector = selector;\n        this.cbContext = cbContext;\n        this.listContext = listContext;\n        this.notSelectors = selector.notSelectors;\n    }\n    /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    SelectorContext.prototype.finalize = function (cssSelector, callback) {\n        var /** @type {?} */ result = true;\n        if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n            var /** @type {?} */ notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n            result = !notMatcher.match(cssSelector, null);\n        }\n        if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n            if (this.listContext) {\n                this.listContext.alreadyMatched = true;\n            }\n            callback(this.selector, this.cbContext);\n        }\n        return result;\n    };\n    return SelectorContext;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar MODULE_SUFFIX = '';\nvar DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n/**\n * @param {?} input\n * @return {?}\n */\n/**\n * @param {?} input\n * @return {?}\n */\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return m[1].toUpperCase();\n    });\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtColon(input, defaultValues) {\n    return _splitAt(input, ':', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtPeriod(input, defaultValues) {\n    return _splitAt(input, '.', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} character\n * @param {?} defaultValues\n * @return {?}\n */\nfunction _splitAt(input, character, defaultValues) {\n    var /** @type {?} */ characterIndex = input.indexOf(character);\n    if (characterIndex == -1)\n        return defaultValues;\n    return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n}\n/**\n * @param {?} value\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nfunction visitValue(value, visitor, context) {\n    if (Array.isArray(value)) {\n        return visitor.visitArray(/** @type {?} */ (value), context);\n    }\n    if (isStrictStringMap(value)) {\n        return visitor.visitStringMap(/** @type {?} */ (value), context);\n    }\n    if (value == null || typeof value == 'string' || typeof value == 'number' ||\n        typeof value == 'boolean') {\n        return visitor.visitPrimitive(value, context);\n    }\n    return visitor.visitOther(value, context);\n}\nvar ValueTransformer = (function () {\n    function ValueTransformer() {\n    }\n    /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitArray = function (arr, context) {\n        var _this = this;\n        return arr.map(function (value) { return visitValue(value, _this, context); });\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitStringMap = function (map, context) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        Object.keys(map).forEach(function (key) { result[key] = visitValue(map[key], _this, context); });\n        return result;\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitPrimitive = function (value, context) { return value; };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitOther = function (value, context) { return value; };\n    return ValueTransformer;\n}());\nvar SyncAsyncResult = (function () {\n    /**\n     * @param {?} syncResult\n     * @param {?=} asyncResult\n     */\n    function SyncAsyncResult(syncResult, asyncResult) {\n        if (asyncResult === void 0) { asyncResult = null; }\n        this.syncResult = syncResult;\n        this.asyncResult = asyncResult;\n        if (!asyncResult) {\n            this.asyncResult = Promise.resolve(syncResult);\n        }\n    }\n    return SyncAsyncResult;\n}());\n/**\n * @param {?} msg\n * @return {?}\n */\nfunction syntaxError(msg) {\n    var /** @type {?} */ error = Error(msg);\n    ((error))[ERROR_SYNTAX_ERROR] = true;\n    return error;\n}\nvar ERROR_SYNTAX_ERROR = 'ngSyntaxError';\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isSyntaxError(error) {\n    return ((error))[ERROR_SYNTAX_ERROR];\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction escapeRegExp(s) {\n    return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\nvar STRING_MAP_PROTO = Object.getPrototypeOf({});\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isStrictStringMap(obj) {\n    return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction utf8Encode(str) {\n    var /** @type {?} */ encoded = '';\n    for (var /** @type {?} */ index = 0; index < str.length; index++) {\n        var /** @type {?} */ codePoint = str.charCodeAt(index);\n        // decode surrogate\n        // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        if (codePoint >= 0xd800 && codePoint <= 0xdbff && str.length > (index + 1)) {\n            var /** @type {?} */ low = str.charCodeAt(index + 1);\n            if (low >= 0xdc00 && low <= 0xdfff) {\n                index++;\n                codePoint = ((codePoint - 0xd800) << 10) + low - 0xdc00 + 0x10000;\n            }\n        }\n        if (codePoint <= 0x7f) {\n            encoded += String.fromCharCode(codePoint);\n        }\n        else if (codePoint <= 0x7ff) {\n            encoded += String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xc0, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0xffff) {\n            encoded += String.fromCharCode((codePoint >> 12) | 0xe0, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0x1fffff) {\n            encoded += String.fromCharCode(((codePoint >> 18) & 0x07) | 0xf0, ((codePoint >> 12) & 0x3f) | 0x80, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n    }\n    return encoded;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// group 0: \"[prop] or (event) or @trigger\"\n// group 1: \"prop\" from \"[prop]\"\n// group 2: \"event\" from \"(event)\"\n// group 3: \"@trigger\" from \"@trigger\"\nvar HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\nvar CompileAnimationEntryMetadata = (function () {\n    /**\n     * @param {?=} name\n     * @param {?=} definitions\n     */\n    function CompileAnimationEntryMetadata(name, definitions) {\n        if (name === void 0) { name = null; }\n        if (definitions === void 0) { definitions = null; }\n        this.name = name;\n        this.definitions = definitions;\n    }\n    return CompileAnimationEntryMetadata;\n}());\n/**\n * @abstract\n */\nvar CompileAnimationStateMetadata = (function () {\n    function CompileAnimationStateMetadata() {\n    }\n    return CompileAnimationStateMetadata;\n}());\nvar CompileAnimationStateDeclarationMetadata = (function (_super) {\n    __extends(CompileAnimationStateDeclarationMetadata, _super);\n    /**\n     * @param {?} stateNameExpr\n     * @param {?} styles\n     */\n    function CompileAnimationStateDeclarationMetadata(stateNameExpr, styles) {\n        var _this = _super.call(this) || this;\n        _this.stateNameExpr = stateNameExpr;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationStateDeclarationMetadata;\n}(CompileAnimationStateMetadata));\nvar CompileAnimationStateTransitionMetadata = (function (_super) {\n    __extends(CompileAnimationStateTransitionMetadata, _super);\n    /**\n     * @param {?} stateChangeExpr\n     * @param {?} steps\n     */\n    function CompileAnimationStateTransitionMetadata(stateChangeExpr, steps) {\n        var _this = _super.call(this) || this;\n        _this.stateChangeExpr = stateChangeExpr;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationStateTransitionMetadata;\n}(CompileAnimationStateMetadata));\n/**\n * @abstract\n */\nvar CompileAnimationMetadata = (function () {\n    function CompileAnimationMetadata() {\n    }\n    return CompileAnimationMetadata;\n}());\nvar CompileAnimationKeyframesSequenceMetadata = (function (_super) {\n    __extends(CompileAnimationKeyframesSequenceMetadata, _super);\n    /**\n     * @param {?=} steps\n     */\n    function CompileAnimationKeyframesSequenceMetadata(steps) {\n        if (steps === void 0) { steps = []; }\n        var _this = _super.call(this) || this;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationKeyframesSequenceMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationStyleMetadata = (function (_super) {\n    __extends(CompileAnimationStyleMetadata, _super);\n    /**\n     * @param {?} offset\n     * @param {?=} styles\n     */\n    function CompileAnimationStyleMetadata(offset, styles) {\n        if (styles === void 0) { styles = null; }\n        var _this = _super.call(this) || this;\n        _this.offset = offset;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationStyleMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationAnimateMetadata = (function (_super) {\n    __extends(CompileAnimationAnimateMetadata, _super);\n    /**\n     * @param {?=} timings\n     * @param {?=} styles\n     */\n    function CompileAnimationAnimateMetadata(timings, styles) {\n        if (timings === void 0) { timings = 0; }\n        if (styles === void 0) { styles = null; }\n        var _this = _super.call(this) || this;\n        _this.timings = timings;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationAnimateMetadata;\n}(CompileAnimationMetadata));\n/**\n * @abstract\n */\nvar CompileAnimationWithStepsMetadata = (function (_super) {\n    __extends(CompileAnimationWithStepsMetadata, _super);\n    /**\n     * @param {?=} steps\n     */\n    function CompileAnimationWithStepsMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        var _this = _super.call(this) || this;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationWithStepsMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationSequenceMetadata = (function (_super) {\n    __extends(CompileAnimationSequenceMetadata, _super);\n    /**\n     * @param {?=} steps\n     */\n    function CompileAnimationSequenceMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        return _super.call(this, steps) || this;\n    }\n    return CompileAnimationSequenceMetadata;\n}(CompileAnimationWithStepsMetadata));\nvar CompileAnimationGroupMetadata = (function (_super) {\n    __extends(CompileAnimationGroupMetadata, _super);\n    /**\n     * @param {?=} steps\n     */\n    function CompileAnimationGroupMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        return _super.call(this, steps) || this;\n    }\n    return CompileAnimationGroupMetadata;\n}(CompileAnimationWithStepsMetadata));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _sanitizeIdentifier(name) {\n    return name.replace(/\\W/g, '_');\n}\nvar _anonymousTypeIndex = 0;\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierName(compileIdentifier) {\n    if (!compileIdentifier || !compileIdentifier.reference) {\n        return null;\n    }\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.name;\n    }\n    if (ref['__anonymousType']) {\n        return ref['__anonymousType'];\n    }\n    var /** @type {?} */ identifier = _angular_core.ɵstringify(ref);\n    if (identifier.indexOf('(') >= 0) {\n        // case: anonymous functions!\n        identifier = \"anonymous_\" + _anonymousTypeIndex++;\n        ref['__anonymousType'] = identifier;\n    }\n    else {\n        identifier = _sanitizeIdentifier(identifier);\n    }\n    return identifier;\n}\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierModuleUrl(compileIdentifier) {\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.filePath;\n    }\n    return _angular_core.ɵreflector.importUri(ref);\n}\n/**\n * @param {?} compType\n * @param {?} embeddedTemplateIndex\n * @return {?}\n */\nfunction viewClassName(compType, embeddedTemplateIndex) {\n    return \"View_\" + identifierName({ reference: compType }) + \"_\" + embeddedTemplateIndex;\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction rendererTypeName(compType) {\n    return \"RenderType_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction hostViewClassName(compType) {\n    return \"HostView_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} dirType\n * @return {?}\n */\nfunction dirWrapperClassName(dirType) {\n    return \"Wrapper_\" + identifierName({ reference: dirType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction componentFactoryName(compType) {\n    return identifierName({ reference: compType }) + \"NgFactory\";\n}\nvar CompileSummaryKind = {};\nCompileSummaryKind.Pipe = 0;\nCompileSummaryKind.Directive = 1;\nCompileSummaryKind.NgModule = 2;\nCompileSummaryKind.Injectable = 3;\nCompileSummaryKind[CompileSummaryKind.Pipe] = \"Pipe\";\nCompileSummaryKind[CompileSummaryKind.Directive] = \"Directive\";\nCompileSummaryKind[CompileSummaryKind.NgModule] = \"NgModule\";\nCompileSummaryKind[CompileSummaryKind.Injectable] = \"Injectable\";\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenName(token) {\n    return token.value != null ? _sanitizeIdentifier(token.value) : identifierName(token.identifier);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenReference(token) {\n    if (token.identifier != null) {\n        return token.identifier.reference;\n    }\n    else {\n        return token.value;\n    }\n}\n/**\n * Metadata about a stylesheet\n */\nvar CompileStylesheetMetadata = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function CompileStylesheetMetadata(_a) {\n        var _b = _a === void 0 ? {} : _a, moduleUrl = _b.moduleUrl, styles = _b.styles, styleUrls = _b.styleUrls;\n        this.moduleUrl = moduleUrl;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n    }\n    return CompileStylesheetMetadata;\n}());\n/**\n * Metadata regarding compilation of a template.\n */\nvar CompileTemplateMetadata = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function CompileTemplateMetadata(_a) {\n        var _b = _a === void 0 ? {} : _a, encapsulation = _b.encapsulation, template = _b.template, templateUrl = _b.templateUrl, styles = _b.styles, styleUrls = _b.styleUrls, externalStylesheets = _b.externalStylesheets, animations = _b.animations, ngContentSelectors = _b.ngContentSelectors, interpolation = _b.interpolation, isInline = _b.isInline;\n        this.encapsulation = encapsulation;\n        this.template = template;\n        this.templateUrl = templateUrl;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n        this.externalStylesheets = _normalizeArray(externalStylesheets);\n        this.animations = animations ? flatten(animations) : [];\n        this.ngContentSelectors = ngContentSelectors || [];\n        if (interpolation && interpolation.length != 2) {\n            throw new Error(\"'interpolation' should have a start and an end symbol.\");\n        }\n        this.interpolation = interpolation;\n        this.isInline = isInline;\n    }\n    /**\n     * @return {?}\n     */\n    CompileTemplateMetadata.prototype.toSummary = function () {\n        return {\n            animations: this.animations.map(function (anim) { return anim.name; }),\n            ngContentSelectors: this.ngContentSelectors,\n            encapsulation: this.encapsulation,\n        };\n    };\n    return CompileTemplateMetadata;\n}());\n/**\n * Metadata regarding compilation of a directive.\n */\nvar CompileDirectiveMetadata = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function CompileDirectiveMetadata(_a) {\n        var _b = _a === void 0 ? {} : _a, isHost = _b.isHost, type = _b.type, isComponent = _b.isComponent, selector = _b.selector, exportAs = _b.exportAs, changeDetection = _b.changeDetection, inputs = _b.inputs, outputs = _b.outputs, hostListeners = _b.hostListeners, hostProperties = _b.hostProperties, hostAttributes = _b.hostAttributes, providers = _b.providers, viewProviders = _b.viewProviders, queries = _b.queries, viewQueries = _b.viewQueries, entryComponents = _b.entryComponents, template = _b.template, componentViewType = _b.componentViewType, rendererType = _b.rendererType, componentFactory = _b.componentFactory;\n        this.isHost = !!isHost;\n        this.type = type;\n        this.isComponent = isComponent;\n        this.selector = selector;\n        this.exportAs = exportAs;\n        this.changeDetection = changeDetection;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.hostListeners = hostListeners;\n        this.hostProperties = hostProperties;\n        this.hostAttributes = hostAttributes;\n        this.providers = _normalizeArray(providers);\n        this.viewProviders = _normalizeArray(viewProviders);\n        this.queries = _normalizeArray(queries);\n        this.viewQueries = _normalizeArray(viewQueries);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.template = template;\n        this.componentViewType = componentViewType;\n        this.rendererType = rendererType;\n        this.componentFactory = componentFactory;\n    }\n    /**\n     * @param {?=} __0\n     * @return {?}\n     */\n    CompileDirectiveMetadata.create = function (_a) {\n        var _b = _a === void 0 ? {} : _a, isHost = _b.isHost, type = _b.type, isComponent = _b.isComponent, selector = _b.selector, exportAs = _b.exportAs, changeDetection = _b.changeDetection, inputs = _b.inputs, outputs = _b.outputs, host = _b.host, providers = _b.providers, viewProviders = _b.viewProviders, queries = _b.queries, viewQueries = _b.viewQueries, entryComponents = _b.entryComponents, template = _b.template, componentViewType = _b.componentViewType, rendererType = _b.rendererType, componentFactory = _b.componentFactory;\n        var /** @type {?} */ hostListeners = {};\n        var /** @type {?} */ hostProperties = {};\n        var /** @type {?} */ hostAttributes = {};\n        if (host != null) {\n            Object.keys(host).forEach(function (key) {\n                var /** @type {?} */ value = host[key];\n                var /** @type {?} */ matches = key.match(HOST_REG_EXP);\n                if (matches === null) {\n                    hostAttributes[key] = value;\n                }\n                else if (matches[1] != null) {\n                    hostProperties[matches[1]] = value;\n                }\n                else if (matches[2] != null) {\n                    hostListeners[matches[2]] = value;\n                }\n            });\n        }\n        var /** @type {?} */ inputsMap = {};\n        if (inputs != null) {\n            inputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                inputsMap[parts[0]] = parts[1];\n            });\n        }\n        var /** @type {?} */ outputsMap = {};\n        if (outputs != null) {\n            outputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                outputsMap[parts[0]] = parts[1];\n            });\n        }\n        return new CompileDirectiveMetadata({\n            isHost: isHost,\n            type: type,\n            isComponent: !!isComponent, selector: selector, exportAs: exportAs, changeDetection: changeDetection,\n            inputs: inputsMap,\n            outputs: outputsMap,\n            hostListeners: hostListeners,\n            hostProperties: hostProperties,\n            hostAttributes: hostAttributes,\n            providers: providers,\n            viewProviders: viewProviders,\n            queries: queries,\n            viewQueries: viewQueries,\n            entryComponents: entryComponents,\n            template: template,\n            componentViewType: componentViewType,\n            rendererType: rendererType,\n            componentFactory: componentFactory,\n        });\n    };\n    /**\n     * @return {?}\n     */\n    CompileDirectiveMetadata.prototype.toSummary = function () {\n        return {\n            summaryKind: CompileSummaryKind.Directive,\n            type: this.type,\n            isComponent: this.isComponent,\n            selector: this.selector,\n            exportAs: this.exportAs,\n            inputs: this.inputs,\n            outputs: this.outputs,\n            hostListeners: this.hostListeners,\n            hostProperties: this.hostProperties,\n            hostAttributes: this.hostAttributes,\n            providers: this.providers,\n            viewProviders: this.viewProviders,\n            queries: this.queries,\n            viewQueries: this.viewQueries,\n            entryComponents: this.entryComponents,\n            changeDetection: this.changeDetection,\n            template: this.template && this.template.toSummary(),\n            componentViewType: this.componentViewType,\n            rendererType: this.rendererType,\n            componentFactory: this.componentFactory\n        };\n    };\n    return CompileDirectiveMetadata;\n}());\n/**\n * Construct {\\@link CompileDirectiveMetadata} from {\\@link ComponentTypeMetadata} and a selector.\n * @param {?} hostTypeReference\n * @param {?} compMeta\n * @param {?} hostViewType\n * @return {?}\n */\nfunction createHostComponentMeta(hostTypeReference, compMeta, hostViewType) {\n    var /** @type {?} */ template = CssSelector.parse(compMeta.selector)[0].getMatchingElementTemplate();\n    return CompileDirectiveMetadata.create({\n        isHost: true,\n        type: { reference: hostTypeReference, diDeps: [], lifecycleHooks: [] },\n        template: new CompileTemplateMetadata({\n            encapsulation: _angular_core.ViewEncapsulation.None,\n            template: template,\n            templateUrl: '',\n            styles: [],\n            styleUrls: [],\n            ngContentSelectors: [],\n            animations: [],\n            isInline: true,\n        }),\n        changeDetection: _angular_core.ChangeDetectionStrategy.Default,\n        inputs: [],\n        outputs: [],\n        host: {},\n        isComponent: true,\n        selector: '*',\n        providers: [],\n        viewProviders: [],\n        queries: [],\n        viewQueries: [],\n        componentViewType: hostViewType,\n        rendererType: { id: '__Host__', encapsulation: _angular_core.ViewEncapsulation.None, styles: [], data: {} }\n    });\n}\nvar CompilePipeMetadata = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function CompilePipeMetadata(_a) {\n        var _b = _a === void 0 ? {} : _a, type = _b.type, name = _b.name, pure = _b.pure;\n        this.type = type;\n        this.name = name;\n        this.pure = !!pure;\n    }\n    /**\n     * @return {?}\n     */\n    CompilePipeMetadata.prototype.toSummary = function () {\n        return {\n            summaryKind: CompileSummaryKind.Pipe,\n            type: this.type,\n            name: this.name,\n            pure: this.pure\n        };\n    };\n    return CompilePipeMetadata;\n}());\n/**\n * Metadata regarding compilation of a module.\n */\nvar CompileNgModuleMetadata = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function CompileNgModuleMetadata(_a) {\n        var _b = _a === void 0 ? {} : _a, type = _b.type, providers = _b.providers, declaredDirectives = _b.declaredDirectives, exportedDirectives = _b.exportedDirectives, declaredPipes = _b.declaredPipes, exportedPipes = _b.exportedPipes, entryComponents = _b.entryComponents, bootstrapComponents = _b.bootstrapComponents, importedModules = _b.importedModules, exportedModules = _b.exportedModules, schemas = _b.schemas, transitiveModule = _b.transitiveModule, id = _b.id;\n        this.type = type;\n        this.declaredDirectives = _normalizeArray(declaredDirectives);\n        this.exportedDirectives = _normalizeArray(exportedDirectives);\n        this.declaredPipes = _normalizeArray(declaredPipes);\n        this.exportedPipes = _normalizeArray(exportedPipes);\n        this.providers = _normalizeArray(providers);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n        this.importedModules = _normalizeArray(importedModules);\n        this.exportedModules = _normalizeArray(exportedModules);\n        this.schemas = _normalizeArray(schemas);\n        this.id = id;\n        this.transitiveModule = transitiveModule;\n    }\n    /**\n     * @return {?}\n     */\n    CompileNgModuleMetadata.prototype.toSummary = function () {\n        return {\n            summaryKind: CompileSummaryKind.NgModule,\n            type: this.type,\n            entryComponents: this.transitiveModule.entryComponents,\n            providers: this.transitiveModule.providers,\n            modules: this.transitiveModule.modules,\n            exportedDirectives: this.transitiveModule.exportedDirectives,\n            exportedPipes: this.transitiveModule.exportedPipes\n        };\n    };\n    return CompileNgModuleMetadata;\n}());\nvar TransitiveCompileNgModuleMetadata = (function () {\n    function TransitiveCompileNgModuleMetadata() {\n        this.directivesSet = new Set();\n        this.directives = [];\n        this.exportedDirectivesSet = new Set();\n        this.exportedDirectives = [];\n        this.pipesSet = new Set();\n        this.pipes = [];\n        this.exportedPipesSet = new Set();\n        this.exportedPipes = [];\n        this.modulesSet = new Set();\n        this.modules = [];\n        this.entryComponentsSet = new Set();\n        this.entryComponents = [];\n        this.providers = [];\n    }\n    /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addProvider = function (provider, module) {\n        this.providers.push({ provider: provider, module: module });\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addDirective = function (id) {\n        if (!this.directivesSet.has(id.reference)) {\n            this.directivesSet.add(id.reference);\n            this.directives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedDirective = function (id) {\n        if (!this.exportedDirectivesSet.has(id.reference)) {\n            this.exportedDirectivesSet.add(id.reference);\n            this.exportedDirectives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addPipe = function (id) {\n        if (!this.pipesSet.has(id.reference)) {\n            this.pipesSet.add(id.reference);\n            this.pipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedPipe = function (id) {\n        if (!this.exportedPipesSet.has(id.reference)) {\n            this.exportedPipesSet.add(id.reference);\n            this.exportedPipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addModule = function (id) {\n        if (!this.modulesSet.has(id.reference)) {\n            this.modulesSet.add(id.reference);\n            this.modules.push(id);\n        }\n    };\n    /**\n     * @param {?} ec\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addEntryComponent = function (ec) {\n        if (!this.entryComponentsSet.has(ec.componentType)) {\n            this.entryComponentsSet.add(ec.componentType);\n            this.entryComponents.push(ec);\n        }\n    };\n    return TransitiveCompileNgModuleMetadata;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _normalizeArray(obj) {\n    return obj || [];\n}\nvar ProviderMeta = (function () {\n    /**\n     * @param {?} token\n     * @param {?} __1\n     */\n    function ProviderMeta(token, _a) {\n        var useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n        this.token = token;\n        this.useClass = useClass;\n        this.useValue = useValue;\n        this.useExisting = useExisting;\n        this.useFactory = useFactory;\n        this.dependencies = deps;\n        this.multi = !!multi;\n    }\n    return ProviderMeta;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n        return ((flat)).concat(flatItem);\n    }, []);\n}\n/**\n * @param {?} url\n * @return {?}\n */\nfunction sourceUrl(url) {\n    // Note: We need 3 \"/\" so that ng shows up as a separate domain\n    // in the chrome dev tools.\n    return url.replace(/(\\w+:\\/\\/[\\w:-]+)?(\\/+)?/, 'ng:///');\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @param {?} templateMeta\n * @return {?}\n */\nfunction templateSourceUrl(ngModuleType, compMeta, templateMeta) {\n    var /** @type {?} */ url;\n    if (templateMeta.isInline) {\n        if (compMeta.type.reference instanceof StaticSymbol) {\n            // Note: a .ts file might contain multiple components with inline templates,\n            // so we need to give them unique urls, as these will be used for sourcemaps.\n            url = compMeta.type.reference.filePath + \".\" + compMeta.type.reference.name + \".html\";\n        }\n        else {\n            url = identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".html\";\n        }\n    }\n    else {\n        url = templateMeta.templateUrl;\n    }\n    // always prepend ng:// to make angular resources easy to find and not clobber\n    // user resources.\n    return sourceUrl(url);\n}\n/**\n * @param {?} meta\n * @param {?} id\n * @return {?}\n */\nfunction sharedStylesheetJitUrl(meta, id) {\n    var /** @type {?} */ pathParts = meta.moduleUrl.split(/\\/\\\\/g);\n    var /** @type {?} */ baseName = pathParts[pathParts.length - 1];\n    return sourceUrl(\"css/\" + id + baseName + \".ngstyle.js\");\n}\n/**\n * @param {?} moduleMeta\n * @return {?}\n */\nfunction ngModuleJitUrl(moduleMeta) {\n    return sourceUrl(identifierName(moduleMeta.type) + \"/module.ngfactory.js\");\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @return {?}\n */\nfunction templateJitUrl(ngModuleType, compMeta) {\n    return sourceUrl(identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".ngfactory.js\");\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CompilerConfig = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function CompilerConfig(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.defaultEncapsulation, defaultEncapsulation = _c === void 0 ? _angular_core.ViewEncapsulation.Emulated : _c, _d = _b.useJit, useJit = _d === void 0 ? true : _d, missingTranslation = _b.missingTranslation, enableLegacyTemplate = _b.enableLegacyTemplate;\n        this.defaultEncapsulation = defaultEncapsulation;\n        this.useJit = useJit;\n        this.missingTranslation = missingTranslation;\n        this.enableLegacyTemplate = enableLegacyTemplate !== false;\n    }\n    return CompilerConfig;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParserError = (function () {\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     */\n    function ParserError(message, input, errLocation, ctxLocation) {\n        this.input = input;\n        this.errLocation = errLocation;\n        this.ctxLocation = ctxLocation;\n        this.message = \"Parser Error: \" + message + \" \" + errLocation + \" [\" + input + \"] in \" + ctxLocation;\n    }\n    return ParserError;\n}());\nvar ParseSpan = (function () {\n    /**\n     * @param {?} start\n     * @param {?} end\n     */\n    function ParseSpan(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    return ParseSpan;\n}());\nvar AST = (function () {\n    /**\n     * @param {?} span\n     */\n    function AST(span) {\n        this.span = span;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    AST.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return null;\n    };\n    /**\n     * @return {?}\n     */\n    AST.prototype.toString = function () { return 'AST'; };\n    return AST;\n}());\n/**\n * Represents a quoted expression of the form:\n *\n * quote = prefix `:` uninterpretedExpression\n * prefix = identifier\n * uninterpretedExpression = arbitrary string\n *\n * A quoted expression is meant to be pre-processed by an AST transformer that\n * converts it into another AST that no longer contains quoted expressions.\n * It is meant to allow third-party developers to extend Angular template\n * expression language. The `uninterpretedExpression` part of the quote is\n * therefore not interpreted by the Angular's own expression parser.\n */\nvar Quote = (function (_super) {\n    __extends(Quote, _super);\n    /**\n     * @param {?} span\n     * @param {?} prefix\n     * @param {?} uninterpretedExpression\n     * @param {?} location\n     */\n    function Quote(span, prefix, uninterpretedExpression, location) {\n        var _this = _super.call(this, span) || this;\n        _this.prefix = prefix;\n        _this.uninterpretedExpression = uninterpretedExpression;\n        _this.location = location;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Quote.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitQuote(this, context);\n    };\n    /**\n     * @return {?}\n     */\n    Quote.prototype.toString = function () { return 'Quote'; };\n    return Quote;\n}(AST));\nvar EmptyExpr = (function (_super) {\n    __extends(EmptyExpr, _super);\n    function EmptyExpr() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    EmptyExpr.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        // do nothing\n    };\n    return EmptyExpr;\n}(AST));\nvar ImplicitReceiver = (function (_super) {\n    __extends(ImplicitReceiver, _super);\n    function ImplicitReceiver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ImplicitReceiver.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitImplicitReceiver(this, context);\n    };\n    return ImplicitReceiver;\n}(AST));\n/**\n * Multiple expressions separated by a semicolon.\n */\nvar Chain = (function (_super) {\n    __extends(Chain, _super);\n    /**\n     * @param {?} span\n     * @param {?} expressions\n     */\n    function Chain(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Chain.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitChain(this, context);\n    };\n    return Chain;\n}(AST));\nvar Conditional = (function (_super) {\n    __extends(Conditional, _super);\n    /**\n     * @param {?} span\n     * @param {?} condition\n     * @param {?} trueExp\n     * @param {?} falseExp\n     */\n    function Conditional(span, condition, trueExp, falseExp) {\n        var _this = _super.call(this, span) || this;\n        _this.condition = condition;\n        _this.trueExp = trueExp;\n        _this.falseExp = falseExp;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Conditional.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitConditional(this, context);\n    };\n    return Conditional;\n}(AST));\nvar PropertyRead = (function (_super) {\n    __extends(PropertyRead, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     */\n    function PropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyRead.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyRead(this, context);\n    };\n    return PropertyRead;\n}(AST));\nvar PropertyWrite = (function (_super) {\n    __extends(PropertyWrite, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} value\n     */\n    function PropertyWrite(span, receiver, name, value) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyWrite.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyWrite(this, context);\n    };\n    return PropertyWrite;\n}(AST));\nvar SafePropertyRead = (function (_super) {\n    __extends(SafePropertyRead, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     */\n    function SafePropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafePropertyRead.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafePropertyRead(this, context);\n    };\n    return SafePropertyRead;\n}(AST));\nvar KeyedRead = (function (_super) {\n    __extends(KeyedRead, _super);\n    /**\n     * @param {?} span\n     * @param {?} obj\n     * @param {?} key\n     */\n    function KeyedRead(span, obj, key) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedRead.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedRead(this, context);\n    };\n    return KeyedRead;\n}(AST));\nvar KeyedWrite = (function (_super) {\n    __extends(KeyedWrite, _super);\n    /**\n     * @param {?} span\n     * @param {?} obj\n     * @param {?} key\n     * @param {?} value\n     */\n    function KeyedWrite(span, obj, key, value) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedWrite.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedWrite(this, context);\n    };\n    return KeyedWrite;\n}(AST));\nvar BindingPipe = (function (_super) {\n    __extends(BindingPipe, _super);\n    /**\n     * @param {?} span\n     * @param {?} exp\n     * @param {?} name\n     * @param {?} args\n     */\n    function BindingPipe(span, exp, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.exp = exp;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    BindingPipe.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPipe(this, context);\n    };\n    return BindingPipe;\n}(AST));\nvar LiteralPrimitive = (function (_super) {\n    __extends(LiteralPrimitive, _super);\n    /**\n     * @param {?} span\n     * @param {?} value\n     */\n    function LiteralPrimitive(span, value) {\n        var _this = _super.call(this, span) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralPrimitive.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralPrimitive(this, context);\n    };\n    return LiteralPrimitive;\n}(AST));\nvar LiteralArray = (function (_super) {\n    __extends(LiteralArray, _super);\n    /**\n     * @param {?} span\n     * @param {?} expressions\n     */\n    function LiteralArray(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralArray.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralArray(this, context);\n    };\n    return LiteralArray;\n}(AST));\nvar LiteralMap = (function (_super) {\n    __extends(LiteralMap, _super);\n    /**\n     * @param {?} span\n     * @param {?} keys\n     * @param {?} values\n     */\n    function LiteralMap(span, keys, values) {\n        var _this = _super.call(this, span) || this;\n        _this.keys = keys;\n        _this.values = values;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralMap.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralMap(this, context);\n    };\n    return LiteralMap;\n}(AST));\nvar Interpolation = (function (_super) {\n    __extends(Interpolation, _super);\n    /**\n     * @param {?} span\n     * @param {?} strings\n     * @param {?} expressions\n     */\n    function Interpolation(span, strings, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.strings = strings;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Interpolation.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitInterpolation(this, context);\n    };\n    return Interpolation;\n}(AST));\nvar Binary = (function (_super) {\n    __extends(Binary, _super);\n    /**\n     * @param {?} span\n     * @param {?} operation\n     * @param {?} left\n     * @param {?} right\n     */\n    function Binary(span, operation, left, right) {\n        var _this = _super.call(this, span) || this;\n        _this.operation = operation;\n        _this.left = left;\n        _this.right = right;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Binary.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitBinary(this, context);\n    };\n    return Binary;\n}(AST));\nvar PrefixNot = (function (_super) {\n    __extends(PrefixNot, _super);\n    /**\n     * @param {?} span\n     * @param {?} expression\n     */\n    function PrefixNot(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PrefixNot.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPrefixNot(this, context);\n    };\n    return PrefixNot;\n}(AST));\nvar MethodCall = (function (_super) {\n    __extends(MethodCall, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} args\n     */\n    function MethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    MethodCall.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitMethodCall(this, context);\n    };\n    return MethodCall;\n}(AST));\nvar SafeMethodCall = (function (_super) {\n    __extends(SafeMethodCall, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} args\n     */\n    function SafeMethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafeMethodCall.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafeMethodCall(this, context);\n    };\n    return SafeMethodCall;\n}(AST));\nvar FunctionCall = (function (_super) {\n    __extends(FunctionCall, _super);\n    /**\n     * @param {?} span\n     * @param {?} target\n     * @param {?} args\n     */\n    function FunctionCall(span, target, args) {\n        var _this = _super.call(this, span) || this;\n        _this.target = target;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    FunctionCall.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitFunctionCall(this, context);\n    };\n    return FunctionCall;\n}(AST));\nvar ASTWithSource = (function (_super) {\n    __extends(ASTWithSource, _super);\n    /**\n     * @param {?} ast\n     * @param {?} source\n     * @param {?} location\n     * @param {?} errors\n     */\n    function ASTWithSource(ast, source, location, errors) {\n        var _this = _super.call(this, new ParseSpan(0, source == null ? 0 : source.length)) || this;\n        _this.ast = ast;\n        _this.source = source;\n        _this.location = location;\n        _this.errors = errors;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ASTWithSource.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return this.ast.visit(visitor, context);\n    };\n    /**\n     * @return {?}\n     */\n    ASTWithSource.prototype.toString = function () { return this.source + \" in \" + this.location; };\n    return ASTWithSource;\n}(AST));\nvar TemplateBinding = (function () {\n    /**\n     * @param {?} span\n     * @param {?} key\n     * @param {?} keyIsVar\n     * @param {?} name\n     * @param {?} expression\n     */\n    function TemplateBinding(span, key, keyIsVar, name, expression) {\n        this.span = span;\n        this.key = key;\n        this.keyIsVar = keyIsVar;\n        this.name = name;\n        this.expression = expression;\n    }\n    return TemplateBinding;\n}());\nvar RecursiveAstVisitor = (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinary = function (ast, context) {\n        ast.left.visit(this);\n        ast.right.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitChain = function (ast, context) { return this.visitAll(ast.expressions, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditional = function (ast, context) {\n        ast.condition.visit(this);\n        ast.trueExp.visit(this);\n        ast.falseExp.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPipe = function (ast, context) {\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionCall = function (ast, context) {\n        ast.target.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitImplicitReceiver = function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInterpolation = function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedRead = function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedWrite = function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArray = function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMap = function (ast, context) { return this.visitAll(ast.values, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralPrimitive = function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMethodCall = function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPrefixNot = function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyRead = function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyWrite = function (ast, context) {\n        ast.receiver.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafePropertyRead = function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafeMethodCall = function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAll = function (asts, context) {\n        var _this = this;\n        asts.forEach(function (ast) { return ast.visit(_this, context); });\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitQuote = function (ast, context) { return null; };\n    return RecursiveAstVisitor;\n}());\nvar AstTransformer = (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitImplicitReceiver = function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInterpolation = function (ast, context) {\n        return new Interpolation(ast.span, ast.strings, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralPrimitive = function (ast, context) {\n        return new LiteralPrimitive(ast.span, ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyRead = function (ast, context) {\n        return new PropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyWrite = function (ast, context) {\n        return new PropertyWrite(ast.span, ast.receiver.visit(this), ast.name, ast.value.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafePropertyRead = function (ast, context) {\n        return new SafePropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitMethodCall = function (ast, context) {\n        return new MethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafeMethodCall = function (ast, context) {\n        return new SafeMethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionCall = function (ast, context) {\n        return new FunctionCall(ast.span, ast.target.visit(this), this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArray = function (ast, context) {\n        return new LiteralArray(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMap = function (ast, context) {\n        return new LiteralMap(ast.span, ast.keys, this.visitAll(ast.values));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinary = function (ast, context) {\n        return new Binary(ast.span, ast.operation, ast.left.visit(this), ast.right.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPrefixNot = function (ast, context) {\n        return new PrefixNot(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditional = function (ast, context) {\n        return new Conditional(ast.span, ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPipe = function (ast, context) {\n        return new BindingPipe(ast.span, ast.exp.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedRead = function (ast, context) {\n        return new KeyedRead(ast.span, ast.obj.visit(this), ast.key.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedWrite = function (ast, context) {\n        return new KeyedWrite(ast.span, ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));\n    };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAll = function (asts) {\n        var /** @type {?} */ res = new Array(asts.length);\n        for (var /** @type {?} */ i = 0; i < asts.length; ++i) {\n            res[i] = asts[i].visit(this);\n        }\n        return res;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitChain = function (ast, context) {\n        return new Chain(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitQuote = function (ast, context) {\n        return new Quote(ast.span, ast.prefix, ast.uninterpretedExpression, ast.location);\n    };\n    return AstTransformer;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar $EOF = 0;\nvar $TAB = 9;\nvar $LF = 10;\nvar $VTAB = 11;\nvar $FF = 12;\nvar $CR = 13;\nvar $SPACE = 32;\nvar $BANG = 33;\nvar $DQ = 34;\nvar $HASH = 35;\nvar $$ = 36;\nvar $PERCENT = 37;\nvar $AMPERSAND = 38;\nvar $SQ = 39;\nvar $LPAREN = 40;\nvar $RPAREN = 41;\nvar $STAR = 42;\nvar $PLUS = 43;\nvar $COMMA = 44;\nvar $MINUS = 45;\nvar $PERIOD = 46;\nvar $SLASH = 47;\nvar $COLON = 58;\nvar $SEMICOLON = 59;\nvar $LT = 60;\nvar $EQ = 61;\nvar $GT = 62;\nvar $QUESTION = 63;\nvar $0 = 48;\nvar $9 = 57;\nvar $A = 65;\nvar $E = 69;\nvar $F = 70;\nvar $X = 88;\nvar $Z = 90;\nvar $LBRACKET = 91;\nvar $BACKSLASH = 92;\nvar $RBRACKET = 93;\nvar $CARET = 94;\nvar $_ = 95;\nvar $a = 97;\nvar $e = 101;\nvar $f = 102;\nvar $n = 110;\nvar $r = 114;\nvar $t = 116;\nvar $u = 117;\nvar $v = 118;\nvar $x = 120;\nvar $z = 122;\nvar $LBRACE = 123;\nvar $BAR = 124;\nvar $RBRACE = 125;\nvar $NBSP = 160;\nvar $BT = 96;\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isWhitespace(code) {\n    return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigit(code) {\n    return $0 <= code && code <= $9;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiLetter(code) {\n    return code >= $a && code <= $z || code >= $A && code <= $Z;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiHexDigit(code) {\n    return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n}\n/**\n * A replacement for \\@Injectable to be used in the compiler, so that\n * we don't try to evaluate the metadata in the compiler during AoT.\n * This decorator is enough to make the compiler work with the ReflectiveInjector though.\n * \\@Annotation\n * @return {?}\n */\nfunction CompilerInjectable() {\n    return function (x) { return x; };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertArrayOfStrings(identifier, value) {\n    if (!_angular_core.isDevMode() || value == null) {\n        return;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n    }\n    for (var /** @type {?} */ i = 0; i < value.length; i += 1) {\n        if (typeof value[i] !== 'string') {\n            throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n        }\n    }\n}\nvar INTERPOLATION_BLACKLIST_REGEXPS = [\n    /^\\s*$/,\n    /[<>]/,\n    /^[{}]$/,\n    /&(#|[a-z])/i,\n    /^\\/\\//,\n];\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertInterpolationSymbols(identifier, value) {\n    if (value != null && !(Array.isArray(value) && value.length == 2)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array, [start, end].\");\n    }\n    else if (_angular_core.isDevMode() && value != null) {\n        var /** @type {?} */ start_1 = (value[0]);\n        var /** @type {?} */ end_1 = (value[1]);\n        // black list checking\n        INTERPOLATION_BLACKLIST_REGEXPS.forEach(function (regexp) {\n            if (regexp.test(start_1) || regexp.test(end_1)) {\n                throw new Error(\"['\" + start_1 + \"', '\" + end_1 + \"'] contains unusable interpolation symbol.\");\n            }\n        });\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar InterpolationConfig = (function () {\n    /**\n     * @param {?} start\n     * @param {?} end\n     */\n    function InterpolationConfig(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    /**\n     * @param {?} markers\n     * @return {?}\n     */\n    InterpolationConfig.fromArray = function (markers) {\n        if (!markers) {\n            return DEFAULT_INTERPOLATION_CONFIG;\n        }\n        assertInterpolationSymbols('interpolation', markers);\n        return new InterpolationConfig(markers[0], markers[1]);\n    };\n    \n    return InterpolationConfig;\n}());\nvar DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TokenType = {};\nTokenType.Character = 0;\nTokenType.Identifier = 1;\nTokenType.Keyword = 2;\nTokenType.String = 3;\nTokenType.Operator = 4;\nTokenType.Number = 5;\nTokenType.Error = 6;\nTokenType[TokenType.Character] = \"Character\";\nTokenType[TokenType.Identifier] = \"Identifier\";\nTokenType[TokenType.Keyword] = \"Keyword\";\nTokenType[TokenType.String] = \"String\";\nTokenType[TokenType.Operator] = \"Operator\";\nTokenType[TokenType.Number] = \"Number\";\nTokenType[TokenType.Error] = \"Error\";\nvar KEYWORDS = ['var', 'let', 'as', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\nvar Lexer = (function () {\n    function Lexer() {\n    }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    Lexer.prototype.tokenize = function (text) {\n        var /** @type {?} */ scanner = new _Scanner(text);\n        var /** @type {?} */ tokens = [];\n        var /** @type {?} */ token = scanner.scanToken();\n        while (token != null) {\n            tokens.push(token);\n            token = scanner.scanToken();\n        }\n        return tokens;\n    };\n    return Lexer;\n}());\nLexer.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nLexer.ctorParameters = function () { return []; };\nvar Token = (function () {\n    /**\n     * @param {?} index\n     * @param {?} type\n     * @param {?} numValue\n     * @param {?} strValue\n     */\n    function Token(index, type, numValue, strValue) {\n        this.index = index;\n        this.type = type;\n        this.numValue = numValue;\n        this.strValue = strValue;\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    Token.prototype.isCharacter = function (code) {\n        return this.type == TokenType.Character && this.numValue == code;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isNumber = function () { return this.type == TokenType.Number; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isString = function () { return this.type == TokenType.String; };\n    /**\n     * @param {?} operater\n     * @return {?}\n     */\n    Token.prototype.isOperator = function (operater) {\n        return this.type == TokenType.Operator && this.strValue == operater;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isIdentifier = function () { return this.type == TokenType.Identifier; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeyword = function () { return this.type == TokenType.Keyword; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordLet = function () { return this.type == TokenType.Keyword && this.strValue == 'let'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordAs = function () { return this.type == TokenType.Keyword && this.strValue == 'as'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordNull = function () { return this.type == TokenType.Keyword && this.strValue == 'null'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordUndefined = function () {\n        return this.type == TokenType.Keyword && this.strValue == 'undefined';\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordTrue = function () { return this.type == TokenType.Keyword && this.strValue == 'true'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordFalse = function () { return this.type == TokenType.Keyword && this.strValue == 'false'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordThis = function () { return this.type == TokenType.Keyword && this.strValue == 'this'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isError = function () { return this.type == TokenType.Error; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toNumber = function () { return this.type == TokenType.Number ? this.numValue : -1; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toString = function () {\n        switch (this.type) {\n            case TokenType.Character:\n            case TokenType.Identifier:\n            case TokenType.Keyword:\n            case TokenType.Operator:\n            case TokenType.String:\n            case TokenType.Error:\n                return this.strValue;\n            case TokenType.Number:\n                return this.numValue.toString();\n            default:\n                return null;\n        }\n    };\n    return Token;\n}());\n/**\n * @param {?} index\n * @param {?} code\n * @return {?}\n */\nfunction newCharacterToken(index, code) {\n    return new Token(index, TokenType.Character, code, String.fromCharCode(code));\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newIdentifierToken(index, text) {\n    return new Token(index, TokenType.Identifier, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newKeywordToken(index, text) {\n    return new Token(index, TokenType.Keyword, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newOperatorToken(index, text) {\n    return new Token(index, TokenType.Operator, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newStringToken(index, text) {\n    return new Token(index, TokenType.String, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} n\n * @return {?}\n */\nfunction newNumberToken(index, n) {\n    return new Token(index, TokenType.Number, n, '');\n}\n/**\n * @param {?} index\n * @param {?} message\n * @return {?}\n */\nfunction newErrorToken(index, message) {\n    return new Token(index, TokenType.Error, 0, message);\n}\nvar EOF = new Token(-1, TokenType.Character, 0, '');\nvar _Scanner = (function () {\n    /**\n     * @param {?} input\n     */\n    function _Scanner(input) {\n        this.input = input;\n        this.peek = 0;\n        this.index = -1;\n        this.length = input.length;\n        this.advance();\n    }\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.advance = function () {\n        this.peek = ++this.index >= this.length ? $EOF : this.input.charCodeAt(this.index);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanToken = function () {\n        var /** @type {?} */ input = this.input, /** @type {?} */ length = this.length;\n        var /** @type {?} */ peek = this.peek, /** @type {?} */ index = this.index;\n        // Skip whitespace.\n        while (peek <= $SPACE) {\n            if (++index >= length) {\n                peek = $EOF;\n                break;\n            }\n            else {\n                peek = input.charCodeAt(index);\n            }\n        }\n        this.peek = peek;\n        this.index = index;\n        if (index >= length) {\n            return null;\n        }\n        // Handle identifiers and numbers.\n        if (isIdentifierStart(peek))\n            return this.scanIdentifier();\n        if (isDigit(peek))\n            return this.scanNumber(index);\n        var /** @type {?} */ start = index;\n        switch (peek) {\n            case $PERIOD:\n                this.advance();\n                return isDigit(this.peek) ? this.scanNumber(start) :\n                    newCharacterToken(start, $PERIOD);\n            case $LPAREN:\n            case $RPAREN:\n            case $LBRACE:\n            case $RBRACE:\n            case $LBRACKET:\n            case $RBRACKET:\n            case $COMMA:\n            case $COLON:\n            case $SEMICOLON:\n                return this.scanCharacter(start, peek);\n            case $SQ:\n            case $DQ:\n                return this.scanString();\n            case $HASH:\n            case $PLUS:\n            case $MINUS:\n            case $STAR:\n            case $SLASH:\n            case $PERCENT:\n            case $CARET:\n                return this.scanOperator(start, String.fromCharCode(peek));\n            case $QUESTION:\n                return this.scanComplexOperator(start, '?', $PERIOD, '.');\n            case $LT:\n            case $GT:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=');\n            case $BANG:\n            case $EQ:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=', $EQ, '=');\n            case $AMPERSAND:\n                return this.scanComplexOperator(start, '&', $AMPERSAND, '&');\n            case $BAR:\n                return this.scanComplexOperator(start, '|', $BAR, '|');\n            case $NBSP:\n                while (isWhitespace(this.peek))\n                    this.advance();\n                return this.scanToken();\n        }\n        this.advance();\n        return this.error(\"Unexpected character [\" + String.fromCharCode(peek) + \"]\", 0);\n    };\n    /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    _Scanner.prototype.scanCharacter = function (start, code) {\n        this.advance();\n        return newCharacterToken(start, code);\n    };\n    /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    _Scanner.prototype.scanOperator = function (start, str) {\n        this.advance();\n        return newOperatorToken(start, str);\n    };\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    _Scanner.prototype.scanComplexOperator = function (start, one, twoCode, two, threeCode, three) {\n        this.advance();\n        var /** @type {?} */ str = one;\n        if (this.peek == twoCode) {\n            this.advance();\n            str += two;\n        }\n        if (threeCode != null && this.peek == threeCode) {\n            this.advance();\n            str += three;\n        }\n        return newOperatorToken(start, str);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanIdentifier = function () {\n        var /** @type {?} */ start = this.index;\n        this.advance();\n        while (isIdentifierPart(this.peek))\n            this.advance();\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n            newIdentifierToken(start, str);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Scanner.prototype.scanNumber = function (start) {\n        var /** @type {?} */ simple = (this.index === start);\n        this.advance(); // Skip initial digit.\n        while (true) {\n            if (isDigit(this.peek)) {\n            }\n            else if (this.peek == $PERIOD) {\n                simple = false;\n            }\n            else if (isExponentStart(this.peek)) {\n                this.advance();\n                if (isExponentSign(this.peek))\n                    this.advance();\n                if (!isDigit(this.peek))\n                    return this.error('Invalid exponent', -1);\n                simple = false;\n            }\n            else {\n                break;\n            }\n            this.advance();\n        }\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        var /** @type {?} */ value = simple ? parseIntAutoRadix(str) : parseFloat(str);\n        return newNumberToken(start, value);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanString = function () {\n        var /** @type {?} */ start = this.index;\n        var /** @type {?} */ quote = this.peek;\n        this.advance(); // Skip initial quote.\n        var /** @type {?} */ buffer = '';\n        var /** @type {?} */ marker = this.index;\n        var /** @type {?} */ input = this.input;\n        while (this.peek != quote) {\n            if (this.peek == $BACKSLASH) {\n                buffer += input.substring(marker, this.index);\n                this.advance();\n                var /** @type {?} */ unescapedCode = void 0;\n                // Workaround for TS2.1-introduced type strictness\n                this.peek = this.peek;\n                if (this.peek == $u) {\n                    // 4 character hex code for unicode character.\n                    var /** @type {?} */ hex = input.substring(this.index + 1, this.index + 5);\n                    if (/^[0-9a-f]+$/i.test(hex)) {\n                        unescapedCode = parseInt(hex, 16);\n                    }\n                    else {\n                        return this.error(\"Invalid unicode escape [\\\\u\" + hex + \"]\", 0);\n                    }\n                    for (var /** @type {?} */ i = 0; i < 5; i++) {\n                        this.advance();\n                    }\n                }\n                else {\n                    unescapedCode = unescape(this.peek);\n                    this.advance();\n                }\n                buffer += String.fromCharCode(unescapedCode);\n                marker = this.index;\n            }\n            else if (this.peek == $EOF) {\n                return this.error('Unterminated quote', 0);\n            }\n            else {\n                this.advance();\n            }\n        }\n        var /** @type {?} */ last = input.substring(marker, this.index);\n        this.advance(); // Skip terminating quote.\n        return newStringToken(start, buffer + last);\n    };\n    /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    _Scanner.prototype.error = function (message, offset) {\n        var /** @type {?} */ position = this.index + offset;\n        return newErrorToken(position, \"Lexer Error: \" + message + \" at column \" + position + \" in expression [\" + this.input + \"]\");\n    };\n    return _Scanner;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierStart(code) {\n    return ($a <= code && code <= $z) || ($A <= code && code <= $Z) ||\n        (code == $_) || (code == $$);\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction isIdentifier(input) {\n    if (input.length == 0)\n        return false;\n    var /** @type {?} */ scanner = new _Scanner(input);\n    if (!isIdentifierStart(scanner.peek))\n        return false;\n    scanner.advance();\n    while (scanner.peek !== $EOF) {\n        if (!isIdentifierPart(scanner.peek))\n            return false;\n        scanner.advance();\n    }\n    return true;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierPart(code) {\n    return isAsciiLetter(code) || isDigit(code) || (code == $_) ||\n        (code == $$);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentStart(code) {\n    return code == $e || code == $E;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentSign(code) {\n    return code == $MINUS || code == $PLUS;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isQuote(code) {\n    return code === $SQ || code === $DQ || code === $BT;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction unescape(code) {\n    switch (code) {\n        case $n:\n            return $LF;\n        case $f:\n            return $FF;\n        case $r:\n            return $CR;\n        case $t:\n            return $TAB;\n        case $v:\n            return $VTAB;\n        default:\n            return code;\n    }\n}\n/**\n * @param {?} text\n * @return {?}\n */\nfunction parseIntAutoRadix(text) {\n    var /** @type {?} */ result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SplitInterpolation = (function () {\n    /**\n     * @param {?} strings\n     * @param {?} expressions\n     * @param {?} offsets\n     */\n    function SplitInterpolation(strings, expressions, offsets) {\n        this.strings = strings;\n        this.expressions = expressions;\n        this.offsets = offsets;\n    }\n    return SplitInterpolation;\n}());\nvar TemplateBindingParseResult = (function () {\n    /**\n     * @param {?} templateBindings\n     * @param {?} warnings\n     * @param {?} errors\n     */\n    function TemplateBindingParseResult(templateBindings, warnings, errors) {\n        this.templateBindings = templateBindings;\n        this.warnings = warnings;\n        this.errors = errors;\n    }\n    return TemplateBindingParseResult;\n}());\n/**\n * @param {?} config\n * @return {?}\n */\nfunction _createInterpolateRegExp(config) {\n    var /** @type {?} */ pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n    return new RegExp(pattern, 'g');\n}\nvar Parser = (function () {\n    /**\n     * @param {?} _lexer\n     */\n    function Parser(_lexer) {\n        this._lexer = _lexer;\n        this.errors = [];\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseAction = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(this._stripComments(input));\n        var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseBinding = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseSimpleBinding = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        var /** @type {?} */ errors = SimpleExpressionChecker.check(ast);\n        if (errors.length > 0) {\n            this._reportError(\"Host binding expression cannot contain \" + errors.join(' '), input, location);\n        }\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    Parser.prototype._reportError = function (message, input, errLocation, ctxLocation) {\n        this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._parseBindingAst = function (input, location, interpolationConfig) {\n        // Quotes expressions use 3rd-party expression language. We don't want to use\n        // our lexer or parser for that, so we check for that ahead of time.\n        var /** @type {?} */ quote = this._parseQuote(input, location);\n        if (quote != null) {\n            return quote;\n        }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n        return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype._parseQuote = function (input, location) {\n        if (input == null)\n            return null;\n        var /** @type {?} */ prefixSeparatorIndex = input.indexOf(':');\n        if (prefixSeparatorIndex == -1)\n            return null;\n        var /** @type {?} */ prefix = input.substring(0, prefixSeparatorIndex).trim();\n        if (!isIdentifier(prefix))\n            return null;\n        var /** @type {?} */ uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n        return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.parseTemplateBindings = function (prefixToken, input, location) {\n        var /** @type {?} */ tokens = this._lexer.tokenize(input);\n        if (prefixToken) {\n            // Prefix the tokens with the tokens from prefixToken but have them take no space (0 index).\n            var /** @type {?} */ prefixTokens = this._lexer.tokenize(prefixToken).map(function (t) {\n                t.index = 0;\n                return t;\n            });\n            tokens.unshift.apply(tokens, prefixTokens);\n        }\n        return new _ParseAST(input, location, tokens, input.length, false, this.errors, 0)\n            .parseTemplateBindings();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseInterpolation = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ split = this.splitInterpolation(input, location, interpolationConfig);\n        if (split == null)\n            return null;\n        var /** @type {?} */ expressions = [];\n        for (var /** @type {?} */ i = 0; i < split.expressions.length; ++i) {\n            var /** @type {?} */ expressionText = split.expressions[i];\n            var /** @type {?} */ sourceToLex = this._stripComments(expressionText);\n            var /** @type {?} */ tokens = this._lexer.tokenize(this._stripComments(split.expressions[i]));\n            var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n                .parseChain();\n            expressions.push(ast);\n        }\n        return new ASTWithSource(new Interpolation(new ParseSpan(0, input == null ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.splitInterpolation = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length <= 1) {\n            return null;\n        }\n        var /** @type {?} */ strings = [];\n        var /** @type {?} */ expressions = [];\n        var /** @type {?} */ offsets = [];\n        var /** @type {?} */ offset = 0;\n        for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n            var /** @type {?} */ part = parts[i];\n            if (i % 2 === 0) {\n                // fixed string\n                strings.push(part);\n                offset += part.length;\n            }\n            else if (part.trim().length > 0) {\n                offset += interpolationConfig.start.length;\n                expressions.push(part);\n                offsets.push(offset);\n                offset += part.length + interpolationConfig.end.length;\n            }\n            else {\n                this._reportError('Blank expressions are not allowed in interpolated strings', input, \"at column \" + this._findInterpolationErrorColumn(parts, i, interpolationConfig) + \" in\", location);\n                expressions.push('$implict');\n                offsets.push(offset);\n            }\n        }\n        return new SplitInterpolation(strings, expressions, offsets);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.wrapLiteralPrimitive = function (input, location) {\n        return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, input == null ? 0 : input.length), input), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._stripComments = function (input) {\n        var /** @type {?} */ i = this._commentStart(input);\n        return i != null ? input.substring(0, i).trim() : input;\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._commentStart = function (input) {\n        var /** @type {?} */ outerQuote = null;\n        for (var /** @type {?} */ i = 0; i < input.length - 1; i++) {\n            var /** @type {?} */ char = input.charCodeAt(i);\n            var /** @type {?} */ nextChar = input.charCodeAt(i + 1);\n            if (char === $SLASH && nextChar == $SLASH && outerQuote == null)\n                return i;\n            if (outerQuote === char) {\n                outerQuote = null;\n            }\n            else if (outerQuote == null && isQuote(char)) {\n                outerQuote = char;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._checkNoInterpolation = function (input, location, interpolationConfig) {\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length > 1) {\n            this._reportError(\"Got interpolation (\" + interpolationConfig.start + interpolationConfig.end + \") where expression was expected\", input, \"at column \" + this._findInterpolationErrorColumn(parts, 1, interpolationConfig) + \" in\", location);\n        }\n    };\n    /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._findInterpolationErrorColumn = function (parts, partInErrIdx, interpolationConfig) {\n        var /** @type {?} */ errLocation = '';\n        for (var /** @type {?} */ j = 0; j < partInErrIdx; j++) {\n            errLocation += j % 2 === 0 ?\n                parts[j] :\n                \"\" + interpolationConfig.start + parts[j] + interpolationConfig.end;\n        }\n        return errLocation.length;\n    };\n    return Parser;\n}());\nParser.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nParser.ctorParameters = function () { return [\n    { type: Lexer, },\n]; };\nvar _ParseAST = (function () {\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} tokens\n     * @param {?} inputLength\n     * @param {?} parseAction\n     * @param {?} errors\n     * @param {?} offset\n     */\n    function _ParseAST(input, location, tokens, inputLength, parseAction, errors, offset) {\n        this.input = input;\n        this.location = location;\n        this.tokens = tokens;\n        this.inputLength = inputLength;\n        this.parseAction = parseAction;\n        this.errors = errors;\n        this.offset = offset;\n        this.rparensExpected = 0;\n        this.rbracketsExpected = 0;\n        this.rbracesExpected = 0;\n        this.index = 0;\n    }\n    /**\n     * @param {?} offset\n     * @return {?}\n     */\n    _ParseAST.prototype.peek = function (offset) {\n        var /** @type {?} */ i = this.index + offset;\n        return i < this.tokens.length ? this.tokens[i] : EOF;\n    };\n    Object.defineProperty(_ParseAST.prototype, \"next\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.peek(0); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_ParseAST.prototype, \"inputIndex\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return (this.index < this.tokens.length) ? this.next.index + this.offset :\n                this.inputLength + this.offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _ParseAST.prototype.span = function (start) { return new ParseSpan(start, this.inputIndex); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.advance = function () { this.index++; };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalCharacter = function (code) {\n        if (this.next.isCharacter(code)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordLet = function () { return this.next.isKeywordLet(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordAs = function () { return this.next.isKeywordAs(); };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.expectCharacter = function (code) {\n        if (this.optionalCharacter(code))\n            return;\n        this.error(\"Missing expected \" + String.fromCharCode(code));\n    };\n    /**\n     * @param {?} op\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalOperator = function (op) {\n        if (this.next.isOperator(op)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @param {?} operator\n     * @return {?}\n     */\n    _ParseAST.prototype.expectOperator = function (operator) {\n        if (this.optionalOperator(operator))\n            return;\n        this.error(\"Missing expected operator \" + operator);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeyword = function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier or keyword\");\n            return '';\n        }\n        this.advance();\n        return n.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeywordOrString = function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier, keyword, or string\");\n            return '';\n        }\n        this.advance();\n        return n.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseChain = function () {\n        var /** @type {?} */ exprs = [];\n        var /** @type {?} */ start = this.inputIndex;\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ expr = this.parsePipe();\n            exprs.push(expr);\n            if (this.optionalCharacter($SEMICOLON)) {\n                if (!this.parseAction) {\n                    this.error('Binding expression cannot contain chained expression');\n                }\n                while (this.optionalCharacter($SEMICOLON)) {\n                } // read all semicolons\n            }\n            else if (this.index < this.tokens.length) {\n                this.error(\"Unexpected token '\" + this.next + \"'\");\n            }\n        }\n        if (exprs.length == 0)\n            return new EmptyExpr(this.span(start));\n        if (exprs.length == 1)\n            return exprs[0];\n        return new Chain(this.span(start), exprs);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePipe = function () {\n        var /** @type {?} */ result = this.parseExpression();\n        if (this.optionalOperator('|')) {\n            if (this.parseAction) {\n                this.error('Cannot have a pipe in an action expression');\n            }\n            do {\n                var /** @type {?} */ name = this.expectIdentifierOrKeyword();\n                var /** @type {?} */ args = [];\n                while (this.optionalCharacter($COLON)) {\n                    args.push(this.parseExpression());\n                }\n                result = new BindingPipe(this.span(result.span.start), result, name, args);\n            } while (this.optionalOperator('|'));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpression = function () { return this.parseConditional(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseConditional = function () {\n        var /** @type {?} */ start = this.inputIndex;\n        var /** @type {?} */ result = this.parseLogicalOr();\n        if (this.optionalOperator('?')) {\n            var /** @type {?} */ yes = this.parsePipe();\n            var /** @type {?} */ no = void 0;\n            if (!this.optionalCharacter($COLON)) {\n                var /** @type {?} */ end = this.inputIndex;\n                var /** @type {?} */ expression = this.input.substring(start, end);\n                this.error(\"Conditional expression \" + expression + \" requires all 3 expressions\");\n                no = new EmptyExpr(this.span(start));\n            }\n            else {\n                no = this.parsePipe();\n            }\n            return new Conditional(this.span(start), result, yes, no);\n        }\n        else {\n            return result;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalOr = function () {\n        // '||'\n        var /** @type {?} */ result = this.parseLogicalAnd();\n        while (this.optionalOperator('||')) {\n            var /** @type {?} */ right = this.parseLogicalAnd();\n            result = new Binary(this.span(result.span.start), '||', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalAnd = function () {\n        // '&&'\n        var /** @type {?} */ result = this.parseEquality();\n        while (this.optionalOperator('&&')) {\n            var /** @type {?} */ right = this.parseEquality();\n            result = new Binary(this.span(result.span.start), '&&', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseEquality = function () {\n        // '==','!=','===','!=='\n        var /** @type {?} */ result = this.parseRelational();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '==':\n                case '===':\n                case '!=':\n                case '!==':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseRelational();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseRelational = function () {\n        // '<', '>', '<=', '>='\n        var /** @type {?} */ result = this.parseAdditive();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '<':\n                case '>':\n                case '<=':\n                case '>=':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseAdditive();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAdditive = function () {\n        // '+', '-'\n        var /** @type {?} */ result = this.parseMultiplicative();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '+':\n                case '-':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseMultiplicative();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseMultiplicative = function () {\n        // '*', '%', '/'\n        var /** @type {?} */ result = this.parsePrefix();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '*':\n                case '%':\n                case '/':\n                    this.advance();\n                    var /** @type {?} */ right = this.parsePrefix();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrefix = function () {\n        if (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ operator = this.next.strValue;\n            var /** @type {?} */ result = void 0;\n            switch (operator) {\n                case '+':\n                    this.advance();\n                    return this.parsePrefix();\n                case '-':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n                case '!':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new PrefixNot(this.span(start), result);\n            }\n        }\n        return this.parseCallChain();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallChain = function () {\n        var /** @type {?} */ result = this.parsePrimary();\n        while (true) {\n            if (this.optionalCharacter($PERIOD)) {\n                result = this.parseAccessMemberOrMethodCall(result, false);\n            }\n            else if (this.optionalOperator('?.')) {\n                result = this.parseAccessMemberOrMethodCall(result, true);\n            }\n            else if (this.optionalCharacter($LBRACKET)) {\n                this.rbracketsExpected++;\n                var /** @type {?} */ key = this.parsePipe();\n                this.rbracketsExpected--;\n                this.expectCharacter($RBRACKET);\n                if (this.optionalOperator('=')) {\n                    var /** @type {?} */ value = this.parseConditional();\n                    result = new KeyedWrite(this.span(result.span.start), result, key, value);\n                }\n                else {\n                    result = new KeyedRead(this.span(result.span.start), result, key);\n                }\n            }\n            else if (this.optionalCharacter($LPAREN)) {\n                this.rparensExpected++;\n                var /** @type {?} */ args = this.parseCallArguments();\n                this.rparensExpected--;\n                this.expectCharacter($RPAREN);\n                result = new FunctionCall(this.span(result.span.start), result, args);\n            }\n            else {\n                return result;\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrimary = function () {\n        var /** @type {?} */ start = this.inputIndex;\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ result = this.parsePipe();\n            this.rparensExpected--;\n            this.expectCharacter($RPAREN);\n            return result;\n        }\n        else if (this.next.isKeywordNull()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), null);\n        }\n        else if (this.next.isKeywordUndefined()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), void 0);\n        }\n        else if (this.next.isKeywordTrue()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), true);\n        }\n        else if (this.next.isKeywordFalse()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), false);\n        }\n        else if (this.next.isKeywordThis()) {\n            this.advance();\n            return new ImplicitReceiver(this.span(start));\n        }\n        else if (this.optionalCharacter($LBRACKET)) {\n            this.rbracketsExpected++;\n            var /** @type {?} */ elements = this.parseExpressionList($RBRACKET);\n            this.rbracketsExpected--;\n            this.expectCharacter($RBRACKET);\n            return new LiteralArray(this.span(start), elements);\n        }\n        else if (this.next.isCharacter($LBRACE)) {\n            return this.parseLiteralMap();\n        }\n        else if (this.next.isIdentifier()) {\n            return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n        }\n        else if (this.next.isNumber()) {\n            var /** @type {?} */ value = this.next.toNumber();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), value);\n        }\n        else if (this.next.isString()) {\n            var /** @type {?} */ literalValue = this.next.toString();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), literalValue);\n        }\n        else if (this.index >= this.tokens.length) {\n            this.error(\"Unexpected end of expression: \" + this.input);\n            return new EmptyExpr(this.span(start));\n        }\n        else {\n            this.error(\"Unexpected token \" + this.next);\n            return new EmptyExpr(this.span(start));\n        }\n    };\n    /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpressionList = function (terminator) {\n        var /** @type {?} */ result = [];\n        if (!this.next.isCharacter(terminator)) {\n            do {\n                result.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLiteralMap = function () {\n        var /** @type {?} */ keys = [];\n        var /** @type {?} */ values = [];\n        var /** @type {?} */ start = this.inputIndex;\n        this.expectCharacter($LBRACE);\n        if (!this.optionalCharacter($RBRACE)) {\n            this.rbracesExpected++;\n            do {\n                var /** @type {?} */ key = this.expectIdentifierOrKeywordOrString();\n                keys.push(key);\n                this.expectCharacter($COLON);\n                values.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n            this.rbracesExpected--;\n            this.expectCharacter($RBRACE);\n        }\n        return new LiteralMap(this.span(start), keys, values);\n    };\n    /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAccessMemberOrMethodCall = function (receiver, isSafe) {\n        if (isSafe === void 0) { isSafe = false; }\n        var /** @type {?} */ start = receiver.span.start;\n        var /** @type {?} */ id = this.expectIdentifierOrKeyword();\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ args = this.parseCallArguments();\n            this.expectCharacter($RPAREN);\n            this.rparensExpected--;\n            var /** @type {?} */ span = this.span(start);\n            return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                new MethodCall(span, receiver, id, args);\n        }\n        else {\n            if (isSafe) {\n                if (this.optionalOperator('=')) {\n                    this.error('The \\'?.\\' operator cannot be used in the assignment');\n                    return new EmptyExpr(this.span(start));\n                }\n                else {\n                    return new SafePropertyRead(this.span(start), receiver, id);\n                }\n            }\n            else {\n                if (this.optionalOperator('=')) {\n                    if (!this.parseAction) {\n                        this.error('Bindings cannot contain assignments');\n                        return new EmptyExpr(this.span(start));\n                    }\n                    var /** @type {?} */ value = this.parseConditional();\n                    return new PropertyWrite(this.span(start), receiver, id, value);\n                }\n                else {\n                    return new PropertyRead(this.span(start), receiver, id);\n                }\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallArguments = function () {\n        if (this.next.isCharacter($RPAREN))\n            return [];\n        var /** @type {?} */ positionals = [];\n        do {\n            positionals.push(this.parsePipe());\n        } while (this.optionalCharacter($COMMA));\n        return (positionals);\n    };\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    _ParseAST.prototype.expectTemplateBindingKey = function () {\n        var /** @type {?} */ result = '';\n        var /** @type {?} */ operatorFound = false;\n        do {\n            result += this.expectIdentifierOrKeywordOrString();\n            operatorFound = this.optionalOperator('-');\n            if (operatorFound) {\n                result += '-';\n            }\n        } while (operatorFound);\n        return result.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseTemplateBindings = function () {\n        var /** @type {?} */ bindings = [];\n        var /** @type {?} */ prefix = null;\n        var /** @type {?} */ warnings = [];\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ keyIsVar = this.peekKeywordLet();\n            if (keyIsVar) {\n                this.advance();\n            }\n            var /** @type {?} */ rawKey = this.expectTemplateBindingKey();\n            var /** @type {?} */ key = rawKey;\n            if (!keyIsVar) {\n                if (prefix == null) {\n                    prefix = key;\n                }\n                else {\n                    key = prefix + key[0].toUpperCase() + key.substring(1);\n                }\n            }\n            this.optionalCharacter($COLON);\n            var /** @type {?} */ name = null;\n            var /** @type {?} */ expression = null;\n            if (keyIsVar) {\n                if (this.optionalOperator('=')) {\n                    name = this.expectTemplateBindingKey();\n                }\n                else {\n                    name = '\\$implicit';\n                }\n            }\n            else if (this.peekKeywordAs()) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                name = rawKey;\n                key = this.expectTemplateBindingKey(); // read local var name\n                keyIsVar = true;\n            }\n            else if (this.next !== EOF && !this.peekKeywordLet()) {\n                var /** @type {?} */ start_2 = this.inputIndex;\n                var /** @type {?} */ ast = this.parsePipe();\n                var /** @type {?} */ source = this.input.substring(start_2 - this.offset, this.inputIndex - this.offset);\n                expression = new ASTWithSource(ast, source, this.location, this.errors);\n            }\n            bindings.push(new TemplateBinding(this.span(start), key, keyIsVar, name, expression));\n            if (this.peekKeywordAs() && !keyIsVar) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                var /** @type {?} */ letName = this.expectTemplateBindingKey(); // read local var name\n                bindings.push(new TemplateBinding(this.span(letStart), letName, true, key, null));\n            }\n            if (!this.optionalCharacter($SEMICOLON)) {\n                this.optionalCharacter($COMMA);\n            }\n        }\n        return new TemplateBindingParseResult(bindings, warnings, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.error = function (message, index) {\n        if (index === void 0) { index = null; }\n        this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n        this.skip();\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.locationText = function (index) {\n        if (index === void 0) { index = null; }\n        if (index == null)\n            index = this.index;\n        return (index < this.tokens.length) ? \"at column \" + (this.tokens[index].index + 1) + \" in\" :\n            \"at the end of the expression\";\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.skip = function () {\n        var /** @type {?} */ n = this.next;\n        while (this.index < this.tokens.length && !n.isCharacter($SEMICOLON) &&\n            (this.rparensExpected <= 0 || !n.isCharacter($RPAREN)) &&\n            (this.rbracesExpected <= 0 || !n.isCharacter($RBRACE)) &&\n            (this.rbracketsExpected <= 0 || !n.isCharacter($RBRACKET))) {\n            if (this.next.isError()) {\n                this.errors.push(new ParserError(this.next.toString(), this.input, this.locationText(), this.location));\n            }\n            this.advance();\n            n = this.next;\n        }\n    };\n    return _ParseAST;\n}());\nvar SimpleExpressionChecker = (function () {\n    function SimpleExpressionChecker() {\n        this.errors = [];\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    SimpleExpressionChecker.check = function (ast) {\n        var /** @type {?} */ s = new SimpleExpressionChecker();\n        ast.visit(s);\n        return s.errors;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitImplicitReceiver = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitInterpolation = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralPrimitive = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyWrite = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafePropertyRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitMethodCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafeMethodCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitFunctionCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralArray = function (ast, context) { this.visitAll(ast.expressions); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralMap = function (ast, context) { this.visitAll(ast.values); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitBinary = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPrefixNot = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitConditional = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPipe = function (ast, context) { this.errors.push('pipes'); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedWrite = function (ast, context) { };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitAll = function (asts) {\n        var _this = this;\n        return asts.map(function (node) { return node.visit(_this); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitChain = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitQuote = function (ast, context) { };\n    return SimpleExpressionChecker;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParseLocation = (function () {\n    /**\n     * @param {?} file\n     * @param {?} offset\n     * @param {?} line\n     * @param {?} col\n     */\n    function ParseLocation(file, offset, line, col) {\n        this.file = file;\n        this.offset = offset;\n        this.line = line;\n        this.col = col;\n    }\n    /**\n     * @return {?}\n     */\n    ParseLocation.prototype.toString = function () {\n        return this.offset != null ? this.file.url + \"@\" + this.line + \":\" + this.col : this.file.url;\n    };\n    /**\n     * @param {?} delta\n     * @return {?}\n     */\n    ParseLocation.prototype.moveBy = function (delta) {\n        var /** @type {?} */ source = this.file.content;\n        var /** @type {?} */ len = source.length;\n        var /** @type {?} */ offset = this.offset;\n        var /** @type {?} */ line = this.line;\n        var /** @type {?} */ col = this.col;\n        while (offset > 0 && delta < 0) {\n            offset--;\n            delta++;\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            if (ch == $LF) {\n                line--;\n                var /** @type {?} */ priorLine = source.substr(0, offset - 1).lastIndexOf(String.fromCharCode($LF));\n                col = priorLine > 0 ? offset - priorLine : offset;\n            }\n            else {\n                col--;\n            }\n        }\n        while (offset < len && delta > 0) {\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            offset++;\n            delta--;\n            if (ch == $LF) {\n                line++;\n                col = 0;\n            }\n            else {\n                col++;\n            }\n        }\n        return new ParseLocation(this.file, offset, line, col);\n    };\n    /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    ParseLocation.prototype.getContext = function (maxChars, maxLines) {\n        var /** @type {?} */ content = this.file.content;\n        var /** @type {?} */ startOffset = this.offset;\n        if (startOffset != null) {\n            if (startOffset > content.length - 1) {\n                startOffset = content.length - 1;\n            }\n            var /** @type {?} */ endOffset = startOffset;\n            var /** @type {?} */ ctxChars = 0;\n            var /** @type {?} */ ctxLines = 0;\n            while (ctxChars < maxChars && startOffset > 0) {\n                startOffset--;\n                ctxChars++;\n                if (content[startOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            ctxChars = 0;\n            ctxLines = 0;\n            while (ctxChars < maxChars && endOffset < content.length - 1) {\n                endOffset++;\n                ctxChars++;\n                if (content[endOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            return {\n                before: content.substring(startOffset, this.offset),\n                after: content.substring(this.offset, endOffset + 1),\n            };\n        }\n        return null;\n    };\n    return ParseLocation;\n}());\nvar ParseSourceFile = (function () {\n    /**\n     * @param {?} content\n     * @param {?} url\n     */\n    function ParseSourceFile(content, url) {\n        this.content = content;\n        this.url = url;\n    }\n    return ParseSourceFile;\n}());\nvar ParseSourceSpan = (function () {\n    /**\n     * @param {?} start\n     * @param {?} end\n     * @param {?=} details\n     */\n    function ParseSourceSpan(start, end, details) {\n        if (details === void 0) { details = null; }\n        this.start = start;\n        this.end = end;\n        this.details = details;\n    }\n    /**\n     * @return {?}\n     */\n    ParseSourceSpan.prototype.toString = function () {\n        return this.start.file.content.substring(this.start.offset, this.end.offset);\n    };\n    return ParseSourceSpan;\n}());\nvar ParseErrorLevel = {};\nParseErrorLevel.WARNING = 0;\nParseErrorLevel.ERROR = 1;\nParseErrorLevel[ParseErrorLevel.WARNING] = \"WARNING\";\nParseErrorLevel[ParseErrorLevel.ERROR] = \"ERROR\";\nvar ParseError = (function () {\n    /**\n     * @param {?} span\n     * @param {?} msg\n     * @param {?=} level\n     */\n    function ParseError(span, msg, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this.span = span;\n        this.msg = msg;\n        this.level = level;\n    }\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.toString = function () {\n        var /** @type {?} */ ctx = this.span.start.getContext(100, 3);\n        var /** @type {?} */ contextStr = ctx ? \" (\\\"\" + ctx.before + \"[\" + ParseErrorLevel[this.level] + \" ->]\" + ctx.after + \"\\\")\" : '';\n        var /** @type {?} */ details = this.span.details ? \", \" + this.span.details : '';\n        return \"\" + this.msg + contextStr + \": \" + this.span.start + details;\n    };\n    return ParseError;\n}());\n/**\n * @param {?} kind\n * @param {?} type\n * @return {?}\n */\nfunction typeSourceSpan(kind, type) {\n    var /** @type {?} */ moduleUrl = identifierModuleUrl(type);\n    var /** @type {?} */ sourceFileName = moduleUrl != null ? \"in \" + kind + \" \" + identifierName(type) + \" in \" + moduleUrl :\n        \"in \" + kind + \" \" + identifierName(type);\n    var /** @type {?} */ sourceFile = new ParseSourceFile('', sourceFileName);\n    return new ParseSourceSpan(new ParseLocation(sourceFile, null, null, null), new ParseLocation(sourceFile, null, null, null));\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Text = (function () {\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Text.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Expansion = (function () {\n    /**\n     * @param {?} switchValue\n     * @param {?} type\n     * @param {?} cases\n     * @param {?} sourceSpan\n     * @param {?} switchValueSourceSpan\n     */\n    function Expansion(switchValue, type, cases, sourceSpan, switchValueSourceSpan) {\n        this.switchValue = switchValue;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n        this.switchValueSourceSpan = switchValueSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Expansion.prototype.visit = function (visitor, context) { return visitor.visitExpansion(this, context); };\n    return Expansion;\n}());\nvar ExpansionCase = (function () {\n    /**\n     * @param {?} value\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} valueSourceSpan\n     * @param {?} expSourceSpan\n     */\n    function ExpansionCase(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n        this.value = value;\n        this.expression = expression;\n        this.sourceSpan = sourceSpan;\n        this.valueSourceSpan = valueSourceSpan;\n        this.expSourceSpan = expSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpansionCase.prototype.visit = function (visitor, context) { return visitor.visitExpansionCase(this, context); };\n    return ExpansionCase;\n}());\nvar Attribute$1 = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?=} valueSpan\n     */\n    function Attribute$1(name, value, sourceSpan, valueSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n        this.valueSpan = valueSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Attribute$1.prototype.visit = function (visitor, context) { return visitor.visitAttribute(this, context); };\n    return Attribute$1;\n}());\nvar Element = (function () {\n    /**\n     * @param {?} name\n     * @param {?} attrs\n     * @param {?} children\n     * @param {?} sourceSpan\n     * @param {?} startSourceSpan\n     * @param {?} endSourceSpan\n     */\n    function Element(name, attrs, children, sourceSpan, startSourceSpan, endSourceSpan) {\n        this.name = name;\n        this.attrs = attrs;\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Element.prototype.visit = function (visitor, context) { return visitor.visitElement(this, context); };\n    return Element;\n}());\nvar Comment = (function () {\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function Comment(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Comment.prototype.visit = function (visitor, context) { return visitor.visitComment(this, context); };\n    return Comment;\n}());\n/**\n * @param {?} visitor\n * @param {?} nodes\n * @param {?=} context\n * @return {?}\n */\nfunction visitAll(visitor, nodes, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return visitor.visit(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    nodes.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TokenType$1 = {};\nTokenType$1.TAG_OPEN_START = 0;\nTokenType$1.TAG_OPEN_END = 1;\nTokenType$1.TAG_OPEN_END_VOID = 2;\nTokenType$1.TAG_CLOSE = 3;\nTokenType$1.TEXT = 4;\nTokenType$1.ESCAPABLE_RAW_TEXT = 5;\nTokenType$1.RAW_TEXT = 6;\nTokenType$1.COMMENT_START = 7;\nTokenType$1.COMMENT_END = 8;\nTokenType$1.CDATA_START = 9;\nTokenType$1.CDATA_END = 10;\nTokenType$1.ATTR_NAME = 11;\nTokenType$1.ATTR_VALUE = 12;\nTokenType$1.DOC_TYPE = 13;\nTokenType$1.EXPANSION_FORM_START = 14;\nTokenType$1.EXPANSION_CASE_VALUE = 15;\nTokenType$1.EXPANSION_CASE_EXP_START = 16;\nTokenType$1.EXPANSION_CASE_EXP_END = 17;\nTokenType$1.EXPANSION_FORM_END = 18;\nTokenType$1.EOF = 19;\nTokenType$1[TokenType$1.TAG_OPEN_START] = \"TAG_OPEN_START\";\nTokenType$1[TokenType$1.TAG_OPEN_END] = \"TAG_OPEN_END\";\nTokenType$1[TokenType$1.TAG_OPEN_END_VOID] = \"TAG_OPEN_END_VOID\";\nTokenType$1[TokenType$1.TAG_CLOSE] = \"TAG_CLOSE\";\nTokenType$1[TokenType$1.TEXT] = \"TEXT\";\nTokenType$1[TokenType$1.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTokenType$1[TokenType$1.RAW_TEXT] = \"RAW_TEXT\";\nTokenType$1[TokenType$1.COMMENT_START] = \"COMMENT_START\";\nTokenType$1[TokenType$1.COMMENT_END] = \"COMMENT_END\";\nTokenType$1[TokenType$1.CDATA_START] = \"CDATA_START\";\nTokenType$1[TokenType$1.CDATA_END] = \"CDATA_END\";\nTokenType$1[TokenType$1.ATTR_NAME] = \"ATTR_NAME\";\nTokenType$1[TokenType$1.ATTR_VALUE] = \"ATTR_VALUE\";\nTokenType$1[TokenType$1.DOC_TYPE] = \"DOC_TYPE\";\nTokenType$1[TokenType$1.EXPANSION_FORM_START] = \"EXPANSION_FORM_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_VALUE] = \"EXPANSION_CASE_VALUE\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_START] = \"EXPANSION_CASE_EXP_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_END] = \"EXPANSION_CASE_EXP_END\";\nTokenType$1[TokenType$1.EXPANSION_FORM_END] = \"EXPANSION_FORM_END\";\nTokenType$1[TokenType$1.EOF] = \"EOF\";\nvar Token$1 = (function () {\n    /**\n     * @param {?} type\n     * @param {?} parts\n     * @param {?} sourceSpan\n     */\n    function Token$1(type, parts, sourceSpan) {\n        this.type = type;\n        this.parts = parts;\n        this.sourceSpan = sourceSpan;\n    }\n    return Token$1;\n}());\nvar TokenError = (function (_super) {\n    __extends(TokenError, _super);\n    /**\n     * @param {?} errorMsg\n     * @param {?} tokenType\n     * @param {?} span\n     */\n    function TokenError(errorMsg, tokenType, span) {\n        var _this = _super.call(this, span, errorMsg) || this;\n        _this.tokenType = tokenType;\n        return _this;\n    }\n    return TokenError;\n}(ParseError));\nvar TokenizeResult = (function () {\n    /**\n     * @param {?} tokens\n     * @param {?} errors\n     */\n    function TokenizeResult(tokens, errors) {\n        this.tokens = tokens;\n        this.errors = errors;\n    }\n    return TokenizeResult;\n}());\n/**\n * @param {?} source\n * @param {?} url\n * @param {?} getTagDefinition\n * @param {?=} tokenizeExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nfunction tokenize(source, url, getTagDefinition, tokenizeExpansionForms, interpolationConfig) {\n    if (tokenizeExpansionForms === void 0) { tokenizeExpansionForms = false; }\n    if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n    return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n        .tokenize();\n}\nvar _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n/**\n * @param {?} charCode\n * @return {?}\n */\nfunction _unexpectedCharacterErrorMsg(charCode) {\n    var /** @type {?} */ char = charCode === $EOF ? 'EOF' : String.fromCharCode(charCode);\n    return \"Unexpected character \\\"\" + char + \"\\\"\";\n}\n/**\n * @param {?} entitySrc\n * @return {?}\n */\nfunction _unknownEntityErrorMsg(entitySrc) {\n    return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\n}\nvar _ControlFlowError = (function () {\n    /**\n     * @param {?} error\n     */\n    function _ControlFlowError(error) {\n        this.error = error;\n    }\n    return _ControlFlowError;\n}());\nvar _Tokenizer = (function () {\n    /**\n     * @param {?} _file The html source\n     * @param {?} _getTagDefinition\n     * @param {?} _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n     * @param {?=} _interpolationConfig\n     */\n    function _Tokenizer(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig) {\n        if (_interpolationConfig === void 0) { _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._file = _file;\n        this._getTagDefinition = _getTagDefinition;\n        this._tokenizeIcu = _tokenizeIcu;\n        this._interpolationConfig = _interpolationConfig;\n        this._peek = -1;\n        this._nextPeek = -1;\n        this._index = -1;\n        this._line = 0;\n        this._column = -1;\n        this._expansionCaseStack = [];\n        this._inInterpolation = false;\n        this.tokens = [];\n        this.errors = [];\n        this._input = _file.content;\n        this._length = _file.content.length;\n        this._advance();\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    _Tokenizer.prototype._processCarriageReturns = function (content) {\n        // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n        // In order to keep the original position in the source, we can not\n        // pre-process it.\n        // Instead CRs are processed right before instantiating the tokens.\n        return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype.tokenize = function () {\n        while (this._peek !== $EOF) {\n            var /** @type {?} */ start = this._getLocation();\n            try {\n                if (this._attemptCharCode($LT)) {\n                    if (this._attemptCharCode($BANG)) {\n                        if (this._attemptCharCode($LBRACKET)) {\n                            this._consumeCdata(start);\n                        }\n                        else if (this._attemptCharCode($MINUS)) {\n                            this._consumeComment(start);\n                        }\n                        else {\n                            this._consumeDocType(start);\n                        }\n                    }\n                    else if (this._attemptCharCode($SLASH)) {\n                        this._consumeTagClose(start);\n                    }\n                    else {\n                        this._consumeTagOpen(start);\n                    }\n                }\n                else if (!(this._tokenizeIcu && this._tokenizeExpansionForm())) {\n                    this._consumeText();\n                }\n            }\n            catch (e) {\n                if (e instanceof _ControlFlowError) {\n                    this.errors.push(e.error);\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        this._beginToken(TokenType$1.EOF);\n        this._endToken([]);\n        return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _Tokenizer.prototype._tokenizeExpansionForm = function () {\n        if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n            this._consumeExpansionFormStart();\n            return true;\n        }\n        if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n            this._consumeExpansionCaseStart();\n            return true;\n        }\n        if (this._peek === $RBRACE) {\n            if (this._isInExpansionCase()) {\n                this._consumeExpansionCaseEnd();\n                return true;\n            }\n            if (this._isInExpansionForm()) {\n                this._consumeExpansionFormEnd();\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._getLocation = function () {\n        return new ParseLocation(this._file, this._index, this._line, this._column);\n    };\n    /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._getSpan = function (start, end) {\n        if (start === void 0) { start = this._getLocation(); }\n        if (end === void 0) { end = this._getLocation(); }\n        return new ParseSourceSpan(start, end);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._beginToken = function (type, start) {\n        if (start === void 0) { start = this._getLocation(); }\n        this._currentTokenStart = start;\n        this._currentTokenType = type;\n    };\n    /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._endToken = function (parts, end) {\n        if (end === void 0) { end = this._getLocation(); }\n        var /** @type {?} */ token = new Token$1(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n        this.tokens.push(token);\n        this._currentTokenStart = null;\n        this._currentTokenType = null;\n        return token;\n    };\n    /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    _Tokenizer.prototype._createError = function (msg, span) {\n        if (this._isInExpansionForm()) {\n            msg += \" (Do you have an unescaped \\\"{\\\" in your template? Use \\\"{{ '{' }}\\\") to escape it.)\";\n        }\n        var /** @type {?} */ error = new TokenError(msg, this._currentTokenType, span);\n        this._currentTokenStart = null;\n        this._currentTokenType = null;\n        return new _ControlFlowError(error);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._advance = function () {\n        if (this._index >= this._length) {\n            throw this._createError(_unexpectedCharacterErrorMsg($EOF), this._getSpan());\n        }\n        if (this._peek === $LF) {\n            this._line++;\n            this._column = 0;\n        }\n        else if (this._peek !== $LF && this._peek !== $CR) {\n            this._column++;\n        }\n        this._index++;\n        this._peek = this._index >= this._length ? $EOF : this._input.charCodeAt(this._index);\n        this._nextPeek =\n            this._index + 1 >= this._length ? $EOF : this._input.charCodeAt(this._index + 1);\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCode = function (charCode) {\n        if (this._peek === charCode) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeCaseInsensitive = function (charCode) {\n        if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCode = function (charCode) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptCharCode(charCode)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n        }\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStr = function (chars) {\n        var /** @type {?} */ len = chars.length;\n        if (this._index + len > this._length) {\n            return false;\n        }\n        var /** @type {?} */ initialPosition = this._savePosition();\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            if (!this._attemptCharCode(chars.charCodeAt(i))) {\n                // If attempting to parse the string fails, we want to reset the parser\n                // to where it was before the attempt\n                this._restorePosition(initialPosition);\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStrCaseInsensitive = function (chars) {\n        for (var /** @type {?} */ i = 0; i < chars.length; i++) {\n            if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireStr = function (chars) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptStr(chars)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeUntilFn = function (predicate) {\n        while (!predicate(this._peek)) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCodeUntilFn = function (predicate, len) {\n        var /** @type {?} */ start = this._getLocation();\n        this._attemptCharCodeUntilFn(predicate);\n        if (this._index - start.offset < len) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n        }\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptUntilChar = function (char) {\n        while (this._peek !== char) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._readChar = function (decodeEntities) {\n        if (decodeEntities && this._peek === $AMPERSAND) {\n            return this._decodeEntity();\n        }\n        else {\n            var /** @type {?} */ index = this._index;\n            this._advance();\n            return this._input[index];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._decodeEntity = function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._advance();\n        if (this._attemptCharCode($HASH)) {\n            var /** @type {?} */ isHex = this._attemptCharCode($x) || this._attemptCharCode($X);\n            var /** @type {?} */ numberStart = this._getLocation().offset;\n            this._attemptCharCodeUntilFn(isDigitEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            this._advance();\n            var /** @type {?} */ strNum = this._input.substring(numberStart, this._index - 1);\n            try {\n                var /** @type {?} */ charCode = parseInt(strNum, isHex ? 16 : 10);\n                return String.fromCharCode(charCode);\n            }\n            catch (e) {\n                var /** @type {?} */ entity = this._input.substring(start.offset + 1, this._index - 1);\n                throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n            }\n        }\n        else {\n            var /** @type {?} */ startPosition = this._savePosition();\n            this._attemptCharCodeUntilFn(isNamedEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                this._restorePosition(startPosition);\n                return '&';\n            }\n            this._advance();\n            var /** @type {?} */ name = this._input.substring(start.offset + 1, this._index - 1);\n            var /** @type {?} */ char = NAMED_ENTITIES[name];\n            if (!char) {\n                throw this._createError(_unknownEntityErrorMsg(name), this._getSpan(start));\n            }\n            return char;\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawText = function (decodeEntities, firstCharOfEnd, attemptEndRest) {\n        var /** @type {?} */ tagCloseStart;\n        var /** @type {?} */ textStart = this._getLocation();\n        this._beginToken(decodeEntities ? TokenType$1.ESCAPABLE_RAW_TEXT : TokenType$1.RAW_TEXT, textStart);\n        var /** @type {?} */ parts = [];\n        while (true) {\n            tagCloseStart = this._getLocation();\n            if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n                break;\n            }\n            if (this._index > tagCloseStart.offset) {\n                // add the characters consumed by the previous if statement to the output\n                parts.push(this._input.substring(tagCloseStart.offset, this._index));\n            }\n            while (this._peek !== firstCharOfEnd) {\n                parts.push(this._readChar(decodeEntities));\n            }\n        }\n        return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeComment = function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.COMMENT_START, start);\n        this._requireCharCode($MINUS);\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $MINUS, function () { return _this._attemptStr('->'); });\n        this._beginToken(TokenType$1.COMMENT_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeCdata = function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.CDATA_START, start);\n        this._requireStr('CDATA[');\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $RBRACKET, function () { return _this._attemptStr(']>'); });\n        this._beginToken(TokenType$1.CDATA_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeDocType = function (start) {\n        this._beginToken(TokenType$1.DOC_TYPE, start);\n        this._attemptUntilChar($GT);\n        this._advance();\n        this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumePrefixAndName = function () {\n        var /** @type {?} */ nameOrPrefixStart = this._index;\n        var /** @type {?} */ prefix = null;\n        while (this._peek !== $COLON && !isPrefixEnd(this._peek)) {\n            this._advance();\n        }\n        var /** @type {?} */ nameStart;\n        if (this._peek === $COLON) {\n            this._advance();\n            prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n            nameStart = this._index;\n        }\n        else {\n            nameStart = nameOrPrefixStart;\n        }\n        this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n        var /** @type {?} */ name = this._input.substring(nameStart, this._index);\n        return [prefix, name];\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpen = function (start) {\n        var /** @type {?} */ savedPos = this._savePosition();\n        var /** @type {?} */ tagName;\n        var /** @type {?} */ lowercaseTagName;\n        try {\n            if (!isAsciiLetter(this._peek)) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            var /** @type {?} */ nameStart = this._index;\n            this._consumeTagOpenStart(start);\n            tagName = this._input.substring(nameStart, this._index);\n            lowercaseTagName = tagName.toLowerCase();\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            while (this._peek !== $SLASH && this._peek !== $GT) {\n                this._consumeAttributeName();\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n                if (this._attemptCharCode($EQ)) {\n                    this._attemptCharCodeUntilFn(isNotWhitespace);\n                    this._consumeAttributeValue();\n                }\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n            }\n            this._consumeTagOpenEnd();\n        }\n        catch (e) {\n            if (e instanceof _ControlFlowError) {\n                // When the start tag is invalid, assume we want a \"<\"\n                this._restorePosition(savedPos);\n                // Back to back text tokens are merged at the end\n                this._beginToken(TokenType$1.TEXT, start);\n                this._endToken(['<']);\n                return;\n            }\n            throw e;\n        }\n        var /** @type {?} */ contentTokenType = this._getTagDefinition(tagName).contentType;\n        if (contentTokenType === TagContentType.RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, false);\n        }\n        else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, true);\n        }\n    };\n    /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawTextWithTagClose = function (lowercaseTagName, decodeEntities) {\n        var _this = this;\n        var /** @type {?} */ textToken = this._consumeRawText(decodeEntities, $LT, function () {\n            if (!_this._attemptCharCode($SLASH))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            return _this._attemptCharCode($GT);\n        });\n        this._beginToken(TokenType$1.TAG_CLOSE, textToken.sourceSpan.end);\n        this._endToken([null, lowercaseTagName]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenStart = function (start) {\n        this._beginToken(TokenType$1.TAG_OPEN_START, start);\n        var /** @type {?} */ parts = this._consumePrefixAndName();\n        this._endToken(parts);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeName = function () {\n        this._beginToken(TokenType$1.ATTR_NAME);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeValue = function () {\n        this._beginToken(TokenType$1.ATTR_VALUE);\n        var /** @type {?} */ value;\n        if (this._peek === $SQ || this._peek === $DQ) {\n            var /** @type {?} */ quoteChar = this._peek;\n            this._advance();\n            var /** @type {?} */ parts = [];\n            while (this._peek !== quoteChar) {\n                parts.push(this._readChar(true));\n            }\n            value = parts.join('');\n            this._advance();\n        }\n        else {\n            var /** @type {?} */ valueStart = this._index;\n            this._requireCharCodeUntilFn(isNameEnd, 1);\n            value = this._input.substring(valueStart, this._index);\n        }\n        this._endToken([this._processCarriageReturns(value)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenEnd = function () {\n        var /** @type {?} */ tokenType = this._attemptCharCode($SLASH) ? TokenType$1.TAG_OPEN_END_VOID : TokenType$1.TAG_OPEN_END;\n        this._beginToken(tokenType);\n        this._requireCharCode($GT);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagClose = function (start) {\n        this._beginToken(TokenType$1.TAG_CLOSE, start);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._requireCharCode($GT);\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormStart = function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_FORM_START);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ condition = this._readUntil($COMMA);\n        this._endToken([condition], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ type = this._readUntil($COMMA);\n        this._endToken([type], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseStart = function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_VALUE, this._getLocation());\n        var /** @type {?} */ value = this._readUntil($LBRACE).trim();\n        this._endToken([value], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_CASE_EXP_START);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseEnd = function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormEnd = function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeText = function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._beginToken(TokenType$1.TEXT, start);\n        var /** @type {?} */ parts = [];\n        do {\n            if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n                parts.push(this._interpolationConfig.start);\n                this._inInterpolation = true;\n            }\n            else if (this._interpolationConfig && this._inInterpolation &&\n                this._attemptStr(this._interpolationConfig.end)) {\n                parts.push(this._interpolationConfig.end);\n                this._inInterpolation = false;\n            }\n            else {\n                parts.push(this._readChar(true));\n            }\n        } while (!this._isTextEnd());\n        this._endToken([this._processCarriageReturns(parts.join(''))]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isTextEnd = function () {\n        if (this._peek === $LT || this._peek === $EOF) {\n            return true;\n        }\n        if (this._tokenizeIcu && !this._inInterpolation) {\n            if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                // start of an expansion form\n                return true;\n            }\n            if (this._peek === $RBRACE && this._isInExpansionCase()) {\n                // end of and expansion case\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._savePosition = function () {\n        return [this._peek, this._index, this._column, this._line, this.tokens.length];\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._readUntil = function (char) {\n        var /** @type {?} */ start = this._index;\n        this._attemptUntilChar(char);\n        return this._input.substring(start, this._index);\n    };\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    _Tokenizer.prototype._restorePosition = function (position) {\n        this._peek = position[0];\n        this._index = position[1];\n        this._column = position[2];\n        this._line = position[3];\n        var /** @type {?} */ nbTokens = position[4];\n        if (nbTokens < this.tokens.length) {\n            // remove any extra tokens\n            this.tokens = this.tokens.slice(0, nbTokens);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionCase = function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_CASE_EXP_START;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionForm = function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_FORM_START;\n    };\n    return _Tokenizer;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNotWhitespace(code) {\n    return !isWhitespace(code) || code === $EOF;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNameEnd(code) {\n    return isWhitespace(code) || code === $GT || code === $SLASH ||\n        code === $SQ || code === $DQ || code === $EQ;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isPrefixEnd(code) {\n    return (code < $a || $z < code) && (code < $A || $Z < code) &&\n        (code < $0 || code > $9);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigitEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiHexDigit(code);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNamedEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiLetter(code);\n}\n/**\n * @param {?} input\n * @param {?} offset\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction isExpansionFormStart(input, offset, interpolationConfig) {\n    var /** @type {?} */ isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n    return input.charCodeAt(offset) == $LBRACE && !isInterpolationStart;\n}\n/**\n * @param {?} peek\n * @return {?}\n */\nfunction isExpansionCaseStart(peek) {\n    return peek === $EQ || isAsciiLetter(peek);\n}\n/**\n * @param {?} code1\n * @param {?} code2\n * @return {?}\n */\nfunction compareCharCodeCaseInsensitive(code1, code2) {\n    return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction toUpperCaseCharCode(code) {\n    return code >= $a && code <= $z ? code - $a + $A : code;\n}\n/**\n * @param {?} srcTokens\n * @return {?}\n */\nfunction mergeTextTokens(srcTokens) {\n    var /** @type {?} */ dstTokens = [];\n    var /** @type {?} */ lastDstToken;\n    for (var /** @type {?} */ i = 0; i < srcTokens.length; i++) {\n        var /** @type {?} */ token = srcTokens[i];\n        if (lastDstToken && lastDstToken.type == TokenType$1.TEXT && token.type == TokenType$1.TEXT) {\n            lastDstToken.parts[0] += token.parts[0];\n            lastDstToken.sourceSpan.end = token.sourceSpan.end;\n        }\n        else {\n            lastDstToken = token;\n            dstTokens.push(lastDstToken);\n        }\n    }\n    return dstTokens;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TreeError = (function (_super) {\n    __extends(TreeError, _super);\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     */\n    function TreeError(elementName, span, msg) {\n        var _this = _super.call(this, span, msg) || this;\n        _this.elementName = elementName;\n        return _this;\n    }\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    TreeError.create = function (elementName, span, msg) {\n        return new TreeError(elementName, span, msg);\n    };\n    return TreeError;\n}(ParseError));\nvar ParseTreeResult = (function () {\n    /**\n     * @param {?} rootNodes\n     * @param {?} errors\n     */\n    function ParseTreeResult(rootNodes, errors) {\n        this.rootNodes = rootNodes;\n        this.errors = errors;\n    }\n    return ParseTreeResult;\n}());\nvar Parser$1 = (function () {\n    /**\n     * @param {?} getTagDefinition\n     */\n    function Parser$1(getTagDefinition) {\n        this.getTagDefinition = getTagDefinition;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser$1.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ tokensAndErrors = tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n        var /** @type {?} */ treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n        return new ParseTreeResult(treeAndErrors.rootNodes, ((tokensAndErrors.errors)).concat(treeAndErrors.errors));\n    };\n    return Parser$1;\n}());\nvar _TreeBuilder = (function () {\n    /**\n     * @param {?} tokens\n     * @param {?} getTagDefinition\n     */\n    function _TreeBuilder(tokens, getTagDefinition) {\n        this.tokens = tokens;\n        this.getTagDefinition = getTagDefinition;\n        this._index = -1;\n        this._rootNodes = [];\n        this._errors = [];\n        this._elementStack = [];\n        this._advance();\n    }\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype.build = function () {\n        while (this._peek.type !== TokenType$1.EOF) {\n            if (this._peek.type === TokenType$1.TAG_OPEN_START) {\n                this._consumeStartTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TAG_CLOSE) {\n                this._consumeEndTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.CDATA_START) {\n                this._closeVoidElement();\n                this._consumeCdata(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.COMMENT_START) {\n                this._closeVoidElement();\n                this._consumeComment(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TEXT || this._peek.type === TokenType$1.RAW_TEXT ||\n                this._peek.type === TokenType$1.ESCAPABLE_RAW_TEXT) {\n                this._closeVoidElement();\n                this._consumeText(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.EXPANSION_FORM_START) {\n                this._consumeExpansion(this._advance());\n            }\n            else {\n                // Skip all other tokens...\n                this._advance();\n            }\n        }\n        return new ParseTreeResult(this._rootNodes, this._errors);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advance = function () {\n        var /** @type {?} */ prev = this._peek;\n        if (this._index < this.tokens.length - 1) {\n            // Note: there is always an EOF token at the end\n            this._index++;\n        }\n        this._peek = this.tokens[this._index];\n        return prev;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advanceIf = function (type) {\n        if (this._peek.type === type) {\n            return this._advance();\n        }\n        return null;\n    };\n    /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeCdata = function (startToken) {\n        this._consumeText(this._advance());\n        this._advanceIf(TokenType$1.CDATA_END);\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeComment = function (token) {\n        var /** @type {?} */ text = this._advanceIf(TokenType$1.RAW_TEXT);\n        this._advanceIf(TokenType$1.COMMENT_END);\n        var /** @type {?} */ value = text != null ? text.parts[0].trim() : null;\n        this._addToParent(new Comment(value, token.sourceSpan));\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeExpansion = function (token) {\n        var /** @type {?} */ switchValue = this._advance();\n        var /** @type {?} */ type = this._advance();\n        var /** @type {?} */ cases = [];\n        // read =\n        while (this._peek.type === TokenType$1.EXPANSION_CASE_VALUE) {\n            var /** @type {?} */ expCase = this._parseExpansionCase();\n            if (!expCase)\n                return; // error\n            cases.push(expCase);\n        }\n        // read the final }\n        if (this._peek.type !== TokenType$1.EXPANSION_FORM_END) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n            return;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n        this._addToParent(new Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n        this._advance();\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._parseExpansionCase = function () {\n        var /** @type {?} */ value = this._advance();\n        // read {\n        if (this._peek.type !== TokenType$1.EXPANSION_CASE_EXP_START) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '{'.\"));\n            return null;\n        }\n        // read until }\n        var /** @type {?} */ start = this._advance();\n        var /** @type {?} */ exp = this._collectExpansionExpTokens(start);\n        if (!exp)\n            return null;\n        var /** @type {?} */ end = this._advance();\n        exp.push(new Token$1(TokenType$1.EOF, [], end.sourceSpan));\n        // parse everything in between { and }\n        var /** @type {?} */ parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n        if (parsedExp.errors.length > 0) {\n            this._errors = this._errors.concat(/** @type {?} */ (parsedExp.errors));\n            return null;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n        var /** @type {?} */ expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n        return new ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _TreeBuilder.prototype._collectExpansionExpTokens = function (start) {\n        var /** @type {?} */ exp = [];\n        var /** @type {?} */ expansionFormStack = [TokenType$1.EXPANSION_CASE_EXP_START];\n        while (true) {\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_START ||\n                this._peek.type === TokenType$1.EXPANSION_CASE_EXP_START) {\n                expansionFormStack.push(this._peek.type);\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_CASE_EXP_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_CASE_EXP_START)) {\n                    expansionFormStack.pop();\n                    if (expansionFormStack.length == 0)\n                        return exp;\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_FORM_START)) {\n                    expansionFormStack.pop();\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EOF) {\n                this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                return null;\n            }\n            exp.push(this._advance());\n        }\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeText = function (token) {\n        var /** @type {?} */ text = token.parts[0];\n        if (text.length > 0 && text[0] == '\\n') {\n            var /** @type {?} */ parent = this._getParentElement();\n            if (parent != null && parent.children.length == 0 &&\n                this.getTagDefinition(parent.name).ignoreFirstLf) {\n                text = text.substring(1);\n            }\n        }\n        if (text.length > 0) {\n            this._addToParent(new Text(text, token.sourceSpan));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._closeVoidElement = function () {\n        if (this._elementStack.length > 0) {\n            var /** @type {?} */ el = this._elementStack[this._elementStack.length - 1];\n            if (this.getTagDefinition(el.name).isVoid) {\n                this._elementStack.pop();\n            }\n        }\n    };\n    /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeStartTag = function (startTagToken) {\n        var /** @type {?} */ prefix = startTagToken.parts[0];\n        var /** @type {?} */ name = startTagToken.parts[1];\n        var /** @type {?} */ attrs = [];\n        while (this._peek.type === TokenType$1.ATTR_NAME) {\n            attrs.push(this._consumeAttr(this._advance()));\n        }\n        var /** @type {?} */ fullName = this._getElementFullName(prefix, name, this._getParentElement());\n        var /** @type {?} */ selfClosing = false;\n        // Note: There could have been a tokenizer error\n        // so that we don't get a token for the end tag...\n        if (this._peek.type === TokenType$1.TAG_OPEN_END_VOID) {\n            this._advance();\n            selfClosing = true;\n            var /** @type {?} */ tagDef = this.getTagDefinition(fullName);\n            if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n                this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\n            }\n        }\n        else if (this._peek.type === TokenType$1.TAG_OPEN_END) {\n            this._advance();\n            selfClosing = false;\n        }\n        var /** @type {?} */ end = this._peek.sourceSpan.start;\n        var /** @type {?} */ span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n        var /** @type {?} */ el = new Element(fullName, attrs, [], span, span, null);\n        this._pushElement(el);\n        if (selfClosing) {\n            this._popElement(fullName);\n            el.endSourceSpan = span;\n        }\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _TreeBuilder.prototype._pushElement = function (el) {\n        if (this._elementStack.length > 0) {\n            var /** @type {?} */ parentEl = this._elementStack[this._elementStack.length - 1];\n            if (this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n                this._elementStack.pop();\n            }\n        }\n        var /** @type {?} */ tagDef = this.getTagDefinition(el.name);\n        var _a = this._getParentElementSkippingContainers(), parent = _a.parent, container = _a.container;\n        if (parent && tagDef.requireExtraParent(parent.name)) {\n            var /** @type {?} */ newParent = new Element(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n            this._insertBeforeContainer(parent, container, newParent);\n        }\n        this._addToParent(el);\n        this._elementStack.push(el);\n    };\n    /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeEndTag = function (endTagToken) {\n        var /** @type {?} */ fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n        if (this._getParentElement()) {\n            this._getParentElement().endSourceSpan = endTagToken.sourceSpan;\n        }\n        if (this.getTagDefinition(fullName).isVoid) {\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n        }\n        else if (!this._popElement(fullName)) {\n            var /** @type {?} */ errMsg = \"Unexpected closing tag \\\"\" + fullName + \"\\\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags\";\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n        }\n    };\n    /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._popElement = function (fullName) {\n        for (var /** @type {?} */ stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n            var /** @type {?} */ el = this._elementStack[stackIndex];\n            if (el.name == fullName) {\n                this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n                return true;\n            }\n            if (!this.getTagDefinition(el.name).closedByParent) {\n                return false;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeAttr = function (attrName) {\n        var /** @type {?} */ fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n        var /** @type {?} */ end = attrName.sourceSpan.end;\n        var /** @type {?} */ value = '';\n        var /** @type {?} */ valueSpan;\n        if (this._peek.type === TokenType$1.ATTR_VALUE) {\n            var /** @type {?} */ valueToken = this._advance();\n            value = valueToken.parts[0];\n            end = valueToken.sourceSpan.end;\n            valueSpan = valueToken.sourceSpan;\n        }\n        return new Attribute$1(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElement = function () {\n        return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n    };\n    /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElementSkippingContainers = function () {\n        var /** @type {?} */ container = null;\n        for (var /** @type {?} */ i = this._elementStack.length - 1; i >= 0; i--) {\n            if (this._elementStack[i].name !== 'ng-container') {\n                return { parent: this._elementStack[i], container: container };\n            }\n            container = this._elementStack[i];\n        }\n        return { parent: this._elementStack[this._elementStack.length - 1], container: container };\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._addToParent = function (node) {\n        var /** @type {?} */ parent = this._getParentElement();\n        if (parent != null) {\n            parent.children.push(node);\n        }\n        else {\n            this._rootNodes.push(node);\n        }\n    };\n    /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._insertBeforeContainer = function (parent, container, node) {\n        if (!container) {\n            this._addToParent(node);\n            this._elementStack.push(node);\n        }\n        else {\n            if (parent) {\n                // replace the container with the new node in the children\n                var /** @type {?} */ index = parent.children.indexOf(container);\n                parent.children[index] = node;\n            }\n            else {\n                this._rootNodes.push(node);\n            }\n            node.children.push(container);\n            this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n        }\n    };\n    /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getElementFullName = function (prefix, localName, parentElement) {\n        if (prefix == null) {\n            prefix = this.getTagDefinition(localName).implicitNamespacePrefix;\n            if (prefix == null && parentElement != null) {\n                prefix = getNsPrefix(parentElement.name);\n            }\n        }\n        return mergeNsAndName(prefix, localName);\n    };\n    return _TreeBuilder;\n}());\n/**\n * @param {?} stack\n * @param {?} element\n * @return {?}\n */\nfunction lastOnStack(stack, element) {\n    return stack.length > 0 && stack[stack.length - 1] === element;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Message = (function () {\n    /**\n     * @param {?} nodes message AST\n     * @param {?} placeholders maps placeholder names to static content\n     * @param {?} placeholderToMessage maps placeholder names to messages (used for nested ICU messages)\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     */\n    function Message(nodes, placeholders, placeholderToMessage, meaning, description, id) {\n        this.nodes = nodes;\n        this.placeholders = placeholders;\n        this.placeholderToMessage = placeholderToMessage;\n        this.meaning = meaning;\n        this.description = description;\n        this.id = id;\n    }\n    return Message;\n}());\nvar Text$1 = (function () {\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function Text$1(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Text$1.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n    return Text$1;\n}());\nvar Container = (function () {\n    /**\n     * @param {?} children\n     * @param {?} sourceSpan\n     */\n    function Container(children, sourceSpan) {\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Container.prototype.visit = function (visitor, context) { return visitor.visitContainer(this, context); };\n    return Container;\n}());\nvar Icu = (function () {\n    /**\n     * @param {?} expression\n     * @param {?} type\n     * @param {?} cases\n     * @param {?} sourceSpan\n     */\n    function Icu(expression, type, cases, sourceSpan) {\n        this.expression = expression;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Icu.prototype.visit = function (visitor, context) { return visitor.visitIcu(this, context); };\n    return Icu;\n}());\nvar TagPlaceholder = (function () {\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} startName\n     * @param {?} closeName\n     * @param {?} children\n     * @param {?} isVoid\n     * @param {?} sourceSpan\n     */\n    function TagPlaceholder(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n        this.tag = tag;\n        this.attrs = attrs;\n        this.startName = startName;\n        this.closeName = closeName;\n        this.children = children;\n        this.isVoid = isVoid;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    TagPlaceholder.prototype.visit = function (visitor, context) { return visitor.visitTagPlaceholder(this, context); };\n    return TagPlaceholder;\n}());\nvar Placeholder = (function () {\n    /**\n     * @param {?} value\n     * @param {?} name\n     * @param {?} sourceSpan\n     */\n    function Placeholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Placeholder.prototype.visit = function (visitor, context) { return visitor.visitPlaceholder(this, context); };\n    return Placeholder;\n}());\nvar IcuPlaceholder = (function () {\n    /**\n     * @param {?} value\n     * @param {?} name\n     * @param {?} sourceSpan\n     */\n    function IcuPlaceholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    IcuPlaceholder.prototype.visit = function (visitor, context) { return visitor.visitIcuPlaceholder(this, context); };\n    return IcuPlaceholder;\n}());\nvar CloneVisitor = (function () {\n    function CloneVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitText = function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var /** @type {?} */ children = container.children.map(function (n) { return n.visit(_this, context); });\n        return new Container(children, container.sourceSpan);\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = {};\n        Object.keys(icu.cases).forEach(function (key) { return cases[key] = icu.cases[key].visit(_this, context); });\n        var /** @type {?} */ msg = new Icu(icu.expression, icu.type, cases, icu.sourceSpan);\n        msg.expressionPlaceholder = icu.expressionPlaceholder;\n        return msg;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, context); });\n        return new TagPlaceholder(ph.tag, ph.attrs, ph.startName, ph.closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitPlaceholder = function (ph, context) {\n        return new Placeholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        return new IcuPlaceholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    return CloneVisitor;\n}());\nvar RecurseVisitor = (function () {\n    function RecurseVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitText = function (text, context) { };\n    \n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        container.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        Object.keys(icu.cases).forEach(function (k) { icu.cases[k].visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        ph.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitPlaceholder = function (ph, context) { };\n    \n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcuPlaceholder = function (ph, context) { };\n    \n    return RecurseVisitor;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TAG_TO_PLACEHOLDER_NAMES = {\n    'A': 'LINK',\n    'B': 'BOLD_TEXT',\n    'BR': 'LINE_BREAK',\n    'EM': 'EMPHASISED_TEXT',\n    'H1': 'HEADING_LEVEL1',\n    'H2': 'HEADING_LEVEL2',\n    'H3': 'HEADING_LEVEL3',\n    'H4': 'HEADING_LEVEL4',\n    'H5': 'HEADING_LEVEL5',\n    'H6': 'HEADING_LEVEL6',\n    'HR': 'HORIZONTAL_RULE',\n    'I': 'ITALIC_TEXT',\n    'LI': 'LIST_ITEM',\n    'LINK': 'MEDIA_LINK',\n    'OL': 'ORDERED_LIST',\n    'P': 'PARAGRAPH',\n    'Q': 'QUOTATION',\n    'S': 'STRIKETHROUGH_TEXT',\n    'SMALL': 'SMALL_TEXT',\n    'SUB': 'SUBSTRIPT',\n    'SUP': 'SUPERSCRIPT',\n    'TBODY': 'TABLE_BODY',\n    'TD': 'TABLE_CELL',\n    'TFOOT': 'TABLE_FOOTER',\n    'TH': 'TABLE_HEADER_CELL',\n    'THEAD': 'TABLE_HEADER',\n    'TR': 'TABLE_ROW',\n    'TT': 'MONOSPACED_TEXT',\n    'U': 'UNDERLINED_TEXT',\n    'UL': 'UNORDERED_LIST',\n};\n/**\n * Creates unique names for placeholder with different content.\n *\n * Returns the same placeholder name when the content is identical.\n *\n * \\@internal\n */\nvar PlaceholderRegistry = (function () {\n    function PlaceholderRegistry() {\n        this._placeHolderNameCounts = {};\n        this._signatureToName = {};\n    }\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getStartTagPlaceholderName = function (tag, attrs, isVoid) {\n        var /** @type {?} */ signature = this._hashTag(tag, attrs, isVoid);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(isVoid ? baseName : \"START_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getCloseTagPlaceholderName = function (tag) {\n        var /** @type {?} */ signature = this._hashClosingTag(tag);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(\"CLOSE_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getPlaceholderName = function (name, content) {\n        var /** @type {?} */ upperName = name.toUpperCase();\n        var /** @type {?} */ signature = \"PH: \" + upperName + \"=\" + content;\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ uniqueName = this._generateUniqueName(upperName);\n        this._signatureToName[signature] = uniqueName;\n        return uniqueName;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getUniquePlaceholder = function (name) {\n        return this._generateUniqueName(name.toUpperCase());\n    };\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashTag = function (tag, attrs, isVoid) {\n        var /** @type {?} */ start = \"<\" + tag;\n        var /** @type {?} */ strAttrs = Object.keys(attrs).sort().map(function (name) { return \" \" + name + \"=\" + attrs[name]; }).join('');\n        var /** @type {?} */ end = isVoid ? '/>' : \"></\" + tag + \">\";\n        return start + strAttrs + end;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashClosingTag = function (tag) { return this._hashTag(\"/\" + tag, {}, false); };\n    /**\n     * @param {?} base\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._generateUniqueName = function (base) {\n        var /** @type {?} */ seen = this._placeHolderNameCounts.hasOwnProperty(base);\n        if (!seen) {\n            this._placeHolderNameCounts[base] = 1;\n            return base;\n        }\n        var /** @type {?} */ id = this._placeHolderNameCounts[base];\n        this._placeHolderNameCounts[base] = id + 1;\n        return base + \"_\" + id;\n    };\n    return PlaceholderRegistry;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _expParser = new Parser(new Lexer());\n/**\n * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction createI18nMessageFactory(interpolationConfig) {\n    var /** @type {?} */ visitor = new _I18nVisitor(_expParser, interpolationConfig);\n    return function (nodes, meaning, description, id) { return visitor.toI18nMessage(nodes, meaning, description, id); };\n}\nvar _I18nVisitor = (function () {\n    /**\n     * @param {?} _expressionParser\n     * @param {?} _interpolationConfig\n     */\n    function _I18nVisitor(_expressionParser, _interpolationConfig) {\n        this._expressionParser = _expressionParser;\n        this._interpolationConfig = _interpolationConfig;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    _I18nVisitor.prototype.toI18nMessage = function (nodes, meaning, description, id) {\n        this._isIcu = nodes.length == 1 && nodes[0] instanceof Expansion;\n        this._icuDepth = 0;\n        this._placeholderRegistry = new PlaceholderRegistry();\n        this._placeholderToContent = {};\n        this._placeholderToMessage = {};\n        var /** @type {?} */ i18nodes = visitAll(this, nodes, {});\n        return new Message(i18nodes, this._placeholderToContent, this._placeholderToMessage, meaning, description, id);\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitElement = function (el, context) {\n        var /** @type {?} */ children = visitAll(this, el.children);\n        var /** @type {?} */ attrs = {};\n        el.attrs.forEach(function (attr) {\n            // Do not visit the attributes, translatable ones are top-level ASTs\n            attrs[attr.name] = attr.value;\n        });\n        var /** @type {?} */ isVoid = getHtmlTagDefinition(el.name).isVoid;\n        var /** @type {?} */ startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n        this._placeholderToContent[startPhName] = el.sourceSpan.toString();\n        var /** @type {?} */ closePhName = '';\n        if (!isVoid) {\n            closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n            this._placeholderToContent[closePhName] = \"</\" + el.name + \">\";\n        }\n        return new TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, el.sourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitAttribute = function (attribute, context) {\n        return this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitText = function (text, context) {\n        return this._visitTextWithInterpolation(text.value, text.sourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitComment = function (comment, context) { return null; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansion = function (icu, context) {\n        var _this = this;\n        this._icuDepth++;\n        var /** @type {?} */ i18nIcuCases = {};\n        var /** @type {?} */ i18nIcu = new Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n        icu.cases.forEach(function (caze) {\n            i18nIcuCases[caze.value] = new Container(caze.expression.map(function (node) { return node.visit(_this, {}); }), caze.expSourceSpan);\n        });\n        this._icuDepth--;\n        if (this._isIcu || this._icuDepth > 0) {\n            // Returns an ICU node when:\n            // - the message (vs a part of the message) is an ICU message, or\n            // - the ICU message is nested.\n            var /** @type {?} */ expPh = this._placeholderRegistry.getUniquePlaceholder(\"VAR_\" + icu.type);\n            i18nIcu.expressionPlaceholder = expPh;\n            this._placeholderToContent[expPh] = icu.switchValue;\n            return i18nIcu;\n        }\n        // Else returns a placeholder\n        // ICU placeholders should not be replaced with their original content but with the their\n        // translations. We need to create a new visitor (they are not re-entrant) to compute the\n        // message id.\n        // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n        var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n        var /** @type {?} */ visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n        this._placeholderToMessage[phName] = visitor.toI18nMessage([icu], '', '', '');\n        return new IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansionCase = function (icuCase, context) {\n        throw new Error('Unreachable code');\n    };\n    /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _I18nVisitor.prototype._visitTextWithInterpolation = function (text, sourceSpan) {\n        var /** @type {?} */ splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n        if (!splitInterpolation) {\n            // No expression, return a single text\n            return new Text$1(text, sourceSpan);\n        }\n        // Return a group of text + expressions\n        var /** @type {?} */ nodes = [];\n        var /** @type {?} */ container = new Container(nodes, sourceSpan);\n        var _a = this._interpolationConfig, sDelimiter = _a.start, eDelimiter = _a.end;\n        for (var /** @type {?} */ i = 0; i < splitInterpolation.strings.length - 1; i++) {\n            var /** @type {?} */ expression = splitInterpolation.expressions[i];\n            var /** @type {?} */ baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n            var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n            if (splitInterpolation.strings[i].length) {\n                // No need to add empty strings\n                nodes.push(new Text$1(splitInterpolation.strings[i], sourceSpan));\n            }\n            nodes.push(new Placeholder(expression, phName, sourceSpan));\n            this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n        }\n        // The last index contains no expression\n        var /** @type {?} */ lastStringIdx = splitInterpolation.strings.length - 1;\n        if (splitInterpolation.strings[lastStringIdx].length) {\n            nodes.push(new Text$1(splitInterpolation.strings[lastStringIdx], sourceSpan));\n        }\n        return container;\n    };\n    return _I18nVisitor;\n}());\nvar _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*\"([\\s\\S]*?)\"[\\s\\S]*\\)/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction _extractPlaceholderName(input) {\n    return input.split(_CUSTOM_PH_EXP)[1];\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An i18n error.\n */\nvar I18nError = (function (_super) {\n    __extends(I18nError, _super);\n    /**\n     * @param {?} span\n     * @param {?} msg\n     */\n    function I18nError(span, msg) {\n        return _super.call(this, span, msg) || this;\n    }\n    return I18nError;\n}(ParseError));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _I18N_ATTR = 'i18n';\nvar _I18N_ATTR_PREFIX = 'i18n-';\nvar _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\nvar MEANING_SEPARATOR = '|';\nvar ID_SEPARATOR = '@@';\n/**\n * Extract translatable messages from an html AST\n * @param {?} nodes\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.extract(nodes, interpolationConfig);\n}\n/**\n * @param {?} nodes\n * @param {?} translations\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.merge(nodes, translations, interpolationConfig);\n}\nvar ExtractionResult = (function () {\n    /**\n     * @param {?} messages\n     * @param {?} errors\n     */\n    function ExtractionResult(messages, errors) {\n        this.messages = messages;\n        this.errors = errors;\n    }\n    return ExtractionResult;\n}());\nvar _VisitorMode = {};\n_VisitorMode.Extract = 0;\n_VisitorMode.Merge = 1;\n_VisitorMode[_VisitorMode.Extract] = \"Extract\";\n_VisitorMode[_VisitorMode.Merge] = \"Merge\";\n/**\n * This Visitor is used:\n * 1. to extract all the translatable strings from an html AST (see `extract()`),\n * 2. to replace the translatable strings with the actual translations (see `merge()`)\n *\n * \\@internal\n */\nvar _Visitor = (function () {\n    /**\n     * @param {?} _implicitTags\n     * @param {?} _implicitAttrs\n     */\n    function _Visitor(_implicitTags, _implicitAttrs) {\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n    }\n    /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.extract = function (nodes, interpolationConfig) {\n        var _this = this;\n        this._init(_VisitorMode.Extract, interpolationConfig);\n        nodes.forEach(function (node) { return node.visit(_this, null); });\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ExtractionResult(this._messages, this._errors);\n    };\n    /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.merge = function (nodes, translations, interpolationConfig) {\n        this._init(_VisitorMode.Merge, interpolationConfig);\n        this._translations = translations;\n        // Construct a single fake root element\n        var /** @type {?} */ wrapper = new Element('wrapper', [], nodes, null, null, null);\n        var /** @type {?} */ translatedNode = wrapper.visit(this, null);\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ParseTreeResult(translatedNode.children, this._errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansionCase = function (icuCase, context) {\n        // Parse cases for translatable html attributes\n        var /** @type {?} */ expression = visitAll(this, icuCase.expression, context);\n        if (this._mode === _VisitorMode.Merge) {\n            return new ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n        }\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansion = function (icu, context) {\n        this._mayBeAddBlockChildren(icu);\n        var /** @type {?} */ wasInIcu = this._inIcu;\n        if (!this._inIcu) {\n            // nested ICU messages should not be extracted but top-level translated as a whole\n            if (this._isInTranslatableSection) {\n                this._addMessage([icu]);\n            }\n            this._inIcu = true;\n        }\n        var /** @type {?} */ cases = visitAll(this, icu.cases, context);\n        if (this._mode === _VisitorMode.Merge) {\n            icu = new Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n        }\n        this._inIcu = wasInIcu;\n        return icu;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitComment = function (comment, context) {\n        var /** @type {?} */ isOpening = _isOpeningComment(comment);\n        if (isOpening && this._isInTranslatableSection) {\n            this._reportError(comment, 'Could not start a block inside a translatable section');\n            return;\n        }\n        var /** @type {?} */ isClosing = _isClosingComment(comment);\n        if (isClosing && !this._inI18nBlock) {\n            this._reportError(comment, 'Trying to close an unopened block');\n            return;\n        }\n        if (!this._inI18nNode && !this._inIcu) {\n            if (!this._inI18nBlock) {\n                if (isOpening) {\n                    this._inI18nBlock = true;\n                    this._blockStartDepth = this._depth;\n                    this._blockChildren = [];\n                    this._blockMeaningAndDesc = comment.value.replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n                    this._openTranslatableSection(comment);\n                }\n            }\n            else {\n                if (isClosing) {\n                    if (this._depth == this._blockStartDepth) {\n                        this._closeTranslatableSection(comment, this._blockChildren);\n                        this._inI18nBlock = false;\n                        var /** @type {?} */ message = this._addMessage(this._blockChildren, this._blockMeaningAndDesc);\n                        // merge attributes in sections\n                        var /** @type {?} */ nodes = this._translateMessage(comment, message);\n                        return visitAll(this, nodes);\n                    }\n                    else {\n                        this._reportError(comment, 'I18N blocks should not cross element boundaries');\n                        return;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = function (text, context) {\n        if (this._isInTranslatableSection) {\n            this._mayBeAddBlockChildren(text);\n        }\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitElement = function (el, context) {\n        var _this = this;\n        this._mayBeAddBlockChildren(el);\n        this._depth++;\n        var /** @type {?} */ wasInI18nNode = this._inI18nNode;\n        var /** @type {?} */ wasInImplicitNode = this._inImplicitNode;\n        var /** @type {?} */ childNodes = [];\n        var /** @type {?} */ translatedChildNodes;\n        // Extract:\n        // - top level nodes with the (implicit) \"i18n\" attribute if not already in a section\n        // - ICU messages\n        var /** @type {?} */ i18nAttr = _getI18nAttr(el);\n        var /** @type {?} */ i18nMeta = i18nAttr ? i18nAttr.value : '';\n        var /** @type {?} */ isImplicit = this._implicitTags.some(function (tag) { return el.name === tag; }) && !this._inIcu &&\n            !this._isInTranslatableSection;\n        var /** @type {?} */ isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n        this._inImplicitNode = wasInImplicitNode || isImplicit;\n        if (!this._isInTranslatableSection && !this._inIcu) {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._inI18nNode = true;\n                var /** @type {?} */ message = this._addMessage(el.children, i18nMeta);\n                translatedChildNodes = this._translateMessage(el, message);\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                var /** @type {?} */ isTranslatable = i18nAttr || isTopLevelImplicit;\n                if (isTranslatable)\n                    this._openTranslatableSection(el);\n                visitAll(this, el.children);\n                if (isTranslatable)\n                    this._closeTranslatableSection(el, el.children);\n            }\n        }\n        else {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                // Descend into child nodes for extraction\n                visitAll(this, el.children);\n            }\n        }\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ visitNodes = translatedChildNodes || el.children;\n            visitNodes.forEach(function (child) {\n                var /** @type {?} */ visited = child.visit(_this, context);\n                if (visited && !_this._isInTranslatableSection) {\n                    // Do not add the children from translatable sections (= i18n blocks here)\n                    // They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)\n                    childNodes = childNodes.concat(visited);\n                }\n            });\n        }\n        this._visitAttributesOf(el);\n        this._depth--;\n        this._inI18nNode = wasInI18nNode;\n        this._inImplicitNode = wasInImplicitNode;\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ translatedAttrs = this._translateAttributes(el);\n            return new Element(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitAttribute = function (attribute, context) {\n        throw new Error('unreachable code');\n    };\n    /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype._init = function (mode, interpolationConfig) {\n        this._mode = mode;\n        this._inI18nBlock = false;\n        this._inI18nNode = false;\n        this._depth = 0;\n        this._inIcu = false;\n        this._msgCountAtSectionStart = void 0;\n        this._errors = [];\n        this._messages = [];\n        this._inImplicitNode = false;\n        this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._visitAttributesOf = function (el) {\n        var _this = this;\n        var /** @type {?} */ explicitAttrNameToValue = {};\n        var /** @type {?} */ implicitAttrNames = this._implicitAttrs[el.name] || [];\n        el.attrs.filter(function (attr) { return attr.name.startsWith(_I18N_ATTR_PREFIX); })\n            .forEach(function (attr) { return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n            attr.value; });\n        el.attrs.forEach(function (attr) {\n            if (attr.name in explicitAttrNameToValue) {\n                _this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n            }\n            else if (implicitAttrNames.some(function (name) { return attr.name === name; })) {\n                _this._addMessage([attr]);\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    _Visitor.prototype._addMessage = function (ast, msgMeta) {\n        if (ast.length == 0 ||\n            ast.length == 1 && ast[0] instanceof Attribute$1 && !((ast[0])).value) {\n            // Do not create empty messages\n            return;\n        }\n        var _a = _parseMessageMeta(msgMeta), meaning = _a.meaning, description = _a.description, id = _a.id;\n        var /** @type {?} */ message = this._createI18nMessage(ast, meaning, description, id);\n        this._messages.push(message);\n        return message;\n    };\n    /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    _Visitor.prototype._translateMessage = function (el, message) {\n        if (message && this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ nodes = this._translations.get(message);\n            if (nodes) {\n                return nodes;\n            }\n            this._reportError(el, \"Translation unavailable for message id=\\\"\" + this._translations.digest(message) + \"\\\"\");\n        }\n        return [];\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._translateAttributes = function (el) {\n        var _this = this;\n        var /** @type {?} */ attributes = el.attrs;\n        var /** @type {?} */ i18nParsedMessageMeta = {};\n        attributes.forEach(function (attr) {\n            if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                    _parseMessageMeta(attr.value);\n            }\n        });\n        var /** @type {?} */ translatedAttributes = [];\n        attributes.forEach(function (attr) {\n            if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                // strip i18n specific attributes\n                return;\n            }\n            if (attr.value && attr.value != '' && i18nParsedMessageMeta.hasOwnProperty(attr.name)) {\n                var _a = i18nParsedMessageMeta[attr.name], meaning = _a.meaning, description = _a.description, id = _a.id;\n                var /** @type {?} */ message = _this._createI18nMessage([attr], meaning, description, id);\n                var /** @type {?} */ nodes = _this._translations.get(message);\n                if (nodes) {\n                    if (nodes.length == 0) {\n                        translatedAttributes.push(new Attribute$1(attr.name, '', attr.sourceSpan));\n                    }\n                    else if (nodes[0] instanceof Text) {\n                        var /** @type {?} */ value = ((nodes[0])).value;\n                        translatedAttributes.push(new Attribute$1(attr.name, value, attr.sourceSpan));\n                    }\n                    else {\n                        _this._reportError(el, \"Unexpected translation for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                    }\n                }\n                else {\n                    _this._reportError(el, \"Translation unavailable for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                }\n            }\n            else {\n                translatedAttributes.push(attr);\n            }\n        });\n        return translatedAttributes;\n    };\n    /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._mayBeAddBlockChildren = function (node) {\n        if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n            this._blockChildren.push(node);\n        }\n    };\n    /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._openTranslatableSection = function (node) {\n        if (this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section start');\n        }\n        else {\n            this._msgCountAtSectionStart = this._messages.length;\n        }\n    };\n    Object.defineProperty(_Visitor.prototype, \"_isInTranslatableSection\", {\n        /**\n         * A translatable section could be:\n         * - the content of translatable element,\n         * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n         * @return {?}\n         */\n        get: function () {\n            return this._msgCountAtSectionStart !== void 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    _Visitor.prototype._closeTranslatableSection = function (node, directChildren) {\n        if (!this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section end');\n            return;\n        }\n        var /** @type {?} */ startIndex = this._msgCountAtSectionStart;\n        var /** @type {?} */ significantChildren = directChildren.reduce(function (count, node) { return count + (node instanceof Comment ? 0 : 1); }, 0);\n        if (significantChildren == 1) {\n            for (var /** @type {?} */ i = this._messages.length - 1; i >= startIndex; i--) {\n                var /** @type {?} */ ast = this._messages[i].nodes;\n                if (!(ast.length == 1 && ast[0] instanceof Text$1)) {\n                    this._messages.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this._msgCountAtSectionStart = void 0;\n    };\n    /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    _Visitor.prototype._reportError = function (node, msg) {\n        this._errors.push(new I18nError(node.sourceSpan, msg));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isOpeningComment(n) {\n    return n instanceof Comment && n.value && n.value.startsWith('i18n');\n}\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isClosingComment(n) {\n    return n instanceof Comment && n.value && n.value === '/i18n';\n}\n/**\n * @param {?} p\n * @return {?}\n */\nfunction _getI18nAttr(p) {\n    return p.attrs.find(function (attr) { return attr.name === _I18N_ATTR; }) || null;\n}\n/**\n * @param {?} i18n\n * @return {?}\n */\nfunction _parseMessageMeta(i18n) {\n    if (!i18n)\n        return { meaning: '', description: '', id: '' };\n    var /** @type {?} */ idIndex = i18n.indexOf(ID_SEPARATOR);\n    var /** @type {?} */ descIndex = i18n.indexOf(MEANING_SEPARATOR);\n    var _a = (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''], meaningAndDesc = _a[0], id = _a[1];\n    var _b = (descIndex > -1) ?\n        [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n        ['', meaningAndDesc], meaning = _b[0], description = _b[1];\n    return { meaning: meaning, description: description, id: id };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlTagDefinition = (function () {\n    function XmlTagDefinition() {\n        this.closedByParent = false;\n        this.contentType = TagContentType.PARSABLE_DATA;\n        this.isVoid = false;\n        this.ignoreFirstLf = false;\n        this.canSelfClose = true;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.requireExtraParent = function (currentParent) { return false; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.isClosedByChild = function (name) { return false; };\n    return XmlTagDefinition;\n}());\nvar _TAG_DEFINITION = new XmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getXmlTagDefinition(tagName) {\n    return _TAG_DEFINITION;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlParser = (function (_super) {\n    __extends(XmlParser, _super);\n    function XmlParser() {\n        return _super.call(this, getXmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    XmlParser.prototype.parse = function (source, url, parseExpansionForms) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms, null);\n    };\n    return XmlParser;\n}(Parser$1));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest(message) {\n    return message.id || sha1(serializeNodes(message.nodes).join('') + (\"[\" + message.meaning + \"]\"));\n}\n/**\n * @param {?} message\n * @return {?}\n */\nfunction decimalDigest(message) {\n    if (message.id) {\n        return message.id;\n    }\n    var /** @type {?} */ visitor = new _SerializerIgnoreIcuExpVisitor();\n    var /** @type {?} */ parts = message.nodes.map(function (a) { return a.visit(visitor, null); });\n    return computeMsgId(parts.join(''), message.meaning);\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * \\@internal\n */\nvar _SerializerVisitor = (function () {\n    function _SerializerVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitText = function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        return \"[\" + container.children.map(function (child) { return child.visit(_this); }).join(', ') + \"]\";\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        return \"{\" + icu.expression + \", \" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        return ph.isVoid ?\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\"/>\" :\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\">\" + ph.children.map(function (child) { return child.visit(_this); }).join(', ') + \"</ph name=\\\"\" + ph.closeName + \"\\\">\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitPlaceholder = function (ph, context) {\n        return ph.value ? \"<ph name=\\\"\" + ph.name + \"\\\">\" + ph.value + \"</ph>\" : \"<ph name=\\\"\" + ph.name + \"\\\"/>\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        return \"<ph icu name=\\\"\" + ph.name + \"\\\">\" + ph.value.visit(this) + \"</ph>\";\n    };\n    return _SerializerVisitor;\n}());\nvar serializerVisitor = new _SerializerVisitor();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serializeNodes(nodes) {\n    return nodes.map(function (a) { return a.visit(serializerVisitor, null); });\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n *\n * \\@internal\n */\nvar _SerializerIgnoreIcuExpVisitor = (function (_super) {\n    __extends(_SerializerIgnoreIcuExpVisitor, _super);\n    function _SerializerIgnoreIcuExpVisitor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerIgnoreIcuExpVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // Do not take the expression into account\n        return \"{\" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    return _SerializerIgnoreIcuExpVisitor;\n}(_SerializerVisitor));\n/**\n * Compute the SHA1 of the given string\n *\n * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n * @param {?} str\n * @return {?}\n */\nfunction sha1(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var /** @type {?} */ words32 = stringToWords32(utf8, Endian.Big);\n    var /** @type {?} */ len = utf8.length * 8;\n    var /** @type {?} */ w = new Array(80);\n    var _a = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], a = _a[0], b = _a[1], c = _a[2], d = _a[3], e = _a[4];\n    words32[len >> 5] |= 0x80 << (24 - len % 32);\n    words32[((len + 64 >> 9) << 4) + 15] = len;\n    for (var /** @type {?} */ i = 0; i < words32.length; i += 16) {\n        var _b = [a, b, c, d, e], h0 = _b[0], h1 = _b[1], h2 = _b[2], h3 = _b[3], h4 = _b[4];\n        for (var /** @type {?} */ j = 0; j < 80; j++) {\n            if (j < 16) {\n                w[j] = words32[i + j];\n            }\n            else {\n                w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            }\n            var _c = fk(j, b, c, d), f = _c[0], k = _c[1];\n            var /** @type {?} */ temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n            _d = [d, c, rol32(b, 30), a, temp], e = _d[0], d = _d[1], c = _d[2], b = _d[3], a = _d[4];\n        }\n        _e = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)], a = _e[0], b = _e[1], c = _e[2], d = _e[3], e = _e[4];\n    }\n    return byteStringToHexString(words32ToByteString([a, b, c, d, e]));\n    var _d, _e;\n}\n/**\n * @param {?} index\n * @param {?} b\n * @param {?} c\n * @param {?} d\n * @return {?}\n */\nfunction fk(index, b, c, d) {\n    if (index < 20) {\n        return [(b & c) | (~b & d), 0x5a827999];\n    }\n    if (index < 40) {\n        return [b ^ c ^ d, 0x6ed9eba1];\n    }\n    if (index < 60) {\n        return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n    }\n    return [b ^ c ^ d, 0xca62c1d6];\n}\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n * @param {?} str\n * @return {?}\n */\nfunction fingerprint(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var _a = [hash32(utf8, 0), hash32(utf8, 102072)], hi = _a[0], lo = _a[1];\n    if (hi == 0 && (lo == 0 || lo == 1)) {\n        hi = hi ^ 0x130f9bef;\n        lo = lo ^ -0x6b5f56d8;\n    }\n    return [hi, lo];\n}\n/**\n * @param {?} msg\n * @param {?} meaning\n * @return {?}\n */\nfunction computeMsgId(msg, meaning) {\n    var _a = fingerprint(msg), hi = _a[0], lo = _a[1];\n    if (meaning) {\n        var _b = fingerprint(meaning), him = _b[0], lom = _b[1];\n        _c = add64(rol64([hi, lo], 1), [him, lom]), hi = _c[0], lo = _c[1];\n    }\n    return byteStringToDecString(words32ToByteString([hi & 0x7fffffff, lo]));\n    var _c;\n}\n/**\n * @param {?} str\n * @param {?} c\n * @return {?}\n */\nfunction hash32(str, c) {\n    var _a = [0x9e3779b9, 0x9e3779b9], a = _a[0], b = _a[1];\n    var /** @type {?} */ i;\n    var /** @type {?} */ len = str.length;\n    for (i = 0; i + 12 <= len; i += 12) {\n        a = add32(a, wordAt(str, i, Endian.Little));\n        b = add32(b, wordAt(str, i + 4, Endian.Little));\n        c = add32(c, wordAt(str, i + 8, Endian.Little));\n        _b = mix([a, b, c]), a = _b[0], b = _b[1], c = _b[2];\n    }\n    a = add32(a, wordAt(str, i, Endian.Little));\n    b = add32(b, wordAt(str, i + 4, Endian.Little));\n    // the first byte of c is reserved for the length\n    c = add32(c, len);\n    c = add32(c, wordAt(str, i + 8, Endian.Little) << 8);\n    return mix([a, b, c])[2];\n    var _b;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction mix(_a) {\n    var a = _a[0], b = _a[1], c = _a[2];\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 13;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 8;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 13;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 12;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 16;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 5;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 3;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 10;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 15;\n    return [a, b, c];\n}\nvar Endian = {};\nEndian.Little = 0;\nEndian.Big = 1;\nEndian[Endian.Little] = \"Little\";\nEndian[Endian.Big] = \"Big\";\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32(a, b) {\n    return add32to64(a, b)[1];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32to64(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) + (b & 0xffff);\n    var /** @type {?} */ high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n    return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\n/**\n * @param {?} __0\n * @param {?} __1\n * @return {?}\n */\nfunction add64(_a, _b) {\n    var ah = _a[0], al = _a[1];\n    var bh = _b[0], bl = _b[1];\n    var _c = add32to64(al, bl), carry = _c[0], l = _c[1];\n    var /** @type {?} */ h = add32(add32(ah, bh), carry);\n    return [h, l];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction sub32(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) - (b & 0xffff);\n    var /** @type {?} */ high = (a >> 16) - (b >> 16) + (low >> 16);\n    return (high << 16) | (low & 0xffff);\n}\n/**\n * @param {?} a\n * @param {?} count\n * @return {?}\n */\nfunction rol32(a, count) {\n    return (a << count) | (a >>> (32 - count));\n}\n/**\n * @param {?} __0\n * @param {?} count\n * @return {?}\n */\nfunction rol64(_a, count) {\n    var hi = _a[0], lo = _a[1];\n    var /** @type {?} */ h = (hi << count) | (lo >>> (32 - count));\n    var /** @type {?} */ l = (lo << count) | (hi >>> (32 - count));\n    return [h, l];\n}\n/**\n * @param {?} str\n * @param {?} endian\n * @return {?}\n */\nfunction stringToWords32(str, endian) {\n    var /** @type {?} */ words32 = Array((str.length + 3) >>> 2);\n    for (var /** @type {?} */ i = 0; i < words32.length; i++) {\n        words32[i] = wordAt(str, i * 4, endian);\n    }\n    return words32;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @return {?}\n */\nfunction byteAt(str, index) {\n    return index >= str.length ? 0 : str.charCodeAt(index) & 0xff;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @param {?} endian\n * @return {?}\n */\nfunction wordAt(str, index, endian) {\n    var /** @type {?} */ word = 0;\n    if (endian === Endian.Big) {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << (24 - 8 * i);\n        }\n    }\n    else {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << 8 * i;\n        }\n    }\n    return word;\n}\n/**\n * @param {?} words32\n * @return {?}\n */\nfunction words32ToByteString(words32) {\n    return words32.reduce(function (str, word) { return str + word32ToByteString(word); }, '');\n}\n/**\n * @param {?} word\n * @return {?}\n */\nfunction word32ToByteString(word) {\n    var /** @type {?} */ str = '';\n    for (var /** @type {?} */ i = 0; i < 4; i++) {\n        str += String.fromCharCode((word >>> 8 * (3 - i)) & 0xff);\n    }\n    return str;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToHexString(str) {\n    var /** @type {?} */ hex = '';\n    for (var /** @type {?} */ i = 0; i < str.length; i++) {\n        var /** @type {?} */ b = byteAt(str, i);\n        hex += (b >>> 4).toString(16) + (b & 0x0f).toString(16);\n    }\n    return hex.toLowerCase();\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToDecString(str) {\n    var /** @type {?} */ decimal = '';\n    var /** @type {?} */ toThePower = '1';\n    for (var /** @type {?} */ i = str.length - 1; i >= 0; i--) {\n        decimal = addBigInt(decimal, numberTimesBigInt(byteAt(str, i), toThePower));\n        toThePower = numberTimesBigInt(256, toThePower);\n    }\n    return decimal.split('').reverse().join('');\n}\n/**\n * @param {?} x\n * @param {?} y\n * @return {?}\n */\nfunction addBigInt(x, y) {\n    var /** @type {?} */ sum = '';\n    var /** @type {?} */ len = Math.max(x.length, y.length);\n    for (var /** @type {?} */ i = 0, /** @type {?} */ carry = 0; i < len || carry; i++) {\n        var /** @type {?} */ tmpSum = carry + +(x[i] || 0) + +(y[i] || 0);\n        if (tmpSum >= 10) {\n            carry = 1;\n            sum += tmpSum - 10;\n        }\n        else {\n            carry = 0;\n            sum += tmpSum;\n        }\n    }\n    return sum;\n}\n/**\n * @param {?} num\n * @param {?} b\n * @return {?}\n */\nfunction numberTimesBigInt(num, b) {\n    var /** @type {?} */ product = '';\n    var /** @type {?} */ bToThePower = b;\n    for (; num !== 0; num = num >>> 1) {\n        if (num & 1)\n            product = addBigInt(product, bToThePower);\n        bToThePower = addBigInt(bToThePower, bToThePower);\n    }\n    return product;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar Serializer = (function () {\n    function Serializer() {\n    }\n    /**\n     * @abstract\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Serializer.prototype.write = function (messages, locale) { };\n    /**\n     * @abstract\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Serializer.prototype.load = function (content, url) { };\n    /**\n     * @abstract\n     * @param {?} message\n     * @return {?}\n     */\n    Serializer.prototype.digest = function (message) { };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Serializer.prototype.createNameMapper = function (message) { return null; };\n    return Serializer;\n}());\n/**\n * A simple mapper that take a function to transform an internal name to a public name\n */\nvar SimplePlaceholderMapper = (function (_super) {\n    __extends(SimplePlaceholderMapper, _super);\n    /**\n     * @param {?} message\n     * @param {?} mapName\n     */\n    function SimplePlaceholderMapper(message, mapName) {\n        var _this = _super.call(this) || this;\n        _this.mapName = mapName;\n        _this.internalToPublic = {};\n        _this.publicToNextId = {};\n        _this.publicToInternal = {};\n        message.nodes.forEach(function (node) { return node.visit(_this); });\n        return _this;\n    }\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toPublicName = function (internalName) {\n        return this.internalToPublic.hasOwnProperty(internalName) ?\n            this.internalToPublic[internalName] :\n            null;\n    };\n    /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toInternalName = function (publicName) {\n        return this.publicToInternal.hasOwnProperty(publicName) ? this.publicToInternal[publicName] :\n            null;\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitText = function (text, context) { return null; };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitTagPlaceholder = function (ph, context) {\n        this.visitPlaceholderName(ph.startName);\n        _super.prototype.visitTagPlaceholder.call(this, ph, context);\n        this.visitPlaceholderName(ph.closeName);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholder = function (ph, context) { this.visitPlaceholderName(ph.name); };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitIcuPlaceholder = function (ph, context) {\n        this.visitPlaceholderName(ph.name);\n    };\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholderName = function (internalName) {\n        if (!internalName || this.internalToPublic.hasOwnProperty(internalName)) {\n            return;\n        }\n        var /** @type {?} */ publicName = this.mapName(internalName);\n        if (this.publicToInternal.hasOwnProperty(publicName)) {\n            // Create a new XMB when it has already been used\n            var /** @type {?} */ nextId = this.publicToNextId[publicName];\n            this.publicToNextId[publicName] = nextId + 1;\n            publicName = publicName + \"_\" + nextId;\n        }\n        else {\n            this.publicToNextId[publicName] = 1;\n        }\n        this.internalToPublic[internalName] = publicName;\n        this.publicToInternal[publicName] = internalName;\n    };\n    return SimplePlaceholderMapper;\n}(RecurseVisitor));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _Visitor$1 = (function () {\n    function _Visitor$1() {\n    }\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    _Visitor$1.prototype.visitTag = function (tag) {\n        var _this = this;\n        var /** @type {?} */ strAttrs = this._serializeAttributes(tag.attrs);\n        if (tag.children.length == 0) {\n            return \"<\" + tag.name + strAttrs + \"/>\";\n        }\n        var /** @type {?} */ strChildren = tag.children.map(function (node) { return node.visit(_this); });\n        return \"<\" + tag.name + strAttrs + \">\" + strChildren.join('') + \"</\" + tag.name + \">\";\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    _Visitor$1.prototype.visitText = function (text) { return text.value; };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    _Visitor$1.prototype.visitDeclaration = function (decl) {\n        return \"<?xml\" + this._serializeAttributes(decl.attrs) + \" ?>\";\n    };\n    /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    _Visitor$1.prototype._serializeAttributes = function (attrs) {\n        var /** @type {?} */ strAttrs = Object.keys(attrs).map(function (name) { return name + \"=\\\"\" + attrs[name] + \"\\\"\"; }).join(' ');\n        return strAttrs.length > 0 ? ' ' + strAttrs : '';\n    };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    _Visitor$1.prototype.visitDoctype = function (doctype) {\n        return \"<!DOCTYPE \" + doctype.rootTag + \" [\\n\" + doctype.dtd + \"\\n]>\";\n    };\n    return _Visitor$1;\n}());\nvar _visitor = new _Visitor$1();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serialize(nodes) {\n    return nodes.map(function (node) { return node.visit(_visitor); }).join('');\n}\nvar Declaration = (function () {\n    /**\n     * @param {?} unescapedAttrs\n     */\n    function Declaration(unescapedAttrs) {\n        var _this = this;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Declaration.prototype.visit = function (visitor) { return visitor.visitDeclaration(this); };\n    return Declaration;\n}());\nvar Doctype = (function () {\n    /**\n     * @param {?} rootTag\n     * @param {?} dtd\n     */\n    function Doctype(rootTag, dtd) {\n        this.rootTag = rootTag;\n        this.dtd = dtd;\n    }\n    \n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Doctype.prototype.visit = function (visitor) { return visitor.visitDoctype(this); };\n    return Doctype;\n}());\nvar Tag = (function () {\n    /**\n     * @param {?} name\n     * @param {?=} unescapedAttrs\n     * @param {?=} children\n     */\n    function Tag(name, unescapedAttrs, children) {\n        if (unescapedAttrs === void 0) { unescapedAttrs = {}; }\n        if (children === void 0) { children = []; }\n        var _this = this;\n        this.name = name;\n        this.children = children;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Tag.prototype.visit = function (visitor) { return visitor.visitTag(this); };\n    return Tag;\n}());\nvar Text$2 = (function () {\n    /**\n     * @param {?} unescapedValue\n     */\n    function Text$2(unescapedValue) {\n        this.value = _escapeXml(unescapedValue);\n    }\n    \n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Text$2.prototype.visit = function (visitor) { return visitor.visitText(this); };\n    return Text$2;\n}());\nvar CR = (function (_super) {\n    __extends(CR, _super);\n    /**\n     * @param {?=} ws\n     */\n    function CR(ws) {\n        if (ws === void 0) { ws = 0; }\n        return _super.call(this, \"\\n\" + new Array(ws + 1).join(' ')) || this;\n    }\n    return CR;\n}(Text$2));\nvar _ESCAPED_CHARS = [\n    [/&/g, '&amp;'],\n    [/\"/g, '&quot;'],\n    [/'/g, '&apos;'],\n    [/</g, '&lt;'],\n    [/>/g, '&gt;'],\n];\n/**\n * @param {?} text\n * @return {?}\n */\nfunction _escapeXml(text) {\n    return _ESCAPED_CHARS.reduce(function (text, entry) { return text.replace(entry[0], entry[1]); }, text);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION = '1.2';\nvar _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG = 'en';\nvar _PLACEHOLDER_TAG = 'x';\nvar _FILE_TAG = 'file';\nvar _SOURCE_TAG = 'source';\nvar _TARGET_TAG = 'target';\nvar _UNIT_TAG = 'trans-unit';\nvar Xliff = (function (_super) {\n    __extends(Xliff, _super);\n    function Xliff() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff.prototype.write = function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor();\n        var /** @type {?} */ transUnits = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ transUnit = new Tag(_UNIT_TAG, { id: message.id, datatype: 'html' });\n            transUnit.children.push(new CR(8), new Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes)), new CR(8), new Tag(_TARGET_TAG));\n            if (message.description) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'description' }, [new Text$2(message.description)]));\n            }\n            if (message.meaning) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'meaning' }, [new Text$2(message.meaning)]));\n            }\n            transUnit.children.push(new CR(6));\n            transUnits.push(new CR(6), transUnit);\n        });\n        var /** @type {?} */ body = new Tag('body', {}, transUnits.concat([new CR(4)]));\n        var /** @type {?} */ file = new Tag('file', {\n            'source-language': locale || _DEFAULT_SOURCE_LANG,\n            datatype: 'plaintext',\n            original: 'ng2.template',\n        }, [new CR(4), body, new CR(2)]);\n        var /** @type {?} */ xliff = new Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff.prototype.load = function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliffParser = new XliffParser();\n        var _a = xliffParser.parse(content, url), locale = _a.locale, mlNodesByMsgId = _a.mlNodesByMsgId, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n();\n        Object.keys(mlNodesByMsgId).forEach(function (msgId) {\n            var _a = converter.convert(mlNodesByMsgId[msgId]), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: locale, i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff.prototype.digest = function (message) { return digest(message); };\n    return Xliff;\n}(Serializer));\nvar _WriteVisitor = (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = function (icu, context) {\n        if (this._isInIcu) {\n            // nested ICU is not supported\n            throw new Error('xliff does not support nested ICU messages');\n        }\n        this._isInIcu = true;\n        // TODO(vicb): support ICU messages\n        // https://lists.oasis-open.org/archives/xliff/201201/msg00028.html\n        // http://docs.oasis-open.org/xliff/v1.2/xliff-profile-po/xliff-profile-po-1.2-cd02.html\n        var /** @type {?} */ nodes = [];\n        this._isInIcu = false;\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var /** @type {?} */ ctype = getCtypeForTag(ph.tag);\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype });\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.closeName, ctype: ctype });\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = function (nodes) {\n        var _this = this;\n        this._isInIcu = false;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar XliffParser = (function () {\n    function XliffParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    XliffParser.prototype.parse = function (xliff, url) {\n        this._unitMlNodes = [];\n        this._mlNodesByMsgId = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            mlNodesByMsgId: this._mlNodesByMsgId,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitElement = function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG:\n                this._unitMlNodes = null;\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._mlNodesByMsgId.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (this._unitMlNodes) {\n                            this._mlNodesByMsgId[id] = this._unitMlNodes;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG:\n                // ignore source message\n                break;\n            case _TARGET_TAG:\n                this._unitMlNodes = element.children;\n                break;\n            case _FILE_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'target-language'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                visitAll(this, element.children, null);\n                break;\n            default:\n                // TODO(vicb): assert file structure, xliff version\n                // For now only recurse on unhandled nodes\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitText = function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansion = function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansionCase = function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XliffParser.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XliffParser;\n}());\nvar XmlToI18n = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = function (nodes) {\n        this._errors = [];\n        return {\n            i18nNodes: visitAll(this, nodes),\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'id'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, el.sourceSpan);\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"id\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = function (icu, context) { };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = function (icuCase, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getCtypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n            return 'lb';\n        case 'img':\n            return 'image';\n        default:\n            return \"x-\" + tag;\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _MESSAGES_TAG = 'messagebundle';\nvar _MESSAGE_TAG = 'msg';\nvar _PLACEHOLDER_TAG$1 = 'ph';\nvar _EXEMPLE_TAG = 'ex';\nvar _DOCTYPE = \"<!ELEMENT messagebundle (msg)*>\\n<!ATTLIST messagebundle class CDATA #IMPLIED>\\n\\n<!ELEMENT msg (#PCDATA|ph|source)*>\\n<!ATTLIST msg id CDATA #IMPLIED>\\n<!ATTLIST msg seq CDATA #IMPLIED>\\n<!ATTLIST msg name CDATA #IMPLIED>\\n<!ATTLIST msg desc CDATA #IMPLIED>\\n<!ATTLIST msg meaning CDATA #IMPLIED>\\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\\n<!ATTLIST msg xml:space (default|preserve) \\\"default\\\">\\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\\n\\n<!ELEMENT source (#PCDATA)>\\n\\n<!ELEMENT ph (#PCDATA|ex)*>\\n<!ATTLIST ph name CDATA #REQUIRED>\\n\\n<!ELEMENT ex (#PCDATA)>\";\nvar Xmb = (function (_super) {\n    __extends(Xmb, _super);\n    function Xmb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xmb.prototype.write = function (messages, locale) {\n        var /** @type {?} */ exampleVisitor = new ExampleVisitor();\n        var /** @type {?} */ visitor = new _Visitor$2();\n        var /** @type {?} */ rootNode = new Tag(_MESSAGES_TAG);\n        messages.forEach(function (message) {\n            var /** @type {?} */ attrs = { id: message.id };\n            if (message.description) {\n                attrs['desc'] = message.description;\n            }\n            if (message.meaning) {\n                attrs['meaning'] = message.meaning;\n            }\n            rootNode.children.push(new CR(2), new Tag(_MESSAGE_TAG, attrs, visitor.serialize(message.nodes)));\n        });\n        rootNode.children.push(new CR());\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }),\n            new CR(),\n            new Doctype(_MESSAGES_TAG, _DOCTYPE),\n            new CR(),\n            exampleVisitor.addDefaultExamples(rootNode),\n            new CR(),\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xmb.prototype.load = function (content, url) {\n        throw new Error('Unsupported');\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.digest = function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.createNameMapper = function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xmb;\n}(Serializer));\nvar _Visitor$2 = (function () {\n    function _Visitor$2() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitText = function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitTagPlaceholder = function (ph, context) {\n        var /** @type {?} */ startEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"<\" + ph.tag + \">\")]);\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG$1, { name: ph.startName }, [startEx]);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        var /** @type {?} */ closeEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"</\" + ph.tag + \">\")]);\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG$1, { name: ph.closeName }, [closeEx]);\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG$1, { name: ph.name })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitIcuPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG$1, { name: ph.name })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _Visitor$2.prototype.serialize = function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _Visitor$2;\n}());\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest$1(message) {\n    return decimalDigest(message);\n}\nvar ExampleVisitor = (function () {\n    function ExampleVisitor() {\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    ExampleVisitor.prototype.addDefaultExamples = function (node) {\n        node.visit(this);\n        return node;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitTag = function (tag) {\n        var _this = this;\n        if (tag.name === _PLACEHOLDER_TAG$1) {\n            if (!tag.children || tag.children.length == 0) {\n                var /** @type {?} */ exText = new Text$2(tag.attrs['name'] || '...');\n                tag.children = [new Tag(_EXEMPLE_TAG, {}, [exText])];\n            }\n        }\n        else if (tag.children) {\n            tag.children.forEach(function (node) { return node.visit(_this); });\n        }\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitText = function (text) { };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDeclaration = function (decl) { };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDoctype = function (doctype) { };\n    return ExampleVisitor;\n}());\n/**\n * @param {?} internalName\n * @return {?}\n */\nfunction toPublicName(internalName) {\n    return internalName.toUpperCase().replace(/[^A-Z0-9_]/g, '_');\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _TRANSLATIONS_TAG = 'translationbundle';\nvar _TRANSLATION_TAG = 'translation';\nvar _PLACEHOLDER_TAG$2 = 'ph';\nvar Xtb = (function (_super) {\n    __extends(Xtb, _super);\n    function Xtb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xtb.prototype.write = function (messages, locale) { throw new Error('Unsupported'); };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xtb.prototype.load = function (content, url) {\n        // xtb to xml nodes\n        var /** @type {?} */ xtbParser = new XtbParser();\n        var _a = xtbParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$1();\n        // Because we should be able to load xtb files that rely on features not supported by angular,\n        // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n        // converted\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var /** @type {?} */ valueFn = function () {\n                var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, errors = _a.errors;\n                if (errors.length) {\n                    throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n                }\n                return i18nNodes;\n            };\n            createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n        });\n        if (errors.length) {\n            throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: locale, i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.digest = function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.createNameMapper = function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xtb;\n}(Serializer));\n/**\n * @param {?} messages\n * @param {?} id\n * @param {?} valueFn\n * @return {?}\n */\nfunction createLazyProperty(messages, id, valueFn) {\n    Object.defineProperty(messages, id, {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n            var /** @type {?} */ value = valueFn();\n            Object.defineProperty(messages, id, { enumerable: true, value: value });\n            return value;\n        },\n        set: function (_) { throw new Error('Could not overwrite an XTB translation'); },\n    });\n}\nvar XtbParser = (function () {\n    function XtbParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    XtbParser.prototype.parse = function (xtb, url) {\n        this._bundleDepth = 0;\n        this._msgIdToHtml = {};\n        // We can not parse the ICU messages at this point as some messages might not originate\n        // from Angular that could not be lex'd.\n        var /** @type {?} */ xml = new XmlParser().parse(xtb, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitElement = function (element, context) {\n        switch (element.name) {\n            case _TRANSLATIONS_TAG:\n                this._bundleDepth++;\n                if (this._bundleDepth > 1) {\n                    this._addError(element, \"<\" + _TRANSLATIONS_TAG + \"> elements can not be nested\");\n                }\n                var /** @type {?} */ langAttr = element.attrs.find(function (attr) { return attr.name === 'lang'; });\n                if (langAttr) {\n                    this._locale = langAttr.value;\n                }\n                visitAll(this, element.children, null);\n                this._bundleDepth--;\n                break;\n            case _TRANSLATION_TAG:\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _TRANSLATION_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        var /** @type {?} */ innerTextStart = element.startSourceSpan.end.offset;\n                        var /** @type {?} */ innerTextEnd = element.endSourceSpan.start.offset;\n                        var /** @type {?} */ content = element.startSourceSpan.start.file.content;\n                        var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                        this._msgIdToHtml[id] = innerText;\n                    }\n                }\n                break;\n            default:\n                this._addError(element, 'Unexpected tag');\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitText = function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansion = function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansionCase = function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XtbParser.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XtbParser;\n}());\nvar XmlToI18n$1 = (function () {\n    function XmlToI18n$1() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.convert = function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitText = function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitExpansion = function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitExpansionCase = function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitElement = function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG$2) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'name'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, el.sourceSpan);\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG$2 + \"> misses the \\\"name\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n$1.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XmlToI18n$1;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlParser = (function (_super) {\n    __extends(HtmlParser, _super);\n    function HtmlParser() {\n        return _super.call(this, getHtmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    HtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms, interpolationConfig);\n    };\n    return HtmlParser;\n}(Parser$1));\nHtmlParser.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nHtmlParser.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for translated messages\n */\nvar TranslationBundle = (function () {\n    /**\n     * @param {?=} _i18nNodesByMsgId\n     * @param {?=} locale\n     * @param {?=} digest\n     * @param {?=} mapperFactory\n     * @param {?=} missingTranslationStrategy\n     * @param {?=} console\n     */\n    function TranslationBundle(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        if (missingTranslationStrategy === void 0) { missingTranslationStrategy = _angular_core.MissingTranslationStrategy.Warning; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this.digest = digest;\n        this.mapperFactory = mapperFactory;\n        this._i18nToHtml = new I18nToHtmlVisitor(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console);\n    }\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    TranslationBundle.load = function (content, url, serializer, missingTranslationStrategy, console) {\n        var _a = serializer.load(content, url), locale = _a.locale, i18nNodesByMsgId = _a.i18nNodesByMsgId;\n        var /** @type {?} */ digestFn = function (m) { return serializer.digest(m); };\n        var /** @type {?} */ mapperFactory = function (m) { return serializer.createNameMapper(m); };\n        return new TranslationBundle(i18nNodesByMsgId, locale, digestFn, mapperFactory, missingTranslationStrategy, console);\n    };\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.get = function (srcMsg) {\n        var /** @type {?} */ html = this._i18nToHtml.convert(srcMsg);\n        if (html.errors.length) {\n            throw new Error(html.errors.join('\\n'));\n        }\n        return html.nodes;\n    };\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.has = function (srcMsg) { return this.digest(srcMsg) in this._i18nNodesByMsgId; };\n    return TranslationBundle;\n}());\nvar I18nToHtmlVisitor = (function () {\n    /**\n     * @param {?=} _i18nNodesByMsgId\n     * @param {?=} _locale\n     * @param {?=} _digest\n     * @param {?=} _mapperFactory\n     * @param {?=} _missingTranslationStrategy\n     * @param {?=} _console\n     */\n    function I18nToHtmlVisitor(_i18nNodesByMsgId, _locale, _digest, _mapperFactory, _missingTranslationStrategy, _console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this._locale = _locale;\n        this._digest = _digest;\n        this._mapperFactory = _mapperFactory;\n        this._missingTranslationStrategy = _missingTranslationStrategy;\n        this._console = _console;\n        this._contextStack = [];\n        this._errors = [];\n    }\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.convert = function (srcMsg) {\n        this._contextStack.length = 0;\n        this._errors.length = 0;\n        // i18n to text\n        var /** @type {?} */ text = this._convertToText(srcMsg);\n        // text to html\n        var /** @type {?} */ url = srcMsg.nodes[0].sourceSpan.start.file.url;\n        var /** @type {?} */ html = new HtmlParser().parse(text, url, true);\n        return {\n            nodes: html.rootNodes,\n            errors: this._errors.concat(html.errors),\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitText = function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        return container.children.map(function (n) { return n.visit(_this); }).join('');\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // TODO(vicb): Once all format switch to using expression placeholders\n        // we should throw when the placeholder is not in the source message\n        var /** @type {?} */ exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n            this._srcMsg.placeholders[icu.expression] :\n            icu.expression;\n        return \"{\" + exp + \", \" + icu.type + \", \" + cases.join(' ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitPlaceholder = function (ph, context) {\n        var /** @type {?} */ phName = this._mapper(ph.name);\n        if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n            return this._srcMsg.placeholders[phName];\n        }\n        if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n            return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n        }\n        this._addError(ph, \"Unknown placeholder \\\"\" + ph.name + \"\\\"\");\n        return '';\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ tag = \"\" + ph.tag;\n        var /** @type {?} */ attrs = Object.keys(ph.attrs).map(function (name) { return name + \"=\\\"\" + ph.attrs[name] + \"\\\"\"; }).join(' ');\n        if (ph.isVoid) {\n            return \"<\" + tag + \" \" + attrs + \"/>\";\n        }\n        var /** @type {?} */ children = ph.children.map(function (c) { return c.visit(_this); }).join('');\n        return \"<\" + tag + \" \" + attrs + \">\" + children + \"</\" + tag + \">\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        // An ICU placeholder references the source message to be serialized\n        return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n    };\n    /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._convertToText = function (srcMsg) {\n        var _this = this;\n        var /** @type {?} */ id = this._digest(srcMsg);\n        var /** @type {?} */ mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n        var /** @type {?} */ nodes;\n        this._contextStack.push({ msg: this._srcMsg, mapper: this._mapper });\n        this._srcMsg = srcMsg;\n        if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n            // When there is a translation use its nodes as the source\n            // And create a mapper to convert serialized placeholder names to internal names\n            nodes = this._i18nNodesByMsgId[id];\n            this._mapper = function (name) { return mapper ? mapper.toInternalName(name) : name; };\n        }\n        else {\n            // When no translation has been found\n            // - report an error / a warning / nothing,\n            // - use the nodes from the original message\n            // - placeholders are already internal and need no mapper\n            if (this._missingTranslationStrategy === _angular_core.MissingTranslationStrategy.Error) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._addError(srcMsg.nodes[0], \"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            else if (this._console &&\n                this._missingTranslationStrategy === _angular_core.MissingTranslationStrategy.Warning) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._console.warn(\"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            nodes = srcMsg.nodes;\n            this._mapper = function (name) { return name; };\n        }\n        var /** @type {?} */ text = nodes.map(function (node) { return node.visit(_this); }).join('');\n        var /** @type {?} */ context = this._contextStack.pop();\n        this._srcMsg = context.msg;\n        this._mapper = context.mapper;\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._addError = function (el, msg) {\n        this._errors.push(new I18nError(el.sourceSpan, msg));\n    };\n    return I18nToHtmlVisitor;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar I18NHtmlParser = (function () {\n    /**\n     * @param {?} _htmlParser\n     * @param {?=} translations\n     * @param {?=} translationsFormat\n     * @param {?=} missingTranslation\n     * @param {?=} console\n     */\n    function I18NHtmlParser(_htmlParser, translations, translationsFormat, missingTranslation, console) {\n        if (missingTranslation === void 0) { missingTranslation = _angular_core.MissingTranslationStrategy.Warning; }\n        this._htmlParser = _htmlParser;\n        if (translations) {\n            var serializer = createSerializer(translationsFormat);\n            this._translationBundle =\n                TranslationBundle.load(translations, 'i18n', serializer, missingTranslation, console);\n        }\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    I18NHtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n        if (!this._translationBundle) {\n            // Do not enable i18n when no translation bundle is provided\n            return parseResult;\n        }\n        if (parseResult.errors.length) {\n            return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n        }\n        return mergeTranslations(parseResult.rootNodes, this._translationBundle, interpolationConfig, [], {});\n    };\n    return I18NHtmlParser;\n}());\n/**\n * @param {?=} format\n * @return {?}\n */\nfunction createSerializer(format) {\n    format = (format || 'xlf').toLowerCase();\n    switch (format) {\n        case 'xmb':\n            return new Xmb();\n        case 'xtb':\n            return new Xtb();\n        case 'xliff':\n        case 'xlf':\n        default:\n            return new Xliff();\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CORE = assetUrl('core');\nvar Identifiers = (function () {\n    function Identifiers() {\n    }\n    return Identifiers;\n}());\nIdentifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n    name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n    moduleUrl: CORE,\n    runtime: _angular_core.ANALYZE_FOR_ENTRY_COMPONENTS\n};\nIdentifiers.ElementRef = { name: 'ElementRef', moduleUrl: CORE, runtime: _angular_core.ElementRef };\nIdentifiers.NgModuleRef = { name: 'NgModuleRef', moduleUrl: CORE, runtime: _angular_core.NgModuleRef };\nIdentifiers.ViewContainerRef = { name: 'ViewContainerRef', moduleUrl: CORE, runtime: _angular_core.ViewContainerRef };\nIdentifiers.ChangeDetectorRef = { name: 'ChangeDetectorRef', moduleUrl: CORE, runtime: _angular_core.ChangeDetectorRef };\nIdentifiers.QueryList = { name: 'QueryList', moduleUrl: CORE, runtime: _angular_core.QueryList };\nIdentifiers.TemplateRef = { name: 'TemplateRef', moduleUrl: CORE, runtime: _angular_core.TemplateRef };\nIdentifiers.CodegenComponentFactoryResolver = {\n    name: 'ɵCodegenComponentFactoryResolver',\n    moduleUrl: CORE,\n    runtime: _angular_core.ɵCodegenComponentFactoryResolver\n};\nIdentifiers.ComponentFactoryResolver = {\n    name: 'ComponentFactoryResolver',\n    moduleUrl: CORE,\n    runtime: _angular_core.ComponentFactoryResolver\n};\nIdentifiers.ComponentFactory = { name: 'ComponentFactory', moduleUrl: CORE, runtime: _angular_core.ComponentFactory };\nIdentifiers.ComponentRef = { name: 'ComponentRef', moduleUrl: CORE, runtime: _angular_core.ComponentRef };\nIdentifiers.NgModuleFactory = { name: 'NgModuleFactory', moduleUrl: CORE, runtime: _angular_core.NgModuleFactory };\nIdentifiers.NgModuleInjector = {\n    name: 'ɵNgModuleInjector',\n    moduleUrl: CORE,\n    runtime: _angular_core.ɵNgModuleInjector,\n};\nIdentifiers.RegisterModuleFactoryFn = {\n    name: 'ɵregisterModuleFactory',\n    moduleUrl: CORE,\n    runtime: _angular_core.ɵregisterModuleFactory,\n};\nIdentifiers.Injector = { name: 'Injector', moduleUrl: CORE, runtime: _angular_core.Injector };\nIdentifiers.ViewEncapsulation = { name: 'ViewEncapsulation', moduleUrl: CORE, runtime: _angular_core.ViewEncapsulation };\nIdentifiers.ChangeDetectionStrategy = {\n    name: 'ChangeDetectionStrategy',\n    moduleUrl: CORE,\n    runtime: _angular_core.ChangeDetectionStrategy\n};\nIdentifiers.SecurityContext = {\n    name: 'SecurityContext',\n    moduleUrl: CORE,\n    runtime: _angular_core.SecurityContext,\n};\nIdentifiers.LOCALE_ID = { name: 'LOCALE_ID', moduleUrl: CORE, runtime: _angular_core.LOCALE_ID };\nIdentifiers.TRANSLATIONS_FORMAT = { name: 'TRANSLATIONS_FORMAT', moduleUrl: CORE, runtime: _angular_core.TRANSLATIONS_FORMAT };\nIdentifiers.inlineInterpolate = { name: 'ɵinlineInterpolate', moduleUrl: CORE, runtime: _angular_core.ɵinlineInterpolate };\nIdentifiers.interpolate = { name: 'ɵinterpolate', moduleUrl: CORE, runtime: _angular_core.ɵinterpolate };\nIdentifiers.EMPTY_ARRAY = { name: 'ɵEMPTY_ARRAY', moduleUrl: CORE, runtime: _angular_core.ɵEMPTY_ARRAY };\nIdentifiers.EMPTY_MAP = { name: 'ɵEMPTY_MAP', moduleUrl: CORE, runtime: _angular_core.ɵEMPTY_MAP };\nIdentifiers.Renderer = { name: 'Renderer', moduleUrl: CORE, runtime: _angular_core.Renderer };\nIdentifiers.viewDef = { name: 'ɵvid', moduleUrl: CORE, runtime: _angular_core.ɵvid };\nIdentifiers.elementDef = { name: 'ɵeld', moduleUrl: CORE, runtime: _angular_core.ɵeld };\nIdentifiers.anchorDef = { name: 'ɵand', moduleUrl: CORE, runtime: _angular_core.ɵand };\nIdentifiers.textDef = { name: 'ɵted', moduleUrl: CORE, runtime: _angular_core.ɵted };\nIdentifiers.directiveDef = { name: 'ɵdid', moduleUrl: CORE, runtime: _angular_core.ɵdid };\nIdentifiers.providerDef = { name: 'ɵprd', moduleUrl: CORE, runtime: _angular_core.ɵprd };\nIdentifiers.queryDef = { name: 'ɵqud', moduleUrl: CORE, runtime: _angular_core.ɵqud };\nIdentifiers.pureArrayDef = { name: 'ɵpad', moduleUrl: CORE, runtime: _angular_core.ɵpad };\nIdentifiers.pureObjectDef = { name: 'ɵpod', moduleUrl: CORE, runtime: _angular_core.ɵpod };\nIdentifiers.purePipeDef = { name: 'ɵppd', moduleUrl: CORE, runtime: _angular_core.ɵppd };\nIdentifiers.pipeDef = { name: 'ɵpid', moduleUrl: CORE, runtime: _angular_core.ɵpid };\nIdentifiers.nodeValue = { name: 'ɵnov', moduleUrl: CORE, runtime: _angular_core.ɵnov };\nIdentifiers.ngContentDef = { name: 'ɵncd', moduleUrl: CORE, runtime: _angular_core.ɵncd };\nIdentifiers.unwrapValue = { name: 'ɵunv', moduleUrl: CORE, runtime: _angular_core.ɵunv };\nIdentifiers.createRendererType2 = { name: 'ɵcrt', moduleUrl: CORE, runtime: _angular_core.ɵcrt };\nIdentifiers.RendererType2 = {\n    name: 'RendererType2',\n    moduleUrl: CORE,\n    // type only\n    runtime: null\n};\nIdentifiers.ViewDefinition = {\n    name: 'ɵViewDefinition',\n    moduleUrl: CORE,\n    // type only\n    runtime: null\n};\nIdentifiers.createComponentFactory = { name: 'ɵccf', moduleUrl: CORE, runtime: _angular_core.ɵccf };\n/**\n * @param {?} pkg\n * @param {?=} path\n * @param {?=} type\n * @return {?}\n */\nfunction assetUrl(pkg, path, type) {\n    if (path === void 0) { path = null; }\n    if (type === void 0) { type = 'src'; }\n    if (path == null) {\n        return \"@angular/\" + pkg;\n    }\n    else {\n        return \"@angular/\" + pkg + \"/\" + type + \"/\" + path;\n    }\n}\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction resolveIdentifier(identifier) {\n    var /** @type {?} */ name = identifier.name;\n    return _angular_core.ɵreflector.resolveIdentifier(name, identifier.moduleUrl, null, identifier.runtime);\n}\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction createIdentifier(identifier) {\n    return { reference: resolveIdentifier(identifier) };\n}\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction identifierToken(identifier) {\n    return { identifier: identifier };\n}\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction createIdentifierToken(identifier) {\n    return identifierToken(createIdentifier(identifier));\n}\n/**\n * @param {?} enumType\n * @param {?} name\n * @return {?}\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// http://cldr.unicode.org/index/cldr-spec/plural-rules\nvar PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n/**\n * Expands special forms into elements.\n *\n * For example,\n *\n * ```\n * { messages.length, plural,\n *   =0 {zero}\n *   =1 {one}\n *   other {more than one}\n * }\n * ```\n *\n * will be expanded into\n *\n * ```\n * <ng-container [ngPlural]=\"messages.length\">\n *   <ng-template ngPluralCase=\"=0\">zero</ng-template>\n *   <ng-template ngPluralCase=\"=1\">one</ng-template>\n *   <ng-template ngPluralCase=\"other\">more than one</ng-template>\n * </ng-container>\n * ```\n * @param {?} nodes\n * @return {?}\n */\nfunction expandNodes(nodes) {\n    var /** @type {?} */ expander = new _Expander();\n    return new ExpansionResult(visitAll(expander, nodes), expander.isExpanded, expander.errors);\n}\nvar ExpansionResult = (function () {\n    /**\n     * @param {?} nodes\n     * @param {?} expanded\n     * @param {?} errors\n     */\n    function ExpansionResult(nodes, expanded, errors) {\n        this.nodes = nodes;\n        this.expanded = expanded;\n        this.errors = errors;\n    }\n    return ExpansionResult;\n}());\nvar ExpansionError = (function (_super) {\n    __extends(ExpansionError, _super);\n    /**\n     * @param {?} span\n     * @param {?} errorMsg\n     */\n    function ExpansionError(span, errorMsg) {\n        return _super.call(this, span, errorMsg) || this;\n    }\n    return ExpansionError;\n}(ParseError));\n/**\n * Expand expansion forms (plural, select) to directives\n *\n * \\@internal\n */\nvar _Expander = (function () {\n    function _Expander() {\n        this.isExpanded = false;\n        this.errors = [];\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitElement = function (element, context) {\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitAttribute = function (attribute, context) { return attribute; };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitText = function (text, context) { return text; };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitComment = function (comment, context) { return comment; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansion = function (icu, context) {\n        this.isExpanded = true;\n        return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n            _expandDefaultForm(icu, this.errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansionCase = function (icuCase, context) {\n        throw new Error('Should not be reached');\n    };\n    return _Expander;\n}());\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandPluralForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n            errors.push(new ExpansionError(c.valueSourceSpan, \"Plural cases should be \\\"=<number>\\\" or one of \" + PLURAL_CASES.join(\", \")));\n        }\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        return new Element(\"ng-template\", [new Attribute$1('ngPluralCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandDefaultForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        if (c.value === 'other') {\n            // other is the default case when no values match\n            return new Element(\"ng-template\", [new Attribute$1('ngSwitchDefault', '', c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n        }\n        return new Element(\"ng-template\", [new Attribute$1('ngSwitchCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ProviderError = (function (_super) {\n    __extends(ProviderError, _super);\n    /**\n     * @param {?} message\n     * @param {?} span\n     */\n    function ProviderError(message, span) {\n        return _super.call(this, span, message) || this;\n    }\n    return ProviderError;\n}(ParseError));\nvar ProviderViewContext = (function () {\n    /**\n     * @param {?} component\n     */\n    function ProviderViewContext(component) {\n        var _this = this;\n        this.component = component;\n        this.errors = [];\n        this.viewQueries = _getViewQueries(component);\n        this.viewProviders = new Map();\n        component.viewProviders.forEach(function (provider) {\n            if (_this.viewProviders.get(tokenReference(provider.token)) == null) {\n                _this.viewProviders.set(tokenReference(provider.token), true);\n            }\n        });\n    }\n    return ProviderViewContext;\n}());\nvar ProviderElementContext = (function () {\n    /**\n     * @param {?} viewContext\n     * @param {?} _parent\n     * @param {?} _isViewRoot\n     * @param {?} _directiveAsts\n     * @param {?} attrs\n     * @param {?} refs\n     * @param {?} isTemplate\n     * @param {?} contentQueryStartId\n     * @param {?} _sourceSpan\n     */\n    function ProviderElementContext(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, isTemplate, contentQueryStartId, _sourceSpan) {\n        var _this = this;\n        this.viewContext = viewContext;\n        this._parent = _parent;\n        this._isViewRoot = _isViewRoot;\n        this._directiveAsts = _directiveAsts;\n        this._sourceSpan = _sourceSpan;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._hasViewContainer = false;\n        this._queriedTokens = new Map();\n        this._attrs = {};\n        attrs.forEach(function (attrAst) { return _this._attrs[attrAst.name] = attrAst.value; });\n        var directivesMeta = _directiveAsts.map(function (directiveAst) { return directiveAst.directive; });\n        this._allProviders =\n            _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n        this._contentQueries = _getContentQueries(contentQueryStartId, directivesMeta);\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._addQueryReadsTo(provider.token, provider.token, _this._queriedTokens);\n        });\n        if (isTemplate) {\n            var templateRefId = createIdentifierToken(Identifiers.TemplateRef);\n            this._addQueryReadsTo(templateRefId, templateRefId, this._queriedTokens);\n        }\n        refs.forEach(function (refAst) {\n            var defaultQueryValue = refAst.value || createIdentifierToken(Identifiers.ElementRef);\n            _this._addQueryReadsTo({ value: refAst.name }, defaultQueryValue, _this._queriedTokens);\n        });\n        if (this._queriedTokens.get(resolveIdentifier(Identifiers.ViewContainerRef))) {\n            this._hasViewContainer = true;\n        }\n        // create the providers that we know are eager first\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            var eager = provider.eager || _this._queriedTokens.get(tokenReference(provider.token));\n            if (eager) {\n                _this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ProviderElementContext.prototype.afterElement = function () {\n        var _this = this;\n        // collect lazy providers\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n        });\n    };\n    Object.defineProperty(ProviderElementContext.prototype, \"transformProviders\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return Array.from(this._transformedProviders.values());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedDirectiveAsts\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ sortedProviderTypes = this.transformProviders.map(function (provider) { return provider.token.identifier; });\n            var /** @type {?} */ sortedDirectives = this._directiveAsts.slice();\n            sortedDirectives.sort(function (dir1, dir2) { return sortedProviderTypes.indexOf(dir1.directive.type) -\n                sortedProviderTypes.indexOf(dir2.directive.type); });\n            return sortedDirectives;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedHasViewContainer\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._hasViewContainer; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"queryMatches\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ allMatches = [];\n            this._queriedTokens.forEach(function (matches) { allMatches.push.apply(allMatches, matches); });\n            return allMatches;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    ProviderElementContext.prototype._addQueryReadsTo = function (token, defaultValue, queryReadTokens) {\n        this._getQueriesFor(token).forEach(function (query) {\n            var /** @type {?} */ queryValue = query.meta.read || defaultValue;\n            var /** @type {?} */ tokenRef = tokenReference(queryValue);\n            var /** @type {?} */ queryMatches = queryReadTokens.get(tokenRef);\n            if (!queryMatches) {\n                queryMatches = [];\n                queryReadTokens.set(tokenRef, queryMatches);\n            }\n            queryMatches.push({ queryId: query.queryId, value: queryValue });\n        });\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getQueriesFor = function (token) {\n        var /** @type {?} */ result = [];\n        var /** @type {?} */ currentEl = this;\n        var /** @type {?} */ distance = 0;\n        var /** @type {?} */ queries;\n        while (currentEl !== null) {\n            queries = currentEl._contentQueries.get(tokenReference(token));\n            if (queries) {\n                result.push.apply(result, queries.filter(function (query) { return query.meta.descendants || distance <= 1; }));\n            }\n            if (currentEl._directiveAsts.length > 0) {\n                distance++;\n            }\n            currentEl = currentEl._parent;\n        }\n        queries = this.viewContext.viewQueries.get(tokenReference(token));\n        if (queries) {\n            result.push.apply(result, queries);\n        }\n        return result;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getOrCreateLocalProvider = function (requestingProviderType, token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider || ((requestingProviderType === ProviderAstType.Directive ||\n            requestingProviderType === ProviderAstType.PublicService) &&\n            resolvedProvider.providerType === ProviderAstType.PrivateService) ||\n            ((requestingProviderType === ProviderAstType.PrivateService ||\n                requestingProviderType === ProviderAstType.PublicService) &&\n                resolvedProvider.providerType === ProviderAstType.Builtin)) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this.viewContext.errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), this._sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = provider.useExisting;\n            var /** @type {?} */ transformedDeps;\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = _this._getDependency(resolvedProvider.providerType, { token: provider.useExisting }, eager);\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = null;\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(resolvedProvider.providerType, dep, eager); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(resolvedProvider.providerType, dep, eager); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getLocalDependency = function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = null; }\n        if (dep.isAttribute) {\n            var /** @type {?} */ attrValue = this._attrs[dep.token.value];\n            return { isValue: true, value: attrValue == null ? null : attrValue };\n        }\n        if (dep.token != null) {\n            // access builtints\n            if ((requestingProviderType === ProviderAstType.Directive ||\n                requestingProviderType === ProviderAstType.Component)) {\n                if (tokenReference(dep.token) === resolveIdentifier(Identifiers.Renderer) ||\n                    tokenReference(dep.token) === resolveIdentifier(Identifiers.ElementRef) ||\n                    tokenReference(dep.token) === resolveIdentifier(Identifiers.ChangeDetectorRef) ||\n                    tokenReference(dep.token) === resolveIdentifier(Identifiers.TemplateRef)) {\n                    return dep;\n                }\n                if (tokenReference(dep.token) === resolveIdentifier(Identifiers.ViewContainerRef)) {\n                    this._hasViewContainer = true;\n                }\n            }\n            // access the injector\n            if (tokenReference(dep.token) === resolveIdentifier(Identifiers.Injector)) {\n                return dep;\n            }\n            // access providers\n            if (this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager) != null) {\n                return dep;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getDependency = function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = null; }\n        var /** @type {?} */ currElement = this;\n        var /** @type {?} */ currEager = eager;\n        var /** @type {?} */ result = null;\n        if (!dep.isSkipSelf) {\n            result = this._getLocalDependency(requestingProviderType, dep, eager);\n        }\n        if (dep.isSelf) {\n            if (!result && dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n        }\n        else {\n            // check parent elements\n            while (!result && currElement._parent) {\n                var /** @type {?} */ prevElement = currElement;\n                currElement = currElement._parent;\n                if (prevElement._isViewRoot) {\n                    currEager = false;\n                }\n                result = currElement._getLocalDependency(ProviderAstType.PublicService, dep, currEager);\n            }\n            // check @Host restriction\n            if (!result) {\n                if (!dep.isHost || this.viewContext.component.isHost ||\n                    this.viewContext.component.type.reference === tokenReference(dep.token) ||\n                    this.viewContext.viewProviders.get(tokenReference(dep.token)) != null) {\n                    result = dep;\n                }\n                else {\n                    result = dep.isOptional ? result = { isValue: true, value: null } : null;\n                }\n            }\n        }\n        if (!result) {\n            this.viewContext.errors.push(new ProviderError(\"No provider for \" + tokenName(dep.token), this._sourceSpan));\n        }\n        return result;\n    };\n    return ProviderElementContext;\n}());\nvar NgModuleProviderAnalyzer = (function () {\n    /**\n     * @param {?} ngModule\n     * @param {?} extraProviders\n     * @param {?} sourceSpan\n     */\n    function NgModuleProviderAnalyzer(ngModule, extraProviders, sourceSpan) {\n        var _this = this;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._errors = [];\n        this._allProviders = new Map();\n        ngModule.transitiveModule.modules.forEach(function (ngModuleType) {\n            var ngModuleProvider = { token: { identifier: ngModuleType }, useClass: ngModuleType };\n            _resolveProviders([ngModuleProvider], ProviderAstType.PublicService, true, sourceSpan, _this._errors, _this._allProviders);\n        });\n        _resolveProviders(ngModule.transitiveModule.providers.map(function (entry) { return entry.provider; }).concat(extraProviders), ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders);\n    }\n    /**\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype.parse = function () {\n        var _this = this;\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.token, provider.eager);\n        });\n        if (this._errors.length > 0) {\n            var /** @type {?} */ errorString = this._errors.join('\\n');\n            throw new Error(\"Provider parse errors:\\n\" + errorString);\n        }\n        return Array.from(this._transformedProviders.values());\n    };\n    /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider = function (token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this._errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), resolvedProvider.sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = provider.useExisting;\n            var /** @type {?} */ transformedDeps;\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = _this._getDependency({ token: provider.useExisting }, eager, resolvedProvider.sourceSpan);\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = null;\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getDependency = function (dep, eager, requestorSourceSpan) {\n        if (eager === void 0) { eager = null; }\n        var /** @type {?} */ foundLocal = false;\n        if (!dep.isSkipSelf && dep.token != null) {\n            // access the injector\n            if (tokenReference(dep.token) === resolveIdentifier(Identifiers.Injector) ||\n                tokenReference(dep.token) === resolveIdentifier(Identifiers.ComponentFactoryResolver)) {\n                foundLocal = true;\n            }\n            else if (this._getOrCreateLocalProvider(dep.token, eager) != null) {\n                foundLocal = true;\n            }\n        }\n        var /** @type {?} */ result = dep;\n        if (dep.isSelf && !foundLocal) {\n            if (dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n            else {\n                this._errors.push(new ProviderError(\"No provider for \" + tokenName(dep.token), requestorSourceSpan));\n            }\n        }\n        return result;\n    };\n    return NgModuleProviderAnalyzer;\n}());\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProvider(provider, _a) {\n    var useExisting = _a.useExisting, useValue = _a.useValue, deps = _a.deps;\n    return {\n        token: provider.token,\n        useClass: provider.useClass,\n        useExisting: useExisting,\n        useFactory: provider.useFactory,\n        useValue: useValue,\n        deps: deps,\n        multi: provider.multi\n    };\n}\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProviderAst(provider, _a) {\n    var eager = _a.eager, providers = _a.providers;\n    return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan);\n}\n/**\n * @param {?} directives\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @return {?}\n */\nfunction _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n    var /** @type {?} */ providersByToken = new Map();\n    directives.forEach(function (directive) {\n        var /** @type {?} */ dirProvider = { token: { identifier: directive.type }, useClass: directive.type };\n        _resolveProviders([dirProvider], directive.isComponent ? ProviderAstType.Component : ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken);\n    });\n    // Note: directives need to be able to overwrite providers of a component!\n    var /** @type {?} */ directivesWithComponentFirst = directives.filter(function (dir) { return dir.isComponent; }).concat(directives.filter(function (dir) { return !dir.isComponent; }));\n    directivesWithComponentFirst.forEach(function (directive) {\n        _resolveProviders(directive.providers, ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken);\n        _resolveProviders(directive.viewProviders, ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken);\n    });\n    return providersByToken;\n}\n/**\n * @param {?} providers\n * @param {?} providerType\n * @param {?} eager\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @param {?} targetProvidersByToken\n * @return {?}\n */\nfunction _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken) {\n    providers.forEach(function (provider) {\n        var /** @type {?} */ resolvedProvider = targetProvidersByToken.get(tokenReference(provider.token));\n        if (resolvedProvider != null && !!resolvedProvider.multiProvider !== !!provider.multi) {\n            targetErrors.push(new ProviderError(\"Mixing multi and non multi provider is not possible for token \" + tokenName(resolvedProvider.token), sourceSpan));\n        }\n        if (!resolvedProvider) {\n            var /** @type {?} */ lifecycleHooks = provider.token.identifier &&\n                ((provider.token.identifier)).lifecycleHooks ?\n                ((provider.token.identifier)).lifecycleHooks :\n                [];\n            var /** @type {?} */ isUseValue = !(provider.useClass || provider.useExisting || provider.useFactory);\n            resolvedProvider = new ProviderAst(provider.token, provider.multi, eager || isUseValue, [provider], providerType, lifecycleHooks, sourceSpan);\n            targetProvidersByToken.set(tokenReference(provider.token), resolvedProvider);\n        }\n        else {\n            if (!provider.multi) {\n                resolvedProvider.providers.length = 0;\n            }\n            resolvedProvider.providers.push(provider);\n        }\n    });\n}\n/**\n * @param {?} component\n * @return {?}\n */\nfunction _getViewQueries(component) {\n    // Note: queries start with id 1 so we can use the number in a Bloom filter!\n    var /** @type {?} */ viewQueryId = 1;\n    var /** @type {?} */ viewQueries = new Map();\n    if (component.viewQueries) {\n        component.viewQueries.forEach(function (query) { return _addQueryToTokenMap(viewQueries, { meta: query, queryId: viewQueryId++ }); });\n    }\n    return viewQueries;\n}\n/**\n * @param {?} contentQueryStartId\n * @param {?} directives\n * @return {?}\n */\nfunction _getContentQueries(contentQueryStartId, directives) {\n    var /** @type {?} */ contentQueryId = contentQueryStartId;\n    var /** @type {?} */ contentQueries = new Map();\n    directives.forEach(function (directive, directiveIndex) {\n        if (directive.queries) {\n            directive.queries.forEach(function (query) { return _addQueryToTokenMap(contentQueries, { meta: query, queryId: contentQueryId++ }); });\n        }\n    });\n    return contentQueries;\n}\n/**\n * @param {?} map\n * @param {?} query\n * @return {?}\n */\nfunction _addQueryToTokenMap(map, query) {\n    query.meta.selectors.forEach(function (token) {\n        var /** @type {?} */ entry = map.get(tokenReference(token));\n        if (!entry) {\n            entry = [];\n            map.set(tokenReference(token), entry);\n        }\n        entry.push(query);\n    });\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar ElementSchemaRegistry = (function () {\n    function ElementSchemaRegistry() {\n    }\n    /**\n     * @abstract\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.hasProperty = function (tagName, propName, schemaMetas) { };\n    /**\n     * @abstract\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.hasElement = function (tagName, schemaMetas) { };\n    /**\n     * @abstract\n     * @param {?} elementName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.securityContext = function (elementName, propName, isAttribute) { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.allKnownElementNames = function () { };\n    /**\n     * @abstract\n     * @param {?} propName\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.getMappedPropName = function (propName) { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.getDefaultComponentElementName = function () { };\n    /**\n     * @abstract\n     * @param {?} name\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.validateProperty = function (name) { };\n    /**\n     * @abstract\n     * @param {?} name\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.validateAttribute = function (name) { };\n    /**\n     * @abstract\n     * @param {?} propName\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = function (propName) { };\n    /**\n     * @abstract\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.normalizeAnimationStyleValue = function (camelCaseProp, userProvidedProp, val) { };\n    return ElementSchemaRegistry;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar StyleWithImports = (function () {\n    /**\n     * @param {?} style\n     * @param {?} styleUrls\n     */\n    function StyleWithImports(style$$1, styleUrls) {\n        this.style = style$$1;\n        this.styleUrls = styleUrls;\n    }\n    return StyleWithImports;\n}());\n/**\n * @param {?} url\n * @return {?}\n */\nfunction isStyleUrlResolvable(url) {\n    if (url == null || url.length === 0 || url[0] == '/')\n        return false;\n    var /** @type {?} */ schemeMatch = url.match(URL_WITH_SCHEMA_REGEXP);\n    return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n}\n/**\n * Rewrites stylesheets by resolving and removing the \\@import urls that\n * are either relative or don't have a `package:` scheme\n * @param {?} resolver\n * @param {?} baseUrl\n * @param {?} cssText\n * @return {?}\n */\nfunction extractStyleUrls(resolver, baseUrl, cssText) {\n    var /** @type {?} */ foundUrls = [];\n    var /** @type {?} */ modifiedCssText = cssText.replace(CSS_COMMENT_REGEXP, '').replace(CSS_IMPORT_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ url = m[1] || m[2];\n        if (!isStyleUrlResolvable(url)) {\n            // Do not attempt to resolve non-package absolute URLs with URI scheme\n            return m[0];\n        }\n        foundUrls.push(resolver.resolve(baseUrl, url));\n        return '';\n    });\n    return new StyleWithImports(modifiedCssText, foundUrls);\n}\nvar CSS_IMPORT_REGEXP = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\nvar CSS_COMMENT_REGEXP = /\\/\\*.+?\\*\\//g;\nvar URL_WITH_SCHEMA_REGEXP = /^([^:/?#]+):/;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PROPERTY_PARTS_SEPARATOR = '.';\nvar ATTRIBUTE_PREFIX = 'attr';\nvar CLASS_PREFIX = 'class';\nvar STYLE_PREFIX = 'style';\nvar ANIMATE_PROP_PREFIX = 'animate-';\nvar BoundPropertyType = {};\nBoundPropertyType.DEFAULT = 0;\nBoundPropertyType.LITERAL_ATTR = 1;\nBoundPropertyType.ANIMATION = 2;\nBoundPropertyType[BoundPropertyType.DEFAULT] = \"DEFAULT\";\nBoundPropertyType[BoundPropertyType.LITERAL_ATTR] = \"LITERAL_ATTR\";\nBoundPropertyType[BoundPropertyType.ANIMATION] = \"ANIMATION\";\n/**\n * Represents a parsed property.\n */\nvar BoundProperty = (function () {\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} type\n     * @param {?} sourceSpan\n     */\n    function BoundProperty(name, expression, type, sourceSpan) {\n        this.name = name;\n        this.expression = expression;\n        this.type = type;\n        this.sourceSpan = sourceSpan;\n    }\n    Object.defineProperty(BoundProperty.prototype, \"isLiteral\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.type === BoundPropertyType.LITERAL_ATTR; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BoundProperty.prototype, \"isAnimation\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.type === BoundPropertyType.ANIMATION; },\n        enumerable: true,\n        configurable: true\n    });\n    return BoundProperty;\n}());\n/**\n * Parses bindings in templates and in the directive host area.\n */\nvar BindingParser = (function () {\n    /**\n     * @param {?} _exprParser\n     * @param {?} _interpolationConfig\n     * @param {?} _schemaRegistry\n     * @param {?} pipes\n     * @param {?} _targetErrors\n     */\n    function BindingParser(_exprParser, _interpolationConfig, _schemaRegistry, pipes, _targetErrors) {\n        var _this = this;\n        this._exprParser = _exprParser;\n        this._interpolationConfig = _interpolationConfig;\n        this._schemaRegistry = _schemaRegistry;\n        this._targetErrors = _targetErrors;\n        this.pipesByName = new Map();\n        this._usedPipes = new Map();\n        pipes.forEach(function (pipe) { return _this.pipesByName.set(pipe.name, pipe); });\n    }\n    /**\n     * @return {?}\n     */\n    BindingParser.prototype.getUsedPipes = function () { return Array.from(this._usedPipes.values()); };\n    /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostPropertyAsts = function (dirMeta, elementSelector, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostProperties) {\n            var /** @type {?} */ boundProps_1 = [];\n            Object.keys(dirMeta.hostProperties).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostProperties[propName];\n                if (typeof expression === 'string') {\n                    _this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host property binding \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return boundProps_1.map(function (prop) { return _this.createElementPropertyAst(elementSelector, prop); });\n        }\n    };\n    /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostEventAsts = function (dirMeta, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostListeners) {\n            var /** @type {?} */ targetEventAsts_1 = [];\n            Object.keys(dirMeta.hostListeners).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostListeners[propName];\n                if (typeof expression === 'string') {\n                    _this.parseEvent(propName, expression, sourceSpan, [], targetEventAsts_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host listener \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return targetEventAsts_1;\n        }\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.parseInterpolation = function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig);\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    BindingParser.prototype.parseInlineTemplateBinding = function (prefixToken, value, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n        var /** @type {?} */ bindings = this._parseTemplateBindings(prefixToken, value, sourceSpan);\n        for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n            var /** @type {?} */ binding = bindings[i];\n            if (binding.keyIsVar) {\n                targetVars.push(new VariableAst(binding.key, binding.name, sourceSpan));\n            }\n            else if (binding.expression) {\n                this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n            else {\n                targetMatchableAttrs.push([binding.key, '']);\n                this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseTemplateBindings = function (prefixToken, value, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ bindingsResult = this._exprParser.parseTemplateBindings(prefixToken, value, sourceInfo);\n            this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n            bindingsResult.templateBindings.forEach(function (binding) {\n                if (binding.expression) {\n                    _this._checkPipes(binding.expression, sourceSpan);\n                }\n            });\n            bindingsResult.warnings.forEach(function (warning) { _this._reportError(warning, sourceSpan, ParseErrorLevel.WARNING); });\n            return bindingsResult.templateBindings;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return [];\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parseLiteralAttr = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        if (_isAnimationLabel(name)) {\n            name = name.substring(1);\n            if (value) {\n                this._reportError(\"Assigning animation triggers via @prop=\\\"exp\\\" attributes with an expression is invalid.\" +\n                    \" Use property bindings (e.g. [@prop]=\\\"exp\\\") or use an attribute without a value (e.g. @prop) instead.\", sourceSpan, ParseErrorLevel.ERROR);\n            }\n            this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            targetProps.push(new BoundProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), BoundPropertyType.LITERAL_ATTR, sourceSpan));\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyBinding = function (name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ isAnimationProp = false;\n        if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n            isAnimationProp = true;\n            name = name.substring(ANIMATE_PROP_PREFIX.length);\n        }\n        else if (_isAnimationLabel(name)) {\n            isAnimationProp = true;\n            name = name.substring(1);\n        }\n        if (isAnimationProp) {\n            this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyInterpolation = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ expr = this.parseInterpolation(value, sourceSpan);\n        if (expr) {\n            this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parsePropertyAst = function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n        targetMatchableAttrs.push([name, ast.source]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.DEFAULT, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimation = function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n        // This will occur when a @trigger is not paired with an expression.\n        // For animations it is valid to not have an expression since */void\n        // states will be applied by angular when the element is attached/detached\n        var /** @type {?} */ ast = this._parseBinding(expression || 'null', false, sourceSpan);\n        targetMatchableAttrs.push([name, ast.source]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.ANIMATION, sourceSpan));\n    };\n    /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseBinding = function (value, isHostBinding, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = isHostBinding ?\n                this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n                this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    BindingParser.prototype.createElementPropertyAst = function (elementSelector, boundProp) {\n        if (boundProp.isAnimation) {\n            return new BoundElementPropertyAst(boundProp.name, PropertyBindingType.Animation, _angular_core.SecurityContext.NONE, boundProp.expression, null, boundProp.sourceSpan);\n        }\n        var /** @type {?} */ unit = null;\n        var /** @type {?} */ bindingType;\n        var /** @type {?} */ boundPropertyName = null;\n        var /** @type {?} */ parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n        var /** @type {?} */ securityContexts;\n        // Check check for special cases (prefix style, attr, class)\n        if (parts.length > 1) {\n            if (parts[0] == ATTRIBUTE_PREFIX) {\n                boundPropertyName = parts[1];\n                this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n                securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n                var /** @type {?} */ nsSeparatorIdx = boundPropertyName.indexOf(':');\n                if (nsSeparatorIdx > -1) {\n                    var /** @type {?} */ ns = boundPropertyName.substring(0, nsSeparatorIdx);\n                    var /** @type {?} */ name = boundPropertyName.substring(nsSeparatorIdx + 1);\n                    boundPropertyName = mergeNsAndName(ns, name);\n                }\n                bindingType = PropertyBindingType.Attribute;\n            }\n            else if (parts[0] == CLASS_PREFIX) {\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Class;\n                securityContexts = [_angular_core.SecurityContext.NONE];\n            }\n            else if (parts[0] == STYLE_PREFIX) {\n                unit = parts.length > 2 ? parts[2] : null;\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Style;\n                securityContexts = [_angular_core.SecurityContext.STYLE];\n            }\n        }\n        // If not a special case, use the full property name\n        if (boundPropertyName === null) {\n            boundPropertyName = this._schemaRegistry.getMappedPropName(boundProp.name);\n            securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n            bindingType = PropertyBindingType.Property;\n            this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n        }\n        return new BoundElementPropertyAst(boundPropertyName, bindingType, securityContexts[0], boundProp.expression, unit, boundProp.sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype.parseEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        if (_isAnimationLabel(name)) {\n            name = name.substr(1);\n            this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n        }\n        else {\n            this._parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimationEvent = function (name, expression, sourceSpan, targetEvents) {\n        var /** @type {?} */ matches = splitAtPeriod(name, [name, '']);\n        var /** @type {?} */ eventName = matches[0];\n        var /** @type {?} */ phase = matches[1].toLowerCase();\n        if (phase) {\n            switch (phase) {\n                case 'start':\n                case 'done':\n                    var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n                    targetEvents.push(new BoundEventAst(eventName, null, phase, ast, sourceSpan));\n                    break;\n                default:\n                    this._reportError(\"The provided animation output phase value \\\"\" + phase + \"\\\" for \\\"@\" + eventName + \"\\\" is not supported (use start or done)\", sourceSpan);\n                    break;\n            }\n        }\n        else {\n            this._reportError(\"The animation trigger output event (@\" + eventName + \") is missing its phase value name (start or done are currently supported)\", sourceSpan);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        // long format: 'target: eventName'\n        var _a = splitAtColon(name, [null, name]), target = _a[0], eventName = _a[1];\n        var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n        targetMatchableAttrs.push([name, ast.source]);\n        targetEvents.push(new BoundEventAst(eventName, target, null, ast, sourceSpan));\n        // Don't detect directives for event names for now,\n        // so don't add the event name to the matchableAttrs\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseAction = function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n            if (ast) {\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            }\n            if (!ast || ast.ast instanceof EmptyExpr) {\n                this._reportError(\"Empty expressions are not allowed\", sourceSpan);\n                return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n            }\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    BindingParser.prototype._reportError = function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._reportExpressionParserErrors = function (errors, sourceSpan) {\n        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n            var error = errors_1[_i];\n            this._reportError(error.message, sourceSpan);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._checkPipes = function (ast, sourceSpan) {\n        var _this = this;\n        if (ast) {\n            var /** @type {?} */ collector = new PipeCollector();\n            ast.visit(collector);\n            collector.pipes.forEach(function (ast, pipeName) {\n                var /** @type {?} */ pipeMeta = _this.pipesByName.get(pipeName);\n                if (!pipeMeta) {\n                    _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", new ParseSourceSpan(sourceSpan.start.moveBy(ast.span.start), sourceSpan.start.moveBy(ast.span.end)));\n                }\n                else {\n                    _this._usedPipes.set(pipeName, pipeMeta);\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    BindingParser.prototype._validatePropertyOrAttributeName = function (propName, sourceSpan, isAttr) {\n        var /** @type {?} */ report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n            this._schemaRegistry.validateProperty(propName);\n        if (report.error) {\n            this._reportError(report.msg, sourceSpan, ParseErrorLevel.ERROR);\n        }\n    };\n    return BindingParser;\n}());\nvar PipeCollector = (function (_super) {\n    __extends(PipeCollector, _super);\n    function PipeCollector() {\n        var _this = _super.apply(this, arguments) || this;\n        _this.pipes = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    PipeCollector.prototype.visitPipe = function (ast, context) {\n        this.pipes.set(ast.name, ast);\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    return PipeCollector;\n}(RecursiveAstVisitor));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _isAnimationLabel(name) {\n    return name[0] == '@';\n}\n/**\n * @param {?} registry\n * @param {?} selector\n * @param {?} propName\n * @param {?} isAttribute\n * @return {?}\n */\nfunction calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n    var /** @type {?} */ ctxs = [];\n    CssSelector.parse(selector).forEach(function (selector) {\n        var /** @type {?} */ elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n        var /** @type {?} */ notElementNames = new Set(selector.notSelectors.filter(function (selector) { return selector.isElementSelector(); })\n            .map(function (selector) { return selector.element; }));\n        var /** @type {?} */ possibleElementNames = elementNames.filter(function (elementName) { return !notElementNames.has(elementName); });\n        ctxs.push.apply(ctxs, possibleElementNames.map(function (elementName) { return registry.securityContext(elementName, propName, isAttribute); }));\n    });\n    return ctxs.length === 0 ? [_angular_core.SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NG_CONTENT_SELECT_ATTR = 'select';\nvar NG_CONTENT_ELEMENT = 'ng-content';\nvar LINK_ELEMENT = 'link';\nvar LINK_STYLE_REL_ATTR = 'rel';\nvar LINK_STYLE_HREF_ATTR = 'href';\nvar LINK_STYLE_REL_VALUE = 'stylesheet';\nvar STYLE_ELEMENT = 'style';\nvar SCRIPT_ELEMENT = 'script';\nvar NG_NON_BINDABLE_ATTR = 'ngNonBindable';\nvar NG_PROJECT_AS = 'ngProjectAs';\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction preparseElement(ast) {\n    var /** @type {?} */ selectAttr = null;\n    var /** @type {?} */ hrefAttr = null;\n    var /** @type {?} */ relAttr = null;\n    var /** @type {?} */ nonBindable = false;\n    var /** @type {?} */ projectAs = null;\n    ast.attrs.forEach(function (attr) {\n        var /** @type {?} */ lcAttrName = attr.name.toLowerCase();\n        if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n            selectAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n            hrefAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n            relAttr = attr.value;\n        }\n        else if (attr.name == NG_NON_BINDABLE_ATTR) {\n            nonBindable = true;\n        }\n        else if (attr.name == NG_PROJECT_AS) {\n            if (attr.value.length > 0) {\n                projectAs = attr.value;\n            }\n        }\n    });\n    selectAttr = normalizeNgContentSelect(selectAttr);\n    var /** @type {?} */ nodeName = ast.name.toLowerCase();\n    var /** @type {?} */ type = PreparsedElementType.OTHER;\n    if (splitNsName(nodeName)[1] == NG_CONTENT_ELEMENT) {\n        type = PreparsedElementType.NG_CONTENT;\n    }\n    else if (nodeName == STYLE_ELEMENT) {\n        type = PreparsedElementType.STYLE;\n    }\n    else if (nodeName == SCRIPT_ELEMENT) {\n        type = PreparsedElementType.SCRIPT;\n    }\n    else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n        type = PreparsedElementType.STYLESHEET;\n    }\n    return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n}\nvar PreparsedElementType = {};\nPreparsedElementType.NG_CONTENT = 0;\nPreparsedElementType.STYLE = 1;\nPreparsedElementType.STYLESHEET = 2;\nPreparsedElementType.SCRIPT = 3;\nPreparsedElementType.OTHER = 4;\nPreparsedElementType[PreparsedElementType.NG_CONTENT] = \"NG_CONTENT\";\nPreparsedElementType[PreparsedElementType.STYLE] = \"STYLE\";\nPreparsedElementType[PreparsedElementType.STYLESHEET] = \"STYLESHEET\";\nPreparsedElementType[PreparsedElementType.SCRIPT] = \"SCRIPT\";\nPreparsedElementType[PreparsedElementType.OTHER] = \"OTHER\";\nvar PreparsedElement = (function () {\n    /**\n     * @param {?} type\n     * @param {?} selectAttr\n     * @param {?} hrefAttr\n     * @param {?} nonBindable\n     * @param {?} projectAs\n     */\n    function PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n        this.type = type;\n        this.selectAttr = selectAttr;\n        this.hrefAttr = hrefAttr;\n        this.nonBindable = nonBindable;\n        this.projectAs = projectAs;\n    }\n    return PreparsedElement;\n}());\n/**\n * @param {?} selectAttr\n * @return {?}\n */\nfunction normalizeNgContentSelect(selectAttr) {\n    if (selectAttr === null || selectAttr.length === 0) {\n        return '*';\n    }\n    return selectAttr;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n// Group 1 = \"bind-\"\nvar KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nvar KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nvar KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nvar KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nvar KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nvar KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nvar IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nvar IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nvar IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nvar IDENT_EVENT_IDX = 10;\nvar NG_TEMPLATE_ELEMENT = 'ng-template';\n// deprecated in 4.x\nvar TEMPLATE_ELEMENT = 'template';\n// deprecated in 4.x\nvar TEMPLATE_ATTR = 'template';\nvar TEMPLATE_ATTR_PREFIX = '*';\nvar CLASS_ATTR = 'class';\nvar TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\n/**\n * Provides an array of {@link TemplateAstVisitor}s which will be used to transform\n * parsed templates before compilation is invoked, allowing custom expression syntax\n * and other advanced transformations.\n *\n * This is currently an internal-only feature and not meant for general use.\n */\nvar TEMPLATE_TRANSFORMS = new _angular_core.InjectionToken('TemplateTransforms');\nvar TemplateParseError = (function (_super) {\n    __extends(TemplateParseError, _super);\n    /**\n     * @param {?} message\n     * @param {?} span\n     * @param {?} level\n     */\n    function TemplateParseError(message, span, level) {\n        return _super.call(this, span, message, level) || this;\n    }\n    return TemplateParseError;\n}(ParseError));\nvar TemplateParseResult = (function () {\n    /**\n     * @param {?=} templateAst\n     * @param {?=} usedPipes\n     * @param {?=} errors\n     */\n    function TemplateParseResult(templateAst, usedPipes, errors) {\n        this.templateAst = templateAst;\n        this.usedPipes = usedPipes;\n        this.errors = errors;\n    }\n    return TemplateParseResult;\n}());\nvar TemplateParser = (function () {\n    /**\n     * @param {?} _config\n     * @param {?} _exprParser\n     * @param {?} _schemaRegistry\n     * @param {?} _htmlParser\n     * @param {?} _console\n     * @param {?} transforms\n     */\n    function TemplateParser(_config, _exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n        this._config = _config;\n        this._exprParser = _exprParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._htmlParser = _htmlParser;\n        this._console = _console;\n        this.transforms = transforms;\n    }\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @return {?}\n     */\n    TemplateParser.prototype.parse = function (component, template, directives, pipes, schemas, templateUrl) {\n        var /** @type {?} */ result = this.tryParse(component, template, directives, pipes, schemas, templateUrl);\n        var /** @type {?} */ warnings = result.errors.filter(function (error) { return error.level === ParseErrorLevel.WARNING; });\n        var /** @type {?} */ errors = result.errors.filter(function (error) { return error.level === ParseErrorLevel.ERROR; });\n        if (warnings.length > 0) {\n            this._console.warn(\"Template parse warnings:\\n\" + warnings.join('\\n'));\n        }\n        if (errors.length > 0) {\n            var /** @type {?} */ errorString = errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString);\n        }\n        return { template: result.templateAst, pipes: result.usedPipes };\n    };\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParse = function (component, template, directives, pipes, schemas, templateUrl) {\n        return this.tryParseHtml(this.expandHtml(this._htmlParser.parse(template, templateUrl, true, this.getInterpolationConfig(component))), component, template, directives, pipes, schemas, templateUrl);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParseHtml = function (htmlAstWithErrors, component, template, directives, pipes, schemas, templateUrl) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        var /** @type {?} */ usedPipes = [];\n        if (htmlAstWithErrors.rootNodes.length > 0) {\n            var /** @type {?} */ uniqDirectives = removeSummaryDuplicates(directives);\n            var /** @type {?} */ uniqPipes = removeSummaryDuplicates(pipes);\n            var /** @type {?} */ providerViewContext = new ProviderViewContext(component);\n            var /** @type {?} */ interpolationConfig = void 0;\n            if (component.template && component.template.interpolation) {\n                interpolationConfig = {\n                    start: component.template.interpolation[0],\n                    end: component.template.interpolation[1]\n                };\n            }\n            var /** @type {?} */ bindingParser = new BindingParser(this._exprParser, interpolationConfig, this._schemaRegistry, uniqPipes, errors);\n            var /** @type {?} */ parseVisitor = new TemplateParseVisitor(this._config, providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n            result = visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n            errors.push.apply(errors, providerViewContext.errors);\n            usedPipes.push.apply(usedPipes, bindingParser.getUsedPipes());\n        }\n        else {\n            result = [];\n        }\n        this._assertNoReferenceDuplicationOnTemplate(result, errors);\n        if (errors.length > 0) {\n            return new TemplateParseResult(result, usedPipes, errors);\n        }\n        if (this.transforms) {\n            this.transforms.forEach(function (transform) { result = templateVisitAll(transform, result); });\n        }\n        return new TemplateParseResult(result, usedPipes, errors);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    TemplateParser.prototype.expandHtml = function (htmlAstWithErrors, forced) {\n        if (forced === void 0) { forced = false; }\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        if (errors.length == 0 || forced) {\n            // Transform ICU messages to angular directives\n            var /** @type {?} */ expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n            errors.push.apply(errors, expandedHtmlAst.errors);\n            htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n        }\n        return htmlAstWithErrors;\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    TemplateParser.prototype.getInterpolationConfig = function (component) {\n        if (component.template) {\n            return InterpolationConfig.fromArray(component.template.interpolation);\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate = function (result, errors) {\n        var /** @type {?} */ existingReferences = [];\n        result.filter(function (element) { return !!((element)).references; })\n            .forEach(function (element) { return ((element)).references.forEach(function (reference) {\n            var /** @type {?} */ name = reference.name;\n            if (existingReferences.indexOf(name) < 0) {\n                existingReferences.push(name);\n            }\n            else {\n                var /** @type {?} */ error = new TemplateParseError(\"Reference \\\"#\" + name + \"\\\" is defined several times\", reference.sourceSpan, ParseErrorLevel.ERROR);\n                errors.push(error);\n            }\n        }); });\n    };\n    return TemplateParser;\n}());\nTemplateParser.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nTemplateParser.ctorParameters = function () { return [\n    { type: CompilerConfig, },\n    { type: Parser, },\n    { type: ElementSchemaRegistry, },\n    { type: I18NHtmlParser, },\n    { type: _angular_core.ɵConsole, },\n    { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [TEMPLATE_TRANSFORMS,] },] },\n]; };\nvar TemplateParseVisitor = (function () {\n    /**\n     * @param {?} config\n     * @param {?} providerViewContext\n     * @param {?} directives\n     * @param {?} _bindingParser\n     * @param {?} _schemaRegistry\n     * @param {?} _schemas\n     * @param {?} _targetErrors\n     */\n    function TemplateParseVisitor(config, providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n        var _this = this;\n        this.config = config;\n        this.providerViewContext = providerViewContext;\n        this._bindingParser = _bindingParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._schemas = _schemas;\n        this._targetErrors = _targetErrors;\n        this.selectorMatcher = new SelectorMatcher();\n        this.directivesIndex = new Map();\n        this.ngContentCount = 0;\n        // Note: queries start with id 1 so we can use the number in a Bloom filter!\n        this.contentQueryStartId = providerViewContext.component.viewQueries.length + 1;\n        directives.forEach(function (directive, index) {\n            var selector = CssSelector.parse(directive.selector);\n            _this.selectorMatcher.addSelectables(selector, directive);\n            _this.directivesIndex.set(directive, index);\n        });\n    }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansion = function (expansion, context) { return null; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return null; };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitText = function (text, parent) {\n        var /** @type {?} */ ngContentIndex = parent.findNgContentIndex(TEXT_CSS_SELECTOR);\n        var /** @type {?} */ expr = this._bindingParser.parseInterpolation(text.value, text.sourceSpan);\n        return expr ? new BoundTextAst(expr, ngContentIndex, text.sourceSpan) :\n            new TextAst(text.value, ngContentIndex, text.sourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitAttribute = function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitComment = function (comment, context) { return null; };\n    /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitElement = function (element, parent) {\n        var _this = this;\n        var /** @type {?} */ queryStartIndex = this.contentQueryStartId;\n        var /** @type {?} */ nodeName = element.name;\n        var /** @type {?} */ preparsedElement = preparseElement(element);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE) {\n            // Skipping <script> for security reasons\n            // Skipping <style> as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n            isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n            // Skipping stylesheets with either relative urls or package scheme as we already processed\n            // them in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ matchableAttrs = [];\n        var /** @type {?} */ elementOrDirectiveProps = [];\n        var /** @type {?} */ elementOrDirectiveRefs = [];\n        var /** @type {?} */ elementVars = [];\n        var /** @type {?} */ events = [];\n        var /** @type {?} */ templateElementOrDirectiveProps = [];\n        var /** @type {?} */ templateMatchableAttrs = [];\n        var /** @type {?} */ templateElementVars = [];\n        var /** @type {?} */ hasInlineTemplates = false;\n        var /** @type {?} */ attrs = [];\n        var /** @type {?} */ isTemplateElement = isTemplate(element, this.config.enableLegacyTemplate, function (m, span) { return _this._reportError(m, span, ParseErrorLevel.WARNING); });\n        element.attrs.forEach(function (attr) {\n            var /** @type {?} */ hasBinding = _this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n            var /** @type {?} */ templateBindingsSource;\n            var /** @type {?} */ prefixToken;\n            var /** @type {?} */ normalizedName = _this._normalizeAttributeName(attr.name);\n            if (_this.config.enableLegacyTemplate && normalizedName == TEMPLATE_ATTR) {\n                _this._reportError(\"The template attribute is deprecated. Use an ng-template element instead.\", attr.sourceSpan, ParseErrorLevel.WARNING);\n                templateBindingsSource = attr.value;\n            }\n            else if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n                templateBindingsSource = attr.value;\n                prefixToken = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length) + ':';\n            }\n            var /** @type {?} */ hasTemplateBinding = templateBindingsSource != null;\n            if (hasTemplateBinding) {\n                if (hasInlineTemplates) {\n                    _this._reportError(\"Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *\", attr.sourceSpan);\n                }\n                hasInlineTemplates = true;\n                _this._bindingParser.parseInlineTemplateBinding(prefixToken, templateBindingsSource, attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, templateElementVars);\n            }\n            if (!hasBinding && !hasTemplateBinding) {\n                // don't include the bindings as attributes as well in the AST\n                attrs.push(_this.visitAttribute(attr, null));\n                matchableAttrs.push([attr.name, attr.value]);\n            }\n        });\n        var /** @type {?} */ elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);\n        var _a = this._parseDirectives(this.selectorMatcher, elementCssSelector), directiveMetas = _a.directives, matchElement = _a.matchElement;\n        var /** @type {?} */ references = [];\n        var /** @type {?} */ boundDirectivePropNames = new Set();\n        var /** @type {?} */ directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, element.sourceSpan, references, boundDirectivePropNames);\n        var /** @type {?} */ elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, boundDirectivePropNames);\n        var /** @type {?} */ isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n        var /** @type {?} */ providerContext = new ProviderElementContext(this.providerViewContext, parent.providerContext, isViewRoot, directiveAsts, attrs, references, isTemplateElement, queryStartIndex, element.sourceSpan);\n        var /** @type {?} */ children = visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? parent.providerContext : providerContext));\n        providerContext.afterElement();\n        // Override the actual selector when the `ngProjectAs` attribute is provided\n        var /** @type {?} */ projectionSelector = preparsedElement.projectAs != null ?\n            CssSelector.parse(preparsedElement.projectAs)[0] :\n            elementCssSelector;\n        var /** @type {?} */ ngContentIndex = parent.findNgContentIndex(projectionSelector);\n        var /** @type {?} */ parsedElement;\n        if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n            if (element.children && !element.children.every(_isEmptyTextNode)) {\n                this._reportError(\"<ng-content> element cannot have content.\", element.sourceSpan);\n            }\n            parsedElement = new NgContentAst(this.ngContentCount++, hasInlineTemplates ? null : ngContentIndex, element.sourceSpan);\n        }\n        else if (isTemplateElement) {\n            this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n            this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, element.sourceSpan);\n            parsedElement = new EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex, element.sourceSpan);\n        }\n        else {\n            this._assertElementExists(matchElement, element);\n            this._assertOnlyOneComponent(directiveAsts, element.sourceSpan);\n            var /** @type {?} */ ngContentIndex_1 = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n            parsedElement = new ElementAst(nodeName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex_1, element.sourceSpan, element.endSourceSpan);\n        }\n        if (hasInlineTemplates) {\n            var /** @type {?} */ templateQueryStartIndex = this.contentQueryStartId;\n            var /** @type {?} */ templateSelector = createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);\n            var templateDirectiveMetas = this._parseDirectives(this.selectorMatcher, templateSelector).directives;\n            var /** @type {?} */ templateBoundDirectivePropNames = new Set();\n            var /** @type {?} */ templateDirectiveAsts = this._createDirectiveAsts(true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [], element.sourceSpan, [], templateBoundDirectivePropNames);\n            var /** @type {?} */ templateElementProps = this._createElementPropertyAsts(element.name, templateElementOrDirectiveProps, templateBoundDirectivePropNames);\n            this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, element.sourceSpan);\n            var /** @type {?} */ templateProviderContext = new ProviderElementContext(this.providerViewContext, parent.providerContext, parent.isTemplateElement, templateDirectiveAsts, [], [], true, templateQueryStartIndex, element.sourceSpan);\n            templateProviderContext.afterElement();\n            parsedElement = new EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches, [parsedElement], ngContentIndex, element.sourceSpan);\n        }\n        return parsedElement;\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAttr = function (isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n        var /** @type {?} */ name = this._normalizeAttributeName(attr.name);\n        var /** @type {?} */ value = attr.value;\n        var /** @type {?} */ srcSpan = attr.sourceSpan;\n        var /** @type {?} */ bindParts = name.match(BIND_NAME_REGEXP);\n        var /** @type {?} */ hasBinding = false;\n        if (bindParts !== null) {\n            hasBinding = true;\n            if (bindParts[KW_BIND_IDX] != null) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[KW_LET_IDX]) {\n                if (isTemplateElement) {\n                    var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                    this._parseVariable(identifier, value, srcSpan, targetVars);\n                }\n                else {\n                    this._reportError(\"\\\"let-\\\" is only supported on template elements.\", srcSpan);\n                }\n            }\n            else if (bindParts[KW_REF_IDX]) {\n                var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                this._parseReference(identifier, value, srcSpan, targetRefs);\n            }\n            else if (bindParts[KW_ON_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_BINDON_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_AT_IDX]) {\n                this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[IDENT_PROPERTY_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_EVENT_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n        }\n        else {\n            hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        if (!hasBinding) {\n            this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        return hasBinding;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._normalizeAttributeName = function (attrName) {\n        return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseVariable = function (identifier, value, sourceSpan, targetVars) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n        }\n        targetVars.push(new VariableAst(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseReference = function (identifier, value, sourceSpan, targetRefs) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n        }\n        targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAssignmentEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        this._bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\n    };\n    /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseDirectives = function (selectorMatcher, elementCssSelector) {\n        var _this = this;\n        // Need to sort the directives so that we get consistent results throughout,\n        // as selectorMatcher uses Maps inside.\n        // Also deduplicate directives as they might match more than one time!\n        var /** @type {?} */ directives = new Array(this.directivesIndex.size);\n        // Whether any directive selector matches on the element name\n        var /** @type {?} */ matchElement = false;\n        selectorMatcher.match(elementCssSelector, function (selector, directive) {\n            directives[_this.directivesIndex.get(directive)] = directive;\n            matchElement = matchElement || selector.hasElementSelector();\n        });\n        return {\n            directives: directives.filter(function (dir) { return !!dir; }),\n            matchElement: matchElement,\n        };\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectiveAsts = function (isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences, targetBoundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ matchedReferences = new Set();\n        var /** @type {?} */ component = null;\n        var /** @type {?} */ directiveAsts = directives.map(function (directive) {\n            var /** @type {?} */ sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, \"Directive \" + identifierName(directive.type));\n            if (directive.isComponent) {\n                component = directive;\n            }\n            var /** @type {?} */ directiveProperties = [];\n            var /** @type {?} */ hostProperties = _this._bindingParser.createDirectiveHostPropertyAsts(directive, elementName, sourceSpan);\n            // Note: We need to check the host properties here as well,\n            // as we don't know the element name in the DirectiveWrapperCompiler yet.\n            hostProperties = _this._checkPropertiesInSchema(elementName, hostProperties);\n            var /** @type {?} */ hostEvents = _this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan);\n            _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties, targetBoundDirectivePropNames);\n            elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n                if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n                    (directive.exportAs == elOrDirRef.value)) {\n                    targetReferences.push(new ReferenceAst(elOrDirRef.name, identifierToken(directive.type), elOrDirRef.sourceSpan));\n                    matchedReferences.add(elOrDirRef.name);\n                }\n            });\n            var /** @type {?} */ contentQueryStartId = _this.contentQueryStartId;\n            _this.contentQueryStartId += directive.queries.length;\n            return new DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, contentQueryStartId, sourceSpan);\n        });\n        elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n            if (elOrDirRef.value.length > 0) {\n                if (!matchedReferences.has(elOrDirRef.name)) {\n                    _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + elOrDirRef.value + \"\\\"\", elOrDirRef.sourceSpan);\n                }\n            }\n            else if (!component) {\n                var /** @type {?} */ refToken = null;\n                if (isTemplateElement) {\n                    refToken = createIdentifierToken(Identifiers.TemplateRef);\n                }\n                targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.sourceSpan));\n            }\n        });\n        return directiveAsts;\n    };\n    /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectivePropertyAsts = function (directiveProperties, boundProps, targetBoundDirectiveProps, targetBoundDirectivePropNames) {\n        if (directiveProperties) {\n            var /** @type {?} */ boundPropsByName_1 = new Map();\n            boundProps.forEach(function (boundProp) {\n                var /** @type {?} */ prevValue = boundPropsByName_1.get(boundProp.name);\n                if (!prevValue || prevValue.isLiteral) {\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    boundPropsByName_1.set(boundProp.name, boundProp);\n                }\n            });\n            Object.keys(directiveProperties).forEach(function (dirProp) {\n                var /** @type {?} */ elProp = directiveProperties[dirProp];\n                var /** @type {?} */ boundProp = boundPropsByName_1.get(elProp);\n                // Bindings are optional, so this binding only needs to be set up if an expression is given.\n                if (boundProp) {\n                    targetBoundDirectivePropNames.add(boundProp.name);\n                    if (!isEmptyExpression(boundProp.expression)) {\n                        targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createElementPropertyAsts = function (elementName, props, boundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ boundElementProps = [];\n        props.forEach(function (prop) {\n            if (!prop.isLiteral && !boundDirectivePropNames.has(prop.name)) {\n                boundElementProps.push(_this._bindingParser.createElementPropertyAst(elementName, prop));\n            }\n        });\n        return this._checkPropertiesInSchema(elementName, boundElementProps);\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectives = function (directives) {\n        return directives.filter(function (directive) { return directive.directive.isComponent; });\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectiveNames = function (directives) {\n        return this._findComponentDirectives(directives)\n            .map(function (directive) { return identifierName(directive.directive.type); });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertOnlyOneComponent = function (directives, sourceSpan) {\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 1) {\n            this._reportError(\"More than one component matched on this element.\\n\" +\n                \"Make sure that only one component's selector can match a given element.\\n\" +\n                (\"Conflicting components: \" + componentTypeNames.join(',')), sourceSpan);\n        }\n    };\n    /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertElementExists = function (matchElement, element) {\n        var /** @type {?} */ elName = element.name.replace(/^:xhtml:/, '');\n        if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n            var /** @type {?} */ errorMsg = \"'\" + elName + \"' is not a known element:\\n\";\n            errorMsg +=\n                \"1. If '\" + elName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n            if (elName.indexOf('-') > -1) {\n                errorMsg +=\n                    \"2. If '\" + elName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n            }\n            else {\n                errorMsg +=\n                    \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n            }\n            this._reportError(errorMsg, element.sourceSpan);\n        }\n    };\n    /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = function (directives, elementProps, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 0) {\n            this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\n        }\n        elementProps.forEach(function (prop) {\n            _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", sourceSpan);\n        });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = function (directives, events) {\n        var _this = this;\n        var /** @type {?} */ allDirectiveEvents = new Set();\n        directives.forEach(function (directive) {\n            Object.keys(directive.directive.outputs).forEach(function (k) {\n                var /** @type {?} */ eventName = directive.directive.outputs[k];\n                allDirectiveEvents.add(eventName);\n            });\n        });\n        events.forEach(function (event) {\n            if (event.target != null || !allDirectiveEvents.has(event.name)) {\n                _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", event.sourceSpan);\n            }\n        });\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._checkPropertiesInSchema = function (elementName, boundProps) {\n        var _this = this;\n        // Note: We can't filter out empty expressions before this method,\n        // as we still want to validate them!\n        return boundProps.filter(function (boundProp) {\n            if (boundProp.type === PropertyBindingType.Property &&\n                !_this._schemaRegistry.hasProperty(elementName, boundProp.name, _this._schemas)) {\n                var /** @type {?} */ errorMsg = \"Can't bind to '\" + boundProp.name + \"' since it isn't a known property of '\" + elementName + \"'.\";\n                if (elementName.startsWith('ng-')) {\n                    errorMsg +=\n                        \"\\n1. If '\" + boundProp.name + \"' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.\" +\n                            \"\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                else if (elementName.indexOf('-') > -1) {\n                    errorMsg +=\n                        \"\\n1. If '\" + elementName + \"' is an Angular component and it has '\" + boundProp.name + \"' input, then verify that it is part of this module.\" +\n                            (\"\\n2. If '\" + elementName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\") +\n                            \"\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                _this._reportError(errorMsg, boundProp.sourceSpan);\n            }\n            return !isEmptyExpression(boundProp.value);\n        });\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._reportError = function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    return TemplateParseVisitor;\n}());\nvar NonBindableVisitor = (function () {\n    function NonBindableVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitElement = function (ast, parent) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE ||\n            preparsedElement.type === PreparsedElementType.STYLESHEET) {\n            // Skipping <script> for security reasons\n            // Skipping <style> and stylesheets as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ attrNameAndValues = ast.attrs.map(function (attr) { return [attr.name, attr.value]; });\n        var /** @type {?} */ selector = createElementCssSelector(ast.name, attrNameAndValues);\n        var /** @type {?} */ ngContentIndex = parent.findNgContentIndex(selector);\n        var /** @type {?} */ children = visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n        return new ElementAst(ast.name, visitAll(this, ast.attrs), [], [], [], [], [], false, [], children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitComment = function (comment, context) { return null; };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitAttribute = function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitText = function (text, parent) {\n        var /** @type {?} */ ngContentIndex = parent.findNgContentIndex(TEXT_CSS_SELECTOR);\n        return new TextAst(text.value, ngContentIndex, text.sourceSpan);\n    };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansion = function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return expansionCase; };\n    return NonBindableVisitor;\n}());\nvar ElementOrDirectiveRef = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function ElementOrDirectiveRef(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    return ElementOrDirectiveRef;\n}());\n/**\n * @param {?} classAttrValue\n * @return {?}\n */\nfunction splitClasses(classAttrValue) {\n    return classAttrValue.trim().split(/\\s+/g);\n}\nvar ElementContext = (function () {\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} _ngContentIndexMatcher\n     * @param {?} _wildcardNgContentIndex\n     * @param {?} providerContext\n     */\n    function ElementContext(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n        this.isTemplateElement = isTemplateElement;\n        this._ngContentIndexMatcher = _ngContentIndexMatcher;\n        this._wildcardNgContentIndex = _wildcardNgContentIndex;\n        this.providerContext = providerContext;\n    }\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    ElementContext.create = function (isTemplateElement, directives, providerContext) {\n        var /** @type {?} */ matcher = new SelectorMatcher();\n        var /** @type {?} */ wildcardNgContentIndex = null;\n        var /** @type {?} */ component = directives.find(function (directive) { return directive.directive.isComponent; });\n        if (component) {\n            var /** @type {?} */ ngContentSelectors = component.directive.template.ngContentSelectors;\n            for (var /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n                var /** @type {?} */ selector = ngContentSelectors[i];\n                if (selector === '*') {\n                    wildcardNgContentIndex = i;\n                }\n                else {\n                    matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n                }\n            }\n        }\n        return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ElementContext.prototype.findNgContentIndex = function (selector) {\n        var /** @type {?} */ ngContentIndices = [];\n        this._ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\n        ngContentIndices.sort();\n        if (this._wildcardNgContentIndex != null) {\n            ngContentIndices.push(this._wildcardNgContentIndex);\n        }\n        return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n    };\n    return ElementContext;\n}());\n/**\n * @param {?} elementName\n * @param {?} attributes\n * @return {?}\n */\nfunction createElementCssSelector(elementName, attributes) {\n    var /** @type {?} */ cssSelector = new CssSelector();\n    var /** @type {?} */ elNameNoNs = splitNsName(elementName)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (var /** @type {?} */ i = 0; i < attributes.length; i++) {\n        var /** @type {?} */ attrName = attributes[i][0];\n        var /** @type {?} */ attrNameNoNs = splitNsName(attrName)[1];\n        var /** @type {?} */ attrValue = attributes[i][1];\n        cssSelector.addAttribute(attrNameNoNs, attrValue);\n        if (attrName.toLowerCase() == CLASS_ATTR) {\n            var /** @type {?} */ classes = splitClasses(attrValue);\n            classes.forEach(function (className) { return cssSelector.addClassName(className); });\n        }\n    }\n    return cssSelector;\n}\nvar EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nvar NON_BINDABLE_VISITOR = new NonBindableVisitor();\n/**\n * @param {?} node\n * @return {?}\n */\nfunction _isEmptyTextNode(node) {\n    return node instanceof Text && node.value.trim().length == 0;\n}\n/**\n * @template T\n * @param {?} items\n * @return {?}\n */\nfunction removeSummaryDuplicates(items) {\n    var /** @type {?} */ map = new Map();\n    items.forEach(function (item) {\n        if (!map.get(item.type.reference)) {\n            map.set(item.type.reference, item);\n        }\n    });\n    return Array.from(map.values());\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction isEmptyExpression(ast) {\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    return ast instanceof EmptyExpr;\n}\n/**\n * @param {?} el\n * @param {?} enableLegacyTemplate\n * @param {?} reportDeprecation\n * @return {?}\n */\nfunction isTemplate(el, enableLegacyTemplate, reportDeprecation) {\n    var /** @type {?} */ tagNoNs = splitNsName(el.name)[1];\n    // `<ng-template>` is an angular construct and is lower case\n    if (tagNoNs === NG_TEMPLATE_ELEMENT)\n        return true;\n    // `<template>` is HTML and case insensitive\n    if (tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n        if (enableLegacyTemplate && tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n            reportDeprecation(\"The <template> element is deprecated. Use <ng-template> instead\", el.sourceSpan);\n            return true;\n        }\n        return false;\n    }\n}\n/**\n * An interface for retrieving documents by URL that the compiler uses\n * to load templates.\n */\nvar ResourceLoader = (function () {\n    function ResourceLoader() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    ResourceLoader.prototype.get = function (url) { return null; };\n    return ResourceLoader;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a {\\@link UrlResolver} with no package prefix.\n * @return {?}\n */\nfunction createUrlResolverWithoutPackagePrefix() {\n    return new UrlResolver();\n}\n/**\n * @return {?}\n */\nfunction createOfflineCompileUrlResolver() {\n    return new UrlResolver('.');\n}\n/**\n * A default provider for {@link PACKAGE_ROOT_URL} that maps to '/'.\n */\nvar DEFAULT_PACKAGE_URL_PROVIDER = {\n    provide: _angular_core.PACKAGE_ROOT_URL,\n    useValue: '/'\n};\n/**\n * Used by the {\\@link Compiler} when resolving HTML and CSS template URLs.\n *\n * This class can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n *\n * ## Example\n *\n * {\\@example compiler/ts/url_resolver/url_resolver.ts region='url_resolver'}\n *\n * \\@security When compiling templates at runtime, you must\n * ensure that the entire template comes from a trusted source.\n * Attacker-controlled data introduced by a template could expose your\n * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar UrlResolver = (function () {\n    /**\n     * @param {?=} _packagePrefix\n     */\n    function UrlResolver(_packagePrefix) {\n        if (_packagePrefix === void 0) { _packagePrefix = null; }\n        this._packagePrefix = _packagePrefix;\n    }\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    UrlResolver.prototype.resolve = function (baseUrl, url) {\n        var /** @type {?} */ resolvedUrl = url;\n        if (baseUrl != null && baseUrl.length > 0) {\n            resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n        }\n        var /** @type {?} */ resolvedParts = _split(resolvedUrl);\n        var /** @type {?} */ prefix = this._packagePrefix;\n        if (prefix != null && resolvedParts != null &&\n            resolvedParts[_ComponentIndex.Scheme] == 'package') {\n            var /** @type {?} */ path = resolvedParts[_ComponentIndex.Path];\n            prefix = prefix.replace(/\\/+$/, '');\n            path = path.replace(/^\\/+/, '');\n            return prefix + \"/\" + path;\n        }\n        return resolvedUrl;\n    };\n    return UrlResolver;\n}());\nUrlResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nUrlResolver.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.PACKAGE_ROOT_URL,] },] },\n]; };\n/**\n * Extract the scheme of a URL.\n * @param {?} url\n * @return {?}\n */\nfunction getUrlScheme(url) {\n    var /** @type {?} */ match = _split(url);\n    return (match && match[_ComponentIndex.Scheme]) || '';\n}\n/**\n * Builds a URI string from already-encoded parts.\n *\n * No encoding is performed.  Any component may be omitted as either null or\n * undefined.\n *\n * @param {?=} opt_scheme The scheme such as 'http'.\n * @param {?=} opt_userInfo The user name before the '\\@'.\n * @param {?=} opt_domain The domain such as 'www.google.com', already\n *     URI-encoded.\n * @param {?=} opt_port The port number.\n * @param {?=} opt_path The path, already URI-encoded.  If it is not\n *     empty, it must begin with a slash.\n * @param {?=} opt_queryData The URI-encoded query data.\n * @param {?=} opt_fragment The URI-encoded fragment identifier.\n * @return {?} The fully combined URI.\n */\nfunction _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n    var /** @type {?} */ out = [];\n    if (opt_scheme != null) {\n        out.push(opt_scheme + ':');\n    }\n    if (opt_domain != null) {\n        out.push('//');\n        if (opt_userInfo != null) {\n            out.push(opt_userInfo + '@');\n        }\n        out.push(opt_domain);\n        if (opt_port != null) {\n            out.push(':' + opt_port);\n        }\n    }\n    if (opt_path != null) {\n        out.push(opt_path);\n    }\n    if (opt_queryData != null) {\n        out.push('?' + opt_queryData);\n    }\n    if (opt_fragment != null) {\n        out.push('#' + opt_fragment);\n    }\n    return out.join('');\n}\n/**\n * A regular expression for breaking a URI into its component parts.\n *\n * {\\@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n * \\@internal\n */\nvar _splitRe = new RegExp('^' +\n    '(?:' +\n    '([^:/?#.]+)' +\n    // used by other URL parts such as :,\n    // ?, /, #, and .\n    ':)?' +\n    '(?://' +\n    '(?:([^/?#]*)@)?' +\n    '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' +\n    // digits, dashes, dots, percent\n    // escapes, and unicode characters.\n    '(?::([0-9]+))?' +\n    ')?' +\n    '([^?#]+)?' +\n    '(?:\\\\?([^#]*))?' +\n    '(?:#(.*))?' +\n    '$');\nvar _ComponentIndex = {};\n_ComponentIndex.Scheme = 1;\n_ComponentIndex.UserInfo = 2;\n_ComponentIndex.Domain = 3;\n_ComponentIndex.Port = 4;\n_ComponentIndex.Path = 5;\n_ComponentIndex.QueryData = 6;\n_ComponentIndex.Fragment = 7;\n_ComponentIndex[_ComponentIndex.Scheme] = \"Scheme\";\n_ComponentIndex[_ComponentIndex.UserInfo] = \"UserInfo\";\n_ComponentIndex[_ComponentIndex.Domain] = \"Domain\";\n_ComponentIndex[_ComponentIndex.Port] = \"Port\";\n_ComponentIndex[_ComponentIndex.Path] = \"Path\";\n_ComponentIndex[_ComponentIndex.QueryData] = \"QueryData\";\n_ComponentIndex[_ComponentIndex.Fragment] = \"Fragment\";\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n * </pre>\n *\n * @param {?} uri The URI string to examine.\n * @return {?} Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\nfunction _split(uri) {\n    return uri.match(_splitRe);\n}\n/**\n * Removes dot segments in given path component, as described in\n * RFC 3986, section 5.2.4.\n *\n * @param {?} path A non-empty path component.\n * @return {?} Path component with removed dot segments.\n */\nfunction _removeDotSegments(path) {\n    if (path == '/')\n        return '/';\n    var /** @type {?} */ leadingSlash = path[0] == '/' ? '/' : '';\n    var /** @type {?} */ trailingSlash = path[path.length - 1] === '/' ? '/' : '';\n    var /** @type {?} */ segments = path.split('/');\n    var /** @type {?} */ out = [];\n    var /** @type {?} */ up = 0;\n    for (var /** @type {?} */ pos = 0; pos < segments.length; pos++) {\n        var /** @type {?} */ segment = segments[pos];\n        switch (segment) {\n            case '':\n            case '.':\n                break;\n            case '..':\n                if (out.length > 0) {\n                    out.pop();\n                }\n                else {\n                    up++;\n                }\n                break;\n            default:\n                out.push(segment);\n        }\n    }\n    if (leadingSlash == '') {\n        while (up-- > 0) {\n            out.unshift('..');\n        }\n        if (out.length === 0)\n            out.push('.');\n    }\n    return leadingSlash + out.join('/') + trailingSlash;\n}\n/**\n * Takes an array of the parts from split and canonicalizes the path part\n * and then joins all the parts.\n * @param {?} parts\n * @return {?}\n */\nfunction _joinAndCanonicalizePath(parts) {\n    var /** @type {?} */ path = parts[_ComponentIndex.Path];\n    path = path == null ? '' : _removeDotSegments(path);\n    parts[_ComponentIndex.Path] = path;\n    return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n}\n/**\n * Resolves a URL.\n * @param {?} base The URL acting as the base URL.\n * @param {?} url\n * @return {?}\n */\nfunction _resolveUrl(base, url) {\n    var /** @type {?} */ parts = _split(encodeURI(url));\n    var /** @type {?} */ baseParts = _split(base);\n    if (parts[_ComponentIndex.Scheme] != null) {\n        return _joinAndCanonicalizePath(parts);\n    }\n    else {\n        parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n    }\n    for (var /** @type {?} */ i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n        if (parts[i] == null) {\n            parts[i] = baseParts[i];\n        }\n    }\n    if (parts[_ComponentIndex.Path][0] == '/') {\n        return _joinAndCanonicalizePath(parts);\n    }\n    var /** @type {?} */ path = baseParts[_ComponentIndex.Path];\n    if (path == null)\n        path = '/';\n    var /** @type {?} */ index = path.lastIndexOf('/');\n    path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];\n    parts[_ComponentIndex.Path] = path;\n    return _joinAndCanonicalizePath(parts);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DirectiveNormalizer = (function () {\n    /**\n     * @param {?} _resourceLoader\n     * @param {?} _urlResolver\n     * @param {?} _htmlParser\n     * @param {?} _config\n     */\n    function DirectiveNormalizer(_resourceLoader, _urlResolver, _htmlParser, _config) {\n        this._resourceLoader = _resourceLoader;\n        this._urlResolver = _urlResolver;\n        this._htmlParser = _htmlParser;\n        this._config = _config;\n        this._resourceLoaderCache = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCache = function () { this._resourceLoaderCache.clear(); };\n    /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCacheFor = function (normalizedDirective) {\n        var _this = this;\n        if (!normalizedDirective.isComponent) {\n            return;\n        }\n        this._resourceLoaderCache.delete(normalizedDirective.template.templateUrl);\n        normalizedDirective.template.externalStylesheets.forEach(function (stylesheet) { _this._resourceLoaderCache.delete(stylesheet.moduleUrl); });\n    };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._fetch = function (url) {\n        var /** @type {?} */ result = this._resourceLoaderCache.get(url);\n        if (!result) {\n            result = this._resourceLoader.get(url);\n            this._resourceLoaderCache.set(url, result);\n        }\n        return result;\n    };\n    /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplate = function (prenormData) {\n        var _this = this;\n        var /** @type {?} */ normalizedTemplateSync = null;\n        var /** @type {?} */ normalizedTemplateAsync;\n        if (prenormData.template != null) {\n            if (typeof prenormData.template !== 'string') {\n                throw syntaxError(\"The template specified for component \" + _angular_core.ɵstringify(prenormData.componentType) + \" is not a string\");\n            }\n            normalizedTemplateSync = this.normalizeTemplateSync(prenormData);\n            normalizedTemplateAsync = Promise.resolve(normalizedTemplateSync);\n        }\n        else if (prenormData.templateUrl) {\n            if (typeof prenormData.templateUrl !== 'string') {\n                throw syntaxError(\"The templateUrl specified for component \" + _angular_core.ɵstringify(prenormData.componentType) + \" is not a string\");\n            }\n            normalizedTemplateAsync = this.normalizeTemplateAsync(prenormData);\n        }\n        else {\n            throw syntaxError(\"No template specified for component \" + _angular_core.ɵstringify(prenormData.componentType));\n        }\n        if (normalizedTemplateSync && normalizedTemplateSync.styleUrls.length === 0) {\n            // sync case\n            return new SyncAsyncResult(normalizedTemplateSync);\n        }\n        else {\n            // async case\n            return new SyncAsyncResult(null, normalizedTemplateAsync.then(function (normalizedTemplate) { return _this.normalizeExternalStylesheets(normalizedTemplate); }));\n        }\n    };\n    /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplateSync = function (prenomData) {\n        return this.normalizeLoadedTemplate(prenomData, prenomData.template, prenomData.moduleUrl);\n    };\n    /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplateAsync = function (prenomData) {\n        var _this = this;\n        var /** @type {?} */ templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, prenomData.templateUrl);\n        return this._fetch(templateUrl)\n            .then(function (value) { return _this.normalizeLoadedTemplate(prenomData, value, templateUrl); });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeLoadedTemplate = function (prenormData, template, templateAbsUrl) {\n        var /** @type {?} */ isInline = !!prenormData.template;\n        var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(prenormData.interpolation);\n        var /** @type {?} */ rootNodesAndErrors = this._htmlParser.parse(template, templateSourceUrl({ reference: prenormData.ngModuleType }, { type: { reference: prenormData.componentType } }, { isInline: isInline, templateUrl: templateAbsUrl }), true, interpolationConfig);\n        if (rootNodesAndErrors.errors.length > 0) {\n            var /** @type {?} */ errorString = rootNodesAndErrors.errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString);\n        }\n        var /** @type {?} */ templateMetadataStyles = this.normalizeStylesheet(new CompileStylesheetMetadata({\n            styles: prenormData.styles,\n            styleUrls: prenormData.styleUrls,\n            moduleUrl: prenormData.moduleUrl\n        }));\n        var /** @type {?} */ visitor = new TemplatePreparseVisitor();\n        visitAll(visitor, rootNodesAndErrors.rootNodes);\n        var /** @type {?} */ templateStyles = this.normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n        var /** @type {?} */ encapsulation = prenormData.encapsulation;\n        if (encapsulation == null) {\n            encapsulation = this._config.defaultEncapsulation;\n        }\n        var /** @type {?} */ styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n        var /** @type {?} */ styleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n        if (encapsulation === _angular_core.ViewEncapsulation.Emulated && styles.length === 0 &&\n            styleUrls.length === 0) {\n            encapsulation = _angular_core.ViewEncapsulation.None;\n        }\n        return new CompileTemplateMetadata({\n            encapsulation: encapsulation,\n            template: template,\n            templateUrl: templateAbsUrl, styles: styles, styleUrls: styleUrls,\n            ngContentSelectors: visitor.ngContentSelectors,\n            animations: prenormData.animations,\n            interpolation: prenormData.interpolation, isInline: isInline\n        });\n    };\n    /**\n     * @param {?} templateMeta\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeExternalStylesheets = function (templateMeta) {\n        return this._loadMissingExternalStylesheets(templateMeta.styleUrls)\n            .then(function (externalStylesheets) { return new CompileTemplateMetadata({\n            encapsulation: templateMeta.encapsulation,\n            template: templateMeta.template,\n            templateUrl: templateMeta.templateUrl,\n            styles: templateMeta.styles,\n            styleUrls: templateMeta.styleUrls,\n            externalStylesheets: externalStylesheets,\n            ngContentSelectors: templateMeta.ngContentSelectors,\n            animations: templateMeta.animations,\n            interpolation: templateMeta.interpolation,\n            isInline: templateMeta.isInline,\n        }); });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._loadMissingExternalStylesheets = function (styleUrls, loadedStylesheets) {\n        var _this = this;\n        if (loadedStylesheets === void 0) { loadedStylesheets = new Map(); }\n        return Promise\n            .all(styleUrls.filter(function (styleUrl) { return !loadedStylesheets.has(styleUrl); })\n            .map(function (styleUrl) { return _this._fetch(styleUrl).then(function (loadedStyle) {\n            var /** @type {?} */ stylesheet = _this.normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n            loadedStylesheets.set(styleUrl, stylesheet);\n            return _this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n        }); }))\n            .then(function (_) { return Array.from(loadedStylesheets.values()); });\n    };\n    /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeStylesheet = function (stylesheet) {\n        var _this = this;\n        var /** @type {?} */ allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n            .map(function (url) { return _this._urlResolver.resolve(stylesheet.moduleUrl, url); });\n        var /** @type {?} */ allStyles = stylesheet.styles.map(function (style$$1) {\n            var /** @type {?} */ styleWithImports = extractStyleUrls(_this._urlResolver, stylesheet.moduleUrl, style$$1);\n            allStyleUrls.push.apply(allStyleUrls, styleWithImports.styleUrls);\n            return styleWithImports.style;\n        });\n        return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: stylesheet.moduleUrl });\n    };\n    return DirectiveNormalizer;\n}());\nDirectiveNormalizer.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nDirectiveNormalizer.ctorParameters = function () { return [\n    { type: ResourceLoader, },\n    { type: UrlResolver, },\n    { type: HtmlParser, },\n    { type: CompilerConfig, },\n]; };\nvar TemplatePreparseVisitor = (function () {\n    function TemplatePreparseVisitor() {\n        this.ngContentSelectors = [];\n        this.styles = [];\n        this.styleUrls = [];\n        this.ngNonBindableStackCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitElement = function (ast, context) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        switch (preparsedElement.type) {\n            case PreparsedElementType.NG_CONTENT:\n                if (this.ngNonBindableStackCount === 0) {\n                    this.ngContentSelectors.push(preparsedElement.selectAttr);\n                }\n                break;\n            case PreparsedElementType.STYLE:\n                var /** @type {?} */ textContent_1 = '';\n                ast.children.forEach(function (child) {\n                    if (child instanceof Text) {\n                        textContent_1 += child.value;\n                    }\n                });\n                this.styles.push(textContent_1);\n                break;\n            case PreparsedElementType.STYLESHEET:\n                this.styleUrls.push(preparsedElement.hrefAttr);\n                break;\n            default:\n                break;\n        }\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount++;\n        }\n        visitAll(this, ast.children);\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount--;\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansion = function (ast, context) { visitAll(this, ast.cases); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansionCase = function (ast, context) {\n        visitAll(this, ast.expression);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitComment = function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitAttribute = function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitText = function (ast, context) { return null; };\n    return TemplatePreparseVisitor;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DirectiveResolver = (function () {\n    /**\n     * @param {?=} _reflector\n     */\n    function DirectiveResolver(_reflector) {\n        if (_reflector === void 0) { _reflector = _angular_core.ɵreflector; }\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    DirectiveResolver.prototype.isDirective = function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n    };\n    /**\n     * Return {\\@link Directive} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    DirectiveResolver.prototype.resolve = function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n        if (typeMetadata) {\n            var /** @type {?} */ metadata = findLast(typeMetadata, isDirectiveMetadata);\n            if (metadata) {\n                var /** @type {?} */ propertyMetadata = this._reflector.propMetadata(type);\n                return this._mergeWithPropertyMetadata(metadata, propertyMetadata, type);\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Directive annotation found on \" + _angular_core.ɵstringify(type));\n        }\n        return null;\n    };\n    /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._mergeWithPropertyMetadata = function (dm, propertyMetadata, directiveType) {\n        var /** @type {?} */ inputs = [];\n        var /** @type {?} */ outputs = [];\n        var /** @type {?} */ host = {};\n        var /** @type {?} */ queries = {};\n        Object.keys(propertyMetadata).forEach(function (propName) {\n            var /** @type {?} */ input = findLast(propertyMetadata[propName], function (a) { return a instanceof _angular_core.Input; });\n            if (input) {\n                if (input.bindingPropertyName) {\n                    inputs.push(propName + \": \" + input.bindingPropertyName);\n                }\n                else {\n                    inputs.push(propName);\n                }\n            }\n            var /** @type {?} */ output = findLast(propertyMetadata[propName], function (a) { return a instanceof _angular_core.Output; });\n            if (output) {\n                if (output.bindingPropertyName) {\n                    outputs.push(propName + \": \" + output.bindingPropertyName);\n                }\n                else {\n                    outputs.push(propName);\n                }\n            }\n            var /** @type {?} */ hostBindings = propertyMetadata[propName].filter(function (a) { return a && a instanceof _angular_core.HostBinding; });\n            hostBindings.forEach(function (hostBinding) {\n                if (hostBinding.hostPropertyName) {\n                    var /** @type {?} */ startWith = hostBinding.hostPropertyName[0];\n                    if (startWith === '(') {\n                        throw new Error(\"@HostBinding can not bind to events. Use @HostListener instead.\");\n                    }\n                    else if (startWith === '[') {\n                        throw new Error(\"@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.\");\n                    }\n                    host[\"[\" + hostBinding.hostPropertyName + \"]\"] = propName;\n                }\n                else {\n                    host[\"[\" + propName + \"]\"] = propName;\n                }\n            });\n            var /** @type {?} */ hostListeners = propertyMetadata[propName].filter(function (a) { return a && a instanceof _angular_core.HostListener; });\n            hostListeners.forEach(function (hostListener) {\n                var /** @type {?} */ args = hostListener.args || [];\n                host[\"(\" + hostListener.eventName + \")\"] = propName + \"(\" + args.join(',') + \")\";\n            });\n            var /** @type {?} */ query = findLast(propertyMetadata[propName], function (a) { return a instanceof _angular_core.Query; });\n            if (query) {\n                queries[propName] = query;\n            }\n        });\n        return this._merge(dm, inputs, outputs, host, queries, directiveType);\n    };\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    DirectiveResolver.prototype._extractPublicName = function (def) { return splitAtColon(def, [null, def])[1].trim(); };\n    /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    DirectiveResolver.prototype._dedupeBindings = function (bindings) {\n        var /** @type {?} */ names = new Set();\n        var /** @type {?} */ reversedResult = [];\n        // go last to first to allow later entries to overwrite previous entries\n        for (var /** @type {?} */ i = bindings.length - 1; i >= 0; i--) {\n            var /** @type {?} */ binding = bindings[i];\n            var /** @type {?} */ name = this._extractPublicName(binding);\n            if (!names.has(name)) {\n                names.add(name);\n                reversedResult.push(binding);\n            }\n        }\n        return reversedResult.reverse();\n    };\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._merge = function (directive, inputs, outputs, host, queries, directiveType) {\n        var /** @type {?} */ mergedInputs = this._dedupeBindings(directive.inputs ? directive.inputs.concat(inputs) : inputs);\n        var /** @type {?} */ mergedOutputs = this._dedupeBindings(directive.outputs ? directive.outputs.concat(outputs) : outputs);\n        var /** @type {?} */ mergedHost = directive.host ? _angular_core.ɵmerge(directive.host, host) : host;\n        var /** @type {?} */ mergedQueries = directive.queries ? _angular_core.ɵmerge(directive.queries, queries) : queries;\n        if (directive instanceof _angular_core.Component) {\n            return new _angular_core.Component({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                moduleId: directive.moduleId,\n                queries: mergedQueries,\n                changeDetection: directive.changeDetection,\n                providers: directive.providers,\n                viewProviders: directive.viewProviders,\n                entryComponents: directive.entryComponents,\n                template: directive.template,\n                templateUrl: directive.templateUrl,\n                styles: directive.styles,\n                styleUrls: directive.styleUrls,\n                encapsulation: directive.encapsulation,\n                animations: directive.animations,\n                interpolation: directive.interpolation\n            });\n        }\n        else {\n            return new _angular_core.Directive({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                queries: mergedQueries,\n                providers: directive.providers\n            });\n        }\n    };\n    return DirectiveResolver;\n}());\nDirectiveResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nDirectiveResolver.ctorParameters = function () { return [\n    { type: _angular_core.ɵReflectorReader, },\n]; };\n/**\n * @param {?} type\n * @return {?}\n */\nfunction isDirectiveMetadata(type) {\n    return type instanceof _angular_core.Directive;\n}\n/**\n * @template T\n * @param {?} arr\n * @param {?} condition\n * @return {?}\n */\nfunction findLast(arr, condition) {\n    for (var /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n        if (condition(arr[i])) {\n            return arr[i];\n        }\n    }\n    return null;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nvar NG_FACTORY = /\\.ngfactory\\./;\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction ngfactoryFilePath(filePath) {\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(filePath);\n    return urlWithSuffix[0] + \".ngfactory\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripNgFactory(filePath) {\n    return filePath.replace(NG_FACTORY, '.');\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction isNgFactoryFile(filePath) {\n    return NG_FACTORY.test(filePath);\n}\n/**\n * @param {?} path\n * @return {?}\n */\nfunction splitTypescriptSuffix(path) {\n    if (path.endsWith('.d.ts')) {\n        return [path.slice(0, -5), '.ts'];\n    }\n    var /** @type {?} */ lastDot = path.lastIndexOf('.');\n    if (lastDot !== -1) {\n        return [path.substring(0, lastDot), path.substring(lastDot)];\n    }\n    return [path, ''];\n}\n/**\n * @param {?} fileName\n * @return {?}\n */\nfunction summaryFileName(fileName) {\n    var /** @type {?} */ fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n    return fileNameWithoutSuffix + \".ngsummary.json\";\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} hook\n * @param {?} token\n * @return {?}\n */\nfunction hasLifecycleHook(hook, token) {\n    return _angular_core.ɵreflector.hasLifecycleHook(token, getHookName(hook));\n}\n/**\n * @param {?} hook\n * @return {?}\n */\nfunction getHookName(hook) {\n    switch (hook) {\n        case _angular_core.ɵLifecycleHooks.OnInit:\n            return 'ngOnInit';\n        case _angular_core.ɵLifecycleHooks.OnDestroy:\n            return 'ngOnDestroy';\n        case _angular_core.ɵLifecycleHooks.DoCheck:\n            return 'ngDoCheck';\n        case _angular_core.ɵLifecycleHooks.OnChanges:\n            return 'ngOnChanges';\n        case _angular_core.ɵLifecycleHooks.AfterContentInit:\n            return 'ngAfterContentInit';\n        case _angular_core.ɵLifecycleHooks.AfterContentChecked:\n            return 'ngAfterContentChecked';\n        case _angular_core.ɵLifecycleHooks.AfterViewInit:\n            return 'ngAfterViewInit';\n        case _angular_core.ɵLifecycleHooks.AfterViewChecked:\n            return 'ngAfterViewChecked';\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _isNgModuleMetadata(obj) {\n    return obj instanceof _angular_core.NgModule;\n}\n/**\n * Resolves types to {\\@link NgModule}.\n */\nvar NgModuleResolver = (function () {\n    /**\n     * @param {?=} _reflector\n     */\n    function NgModuleResolver(_reflector) {\n        if (_reflector === void 0) { _reflector = _angular_core.ɵreflector; }\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    NgModuleResolver.prototype.isNgModule = function (type) { return this._reflector.annotations(type).some(_isNgModuleMetadata); };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    NgModuleResolver.prototype.resolve = function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModuleMeta = findLast(this._reflector.annotations(type), _isNgModuleMetadata);\n        if (ngModuleMeta) {\n            return ngModuleMeta;\n        }\n        else {\n            if (throwIfNotFound) {\n                throw new Error(\"No NgModule metadata found for '\" + _angular_core.ɵstringify(type) + \"'.\");\n            }\n            return null;\n        }\n    };\n    return NgModuleResolver;\n}());\nNgModuleResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nNgModuleResolver.ctorParameters = function () { return [\n    { type: _angular_core.ɵReflectorReader, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} type\n * @return {?}\n */\nfunction _isPipeMetadata(type) {\n    return type instanceof _angular_core.Pipe;\n}\n/**\n * Resolve a `Type` for {\\@link Pipe}.\n *\n * This interface can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n */\nvar PipeResolver = (function () {\n    /**\n     * @param {?=} _reflector\n     */\n    function PipeResolver(_reflector) {\n        if (_reflector === void 0) { _reflector = _angular_core.ɵreflector; }\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    PipeResolver.prototype.isPipe = function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(_isPipeMetadata);\n    };\n    /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    PipeResolver.prototype.resolve = function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ metas = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n        if (metas) {\n            var /** @type {?} */ annotation = findLast(metas, _isPipeMetadata);\n            if (annotation) {\n                return annotation;\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Pipe decorator found on \" + _angular_core.ɵstringify(type));\n        }\n        return null;\n    };\n    return PipeResolver;\n}());\nPipeResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nPipeResolver.ctorParameters = function () { return [\n    { type: _angular_core.ɵReflectorReader, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SummaryResolver = (function () {\n    function SummaryResolver() {\n    }\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    SummaryResolver.prototype.isLibraryFile = function (fileName) { return false; };\n    \n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    SummaryResolver.prototype.getLibraryFileName = function (fileName) { return null; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    SummaryResolver.prototype.resolveSummary = function (reference) { return null; };\n    \n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    SummaryResolver.prototype.getSymbolsOf = function (filePath) { return []; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    SummaryResolver.prototype.getImportAs = function (reference) { return reference; };\n    return SummaryResolver;\n}());\nSummaryResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nSummaryResolver.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ERROR_COLLECTOR_TOKEN = new _angular_core.InjectionToken('ErrorCollector');\nvar CompileMetadataResolver = (function () {\n    /**\n     * @param {?} _config\n     * @param {?} _ngModuleResolver\n     * @param {?} _directiveResolver\n     * @param {?} _pipeResolver\n     * @param {?} _summaryResolver\n     * @param {?} _schemaRegistry\n     * @param {?} _directiveNormalizer\n     * @param {?} _console\n     * @param {?} _staticSymbolCache\n     * @param {?=} _reflector\n     * @param {?=} _errorCollector\n     */\n    function CompileMetadataResolver(_config, _ngModuleResolver, _directiveResolver, _pipeResolver, _summaryResolver, _schemaRegistry, _directiveNormalizer, _console, _staticSymbolCache, _reflector, _errorCollector) {\n        if (_reflector === void 0) { _reflector = _angular_core.ɵreflector; }\n        this._config = _config;\n        this._ngModuleResolver = _ngModuleResolver;\n        this._directiveResolver = _directiveResolver;\n        this._pipeResolver = _pipeResolver;\n        this._summaryResolver = _summaryResolver;\n        this._schemaRegistry = _schemaRegistry;\n        this._directiveNormalizer = _directiveNormalizer;\n        this._console = _console;\n        this._staticSymbolCache = _staticSymbolCache;\n        this._reflector = _reflector;\n        this._errorCollector = _errorCollector;\n        this._nonNormalizedDirectiveCache = new Map();\n        this._directiveCache = new Map();\n        this._summaryCache = new Map();\n        this._pipeCache = new Map();\n        this._ngModuleCache = new Map();\n        this._ngModuleOfTypes = new Map();\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCacheFor = function (type) {\n        var /** @type {?} */ dirMeta = this._directiveCache.get(type);\n        this._directiveCache.delete(type);\n        this._nonNormalizedDirectiveCache.delete(type);\n        this._summaryCache.delete(type);\n        this._pipeCache.delete(type);\n        this._ngModuleOfTypes.delete(type);\n        // Clear all of the NgModule as they contain transitive information!\n        this._ngModuleCache.clear();\n        if (dirMeta) {\n            this._directiveNormalizer.clearCacheFor(dirMeta);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCache = function () {\n        this._directiveCache.clear();\n        this._nonNormalizedDirectiveCache.clear();\n        this._summaryCache.clear();\n        this._pipeCache.clear();\n        this._ngModuleCache.clear();\n        this._ngModuleOfTypes.clear();\n        this._directiveNormalizer.clearCache();\n    };\n    /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._createProxyClass = function (baseType, name) {\n        var /** @type {?} */ delegate = null;\n        var /** @type {?} */ proxyClass = (function () {\n            if (!delegate) {\n                throw new Error(\"Illegal state: Class \" + name + \" for type \" + _angular_core.ɵstringify(baseType) + \" is not compiled yet!\");\n            }\n            return delegate.apply(this, arguments);\n        });\n        proxyClass.setDelegate = function (d) {\n            delegate = d;\n            ((proxyClass)).prototype = d.prototype;\n        };\n        // Make stringify work correctly\n        ((proxyClass)).overriddenName = name;\n        return proxyClass;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getGeneratedClass = function (dirType, name) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n        }\n        else {\n            return this._createProxyClass(dirType, name);\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentViewClass = function (dirType) {\n        return this.getGeneratedClass(dirType, viewClassName(dirType, 0));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentViewClass = function (dirType) {\n        return this.getGeneratedClass(dirType, hostViewClassName(dirType));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentType = function (dirType) {\n        var /** @type {?} */ name = identifierName({ reference: dirType }) + \"_Host\";\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(dirType.filePath, name);\n        }\n        else {\n            var /** @type {?} */ HostClass = (function HostClass() { });\n            HostClass.overriddenName = name;\n            return HostClass;\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getRendererType = function (dirType) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), rendererTypeName(dirType));\n        }\n        else {\n            // returning an object as proxy,\n            // that we fill later during runtime compilation.\n            return ({});\n        }\n    };\n    /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentFactory = function (selector, dirType, inputs, outputs) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), componentFactoryName(dirType));\n        }\n        else {\n            var /** @type {?} */ hostView = this.getHostComponentViewClass(dirType);\n            // Note: ngContentSelectors will be filled later once the template is\n            // loaded.\n            return _angular_core.ɵccf(selector, dirType, /** @type {?} */ (hostView), inputs, outputs, []);\n        }\n    };\n    /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.initComponentFactory = function (factory, ngContentSelectors) {\n        if (!(factory instanceof StaticSymbol)) {\n            (_a = factory.ngContentSelectors).push.apply(_a, ngContentSelectors);\n        }\n        var _a;\n    };\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadSummary = function (type, kind) {\n        var /** @type {?} */ typeSummary = this._summaryCache.get(type);\n        if (!typeSummary) {\n            var /** @type {?} */ summary = this._summaryResolver.resolveSummary(type);\n            typeSummary = summary ? summary.type : null;\n            this._summaryCache.set(type, typeSummary);\n        }\n        return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n    };\n    /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadDirectiveMetadata = function (ngModuleType, directiveType, isSync) {\n        var _this = this;\n        if (this._directiveCache.has(directiveType)) {\n            return;\n        }\n        directiveType = _angular_core.resolveForwardRef(directiveType);\n        var _a = this.getNonNormalizedDirectiveMetadata(directiveType), annotation = _a.annotation, metadata = _a.metadata;\n        var /** @type {?} */ createDirectiveMetadata = function (templateMetadata) {\n            var /** @type {?} */ normalizedDirMeta = new CompileDirectiveMetadata({\n                type: metadata.type,\n                isComponent: metadata.isComponent,\n                selector: metadata.selector,\n                exportAs: metadata.exportAs,\n                changeDetection: metadata.changeDetection,\n                inputs: metadata.inputs,\n                outputs: metadata.outputs,\n                hostListeners: metadata.hostListeners,\n                hostProperties: metadata.hostProperties,\n                hostAttributes: metadata.hostAttributes,\n                providers: metadata.providers,\n                viewProviders: metadata.viewProviders,\n                queries: metadata.queries,\n                viewQueries: metadata.viewQueries,\n                entryComponents: metadata.entryComponents,\n                componentViewType: metadata.componentViewType,\n                rendererType: metadata.rendererType,\n                componentFactory: metadata.componentFactory,\n                template: templateMetadata\n            });\n            if (templateMetadata) {\n                _this.initComponentFactory(metadata.componentFactory, templateMetadata.ngContentSelectors);\n            }\n            _this._directiveCache.set(directiveType, normalizedDirMeta);\n            _this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n            return normalizedDirMeta;\n        };\n        if (metadata.isComponent) {\n            var /** @type {?} */ templateMeta = this._directiveNormalizer.normalizeTemplate({\n                ngModuleType: ngModuleType,\n                componentType: directiveType,\n                moduleUrl: componentModuleUrl(this._reflector, directiveType, annotation),\n                encapsulation: metadata.template.encapsulation,\n                template: metadata.template.template,\n                templateUrl: metadata.template.templateUrl,\n                styles: metadata.template.styles,\n                styleUrls: metadata.template.styleUrls,\n                animations: metadata.template.animations,\n                interpolation: metadata.template.interpolation\n            });\n            if (templateMeta.syncResult) {\n                createDirectiveMetadata(templateMeta.syncResult);\n                return null;\n            }\n            else {\n                if (isSync) {\n                    this._reportError(componentStillLoadingError(directiveType), directiveType);\n                    return null;\n                }\n                return templateMeta.asyncResult.then(createDirectiveMetadata);\n            }\n        }\n        else {\n            // directive\n            createDirectiveMetadata(null);\n            return null;\n        }\n    };\n    /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNonNormalizedDirectiveMetadata = function (directiveType) {\n        var _this = this;\n        directiveType = _angular_core.resolveForwardRef(directiveType);\n        if (!directiveType) {\n            return null;\n        }\n        var /** @type {?} */ cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n        if (cacheEntry) {\n            return cacheEntry;\n        }\n        var /** @type {?} */ dirMeta = this._directiveResolver.resolve(directiveType, false);\n        if (!dirMeta) {\n            return null;\n        }\n        var /** @type {?} */ nonNormalizedTemplateMetadata;\n        if (dirMeta instanceof _angular_core.Component) {\n            // component\n            assertArrayOfStrings('styles', dirMeta.styles);\n            assertArrayOfStrings('styleUrls', dirMeta.styleUrls);\n            assertInterpolationSymbols('interpolation', dirMeta.interpolation);\n            var /** @type {?} */ animations = dirMeta.animations;\n            nonNormalizedTemplateMetadata = new CompileTemplateMetadata({\n                encapsulation: dirMeta.encapsulation,\n                template: dirMeta.template,\n                templateUrl: dirMeta.templateUrl,\n                styles: dirMeta.styles,\n                styleUrls: dirMeta.styleUrls,\n                animations: animations,\n                interpolation: dirMeta.interpolation,\n                isInline: !!dirMeta.template\n            });\n        }\n        var /** @type {?} */ changeDetectionStrategy = null;\n        var /** @type {?} */ viewProviders = [];\n        var /** @type {?} */ entryComponentMetadata = [];\n        var /** @type {?} */ selector = dirMeta.selector;\n        if (dirMeta instanceof _angular_core.Component) {\n            // Component\n            changeDetectionStrategy = dirMeta.changeDetection;\n            if (dirMeta.viewProviders) {\n                viewProviders = this._getProvidersMetadata(dirMeta.viewProviders, entryComponentMetadata, \"viewProviders for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n            }\n            if (dirMeta.entryComponents) {\n                entryComponentMetadata = flattenAndDedupeArray(dirMeta.entryComponents)\n                    .map(function (type) { return _this._getEntryComponentMetadata(type); })\n                    .concat(entryComponentMetadata);\n            }\n            if (!selector) {\n                selector = this._schemaRegistry.getDefaultComponentElementName();\n            }\n        }\n        else {\n            // Directive\n            if (!selector) {\n                this._reportError(syntaxError(\"Directive \" + stringifyType(directiveType) + \" has no selector, please add it!\"), directiveType);\n                selector = 'error';\n            }\n        }\n        var /** @type {?} */ providers = [];\n        if (dirMeta.providers != null) {\n            providers = this._getProvidersMetadata(dirMeta.providers, entryComponentMetadata, \"providers for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n        }\n        var /** @type {?} */ queries = [];\n        var /** @type {?} */ viewQueries = [];\n        if (dirMeta.queries != null) {\n            queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n            viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n        }\n        var /** @type {?} */ metadata = CompileDirectiveMetadata.create({\n            selector: selector,\n            exportAs: dirMeta.exportAs,\n            isComponent: !!nonNormalizedTemplateMetadata,\n            type: this._getTypeMetadata(directiveType),\n            template: nonNormalizedTemplateMetadata,\n            changeDetection: changeDetectionStrategy,\n            inputs: dirMeta.inputs,\n            outputs: dirMeta.outputs,\n            host: dirMeta.host,\n            providers: providers,\n            viewProviders: viewProviders,\n            queries: queries,\n            viewQueries: viewQueries,\n            entryComponents: entryComponentMetadata,\n            componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                undefined,\n            rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : undefined,\n            componentFactory: undefined\n        });\n        if (nonNormalizedTemplateMetadata) {\n            metadata.componentFactory =\n                this.getComponentFactory(selector, directiveType, metadata.inputs, metadata.outputs);\n        }\n        cacheEntry = { metadata: metadata, annotation: dirMeta };\n        this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n        return cacheEntry;\n    };\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveMetadata = function (directiveType) {\n        var /** @type {?} */ dirMeta = this._directiveCache.get(directiveType);\n        if (!dirMeta) {\n            this._reportError(syntaxError(\"Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive \" + stringifyType(directiveType) + \".\"), directiveType);\n        }\n        return dirMeta;\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveSummary = function (dirType) {\n        var /** @type {?} */ dirSummary = (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (!dirSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for directive \" + stringifyType(dirType) + \".\"), dirType);\n        }\n        return dirSummary;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isDirective = function (type) { return this._directiveResolver.isDirective(type); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isPipe = function (type) { return this._pipeResolver.isPipe(type); };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleSummary = function (moduleType) {\n        var /** @type {?} */ moduleSummary = (this._loadSummary(moduleType, CompileSummaryKind.NgModule));\n        if (!moduleSummary) {\n            var /** @type {?} */ moduleMeta = this.getNgModuleMetadata(moduleType, false);\n            moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n            if (moduleSummary) {\n                this._summaryCache.set(moduleType, moduleSummary);\n            }\n        }\n        return moduleSummary;\n    };\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadNgModuleDirectiveAndPipeMetadata = function (moduleType, isSync, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n        var /** @type {?} */ loading = [];\n        if (ngModule) {\n            ngModule.declaredDirectives.forEach(function (id) {\n                var /** @type {?} */ promise = _this._loadDirectiveMetadata(moduleType, id.reference, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            ngModule.declaredPipes.forEach(function (id) { return _this._loadPipeMetadata(id.reference); });\n        }\n        return Promise.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleMetadata = function (moduleType, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        moduleType = _angular_core.resolveForwardRef(moduleType);\n        var /** @type {?} */ compileMeta = this._ngModuleCache.get(moduleType);\n        if (compileMeta) {\n            return compileMeta;\n        }\n        var /** @type {?} */ meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n        if (!meta) {\n            return null;\n        }\n        var /** @type {?} */ declaredDirectives = [];\n        var /** @type {?} */ exportedNonModuleIdentifiers = [];\n        var /** @type {?} */ declaredPipes = [];\n        var /** @type {?} */ importedModules = [];\n        var /** @type {?} */ exportedModules = [];\n        var /** @type {?} */ providers = [];\n        var /** @type {?} */ entryComponents = [];\n        var /** @type {?} */ bootstrapComponents = [];\n        var /** @type {?} */ schemas = [];\n        if (meta.imports) {\n            flattenAndDedupeArray(meta.imports).forEach(function (importedType) {\n                var /** @type {?} */ importedModuleType;\n                if (isValidType(importedType)) {\n                    importedModuleType = importedType;\n                }\n                else if (importedType && importedType.ngModule) {\n                    var /** @type {?} */ moduleWithProviders = importedType;\n                    importedModuleType = moduleWithProviders.ngModule;\n                    if (moduleWithProviders.providers) {\n                        providers.push.apply(providers, _this._getProvidersMetadata(moduleWithProviders.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(importedModuleType) + \"'\", [], importedType));\n                    }\n                }\n                if (importedModuleType) {\n                    if (_this._checkSelfImport(moduleType, importedModuleType))\n                        return;\n                    var /** @type {?} */ importedModuleSummary = _this.getNgModuleSummary(importedModuleType);\n                    if (!importedModuleSummary) {\n                        _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(importedType) + \" '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'. Please add a @NgModule annotation.\"), moduleType);\n                        return;\n                    }\n                    importedModules.push(importedModuleSummary);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n            });\n        }\n        if (meta.exports) {\n            flattenAndDedupeArray(meta.exports).forEach(function (exportedType) {\n                if (!isValidType(exportedType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(exportedType) + \"' exported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ exportedModuleSummary = _this.getNgModuleSummary(exportedType);\n                if (exportedModuleSummary) {\n                    exportedModules.push(exportedModuleSummary);\n                }\n                else {\n                    exportedNonModuleIdentifiers.push(_this._getIdentifierMetadata(exportedType));\n                }\n            });\n        }\n        // Note: This will be modified later, so we rely on\n        // getting a new instance every time!\n        var /** @type {?} */ transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n        if (meta.declarations) {\n            flattenAndDedupeArray(meta.declarations).forEach(function (declaredType) {\n                if (!isValidType(declaredType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ declaredIdentifier = _this._getIdentifierMetadata(declaredType);\n                if (_this._directiveResolver.isDirective(declaredType)) {\n                    transitiveModule.addDirective(declaredIdentifier);\n                    declaredDirectives.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else if (_this._pipeResolver.isPipe(declaredType)) {\n                    transitiveModule.addPipe(declaredIdentifier);\n                    transitiveModule.pipes.push(declaredIdentifier);\n                    declaredPipes.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(declaredType) + \" '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\"), moduleType);\n                    return;\n                }\n            });\n        }\n        var /** @type {?} */ exportedDirectives = [];\n        var /** @type {?} */ exportedPipes = [];\n        exportedNonModuleIdentifiers.forEach(function (exportedId) {\n            if (transitiveModule.directivesSet.has(exportedId.reference)) {\n                exportedDirectives.push(exportedId);\n                transitiveModule.addExportedDirective(exportedId);\n            }\n            else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n                exportedPipes.push(exportedId);\n                transitiveModule.addExportedPipe(exportedId);\n            }\n            else {\n                _this._reportError(syntaxError(\"Can't export \" + _this._getTypeDescriptor(exportedId.reference) + \" \" + stringifyType(exportedId.reference) + \" from \" + stringifyType(moduleType) + \" as it was neither declared nor imported!\"), moduleType);\n            }\n        });\n        // The providers of the module have to go last\n        // so that they overwrite any other provider we already added.\n        if (meta.providers) {\n            providers.push.apply(providers, this._getProvidersMetadata(meta.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(moduleType) + \"'\", [], moduleType));\n        }\n        if (meta.entryComponents) {\n            entryComponents.push.apply(entryComponents, flattenAndDedupeArray(meta.entryComponents)\n                .map(function (type) { return _this._getEntryComponentMetadata(type); }));\n        }\n        if (meta.bootstrap) {\n            flattenAndDedupeArray(meta.bootstrap).forEach(function (type) {\n                if (!isValidType(type)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(type) + \"' used in the bootstrap property of module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                bootstrapComponents.push(_this._getIdentifierMetadata(type));\n            });\n        }\n        entryComponents.push.apply(entryComponents, bootstrapComponents.map(function (type) { return _this._getEntryComponentMetadata(type.reference); }));\n        if (meta.schemas) {\n            schemas.push.apply(schemas, flattenAndDedupeArray(meta.schemas));\n        }\n        compileMeta = new CompileNgModuleMetadata({\n            type: this._getTypeMetadata(moduleType),\n            providers: providers,\n            entryComponents: entryComponents,\n            bootstrapComponents: bootstrapComponents,\n            schemas: schemas,\n            declaredDirectives: declaredDirectives,\n            exportedDirectives: exportedDirectives,\n            declaredPipes: declaredPipes,\n            exportedPipes: exportedPipes,\n            importedModules: importedModules,\n            exportedModules: exportedModules,\n            transitiveModule: transitiveModule,\n            id: meta.id,\n        });\n        entryComponents.forEach(function (id) { return transitiveModule.addEntryComponent(id); });\n        providers.forEach(function (provider) { return transitiveModule.addProvider(provider, compileMeta.type); });\n        transitiveModule.addModule(compileMeta.type);\n        this._ngModuleCache.set(moduleType, compileMeta);\n        return compileMeta;\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._checkSelfImport = function (moduleType, importedModuleType) {\n        if (moduleType === importedModuleType) {\n            this._reportError(syntaxError(\"'\" + stringifyType(moduleType) + \"' module can't import itself\"), moduleType);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeDescriptor = function (type) {\n        if (this._directiveResolver.isDirective(type)) {\n            return 'directive';\n        }\n        if (this._pipeResolver.isPipe(type)) {\n            return 'pipe';\n        }\n        if (this._ngModuleResolver.isNgModule(type)) {\n            return 'module';\n        }\n        if (((type)).provide) {\n            return 'provider';\n        }\n        return 'value';\n    };\n    /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._addTypeToModule = function (type, moduleType) {\n        var /** @type {?} */ oldModule = this._ngModuleOfTypes.get(type);\n        if (oldModule && oldModule !== moduleType) {\n            this._reportError(syntaxError(\"Type \" + stringifyType(type) + \" is part of the declarations of 2 modules: \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \"! \" +\n                (\"Please consider moving \" + stringifyType(type) + \" to a higher module that imports \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \". \") +\n                (\"You can also create a new NgModule that exports and includes \" + stringifyType(type) + \" then import that NgModule in \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \".\")), moduleType);\n        }\n        this._ngModuleOfTypes.set(type, moduleType);\n    };\n    /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata = function (importedModules, exportedModules) {\n        // collect `providers` / `entryComponents` from all imported and all exported modules\n        var /** @type {?} */ result = new TransitiveCompileNgModuleMetadata();\n        var /** @type {?} */ modulesByToken = new Map();\n        importedModules.concat(exportedModules).forEach(function (modSummary) {\n            modSummary.modules.forEach(function (mod) { return result.addModule(mod); });\n            modSummary.entryComponents.forEach(function (comp) { return result.addEntryComponent(comp); });\n            var /** @type {?} */ addedTokens = new Set();\n            modSummary.providers.forEach(function (entry) {\n                var /** @type {?} */ tokenRef = tokenReference(entry.provider.token);\n                var /** @type {?} */ prevModules = modulesByToken.get(tokenRef);\n                if (!prevModules) {\n                    prevModules = new Set();\n                    modulesByToken.set(tokenRef, prevModules);\n                }\n                var /** @type {?} */ moduleRef = entry.module.reference;\n                // Note: the providers of one module may still contain multiple providers\n                // per token (e.g. for multi providers), and we need to preserve these.\n                if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n                    prevModules.add(moduleRef);\n                    addedTokens.add(tokenRef);\n                    result.addProvider(entry.provider, entry.module);\n                }\n            });\n        });\n        exportedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addExportedDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addExportedPipe(id); });\n        });\n        importedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addPipe(id); });\n        });\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getIdentifierMetadata = function (type) {\n        type = _angular_core.resolveForwardRef(type);\n        return { reference: type };\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isInjectable = function (type) {\n        var /** @type {?} */ annotations = this._reflector.annotations(type);\n        // Note: We need an exact check here as @Component / @Directive / ... inherit\n        // from @CompilerInjectable!\n        return annotations.some(function (ann) { return ann.constructor === _angular_core.Injectable; });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getInjectableSummary = function (type) {\n        return {\n            summaryKind: CompileSummaryKind.Injectable,\n            type: this._getTypeMetadata(type, null, false)\n        };\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getInjectableMetadata = function (type, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        var /** @type {?} */ typeSummary = this._loadSummary(type, CompileSummaryKind.Injectable);\n        if (typeSummary) {\n            return typeSummary.type;\n        }\n        return this._getTypeMetadata(type, dependencies);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeMetadata = function (type, dependencies, throwOnUnknownDeps) {\n        if (dependencies === void 0) { dependencies = null; }\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ identifier = this._getIdentifierMetadata(type);\n        return {\n            reference: identifier.reference,\n            diDeps: this._getDependenciesMetadata(identifier.reference, dependencies, throwOnUnknownDeps),\n            lifecycleHooks: _angular_core.ɵLIFECYCLE_HOOKS_VALUES.filter(function (hook) { return hasLifecycleHook(hook, identifier.reference); }),\n        };\n    };\n    /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getFactoryMetadata = function (factory, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        factory = _angular_core.resolveForwardRef(factory);\n        return { reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies) };\n    };\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeMetadata = function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            this._reportError(syntaxError(\"Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeMeta;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeSummary = function (pipeType) {\n        var /** @type {?} */ pipeSummary = (this._loadSummary(pipeType, CompileSummaryKind.Pipe));\n        if (!pipeSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeSummary;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getOrLoadPipeMetadata = function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            pipeMeta = this._loadPipeMetadata(pipeType);\n        }\n        return pipeMeta;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadPipeMetadata = function (pipeType) {\n        pipeType = _angular_core.resolveForwardRef(pipeType);\n        var /** @type {?} */ pipeAnnotation = this._pipeResolver.resolve(pipeType);\n        var /** @type {?} */ pipeMeta = new CompilePipeMetadata({\n            type: this._getTypeMetadata(pipeType),\n            name: pipeAnnotation.name,\n            pure: pipeAnnotation.pure\n        });\n        this._pipeCache.set(pipeType, pipeMeta);\n        this._summaryCache.set(pipeType, pipeMeta.toSummary());\n        return pipeMeta;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getDependenciesMetadata = function (typeOrFunc, dependencies, throwOnUnknownDeps) {\n        var _this = this;\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ hasUnknownDeps = false;\n        var /** @type {?} */ params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n        var /** @type {?} */ dependenciesMetadata = params.map(function (param) {\n            var /** @type {?} */ isAttribute = false;\n            var /** @type {?} */ isHost = false;\n            var /** @type {?} */ isSelf = false;\n            var /** @type {?} */ isSkipSelf = false;\n            var /** @type {?} */ isOptional = false;\n            var /** @type {?} */ token = null;\n            if (Array.isArray(param)) {\n                param.forEach(function (paramEntry) {\n                    if (paramEntry instanceof _angular_core.Host) {\n                        isHost = true;\n                    }\n                    else if (paramEntry instanceof _angular_core.Self) {\n                        isSelf = true;\n                    }\n                    else if (paramEntry instanceof _angular_core.SkipSelf) {\n                        isSkipSelf = true;\n                    }\n                    else if (paramEntry instanceof _angular_core.Optional) {\n                        isOptional = true;\n                    }\n                    else if (paramEntry instanceof _angular_core.Attribute) {\n                        isAttribute = true;\n                        token = paramEntry.attributeName;\n                    }\n                    else if (paramEntry instanceof _angular_core.Inject) {\n                        token = paramEntry.token;\n                    }\n                    else if (paramEntry instanceof _angular_core.InjectionToken) {\n                        token = paramEntry;\n                    }\n                    else if (isValidType(paramEntry) && token == null) {\n                        token = paramEntry;\n                    }\n                });\n            }\n            else {\n                token = param;\n            }\n            if (token == null) {\n                hasUnknownDeps = true;\n                return null;\n            }\n            return {\n                isAttribute: isAttribute,\n                isHost: isHost,\n                isSelf: isSelf,\n                isSkipSelf: isSkipSelf,\n                isOptional: isOptional,\n                token: _this._getTokenMetadata(token)\n            };\n        });\n        if (hasUnknownDeps) {\n            var /** @type {?} */ depsTokens = dependenciesMetadata.map(function (dep) { return dep ? stringifyType(dep.token) : '?'; }).join(', ');\n            var /** @type {?} */ message = \"Can't resolve all parameters for \" + stringifyType(typeOrFunc) + \": (\" + depsTokens + \").\";\n            if (throwOnUnknownDeps) {\n                this._reportError(syntaxError(message), typeOrFunc);\n            }\n            else {\n                this._console.warn(\"Warning: \" + message + \" This will become an error in Angular v5.x\");\n            }\n        }\n        return dependenciesMetadata;\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTokenMetadata = function (token) {\n        token = _angular_core.resolveForwardRef(token);\n        var /** @type {?} */ compileToken;\n        if (typeof token === 'string') {\n            compileToken = { value: token };\n        }\n        else {\n            compileToken = { identifier: { reference: token } };\n        }\n        return compileToken;\n    };\n    /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getProvidersMetadata = function (providers, targetEntryComponents, debugInfo, compileProviders, type) {\n        var _this = this;\n        if (compileProviders === void 0) { compileProviders = []; }\n        providers.forEach(function (provider, providerIdx) {\n            if (Array.isArray(provider)) {\n                _this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n            }\n            else {\n                provider = _angular_core.resolveForwardRef(provider);\n                var /** @type {?} */ providerMeta = void 0;\n                if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n                    _this._validateProvider(provider);\n                    providerMeta = new ProviderMeta(provider.provide, provider);\n                }\n                else if (isValidType(provider)) {\n                    providerMeta = new ProviderMeta(provider, { useClass: provider });\n                }\n                else if (provider === void 0) {\n                    _this._reportError(syntaxError(\"Encountered undefined provider! Usually this means you have a circular dependencies (might be caused by using 'barrel' index.ts files.\"));\n                }\n                else {\n                    var /** @type {?} */ providersInfo = ((providers.reduce(function (soFar, seenProvider, seenProviderIdx) {\n                        if (seenProviderIdx < providerIdx) {\n                            soFar.push(\"\" + stringifyType(seenProvider));\n                        }\n                        else if (seenProviderIdx == providerIdx) {\n                            soFar.push(\"?\" + stringifyType(seenProvider) + \"?\");\n                        }\n                        else if (seenProviderIdx == providerIdx + 1) {\n                            soFar.push('...');\n                        }\n                        return soFar;\n                    }, [])))\n                        .join(', ');\n                    _this._reportError(syntaxError(\"Invalid \" + (debugInfo ? debugInfo : 'provider') + \" - only instances of Provider and Type are allowed, got: [\" + providersInfo + \"]\"), type);\n                }\n                if (providerMeta.token === resolveIdentifier(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n                    targetEntryComponents.push.apply(targetEntryComponents, _this._getEntryComponentsFromProvider(providerMeta, type));\n                }\n                else {\n                    compileProviders.push(_this.getProviderMetadata(providerMeta));\n                }\n            }\n        });\n        return compileProviders;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._validateProvider = function (provider) {\n        if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n            this._reportError(syntaxError(\"Invalid provider for \" + stringifyType(provider.provide) + \". useClass cannot be \" + provider.useClass + \".\\n           Usually it happens when:\\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\\n           2. Class was used before it was declared. Use forwardRef in this case.\"));\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentsFromProvider = function (provider, type) {\n        var _this = this;\n        var /** @type {?} */ components = [];\n        var /** @type {?} */ collectedIdentifiers = [];\n        if (provider.useFactory || provider.useExisting || provider.useClass) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!\"), type);\n            return [];\n        }\n        if (!provider.multi) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!\"), type);\n            return [];\n        }\n        extractIdentifiers(provider.useValue, collectedIdentifiers);\n        collectedIdentifiers.forEach(function (identifier) {\n            var /** @type {?} */ entry = _this._getEntryComponentMetadata(identifier.reference, false);\n            if (entry) {\n                components.push(entry);\n            }\n        });\n        return components;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentMetadata = function (dirType, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n        if (dirMeta && dirMeta.metadata.isComponent) {\n            return { componentType: dirType, componentFactory: dirMeta.metadata.componentFactory };\n        }\n        else {\n            var /** @type {?} */ dirSummary = (this._loadSummary(dirType, CompileSummaryKind.Directive));\n            if (dirSummary && dirSummary.isComponent) {\n                return { componentType: dirType, componentFactory: dirSummary.componentFactory };\n            }\n        }\n        if (throwIfNotFound) {\n            throw syntaxError(dirType.name + \" cannot be used as an entry component.\");\n        }\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getProviderMetadata = function (provider) {\n        var /** @type {?} */ compileDeps;\n        var /** @type {?} */ compileTypeMetadata = null;\n        var /** @type {?} */ compileFactoryMetadata = null;\n        var /** @type {?} */ token = this._getTokenMetadata(provider.token);\n        if (provider.useClass) {\n            compileTypeMetadata = this._getInjectableMetadata(provider.useClass, provider.dependencies);\n            compileDeps = compileTypeMetadata.diDeps;\n            if (provider.token === provider.useClass) {\n                // use the compileTypeMetadata as it contains information about lifecycleHooks...\n                token = { identifier: compileTypeMetadata };\n            }\n        }\n        else if (provider.useFactory) {\n            compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n            compileDeps = compileFactoryMetadata.diDeps;\n        }\n        return {\n            token: token,\n            useClass: compileTypeMetadata,\n            useValue: provider.useValue,\n            useFactory: compileFactoryMetadata,\n            useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : null,\n            deps: compileDeps,\n            multi: provider.multi\n        };\n    };\n    /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueriesMetadata = function (queries, isViewQuery, directiveType) {\n        var _this = this;\n        var /** @type {?} */ res = [];\n        Object.keys(queries).forEach(function (propertyName) {\n            var /** @type {?} */ query = queries[propertyName];\n            if (query.isViewQuery === isViewQuery) {\n                res.push(_this._getQueryMetadata(query, propertyName, directiveType));\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._queryVarBindings = function (selector) { return selector.split(/\\s*,\\s*/); };\n    /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueryMetadata = function (q, propertyName, typeOrFunc) {\n        var _this = this;\n        var /** @type {?} */ selectors;\n        if (typeof q.selector === 'string') {\n            selectors =\n                this._queryVarBindings(q.selector).map(function (varName) { return _this._getTokenMetadata(varName); });\n        }\n        else {\n            if (!q.selector) {\n                this._reportError(syntaxError(\"Can't construct a query for the property \\\"\" + propertyName + \"\\\" of \\\"\" + stringifyType(typeOrFunc) + \"\\\" since the query selector wasn't defined.\"), typeOrFunc);\n            }\n            selectors = [this._getTokenMetadata(q.selector)];\n        }\n        return {\n            selectors: selectors,\n            first: q.first,\n            descendants: q.descendants, propertyName: propertyName,\n            read: q.read ? this._getTokenMetadata(q.read) : null\n        };\n    };\n    /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._reportError = function (error, type, otherType) {\n        if (this._errorCollector) {\n            this._errorCollector(error, type);\n            if (otherType) {\n                this._errorCollector(error, otherType);\n            }\n        }\n        else {\n            throw error;\n        }\n    };\n    return CompileMetadataResolver;\n}());\nCompileMetadataResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nCompileMetadataResolver.ctorParameters = function () { return [\n    { type: CompilerConfig, },\n    { type: NgModuleResolver, },\n    { type: DirectiveResolver, },\n    { type: PipeResolver, },\n    { type: SummaryResolver, },\n    { type: ElementSchemaRegistry, },\n    { type: DirectiveNormalizer, },\n    { type: _angular_core.ɵConsole, },\n    { type: StaticSymbolCache, decorators: [{ type: _angular_core.Optional },] },\n    { type: _angular_core.ɵReflectorReader, },\n    { type: undefined, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [ERROR_COLLECTOR_TOKEN,] },] },\n]; };\n/**\n * @param {?} tree\n * @param {?=} out\n * @return {?}\n */\nfunction flattenArray(tree, out) {\n    if (out === void 0) { out = []; }\n    if (tree) {\n        for (var /** @type {?} */ i = 0; i < tree.length; i++) {\n            var /** @type {?} */ item = _angular_core.resolveForwardRef(tree[i]);\n            if (Array.isArray(item)) {\n                flattenArray(item, out);\n            }\n            else {\n                out.push(item);\n            }\n        }\n    }\n    return out;\n}\n/**\n * @param {?} array\n * @return {?}\n */\nfunction dedupeArray(array) {\n    if (array) {\n        return Array.from(new Set(array));\n    }\n    return [];\n}\n/**\n * @param {?} tree\n * @return {?}\n */\nfunction flattenAndDedupeArray(tree) {\n    return dedupeArray(flattenArray(tree));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValidType(value) {\n    return (value instanceof StaticSymbol) || (value instanceof _angular_core.Type);\n}\n/**\n * @param {?} reflector\n * @param {?} type\n * @param {?} cmpMetadata\n * @return {?}\n */\nfunction componentModuleUrl(reflector, type, cmpMetadata) {\n    if (type instanceof StaticSymbol) {\n        return reflector.resourceUri(type);\n    }\n    var /** @type {?} */ moduleId = cmpMetadata.moduleId;\n    if (typeof moduleId === 'string') {\n        var /** @type {?} */ scheme = getUrlScheme(moduleId);\n        return scheme ? moduleId : \"package:\" + moduleId + MODULE_SUFFIX;\n    }\n    else if (moduleId !== null && moduleId !== void 0) {\n        throw syntaxError(\"moduleId should be a string in \\\"\" + stringifyType(type) + \"\\\". See https://goo.gl/wIDDiL for more information.\\n\" +\n            \"If you're using Webpack you should inline the template and the styles, see https://goo.gl/X2J8zc.\");\n    }\n    return reflector.importUri(type);\n}\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nfunction extractIdentifiers(value, targetIdentifiers) {\n    visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\nvar _CompileValueConverter = (function (_super) {\n    __extends(_CompileValueConverter, _super);\n    function _CompileValueConverter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    _CompileValueConverter.prototype.visitOther = function (value, targetIdentifiers) {\n        targetIdentifiers.push({ reference: value });\n    };\n    return _CompileValueConverter;\n}(ValueTransformer));\n/**\n * @param {?} type\n * @return {?}\n */\nfunction stringifyType(type) {\n    if (type instanceof StaticSymbol) {\n        return type.name + \" in \" + type.filePath;\n    }\n    else {\n        return _angular_core.ɵstringify(type);\n    }\n}\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n * @param {?} compType\n * @return {?}\n */\nfunction componentStillLoadingError(compType) {\n    var /** @type {?} */ error = Error(\"Can't compile synchronously as \" + _angular_core.ɵstringify(compType) + \" is still being loaded!\");\n    ((error))[_angular_core.ɵERROR_COMPONENT_TYPE] = compType;\n    return error;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TypeModifier = {};\nTypeModifier.Const = 0;\nTypeModifier[TypeModifier.Const] = \"Const\";\n/**\n * @abstract\n */\nvar Type$1 = (function () {\n    /**\n     * @param {?=} modifiers\n     */\n    function Type$1(modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n    }\n    /**\n     * @abstract\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Type$1.prototype.visitType = function (visitor, context) { };\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Type$1.prototype.hasModifier = function (modifier) { return this.modifiers.indexOf(modifier) !== -1; };\n    return Type$1;\n}());\nvar BuiltinTypeName = {};\nBuiltinTypeName.Dynamic = 0;\nBuiltinTypeName.Bool = 1;\nBuiltinTypeName.String = 2;\nBuiltinTypeName.Int = 3;\nBuiltinTypeName.Number = 4;\nBuiltinTypeName.Function = 5;\nBuiltinTypeName.Inferred = 6;\nBuiltinTypeName[BuiltinTypeName.Dynamic] = \"Dynamic\";\nBuiltinTypeName[BuiltinTypeName.Bool] = \"Bool\";\nBuiltinTypeName[BuiltinTypeName.String] = \"String\";\nBuiltinTypeName[BuiltinTypeName.Int] = \"Int\";\nBuiltinTypeName[BuiltinTypeName.Number] = \"Number\";\nBuiltinTypeName[BuiltinTypeName.Function] = \"Function\";\nBuiltinTypeName[BuiltinTypeName.Inferred] = \"Inferred\";\nvar BuiltinType = (function (_super) {\n    __extends(BuiltinType, _super);\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     */\n    function BuiltinType(name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BuiltinType.prototype.visitType = function (visitor, context) {\n        return visitor.visitBuiltintType(this, context);\n    };\n    return BuiltinType;\n}(Type$1));\nvar ExpressionType = (function (_super) {\n    __extends(ExpressionType, _super);\n    /**\n     * @param {?} value\n     * @param {?=} modifiers\n     */\n    function ExpressionType(value, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionType.prototype.visitType = function (visitor, context) {\n        return visitor.visitExpressionType(this, context);\n    };\n    return ExpressionType;\n}(Type$1));\nvar ArrayType = (function (_super) {\n    __extends(ArrayType, _super);\n    /**\n     * @param {?} of\n     * @param {?=} modifiers\n     */\n    function ArrayType(of, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.of = of;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ArrayType.prototype.visitType = function (visitor, context) {\n        return visitor.visitArrayType(this, context);\n    };\n    return ArrayType;\n}(Type$1));\nvar MapType = (function (_super) {\n    __extends(MapType, _super);\n    /**\n     * @param {?} valueType\n     * @param {?=} modifiers\n     */\n    function MapType(valueType, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.valueType = valueType;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    MapType.prototype.visitType = function (visitor, context) { return visitor.visitMapType(this, context); };\n    return MapType;\n}(Type$1));\nvar DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\nvar INFERRED_TYPE = new BuiltinType(BuiltinTypeName.Inferred);\nvar BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\nvar INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\nvar NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\nvar STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\nvar FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\nvar BinaryOperator = {};\nBinaryOperator.Equals = 0;\nBinaryOperator.NotEquals = 1;\nBinaryOperator.Identical = 2;\nBinaryOperator.NotIdentical = 3;\nBinaryOperator.Minus = 4;\nBinaryOperator.Plus = 5;\nBinaryOperator.Divide = 6;\nBinaryOperator.Multiply = 7;\nBinaryOperator.Modulo = 8;\nBinaryOperator.And = 9;\nBinaryOperator.Or = 10;\nBinaryOperator.Lower = 11;\nBinaryOperator.LowerEquals = 12;\nBinaryOperator.Bigger = 13;\nBinaryOperator.BiggerEquals = 14;\nBinaryOperator[BinaryOperator.Equals] = \"Equals\";\nBinaryOperator[BinaryOperator.NotEquals] = \"NotEquals\";\nBinaryOperator[BinaryOperator.Identical] = \"Identical\";\nBinaryOperator[BinaryOperator.NotIdentical] = \"NotIdentical\";\nBinaryOperator[BinaryOperator.Minus] = \"Minus\";\nBinaryOperator[BinaryOperator.Plus] = \"Plus\";\nBinaryOperator[BinaryOperator.Divide] = \"Divide\";\nBinaryOperator[BinaryOperator.Multiply] = \"Multiply\";\nBinaryOperator[BinaryOperator.Modulo] = \"Modulo\";\nBinaryOperator[BinaryOperator.And] = \"And\";\nBinaryOperator[BinaryOperator.Or] = \"Or\";\nBinaryOperator[BinaryOperator.Lower] = \"Lower\";\nBinaryOperator[BinaryOperator.LowerEquals] = \"LowerEquals\";\nBinaryOperator[BinaryOperator.Bigger] = \"Bigger\";\nBinaryOperator[BinaryOperator.BiggerEquals] = \"BiggerEquals\";\n/**\n * @abstract\n */\nvar Expression = (function () {\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     */\n    function Expression(type, sourceSpan) {\n        this.type = type;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @abstract\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Expression.prototype.visitExpression = function (visitor, context) { };\n    /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.prop = function (name, sourceSpan) {\n        return new ReadPropExpr(this, name, null, sourceSpan);\n    };\n    /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.key = function (index, type, sourceSpan) {\n        if (type === void 0) { type = null; }\n        return new ReadKeyExpr(this, index, type, sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callMethod = function (name, params, sourceSpan) {\n        return new InvokeMethodExpr(this, name, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callFn = function (params, sourceSpan) {\n        return new InvokeFunctionExpr(this, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.instantiate = function (params, type, sourceSpan) {\n        if (type === void 0) { type = null; }\n        return new InstantiateExpr(this, params, type, sourceSpan);\n    };\n    /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.conditional = function (trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        return new ConditionalExpr(this, trueCase, falseCase, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.equals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notEquals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.identical = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notIdentical = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.minus = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.plus = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.divide = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.multiply = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.modulo = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.and = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.And, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.or = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lower = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lowerEquals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.bigger = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.biggerEquals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.isBlank = function (sourceSpan) {\n        // Note: We use equals by purpose here to compare to null and undefined in JS.\n        // We use the typed null to allow strictNullChecks to narrow types.\n        return this.equals(TYPED_NULL_EXPR, sourceSpan);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.cast = function (type, sourceSpan) {\n        return new CastExpr(this, type, sourceSpan);\n    };\n    /**\n     * @return {?}\n     */\n    Expression.prototype.toStmt = function () { return new ExpressionStatement(this); };\n    return Expression;\n}());\nvar BuiltinVar = {};\nBuiltinVar.This = 0;\nBuiltinVar.Super = 1;\nBuiltinVar.CatchError = 2;\nBuiltinVar.CatchStack = 3;\nBuiltinVar[BuiltinVar.This] = \"This\";\nBuiltinVar[BuiltinVar.Super] = \"Super\";\nBuiltinVar[BuiltinVar.CatchError] = \"CatchError\";\nBuiltinVar[BuiltinVar.CatchStack] = \"CatchStack\";\nvar ReadVarExpr = (function (_super) {\n    __extends(ReadVarExpr, _super);\n    /**\n     * @param {?} name\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function ReadVarExpr(name, type, sourceSpan) {\n        if (type === void 0) { type = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        if (typeof name === 'string') {\n            _this.name = name;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = name;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadVarExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitReadVarExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadVarExpr.prototype.set = function (value) {\n        return new WriteVarExpr(this.name, value, null, this.sourceSpan);\n    };\n    return ReadVarExpr;\n}(Expression));\nvar WriteVarExpr = (function (_super) {\n    __extends(WriteVarExpr, _super);\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function WriteVarExpr(name, value, type, sourceSpan) {\n        if (type === void 0) { type = null; }\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteVarExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWriteVarExpr(this, context);\n    };\n    /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    WriteVarExpr.prototype.toDeclStmt = function (type, modifiers) {\n        if (type === void 0) { type = null; }\n        if (modifiers === void 0) { modifiers = null; }\n        return new DeclareVarStmt(this.name, this.value, type, modifiers, this.sourceSpan);\n    };\n    return WriteVarExpr;\n}(Expression));\nvar WriteKeyExpr = (function (_super) {\n    __extends(WriteKeyExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} index\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function WriteKeyExpr(receiver, index, value, type, sourceSpan) {\n        if (type === void 0) { type = null; }\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWriteKeyExpr(this, context);\n    };\n    return WriteKeyExpr;\n}(Expression));\nvar WritePropExpr = (function (_super) {\n    __extends(WritePropExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function WritePropExpr(receiver, name, value, type, sourceSpan) {\n        if (type === void 0) { type = null; }\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WritePropExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWritePropExpr(this, context);\n    };\n    return WritePropExpr;\n}(Expression));\nvar BuiltinMethod = {};\nBuiltinMethod.ConcatArray = 0;\nBuiltinMethod.SubscribeObservable = 1;\nBuiltinMethod.Bind = 2;\nBuiltinMethod[BuiltinMethod.ConcatArray] = \"ConcatArray\";\nBuiltinMethod[BuiltinMethod.SubscribeObservable] = \"SubscribeObservable\";\nBuiltinMethod[BuiltinMethod.Bind] = \"Bind\";\nvar InvokeMethodExpr = (function (_super) {\n    __extends(InvokeMethodExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} method\n     * @param {?} args\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function InvokeMethodExpr(receiver, method, args, type, sourceSpan) {\n        if (type === void 0) { type = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.args = args;\n        if (typeof method === 'string') {\n            _this.name = method;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = method;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitInvokeMethodExpr(this, context);\n    };\n    return InvokeMethodExpr;\n}(Expression));\nvar InvokeFunctionExpr = (function (_super) {\n    __extends(InvokeFunctionExpr, _super);\n    /**\n     * @param {?} fn\n     * @param {?} args\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function InvokeFunctionExpr(fn, args, type, sourceSpan) {\n        if (type === void 0) { type = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.fn = fn;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitInvokeFunctionExpr(this, context);\n    };\n    return InvokeFunctionExpr;\n}(Expression));\nvar InstantiateExpr = (function (_super) {\n    __extends(InstantiateExpr, _super);\n    /**\n     * @param {?} classExpr\n     * @param {?} args\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function InstantiateExpr(classExpr, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.classExpr = classExpr;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InstantiateExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitInstantiateExpr(this, context);\n    };\n    return InstantiateExpr;\n}(Expression));\nvar LiteralExpr = (function (_super) {\n    __extends(LiteralExpr, _super);\n    /**\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function LiteralExpr(value, type, sourceSpan) {\n        if (type === void 0) { type = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitLiteralExpr(this, context);\n    };\n    return LiteralExpr;\n}(Expression));\nvar ExternalExpr = (function (_super) {\n    __extends(ExternalExpr, _super);\n    /**\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} typeParams\n     * @param {?=} sourceSpan\n     */\n    function ExternalExpr(value, type, typeParams, sourceSpan) {\n        if (type === void 0) { type = null; }\n        if (typeParams === void 0) { typeParams = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        _this.typeParams = typeParams;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExternalExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitExternalExpr(this, context);\n    };\n    return ExternalExpr;\n}(Expression));\nvar ConditionalExpr = (function (_super) {\n    __extends(ConditionalExpr, _super);\n    /**\n     * @param {?} condition\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function ConditionalExpr(condition, trueCase, falseCase, type, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        if (type === void 0) { type = null; }\n        var _this = _super.call(this, type || trueCase.type, sourceSpan) || this;\n        _this.condition = condition;\n        _this.falseCase = falseCase;\n        _this.trueCase = trueCase;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ConditionalExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitConditionalExpr(this, context);\n    };\n    return ConditionalExpr;\n}(Expression));\nvar NotExpr = (function (_super) {\n    __extends(NotExpr, _super);\n    /**\n     * @param {?} condition\n     * @param {?=} sourceSpan\n     */\n    function NotExpr(condition, sourceSpan) {\n        var _this = _super.call(this, BOOL_TYPE, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NotExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitNotExpr(this, context);\n    };\n    return NotExpr;\n}(Expression));\nvar CastExpr = (function (_super) {\n    __extends(CastExpr, _super);\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @param {?=} sourceSpan\n     */\n    function CastExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CastExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitCastExpr(this, context);\n    };\n    return CastExpr;\n}(Expression));\nvar FnParam = (function () {\n    /**\n     * @param {?} name\n     * @param {?=} type\n     */\n    function FnParam(name, type) {\n        if (type === void 0) { type = null; }\n        this.name = name;\n        this.type = type;\n    }\n    return FnParam;\n}());\nvar FunctionExpr = (function (_super) {\n    __extends(FunctionExpr, _super);\n    /**\n     * @param {?} params\n     * @param {?} statements\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function FunctionExpr(params, statements, type, sourceSpan) {\n        if (type === void 0) { type = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.params = params;\n        _this.statements = statements;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    FunctionExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitFunctionExpr(this, context);\n    };\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    FunctionExpr.prototype.toDeclStmt = function (name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers, this.sourceSpan);\n    };\n    return FunctionExpr;\n}(Expression));\nvar BinaryOperatorExpr = (function (_super) {\n    __extends(BinaryOperatorExpr, _super);\n    /**\n     * @param {?} operator\n     * @param {?} lhs\n     * @param {?} rhs\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function BinaryOperatorExpr(operator, lhs, rhs, type, sourceSpan) {\n        if (type === void 0) { type = null; }\n        var _this = _super.call(this, type || lhs.type, sourceSpan) || this;\n        _this.operator = operator;\n        _this.rhs = rhs;\n        _this.lhs = lhs;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitBinaryOperatorExpr(this, context);\n    };\n    return BinaryOperatorExpr;\n}(Expression));\nvar ReadPropExpr = (function (_super) {\n    __extends(ReadPropExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function ReadPropExpr(receiver, name, type, sourceSpan) {\n        if (type === void 0) { type = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadPropExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitReadPropExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadPropExpr.prototype.set = function (value) {\n        return new WritePropExpr(this.receiver, this.name, value, null, this.sourceSpan);\n    };\n    return ReadPropExpr;\n}(Expression));\nvar ReadKeyExpr = (function (_super) {\n    __extends(ReadKeyExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function ReadKeyExpr(receiver, index, type, sourceSpan) {\n        if (type === void 0) { type = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitReadKeyExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.set = function (value) {\n        return new WriteKeyExpr(this.receiver, this.index, value, null, this.sourceSpan);\n    };\n    return ReadKeyExpr;\n}(Expression));\nvar LiteralArrayExpr = (function (_super) {\n    __extends(LiteralArrayExpr, _super);\n    /**\n     * @param {?} entries\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function LiteralArrayExpr(entries, type, sourceSpan) {\n        if (type === void 0) { type = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitLiteralArrayExpr(this, context);\n    };\n    return LiteralArrayExpr;\n}(Expression));\nvar LiteralMapEntry = (function () {\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @param {?=} quoted\n     */\n    function LiteralMapEntry(key, value, quoted) {\n        if (quoted === void 0) { quoted = false; }\n        this.key = key;\n        this.value = value;\n        this.quoted = quoted;\n    }\n    return LiteralMapEntry;\n}());\nvar LiteralMapExpr = (function (_super) {\n    __extends(LiteralMapExpr, _super);\n    /**\n     * @param {?} entries\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function LiteralMapExpr(entries, type, sourceSpan) {\n        if (type === void 0) { type = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        _this.valueType = null;\n        if (type) {\n            _this.valueType = type.valueType;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitLiteralMapExpr(this, context);\n    };\n    return LiteralMapExpr;\n}(Expression));\nvar CommaExpr = (function (_super) {\n    __extends(CommaExpr, _super);\n    /**\n     * @param {?} parts\n     * @param {?=} sourceSpan\n     */\n    function CommaExpr(parts, sourceSpan) {\n        var _this = _super.call(this, parts[parts.length - 1].type, sourceSpan) || this;\n        _this.parts = parts;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommaExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitCommaExpr(this, context);\n    };\n    return CommaExpr;\n}(Expression));\nvar THIS_EXPR = new ReadVarExpr(BuiltinVar.This);\nvar SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super);\nvar CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError);\nvar CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack);\nvar NULL_EXPR = new LiteralExpr(null, null);\nvar TYPED_NULL_EXPR = new LiteralExpr(null, INFERRED_TYPE);\nvar StmtModifier = {};\nStmtModifier.Final = 0;\nStmtModifier.Private = 1;\nStmtModifier[StmtModifier.Final] = \"Final\";\nStmtModifier[StmtModifier.Private] = \"Private\";\n/**\n * @abstract\n */\nvar Statement = (function () {\n    /**\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    function Statement(modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        this.modifiers = modifiers;\n        this.sourceSpan = sourceSpan;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n    }\n    /**\n     * @abstract\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Statement.prototype.visitStatement = function (visitor, context) { };\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Statement.prototype.hasModifier = function (modifier) { return this.modifiers.indexOf(modifier) !== -1; };\n    return Statement;\n}());\nvar DeclareVarStmt = (function (_super) {\n    __extends(DeclareVarStmt, _super);\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    function DeclareVarStmt(name, value, type, modifiers, sourceSpan) {\n        if (type === void 0) { type = null; }\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        _this.type = type || value.type;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitDeclareVarStmt(this, context);\n    };\n    return DeclareVarStmt;\n}(Statement));\nvar DeclareFunctionStmt = (function (_super) {\n    __extends(DeclareFunctionStmt, _super);\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?} statements\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    function DeclareFunctionStmt(name, params, statements, type, modifiers, sourceSpan) {\n        if (type === void 0) { type = null; }\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.statements = statements;\n        _this.type = type;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitDeclareFunctionStmt(this, context);\n    };\n    return DeclareFunctionStmt;\n}(Statement));\nvar ExpressionStatement = (function (_super) {\n    __extends(ExpressionStatement, _super);\n    /**\n     * @param {?} expr\n     * @param {?=} sourceSpan\n     */\n    function ExpressionStatement(expr, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.expr = expr;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionStatement.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitExpressionStmt(this, context);\n    };\n    return ExpressionStatement;\n}(Statement));\nvar ReturnStatement = (function (_super) {\n    __extends(ReturnStatement, _super);\n    /**\n     * @param {?} value\n     * @param {?=} sourceSpan\n     */\n    function ReturnStatement(value, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReturnStatement.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitReturnStmt(this, context);\n    };\n    return ReturnStatement;\n}(Statement));\nvar AbstractClassPart = (function () {\n    /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     */\n    function AbstractClassPart(type, modifiers) {\n        if (type === void 0) { type = null; }\n        this.type = type;\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    AbstractClassPart.prototype.hasModifier = function (modifier) { return this.modifiers.indexOf(modifier) !== -1; };\n    return AbstractClassPart;\n}());\nvar ClassField = (function (_super) {\n    __extends(ClassField, _super);\n    /**\n     * @param {?} name\n     * @param {?=} type\n     * @param {?=} modifiers\n     */\n    function ClassField(name, type, modifiers) {\n        if (type === void 0) { type = null; }\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    return ClassField;\n}(AbstractClassPart));\nvar ClassMethod = (function (_super) {\n    __extends(ClassMethod, _super);\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?} body\n     * @param {?=} type\n     * @param {?=} modifiers\n     */\n    function ClassMethod(name, params, body, type, modifiers) {\n        if (type === void 0) { type = null; }\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.body = body;\n        return _this;\n    }\n    return ClassMethod;\n}(AbstractClassPart));\nvar ClassGetter = (function (_super) {\n    __extends(ClassGetter, _super);\n    /**\n     * @param {?} name\n     * @param {?} body\n     * @param {?=} type\n     * @param {?=} modifiers\n     */\n    function ClassGetter(name, body, type, modifiers) {\n        if (type === void 0) { type = null; }\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.body = body;\n        return _this;\n    }\n    return ClassGetter;\n}(AbstractClassPart));\nvar ClassStmt = (function (_super) {\n    __extends(ClassStmt, _super);\n    /**\n     * @param {?} name\n     * @param {?} parent\n     * @param {?} fields\n     * @param {?} getters\n     * @param {?} constructorMethod\n     * @param {?} methods\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    function ClassStmt(name, parent, fields, getters, constructorMethod, methods, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.parent = parent;\n        _this.fields = fields;\n        _this.getters = getters;\n        _this.constructorMethod = constructorMethod;\n        _this.methods = methods;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ClassStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitDeclareClassStmt(this, context);\n    };\n    return ClassStmt;\n}(Statement));\nvar IfStmt = (function (_super) {\n    __extends(IfStmt, _super);\n    /**\n     * @param {?} condition\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     */\n    function IfStmt(condition, trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = []; }\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.condition = condition;\n        _this.trueCase = trueCase;\n        _this.falseCase = falseCase;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    IfStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitIfStmt(this, context);\n    };\n    return IfStmt;\n}(Statement));\nvar TryCatchStmt = (function (_super) {\n    __extends(TryCatchStmt, _super);\n    /**\n     * @param {?} bodyStmts\n     * @param {?} catchStmts\n     * @param {?=} sourceSpan\n     */\n    function TryCatchStmt(bodyStmts, catchStmts, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.bodyStmts = bodyStmts;\n        _this.catchStmts = catchStmts;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TryCatchStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitTryCatchStmt(this, context);\n    };\n    return TryCatchStmt;\n}(Statement));\nvar ThrowStmt = (function (_super) {\n    __extends(ThrowStmt, _super);\n    /**\n     * @param {?} error\n     * @param {?=} sourceSpan\n     */\n    function ThrowStmt(error, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.error = error;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ThrowStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitThrowStmt(this, context);\n    };\n    return ThrowStmt;\n}(Statement));\nvar AstTransformer$1 = (function () {\n    function AstTransformer$1() {\n    }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.transformExpr = function (expr, context) { return expr; };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.transformStmt = function (stmt, context) { return stmt; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitReadVarExpr = function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitWriteVarExpr = function (expr, context) {\n        return this.transformExpr(new WriteVarExpr(expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitWriteKeyExpr = function (expr, context) {\n        return this.transformExpr(new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitWritePropExpr = function (expr, context) {\n        return this.transformExpr(new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitInvokeMethodExpr = function (ast, context) {\n        var /** @type {?} */ method = ast.builtin || ast.name;\n        return this.transformExpr(new InvokeMethodExpr(ast.receiver.visitExpression(this, context), method, this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitInvokeFunctionExpr = function (ast, context) {\n        return this.transformExpr(new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitInstantiateExpr = function (ast, context) {\n        return this.transformExpr(new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitLiteralExpr = function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitExternalExpr = function (ast, context) {\n        return this.transformExpr(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitConditionalExpr = function (ast, context) {\n        return this.transformExpr(new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), ast.falseCase.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitNotExpr = function (ast, context) {\n        return this.transformExpr(new NotExpr(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitCastExpr = function (ast, context) {\n        return this.transformExpr(new CastExpr(ast.value.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitFunctionExpr = function (ast, context) {\n        return this.transformExpr(new FunctionExpr(ast.params, this.visitAllStatements(ast.statements, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitBinaryOperatorExpr = function (ast, context) {\n        return this.transformExpr(new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitReadPropExpr = function (ast, context) {\n        return this.transformExpr(new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitReadKeyExpr = function (ast, context) {\n        return this.transformExpr(new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitLiteralArrayExpr = function (ast, context) {\n        return this.transformExpr(new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitLiteralMapExpr = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ entries = ast.entries.map(function (entry) { return new LiteralMapEntry(entry.key, entry.value.visitExpression(_this, context), entry.quoted); });\n        var /** @type {?} */ mapType = new MapType(ast.valueType);\n        return this.transformExpr(new LiteralMapExpr(entries, mapType, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitCommaExpr = function (ast, context) {\n        return this.transformExpr(new CommaExpr(this.visitAllExpressions(ast.parts, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitAllExpressions = function (exprs, context) {\n        var _this = this;\n        return exprs.map(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitDeclareVarStmt = function (stmt, context) {\n        return this.transformStmt(new DeclareVarStmt(stmt.name, stmt.value.visitExpression(this, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n        return this.transformStmt(new DeclareFunctionStmt(stmt.name, stmt.params, this.visitAllStatements(stmt.statements, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitExpressionStmt = function (stmt, context) {\n        return this.transformStmt(new ExpressionStatement(stmt.expr.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitReturnStmt = function (stmt, context) {\n        return this.transformStmt(new ReturnStatement(stmt.value.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitDeclareClassStmt = function (stmt, context) {\n        var _this = this;\n        var /** @type {?} */ parent = stmt.parent.visitExpression(this, context);\n        var /** @type {?} */ getters = stmt.getters.map(function (getter) { return new ClassGetter(getter.name, _this.visitAllStatements(getter.body, context), getter.type, getter.modifiers); });\n        var /** @type {?} */ ctorMethod = stmt.constructorMethod &&\n            new ClassMethod(stmt.constructorMethod.name, stmt.constructorMethod.params, this.visitAllStatements(stmt.constructorMethod.body, context), stmt.constructorMethod.type, stmt.constructorMethod.modifiers);\n        var /** @type {?} */ methods = stmt.methods.map(function (method) { return new ClassMethod(method.name, method.params, _this.visitAllStatements(method.body, context), method.type, method.modifiers); });\n        return this.transformStmt(new ClassStmt(stmt.name, parent, stmt.fields, getters, ctorMethod, methods, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitIfStmt = function (stmt, context) {\n        return this.transformStmt(new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitTryCatchStmt = function (stmt, context) {\n        return this.transformStmt(new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitThrowStmt = function (stmt, context) {\n        return this.transformStmt(new ThrowStmt(stmt.error.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitCommentStmt = function (stmt, context) {\n        return this.transformStmt(stmt, context);\n    };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitAllStatements = function (stmts, context) {\n        var _this = this;\n        return stmts.map(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return AstTransformer$1;\n}());\nvar RecursiveAstVisitor$1 = (function () {\n    function RecursiveAstVisitor$1() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitReadVarExpr = function (ast, context) { return ast; };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitWriteVarExpr = function (expr, context) {\n        expr.value.visitExpression(this, context);\n        return expr;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitWriteKeyExpr = function (expr, context) {\n        expr.receiver.visitExpression(this, context);\n        expr.index.visitExpression(this, context);\n        expr.value.visitExpression(this, context);\n        return expr;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitWritePropExpr = function (expr, context) {\n        expr.receiver.visitExpression(this, context);\n        expr.value.visitExpression(this, context);\n        return expr;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitInvokeMethodExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitInvokeFunctionExpr = function (ast, context) {\n        ast.fn.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitInstantiateExpr = function (ast, context) {\n        ast.classExpr.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitLiteralExpr = function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitExternalExpr = function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitConditionalExpr = function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        ast.trueCase.visitExpression(this, context);\n        ast.falseCase.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitNotExpr = function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitCastExpr = function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitFunctionExpr = function (ast, context) {\n        this.visitAllStatements(ast.statements, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitBinaryOperatorExpr = function (ast, context) {\n        ast.lhs.visitExpression(this, context);\n        ast.rhs.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitReadPropExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitReadKeyExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitLiteralArrayExpr = function (ast, context) {\n        this.visitAllExpressions(ast.entries, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitLiteralMapExpr = function (ast, context) {\n        var _this = this;\n        ast.entries.forEach(function (entry) { return entry.value.visitExpression(_this, context); });\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitCommaExpr = function (ast, context) {\n        this.visitAllExpressions(ast.parts, context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitAllExpressions = function (exprs, context) {\n        var _this = this;\n        exprs.forEach(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitDeclareVarStmt = function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n        this.visitAllStatements(stmt.statements, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitExpressionStmt = function (stmt, context) {\n        stmt.expr.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitReturnStmt = function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitDeclareClassStmt = function (stmt, context) {\n        var _this = this;\n        stmt.parent.visitExpression(this, context);\n        stmt.getters.forEach(function (getter) { return _this.visitAllStatements(getter.body, context); });\n        if (stmt.constructorMethod) {\n            this.visitAllStatements(stmt.constructorMethod.body, context);\n        }\n        stmt.methods.forEach(function (method) { return _this.visitAllStatements(method.body, context); });\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitIfStmt = function (stmt, context) {\n        stmt.condition.visitExpression(this, context);\n        this.visitAllStatements(stmt.trueCase, context);\n        this.visitAllStatements(stmt.falseCase, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitTryCatchStmt = function (stmt, context) {\n        this.visitAllStatements(stmt.bodyStmts, context);\n        this.visitAllStatements(stmt.catchStmts, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitThrowStmt = function (stmt, context) {\n        stmt.error.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitCommentStmt = function (stmt, context) { return stmt; };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitAllStatements = function (stmts, context) {\n        var _this = this;\n        stmts.forEach(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return RecursiveAstVisitor$1;\n}());\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction findReadVarNames(stmts) {\n    var /** @type {?} */ visitor = new _ReadVarVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.varNames;\n}\nvar _ReadVarVisitor = (function (_super) {\n    __extends(_ReadVarVisitor, _super);\n    function _ReadVarVisitor() {\n        var _this = _super.apply(this, arguments) || this;\n        _this.varNames = new Set();\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n        // Don't descend into nested functions\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareClassStmt = function (stmt, context) {\n        // Don't descend into nested classes\n        return stmt;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitReadVarExpr = function (ast, context) {\n        this.varNames.add(ast.name);\n        return null;\n    };\n    return _ReadVarVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmt\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToStatementIfNeeded(stmt, sourceSpan) {\n    if (!sourceSpan) {\n        return stmt;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return stmt.visitStatement(transformer, null);\n}\n/**\n * @param {?} expr\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToExpressionIfNeeded(expr, sourceSpan) {\n    if (!sourceSpan) {\n        return expr;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return expr.visitExpression(transformer, null);\n}\nvar _ApplySourceSpanTransformer = (function (_super) {\n    __extends(_ApplySourceSpanTransformer, _super);\n    /**\n     * @param {?} sourceSpan\n     */\n    function _ApplySourceSpanTransformer(sourceSpan) {\n        var _this = _super.call(this) || this;\n        _this.sourceSpan = sourceSpan;\n        return _this;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype._clone = function (obj) {\n        var /** @type {?} */ clone = Object.create(obj.constructor.prototype);\n        for (var /** @type {?} */ prop in obj) {\n            clone[prop] = obj[prop];\n        }\n        return clone;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformExpr = function (expr, context) {\n        if (!expr.sourceSpan) {\n            expr = this._clone(expr);\n            expr.sourceSpan = this.sourceSpan;\n        }\n        return expr;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformStmt = function (stmt, context) {\n        if (!stmt.sourceSpan) {\n            stmt = this._clone(stmt);\n            stmt.sourceSpan = this.sourceSpan;\n        }\n        return stmt;\n    };\n    return _ApplySourceSpanTransformer;\n}(AstTransformer$1));\n/**\n * @param {?} name\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction variable(name, type, sourceSpan) {\n    if (type === void 0) { type = null; }\n    return new ReadVarExpr(name, type, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction importExpr(id, typeParams, sourceSpan) {\n    if (typeParams === void 0) { typeParams = null; }\n    return new ExternalExpr(id, null, typeParams, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction importType(id, typeParams, typeModifiers) {\n    if (typeParams === void 0) { typeParams = null; }\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return id != null ? expressionType(importExpr(id, typeParams), typeModifiers) : null;\n}\n/**\n * @param {?} expr\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction expressionType(expr, typeModifiers) {\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return expr != null ? new ExpressionType(expr, typeModifiers) : null;\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literalArr(values, type, sourceSpan) {\n    if (type === void 0) { type = null; }\n    return new LiteralArrayExpr(values, type, sourceSpan);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @param {?=} quoted\n * @return {?}\n */\nfunction literalMap(values, type, quoted) {\n    if (type === void 0) { type = null; }\n    if (quoted === void 0) { quoted = false; }\n    return new LiteralMapExpr(values.map(function (entry) { return new LiteralMapEntry(entry[0], entry[1], quoted); }), type);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction not(expr, sourceSpan) {\n    return new NotExpr(expr, sourceSpan);\n}\n/**\n * @param {?} params\n * @param {?} body\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction fn(params, body, type, sourceSpan) {\n    if (type === void 0) { type = null; }\n    return new FunctionExpr(params, body, type, sourceSpan);\n}\n/**\n * @param {?} value\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literal(value, type, sourceSpan) {\n    if (type === void 0) { type = null; }\n    return new LiteralExpr(value, type, sourceSpan);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a new class stmts based on the given data.\n * @param {?} config\n * @return {?}\n */\nfunction createClassStmt(config) {\n    var /** @type {?} */ parentArgs = config.parentArgs || [];\n    var /** @type {?} */ superCtorStmts = config.parent ? [SUPER_EXPR.callFn(parentArgs).toStmt()] : [];\n    var /** @type {?} */ builder = concatClassBuilderParts(Array.isArray(config.builders) ? config.builders : [config.builders]);\n    var /** @type {?} */ ctor = new ClassMethod(null, config.ctorParams || [], superCtorStmts.concat(builder.ctorStmts));\n    return new ClassStmt(config.name, config.parent, builder.fields, builder.getters, ctor, builder.methods, config.modifiers || [], config.sourceSpan);\n}\n/**\n * @param {?} builders\n * @return {?}\n */\nfunction concatClassBuilderParts(builders) {\n    return {\n        fields: [].concat.apply([], builders.map(function (builder) { return builder.fields || []; })),\n        methods: [].concat.apply([], builders.map(function (builder) { return builder.methods || []; })),\n        getters: [].concat.apply([], builders.map(function (builder) { return builder.getters || []; })),\n        ctorStmts: [].concat.apply([], builders.map(function (builder) { return builder.ctorStmts || []; })),\n    };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUOTED_KEYS = '$quoted$';\n/**\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nfunction convertValueToOutputAst(value, type) {\n    if (type === void 0) { type = null; }\n    return visitValue(value, new _ValueOutputAstTransformer(), type);\n}\nvar _ValueOutputAstTransformer = (function () {\n    function _ValueOutputAstTransformer() {\n    }\n    /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitArray = function (arr, type) {\n        var _this = this;\n        return literalArr(arr.map(function (value) { return visitValue(value, _this, null); }), type);\n    };\n    /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitStringMap = function (map, type) {\n        var _this = this;\n        var /** @type {?} */ entries = [];\n        var /** @type {?} */ quotedSet = new Set(map && map[QUOTED_KEYS]);\n        Object.keys(map).forEach(function (key) {\n            entries.push(new LiteralMapEntry(key, visitValue(map[key], _this, null), quotedSet.has(key)));\n        });\n        return new LiteralMapExpr(entries, type);\n    };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitPrimitive = function (value, type) { return literal(value, type); };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitOther = function (value, type) {\n        if (value instanceof Expression) {\n            return value;\n        }\n        else {\n            return importExpr({ reference: value });\n        }\n    };\n    return _ValueOutputAstTransformer;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This is currently not read, but will probably be used in the future.\n * We keep it as we already pass it through all the rigth places...\n */\nvar ComponentFactoryDependency = (function () {\n    /**\n     * @param {?} compType\n     */\n    function ComponentFactoryDependency(compType) {\n        this.compType = compType;\n    }\n    return ComponentFactoryDependency;\n}());\nvar NgModuleCompileResult = (function () {\n    /**\n     * @param {?} statements\n     * @param {?} ngModuleFactoryVar\n     * @param {?} dependencies\n     */\n    function NgModuleCompileResult(statements, ngModuleFactoryVar, dependencies) {\n        this.statements = statements;\n        this.ngModuleFactoryVar = ngModuleFactoryVar;\n        this.dependencies = dependencies;\n    }\n    return NgModuleCompileResult;\n}());\nvar NgModuleCompiler = (function () {\n    function NgModuleCompiler() {\n    }\n    /**\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.compile = function (ngModuleMeta, extraProviders) {\n        var /** @type {?} */ sourceSpan = typeSourceSpan('NgModule', ngModuleMeta.type);\n        var /** @type {?} */ deps = [];\n        var /** @type {?} */ bootstrapComponentFactories = [];\n        var /** @type {?} */ entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents.map(function (entryComponent) {\n            if (ngModuleMeta.bootstrapComponents.some(function (id) { return id.reference === entryComponent.componentType; })) {\n                bootstrapComponentFactories.push({ reference: entryComponent.componentFactory });\n            }\n            deps.push(new ComponentFactoryDependency(entryComponent.componentType));\n            return { reference: entryComponent.componentFactory };\n        });\n        var /** @type {?} */ builder = new _InjectorBuilder(ngModuleMeta, entryComponentFactories, bootstrapComponentFactories, sourceSpan);\n        var /** @type {?} */ providerParser = new NgModuleProviderAnalyzer(ngModuleMeta, extraProviders, sourceSpan);\n        providerParser.parse().forEach(function (provider) { return builder.addProvider(provider); });\n        var /** @type {?} */ injectorClass = builder.build();\n        var /** @type {?} */ ngModuleFactoryVar = identifierName(ngModuleMeta.type) + \"NgFactory\";\n        var /** @type {?} */ ngModuleFactoryStmt = variable(ngModuleFactoryVar)\n            .set(importExpr(createIdentifier(Identifiers.NgModuleFactory))\n            .instantiate([variable(injectorClass.name), importExpr(ngModuleMeta.type)], importType(createIdentifier(Identifiers.NgModuleFactory), [importType(ngModuleMeta.type)], [TypeModifier.Const])))\n            .toDeclStmt(null, [StmtModifier.Final]);\n        var /** @type {?} */ stmts = [injectorClass, ngModuleFactoryStmt];\n        if (ngModuleMeta.id) {\n            var /** @type {?} */ registerFactoryStmt = importExpr(createIdentifier(Identifiers.RegisterModuleFactoryFn))\n                .callFn([literal(ngModuleMeta.id), variable(ngModuleFactoryVar)])\n                .toStmt();\n            stmts.push(registerFactoryStmt);\n        }\n        return new NgModuleCompileResult(stmts, ngModuleFactoryVar, deps);\n    };\n    return NgModuleCompiler;\n}());\nNgModuleCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nNgModuleCompiler.ctorParameters = function () { return []; };\nvar _InjectorBuilder = (function () {\n    /**\n     * @param {?} _ngModuleMeta\n     * @param {?} _entryComponentFactories\n     * @param {?} _bootstrapComponentFactories\n     * @param {?} _sourceSpan\n     */\n    function _InjectorBuilder(_ngModuleMeta, _entryComponentFactories, _bootstrapComponentFactories, _sourceSpan) {\n        this._ngModuleMeta = _ngModuleMeta;\n        this._entryComponentFactories = _entryComponentFactories;\n        this._bootstrapComponentFactories = _bootstrapComponentFactories;\n        this._sourceSpan = _sourceSpan;\n        this.fields = [];\n        this.getters = [];\n        this.methods = [];\n        this.ctorStmts = [];\n        this._lazyProps = new Map();\n        this._tokens = [];\n        this._instances = new Map();\n        this._createStmts = [];\n        this._destroyStmts = [];\n    }\n    /**\n     * @param {?} resolvedProvider\n     * @return {?}\n     */\n    _InjectorBuilder.prototype.addProvider = function (resolvedProvider) {\n        var _this = this;\n        var /** @type {?} */ providerValueExpressions = resolvedProvider.providers.map(function (provider) { return _this._getProviderValue(provider); });\n        var /** @type {?} */ propName = \"_\" + tokenName(resolvedProvider.token) + \"_\" + this._instances.size;\n        var /** @type {?} */ instance = this._createProviderProperty(propName, resolvedProvider, providerValueExpressions, resolvedProvider.multiProvider, resolvedProvider.eager);\n        if (resolvedProvider.lifecycleHooks.indexOf(_angular_core.ɵLifecycleHooks.OnDestroy) !== -1) {\n            var /** @type {?} */ callNgOnDestroy = instance.callMethod('ngOnDestroy', []);\n            if (!resolvedProvider.eager) {\n                callNgOnDestroy = this._lazyProps.get(instance.name).and(callNgOnDestroy);\n            }\n            this._destroyStmts.push(callNgOnDestroy.toStmt());\n        }\n        this._tokens.push(resolvedProvider.token);\n        this._instances.set(tokenReference(resolvedProvider.token), instance);\n    };\n    /**\n     * @return {?}\n     */\n    _InjectorBuilder.prototype.build = function () {\n        var _this = this;\n        var /** @type {?} */ getMethodStmts = this._tokens.map(function (token) {\n            var /** @type {?} */ providerExpr = _this._instances.get(tokenReference(token));\n            return new IfStmt(InjectMethodVars.token.identical(createDiTokenExpression(token)), [new ReturnStatement(providerExpr)]);\n        });\n        var /** @type {?} */ methods = [\n            new ClassMethod('createInternal', [], this._createStmts.concat(new ReturnStatement(this._instances.get(this._ngModuleMeta.type.reference))), importType(this._ngModuleMeta.type)),\n            new ClassMethod('getInternal', [\n                new FnParam(InjectMethodVars.token.name, DYNAMIC_TYPE),\n                new FnParam(InjectMethodVars.notFoundResult.name, DYNAMIC_TYPE)\n            ], getMethodStmts.concat([new ReturnStatement(InjectMethodVars.notFoundResult)]), DYNAMIC_TYPE),\n            new ClassMethod('destroyInternal', [], this._destroyStmts),\n        ];\n        var /** @type {?} */ parentArgs = [\n            variable(InjectorProps.parent.name),\n            literalArr(this._entryComponentFactories.map(function (componentFactory) { return importExpr(componentFactory); })),\n            literalArr(this._bootstrapComponentFactories.map(function (componentFactory) { return importExpr(componentFactory); }))\n        ];\n        var /** @type {?} */ injClassName = identifierName(this._ngModuleMeta.type) + \"Injector\";\n        return createClassStmt({\n            name: injClassName,\n            ctorParams: [new FnParam(InjectorProps.parent.name, importType(createIdentifier(Identifiers.Injector)))],\n            parent: importExpr(createIdentifier(Identifiers.NgModuleInjector), [importType(this._ngModuleMeta.type)]),\n            parentArgs: parentArgs,\n            builders: [{ methods: methods }, this]\n        });\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    _InjectorBuilder.prototype._getProviderValue = function (provider) {\n        var _this = this;\n        var /** @type {?} */ result;\n        if (provider.useExisting != null) {\n            result = this._getDependency({ token: provider.useExisting });\n        }\n        else if (provider.useFactory != null) {\n            var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n            var /** @type {?} */ depsExpr = deps.map(function (dep) { return _this._getDependency(dep); });\n            result = importExpr(provider.useFactory).callFn(depsExpr);\n        }\n        else if (provider.useClass != null) {\n            var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n            var /** @type {?} */ depsExpr = deps.map(function (dep) { return _this._getDependency(dep); });\n            result =\n                importExpr(provider.useClass).instantiate(depsExpr, importType(provider.useClass));\n        }\n        else {\n            result = convertValueToOutputAst(provider.useValue);\n        }\n        return result;\n    };\n    /**\n     * @param {?} propName\n     * @param {?} provider\n     * @param {?} providerValueExpressions\n     * @param {?} isMulti\n     * @param {?} isEager\n     * @return {?}\n     */\n    _InjectorBuilder.prototype._createProviderProperty = function (propName, provider, providerValueExpressions, isMulti, isEager) {\n        var /** @type {?} */ resolvedProviderValueExpr;\n        var /** @type {?} */ type;\n        if (isMulti) {\n            resolvedProviderValueExpr = literalArr(providerValueExpressions);\n            type = new ArrayType(DYNAMIC_TYPE);\n        }\n        else {\n            resolvedProviderValueExpr = providerValueExpressions[0];\n            type = providerValueExpressions[0].type;\n        }\n        if (!type) {\n            type = DYNAMIC_TYPE;\n        }\n        if (isEager) {\n            this.fields.push(new ClassField(propName, type));\n            this._createStmts.push(THIS_EXPR.prop(propName).set(resolvedProviderValueExpr).toStmt());\n        }\n        else {\n            var /** @type {?} */ internalFieldProp = THIS_EXPR.prop(\"_\" + propName);\n            this.fields.push(new ClassField(internalFieldProp.name, type));\n            // Note: Equals is important for JS so that it also checks the undefined case!\n            var /** @type {?} */ getterStmts = [\n                new IfStmt(internalFieldProp.isBlank(), [internalFieldProp.set(resolvedProviderValueExpr).toStmt()]),\n                new ReturnStatement(internalFieldProp)\n            ];\n            this.getters.push(new ClassGetter(propName, getterStmts, type));\n            this._lazyProps.set(propName, internalFieldProp);\n        }\n        return THIS_EXPR.prop(propName);\n    };\n    /**\n     * @param {?} dep\n     * @return {?}\n     */\n    _InjectorBuilder.prototype._getDependency = function (dep) {\n        var /** @type {?} */ result = null;\n        if (dep.isValue) {\n            result = literal(dep.value);\n        }\n        if (!dep.isSkipSelf) {\n            if (dep.token) {\n                if (tokenReference(dep.token) === resolveIdentifier(Identifiers.Injector)) {\n                    result = THIS_EXPR;\n                }\n                else if (tokenReference(dep.token) === resolveIdentifier(Identifiers.ComponentFactoryResolver)) {\n                    result = THIS_EXPR.prop('componentFactoryResolver');\n                }\n            }\n            if (!result) {\n                result = this._instances.get(tokenReference(dep.token));\n            }\n        }\n        if (!result) {\n            var /** @type {?} */ args = [createDiTokenExpression(dep.token)];\n            if (dep.isOptional) {\n                args.push(NULL_EXPR);\n            }\n            result = InjectorProps.parent.callMethod('get', args);\n        }\n        return result;\n    };\n    return _InjectorBuilder;\n}());\n/**\n * @param {?} token\n * @return {?}\n */\nfunction createDiTokenExpression(token) {\n    if (token.value != null) {\n        return literal(token.value);\n    }\n    else {\n        return importExpr(token.identifier);\n    }\n}\nvar InjectorProps = (function () {\n    function InjectorProps() {\n    }\n    return InjectorProps;\n}());\nInjectorProps.parent = THIS_EXPR.prop('parent');\nvar InjectMethodVars = (function () {\n    function InjectMethodVars() {\n    }\n    return InjectMethodVars;\n}());\nInjectMethodVars.token = variable('token');\nInjectMethodVars.notFoundResult = variable('notFoundResult');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\nvar VERSION$1 = 3;\nvar JS_B64_PREFIX = '# sourceMappingURL=data:application/json;base64,';\nvar SourceMapGenerator = (function () {\n    /**\n     * @param {?=} file\n     */\n    function SourceMapGenerator(file) {\n        if (file === void 0) { file = null; }\n        this.file = file;\n        this.sourcesContent = new Map();\n        this.lines = [];\n        this.lastCol0 = 0;\n        this.hasMappings = false;\n    }\n    /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addSource = function (url, content) {\n        if (content === void 0) { content = null; }\n        if (!this.sourcesContent.has(url)) {\n            this.sourcesContent.set(url, content);\n        }\n        return this;\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addLine = function () {\n        this.lines.push([]);\n        this.lastCol0 = 0;\n        return this;\n    };\n    /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addMapping = function (col0, sourceUrl, sourceLine0, sourceCol0) {\n        if (!this.currentLine) {\n            throw new Error(\"A line must be added before mappings can be added\");\n        }\n        if (sourceUrl != null && !this.sourcesContent.has(sourceUrl)) {\n            throw new Error(\"Unknown source file \\\"\" + sourceUrl + \"\\\"\");\n        }\n        if (col0 == null) {\n            throw new Error(\"The column in the generated code must be provided\");\n        }\n        if (col0 < this.lastCol0) {\n            throw new Error(\"Mapping should be added in output order\");\n        }\n        if (sourceUrl && (sourceLine0 == null || sourceCol0 == null)) {\n            throw new Error(\"The source location must be provided when a source url is provided\");\n        }\n        this.hasMappings = true;\n        this.lastCol0 = col0;\n        this.currentLine.push({ col0: col0, sourceUrl: sourceUrl, sourceLine0: sourceLine0, sourceCol0: sourceCol0 });\n        return this;\n    };\n    Object.defineProperty(SourceMapGenerator.prototype, \"currentLine\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.lines.slice(-1)[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJSON = function () {\n        var _this = this;\n        if (!this.hasMappings) {\n            return null;\n        }\n        var /** @type {?} */ sourcesIndex = new Map();\n        var /** @type {?} */ sources = [];\n        var /** @type {?} */ sourcesContent = [];\n        Array.from(this.sourcesContent.keys()).forEach(function (url, i) {\n            sourcesIndex.set(url, i);\n            sources.push(url);\n            sourcesContent.push(_this.sourcesContent.get(url) || null);\n        });\n        var /** @type {?} */ mappings = '';\n        var /** @type {?} */ lastCol0 = 0;\n        var /** @type {?} */ lastSourceIndex = 0;\n        var /** @type {?} */ lastSourceLine0 = 0;\n        var /** @type {?} */ lastSourceCol0 = 0;\n        this.lines.forEach(function (segments) {\n            lastCol0 = 0;\n            mappings += segments\n                .map(function (segment) {\n                // zero-based starting column of the line in the generated code\n                var /** @type {?} */ segAsStr = toBase64VLQ(segment.col0 - lastCol0);\n                lastCol0 = segment.col0;\n                if (segment.sourceUrl != null) {\n                    // zero-based index into the “sources” list\n                    segAsStr +=\n                        toBase64VLQ(sourcesIndex.get(segment.sourceUrl) - lastSourceIndex);\n                    lastSourceIndex = sourcesIndex.get(segment.sourceUrl);\n                    // the zero-based starting line in the original source\n                    segAsStr += toBase64VLQ(segment.sourceLine0 - lastSourceLine0);\n                    lastSourceLine0 = segment.sourceLine0;\n                    // the zero-based starting column in the original source\n                    segAsStr += toBase64VLQ(segment.sourceCol0 - lastSourceCol0);\n                    lastSourceCol0 = segment.sourceCol0;\n                }\n                return segAsStr;\n            })\n                .join(',');\n            mappings += ';';\n        });\n        mappings = mappings.slice(0, -1);\n        return {\n            'file': this.file || '',\n            'version': VERSION$1,\n            'sourceRoot': '',\n            'sources': sources,\n            'sourcesContent': sourcesContent,\n            'mappings': mappings,\n        };\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJsComment = function () {\n        return this.hasMappings ? '//' + JS_B64_PREFIX + toBase64String(JSON.stringify(this, null, 0)) :\n            '';\n    };\n    return SourceMapGenerator;\n}());\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64String(value) {\n    var /** @type {?} */ b64 = '';\n    value = utf8Encode(value);\n    for (var /** @type {?} */ i = 0; i < value.length;) {\n        var /** @type {?} */ i1 = value.charCodeAt(i++);\n        var /** @type {?} */ i2 = value.charCodeAt(i++);\n        var /** @type {?} */ i3 = value.charCodeAt(i++);\n        b64 += toBase64Digit(i1 >> 2);\n        b64 += toBase64Digit(((i1 & 3) << 4) | (isNaN(i2) ? 0 : i2 >> 4));\n        b64 += isNaN(i2) ? '=' : toBase64Digit(((i2 & 15) << 2) | (i3 >> 6));\n        b64 += isNaN(i2) || isNaN(i3) ? '=' : toBase64Digit(i3 & 63);\n    }\n    return b64;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64VLQ(value) {\n    value = value < 0 ? ((-value) << 1) + 1 : value << 1;\n    var /** @type {?} */ out = '';\n    do {\n        var /** @type {?} */ digit = value & 31;\n        value = value >> 5;\n        if (value > 0) {\n            digit = digit | 32;\n        }\n        out += toBase64Digit(digit);\n    } while (value > 0);\n    return out;\n}\nvar B64_DIGITS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64Digit(value) {\n    if (value < 0 || value >= 64) {\n        throw new Error(\"Can only encode value in the range [0, 63]\");\n    }\n    return B64_DIGITS[value];\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\nvar _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\nvar _INDENT_WITH = '  ';\nvar CATCH_ERROR_VAR$1 = variable('error');\nvar CATCH_STACK_VAR$1 = variable('stack');\n/**\n * @abstract\n */\nvar _EmittedLine = (function () {\n    /**\n     * @param {?} indent\n     */\n    function _EmittedLine(indent) {\n        this.indent = indent;\n        this.parts = [];\n        this.srcSpans = [];\n    }\n    return _EmittedLine;\n}());\nvar EmitterVisitorContext = (function () {\n    /**\n     * @param {?} _exportedVars\n     * @param {?} _indent\n     */\n    function EmitterVisitorContext(_exportedVars, _indent) {\n        this._exportedVars = _exportedVars;\n        this._indent = _indent;\n        this._classes = [];\n        this._lines = [new _EmittedLine(_indent)];\n    }\n    /**\n     * @param {?} exportedVars\n     * @return {?}\n     */\n    EmitterVisitorContext.createRoot = function (exportedVars) {\n        return new EmitterVisitorContext(exportedVars, 0);\n    };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"_currentLine\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._lines[this._lines.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} varName\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.isExportedVar = function (varName) { return this._exportedVars.indexOf(varName) !== -1; };\n    /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.println = function (from, lastPart) {\n        if (lastPart === void 0) { lastPart = ''; }\n        this.print(from, lastPart, true);\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineIsEmpty = function () { return this._currentLine.parts.length === 0; };\n    /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.print = function (from, part, newLine) {\n        if (newLine === void 0) { newLine = false; }\n        if (part.length > 0) {\n            this._currentLine.parts.push(part);\n            this._currentLine.srcSpans.push(from && from.sourceSpan || null);\n        }\n        if (newLine) {\n            this._lines.push(new _EmittedLine(this._indent));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.removeEmptyLastLine = function () {\n        if (this.lineIsEmpty()) {\n            this._lines.pop();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.incIndent = function () {\n        this._indent++;\n        this._currentLine.indent = this._indent;\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.decIndent = function () {\n        this._indent--;\n        this._currentLine.indent = this._indent;\n    };\n    /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.pushClass = function (clazz) { this._classes.push(clazz); };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.popClass = function () { return this._classes.pop(); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"currentClass\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSource = function () {\n        return this.sourceLines\n            .map(function (l) { return l.parts.length > 0 ? _createIndent(l.indent) + l.parts.join('') : ''; })\n            .join('\\n');\n    };\n    /**\n     * @param {?} sourceFilePath\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSourceMapGenerator = function (sourceFilePath, genFilePath, startsAtLine) {\n        if (startsAtLine === void 0) { startsAtLine = 0; }\n        var /** @type {?} */ map = new SourceMapGenerator(genFilePath);\n        var /** @type {?} */ firstOffsetMapped = false;\n        var /** @type {?} */ mapFirstOffsetIfNeeded = function () {\n            if (!firstOffsetMapped) {\n                // Add a single space so that tools won't try to load the file from disk.\n                // Note: We are using virtual urls like `ng:///`, so we have to\n                // provide a content here.\n                map.addSource(sourceFilePath, ' ').addMapping(0, sourceFilePath, 0, 0);\n                firstOffsetMapped = true;\n            }\n        };\n        for (var /** @type {?} */ i = 0; i < startsAtLine; i++) {\n            map.addLine();\n            mapFirstOffsetIfNeeded();\n        }\n        this.sourceLines.forEach(function (line, lineIdx) {\n            map.addLine();\n            var /** @type {?} */ spans = line.srcSpans;\n            var /** @type {?} */ parts = line.parts;\n            var /** @type {?} */ col0 = line.indent * _INDENT_WITH.length;\n            var /** @type {?} */ spanIdx = 0;\n            // skip leading parts without source spans\n            while (spanIdx < spans.length && !spans[spanIdx]) {\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n            }\n            if (spanIdx < spans.length && lineIdx === 0 && col0 === 0) {\n                firstOffsetMapped = true;\n            }\n            else {\n                mapFirstOffsetIfNeeded();\n            }\n            while (spanIdx < spans.length) {\n                var /** @type {?} */ span = spans[spanIdx];\n                var /** @type {?} */ source = span.start.file;\n                var /** @type {?} */ sourceLine = span.start.line;\n                var /** @type {?} */ sourceCol = span.start.col;\n                map.addSource(source.url, source.content)\n                    .addMapping(col0, source.url, sourceLine, sourceCol);\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n                // assign parts without span or the same span to the previous segment\n                while (spanIdx < spans.length && (span === spans[spanIdx] || !spans[spanIdx])) {\n                    col0 += parts[spanIdx].length;\n                    spanIdx++;\n                }\n            }\n        });\n        return map;\n    };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"sourceLines\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (this._lines.length && this._lines[this._lines.length - 1].parts.length === 0) {\n                return this._lines.slice(0, -1);\n            }\n            return this._lines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EmitterVisitorContext;\n}());\n/**\n * @abstract\n */\nvar AbstractEmitterVisitor = (function () {\n    /**\n     * @param {?} _escapeDollarInStrings\n     */\n    function AbstractEmitterVisitor(_escapeDollarInStrings) {\n        this._escapeDollarInStrings = _escapeDollarInStrings;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitExpressionStmt = function (stmt, ctx) {\n        stmt.expr.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReturnStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"return \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCastExpr = function (ast, context) { };\n    /**\n     * @abstract\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) { };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitIfStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"if (\");\n        stmt.condition.visitExpression(this, ctx);\n        ctx.print(stmt, \") {\");\n        var /** @type {?} */ hasElseCase = stmt.falseCase != null && stmt.falseCase.length > 0;\n        if (stmt.trueCase.length <= 1 && !hasElseCase) {\n            ctx.print(stmt, \" \");\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.removeEmptyLastLine();\n            ctx.print(stmt, \" \");\n        }\n        else {\n            ctx.println();\n            ctx.incIndent();\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.decIndent();\n            if (hasElseCase) {\n                ctx.println(stmt, \"} else {\");\n                ctx.incIndent();\n                this.visitAllStatements(stmt.falseCase, ctx);\n                ctx.decIndent();\n            }\n        }\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) { };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitThrowStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"throw \");\n        stmt.error.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommentStmt = function (stmt, ctx) {\n        var /** @type {?} */ lines = stmt.comment.split('\\n');\n        lines.forEach(function (line) { ctx.println(stmt, \"// \" + line); });\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) { };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteVarExpr = function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        ctx.print(expr, expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteKeyExpr = function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \"[\");\n        expr.index.visitExpression(this, ctx);\n        ctx.print(expr, \"] = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWritePropExpr = function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \".\" + expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeMethodExpr = function (expr, ctx) {\n        expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ name = expr.name;\n        if (expr.builtin != null) {\n            name = this.getBuiltinMethodName(expr.builtin);\n            if (name == null) {\n                // some builtins just mean to skip the call.\n                return null;\n            }\n        }\n        ctx.print(expr, \".\" + name + \"(\");\n        this.visitAllExpressions(expr.args, ctx, \",\");\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} method\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.getBuiltinMethodName = function (method) { };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {\n        expr.fn.visitExpression(this, ctx);\n        ctx.print(expr, \"(\");\n        this.visitAllExpressions(expr.args, ctx, ',');\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {\n        var /** @type {?} */ varName = ast.name;\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    varName = 'super';\n                    break;\n                case BuiltinVar.This:\n                    varName = 'this';\n                    break;\n                case BuiltinVar.CatchError:\n                    varName = CATCH_ERROR_VAR$1.name;\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = CATCH_STACK_VAR$1.name;\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        ctx.print(ast, varName);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInstantiateExpr = function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        ast.classExpr.visitExpression(this, ctx);\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralExpr = function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (typeof value === 'string') {\n            ctx.print(ast, escapeIdentifier(value, this._escapeDollarInStrings));\n        }\n        else {\n            ctx.print(ast, \"\" + value);\n        }\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) { };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitConditionalExpr = function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        ast.condition.visitExpression(this, ctx);\n        ctx.print(ast, '? ');\n        ast.trueCase.visitExpression(this, ctx);\n        ctx.print(ast, ': ');\n        ast.falseCase.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitNotExpr = function (ast, ctx) {\n        ctx.print(ast, '!');\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) { };\n    /**\n     * @abstract\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr = function (ast, ctx) {\n        var /** @type {?} */ opStr;\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                opStr = '==';\n                break;\n            case BinaryOperator.Identical:\n                opStr = '===';\n                break;\n            case BinaryOperator.NotEquals:\n                opStr = '!=';\n                break;\n            case BinaryOperator.NotIdentical:\n                opStr = '!==';\n                break;\n            case BinaryOperator.And:\n                opStr = '&&';\n                break;\n            case BinaryOperator.Or:\n                opStr = '||';\n                break;\n            case BinaryOperator.Plus:\n                opStr = '+';\n                break;\n            case BinaryOperator.Minus:\n                opStr = '-';\n                break;\n            case BinaryOperator.Divide:\n                opStr = '/';\n                break;\n            case BinaryOperator.Multiply:\n                opStr = '*';\n                break;\n            case BinaryOperator.Modulo:\n                opStr = '%';\n                break;\n            case BinaryOperator.Lower:\n                opStr = '<';\n                break;\n            case BinaryOperator.LowerEquals:\n                opStr = '<=';\n                break;\n            case BinaryOperator.Bigger:\n                opStr = '>';\n                break;\n            case BinaryOperator.BiggerEquals:\n                opStr = '>=';\n                break;\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n        ctx.print(ast, \"(\");\n        ast.lhs.visitExpression(this, ctx);\n        ctx.print(ast, \" \" + opStr + \" \");\n        ast.rhs.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadPropExpr = function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \".\");\n        ctx.print(ast, ast.name);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadKeyExpr = function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \"[\");\n        ast.index.visitExpression(this, ctx);\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n        var /** @type {?} */ useNewLine = ast.entries.length > 1;\n        ctx.print(ast, \"[\", useNewLine);\n        ctx.incIndent();\n        this.visitAllExpressions(ast.entries, ctx, ',', useNewLine);\n        ctx.decIndent();\n        ctx.print(ast, \"]\", useNewLine);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralMapExpr = function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ useNewLine = ast.entries.length > 1;\n        ctx.print(ast, \"{\", useNewLine);\n        ctx.incIndent();\n        this.visitAllObjects(function (entry) {\n            ctx.print(ast, escapeIdentifier(entry.key, _this._escapeDollarInStrings, entry.quoted) + \": \");\n            entry.value.visitExpression(_this, ctx);\n        }, ast.entries, ctx, ',', useNewLine);\n        ctx.decIndent();\n        ctx.print(ast, \"}\", useNewLine);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommaExpr = function (ast, ctx) {\n        ctx.print(ast, '(');\n        this.visitAllExpressions(ast.parts, ctx, ',');\n        ctx.print(ast, ')');\n        return null;\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @param {?=} newLine\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllExpressions = function (expressions, ctx, separator, newLine) {\n        var _this = this;\n        if (newLine === void 0) { newLine = false; }\n        this.visitAllObjects(function (expr) { return expr.visitExpression(_this, ctx); }, expressions, ctx, separator, newLine);\n    };\n    /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @param {?=} newLine\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllObjects = function (handler, expressions, ctx, separator, newLine) {\n        if (newLine === void 0) { newLine = false; }\n        for (var /** @type {?} */ i = 0; i < expressions.length; i++) {\n            if (i > 0) {\n                ctx.print(null, separator, newLine);\n            }\n            handler(expressions[i]);\n        }\n        if (newLine) {\n            ctx.println();\n        }\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllStatements = function (statements, ctx) {\n        var _this = this;\n        statements.forEach(function (stmt) { return stmt.visitStatement(_this, ctx); });\n    };\n    return AbstractEmitterVisitor;\n}());\n/**\n * @param {?} input\n * @param {?} escapeDollar\n * @param {?=} alwaysQuote\n * @return {?}\n */\nfunction escapeIdentifier(input, escapeDollar, alwaysQuote) {\n    if (alwaysQuote === void 0) { alwaysQuote = true; }\n    if (input == null) {\n        return null;\n    }\n    var /** @type {?} */ body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, function () {\n        var match = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            match[_i] = arguments[_i];\n        }\n        if (match[0] == '$') {\n            return escapeDollar ? '\\\\$' : '$';\n        }\n        else if (match[0] == '\\n') {\n            return '\\\\n';\n        }\n        else if (match[0] == '\\r') {\n            return '\\\\r';\n        }\n        else {\n            return \"\\\\\" + match[0];\n        }\n    });\n    var /** @type {?} */ requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n    return requiresQuotes ? \"'\" + body + \"'\" : body;\n}\n/**\n * @param {?} count\n * @return {?}\n */\nfunction _createIndent(count) {\n    var /** @type {?} */ res = '';\n    for (var /** @type {?} */ i = 0; i < count; i++) {\n        res += _INDENT_WITH;\n    }\n    return res;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _debugFilePath = '/debug/lib';\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction debugOutputAstAsTypeScript(ast) {\n    var /** @type {?} */ converter = new _TsEmitterVisitor(_debugFilePath, {\n        /**\n         * @param {?} filePath\n         * @param {?} containingFilePath\n         * @return {?}\n         */\n        fileNameToModuleName: function (filePath, containingFilePath) { return filePath; },\n        /**\n         * @param {?} symbol\n         * @return {?}\n         */\n        getImportAs: function (symbol) { return null; },\n        getTypeArity: function (symbol) { return null; }\n    });\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot([]);\n    var /** @type {?} */ asts = Array.isArray(ast) ? ast : [ast];\n    asts.forEach(function (ast) {\n        if (ast instanceof Statement) {\n            ast.visitStatement(converter, ctx);\n        }\n        else if (ast instanceof Expression) {\n            ast.visitExpression(converter, ctx);\n        }\n        else if (ast instanceof Type$1) {\n            ast.visitType(converter, ctx);\n        }\n        else {\n            throw new Error(\"Don't know how to print debug info for \" + ast);\n        }\n    });\n    return ctx.toSource();\n}\nvar TypeScriptEmitter = (function () {\n    /**\n     * @param {?} _importResolver\n     */\n    function TypeScriptEmitter(_importResolver) {\n        this._importResolver = _importResolver;\n    }\n    /**\n     * @param {?} srcFilePath\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?} exportedVars\n     * @param {?=} preamble\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatements = function (srcFilePath, genFilePath, stmts, exportedVars, preamble) {\n        var _this = this;\n        if (preamble === void 0) { preamble = ''; }\n        var /** @type {?} */ converter = new _TsEmitterVisitor(genFilePath, this._importResolver);\n        var /** @type {?} */ ctx = EmitterVisitorContext.createRoot(exportedVars);\n        converter.visitAllStatements(stmts, ctx);\n        var /** @type {?} */ preambleLines = preamble ? preamble.split('\\n') : [];\n        converter.reexports.forEach(function (reexports, exportedFilePath) {\n            var /** @type {?} */ reexportsCode = reexports.map(function (reexport) { return reexport.name + \" as \" + reexport.as; }).join(',');\n            preambleLines.push(\"export {\" + reexportsCode + \"} from '\" + _this._importResolver.fileNameToModuleName(exportedFilePath, genFilePath) + \"';\");\n        });\n        converter.importsWithPrefixes.forEach(function (prefix, importedFilePath) {\n            // Note: can't write the real word for import as it screws up system.js auto detection...\n            preambleLines.push(\"imp\" +\n                (\"ort * as \" + prefix + \" from '\" + _this._importResolver.fileNameToModuleName(importedFilePath, genFilePath) + \"';\"));\n        });\n        var /** @type {?} */ sm = ctx.toSourceMapGenerator(srcFilePath, genFilePath, preambleLines.length).toJsComment();\n        var /** @type {?} */ lines = preambleLines.concat([ctx.toSource(), sm]);\n        if (sm) {\n            // always add a newline at the end, as some tools have bugs without it.\n            lines.push('');\n        }\n        return lines.join('\\n');\n    };\n    return TypeScriptEmitter;\n}());\nvar _TsEmitterVisitor = (function (_super) {\n    __extends(_TsEmitterVisitor, _super);\n    /**\n     * @param {?} _genFilePath\n     * @param {?} _importResolver\n     */\n    function _TsEmitterVisitor(_genFilePath, _importResolver) {\n        var _this = _super.call(this, false) || this;\n        _this._genFilePath = _genFilePath;\n        _this._importResolver = _importResolver;\n        _this.typeExpression = 0;\n        _this.importsWithPrefixes = new Map();\n        _this.reexports = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitType = function (t, ctx, defaultType) {\n        if (defaultType === void 0) { defaultType = 'any'; }\n        if (t != null) {\n            this.typeExpression++;\n            t.visitType(this, ctx);\n            this.typeExpression--;\n        }\n        else {\n            ctx.print(null, defaultType);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralExpr = function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (value == null && ast.type != INFERRED_TYPE) {\n            ctx.print(ast, \"(\" + value + \" as any)\");\n            return null;\n        }\n        return _super.prototype.visitLiteralExpr.call(this, ast, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n        if (ast.entries.length === 0) {\n            ctx.print(ast, '(');\n        }\n        var /** @type {?} */ result = _super.prototype.visitLiteralArrayExpr.call(this, ast, ctx);\n        if (ast.entries.length === 0) {\n            ctx.print(ast, ' as any[])');\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {\n        this._visitIdentifier(ast.value, ast.typeParams, ctx);\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        if (ctx.isExportedVar(stmt.name) && stmt.value instanceof ExternalExpr && !stmt.type) {\n            // check for a reexport\n            var _a = this._resolveStaticSymbol(stmt.value.value), name = _a.name, filePath = _a.filePath, members = _a.members;\n            if (members.length === 0 && filePath !== this._genFilePath) {\n                var /** @type {?} */ reexports = this.reexports.get(filePath);\n                if (!reexports) {\n                    reexports = [];\n                    this.reexports.set(filePath, reexports);\n                }\n                reexports.push({ name: name, as: stmt.name });\n                return null;\n            }\n        }\n        if (ctx.isExportedVar(stmt.name)) {\n            ctx.print(stmt, \"export \");\n        }\n        if (stmt.hasModifier(StmtModifier.Final)) {\n            ctx.print(stmt, \"const\");\n        }\n        else {\n            ctx.print(stmt, \"var\");\n        }\n        ctx.print(stmt, \" \" + stmt.name);\n        this._printColonType(stmt.type, ctx);\n        ctx.print(stmt, \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {\n        ctx.print(ast, \"(<\");\n        ast.type.visitType(this, ctx);\n        ctx.print(ast, \">\");\n        ast.value.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitInstantiateExpr = function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        this.typeExpression++;\n        ast.classExpr.visitExpression(this, ctx);\n        this.typeExpression--;\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        if (ctx.isExportedVar(stmt.name)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"class \" + stmt.name);\n        if (stmt.parent != null) {\n            ctx.print(stmt, \" extends \");\n            this.typeExpression++;\n            stmt.parent.visitExpression(this, ctx);\n            this.typeExpression--;\n        }\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        stmt.fields.forEach(function (field) { return _this._visitClassField(field, ctx); });\n        if (stmt.constructorMethod != null) {\n            this._visitClassConstructor(stmt, ctx);\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(method, ctx); });\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassField = function (field, ctx) {\n        if (field.hasModifier(StmtModifier.Private)) {\n            // comment out as a workaround for #10967\n            ctx.print(null, \"/*private*/ \");\n        }\n        ctx.print(null, field.name);\n        this._printColonType(field.type, ctx);\n        ctx.println(null, \";\");\n    };\n    /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassGetter = function (getter, ctx) {\n        if (getter.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, \"get \" + getter.name + \"()\");\n        this._printColonType(getter.type, ctx);\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(getter.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {\n        ctx.print(stmt, \"constructor(\");\n        this._visitParams(stmt.constructorMethod.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.constructorMethod.body, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassMethod = function (method, ctx) {\n        if (method.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, method.name + \"(\");\n        this._visitParams(method.params, ctx);\n        ctx.print(null, \")\");\n        this._printColonType(method.type, ctx, 'void');\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(method.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        this._visitParams(ast.params, ctx);\n        ctx.print(ast, \")\");\n        this._printColonType(ast.type, ctx, 'void');\n        ctx.println(ast, \" => {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        if (ctx.isExportedVar(stmt.name)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.print(stmt, \")\");\n        this._printColonType(stmt.type, ctx, 'void');\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack')).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitBuiltintType = function (type, ctx) {\n        var /** @type {?} */ typeStr;\n        switch (type.name) {\n            case BuiltinTypeName.Bool:\n                typeStr = 'boolean';\n                break;\n            case BuiltinTypeName.Dynamic:\n                typeStr = 'any';\n                break;\n            case BuiltinTypeName.Function:\n                typeStr = 'Function';\n                break;\n            case BuiltinTypeName.Number:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.Int:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.String:\n                typeStr = 'string';\n                break;\n            default:\n                throw new Error(\"Unsupported builtin type \" + type.name);\n        }\n        ctx.print(null, typeStr);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExpressionType = function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitArrayType = function (type, ctx) {\n        this.visitType(type.of, ctx);\n        ctx.print(null, \"[]\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitMapType = function (type, ctx) {\n        ctx.print(null, \"{[key: string]:\");\n        this.visitType(type.valueType, ctx);\n        ctx.print(null, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitParams = function (params, ctx) {\n        var _this = this;\n        this.visitAllObjects(function (param) {\n            ctx.print(null, param.name);\n            _this._printColonType(param.type, ctx);\n        }, params, ctx, ',');\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._resolveStaticSymbol = function (value) {\n        var /** @type {?} */ reference = value.reference;\n        if (!(reference instanceof StaticSymbol)) {\n            throw new Error(\"Internal error: unknown identifier \" + JSON.stringify(value));\n        }\n        var /** @type {?} */ arity = this._importResolver.getTypeArity(reference) || undefined;\n        var /** @type {?} */ importReference = this._importResolver.getImportAs(reference) || reference;\n        return {\n            name: importReference.name,\n            filePath: importReference.filePath,\n            members: importReference.members, arity: arity\n        };\n    };\n    /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitIdentifier = function (value, typeParams, ctx) {\n        var _this = this;\n        var _a = this._resolveStaticSymbol(value), name = _a.name, filePath = _a.filePath, members = _a.members, arity = _a.arity;\n        if (filePath != this._genFilePath) {\n            var /** @type {?} */ prefix = this.importsWithPrefixes.get(filePath);\n            if (prefix == null) {\n                prefix = \"import\" + this.importsWithPrefixes.size;\n                this.importsWithPrefixes.set(filePath, prefix);\n            }\n            ctx.print(null, prefix + \".\");\n        }\n        if (members.length) {\n            ctx.print(null, name);\n            ctx.print(null, '.');\n            ctx.print(null, members.join('.'));\n        }\n        else {\n            ctx.print(null, name);\n        }\n        if (this.typeExpression > 0) {\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedParameters = (typeParams && typeParams.length) || 0;\n            var /** @type {?} */ additionalParameters = (arity || 0) - suppliedParameters;\n            if (suppliedParameters > 0 || additionalParameters > 0) {\n                ctx.print(null, \"<\");\n                if (suppliedParameters > 0) {\n                    this.visitAllObjects(function (type) { return type.visitType(_this, ctx); }, typeParams, ctx, ',');\n                }\n                if (additionalParameters > 0) {\n                    for (var /** @type {?} */ i = 0; i < additionalParameters; i++) {\n                        if (i > 0 || suppliedParameters > 0)\n                            ctx.print(null, ',');\n                        ctx.print(null, 'any');\n                    }\n                }\n                ctx.print(null, \">\");\n            }\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._printColonType = function (type, ctx, defaultType) {\n        if (type !== INFERRED_TYPE) {\n            ctx.print(null, ':');\n            this.visitType(type, ctx, defaultType);\n        }\n    };\n    return _TsEmitterVisitor;\n}(AbstractEmitterVisitor));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// =================================================================================================\n// =================================================================================================\n// =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========\n// =================================================================================================\n// =================================================================================================\n//\n//        DO NOT EDIT THIS LIST OF SECURITY SENSITIVE PROPERTIES WITHOUT A SECURITY REVIEW!\n//                               Reach out to mprobst for details.\n//\n// =================================================================================================\n/** Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'. */\nvar SECURITY_SCHEMA = {};\n/**\n * @param {?} ctx\n * @param {?} specs\n * @return {?}\n */\nfunction registerContext(ctx, specs) {\n    for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n        var spec = specs_1[_i];\n        SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n    }\n}\n// Case is insignificant below, all element and attribute names are lower-cased for lookup.\nregisterContext(_angular_core.SecurityContext.HTML, [\n    'iframe|srcdoc',\n    '*|innerHTML',\n    '*|outerHTML',\n]);\nregisterContext(_angular_core.SecurityContext.STYLE, ['*|style']);\n// NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\nregisterContext(_angular_core.SecurityContext.URL, [\n    '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n    'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n    'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n    'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n]);\nregisterContext(_angular_core.SecurityContext.RESOURCE_URL, [\n    'applet|code',\n    'applet|codebase',\n    'base|href',\n    'embed|src',\n    'frame|src',\n    'head|profile',\n    'html|manifest',\n    'iframe|src',\n    'link|href',\n    'media|src',\n    'object|codebase',\n    'object|data',\n    'script|src',\n]);\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BOOLEAN = 'boolean';\nvar NUMBER = 'number';\nvar STRING = 'string';\nvar OBJECT = 'object';\n/**\n * This array represents the DOM schema. It encodes inheritance, properties, and events.\n *\n * ## Overview\n *\n * Each line represents one kind of element. The `element_inheritance` and properties are joined\n * using `element_inheritance|properties` syntax.\n *\n * ## Element Inheritance\n *\n * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n * Here the individual elements are separated by `,` (commas). Every element in the list\n * has identical properties.\n *\n * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n * specified then `\"\"` (blank) element is assumed.\n *\n * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n * elements.\n *\n * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n *\n * ## Properties\n *\n * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n * by a special character designating its type:\n *\n * - (no prefix): property is a string.\n * - `*`: property represents an event.\n * - `!`: property is a boolean.\n * - `#`: property is a number.\n * - `%`: property is an object.\n *\n * ## Query\n *\n * The class creates an internal squas representation which allows to easily answer the query of\n * if a given property exist on a given element.\n *\n * NOTE: We don't yet support querying for types or events.\n * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n *       see dom_element_schema_registry_spec.ts\n */\n// =================================================================================================\n// =================================================================================================\n// =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========\n// =================================================================================================\n// =================================================================================================\n//\n//                       DO NOT EDIT THIS DOM SCHEMA WITHOUT A SECURITY REVIEW!\n//\n// Newly added properties must be security reviewed and assigned an appropriate SecurityContext in\n// dom_security_schema.ts. Reach out to mprobst & rjamet for details.\n//\n// =================================================================================================\nvar SCHEMA = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*beforecopy,*beforecut,*beforepaste,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*copy,*cuechange,*cut,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*message,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*paste,*pause,*play,*playing,*progress,*ratechange,*reset,*resize,*scroll,*search,*seeked,*seeking,*select,*selectstart,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*beforecopy,*beforecut,*beforepaste,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*copy,*cuechange,*cut,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*message,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*paste,*pause,*play,*playing,*progress,*ratechange,*reset,*resize,*scroll,*search,*seeked,*seeking,*select,*selectstart,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,keytype,name',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:cursor^:svg:|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n];\nvar _ATTR_TO_PROP = {\n    'class': 'className',\n    'for': 'htmlFor',\n    'formaction': 'formAction',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\nvar DomElementSchemaRegistry = (function (_super) {\n    __extends(DomElementSchemaRegistry, _super);\n    function DomElementSchemaRegistry() {\n        var _this = _super.call(this) || this;\n        _this._schema = {};\n        SCHEMA.forEach(function (encodedType) {\n            var type = {};\n            var _a = encodedType.split('|'), strType = _a[0], strProperties = _a[1];\n            var properties = strProperties.split(',');\n            var _b = strType.split('^'), typeNames = _b[0], superName = _b[1];\n            typeNames.split(',').forEach(function (tag) { return _this._schema[tag.toLowerCase()] = type; });\n            var superType = superName && _this._schema[superName.toLowerCase()];\n            if (superType) {\n                Object.keys(superType).forEach(function (prop) { type[prop] = superType[prop]; });\n            }\n            properties.forEach(function (property) {\n                if (property.length > 0) {\n                    switch (property[0]) {\n                        case '*':\n                            // We don't yet support events.\n                            // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                            // will\n                            // almost certainly introduce bad XSS vulnerabilities.\n                            // type[property.substring(1)] = EVENT;\n                            break;\n                        case '!':\n                            type[property.substring(1)] = BOOLEAN;\n                            break;\n                        case '#':\n                            type[property.substring(1)] = NUMBER;\n                            break;\n                        case '%':\n                            type[property.substring(1)] = OBJECT;\n                            break;\n                        default:\n                            type[property] = STRING;\n                    }\n                }\n            });\n        });\n        return _this;\n    }\n    /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasProperty = function (tagName, propName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === _angular_core.NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (tagName === 'ng-container' || tagName === 'ng-content') {\n                return false;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === _angular_core.CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Can't tell now as we don't know which properties a custom element will get\n                // once it is instantiated\n                return true;\n            }\n        }\n        var /** @type {?} */ elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n        return !!elementProperties[propName];\n    };\n    /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasElement = function (tagName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === _angular_core.NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (tagName === 'ng-container' || tagName === 'ng-content') {\n                return true;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === _angular_core.CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Allow any custom elements\n                return true;\n            }\n        }\n        return !!this._schema[tagName.toLowerCase()];\n    };\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.securityContext = function (tagName, propName, isAttribute) {\n        if (isAttribute) {\n            // NB: For security purposes, use the mapped property name, not the attribute name.\n            propName = this.getMappedPropName(propName);\n        }\n        // Make sure comparisons are case insensitive, so that case differences between attribute and\n        // property names do not have a security impact.\n        tagName = tagName.toLowerCase();\n        propName = propName.toLowerCase();\n        var /** @type {?} */ ctx = SECURITY_SCHEMA[tagName + '|' + propName];\n        if (ctx) {\n            return ctx;\n        }\n        ctx = SECURITY_SCHEMA['*|' + propName];\n        return ctx ? ctx : _angular_core.SecurityContext.NONE;\n    };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getMappedPropName = function (propName) { return _ATTR_TO_PROP[propName] || propName; };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getDefaultComponentElementName = function () { return 'ng-component'; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateProperty = function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateAttribute = function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.allKnownElementNames = function () { return Object.keys(this._schema); };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = function (propName) {\n        return dashCaseToCamelCase(propName);\n    };\n    /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue = function (camelCaseProp, userProvidedProp, val) {\n        var /** @type {?} */ unit = '';\n        var /** @type {?} */ strVal = val.toString().trim();\n        var /** @type {?} */ errorMsg = null;\n        if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n            if (typeof val === 'number') {\n                unit = 'px';\n            }\n            else {\n                var /** @type {?} */ valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errorMsg = \"Please provide a CSS unit value for \" + userProvidedProp + \":\" + val;\n                }\n            }\n        }\n        return { error: errorMsg, value: strVal + unit };\n    };\n    return DomElementSchemaRegistry;\n}(ElementSchemaRegistry));\nDomElementSchemaRegistry.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nDomElementSchemaRegistry.ctorParameters = function () { return []; };\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction _isPixelDimensionStyle(prop) {\n    switch (prop) {\n        case 'width':\n        case 'height':\n        case 'minWidth':\n        case 'minHeight':\n        case 'maxWidth':\n        case 'maxHeight':\n        case 'left':\n        case 'top':\n        case 'bottom':\n        case 'right':\n        case 'fontSize':\n        case 'outlineWidth':\n        case 'outlineOffset':\n        case 'paddingTop':\n        case 'paddingLeft':\n        case 'paddingBottom':\n        case 'paddingRight':\n        case 'marginTop':\n        case 'marginLeft':\n        case 'marginBottom':\n        case 'marginRight':\n        case 'borderRadius':\n        case 'borderWidth':\n        case 'borderTopWidth':\n        case 'borderLeftWidth':\n        case 'borderRightWidth':\n        case 'borderBottomWidth':\n        case 'textIndent':\n            return true;\n        default:\n            return false;\n    }\n}\nvar ShadowCss = (function () {\n    function ShadowCss() {\n        this.strictStyling = true;\n    }\n    /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype.shimCssText = function (cssText, selector, hostSelector) {\n        if (hostSelector === void 0) { hostSelector = ''; }\n        var /** @type {?} */ sourceMappingUrl = extractSourceMappingUrl(cssText);\n        cssText = stripComments(cssText);\n        cssText = this._insertDirectives(cssText);\n        return this._scopeCssText(cssText, selector, hostSelector) + sourceMappingUrl;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertDirectives = function (cssText) {\n        cssText = this._insertPolyfillDirectivesInCssText(cssText);\n        return this._insertPolyfillRulesInCssText(cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillDirectivesInCssText = function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentNextSelectorRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return m[2] + '{';\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillRulesInCssText = function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentRuleRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            var /** @type {?} */ rule = m[0].replace(m[1], '').replace(m[2], '');\n            return m[4] + rule;\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeCssText = function (cssText, scopeSelector, hostSelector) {\n        var /** @type {?} */ unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n        // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n        cssText = this._insertPolyfillHostInCssText(cssText);\n        cssText = this._convertColonHost(cssText);\n        cssText = this._convertColonHostContext(cssText);\n        cssText = this._convertShadowDOMSelectors(cssText);\n        if (scopeSelector) {\n            cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n        }\n        cssText = cssText + '\\n' + unscopedRules;\n        return cssText.trim();\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._extractUnscopedRulesFromCssText = function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        var /** @type {?} */ r = '';\n        var /** @type {?} */ m;\n        _cssContentUnscopedRuleRe.lastIndex = 0;\n        while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n            var /** @type {?} */ rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n            r += rule + '\\n\\n';\n        }\n        return r;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHost = function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHostContext = function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonRule = function (cssText, regExp, partReplacer) {\n        // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n        return cssText.replace(regExp, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            if (m[2]) {\n                var /** @type {?} */ parts = m[2].split(',');\n                var /** @type {?} */ r = [];\n                for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n                    var /** @type {?} */ p = parts[i].trim();\n                    if (!p)\n                        break;\n                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                }\n                return r.join(',');\n            }\n            else {\n                return _polyfillHostNoCombinator + m[3];\n            }\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostContextPartReplacer = function (host, part, suffix) {\n        if (part.indexOf(_polyfillHost) > -1) {\n            return this._colonHostPartReplacer(host, part, suffix);\n        }\n        else {\n            return host + part + suffix + ', ' + part + ' ' + host + suffix;\n        }\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostPartReplacer = function (host, part, suffix) {\n        return host + part.replace(_polyfillHost, '') + suffix;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertShadowDOMSelectors = function (cssText) {\n        return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelectors = function (cssText, scopeSelector, hostSelector) {\n        var _this = this;\n        return processRules(cssText, function (rule) {\n            var /** @type {?} */ selector = rule.selector;\n            var /** @type {?} */ content = rule.content;\n            if (rule.selector[0] != '@') {\n                selector =\n                    _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n            }\n            return new CssRule(selector, content);\n        });\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelector = function (selector, scopeSelector, hostSelector, strict) {\n        var _this = this;\n        return selector.split(',')\n            .map(function (part) { return part.trim().split(_shadowDeepSelectors); })\n            .map(function (deepParts) {\n            var shallowPart = deepParts[0], otherParts = deepParts.slice(1);\n            var /** @type {?} */ applyScope = function (shallowPart) {\n                if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                    return strict ?\n                        _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                        _this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n                }\n                else {\n                    return shallowPart;\n                }\n            };\n            return [applyScope(shallowPart)].concat(otherParts).join(' ');\n        })\n            .join(', ');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._selectorNeedsScoping = function (selector, scopeSelector) {\n        var /** @type {?} */ re = this._makeScopeMatcher(scopeSelector);\n        return !re.test(selector);\n    };\n    /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._makeScopeMatcher = function (scopeSelector) {\n        var /** @type {?} */ lre = /\\[/g;\n        var /** @type {?} */ rre = /\\]/g;\n        scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n        return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySelectorScope = function (selector, scopeSelector, hostSelector) {\n        // Difference from webcomponents.js: scopeSelector could not be an array\n        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {\n        // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n        _polyfillHostRe.lastIndex = 0;\n        if (_polyfillHostRe.test(selector)) {\n            var /** @type {?} */ replaceBy_1 = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\n            return selector\n                .replace(_polyfillHostNoCombinatorRe, function (hnc, selector) {\n                return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                    return before + replaceBy_1 + colon + after;\n                });\n            })\n                .replace(_polyfillHostRe, replaceBy_1 + ' ');\n        }\n        return scopeSelector + ' ' + selector;\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applyStrictSelectorScope = function (selector, scopeSelector, hostSelector) {\n        var _this = this;\n        var /** @type {?} */ isRe = /\\[is=([^\\]]*)\\]/g;\n        scopeSelector = scopeSelector.replace(isRe, function (_) {\n            var parts = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                parts[_i - 1] = arguments[_i];\n            }\n            return parts[0];\n        });\n        var /** @type {?} */ attrName = '[' + scopeSelector + ']';\n        var /** @type {?} */ _scopeSelectorPart = function (p) {\n            var /** @type {?} */ scopedP = p.trim();\n            if (!scopedP) {\n                return '';\n            }\n            if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n            }\n            else {\n                // remove :host since it should be unnecessary\n                var /** @type {?} */ t = p.replace(_polyfillHostRe, '');\n                if (t.length > 0) {\n                    var /** @type {?} */ matches = t.match(/([^:]*)(:*)(.*)/);\n                    if (matches) {\n                        scopedP = matches[1] + attrName + matches[2] + matches[3];\n                    }\n                }\n            }\n            return scopedP;\n        };\n        var /** @type {?} */ safeContent = new SafeSelector(selector);\n        selector = safeContent.content();\n        var /** @type {?} */ scopedSelector = '';\n        var /** @type {?} */ startIndex = 0;\n        var /** @type {?} */ res;\n        var /** @type {?} */ sep = /( |>|\\+|~(?!=))\\s*/g;\n        var /** @type {?} */ scopeAfter = selector.indexOf(_polyfillHostNoCombinator);\n        while ((res = sep.exec(selector)) !== null) {\n            var /** @type {?} */ separator = res[1];\n            var /** @type {?} */ part = selector.slice(startIndex, res.index).trim();\n            // if a selector appears before :host-context it should not be shimmed as it\n            // matches on ancestor elements and not on elements in the host's shadow\n            var /** @type {?} */ scopedPart = startIndex >= scopeAfter ? _scopeSelectorPart(part) : part;\n            scopedSelector += scopedPart + \" \" + separator + \" \";\n            startIndex = sep.lastIndex;\n        }\n        scopedSelector += _scopeSelectorPart(selector.substring(startIndex));\n        // replace the placeholders with their original values\n        return safeContent.restore(scopedSelector);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillHostInCssText = function (selector) {\n        return selector.replace(_colonHostContextRe, _polyfillHostContext)\n            .replace(_colonHostRe, _polyfillHost);\n    };\n    return ShadowCss;\n}());\nvar SafeSelector = (function () {\n    /**\n     * @param {?} selector\n     */\n    function SafeSelector(selector) {\n        var _this = this;\n        this.placeholders = [];\n        this.index = 0;\n        // Replaces attribute selectors with placeholders.\n        // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n        selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n            var replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(keep);\n            _this.index++;\n            return replaceBy;\n        });\n        // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n        // WS and \"+\" would otherwise be interpreted as selector separators.\n        this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n            var replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(exp);\n            _this.index++;\n            return pseudo + replaceBy;\n        });\n    }\n    \n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    SafeSelector.prototype.restore = function (content) {\n        var _this = this;\n        return content.replace(/__ph-(\\d+)__/g, function (ph, index) { return _this.placeholders[+index]; });\n    };\n    /**\n     * @return {?}\n     */\n    SafeSelector.prototype.content = function () { return this._content; };\n    return SafeSelector;\n}());\nvar _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\nvar _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _polyfillHost = '-shadowcsshost';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g,\n    // Deprecated selectors\n    /\\/shadow-deep\\//g,\n    /\\/shadow\\//g,\n];\nvar _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)/g;\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stripComments(input) {\n    return input.replace(_commentRe, '');\n}\n// all comments except inline source mapping\nvar _sourceMappingUrlRe = /\\/\\*\\s*#\\s*sourceMappingURL=[\\s\\S]+?\\*\\//;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction extractSourceMappingUrl(input) {\n    var /** @type {?} */ matcher = input.match(_sourceMappingUrlRe);\n    return matcher ? matcher[0] : '';\n}\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar CssRule = (function () {\n    /**\n     * @param {?} selector\n     * @param {?} content\n     */\n    function CssRule(selector, content) {\n        this.selector = selector;\n        this.content = content;\n    }\n    return CssRule;\n}());\n/**\n * @param {?} input\n * @param {?} ruleCallback\n * @return {?}\n */\nfunction processRules(input, ruleCallback) {\n    var /** @type {?} */ inputWithEscapedBlocks = escapeBlocks(input);\n    var /** @type {?} */ nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ selector = m[2];\n        var /** @type {?} */ content = '';\n        var /** @type {?} */ suffix = m[4];\n        var /** @type {?} */ contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var /** @type {?} */ rule = ruleCallback(new CssRule(selector, content));\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n}\nvar StringWithEscapedBlocks = (function () {\n    /**\n     * @param {?} escapedString\n     * @param {?} blocks\n     */\n    function StringWithEscapedBlocks(escapedString, blocks) {\n        this.escapedString = escapedString;\n        this.blocks = blocks;\n    }\n    return StringWithEscapedBlocks;\n}());\n/**\n * @param {?} input\n * @return {?}\n */\nfunction escapeBlocks(input) {\n    var /** @type {?} */ inputParts = input.split(_curlyRe);\n    var /** @type {?} */ resultParts = [];\n    var /** @type {?} */ escapedBlocks = [];\n    var /** @type {?} */ bracketCount = 0;\n    var /** @type {?} */ currentBlockParts = [];\n    for (var /** @type {?} */ partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var /** @type {?} */ part = inputParts[partIndex];\n        if (part == CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part == OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\nvar CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\nvar StylesCompileDependency = (function () {\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} isShimmed\n     * @param {?} valuePlaceholder\n     */\n    function StylesCompileDependency(name, moduleUrl, isShimmed, valuePlaceholder) {\n        this.name = name;\n        this.moduleUrl = moduleUrl;\n        this.isShimmed = isShimmed;\n        this.valuePlaceholder = valuePlaceholder;\n    }\n    return StylesCompileDependency;\n}());\nvar StylesCompileResult = (function () {\n    /**\n     * @param {?} componentStylesheet\n     * @param {?} externalStylesheets\n     */\n    function StylesCompileResult(componentStylesheet, externalStylesheets) {\n        this.componentStylesheet = componentStylesheet;\n        this.externalStylesheets = externalStylesheets;\n    }\n    return StylesCompileResult;\n}());\nvar CompiledStylesheet = (function () {\n    /**\n     * @param {?} statements\n     * @param {?} stylesVar\n     * @param {?} dependencies\n     * @param {?} isShimmed\n     * @param {?} meta\n     */\n    function CompiledStylesheet(statements, stylesVar, dependencies, isShimmed, meta) {\n        this.statements = statements;\n        this.stylesVar = stylesVar;\n        this.dependencies = dependencies;\n        this.isShimmed = isShimmed;\n        this.meta = meta;\n    }\n    return CompiledStylesheet;\n}());\nvar StyleCompiler = (function () {\n    /**\n     * @param {?} _urlResolver\n     */\n    function StyleCompiler(_urlResolver) {\n        this._urlResolver = _urlResolver;\n        this._shadowCss = new ShadowCss();\n    }\n    /**\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileComponent = function (comp) {\n        var _this = this;\n        var /** @type {?} */ externalStylesheets = [];\n        var /** @type {?} */ componentStylesheet = this._compileStyles(comp, new CompileStylesheetMetadata({\n            styles: comp.template.styles,\n            styleUrls: comp.template.styleUrls,\n            moduleUrl: identifierModuleUrl(comp.type)\n        }), true);\n        comp.template.externalStylesheets.forEach(function (stylesheetMeta) {\n            var /** @type {?} */ compiledStylesheet = _this._compileStyles(comp, stylesheetMeta, false);\n            externalStylesheets.push(compiledStylesheet);\n        });\n        return new StylesCompileResult(componentStylesheet, externalStylesheets);\n    };\n    /**\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    StyleCompiler.prototype._compileStyles = function (comp, stylesheet, isComponentStylesheet) {\n        var _this = this;\n        var /** @type {?} */ shim = comp.template.encapsulation === _angular_core.ViewEncapsulation.Emulated;\n        var /** @type {?} */ styleExpressions = stylesheet.styles.map(function (plainStyle) { return literal(_this._shimIfNeeded(plainStyle, shim)); });\n        var /** @type {?} */ dependencies = [];\n        for (var /** @type {?} */ i = 0; i < stylesheet.styleUrls.length; i++) {\n            var /** @type {?} */ identifier = { reference: null };\n            dependencies.push(new StylesCompileDependency(getStylesVarName(null), stylesheet.styleUrls[i], shim, identifier));\n            styleExpressions.push(new ExternalExpr(identifier));\n        }\n        // styles variable contains plain strings and arrays of other styles arrays (recursive),\n        // so we set its type to dynamic.\n        var /** @type {?} */ stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n        var /** @type {?} */ stmt = variable(stylesVar)\n            .set(literalArr(styleExpressions, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])))\n            .toDeclStmt(null, [StmtModifier.Final]);\n        return new CompiledStylesheet([stmt], stylesVar, dependencies, shim, stylesheet);\n    };\n    /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype._shimIfNeeded = function (style$$1, shim) {\n        return shim ? this._shadowCss.shimCssText(style$$1, CONTENT_ATTR, HOST_ATTR) : style$$1;\n    };\n    return StyleCompiler;\n}());\nStyleCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nStyleCompiler.ctorParameters = function () { return [\n    { type: UrlResolver, },\n]; };\n/**\n * @param {?} component\n * @return {?}\n */\nfunction getStylesVarName(component) {\n    var /** @type {?} */ result = \"styles\";\n    if (component) {\n        result += \"_\" + identifierName(component.type);\n    }\n    return result;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventHandlerVars = (function () {\n    function EventHandlerVars() {\n    }\n    return EventHandlerVars;\n}());\nEventHandlerVars.event = variable('$event');\nvar ConvertActionBindingResult = (function () {\n    /**\n     * @param {?} stmts\n     * @param {?} allowDefault\n     */\n    function ConvertActionBindingResult(stmts, allowDefault) {\n        this.stmts = stmts;\n        this.allowDefault = allowDefault;\n    }\n    return ConvertActionBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression is\n * used in an action binding (e.g. an event handler).\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} action\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertActionBinding(localResolver, implicitReceiver, action, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ actionWithoutBuiltins = convertPropertyBindingBuiltins({\n        createLiteralArrayConverter: function (argCount) {\n            // Note: no caching for literal arrays in actions.\n            return function (args) { return literalArr(args); };\n        },\n        createLiteralMapConverter: function (keys) {\n            // Note: no caching for literal maps in actions.\n            return function (args) { return literalMap(/** @type {?} */ (keys.map(function (key, i) { return [key, args[i]]; }))); };\n        },\n        createPipeConverter: function (name) {\n            throw new Error(\"Illegal State: Actions are not allowed to contain pipes. Pipe: \" + name);\n        }\n    }, action);\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ actionStmts = [];\n    flattenStatements(actionWithoutBuiltins.visit(visitor, _Mode.Statement), actionStmts);\n    prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n    var /** @type {?} */ lastIndex = actionStmts.length - 1;\n    var /** @type {?} */ preventDefaultVar = null;\n    if (lastIndex >= 0) {\n        var /** @type {?} */ lastStatement = actionStmts[lastIndex];\n        var /** @type {?} */ returnExpr = convertStmtIntoExpression(lastStatement);\n        if (returnExpr) {\n            // Note: We need to cast the result of the method call to dynamic,\n            // as it might be a void method!\n            preventDefaultVar = createPreventDefaultVar(bindingId);\n            actionStmts[lastIndex] =\n                preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false)))\n                    .toDeclStmt(null, [StmtModifier.Final]);\n        }\n    }\n    return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertPropertyBindingBuiltins(converterFactory, ast) {\n    return convertBuiltins(converterFactory, ast);\n}\nvar ConvertPropertyBindingResult = (function () {\n    /**\n     * @param {?} stmts\n     * @param {?} currValExpr\n     */\n    function ConvertPropertyBindingResult(stmts, currValExpr) {\n        this.stmts = stmts;\n        this.currValExpr = currValExpr;\n    }\n    return ConvertPropertyBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression\n * is used in property binding. The expression has to be preprocessed via\n * `convertPropertyBindingBuiltins`.\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} expressionWithoutBuiltins\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertPropertyBinding(localResolver, implicitReceiver, expressionWithoutBuiltins, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ currValExpr = createCurrValueExpr(bindingId);\n    var /** @type {?} */ stmts = [];\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ outputExpr = expressionWithoutBuiltins.visit(visitor, _Mode.Expression);\n    if (visitor.temporaryCount) {\n        for (var /** @type {?} */ i = 0; i < visitor.temporaryCount; i++) {\n            stmts.push(temporaryDeclaration(bindingId, i));\n        }\n    }\n    stmts.push(currValExpr.set(outputExpr).toDeclStmt(null, [StmtModifier.Final]));\n    return new ConvertPropertyBindingResult(stmts, currValExpr);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertBuiltins(converterFactory, ast) {\n    var /** @type {?} */ visitor = new _BuiltinAstConverter(converterFactory);\n    return ast.visit(visitor);\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryName(bindingId, temporaryNumber) {\n    return \"tmp_\" + bindingId + \"_\" + temporaryNumber;\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryDeclaration(bindingId, temporaryNumber) {\n    return new DeclareVarStmt(temporaryName(bindingId, temporaryNumber), NULL_EXPR);\n}\n/**\n * @param {?} temporaryCount\n * @param {?} bindingId\n * @param {?} statements\n * @return {?}\n */\nfunction prependTemporaryDecls(temporaryCount, bindingId, statements) {\n    for (var /** @type {?} */ i = temporaryCount - 1; i >= 0; i--) {\n        statements.unshift(temporaryDeclaration(bindingId, i));\n    }\n}\nvar _Mode = {};\n_Mode.Statement = 0;\n_Mode.Expression = 1;\n_Mode[_Mode.Statement] = \"Statement\";\n_Mode[_Mode.Expression] = \"Expression\";\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureStatementMode(mode, ast) {\n    if (mode !== _Mode.Statement) {\n        throw new Error(\"Expected a statement, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureExpressionMode(mode, ast) {\n    if (mode !== _Mode.Expression) {\n        throw new Error(\"Expected an expression, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} expr\n * @return {?}\n */\nfunction convertToStatementIfNeeded(mode, expr) {\n    if (mode === _Mode.Statement) {\n        return expr.toStmt();\n    }\n    else {\n        return expr;\n    }\n}\nvar _BuiltinAstConverter = (function (_super) {\n    __extends(_BuiltinAstConverter, _super);\n    /**\n     * @param {?} _converterFactory\n     */\n    function _BuiltinAstConverter(_converterFactory) {\n        var _this = _super.call(this) || this;\n        _this._converterFactory = _converterFactory;\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitPipe = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = [ast.exp].concat(ast.args).map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createPipeConverter(ast.name, args.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralArray = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.expressions.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralArrayConverter(ast.expressions.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralMap = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.values.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralMapConverter(ast.keys));\n    };\n    return _BuiltinAstConverter;\n}(AstTransformer));\nvar _AstToIrVisitor = (function () {\n    /**\n     * @param {?} _localResolver\n     * @param {?} _implicitReceiver\n     * @param {?} bindingId\n     */\n    function _AstToIrVisitor(_localResolver, _implicitReceiver, bindingId) {\n        this._localResolver = _localResolver;\n        this._implicitReceiver = _implicitReceiver;\n        this.bindingId = bindingId;\n        this._nodeMap = new Map();\n        this._resultMap = new Map();\n        this._currentTemporary = 0;\n        this.temporaryCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitBinary = function (ast, mode) {\n        var /** @type {?} */ op;\n        switch (ast.operation) {\n            case '+':\n                op = BinaryOperator.Plus;\n                break;\n            case '-':\n                op = BinaryOperator.Minus;\n                break;\n            case '*':\n                op = BinaryOperator.Multiply;\n                break;\n            case '/':\n                op = BinaryOperator.Divide;\n                break;\n            case '%':\n                op = BinaryOperator.Modulo;\n                break;\n            case '&&':\n                op = BinaryOperator.And;\n                break;\n            case '||':\n                op = BinaryOperator.Or;\n                break;\n            case '==':\n                op = BinaryOperator.Equals;\n                break;\n            case '!=':\n                op = BinaryOperator.NotEquals;\n                break;\n            case '===':\n                op = BinaryOperator.Identical;\n                break;\n            case '!==':\n                op = BinaryOperator.NotIdentical;\n                break;\n            case '<':\n                op = BinaryOperator.Lower;\n                break;\n            case '>':\n                op = BinaryOperator.Bigger;\n                break;\n            case '<=':\n                op = BinaryOperator.LowerEquals;\n                break;\n            case '>=':\n                op = BinaryOperator.BiggerEquals;\n                break;\n            default:\n                throw new Error(\"Unsupported operation \" + ast.operation);\n        }\n        return convertToStatementIfNeeded(mode, new BinaryOperatorExpr(op, this.visit(ast.left, _Mode.Expression), this.visit(ast.right, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitChain = function (ast, mode) {\n        ensureStatementMode(mode, ast);\n        return this.visitAll(ast.expressions, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitConditional = function (ast, mode) {\n        var /** @type {?} */ value = this.visit(ast.condition, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, value.conditional(this.visit(ast.trueExp, _Mode.Expression), this.visit(ast.falseExp, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPipe = function (ast, mode) {\n        throw new Error(\"Illegal state: Pipes should have been converted into functions. Pipe: \" + ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitFunctionCall = function (ast, mode) {\n        var /** @type {?} */ convertedArgs = this.visitAll(ast.args, _Mode.Expression);\n        var /** @type {?} */ fnResult;\n        if (ast instanceof BuiltinFunctionCall) {\n            fnResult = ast.converter(convertedArgs);\n        }\n        else {\n            fnResult = this.visit(ast.target, _Mode.Expression).callFn(convertedArgs);\n        }\n        return convertToStatementIfNeeded(mode, fnResult);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitImplicitReceiver = function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        return this._implicitReceiver;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitInterpolation = function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        var /** @type {?} */ args = [literal(ast.expressions.length)];\n        for (var /** @type {?} */ i = 0; i < ast.strings.length - 1; i++) {\n            args.push(literal(ast.strings[i]));\n            args.push(this.visit(ast.expressions[i], _Mode.Expression));\n        }\n        args.push(literal(ast.strings[ast.strings.length - 1]));\n        return ast.expressions.length <= 9 ?\n            importExpr(createIdentifier(Identifiers.inlineInterpolate)).callFn(args) :\n            importExpr(createIdentifier(Identifiers.interpolate)).callFn([\n                args[0], literalArr(args.slice(1))\n            ]);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedRead = function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            return convertToStatementIfNeeded(mode, this.visit(ast.obj, _Mode.Expression).key(this.visit(ast.key, _Mode.Expression)));\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedWrite = function (ast, mode) {\n        var /** @type {?} */ obj = this.visit(ast.obj, _Mode.Expression);\n        var /** @type {?} */ key = this.visit(ast.key, _Mode.Expression);\n        var /** @type {?} */ value = this.visit(ast.value, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralArray = function (ast, mode) {\n        throw new Error(\"Illegal State: literal arrays should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralMap = function (ast, mode) {\n        throw new Error(\"Illegal State: literal maps should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralPrimitive = function (ast, mode) {\n        return convertToStatementIfNeeded(mode, literal(ast.value));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._getLocal = function (name) { return this._localResolver.getLocal(name); };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitMethodCall = function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ args = this.visitAll(ast.args, _Mode.Expression);\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this.visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                var /** @type {?} */ varExpr = this._getLocal(ast.name);\n                if (varExpr) {\n                    result = varExpr.callFn(args);\n                }\n            }\n            if (result == null) {\n                result = receiver.callMethod(ast.name, args);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPrefixNot = function (ast, mode) {\n        return convertToStatementIfNeeded(mode, not(this.visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyRead = function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this.visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                result = this._getLocal(ast.name);\n            }\n            if (result == null) {\n                result = receiver.prop(ast.name);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyWrite = function (ast, mode) {\n        var /** @type {?} */ receiver = this.visit(ast.receiver, _Mode.Expression);\n        if (receiver === this._implicitReceiver) {\n            var /** @type {?} */ varExpr = this._getLocal(ast.name);\n            if (varExpr) {\n                throw new Error('Cannot assign to a reference or variable!');\n            }\n        }\n        return convertToStatementIfNeeded(mode, receiver.prop(ast.name).set(this.visit(ast.value, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafePropertyRead = function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafeMethodCall = function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitAll = function (asts, mode) {\n        var _this = this;\n        return asts.map(function (ast) { return _this.visit(ast, mode); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitQuote = function (ast, mode) {\n        throw new Error('Quotes are not supported for evaluation!');\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visit = function (ast, mode) {\n        var /** @type {?} */ result = this._resultMap.get(ast);\n        if (result)\n            return result;\n        return (this._nodeMap.get(ast) || ast).visit(this, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.convertSafeAccess = function (ast, leftMostSafe, mode) {\n        // If the expression contains a safe access node on the left it needs to be converted to\n        // an expression that guards the access to the member by checking the receiver for blank. As\n        // execution proceeds from left to right, the left most part of the expression must be guarded\n        // first but, because member access is left associative, the right side of the expression is at\n        // the top of the AST. The desired result requires lifting a copy of the the left part of the\n        // expression up to test it for blank before generating the unguarded version.\n        // Consider, for example the following expression: a?.b.c?.d.e\n        // This results in the ast:\n        //         .\n        //        / \\\n        //       ?.   e\n        //      /  \\\n        //     .    d\n        //    / \\\n        //   ?.  c\n        //  /  \\\n        // a    b\n        // The following tree should be generated:\n        //\n        //        /---- ? ----\\\n        //       /      |      \\\n        //     a   /--- ? ---\\  null\n        //        /     |     \\\n        //       .      .     null\n        //      / \\    / \\\n        //     .  c   .   e\n        //    / \\    / \\\n        //   a   b  ,   d\n        //         / \\\n        //        .   c\n        //       / \\\n        //      a   b\n        //\n        // Notice that the first guard condition is the left hand of the left most safe access node\n        // which comes in as leftMostSafe to this routine.\n        var /** @type {?} */ guardedExpression = this.visit(leftMostSafe.receiver, _Mode.Expression);\n        var /** @type {?} */ temporary;\n        if (this.needsTemporary(leftMostSafe.receiver)) {\n            // If the expression has method calls or pipes then we need to save the result into a\n            // temporary variable to avoid calling stateful or impure code more than once.\n            temporary = this.allocateTemporary();\n            // Preserve the result in the temporary variable\n            guardedExpression = temporary.set(guardedExpression);\n            // Ensure all further references to the guarded expression refer to the temporary instead.\n            this._resultMap.set(leftMostSafe.receiver, temporary);\n        }\n        var /** @type {?} */ condition = guardedExpression.isBlank();\n        // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n        // leftMostNode with its unguarded version in the call to `this.visit()`.\n        if (leftMostSafe instanceof SafeMethodCall) {\n            this._nodeMap.set(leftMostSafe, new MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n        }\n        else {\n            this._nodeMap.set(leftMostSafe, new PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n        }\n        // Recursively convert the node now without the guarded member access.\n        var /** @type {?} */ access = this.visit(ast, _Mode.Expression);\n        // Remove the mapping. This is not strictly required as the converter only traverses each node\n        // once but is safer if the conversion is changed to traverse the nodes more than once.\n        this._nodeMap.delete(leftMostSafe);\n        // If we allocated a temporary, release it.\n        if (temporary) {\n            this.releaseTemporary(temporary);\n        }\n        // Produce the conditional\n        return convertToStatementIfNeeded(mode, condition.conditional(literal(null), access));\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.leftMostSafeNode = function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        return ast.visit({\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitBinary: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitChain: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitConditional: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitFunctionCall: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitImplicitReceiver: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitInterpolation: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedRead: function (ast) { return visit(this, ast.obj); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedWrite: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralArray: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralMap: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralPrimitive: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitMethodCall: function (ast) { return visit(this, ast.receiver); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPipe: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPrefixNot: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyRead: function (ast) { return visit(this, ast.receiver); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyWrite: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitQuote: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafeMethodCall: function (ast) { return visit(this, ast.receiver) || ast; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafePropertyRead: function (ast) {\n                return visit(this, ast.receiver) || ast;\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.needsTemporary = function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return ast && (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        var /** @type {?} */ visitSome = function (visitor, ast) {\n            return ast.some(function (ast) { return visit(visitor, ast); });\n        };\n        return ast.visit({\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitBinary: function (ast) { return visit(this, ast.left) || visit(this, ast.right); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitChain: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitConditional: function (ast) {\n                return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                    visit(this, ast.falseExp);\n            },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitFunctionCall: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitImplicitReceiver: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitInterpolation: function (ast) { return visitSome(this, ast.expressions); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedRead: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedWrite: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralArray: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralMap: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralPrimitive: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitMethodCall: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPipe: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPrefixNot: function (ast) { return visit(this, ast.expression); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyRead: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyWrite: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitQuote: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafeMethodCall: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafePropertyRead: function (ast) { return false; }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.allocateTemporary = function () {\n        var /** @type {?} */ tempNumber = this._currentTemporary++;\n        this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n        return new ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n    };\n    /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.releaseTemporary = function (temporary) {\n        this._currentTemporary--;\n        if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n            throw new Error(\"Temporary \" + temporary.name + \" released out of order\");\n        }\n    };\n    return _AstToIrVisitor;\n}());\n/**\n * @param {?} arg\n * @param {?} output\n * @return {?}\n */\nfunction flattenStatements(arg, output) {\n    if (Array.isArray(arg)) {\n        ((arg)).forEach(function (entry) { return flattenStatements(entry, output); });\n    }\n    else {\n        output.push(arg);\n    }\n}\nvar DefaultLocalResolver = (function () {\n    function DefaultLocalResolver() {\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DefaultLocalResolver.prototype.getLocal = function (name) {\n        if (name === EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        return null;\n    };\n    return DefaultLocalResolver;\n}());\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createCurrValueExpr(bindingId) {\n    return variable(\"currVal_\" + bindingId); // fix syntax highlighting: `\n}\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createPreventDefaultVar(bindingId) {\n    return variable(\"pd_\" + bindingId);\n}\n/**\n * @param {?} stmt\n * @return {?}\n */\nfunction convertStmtIntoExpression(stmt) {\n    if (stmt instanceof ExpressionStatement) {\n        return stmt.expr;\n    }\n    else if (stmt instanceof ReturnStatement) {\n        return stmt.value;\n    }\n    return null;\n}\nvar BuiltinFunctionCall = (function (_super) {\n    __extends(BuiltinFunctionCall, _super);\n    /**\n     * @param {?} span\n     * @param {?} args\n     * @param {?} converter\n     */\n    function BuiltinFunctionCall(span, args, converter) {\n        var _this = _super.call(this, span, null, args) || this;\n        _this.args = args;\n        _this.converter = converter;\n        return _this;\n    }\n    return BuiltinFunctionCall;\n}(FunctionCall));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CLASS_ATTR$1 = 'class';\nvar STYLE_ATTR = 'style';\nvar IMPLICIT_TEMPLATE_VAR = '\\$implicit';\nvar NG_CONTAINER_TAG = 'ng-container';\nvar ViewCompileResult = (function () {\n    /**\n     * @param {?} statements\n     * @param {?} viewClassVar\n     * @param {?} rendererTypeVar\n     */\n    function ViewCompileResult(statements, viewClassVar, rendererTypeVar) {\n        this.statements = statements;\n        this.viewClassVar = viewClassVar;\n        this.rendererTypeVar = rendererTypeVar;\n    }\n    return ViewCompileResult;\n}());\nvar ViewCompiler = (function () {\n    /**\n     * @param {?} _genConfigNext\n     * @param {?} _schemaRegistry\n     */\n    function ViewCompiler(_genConfigNext, _schemaRegistry) {\n        this._genConfigNext = _genConfigNext;\n        this._schemaRegistry = _schemaRegistry;\n    }\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    ViewCompiler.prototype.compileComponent = function (component, template, styles, usedPipes) {\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ staticQueryIds = findStaticQueryIds(template);\n        var /** @type {?} */ statements = [];\n        var /** @type {?} */ renderComponentVarName;\n        if (!component.isHost) {\n            var /** @type {?} */ customRenderData = [];\n            if (component.template.animations && component.template.animations.length) {\n                customRenderData.push(new LiteralMapEntry('animation', convertValueToOutputAst(component.template.animations), true));\n            }\n            var /** @type {?} */ renderComponentVar = variable(rendererTypeName(component.type.reference));\n            renderComponentVarName = renderComponentVar.name;\n            statements.push(renderComponentVar\n                .set(importExpr(createIdentifier(Identifiers.createRendererType2))\n                .callFn([new LiteralMapExpr([\n                    new LiteralMapEntry('encapsulation', literal(component.template.encapsulation)),\n                    new LiteralMapEntry('styles', styles),\n                    new LiteralMapEntry('data', new LiteralMapExpr(customRenderData))\n                ])]))\n                .toDeclStmt(importType(createIdentifier(Identifiers.RendererType2)), [StmtModifier.Final]));\n        }\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder(parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        statements.push.apply(statements, visitor.build());\n        return new ViewCompileResult(statements, visitor.viewName, renderComponentVarName);\n    };\n    return ViewCompiler;\n}());\nViewCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nViewCompiler.ctorParameters = function () { return [\n    { type: CompilerConfig, },\n    { type: ElementSchemaRegistry, },\n]; };\nvar LOG_VAR = variable('l');\nvar VIEW_VAR = variable('v');\nvar CHECK_VAR = variable('ck');\nvar COMP_VAR = variable('co');\nvar EVENT_NAME_VAR = variable('en');\nvar ALLOW_DEFAULT_VAR = variable(\"ad\");\nvar ViewBuilder = (function () {\n    /**\n     * @param {?} parent\n     * @param {?} component\n     * @param {?} embeddedViewIndex\n     * @param {?} usedPipes\n     * @param {?} staticQueryIds\n     * @param {?} viewBuilderFactory\n     */\n    function ViewBuilder(parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory) {\n        this.parent = parent;\n        this.component = component;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.usedPipes = usedPipes;\n        this.staticQueryIds = staticQueryIds;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.nodes = [];\n        this.purePipeNodeIndices = Object.create(null);\n        this.refNodeIndices = Object.create(null);\n        this.variables = [];\n        this.children = [];\n        // TODO(tbosch): The old view compiler used to use an `any` type\n        // for the context in any embedded view. We keep this behaivor for now\n        // to be able to introduce the new view compiler without too many errors.\n        this.compType = this.embeddedViewIndex > 0 ? DYNAMIC_TYPE : importType(this.component.type);\n    }\n    Object.defineProperty(ViewBuilder.prototype, \"viewName\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return viewClassName(this.component.type.reference, this.embeddedViewIndex);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = function (variables, astNodes) {\n        var _this = this;\n        this.variables = variables;\n        // create the pipes for the pure pipes immediately, so that we know their indices.\n        if (!this.parent) {\n            this.usedPipes.forEach(function (pipe) {\n                if (pipe.pure) {\n                    _this.purePipeNodeIndices[pipe.name] = _this._createPipe(null, pipe);\n                }\n            });\n        }\n        if (!this.parent) {\n            var /** @type {?} */ queryIds_1 = staticViewQueryIds(this.staticQueryIds);\n            this.component.viewQueries.forEach(function (query, queryIndex) {\n                // Note: queries start with id 1 so we can use the number in a Bloom filter!\n                var /** @type {?} */ queryId = queryIndex + 1;\n                var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n                var /** @type {?} */ flags = 67108864;\n                if (queryIds_1.staticQueryIds.has(queryId)) {\n                    flags |= 134217728 /* StaticQuery */;\n                }\n                else {\n                    flags |= 268435456 /* DynamicQuery */;\n                }\n                _this.nodes.push(function () { return ({\n                    sourceSpan: null,\n                    nodeFlags: flags,\n                    nodeDef: importExpr(createIdentifier(Identifiers.queryDef)).callFn([\n                        literal(flags), literal(queryId),\n                        new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType))])\n                    ])\n                }); });\n            });\n        }\n        templateVisitAll(this, astNodes);\n        if (this.parent && (astNodes.length === 0 || needsAdditionalRootNode(astNodes))) {\n            // if the view is an embedded view, then we need to add an additional root node in some cases\n            this.nodes.push(function () { return ({\n                sourceSpan: null,\n                nodeFlags: 1 /* TypeElement */,\n                nodeDef: importExpr(createIdentifier(Identifiers.anchorDef)).callFn([\n                    literal(0 /* None */), NULL_EXPR, NULL_EXPR, literal(0)\n                ])\n            }); });\n        }\n    };\n    /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = function (targetStatements) {\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(targetStatements); });\n        var _a = this._createNodeExpressions(), updateRendererStmts = _a.updateRendererStmts, updateDirectivesStmts = _a.updateDirectivesStmts, nodeDefExprs = _a.nodeDefExprs;\n        var /** @type {?} */ updateRendererFn = this._createUpdateFn(updateRendererStmts);\n        var /** @type {?} */ updateDirectivesFn = this._createUpdateFn(updateDirectivesStmts);\n        var /** @type {?} */ viewFlags = 0;\n        if (!this.parent && this.component.changeDetection === _angular_core.ChangeDetectionStrategy.OnPush) {\n            viewFlags |= 2 /* OnPush */;\n        }\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(this.viewName, [new FnParam(LOG_VAR.name)], [new ReturnStatement(importExpr(createIdentifier(Identifiers.viewDef)).callFn([\n                literal(viewFlags),\n                literalArr(nodeDefExprs),\n                updateDirectivesFn,\n                updateRendererFn,\n            ]))], importType(createIdentifier(Identifiers.ViewDefinition)));\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    ViewBuilder.prototype._createUpdateFn = function (updateStmts) {\n        var /** @type {?} */ updateFn;\n        if (updateStmts.length > 0) {\n            var /** @type {?} */ preStmts = [];\n            if (!this.component.isHost && findReadVarNames(updateStmts).has(COMP_VAR.name)) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            updateFn = fn([\n                new FnParam(CHECK_VAR.name, INFERRED_TYPE),\n                new FnParam(VIEW_VAR.name, INFERRED_TYPE)\n            ], preStmts.concat(updateStmts), INFERRED_TYPE);\n        }\n        else {\n            updateFn = NULL_EXPR;\n        }\n        return updateFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = function (ast, context) {\n        // ngContentDef(ngContentIndex: number, index: number): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 4 /* TypeNgContent */,\n            nodeDef: importExpr(createIdentifier(Identifiers.ngContentDef)).callFn([\n                literal(ast.ngContentIndex), literal(ast.index)\n            ])\n        }); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = function (ast, context) {\n        // textDef(ngContentIndex: number, constants: string[]): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 2 /* TypeText */,\n            nodeDef: importExpr(createIdentifier(Identifiers.textDef)).callFn([\n                literal(ast.ngContentIndex), literalArr([literal(ast.value)])\n            ])\n        }); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(null);\n        var /** @type {?} */ astWithSource = (ast.value);\n        var /** @type {?} */ inter = (astWithSource.ast);\n        var /** @type {?} */ updateRendererExpressions = inter.expressions.map(function (expr, bindingIndex) { return _this._preprocessUpdateExpression({ nodeIndex: nodeIndex, bindingIndex: bindingIndex, sourceSpan: ast.sourceSpan, context: COMP_VAR, value: expr }); });\n        // textDef(ngContentIndex: number, constants: string[]): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 2 /* TypeText */,\n            nodeDef: importExpr(createIdentifier(Identifiers.textDef)).callFn([\n                literal(ast.ngContentIndex), literalArr(inter.strings.map(function (s) { return literal(s); }))\n            ]),\n            updateRenderer: updateRendererExpressions\n        }); };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(null);\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, queryMatchesExpr = _a.queryMatchesExpr, hostEvents = _a.hostEvents;\n        var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n        this.children.push(childVisitor);\n        childVisitor.visitAll(ast.variables, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        // anchorDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n        //   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:\n        //   ViewDefinitionFactory): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 1 /* TypeElement */ | flags,\n            nodeDef: importExpr(createIdentifier(Identifiers.anchorDef)).callFn([\n                literal(flags),\n                queryMatchesExpr,\n                literal(ast.ngContentIndex),\n                literal(childCount),\n                _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                variable(childVisitor.viewName),\n            ])\n        }); };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(null);\n        var /** @type {?} */ elName = ast.name;\n        if (ast.name === NG_CONTAINER_TAG) {\n            // Using a null element name creates an anchor.\n            elName = null;\n        }\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, usedEvents = _a.usedEvents, queryMatchesExpr = _a.queryMatchesExpr, dirHostBindings = _a.hostBindings, hostEvents = _a.hostEvents;\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        if (elName) {\n            var /** @type {?} */ hostBindings = ast.inputs\n                .map(function (inputAst) { return ({\n                context: /** @type {?} */ (COMP_VAR),\n                inputAst: inputAst,\n                dirAst: null,\n            }); })\n                .concat(dirHostBindings);\n            if (hostBindings.length) {\n                updateRendererExpressions =\n                    hostBindings.map(function (hostBinding, bindingIndex) { return _this._preprocessUpdateExpression({\n                        context: hostBinding.context,\n                        nodeIndex: nodeIndex,\n                        bindingIndex: bindingIndex,\n                        sourceSpan: hostBinding.inputAst.sourceSpan,\n                        value: hostBinding.inputAst.value\n                    }); });\n                inputDefs = hostBindings.map(function (hostBinding) { return elementBindingDef(hostBinding.inputAst, hostBinding.dirAst); });\n            }\n            outputDefs = usedEvents.map(function (_a) {\n                var target = _a[0], eventName = _a[1];\n                return literalArr([literal(target), literal(eventName)]);\n            });\n        }\n        templateVisitAll(this, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var /** @type {?} */ compAst = ast.directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        var /** @type {?} */ compRendererType = NULL_EXPR;\n        var /** @type {?} */ compView = NULL_EXPR;\n        if (compAst) {\n            compView = importExpr({ reference: compAst.directive.componentViewType });\n            compRendererType = importExpr({ reference: compAst.directive.rendererType });\n        }\n        // elementDef(\n        //   flags: NodeFlags, matchedQueriesDsl: [string | number, QueryValueType][],\n        //   ngContentIndex: number, childCount: number, namespaceAndName: string,\n        //   fixedAttrs: [string, string][] = [],\n        //   bindings?: [BindingFlags, string, string | SecurityContext][],\n        //   outputs?: ([OutputType.ElementOutput | OutputType.DirectiveHostOutput, string, string])[],\n        //   handleEvent?: ElementHandleEventFn,\n        //   componentView?: () => ViewDefinition, componentRendererType?: RendererType2): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 1 /* TypeElement */ | flags,\n            nodeDef: importExpr(createIdentifier(Identifiers.elementDef)).callFn([\n                literal(flags),\n                queryMatchesExpr,\n                literal(ast.ngContentIndex),\n                literal(childCount),\n                literal(elName),\n                elName ? fixedAttrsDef(ast) : NULL_EXPR,\n                inputDefs.length ? literalArr(inputDefs) : NULL_EXPR,\n                outputDefs.length ? literalArr(outputDefs) : NULL_EXPR,\n                _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                compView,\n                compRendererType,\n            ]),\n            updateRenderer: updateRendererExpressions\n        }); };\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitElementOrTemplate = function (nodeIndex, ast) {\n        var _this = this;\n        var /** @type {?} */ flags = 0;\n        if (ast.hasViewContainer) {\n            flags |= 8388608 /* EmbeddedViews */;\n        }\n        var /** @type {?} */ usedEvents = new Map();\n        ast.outputs.forEach(function (event) {\n            var _a = elementEventNameAndTarget(event, null), name = _a.name, target = _a.target;\n            usedEvents.set(_angular_core.ɵelementEventFullName(target, name), [target, name]);\n        });\n        ast.directives.forEach(function (dirAst) {\n            dirAst.hostEvents.forEach(function (event) {\n                var _a = elementEventNameAndTarget(event, dirAst), name = _a.name, target = _a.target;\n                usedEvents.set(_angular_core.ɵelementEventFullName(target, name), [target, name]);\n            });\n        });\n        var /** @type {?} */ hostBindings = [];\n        var /** @type {?} */ hostEvents = [];\n        var /** @type {?} */ componentFactoryResolverProvider = createComponentFactoryResolver(ast.directives);\n        if (componentFactoryResolverProvider) {\n            this._visitProvider(componentFactoryResolverProvider, ast.queryMatches);\n        }\n        ast.providers.forEach(function (providerAst, providerIndex) {\n            var /** @type {?} */ dirAst;\n            var /** @type {?} */ dirIndex;\n            ast.directives.forEach(function (localDirAst, i) {\n                if (localDirAst.directive.type.reference === tokenReference(providerAst.token)) {\n                    dirAst = localDirAst;\n                    dirIndex = i;\n                }\n            });\n            if (dirAst) {\n                var _a = _this._visitDirective(providerAst, dirAst, dirIndex, nodeIndex, ast.references, ast.queryMatches, usedEvents, _this.staticQueryIds.get(/** @type {?} */ (ast))), dirHostBindings = _a.hostBindings, dirHostEvents = _a.hostEvents;\n                hostBindings.push.apply(hostBindings, dirHostBindings);\n                hostEvents.push.apply(hostEvents, dirHostEvents);\n            }\n            else {\n                _this._visitProvider(providerAst, ast.queryMatches);\n            }\n        });\n        var /** @type {?} */ queryMatchExprs = [];\n        ast.queryMatches.forEach(function (match) {\n            var /** @type {?} */ valueType;\n            if (tokenReference(match.value) === resolveIdentifier(Identifiers.ElementRef)) {\n                valueType = 0 /* ElementRef */;\n            }\n            else if (tokenReference(match.value) === resolveIdentifier(Identifiers.ViewContainerRef)) {\n                valueType = 3 /* ViewContainerRef */;\n            }\n            else if (tokenReference(match.value) === resolveIdentifier(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(valueType)]));\n            }\n        });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ valueType;\n            if (!ref.value) {\n                valueType = 1 /* RenderElement */;\n            }\n            else if (tokenReference(ref.value) === resolveIdentifier(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(valueType)]));\n            }\n        });\n        ast.outputs.forEach(function (outputAst) {\n            hostEvents.push({ context: COMP_VAR, eventAst: outputAst, dirAst: null });\n        });\n        return {\n            flags: flags,\n            usedEvents: Array.from(usedEvents.values()),\n            queryMatchesExpr: queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n            hostBindings: hostBindings,\n            hostEvents: hostEvents\n        };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitDirective = function (providerAst, dirAst, directiveIndex, elementNodeIndex, refs, queryMatches, usedEvents, queryIds) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(null);\n        dirAst.directive.queries.forEach(function (query, queryIndex) {\n            var /** @type {?} */ flags = 33554432;\n            var /** @type {?} */ queryId = dirAst.contentQueryStartId + queryIndex;\n            // Note: We only make queries static that query for a single item.\n            // This is because of backwards compatibility with the old view compiler...\n            if (queryIds.staticQueryIds.has(queryId) && query.first) {\n                flags |= 134217728 /* StaticQuery */;\n            }\n            else {\n                flags |= 268435456 /* DynamicQuery */;\n            }\n            var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n            _this.nodes.push(function () { return ({\n                sourceSpan: dirAst.sourceSpan,\n                nodeFlags: flags,\n                nodeDef: importExpr(createIdentifier(Identifiers.queryDef)).callFn([\n                    literal(flags), literal(queryId),\n                    new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType))])\n                ]),\n            }); });\n        });\n        // Note: the operation below might also create new nodeDefs,\n        // but we don't want them to be a child of a directive,\n        // as they might be a provider/pipe on their own.\n        // I.e. we only allow queries as children of directives nodes.\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var _a = this._visitProviderOrDirective(providerAst, queryMatches), flags = _a.flags, queryMatchExprs = _a.queryMatchExprs, providerExpr = _a.providerExpr, depsExpr = _a.depsExpr;\n        refs.forEach(function (ref) {\n            if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(4 /* Provider */)]));\n            }\n        });\n        if (dirAst.directive.isComponent) {\n            flags |= 16384 /* Component */;\n        }\n        var /** @type {?} */ inputDefs = dirAst.inputs.map(function (inputAst, inputIndex) {\n            var /** @type {?} */ mapValue = literalArr([literal(inputIndex), literal(inputAst.directiveName)]);\n            // Note: it's important to not quote the key so that we can capture renames by minifiers!\n            return new LiteralMapEntry(inputAst.directiveName, mapValue, false);\n        });\n        var /** @type {?} */ outputDefs = [];\n        var /** @type {?} */ dirMeta = dirAst.directive;\n        Object.keys(dirMeta.outputs).forEach(function (propName) {\n            var /** @type {?} */ eventName = dirMeta.outputs[propName];\n            if (usedEvents.has(eventName)) {\n                // Note: it's important to not quote the key so that we can capture renames by minifiers!\n                outputDefs.push(new LiteralMapEntry(propName, literal(eventName), false));\n            }\n        });\n        var /** @type {?} */ updateDirectiveExpressions = [];\n        if (dirAst.inputs.length || (flags & (131072 /* DoCheck */ | 32768 /* OnInit */)) > 0) {\n            updateDirectiveExpressions =\n                dirAst.inputs.map(function (input, bindingIndex) { return _this._preprocessUpdateExpression({\n                    nodeIndex: nodeIndex,\n                    bindingIndex: bindingIndex,\n                    sourceSpan: input.sourceSpan,\n                    context: COMP_VAR,\n                    value: input.value\n                }); });\n        }\n        var /** @type {?} */ dirContextExpr = importExpr(createIdentifier(Identifiers.nodeValue)).callFn([\n            VIEW_VAR, literal(nodeIndex)\n        ]);\n        var /** @type {?} */ hostBindings = dirAst.hostProperties.map(function (inputAst) { return ({\n            context: dirContextExpr,\n            dirAst: dirAst,\n            inputAst: inputAst,\n        }); });\n        var /** @type {?} */ hostEvents = dirAst.hostEvents.map(function (hostEventAst) { return ({\n            context: dirContextExpr,\n            eventAst: hostEventAst, dirAst: dirAst,\n        }); });\n        // directiveDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], childCount: number, ctor:\n        //   any,\n        //   deps: ([DepFlags, any] | any)[], props?: {[name: string]: [number, string]},\n        //   outputs?: {[name: string]: string}, component?: () => ViewDefinition): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: dirAst.sourceSpan,\n            nodeFlags: 8192 /* TypeDirective */ | flags,\n            nodeDef: importExpr(createIdentifier(Identifiers.directiveDef)).callFn([\n                literal(flags), queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n                literal(childCount), providerExpr, depsExpr,\n                inputDefs.length ? new LiteralMapExpr(inputDefs) : NULL_EXPR,\n                outputDefs.length ? new LiteralMapExpr(outputDefs) : NULL_EXPR\n            ]),\n            updateDirectives: updateDirectiveExpressions,\n            directive: dirAst.directive.type,\n        }); };\n        return { hostBindings: hostBindings, hostEvents: hostEvents };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProvider = function (providerAst, queryMatches) {\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(null);\n        var _a = this._visitProviderOrDirective(providerAst, queryMatches), flags = _a.flags, queryMatchExprs = _a.queryMatchExprs, providerExpr = _a.providerExpr, depsExpr = _a.depsExpr;\n        // providerDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,\n        //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: providerAst.sourceSpan,\n            nodeFlags: flags,\n            nodeDef: importExpr(createIdentifier(Identifiers.providerDef)).callFn([\n                literal(flags), queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n                tokenExpr(providerAst.token), providerExpr, depsExpr\n            ])\n        }); };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProviderOrDirective = function (providerAst, queryMatches) {\n        var /** @type {?} */ flags = 0;\n        if (!providerAst.eager) {\n            flags |= 2048 /* LazyProvider */;\n        }\n        if (providerAst.providerType === ProviderAstType.PrivateService) {\n            flags |= 4096 /* PrivateProvider */;\n        }\n        providerAst.lifecycleHooks.forEach(function (lifecycleHook) {\n            // for regular providers, we only support ngOnDestroy\n            if (lifecycleHook === _angular_core.ɵLifecycleHooks.OnDestroy ||\n                providerAst.providerType === ProviderAstType.Directive ||\n                providerAst.providerType === ProviderAstType.Component) {\n                flags |= lifecycleHookToNodeFlag(lifecycleHook);\n            }\n        });\n        var /** @type {?} */ queryMatchExprs = [];\n        queryMatches.forEach(function (match) {\n            if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(4 /* Provider */)]));\n            }\n        });\n        var _a = providerDef(providerAst), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, providerType = _a.flags;\n        return { flags: flags | providerType, queryMatchExprs: queryMatchExprs, providerExpr: providerExpr, depsExpr: depsExpr };\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        var /** @type {?} */ currViewExpr = VIEW_VAR;\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent, currViewExpr = currViewExpr.prop('parent')) {\n            // check references\n            var /** @type {?} */ refNodeIndex = currBuilder.refNodeIndices[name];\n            if (refNodeIndex != null) {\n                return importExpr(createIdentifier(Identifiers.nodeValue)).callFn([\n                    currViewExpr, literal(refNodeIndex)\n                ]);\n            }\n            // check variables\n            var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n            if (varAst) {\n                var /** @type {?} */ varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n                return currViewExpr.prop('context').prop(varValue);\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype.createLiteralArrayConverter = function (sourceSpan, argCount) {\n        if (argCount === 0) {\n            var /** @type {?} */ valueExpr_1 = importExpr(createIdentifier(Identifiers.EMPTY_ARRAY));\n            return function () { return valueExpr_1; };\n        }\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // pureArrayDef(argCount: number): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: sourceSpan,\n            nodeFlags: 16 /* TypePureArray */,\n            nodeDef: importExpr(createIdentifier(Identifiers.pureArrayDef)).callFn([literal(argCount)])\n        }); });\n        return function (args) { return callCheckStmt(nodeIndex, args); };\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    ViewBuilder.prototype.createLiteralMapConverter = function (sourceSpan, keys) {\n        if (keys.length === 0) {\n            var /** @type {?} */ valueExpr_2 = importExpr(createIdentifier(Identifiers.EMPTY_MAP));\n            return function () { return valueExpr_2; };\n        }\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // function pureObjectDef(propertyNames: string[]): NodeDef\n        this.nodes.push(function () { return ({\n            sourceSpan: sourceSpan,\n            nodeFlags: 32 /* TypePureObject */,\n            nodeDef: importExpr(createIdentifier(Identifiers.pureObjectDef))\n                .callFn([literalArr(keys.map(function (key) { return literal(key); }))])\n        }); });\n        return function (args) { return callCheckStmt(nodeIndex, args); };\n    };\n    /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype.createPipeConverter = function (expression, name, argCount) {\n        var /** @type {?} */ pipe = this.usedPipes.find(function (pipeSummary) { return pipeSummary.name === name; });\n        if (pipe.pure) {\n            var /** @type {?} */ nodeIndex_1 = this.nodes.length;\n            // function purePipeDef(argCount: number): NodeDef;\n            this.nodes.push(function () { return ({\n                sourceSpan: expression.sourceSpan,\n                nodeFlags: 64 /* TypePurePipe */,\n                nodeDef: importExpr(createIdentifier(Identifiers.purePipeDef))\n                    .callFn([literal(argCount)])\n            }); });\n            // find underlying pipe in the component view\n            var /** @type {?} */ compViewExpr = VIEW_VAR;\n            var /** @type {?} */ compBuilder = this;\n            while (compBuilder.parent) {\n                compBuilder = compBuilder.parent;\n                compViewExpr = compViewExpr.prop('parent');\n            }\n            var /** @type {?} */ pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n            var /** @type {?} */ pipeValueExpr_1 = importExpr(createIdentifier(Identifiers.nodeValue)).callFn([\n                compViewExpr, literal(pipeNodeIndex)\n            ]);\n            return function (args) { return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, callCheckStmt(nodeIndex_1, [pipeValueExpr_1].concat(args))); };\n        }\n        else {\n            var /** @type {?} */ nodeIndex = this._createPipe(expression.sourceSpan, pipe);\n            var /** @type {?} */ nodeValueExpr_1 = importExpr(createIdentifier(Identifiers.nodeValue)).callFn([\n                VIEW_VAR, literal(nodeIndex)\n            ]);\n            return function (args) { return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, nodeValueExpr_1.callMethod('transform', args)); };\n        }\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipe = function (sourceSpan, pipe) {\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        var /** @type {?} */ flags = 0;\n        pipe.type.lifecycleHooks.forEach(function (lifecycleHook) {\n            // for pipes, we only support ngOnDestroy\n            if (lifecycleHook === _angular_core.ɵLifecycleHooks.OnDestroy) {\n                flags |= lifecycleHookToNodeFlag(lifecycleHook);\n            }\n        });\n        var /** @type {?} */ depExprs = pipe.type.diDeps.map(depDef);\n        // function pipeDef(\n        //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n        this.nodes.push(function () { return ({\n            sourceSpan: sourceSpan,\n            nodeFlags: 8 /* TypePipe */,\n            nodeDef: importExpr(createIdentifier(Identifiers.pipeDef)).callFn([\n                literal(flags), importExpr(pipe.type), literalArr(depExprs)\n            ])\n        }); });\n        return nodeIndex;\n    };\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype._preprocessUpdateExpression = function (expression) {\n        var _this = this;\n        return {\n            nodeIndex: expression.nodeIndex,\n            bindingIndex: expression.bindingIndex,\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) { return _this.createLiteralArrayConverter(expression.sourceSpan, argCount); },\n                createLiteralMapConverter: function (keys) { return _this.createLiteralMapConverter(expression.sourceSpan, keys); },\n                createPipeConverter: function (name, argCount) { return _this.createPipeConverter(expression, name, argCount); }\n            }, expression.value)\n        };\n    };\n    /**\n     * @return {?}\n     */\n    ViewBuilder.prototype._createNodeExpressions = function () {\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ updateBindingCount = 0;\n        var /** @type {?} */ updateRendererStmts = [];\n        var /** @type {?} */ updateDirectivesStmts = [];\n        var /** @type {?} */ nodeDefExprs = this.nodes.map(function (factory, nodeIndex) {\n            var _a = factory(), nodeDef = _a.nodeDef, nodeFlags = _a.nodeFlags, updateDirectives = _a.updateDirectives, updateRenderer = _a.updateRenderer, sourceSpan = _a.sourceSpan;\n            if (updateRenderer) {\n                updateRendererStmts.push.apply(updateRendererStmts, createUpdateStatements(nodeIndex, sourceSpan, updateRenderer, false));\n            }\n            if (updateDirectives) {\n                updateDirectivesStmts.push.apply(updateDirectivesStmts, createUpdateStatements(nodeIndex, sourceSpan, updateDirectives, (nodeFlags & (131072 /* DoCheck */ | 32768 /* OnInit */)) > 0));\n            }\n            // We use a comma expression to call the log function before\n            // the nodeDef function, but still use the result of the nodeDef function\n            // as the value.\n            // Note: We only add the logger to elements / text nodes,\n            // so we don't generate too much code.\n            var /** @type {?} */ logWithNodeDef = nodeFlags & 3 /* CatRenderNode */ ?\n                new CommaExpr([LOG_VAR.callFn([]).callFn([]), nodeDef]) :\n                nodeDef;\n            return applySourceSpanToExpressionIfNeeded(logWithNodeDef, sourceSpan);\n        });\n        return { updateRendererStmts: updateRendererStmts, updateDirectivesStmts: updateDirectivesStmts, nodeDefExprs: nodeDefExprs };\n        /**\n         * @param {?} nodeIndex\n         * @param {?} sourceSpan\n         * @param {?} expressions\n         * @param {?} allowEmptyExprs\n         * @return {?}\n         */\n        function createUpdateStatements(nodeIndex, sourceSpan, expressions, allowEmptyExprs) {\n            var /** @type {?} */ updateStmts = [];\n            var /** @type {?} */ exprs = expressions.map(function (_a) {\n                var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n                var /** @type {?} */ bindingId = \"\" + updateBindingCount++;\n                var /** @type {?} */ nameResolver = context === COMP_VAR ? self : null;\n                var _b = convertPropertyBinding(nameResolver, context, value, bindingId), stmts = _b.stmts, currValExpr = _b.currValExpr;\n                updateStmts.push.apply(updateStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n                return applySourceSpanToExpressionIfNeeded(currValExpr, sourceSpan);\n            });\n            if (expressions.length || allowEmptyExprs) {\n                updateStmts.push(applySourceSpanToStatementIfNeeded(callCheckStmt(nodeIndex, exprs).toStmt(), sourceSpan));\n            }\n            return updateStmts;\n        }\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    ViewBuilder.prototype._createElementHandleEventFn = function (nodeIndex, handlers) {\n        var _this = this;\n        var /** @type {?} */ handleEventStmts = [];\n        var /** @type {?} */ handleEventBindingCount = 0;\n        handlers.forEach(function (_a) {\n            var context = _a.context, eventAst = _a.eventAst, dirAst = _a.dirAst;\n            var /** @type {?} */ bindingId = \"\" + handleEventBindingCount++;\n            var /** @type {?} */ nameResolver = context === COMP_VAR ? _this : null;\n            var _b = convertActionBinding(nameResolver, context, eventAst.handler, bindingId), stmts = _b.stmts, allowDefault = _b.allowDefault;\n            var /** @type {?} */ trueStmts = stmts;\n            if (allowDefault) {\n                trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n            }\n            var _c = elementEventNameAndTarget(eventAst, dirAst), eventTarget = _c.target, eventName = _c.name;\n            var /** @type {?} */ fullEventName = _angular_core.ɵelementEventFullName(eventTarget, eventName);\n            handleEventStmts.push(applySourceSpanToStatementIfNeeded(new IfStmt(literal(fullEventName).identical(EVENT_NAME_VAR), trueStmts), eventAst.sourceSpan));\n        });\n        var /** @type {?} */ handleEventFn;\n        if (handleEventStmts.length > 0) {\n            var /** @type {?} */ preStmts = [ALLOW_DEFAULT_VAR.set(literal(true)).toDeclStmt(BOOL_TYPE)];\n            if (!this.component.isHost && findReadVarNames(handleEventStmts).has(COMP_VAR.name)) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            handleEventFn = fn([\n                new FnParam(VIEW_VAR.name, INFERRED_TYPE),\n                new FnParam(EVENT_NAME_VAR.name, INFERRED_TYPE),\n                new FnParam(EventHandlerVars.event.name, INFERRED_TYPE)\n            ], preStmts.concat(handleEventStmts, [new ReturnStatement(ALLOW_DEFAULT_VAR)]), INFERRED_TYPE);\n        }\n        else {\n            handleEventFn = NULL_EXPR;\n        }\n        return handleEventFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = function (ast, context) { };\n    return ViewBuilder;\n}());\n/**\n * @param {?} providerAst\n * @return {?}\n */\nfunction providerDef(providerAst) {\n    return providerAst.multiProvider ?\n        multiProviderDef(providerAst.providers) :\n        singleProviderDef(providerAst.providerType, providerAst.providers[0]);\n}\n/**\n * @param {?} providers\n * @return {?}\n */\nfunction multiProviderDef(providers) {\n    var /** @type {?} */ allDepDefs = [];\n    var /** @type {?} */ allParams = [];\n    var /** @type {?} */ exprs = providers.map(function (provider, providerIndex) {\n        var /** @type {?} */ expr;\n        if (provider.useClass) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useClass.diDeps);\n            expr = importExpr(provider.useClass).instantiate(depExprs);\n        }\n        else if (provider.useFactory) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useFactory.diDeps);\n            expr = importExpr(provider.useFactory).callFn(depExprs);\n        }\n        else if (provider.useExisting) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, [{ token: provider.useExisting }]);\n            expr = depExprs[0];\n        }\n        else {\n            expr = convertValueToOutputAst(provider.useValue);\n        }\n        return expr;\n    });\n    var /** @type {?} */ providerExpr = fn(allParams, [new ReturnStatement(literalArr(exprs))], INFERRED_TYPE);\n    return { providerExpr: providerExpr, flags: 512 /* TypeFactoryProvider */, depsExpr: literalArr(allDepDefs) };\n    /**\n     * @param {?} providerIndex\n     * @param {?} deps\n     * @return {?}\n     */\n    function convertDeps(providerIndex, deps) {\n        return deps.map(function (dep, depIndex) {\n            var /** @type {?} */ paramName = \"p\" + providerIndex + \"_\" + depIndex;\n            allParams.push(new FnParam(paramName, DYNAMIC_TYPE));\n            allDepDefs.push(depDef(dep));\n            return variable(paramName);\n        });\n    }\n}\n/**\n * @param {?} providerType\n * @param {?} providerMeta\n * @return {?}\n */\nfunction singleProviderDef(providerType, providerMeta) {\n    var /** @type {?} */ providerExpr;\n    var /** @type {?} */ flags;\n    var /** @type {?} */ deps;\n    if (providerType === ProviderAstType.Directive || providerType === ProviderAstType.Component) {\n        providerExpr = importExpr(providerMeta.useClass);\n        flags = 8192 /* TypeDirective */;\n        deps = providerMeta.deps || providerMeta.useClass.diDeps;\n    }\n    else {\n        if (providerMeta.useClass) {\n            providerExpr = importExpr(providerMeta.useClass);\n            flags = 256 /* TypeClassProvider */;\n            deps = providerMeta.deps || providerMeta.useClass.diDeps;\n        }\n        else if (providerMeta.useFactory) {\n            providerExpr = importExpr(providerMeta.useFactory);\n            flags = 512 /* TypeFactoryProvider */;\n            deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n        }\n        else if (providerMeta.useExisting) {\n            providerExpr = NULL_EXPR;\n            flags = 1024 /* TypeUseExistingProvider */;\n            deps = [{ token: providerMeta.useExisting }];\n        }\n        else {\n            providerExpr = convertValueToOutputAst(providerMeta.useValue);\n            flags = 128 /* TypeValueProvider */;\n            deps = [];\n        }\n    }\n    var /** @type {?} */ depsExpr = literalArr(deps.map(function (dep) { return depDef(dep); }));\n    return { providerExpr: providerExpr, flags: flags, depsExpr: depsExpr };\n}\n/**\n * @param {?} tokenMeta\n * @return {?}\n */\nfunction tokenExpr(tokenMeta) {\n    return tokenMeta.identifier ? importExpr(tokenMeta.identifier) : literal(tokenMeta.value);\n}\n/**\n * @param {?} dep\n * @return {?}\n */\nfunction depDef(dep) {\n    // Note: the following fields have already been normalized out by provider_analyzer:\n    // - isAttribute, isSelf, isHost\n    var /** @type {?} */ expr = dep.isValue ? convertValueToOutputAst(dep.value) : tokenExpr(dep.token);\n    var /** @type {?} */ flags = 0;\n    if (dep.isSkipSelf) {\n        flags |= 1 /* SkipSelf */;\n    }\n    if (dep.isOptional) {\n        flags |= 2 /* Optional */;\n    }\n    if (dep.isValue) {\n        flags |= 8 /* Value */;\n    }\n    return flags === 0 /* None */ ? expr : literalArr([literal(flags), expr]);\n}\n/**\n * @param {?} astNodes\n * @return {?}\n */\nfunction needsAdditionalRootNode(astNodes) {\n    var /** @type {?} */ lastAstNode = astNodes[astNodes.length - 1];\n    if (lastAstNode instanceof EmbeddedTemplateAst) {\n        return lastAstNode.hasViewContainer;\n    }\n    if (lastAstNode instanceof ElementAst) {\n        if (lastAstNode.name === NG_CONTAINER_TAG && lastAstNode.children.length) {\n            return needsAdditionalRootNode(lastAstNode.children);\n        }\n        return lastAstNode.hasViewContainer;\n    }\n    return lastAstNode instanceof NgContentAst;\n}\n/**\n * @param {?} lifecycleHook\n * @return {?}\n */\nfunction lifecycleHookToNodeFlag(lifecycleHook) {\n    var /** @type {?} */ nodeFlag = 0;\n    switch (lifecycleHook) {\n        case _angular_core.ɵLifecycleHooks.AfterContentChecked:\n            nodeFlag = 1048576 /* AfterContentChecked */;\n            break;\n        case _angular_core.ɵLifecycleHooks.AfterContentInit:\n            nodeFlag = 524288 /* AfterContentInit */;\n            break;\n        case _angular_core.ɵLifecycleHooks.AfterViewChecked:\n            nodeFlag = 4194304 /* AfterViewChecked */;\n            break;\n        case _angular_core.ɵLifecycleHooks.AfterViewInit:\n            nodeFlag = 2097152 /* AfterViewInit */;\n            break;\n        case _angular_core.ɵLifecycleHooks.DoCheck:\n            nodeFlag = 131072 /* DoCheck */;\n            break;\n        case _angular_core.ɵLifecycleHooks.OnChanges:\n            nodeFlag = 262144 /* OnChanges */;\n            break;\n        case _angular_core.ɵLifecycleHooks.OnDestroy:\n            nodeFlag = 65536 /* OnDestroy */;\n            break;\n        case _angular_core.ɵLifecycleHooks.OnInit:\n            nodeFlag = 32768 /* OnInit */;\n            break;\n    }\n    return nodeFlag;\n}\n/**\n * @param {?} inputAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementBindingDef(inputAst, dirAst) {\n    switch (inputAst.type) {\n        case PropertyBindingType.Attribute:\n            return literalArr([\n                literal(1 /* TypeElementAttribute */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Property:\n            return literalArr([\n                literal(8 /* TypeProperty */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Animation:\n            var /** @type {?} */ bindingType = 8 /* TypeProperty */ |\n                (dirAst && dirAst.directive.isComponent ? 32 /* SyntheticHostProperty */ :\n                    16 /* SyntheticProperty */);\n            return literalArr([\n                literal(bindingType), literal('@' + inputAst.name), literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Class:\n            return literalArr([literal(2 /* TypeElementClass */), literal(inputAst.name), NULL_EXPR]);\n        case PropertyBindingType.Style:\n            return literalArr([\n                literal(4 /* TypeElementStyle */), literal(inputAst.name), literal(inputAst.unit)\n            ]);\n    }\n}\n/**\n * @param {?} elementAst\n * @return {?}\n */\nfunction fixedAttrsDef(elementAst) {\n    var /** @type {?} */ mapResult = Object.create(null);\n    elementAst.attrs.forEach(function (attrAst) { mapResult[attrAst.name] = attrAst.value; });\n    elementAst.directives.forEach(function (dirAst) {\n        Object.keys(dirAst.directive.hostAttributes).forEach(function (name) {\n            var /** @type {?} */ value = dirAst.directive.hostAttributes[name];\n            var /** @type {?} */ prevValue = mapResult[name];\n            mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n        });\n    });\n    var /** @type {?} */ mapEntries = [];\n    // Note: We need to sort to get a defined output order\n    // for tests and for caching generated artifacts...\n    return literalArr(Object.keys(mapResult).sort().map(function (attrName) { return literalArr([literal(attrName), literal(mapResult[attrName])]); }));\n}\n/**\n * @param {?} attrName\n * @param {?} attrValue1\n * @param {?} attrValue2\n * @return {?}\n */\nfunction mergeAttributeValue(attrName, attrValue1, attrValue2) {\n    if (attrName == CLASS_ATTR$1 || attrName == STYLE_ATTR) {\n        return attrValue1 + \" \" + attrValue2;\n    }\n    else {\n        return attrValue2;\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} exprs\n * @return {?}\n */\nfunction callCheckStmt(nodeIndex, exprs) {\n    if (exprs.length > 10) {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(1 /* Dynamic */), literalArr(exprs)]);\n    }\n    else {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(0 /* Inline */)].concat(exprs));\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} bindingIdx\n * @param {?} expr\n * @return {?}\n */\nfunction callUnwrapValue(nodeIndex, bindingIdx, expr) {\n    return importExpr(createIdentifier(Identifiers.unwrapValue)).callFn([\n        VIEW_VAR, literal(nodeIndex), literal(bindingIdx), expr\n    ]);\n}\n/**\n * @param {?} nodes\n * @param {?=} result\n * @return {?}\n */\nfunction findStaticQueryIds(nodes, result) {\n    if (result === void 0) { result = new Map(); }\n    nodes.forEach(function (node) {\n        var /** @type {?} */ staticQueryIds = new Set();\n        var /** @type {?} */ dynamicQueryIds = new Set();\n        var /** @type {?} */ queryMatches;\n        if (node instanceof ElementAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = result.get(child);\n                childData.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        else if (node instanceof EmbeddedTemplateAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = result.get(child);\n                childData.staticQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        if (queryMatches) {\n            queryMatches.forEach(function (match) { return staticQueryIds.add(match.queryId); });\n        }\n        dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n        result.set(node, { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds });\n    });\n    return result;\n}\n/**\n * @param {?} nodeStaticQueryIds\n * @return {?}\n */\nfunction staticViewQueryIds(nodeStaticQueryIds) {\n    var /** @type {?} */ staticQueryIds = new Set();\n    var /** @type {?} */ dynamicQueryIds = new Set();\n    Array.from(nodeStaticQueryIds.values()).forEach(function (entry) {\n        entry.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n        entry.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n    });\n    dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n    return { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds };\n}\n/**\n * @param {?} directives\n * @return {?}\n */\nfunction createComponentFactoryResolver(directives) {\n    var /** @type {?} */ componentDirMeta = directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n    if (componentDirMeta && componentDirMeta.directive.entryComponents.length) {\n        var /** @type {?} */ entryComponentFactories = componentDirMeta.directive.entryComponents.map(function (entryComponent) { return importExpr({ reference: entryComponent.componentFactory }); });\n        var /** @type {?} */ token = createIdentifierToken(Identifiers.ComponentFactoryResolver);\n        var /** @type {?} */ classMeta = {\n            diDeps: [\n                { isValue: true, value: literalArr(entryComponentFactories) },\n                { token: token, isSkipSelf: true, isOptional: true },\n                { token: createIdentifierToken(Identifiers.NgModuleRef) },\n            ],\n            lifecycleHooks: [],\n            reference: resolveIdentifier(Identifiers.CodegenComponentFactoryResolver)\n        };\n        return new ProviderAst(token, false, true, [{ token: token, multi: false, useClass: classMeta }], ProviderAstType.PrivateService, [], componentDirMeta.sourceSpan);\n    }\n    return null;\n}\n/**\n * @param {?} eventAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementEventNameAndTarget(eventAst, dirAst) {\n    if (eventAst.isAnimation) {\n        return {\n            name: \"@\" + eventAst.name + \".\" + eventAst.phase,\n            target: dirAst && dirAst.directive.isComponent ? 'component' : null\n        };\n    }\n    else {\n        return eventAst;\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar GeneratedFile = (function () {\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} genFileUrl\n     * @param {?} source\n     */\n    function GeneratedFile(srcFileUrl, genFileUrl, source) {\n        this.srcFileUrl = srcFileUrl;\n        this.genFileUrl = genFileUrl;\n        this.source = source;\n    }\n    return GeneratedFile;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} summaryResolver\n * @param {?} symbolResolver\n * @param {?} symbols\n * @param {?} types\n * @return {?}\n */\nfunction serializeSummaries(summaryResolver, symbolResolver, symbols, types) {\n    var /** @type {?} */ serializer = new Serializer$1(symbolResolver, summaryResolver);\n    // for symbols, we use everything except for the class metadata itself\n    // (we keep the statics though), as the class metadata is contained in the\n    // CompileTypeSummary.\n    symbols.forEach(function (resolvedSymbol) { return serializer.addOrMergeSummary({ symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata }); });\n    // Add summaries that are referenced by the given symbols (transitively)\n    // Note: the serializer.symbols array might be growing while\n    // we execute the loop!\n    for (var /** @type {?} */ processedIndex = 0; processedIndex < serializer.symbols.length; processedIndex++) {\n        var /** @type {?} */ symbol = serializer.symbols[processedIndex];\n        if (summaryResolver.isLibraryFile(symbol.filePath)) {\n            var /** @type {?} */ summary = summaryResolver.resolveSummary(symbol);\n            if (!summary) {\n                // some symbols might originate from a plain typescript library\n                // that just exported .d.ts and .metadata.json files, i.e. where no summary\n                // files were created.\n                var /** @type {?} */ resolvedSymbol = symbolResolver.resolveSymbol(symbol);\n                if (resolvedSymbol) {\n                    summary = { symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata };\n                }\n            }\n            if (summary) {\n                serializer.addOrMergeSummary(summary);\n            }\n        }\n    }\n    // Add type summaries.\n    // Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,\n    // as the type summaries already contain the transitive data that they require\n    // (in a minimal way).\n    types.forEach(function (typeSummary) {\n        serializer.addOrMergeSummary({ symbol: typeSummary.type.reference, metadata: { __symbolic: 'class' }, type: typeSummary });\n        if (typeSummary.summaryKind === CompileSummaryKind.NgModule) {\n            var /** @type {?} */ ngModuleSummary = (typeSummary);\n            ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach(function (id) {\n                var /** @type {?} */ symbol = id.reference;\n                if (summaryResolver.isLibraryFile(symbol.filePath)) {\n                    var /** @type {?} */ summary = summaryResolver.resolveSummary(symbol);\n                    if (summary) {\n                        serializer.addOrMergeSummary(summary);\n                    }\n                }\n            });\n        }\n    });\n    return serializer.serialize();\n}\n/**\n * @param {?} symbolCache\n * @param {?} json\n * @return {?}\n */\nfunction deserializeSummaries(symbolCache, json) {\n    var /** @type {?} */ deserializer = new Deserializer(symbolCache);\n    return deserializer.deserialize(json);\n}\nvar Serializer$1 = (function (_super) {\n    __extends(Serializer$1, _super);\n    /**\n     * @param {?} symbolResolver\n     * @param {?} summaryResolver\n     */\n    function Serializer$1(symbolResolver, summaryResolver) {\n        var _this = _super.call(this) || this;\n        _this.symbolResolver = symbolResolver;\n        _this.summaryResolver = summaryResolver;\n        // Note: This only contains symbols without members.\n        _this.symbols = [];\n        _this.indexBySymbol = new Map();\n        _this.processedSummaryBySymbol = new Map();\n        _this.processedSummaries = [];\n        return _this;\n    }\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    Serializer$1.prototype.addOrMergeSummary = function (summary) {\n        var /** @type {?} */ symbolMeta = summary.metadata;\n        if (symbolMeta && symbolMeta.__symbolic === 'class') {\n            // For classes, we only keep their statics and arity, but not the metadata\n            // of the class itself as that has been captured already via other summaries\n            // (e.g. DirectiveSummary, ...).\n            symbolMeta = { __symbolic: 'class', statics: symbolMeta.statics, arity: symbolMeta.arity };\n        }\n        var /** @type {?} */ processedSummary = this.processedSummaryBySymbol.get(summary.symbol);\n        if (!processedSummary) {\n            processedSummary = this.processValue({ symbol: summary.symbol });\n            this.processedSummaries.push(processedSummary);\n            this.processedSummaryBySymbol.set(summary.symbol, processedSummary);\n        }\n        // Note: == on purpose to compare with undefined!\n        if (processedSummary.metadata == null && symbolMeta != null) {\n            processedSummary.metadata = this.processValue(symbolMeta);\n        }\n        // Note: == on purpose to compare with undefined!\n        if (processedSummary.type == null && summary.type != null) {\n            processedSummary.type = this.processValue(summary.type);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    Serializer$1.prototype.serialize = function () {\n        var _this = this;\n        var /** @type {?} */ exportAs = [];\n        var /** @type {?} */ json = JSON.stringify({\n            summaries: this.processedSummaries,\n            symbols: this.symbols.map(function (symbol, index) {\n                symbol.assertNoMembers();\n                var /** @type {?} */ importAs;\n                if (_this.summaryResolver.isLibraryFile(symbol.filePath)) {\n                    importAs = symbol.name + \"_\" + index;\n                    exportAs.push({ symbol: symbol, exportAs: importAs });\n                }\n                return {\n                    __symbol: index,\n                    name: symbol.name,\n                    // We convert the source filenames tinto output filenames,\n                    // as the generated summary file will be used when teh current\n                    // compilation unit is used as a library\n                    filePath: _this.summaryResolver.getLibraryFileName(symbol.filePath),\n                    importAs: importAs\n                };\n            })\n        });\n        return { json: json, exportAs: exportAs };\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    Serializer$1.prototype.processValue = function (value) { return visitValue(value, this, null); };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    Serializer$1.prototype.visitOther = function (value, context) {\n        if (value instanceof StaticSymbol) {\n            var /** @type {?} */ baseSymbol = this.symbolResolver.getStaticSymbol(value.filePath, value.name);\n            var /** @type {?} */ index = this.indexBySymbol.get(baseSymbol);\n            // Note: == on purpose to compare with undefined!\n            if (index == null) {\n                index = this.indexBySymbol.size;\n                this.indexBySymbol.set(baseSymbol, index);\n                this.symbols.push(baseSymbol);\n            }\n            return { __symbol: index, members: value.members };\n        }\n    };\n    return Serializer$1;\n}(ValueTransformer));\nvar Deserializer = (function (_super) {\n    __extends(Deserializer, _super);\n    /**\n     * @param {?} symbolCache\n     */\n    function Deserializer(symbolCache) {\n        var _this = _super.call(this) || this;\n        _this.symbolCache = symbolCache;\n        return _this;\n    }\n    /**\n     * @param {?} json\n     * @return {?}\n     */\n    Deserializer.prototype.deserialize = function (json) {\n        var _this = this;\n        var /** @type {?} */ data = JSON.parse(json);\n        var /** @type {?} */ importAs = [];\n        this.symbols = [];\n        data.symbols.forEach(function (serializedSymbol) {\n            var /** @type {?} */ symbol = _this.symbolCache.get(serializedSymbol.filePath, serializedSymbol.name);\n            _this.symbols.push(symbol);\n            if (serializedSymbol.importAs) {\n                importAs.push({ symbol: symbol, importAs: serializedSymbol.importAs });\n            }\n        });\n        var /** @type {?} */ summaries = visitValue(data.summaries, this, null);\n        return { summaries: summaries, importAs: importAs };\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    Deserializer.prototype.visitStringMap = function (map, context) {\n        if ('__symbol' in map) {\n            var /** @type {?} */ baseSymbol = this.symbols[map['__symbol']];\n            var /** @type {?} */ members = map['members'];\n            return members.length ? this.symbolCache.get(baseSymbol.filePath, baseSymbol.name, members) :\n                baseSymbol;\n        }\n        else {\n            return _super.prototype.visitStringMap.call(this, map, context);\n        }\n    };\n    return Deserializer;\n}(ValueTransformer));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AotCompiler = (function () {\n    /**\n     * @param {?} _config\n     * @param {?} _host\n     * @param {?} _metadataResolver\n     * @param {?} _templateParser\n     * @param {?} _styleCompiler\n     * @param {?} _viewCompiler\n     * @param {?} _ngModuleCompiler\n     * @param {?} _outputEmitter\n     * @param {?} _summaryResolver\n     * @param {?} _localeId\n     * @param {?} _translationFormat\n     * @param {?} _genFilePreamble\n     * @param {?} _symbolResolver\n     */\n    function AotCompiler(_config, _host, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _outputEmitter, _summaryResolver, _localeId, _translationFormat, _genFilePreamble, _symbolResolver) {\n        this._config = _config;\n        this._host = _host;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._outputEmitter = _outputEmitter;\n        this._summaryResolver = _summaryResolver;\n        this._localeId = _localeId;\n        this._translationFormat = _translationFormat;\n        this._genFilePreamble = _genFilePreamble;\n        this._symbolResolver = _symbolResolver;\n    }\n    /**\n     * @return {?}\n     */\n    AotCompiler.prototype.clearCache = function () { this._metadataResolver.clearCache(); };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.compileAll = function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ programSymbols = extractProgramSymbols(this._symbolResolver, rootFiles, this._host);\n        var _a = analyzeAndValidateNgModules(programSymbols, this._host, this._metadataResolver), ngModuleByPipeOrDirective = _a.ngModuleByPipeOrDirective, files = _a.files, ngModules = _a.ngModules;\n        return Promise\n            .all(ngModules.map(function (ngModule) { return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false); }))\n            .then(function () {\n            var /** @type {?} */ sourceModules = files.map(function (file) { return _this._compileSrcFile(file.srcUrl, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables); });\n            return flatten(sourceModules);\n        });\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    AotCompiler.prototype._compileSrcFile = function (srcFileUrl, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n        var _this = this;\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(srcFileUrl)[1];\n        var /** @type {?} */ statements = [];\n        var /** @type {?} */ exportedVars = [];\n        var /** @type {?} */ generatedFiles = [];\n        generatedFiles.push(this._createSummary(srcFileUrl, directives, pipes, ngModules, injectables, statements, exportedVars));\n        // compile all ng modules\n        exportedVars.push.apply(exportedVars, ngModules.map(function (ngModuleType) { return _this._compileModule(ngModuleType, statements); }));\n        // compile components\n        directives.forEach(function (dirType) {\n            var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(/** @type {?} */ (dirType));\n            if (!compMeta.isComponent) {\n                return Promise.resolve(null);\n            }\n            var /** @type {?} */ ngModule = ngModuleByPipeOrDirective.get(dirType);\n            if (!ngModule) {\n                throw new Error(\"Internal Error: cannot determine the module for component \" + identifierName(compMeta.type) + \"!\");\n            }\n            _assertComponent(compMeta);\n            // compile styles\n            var /** @type {?} */ stylesCompileResults = _this._styleCompiler.compileComponent(compMeta);\n            stylesCompileResults.externalStylesheets.forEach(function (compiledStyleSheet) {\n                generatedFiles.push(_this._codgenStyles(srcFileUrl, compiledStyleSheet, fileSuffix));\n            });\n            // compile components\n            var /** @type {?} */ compViewVars = _this._compileComponent(compMeta, ngModule, ngModule.transitiveModule.directives, stylesCompileResults.componentStylesheet, fileSuffix, statements);\n            exportedVars.push(_this._compileComponentFactory(compMeta, ngModule, fileSuffix, statements), compViewVars.viewClassVar, compViewVars.compRenderTypeVar);\n        });\n        if (statements.length > 0) {\n            var /** @type {?} */ srcModule = this._codegenSourceModule(srcFileUrl, ngfactoryFilePath(srcFileUrl), statements, exportedVars);\n            generatedFiles.unshift(srcModule);\n        }\n        return generatedFiles;\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} targetStatements\n     * @param {?} targetExportedVars\n     * @return {?}\n     */\n    AotCompiler.prototype._createSummary = function (srcFileUrl, directives, pipes, ngModules, injectables, targetStatements, targetExportedVars) {\n        var _this = this;\n        var /** @type {?} */ symbolSummaries = this._symbolResolver.getSymbolsOf(srcFileUrl)\n            .map(function (symbol) { return _this._symbolResolver.resolveSymbol(symbol); });\n        var /** @type {?} */ typeSummaries = ngModules.map(function (ref) { return _this._metadataResolver.getNgModuleSummary(ref); }).concat(directives.map(function (ref) { return _this._metadataResolver.getDirectiveSummary(ref); }), pipes.map(function (ref) { return _this._metadataResolver.getPipeSummary(ref); }), injectables.map(function (ref) { return _this._metadataResolver.getInjectableSummary(ref); }));\n        var _a = serializeSummaries(this._summaryResolver, this._symbolResolver, symbolSummaries, typeSummaries), json = _a.json, exportAs = _a.exportAs;\n        exportAs.forEach(function (entry) {\n            targetStatements.push(variable(entry.exportAs).set(importExpr({ reference: entry.symbol })).toDeclStmt());\n            targetExportedVars.push(entry.exportAs);\n        });\n        return new GeneratedFile(srcFileUrl, summaryFileName(srcFileUrl), json);\n    };\n    /**\n     * @param {?} ngModuleType\n     * @param {?} targetStatements\n     * @return {?}\n     */\n    AotCompiler.prototype._compileModule = function (ngModuleType, targetStatements) {\n        var /** @type {?} */ ngModule = this._metadataResolver.getNgModuleMetadata(ngModuleType);\n        var /** @type {?} */ providers = [];\n        if (this._localeId) {\n            providers.push({\n                token: createIdentifierToken(Identifiers.LOCALE_ID),\n                useValue: this._localeId,\n            });\n        }\n        if (this._translationFormat) {\n            providers.push({\n                token: createIdentifierToken(Identifiers.TRANSLATIONS_FORMAT),\n                useValue: this._translationFormat\n            });\n        }\n        var /** @type {?} */ appCompileResult = this._ngModuleCompiler.compile(ngModule, providers);\n        targetStatements.push.apply(targetStatements, appCompileResult.statements);\n        return appCompileResult.ngModuleFactoryVar;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @param {?} targetStatements\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponentFactory = function (compMeta, ngModule, fileSuffix, targetStatements) {\n        var /** @type {?} */ hostType = this._metadataResolver.getHostComponentType(compMeta.type.reference);\n        var /** @type {?} */ hostMeta = createHostComponentMeta(hostType, compMeta, this._metadataResolver.getHostComponentViewClass(hostType));\n        var /** @type {?} */ hostViewFactoryVar = this._compileComponent(hostMeta, ngModule, [compMeta.type], null, fileSuffix, targetStatements)\n            .viewClassVar;\n        var /** @type {?} */ compFactoryVar = componentFactoryName(compMeta.type.reference);\n        var /** @type {?} */ inputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.inputs) {\n            var /** @type {?} */ templateName = compMeta.inputs[propName];\n            // Don't quote so that the key gets minified...\n            inputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        var /** @type {?} */ outputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.outputs) {\n            var /** @type {?} */ templateName = compMeta.outputs[propName];\n            // Don't quote so that the key gets minified...\n            outputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        targetStatements.push(variable(compFactoryVar)\n            .set(importExpr(createIdentifier(Identifiers.createComponentFactory)).callFn([\n            literal(compMeta.selector), importExpr(compMeta.type),\n            variable(hostViewFactoryVar), new LiteralMapExpr(inputsExprs),\n            new LiteralMapExpr(outputsExprs),\n            literalArr(compMeta.template.ngContentSelectors.map(function (selector) { return literal(selector); }))\n        ]))\n            .toDeclStmt(importType(createIdentifier(Identifiers.ComponentFactory), [importType(compMeta.type)], [TypeModifier.Const]), [StmtModifier.Final]));\n        return compFactoryVar;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @param {?} targetStatements\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponent = function (compMeta, ngModule, directiveIdentifiers, componentStyles, fileSuffix, targetStatements) {\n        var _this = this;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var _a = this._templateParser.parse(compMeta, compMeta.template.template, directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, compMeta.template)), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ stylesExpr = componentStyles ? variable(componentStyles.stylesVar) : literalArr([]);\n        var /** @type {?} */ viewResult = this._viewCompiler.compileComponent(compMeta, parsedTemplate, stylesExpr, usedPipes);\n        if (componentStyles) {\n            targetStatements.push.apply(targetStatements, _resolveStyleStatements(this._symbolResolver, componentStyles, fileSuffix));\n        }\n        targetStatements.push.apply(targetStatements, viewResult.statements);\n        return { viewClassVar: viewResult.viewClassVar, compRenderTypeVar: viewResult.rendererTypeVar };\n    };\n    /**\n     * @param {?} fileUrl\n     * @param {?} stylesCompileResult\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._codgenStyles = function (fileUrl, stylesCompileResult, fileSuffix) {\n        _resolveStyleStatements(this._symbolResolver, stylesCompileResult, fileSuffix);\n        return this._codegenSourceModule(fileUrl, _stylesModuleUrl(stylesCompileResult.meta.moduleUrl, stylesCompileResult.isShimmed, fileSuffix), stylesCompileResult.statements, [stylesCompileResult.stylesVar]);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} genFileUrl\n     * @param {?} statements\n     * @param {?} exportedVars\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenSourceModule = function (srcFileUrl, genFileUrl, statements, exportedVars) {\n        return new GeneratedFile(srcFileUrl, genFileUrl, this._outputEmitter.emitStatements(sourceUrl(srcFileUrl), genFileUrl, statements, exportedVars, this._genFilePreamble));\n    };\n    return AotCompiler;\n}());\n/**\n * @param {?} reflector\n * @param {?} compileResult\n * @param {?} fileSuffix\n * @return {?}\n */\nfunction _resolveStyleStatements(reflector, compileResult, fileSuffix) {\n    compileResult.dependencies.forEach(function (dep) {\n        dep.valuePlaceholder.reference = reflector.getStaticSymbol(_stylesModuleUrl(dep.moduleUrl, dep.isShimmed, fileSuffix), dep.name);\n    });\n    return compileResult.statements;\n}\n/**\n * @param {?} stylesheetUrl\n * @param {?} shim\n * @param {?} suffix\n * @return {?}\n */\nfunction _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n    return \"\" + stylesheetUrl + (shim ? '.shim' : '') + \".ngstyle\" + suffix;\n}\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction _assertComponent(meta) {\n    if (!meta.isComponent) {\n        throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n    }\n}\n/**\n * @param {?} programStaticSymbols\n * @param {?} host\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeNgModules(programStaticSymbols, host, metadataResolver) {\n    var _a = _createNgModules(programStaticSymbols, host, metadataResolver), ngModules = _a.ngModules, symbolsMissingModule = _a.symbolsMissingModule;\n    return _analyzeNgModules(programStaticSymbols, ngModules, symbolsMissingModule, metadataResolver);\n}\n/**\n * @param {?} programStaticSymbols\n * @param {?} host\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeAndValidateNgModules(programStaticSymbols, host, metadataResolver) {\n    var /** @type {?} */ result = analyzeNgModules(programStaticSymbols, host, metadataResolver);\n    if (result.symbolsMissingModule && result.symbolsMissingModule.length) {\n        var /** @type {?} */ messages = result.symbolsMissingModule.map(function (s) { return \"Cannot determine the module for class \" + s.name + \" in \" + s.filePath + \"! Add \" + s.name + \" to the NgModule to fix it.\"; });\n        throw syntaxError(messages.join('\\n'));\n    }\n    return result;\n}\n/**\n * @param {?} programSymbols\n * @param {?} ngModuleMetas\n * @param {?} symbolsMissingModule\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _analyzeNgModules(programSymbols, ngModuleMetas, symbolsMissingModule, metadataResolver) {\n    var /** @type {?} */ moduleMetasByRef = new Map();\n    ngModuleMetas.forEach(function (ngModule) { return moduleMetasByRef.set(ngModule.type.reference, ngModule); });\n    var /** @type {?} */ ngModuleByPipeOrDirective = new Map();\n    var /** @type {?} */ ngModulesByFile = new Map();\n    var /** @type {?} */ ngDirectivesByFile = new Map();\n    var /** @type {?} */ ngPipesByFile = new Map();\n    var /** @type {?} */ ngInjectablesByFile = new Map();\n    var /** @type {?} */ filePaths = new Set();\n    // Make sure we produce an analyzed file for each input file\n    programSymbols.forEach(function (symbol) {\n        var /** @type {?} */ filePath = symbol.filePath;\n        filePaths.add(filePath);\n        if (metadataResolver.isInjectable(symbol)) {\n            ngInjectablesByFile.set(filePath, (ngInjectablesByFile.get(filePath) || []).concat(symbol));\n        }\n    });\n    // Looping over all modules to construct:\n    // - a map from file to modules `ngModulesByFile`,\n    // - a map from file to directives `ngDirectivesByFile`,\n    // - a map from file to pipes `ngPipesByFile`,\n    // - a map from directive/pipe to module `ngModuleByPipeOrDirective`.\n    ngModuleMetas.forEach(function (ngModuleMeta) {\n        var /** @type {?} */ srcFileUrl = ngModuleMeta.type.reference.filePath;\n        filePaths.add(srcFileUrl);\n        ngModulesByFile.set(srcFileUrl, (ngModulesByFile.get(srcFileUrl) || []).concat(ngModuleMeta.type.reference));\n        ngModuleMeta.declaredDirectives.forEach(function (dirIdentifier) {\n            var /** @type {?} */ fileUrl = dirIdentifier.reference.filePath;\n            filePaths.add(fileUrl);\n            ngDirectivesByFile.set(fileUrl, (ngDirectivesByFile.get(fileUrl) || []).concat(dirIdentifier.reference));\n            ngModuleByPipeOrDirective.set(dirIdentifier.reference, ngModuleMeta);\n        });\n        ngModuleMeta.declaredPipes.forEach(function (pipeIdentifier) {\n            var /** @type {?} */ fileUrl = pipeIdentifier.reference.filePath;\n            filePaths.add(fileUrl);\n            ngPipesByFile.set(fileUrl, (ngPipesByFile.get(fileUrl) || []).concat(pipeIdentifier.reference));\n            ngModuleByPipeOrDirective.set(pipeIdentifier.reference, ngModuleMeta);\n        });\n    });\n    var /** @type {?} */ files = [];\n    filePaths.forEach(function (srcUrl) {\n        var /** @type {?} */ directives = ngDirectivesByFile.get(srcUrl) || [];\n        var /** @type {?} */ pipes = ngPipesByFile.get(srcUrl) || [];\n        var /** @type {?} */ ngModules = ngModulesByFile.get(srcUrl) || [];\n        var /** @type {?} */ injectables = ngInjectablesByFile.get(srcUrl) || [];\n        files.push({ srcUrl: srcUrl, directives: directives, pipes: pipes, ngModules: ngModules, injectables: injectables });\n    });\n    return {\n        // map directive/pipe to module\n        ngModuleByPipeOrDirective: ngModuleByPipeOrDirective,\n        // list modules and directives for every source file\n        files: files,\n        ngModules: ngModuleMetas, symbolsMissingModule: symbolsMissingModule\n    };\n}\n/**\n * @param {?} staticSymbolResolver\n * @param {?} files\n * @param {?} host\n * @return {?}\n */\nfunction extractProgramSymbols(staticSymbolResolver, files, host) {\n    var /** @type {?} */ staticSymbols = [];\n    files.filter(function (fileName) { return host.isSourceFile(fileName); }).forEach(function (sourceFile) {\n        staticSymbolResolver.getSymbolsOf(sourceFile).forEach(function (symbol) {\n            var /** @type {?} */ resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            var /** @type {?} */ symbolMeta = resolvedSymbol.metadata;\n            if (symbolMeta) {\n                if (symbolMeta.__symbolic != 'error') {\n                    // Ignore symbols that are only included to record error information.\n                    staticSymbols.push(resolvedSymbol.symbol);\n                }\n            }\n        });\n    });\n    return staticSymbols;\n}\n/**\n * @param {?} programStaticSymbols\n * @param {?} host\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _createNgModules(programStaticSymbols, host, metadataResolver) {\n    var /** @type {?} */ ngModules = new Map();\n    var /** @type {?} */ programPipesAndDirectives = [];\n    var /** @type {?} */ ngModulePipesAndDirective = new Set();\n    var /** @type {?} */ addNgModule = function (staticSymbol) {\n        if (ngModules.has(staticSymbol) || !host.isSourceFile(staticSymbol.filePath)) {\n            return false;\n        }\n        var /** @type {?} */ ngModule = metadataResolver.getNgModuleMetadata(staticSymbol, false);\n        if (ngModule) {\n            ngModules.set(ngModule.type.reference, ngModule);\n            ngModule.declaredDirectives.forEach(function (dir) { return ngModulePipesAndDirective.add(dir.reference); });\n            ngModule.declaredPipes.forEach(function (pipe) { return ngModulePipesAndDirective.add(pipe.reference); });\n            // For every input module add the list of transitively included modules\n            ngModule.transitiveModule.modules.forEach(function (modMeta) { return addNgModule(modMeta.reference); });\n        }\n        return !!ngModule;\n    };\n    programStaticSymbols.forEach(function (staticSymbol) {\n        if (!addNgModule(staticSymbol) &&\n            (metadataResolver.isDirective(staticSymbol) || metadataResolver.isPipe(staticSymbol))) {\n            programPipesAndDirectives.push(staticSymbol);\n        }\n    });\n    // Throw an error if any of the program pipe or directives is not declared by a module\n    var /** @type {?} */ symbolsMissingModule = programPipesAndDirectives.filter(function (s) { return !ngModulePipesAndDirective.has(s); });\n    return { ngModules: Array.from(ngModules.values()), symbolsMissingModule: symbolsMissingModule };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar StaticAndDynamicReflectionCapabilities = (function () {\n    /**\n     * @param {?} staticDelegate\n     */\n    function StaticAndDynamicReflectionCapabilities(staticDelegate) {\n        this.staticDelegate = staticDelegate;\n        this.dynamicDelegate = new _angular_core.ɵReflectionCapabilities();\n    }\n    /**\n     * @param {?} staticDelegate\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.install = function (staticDelegate) {\n        _angular_core.ɵreflector.updateCapabilities(new StaticAndDynamicReflectionCapabilities(staticDelegate));\n    };\n    /**\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.factory = function (type) { return this.dynamicDelegate.factory(type); };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n        return isStaticType(type) ? this.staticDelegate.hasLifecycleHook(type, lcProperty) :\n            this.dynamicDelegate.hasLifecycleHook(type, lcProperty);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.parameters = function (type) {\n        return isStaticType(type) ? this.staticDelegate.parameters(type) :\n            this.dynamicDelegate.parameters(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.annotations = function (type) {\n        return isStaticType(type) ? this.staticDelegate.annotations(type) :\n            this.dynamicDelegate.annotations(type);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n        return isStaticType(typeOrFunc) ? this.staticDelegate.propMetadata(typeOrFunc) :\n            this.dynamicDelegate.propMetadata(typeOrFunc);\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.getter = function (name) { return this.dynamicDelegate.getter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.setter = function (name) { return this.dynamicDelegate.setter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.method = function (name) { return this.dynamicDelegate.method(name); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.importUri = function (type) { return this.staticDelegate.importUri(type); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.resourceUri = function (type) { return this.staticDelegate.resourceUri(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n        return this.staticDelegate.resolveIdentifier(name, moduleUrl, members);\n    };\n    /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) {\n        if (isStaticType(enumIdentifier)) {\n            return this.staticDelegate.resolveEnum(enumIdentifier, name);\n        }\n        else {\n            return null;\n        }\n    };\n    return StaticAndDynamicReflectionCapabilities;\n}());\n/**\n * @param {?} type\n * @return {?}\n */\nfunction isStaticType(type) {\n    return typeof type === 'object' && type.name && type.filePath;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANGULAR_CORE = '@angular/core';\nvar HIDDEN_KEY = /^\\$.*\\$$/;\nvar IGNORE = {\n    __symbolic: 'ignore'\n};\n/**\n * @param {?} value\n * @return {?}\n */\nfunction shouldIgnore(value) {\n    return value && value.__symbolic == 'ignore';\n}\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nvar StaticReflector = (function () {\n    /**\n     * @param {?} symbolResolver\n     * @param {?=} knownMetadataClasses\n     * @param {?=} knownMetadataFunctions\n     * @param {?=} errorRecorder\n     */\n    function StaticReflector(symbolResolver, knownMetadataClasses, knownMetadataFunctions, errorRecorder) {\n        if (knownMetadataClasses === void 0) { knownMetadataClasses = []; }\n        if (knownMetadataFunctions === void 0) { knownMetadataFunctions = []; }\n        var _this = this;\n        this.symbolResolver = symbolResolver;\n        this.errorRecorder = errorRecorder;\n        this.annotationCache = new Map();\n        this.propertyCache = new Map();\n        this.parameterCache = new Map();\n        this.methodCache = new Map();\n        this.conversionMap = new Map();\n        this.initializeConversionMap();\n        knownMetadataClasses.forEach(function (kc) { return _this._registerDecoratorOrConstructor(_this.getStaticSymbol(kc.filePath, kc.name), kc.ctor); });\n        knownMetadataFunctions.forEach(function (kf) { return _this._registerFunction(_this.getStaticSymbol(kf.filePath, kf.name), kf.fn); });\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    StaticReflector.prototype.importUri = function (typeOrFunc) {\n        var /** @type {?} */ staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n        return staticSymbol ? staticSymbol.filePath : null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    StaticReflector.prototype.resourceUri = function (typeOrFunc) {\n        var /** @type {?} */ staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n        return this.symbolResolver.getResourcePath(staticSymbol);\n    };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @return {?}\n     */\n    StaticReflector.prototype.resolveIdentifier = function (name, moduleUrl, members) {\n        var /** @type {?} */ importSymbol = this.getStaticSymbol(moduleUrl, name);\n        var /** @type {?} */ rootSymbol = this.findDeclaration(moduleUrl, name);\n        if (importSymbol != rootSymbol) {\n            this.symbolResolver.recordImportAs(rootSymbol, importSymbol);\n        }\n        if (members && members.length) {\n            return this.getStaticSymbol(rootSymbol.filePath, rootSymbol.name, members);\n        }\n        return rootSymbol;\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.findDeclaration = function (moduleUrl, name, containingFile) {\n        return this.findSymbolDeclaration(this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    StaticReflector.prototype.findSymbolDeclaration = function (symbol) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n        if (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            return this.findSymbolDeclaration(resolvedSymbol.metadata);\n        }\n        else {\n            return symbol;\n        }\n    };\n    /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    StaticReflector.prototype.resolveEnum = function (enumIdentifier, name) {\n        var /** @type {?} */ staticSymbol = enumIdentifier;\n        var /** @type {?} */ members = (staticSymbol.members || []).concat(name);\n        return this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name, members);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.annotations = function (type) {\n        var /** @type {?} */ annotations = this.annotationCache.get(type);\n        if (!annotations) {\n            annotations = [];\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            if (classMetadata['extends']) {\n                var /** @type {?} */ parentType = this.trySimplify(type, classMetadata['extends']);\n                if (parentType && (parentType instanceof StaticSymbol)) {\n                    var /** @type {?} */ parentAnnotations = this.annotations(parentType);\n                    annotations.push.apply(annotations, parentAnnotations);\n                }\n            }\n            if (classMetadata['decorators']) {\n                var /** @type {?} */ ownAnnotations = this.simplify(type, classMetadata['decorators']);\n                annotations.push.apply(annotations, ownAnnotations);\n            }\n            this.annotationCache.set(type, annotations.filter(function (ann) { return !!ann; }));\n        }\n        return annotations;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.propMetadata = function (type) {\n        var _this = this;\n        var /** @type {?} */ propMetadata = this.propertyCache.get(type);\n        if (!propMetadata) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            propMetadata = {};\n            if (classMetadata['extends']) {\n                var /** @type {?} */ parentType = this.simplify(type, classMetadata['extends']);\n                if (parentType instanceof StaticSymbol) {\n                    var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentType);\n                    Object.keys(parentPropMetadata_1).forEach(function (parentProp) {\n                        propMetadata[parentProp] = parentPropMetadata_1[parentProp];\n                    });\n                }\n            }\n            var /** @type {?} */ members_1 = classMetadata['members'] || {};\n            Object.keys(members_1).forEach(function (propName) {\n                var /** @type {?} */ propData = members_1[propName];\n                var /** @type {?} */ prop = ((propData))\n                    .find(function (a) { return a['__symbolic'] == 'property' || a['__symbolic'] == 'method'; });\n                var /** @type {?} */ decorators = [];\n                if (propMetadata[propName]) {\n                    decorators.push.apply(decorators, propMetadata[propName]);\n                }\n                propMetadata[propName] = decorators;\n                if (prop && prop['decorators']) {\n                    decorators.push.apply(decorators, _this.simplify(type, prop['decorators']));\n                }\n            });\n            this.propertyCache.set(type, propMetadata);\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.parameters = function (type) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"parameters received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return [];\n        }\n        try {\n            var /** @type {?} */ parameters_1 = this.parameterCache.get(type);\n            if (!parameters_1) {\n                var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n                var /** @type {?} */ members = classMetadata ? classMetadata['members'] : null;\n                var /** @type {?} */ ctorData = members ? members['__ctor__'] : null;\n                if (ctorData) {\n                    var /** @type {?} */ ctor = ((ctorData)).find(function (a) { return a['__symbolic'] == 'constructor'; });\n                    var /** @type {?} */ parameterTypes = (this.simplify(type, ctor['parameters'] || []));\n                    var /** @type {?} */ parameterDecorators_1 = (this.simplify(type, ctor['parameterDecorators'] || []));\n                    parameters_1 = [];\n                    parameterTypes.forEach(function (paramType, index) {\n                        var /** @type {?} */ nestedResult = [];\n                        if (paramType) {\n                            nestedResult.push(paramType);\n                        }\n                        var /** @type {?} */ decorators = parameterDecorators_1 ? parameterDecorators_1[index] : null;\n                        if (decorators) {\n                            nestedResult.push.apply(nestedResult, decorators);\n                        }\n                        parameters_1.push(nestedResult);\n                    });\n                }\n                else if (classMetadata['extends']) {\n                    var /** @type {?} */ parentType = this.simplify(type, classMetadata['extends']);\n                    if (parentType instanceof StaticSymbol) {\n                        parameters_1 = this.parameters(parentType);\n                    }\n                }\n                if (!parameters_1) {\n                    parameters_1 = [];\n                }\n                this.parameterCache.set(type, parameters_1);\n            }\n            return parameters_1;\n        }\n        catch (e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype._methodNames = function (type) {\n        var /** @type {?} */ methodNames = this.methodCache.get(type);\n        if (!methodNames) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            methodNames = {};\n            if (classMetadata['extends']) {\n                var /** @type {?} */ parentType = this.simplify(type, classMetadata['extends']);\n                if (parentType instanceof StaticSymbol) {\n                    var /** @type {?} */ parentMethodNames_1 = this._methodNames(parentType);\n                    Object.keys(parentMethodNames_1).forEach(function (parentProp) {\n                        methodNames[parentProp] = parentMethodNames_1[parentProp];\n                    });\n                }\n            }\n            var /** @type {?} */ members_2 = classMetadata['members'] || {};\n            Object.keys(members_2).forEach(function (propName) {\n                var /** @type {?} */ propData = members_2[propName];\n                var /** @type {?} */ isMethod = ((propData)).some(function (a) { return a['__symbolic'] == 'method'; });\n                methodNames[propName] = methodNames[propName] || isMethod;\n            });\n            this.methodCache.set(type, methodNames);\n        }\n        return methodNames;\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    StaticReflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"hasLifecycleHook received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n        }\n        try {\n            return !!this._methodNames(type)[lcProperty];\n        }\n        catch (e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    StaticReflector.prototype._registerDecoratorOrConstructor = function (type, ctor) {\n        this.conversionMap.set(type, function (context, args) { return new (ctor.bind.apply(ctor, [void 0].concat(args)))(); });\n    };\n    /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    StaticReflector.prototype._registerFunction = function (type, fn) {\n        this.conversionMap.set(type, function (context, args) { return fn.apply(undefined, args); });\n    };\n    /**\n     * @return {?}\n     */\n    StaticReflector.prototype.initializeConversionMap = function () {\n        this.injectionToken = this.findDeclaration(ANGULAR_CORE, 'InjectionToken');\n        this.opaqueToken = this.findDeclaration(ANGULAR_CORE, 'OpaqueToken');\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), _angular_core.Host);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Injectable'), _angular_core.Injectable);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), _angular_core.Self);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), _angular_core.SkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Inject'), _angular_core.Inject);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), _angular_core.Optional);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Attribute'), _angular_core.Attribute);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChild'), _angular_core.ContentChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChildren'), _angular_core.ContentChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChild'), _angular_core.ViewChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChildren'), _angular_core.ViewChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Input'), _angular_core.Input);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Output'), _angular_core.Output);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Pipe'), _angular_core.Pipe);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostBinding'), _angular_core.HostBinding);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostListener'), _angular_core.HostListener);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Directive'), _angular_core.Directive);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Component'), _angular_core.Component);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'NgModule'), _angular_core.NgModule);\n        // Note: Some metadata classes can be used directly with Provider.deps.\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), _angular_core.Host);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), _angular_core.Self);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), _angular_core.SkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), _angular_core.Optional);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'trigger'), _angular_core.trigger);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'state'), _angular_core.state);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'transition'), _angular_core.transition);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'style'), _angular_core.style);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'animate'), _angular_core.animate);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'keyframes'), _angular_core.keyframes);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'sequence'), _angular_core.sequence);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'group'), _angular_core.group);\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticReflector.prototype.getStaticSymbol = function (declarationFile, name, members) {\n        return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n    };\n    /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticReflector.prototype.reportError = function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.trySimplify = function (context, value) {\n        var /** @type {?} */ originalRecorder = this.errorRecorder;\n        this.errorRecorder = function (error, fileName) { };\n        var /** @type {?} */ result = this.simplify(context, value);\n        this.errorRecorder = originalRecorder;\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.simplify = function (context, value) {\n        var _this = this;\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ scope = BindingScope.empty;\n        var /** @type {?} */ calling = new Map();\n        /**\n         * @param {?} context\n         * @param {?} value\n         * @param {?} depth\n         * @return {?}\n         */\n        function simplifyInContext(context, value, depth) {\n            /**\n             * @param {?} staticSymbol\n             * @return {?}\n             */\n            function resolveReferenceValue(staticSymbol) {\n                var /** @type {?} */ resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n                return resolvedSymbol ? resolvedSymbol.metadata : null;\n            }\n            /**\n             * @param {?} functionSymbol\n             * @param {?} targetFunction\n             * @param {?} args\n             * @return {?}\n             */\n            function simplifyCall(functionSymbol, targetFunction, args) {\n                if (targetFunction && targetFunction['__symbolic'] == 'function') {\n                    if (calling.get(functionSymbol)) {\n                        throw new Error('Recursion not supported');\n                    }\n                    calling.set(functionSymbol, true);\n                    try {\n                        var /** @type {?} */ value_1 = targetFunction['value'];\n                        if (value_1 && (depth != 0 || value_1.__symbolic != 'error')) {\n                            var /** @type {?} */ parameters = targetFunction['parameters'];\n                            var /** @type {?} */ defaults = targetFunction.defaults;\n                            args = args.map(function (arg) { return simplifyInContext(context, arg, depth + 1); })\n                                .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                            if (defaults && defaults.length > args.length) {\n                                args.push.apply(args, defaults.slice(args.length).map(function (value) { return simplify(value); }));\n                            }\n                            var /** @type {?} */ functionScope = BindingScope.build();\n                            for (var /** @type {?} */ i = 0; i < parameters.length; i++) {\n                                functionScope.define(parameters[i], args[i]);\n                            }\n                            var /** @type {?} */ oldScope = scope;\n                            var /** @type {?} */ result_1;\n                            try {\n                                scope = functionScope.done();\n                                result_1 = simplifyInContext(functionSymbol, value_1, depth + 1);\n                            }\n                            finally {\n                                scope = oldScope;\n                            }\n                            return result_1;\n                        }\n                    }\n                    finally {\n                        calling.delete(functionSymbol);\n                    }\n                }\n                if (depth === 0) {\n                    // If depth is 0 we are evaluating the top level expression that is describing element\n                    // decorator. In this case, it is a decorator we don't understand, such as a custom\n                    // non-angular decorator, and we should just ignore it.\n                    return IGNORE;\n                }\n                return simplify({ __symbolic: 'error', message: 'Function call not supported', context: functionSymbol });\n            }\n            /**\n             * @param {?} expression\n             * @return {?}\n             */\n            function simplify(expression) {\n                if (isPrimitive(expression)) {\n                    return expression;\n                }\n                if (expression instanceof Array) {\n                    var /** @type {?} */ result_2 = [];\n                    for (var _i = 0, _a = ((expression)); _i < _a.length; _i++) {\n                        var item = _a[_i];\n                        // Check for a spread expression\n                        if (item && item.__symbolic === 'spread') {\n                            var /** @type {?} */ spreadArray = simplify(item.expression);\n                            if (Array.isArray(spreadArray)) {\n                                for (var _b = 0, spreadArray_1 = spreadArray; _b < spreadArray_1.length; _b++) {\n                                    var spreadItem = spreadArray_1[_b];\n                                    result_2.push(spreadItem);\n                                }\n                                continue;\n                            }\n                        }\n                        var /** @type {?} */ value_2 = simplify(item);\n                        if (shouldIgnore(value_2)) {\n                            continue;\n                        }\n                        result_2.push(value_2);\n                    }\n                    return result_2;\n                }\n                if (expression instanceof StaticSymbol) {\n                    // Stop simplification at builtin symbols\n                    if (expression === self.injectionToken || expression === self.opaqueToken ||\n                        self.conversionMap.has(expression)) {\n                        return expression;\n                    }\n                    else {\n                        var /** @type {?} */ staticSymbol = expression;\n                        var /** @type {?} */ declarationValue = resolveReferenceValue(staticSymbol);\n                        if (declarationValue) {\n                            return simplifyInContext(staticSymbol, declarationValue, depth + 1);\n                        }\n                        else {\n                            return staticSymbol;\n                        }\n                    }\n                }\n                if (expression) {\n                    if (expression['__symbolic']) {\n                        var /** @type {?} */ staticSymbol = void 0;\n                        switch (expression['__symbolic']) {\n                            case 'binop':\n                                var /** @type {?} */ left = simplify(expression['left']);\n                                if (shouldIgnore(left))\n                                    return left;\n                                var /** @type {?} */ right = simplify(expression['right']);\n                                if (shouldIgnore(right))\n                                    return right;\n                                switch (expression['operator']) {\n                                    case '&&':\n                                        return left && right;\n                                    case '||':\n                                        return left || right;\n                                    case '|':\n                                        return left | right;\n                                    case '^':\n                                        return left ^ right;\n                                    case '&':\n                                        return left & right;\n                                    case '==':\n                                        return left == right;\n                                    case '!=':\n                                        return left != right;\n                                    case '===':\n                                        return left === right;\n                                    case '!==':\n                                        return left !== right;\n                                    case '<':\n                                        return left < right;\n                                    case '>':\n                                        return left > right;\n                                    case '<=':\n                                        return left <= right;\n                                    case '>=':\n                                        return left >= right;\n                                    case '<<':\n                                        return left << right;\n                                    case '>>':\n                                        return left >> right;\n                                    case '+':\n                                        return left + right;\n                                    case '-':\n                                        return left - right;\n                                    case '*':\n                                        return left * right;\n                                    case '/':\n                                        return left / right;\n                                    case '%':\n                                        return left % right;\n                                }\n                                return null;\n                            case 'if':\n                                var /** @type {?} */ condition = simplify(expression['condition']);\n                                return condition ? simplify(expression['thenExpression']) :\n                                    simplify(expression['elseExpression']);\n                            case 'pre':\n                                var /** @type {?} */ operand = simplify(expression['operand']);\n                                if (shouldIgnore(operand))\n                                    return operand;\n                                switch (expression['operator']) {\n                                    case '+':\n                                        return operand;\n                                    case '-':\n                                        return -operand;\n                                    case '!':\n                                        return !operand;\n                                    case '~':\n                                        return ~operand;\n                                }\n                                return null;\n                            case 'index':\n                                var /** @type {?} */ indexTarget = simplify(expression['expression']);\n                                var /** @type {?} */ index = simplify(expression['index']);\n                                if (indexTarget && isPrimitive(index))\n                                    return indexTarget[index];\n                                return null;\n                            case 'select':\n                                var /** @type {?} */ member = expression['member'];\n                                var /** @type {?} */ selectContext = context;\n                                var /** @type {?} */ selectTarget = simplify(expression['expression']);\n                                if (selectTarget instanceof StaticSymbol) {\n                                    var /** @type {?} */ members = selectTarget.members.concat(member);\n                                    selectContext =\n                                        self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                                    var /** @type {?} */ declarationValue = resolveReferenceValue(selectContext);\n                                    if (declarationValue) {\n                                        return simplifyInContext(selectContext, declarationValue, depth + 1);\n                                    }\n                                    else {\n                                        return selectContext;\n                                    }\n                                }\n                                if (selectTarget && isPrimitive(member))\n                                    return simplifyInContext(selectContext, selectTarget[member], depth + 1);\n                                return null;\n                            case 'reference':\n                                // Note: This only has to deal with variable references,\n                                // as symbol references have been converted into StaticSymbols already\n                                // in the StaticSymbolResolver!\n                                var /** @type {?} */ name = expression['name'];\n                                var /** @type {?} */ localValue = scope.resolve(name);\n                                if (localValue != BindingScope.missing) {\n                                    return localValue;\n                                }\n                                break;\n                            case 'class':\n                                return context;\n                            case 'function':\n                                return context;\n                            case 'new':\n                            case 'call':\n                                // Determine if the function is a built-in conversion\n                                staticSymbol = simplifyInContext(context, expression['expression'], depth + 1);\n                                if (staticSymbol instanceof StaticSymbol) {\n                                    if (staticSymbol === self.injectionToken || staticSymbol === self.opaqueToken) {\n                                        // if somebody calls new InjectionToken, don't create an InjectionToken,\n                                        // but rather return the symbol to which the InjectionToken is assigned to.\n                                        return context;\n                                    }\n                                    var /** @type {?} */ argExpressions = expression['arguments'] || [];\n                                    var /** @type {?} */ converter = self.conversionMap.get(staticSymbol);\n                                    if (converter) {\n                                        var /** @type {?} */ args = argExpressions.map(function (arg) { return simplifyInContext(context, arg, depth + 1); })\n                                            .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                                        return converter(context, args);\n                                    }\n                                    else {\n                                        // Determine if the function is one we can simplify.\n                                        var /** @type {?} */ targetFunction = resolveReferenceValue(staticSymbol);\n                                        return simplifyCall(staticSymbol, targetFunction, argExpressions);\n                                    }\n                                }\n                                break;\n                            case 'error':\n                                var /** @type {?} */ message = produceErrorMessage(expression);\n                                if (expression['line']) {\n                                    message =\n                                        message + \" (position \" + (expression['line'] + 1) + \":\" + (expression['character'] + 1) + \" in the original .ts file)\";\n                                    self.reportError(positionalError(message, context.filePath, expression['line'], expression['character']), context);\n                                }\n                                else {\n                                    self.reportError(new Error(message), context);\n                                }\n                                return IGNORE;\n                            case 'ignore':\n                                return expression;\n                        }\n                        return null;\n                    }\n                    return mapStringMap(expression, function (value, name) { return simplify(value); });\n                }\n                return IGNORE;\n            }\n            try {\n                return simplify(value);\n            }\n            catch (e) {\n                var /** @type {?} */ members = context.members.length ? \".\" + context.members.join('.') : '';\n                var /** @type {?} */ message = e.message + \", resolving symbol \" + context.name + members + \" in \" + context.filePath;\n                if (e.fileName) {\n                    throw positionalError(message, e.fileName, e.line, e.column);\n                }\n                throw syntaxError(message);\n            }\n        }\n        var /** @type {?} */ recordedSimplifyInContext = function (context, value, depth) {\n            try {\n                return simplifyInContext(context, value, depth);\n            }\n            catch (e) {\n                _this.reportError(e, context);\n            }\n        };\n        var /** @type {?} */ result = this.errorRecorder ? recordedSimplifyInContext(context, value, 0) :\n            simplifyInContext(context, value, 0);\n        if (shouldIgnore(result)) {\n            return undefined;\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.getTypeMetadata = function (type) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n        return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n            { __symbolic: 'class' };\n    };\n    return StaticReflector;\n}());\n/**\n * @param {?} error\n * @return {?}\n */\nfunction expandedMessage(error) {\n    switch (error.message) {\n        case 'Reference to non-exported class':\n            if (error.context && error.context.className) {\n                return \"Reference to a non-exported class \" + error.context.className + \". Consider exporting the class\";\n            }\n            break;\n        case 'Variable not initialized':\n            return 'Only initialized variables and constants can be referenced because the value of this variable is needed by the template compiler';\n        case 'Destructuring not supported':\n            return 'Referencing an exported destructured variable or constant is not supported by the template compiler. Consider simplifying this to avoid destructuring';\n        case 'Could not resolve type':\n            if (error.context && error.context.typeName) {\n                return \"Could not resolve type \" + error.context.typeName;\n            }\n            break;\n        case 'Function call not supported':\n            var /** @type {?} */ prefix = error.context && error.context.name ? \"Calling function '\" + error.context.name + \"', f\" : 'F';\n            return prefix +\n                'unction calls are not supported. Consider replacing the function or lambda with a reference to an exported function';\n        case 'Reference to a local symbol':\n            if (error.context && error.context.name) {\n                return \"Reference to a local (non-exported) symbol '\" + error.context.name + \"'. Consider exporting the symbol\";\n            }\n            break;\n    }\n    return error.message;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction produceErrorMessage(error) {\n    return \"Error encountered resolving symbol values statically. \" + expandedMessage(error);\n}\n/**\n * @param {?} input\n * @param {?} transform\n * @return {?}\n */\nfunction mapStringMap(input, transform) {\n    if (!input)\n        return {};\n    var /** @type {?} */ result = {};\n    Object.keys(input).forEach(function (key) {\n        var /** @type {?} */ value = transform(input[key], key);\n        if (!shouldIgnore(value)) {\n            if (HIDDEN_KEY.test(key)) {\n                Object.defineProperty(result, key, { enumerable: false, configurable: true, value: value });\n            }\n            else {\n                result[key] = value;\n            }\n        }\n    });\n    return result;\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPrimitive(o) {\n    return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\n/**\n * @abstract\n */\nvar BindingScope = (function () {\n    function BindingScope() {\n    }\n    /**\n     * @abstract\n     * @param {?} name\n     * @return {?}\n     */\n    BindingScope.prototype.resolve = function (name) { };\n    /**\n     * @return {?}\n     */\n    BindingScope.build = function () {\n        var /** @type {?} */ current = new Map();\n        return {\n            define: function (name, value) {\n                current.set(name, value);\n                return this;\n            },\n            done: function () {\n                return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n            }\n        };\n    };\n    return BindingScope;\n}());\nBindingScope.missing = {};\nBindingScope.empty = { resolve: function (name) { return BindingScope.missing; } };\nvar PopulatedScope = (function (_super) {\n    __extends(PopulatedScope, _super);\n    /**\n     * @param {?} bindings\n     */\n    function PopulatedScope(bindings) {\n        var _this = _super.call(this) || this;\n        _this.bindings = bindings;\n        return _this;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PopulatedScope.prototype.resolve = function (name) {\n        return this.bindings.has(name) ? this.bindings.get(name) : BindingScope.missing;\n    };\n    return PopulatedScope;\n}(BindingScope));\n/**\n * @param {?} message\n * @param {?} fileName\n * @param {?} line\n * @param {?} column\n * @return {?}\n */\nfunction positionalError(message, fileName, line, column) {\n    var /** @type {?} */ result = new Error(message);\n    ((result)).fileName = fileName;\n    ((result)).line = line;\n    ((result)).column = column;\n    return result;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ResolvedStaticSymbol = (function () {\n    /**\n     * @param {?} symbol\n     * @param {?} metadata\n     */\n    function ResolvedStaticSymbol(symbol, metadata) {\n        this.symbol = symbol;\n        this.metadata = metadata;\n    }\n    return ResolvedStaticSymbol;\n}());\nvar SUPPORTED_SCHEMA_VERSION = 3;\n/**\n * This class is responsible for loading metadata per symbol,\n * and normalizing references between symbols.\n *\n * Internally, it only uses symbols without members,\n * and deduces the values for symbols with members based\n * on these symbols.\n */\nvar StaticSymbolResolver = (function () {\n    /**\n     * @param {?} host\n     * @param {?} staticSymbolCache\n     * @param {?} summaryResolver\n     * @param {?=} errorRecorder\n     */\n    function StaticSymbolResolver(host, staticSymbolCache, summaryResolver, errorRecorder) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryResolver = summaryResolver;\n        this.errorRecorder = errorRecorder;\n        this.metadataCache = new Map();\n        this.resolvedSymbols = new Map();\n        this.resolvedFilePaths = new Set();\n        this.importAs = new Map();\n        this.symbolResourcePaths = new Map();\n    }\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveSymbol = function (staticSymbol) {\n        if (staticSymbol.members.length > 0) {\n            return this._resolveSymbolMembers(staticSymbol);\n        }\n        var /** @type {?} */ result = this.resolvedSymbols.get(staticSymbol);\n        if (result) {\n            return result;\n        }\n        result = this._resolveSymbolFromSummary(staticSymbol);\n        if (result) {\n            return result;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        this._createSymbolsOf(staticSymbol.filePath);\n        result = this.resolvedSymbols.get(staticSymbol);\n        return result;\n    };\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getImportAs = function (staticSymbol) {\n        if (staticSymbol.members.length) {\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(baseImportAs.filePath, baseImportAs.name, staticSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ result = this.summaryResolver.getImportAs(staticSymbol);\n        if (!result) {\n            result = this.importAs.get(staticSymbol);\n        }\n        return result;\n    };\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getResourcePath = function (staticSymbol) {\n        return this.symbolResourcePaths.get(staticSymbol) || staticSymbol.filePath;\n    };\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getTypeArity = function (staticSymbol) {\n        // If the file is a factory file, don't resolve the symbol as doing so would\n        // cause the metadata for an factory file to be loaded which doesn't exist.\n        // All references to generated classes must include the correct arity whenever\n        // generating code.\n        if (isNgFactoryFile(staticSymbol.filePath)) {\n            return null;\n        }\n        var /** @type {?} */ resolvedSymbol = this.resolveSymbol(staticSymbol);\n        while (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            resolvedSymbol = this.resolveSymbol(resolvedSymbol.metadata);\n        }\n        return (resolvedSymbol && resolvedSymbol.metadata && resolvedSymbol.metadata.arity) || null;\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordImportAs = function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        this.importAs.set(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolMembers = function (staticSymbol) {\n        var /** @type {?} */ members = staticSymbol.members;\n        var /** @type {?} */ baseResolvedSymbol = this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name));\n        if (!baseResolvedSymbol) {\n            return null;\n        }\n        var /** @type {?} */ baseMetadata = baseResolvedSymbol.metadata;\n        if (baseMetadata instanceof StaticSymbol) {\n            return new ResolvedStaticSymbol(staticSymbol, this.getStaticSymbol(baseMetadata.filePath, baseMetadata.name, members));\n        }\n        else if (baseMetadata && baseMetadata.__symbolic === 'class') {\n            if (baseMetadata.statics && members.length === 1) {\n                return new ResolvedStaticSymbol(staticSymbol, baseMetadata.statics[members[0]]);\n            }\n        }\n        else {\n            var /** @type {?} */ value = baseMetadata;\n            for (var /** @type {?} */ i = 0; i < members.length && value; i++) {\n                value = value[members[i]];\n            }\n            return new ResolvedStaticSymbol(staticSymbol, value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolFromSummary = function (staticSymbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(staticSymbol);\n        return summary ? new ResolvedStaticSymbol(staticSymbol, summary.metadata) : null;\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getStaticSymbol = function (declarationFile, name, members) {\n        return this.staticSymbolCache.get(declarationFile, name, members);\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolsOf = function (filePath) {\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        var /** @type {?} */ symbols = new Set(this.summaryResolver.getSymbolsOf(filePath));\n        this._createSymbolsOf(filePath);\n        this.resolvedSymbols.forEach(function (resolvedSymbol) {\n            if (resolvedSymbol.symbol.filePath === filePath) {\n                symbols.add(resolvedSymbol.symbol);\n            }\n        });\n        return Array.from(symbols);\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._createSymbolsOf = function (filePath) {\n        var _this = this;\n        if (this.resolvedFilePaths.has(filePath)) {\n            return;\n        }\n        this.resolvedFilePaths.add(filePath);\n        var /** @type {?} */ resolvedSymbols = [];\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['metadata']) {\n            // handle direct declarations of the symbol\n            var /** @type {?} */ topLevelSymbolNames_1 = new Set(Object.keys(metadata['metadata']).map(unescapeIdentifier));\n            var /** @type {?} */ origins_1 = metadata['origins'] || {};\n            Object.keys(metadata['metadata']).forEach(function (metadataKey) {\n                var /** @type {?} */ symbolMeta = metadata['metadata'][metadataKey];\n                var /** @type {?} */ name = unescapeIdentifier(metadataKey);\n                var /** @type {?} */ symbol = _this.getStaticSymbol(filePath, name);\n                var /** @type {?} */ importSymbol = undefined;\n                if (metadata['importAs']) {\n                    // Index bundle indexes should use the importAs module name instead of a reference\n                    // to the .d.ts file directly.\n                    importSymbol = _this.getStaticSymbol(metadata['importAs'], name);\n                    _this.recordImportAs(symbol, importSymbol);\n                }\n                var /** @type {?} */ origin = origins_1[metadataKey];\n                if (origin) {\n                    // If the symbol is from a bundled index, use the declaration location of the\n                    // symbol so relative references (such as './my.html') will be calculated\n                    // correctly.\n                    var /** @type {?} */ originFilePath = _this.resolveModule(origin, filePath);\n                    if (!originFilePath) {\n                        _this.reportError(new Error(\"Couldn't resolve original symbol for \" + origin + \" from \" + filePath), null);\n                    }\n                    else {\n                        _this.symbolResourcePaths.set(symbol, originFilePath);\n                    }\n                }\n                resolvedSymbols.push(_this.createResolvedSymbol(symbol, filePath, topLevelSymbolNames_1, symbolMeta));\n            });\n        }\n        // handle the symbols in one of the re-export location\n        if (metadata['exports']) {\n            var _loop_1 = function (moduleExport) {\n                // handle the symbols in the list of explicitly re-exported symbols.\n                if (moduleExport.export) {\n                    moduleExport.export.forEach(function (exportSymbol) {\n                        var /** @type {?} */ symbolName;\n                        if (typeof exportSymbol === 'string') {\n                            symbolName = exportSymbol;\n                        }\n                        else {\n                            symbolName = exportSymbol.as;\n                        }\n                        symbolName = unescapeIdentifier(symbolName);\n                        var /** @type {?} */ symName = symbolName;\n                        if (typeof exportSymbol !== 'string') {\n                            symName = unescapeIdentifier(exportSymbol.name);\n                        }\n                        var /** @type {?} */ resolvedModule = _this.resolveModule(moduleExport.from, filePath);\n                        if (resolvedModule) {\n                            var /** @type {?} */ targetSymbol = _this.getStaticSymbol(resolvedModule, symName);\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, symbolName);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        }\n                    });\n                }\n                else {\n                    // handle the symbols via export * directives.\n                    var /** @type {?} */ resolvedModule = this_1.resolveModule(moduleExport.from, filePath);\n                    if (resolvedModule) {\n                        var /** @type {?} */ nestedExports = this_1.getSymbolsOf(resolvedModule);\n                        nestedExports.forEach(function (targetSymbol) {\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, targetSymbol.name);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        });\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var _i = 0, _a = metadata['exports']; _i < _a.length; _i++) {\n                var moduleExport = _a[_i];\n                _loop_1(/** @type {?} */ moduleExport);\n            }\n        }\n        resolvedSymbols.forEach(function (resolvedSymbol) { return _this.resolvedSymbols.set(resolvedSymbol.symbol, resolvedSymbol); });\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createResolvedSymbol = function (sourceSymbol, topLevelPath, topLevelSymbolNames, metadata) {\n        var /** @type {?} */ self = this;\n        var ReferenceTransformer = (function (_super) {\n            __extends(ReferenceTransformer, _super);\n            function ReferenceTransformer() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            ReferenceTransformer.prototype.visitStringMap = function (map, functionParams) {\n                var /** @type {?} */ symbolic = map['__symbolic'];\n                if (symbolic === 'function') {\n                    var /** @type {?} */ oldLen = functionParams.length;\n                    functionParams.push.apply(functionParams, (map['parameters'] || []));\n                    var /** @type {?} */ result = _super.prototype.visitStringMap.call(this, map, functionParams);\n                    functionParams.length = oldLen;\n                    return result;\n                }\n                else if (symbolic === 'reference') {\n                    var /** @type {?} */ module_1 = map['module'];\n                    var /** @type {?} */ name = map['name'] ? unescapeIdentifier(map['name']) : map['name'];\n                    if (!name) {\n                        return null;\n                    }\n                    var /** @type {?} */ filePath = void 0;\n                    if (module_1) {\n                        filePath = self.resolveModule(module_1, sourceSymbol.filePath);\n                        if (!filePath) {\n                            return {\n                                __symbolic: 'error',\n                                message: \"Could not resolve \" + module_1 + \" relative to \" + sourceSymbol.filePath + \".\"\n                            };\n                        }\n                        return self.getStaticSymbol(filePath, name);\n                    }\n                    else if (functionParams.indexOf(name) >= 0) {\n                        // reference to a function parameter\n                        return { __symbolic: 'reference', name: name };\n                    }\n                    else {\n                        if (topLevelSymbolNames.has(name)) {\n                            return self.getStaticSymbol(topLevelPath, name);\n                        }\n                        // ambient value\n                        null;\n                    }\n                }\n                else {\n                    return _super.prototype.visitStringMap.call(this, map, functionParams);\n                }\n            };\n            return ReferenceTransformer;\n        }(ValueTransformer));\n        var /** @type {?} */ transformedMeta = visitValue(metadata, new ReferenceTransformer(), []);\n        if (transformedMeta instanceof StaticSymbol) {\n            return this.createExport(sourceSymbol, transformedMeta);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createExport = function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath)) {\n            // This case is for an ng library importing symbols from a plain ts library\n            // transitively.\n            // Note: We rely on the fact that we discover symbols in the direction\n            // from source files to library files\n            this.importAs.set(targetSymbol, this.getImportAs(sourceSymbol) || sourceSymbol);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.reportError = function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getModuleMetadata = function (module) {\n        var /** @type {?} */ moduleMetadata = this.metadataCache.get(module);\n        if (!moduleMetadata) {\n            var /** @type {?} */ moduleMetadatas = this.host.getMetadataFor(module);\n            if (moduleMetadatas) {\n                var /** @type {?} */ maxVersion_1 = -1;\n                moduleMetadatas.forEach(function (md) {\n                    if (md['version'] > maxVersion_1) {\n                        maxVersion_1 = md['version'];\n                        moduleMetadata = md;\n                    }\n                });\n            }\n            if (!moduleMetadata) {\n                moduleMetadata =\n                    { __symbolic: 'module', version: SUPPORTED_SCHEMA_VERSION, module: module, metadata: {} };\n            }\n            if (moduleMetadata['version'] != SUPPORTED_SCHEMA_VERSION) {\n                var /** @type {?} */ errorMessage = moduleMetadata['version'] == 2 ?\n                    \"Unsupported metadata version \" + moduleMetadata['version'] + \" for module \" + module + \". This module should be compiled with a newer version of ngc\" :\n                    \"Metadata version mismatch for module \" + module + \", found version \" + moduleMetadata['version'] + \", expected \" + SUPPORTED_SCHEMA_VERSION;\n                this.reportError(new Error(errorMessage), null);\n            }\n            this.metadataCache.set(module, moduleMetadata);\n        }\n        return moduleMetadata;\n    };\n    /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolByModule = function (module, symbolName, containingFile) {\n        var /** @type {?} */ filePath = this.resolveModule(module, containingFile);\n        if (!filePath) {\n            this.reportError(new Error(\"Could not resolve module \" + module + (containingFile ? \" relative to $ {\\n            containingFile\\n          } \" : '')), null);\n            return this.getStaticSymbol(\"ERROR:\" + module, symbolName);\n        }\n        return this.getStaticSymbol(filePath, symbolName);\n    };\n    /**\n     * @param {?} module\n     * @param {?} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveModule = function (module, containingFile) {\n        try {\n            return this.host.moduleNameToFileName(module, containingFile);\n        }\n        catch (e) {\n            console.error(\"Could not resolve module '\" + module + \"' relative to file \" + containingFile);\n            this.reportError(e, null, containingFile);\n        }\n    };\n    return StaticSymbolResolver;\n}());\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction unescapeIdentifier(identifier) {\n    return identifier.startsWith('___') ? identifier.substr(1) : identifier;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AotSummaryResolver = (function () {\n    /**\n     * @param {?} host\n     * @param {?} staticSymbolCache\n     */\n    function AotSummaryResolver(host, staticSymbolCache) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryCache = new Map();\n        this.loadedFilePaths = new Set();\n        this.importAs = new Map();\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.isLibraryFile = function (filePath) {\n        // Note: We need to strip the .ngfactory. file path,\n        // so this method also works for generated files\n        // (for which host.isSourceFile will always return false).\n        return !this.host.isSourceFile(stripNgFactory(filePath));\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getLibraryFileName = function (filePath) { return this.host.getOutputFileName(filePath); };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.resolveSummary = function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        var /** @type {?} */ summary = this.summaryCache.get(staticSymbol);\n        if (!summary) {\n            this._loadSummaryFile(staticSymbol.filePath);\n            summary = this.summaryCache.get(staticSymbol);\n        }\n        return summary;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getSymbolsOf = function (filePath) {\n        this._loadSummaryFile(filePath);\n        return Array.from(this.summaryCache.keys()).filter(function (symbol) { return symbol.filePath === filePath; });\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getImportAs = function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        return this.importAs.get(staticSymbol);\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype._loadSummaryFile = function (filePath) {\n        var _this = this;\n        if (this.loadedFilePaths.has(filePath)) {\n            return;\n        }\n        this.loadedFilePaths.add(filePath);\n        if (this.isLibraryFile(filePath)) {\n            var /** @type {?} */ summaryFilePath = summaryFileName(filePath);\n            var /** @type {?} */ json = void 0;\n            try {\n                json = this.host.loadSummary(summaryFilePath);\n            }\n            catch (e) {\n                console.error(\"Error loading summary file \" + summaryFilePath);\n                throw e;\n            }\n            if (json) {\n                var _a = deserializeSummaries(this.staticSymbolCache, json), summaries = _a.summaries, importAs = _a.importAs;\n                summaries.forEach(function (summary) { return _this.summaryCache.set(summary.symbol, summary); });\n                importAs.forEach(function (importAs) {\n                    _this.importAs.set(importAs.symbol, _this.staticSymbolCache.get(ngfactoryFilePath(filePath), importAs.importAs));\n                });\n            }\n        }\n    };\n    return AotSummaryResolver;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a new AotCompiler based on options and a host.\n * @param {?} compilerHost\n * @param {?} options\n * @return {?}\n */\nfunction createAotCompiler(compilerHost, options) {\n    var /** @type {?} */ translations = options.translations || '';\n    var /** @type {?} */ urlResolver = createOfflineCompileUrlResolver();\n    var /** @type {?} */ symbolCache = new StaticSymbolCache();\n    var /** @type {?} */ summaryResolver = new AotSummaryResolver(compilerHost, symbolCache);\n    var /** @type {?} */ symbolResolver = new StaticSymbolResolver(compilerHost, symbolCache, summaryResolver);\n    var /** @type {?} */ staticReflector = new StaticReflector(symbolResolver);\n    StaticAndDynamicReflectionCapabilities.install(staticReflector);\n    var /** @type {?} */ console = new _angular_core.ɵConsole();\n    var /** @type {?} */ htmlParser = new I18NHtmlParser(new HtmlParser(), translations, options.i18nFormat, _angular_core.MissingTranslationStrategy.Warning, console);\n    var /** @type {?} */ config = new CompilerConfig({\n        defaultEncapsulation: _angular_core.ViewEncapsulation.Emulated,\n        useJit: false,\n        enableLegacyTemplate: options.enableLegacyTemplate !== false,\n    });\n    var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return compilerHost.loadResource(url); } }, urlResolver, htmlParser, config);\n    var /** @type {?} */ expressionParser = new Parser(new Lexer());\n    var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n    var /** @type {?} */ tmplParser = new TemplateParser(config, expressionParser, elementSchemaRegistry, htmlParser, console, []);\n    var /** @type {?} */ resolver = new CompileMetadataResolver(config, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n    // TODO(vicb): do not pass options.i18nFormat here\n    var /** @type {?} */ importResolver = {\n        getImportAs: function (symbol) { return symbolResolver.getImportAs(symbol); },\n        fileNameToModuleName: function (fileName, containingFilePath) { return compilerHost.fileNameToModuleName(fileName, containingFilePath); },\n        getTypeArity: function (symbol) { return symbolResolver.getTypeArity(symbol); }\n    };\n    var /** @type {?} */ viewCompiler = new ViewCompiler(config, elementSchemaRegistry);\n    var /** @type {?} */ compiler = new AotCompiler(config, compilerHost, resolver, tmplParser, new StyleCompiler(urlResolver), viewCompiler, new NgModuleCompiler(), new TypeScriptEmitter(importResolver), summaryResolver, options.locale, options.i18nFormat, options.genFilePreamble, symbolResolver);\n    return { compiler: compiler, reflector: staticReflector };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} statements\n * @param {?} resultVars\n * @return {?}\n */\nfunction interpretStatements(statements, resultVars) {\n    var /** @type {?} */ stmtsWithReturn = statements.concat([new ReturnStatement(literalArr(resultVars.map(function (resultVar) { return variable(resultVar); })))]);\n    var /** @type {?} */ ctx = new _ExecutionContext(null, null, null, new Map());\n    var /** @type {?} */ visitor = new StatementInterpreter();\n    var /** @type {?} */ result = visitor.visitAllStatements(stmtsWithReturn, ctx);\n    return result != null ? result.value : null;\n}\n/**\n * @param {?} varNames\n * @param {?} varValues\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n    var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n    for (var /** @type {?} */ i = 0; i < varNames.length; i++) {\n        childCtx.vars.set(varNames[i], varValues[i]);\n    }\n    var /** @type {?} */ result = visitor.visitAllStatements(statements, childCtx);\n    return result ? result.value : null;\n}\nvar _ExecutionContext = (function () {\n    /**\n     * @param {?} parent\n     * @param {?} instance\n     * @param {?} className\n     * @param {?} vars\n     */\n    function _ExecutionContext(parent, instance, className, vars) {\n        this.parent = parent;\n        this.instance = instance;\n        this.className = className;\n        this.vars = vars;\n    }\n    /**\n     * @return {?}\n     */\n    _ExecutionContext.prototype.createChildWihtLocalVars = function () {\n        return new _ExecutionContext(this, this.instance, this.className, new Map());\n    };\n    return _ExecutionContext;\n}());\nvar ReturnValue = (function () {\n    /**\n     * @param {?} value\n     */\n    function ReturnValue(value) {\n        this.value = value;\n    }\n    return ReturnValue;\n}());\n/**\n * @param {?} _classStmt\n * @param {?} _ctx\n * @param {?} _visitor\n * @return {?}\n */\nfunction createDynamicClass(_classStmt, _ctx, _visitor) {\n    var /** @type {?} */ propertyDescriptors = {};\n    _classStmt.getters.forEach(function (getter) {\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[getter.name] = {\n            configurable: false,\n            get: function () {\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    _classStmt.methods.forEach(function (method) {\n        var /** @type {?} */ paramNames = method.params.map(function (param) { return param.name; });\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[method.name] = {\n            writable: false,\n            configurable: false,\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    var /** @type {?} */ ctorParamNames = _classStmt.constructorMethod.params.map(function (param) { return param.name; });\n    // Note: use `function` instead of arrow function to capture `this`\n    var /** @type {?} */ ctor = function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n        _classStmt.fields.forEach(function (field) { _this[field.name] = undefined; });\n        _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n    };\n    var /** @type {?} */ superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n    ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n    return ctor;\n}\nvar StatementInterpreter = (function () {\n    function StatementInterpreter() {\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    StatementInterpreter.prototype.debugAst = function (ast) { return debugOutputAstAsTypeScript(ast); };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        ctx.vars.set(stmt.name, stmt.value.visitExpression(this, ctx));\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteVarExpr = function (expr, ctx) {\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(expr.name)) {\n                currCtx.vars.set(expr.name, value);\n                return value;\n            }\n            currCtx = currCtx.parent;\n        }\n        throw new Error(\"Not declared variable \" + expr.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadVarExpr = function (ast, ctx) {\n        var /** @type {?} */ varName = ast.name;\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    return ctx.instance.__proto__;\n                case BuiltinVar.This:\n                    return ctx.instance;\n                case BuiltinVar.CatchError:\n                    varName = CATCH_ERROR_VAR$2;\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = CATCH_STACK_VAR$2;\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(varName)) {\n                return currCtx.vars.get(varName);\n            }\n            currCtx = currCtx.parent;\n        }\n        throw new Error(\"Not declared variable \" + varName);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteKeyExpr = function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ index = expr.index.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[index] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWritePropExpr = function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[expr.name] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeMethodExpr = function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ args = this.visitAllExpressions(expr.args, ctx);\n        var /** @type {?} */ result;\n        if (expr.builtin != null) {\n            switch (expr.builtin) {\n                case BuiltinMethod.ConcatArray:\n                    result = receiver.concat.apply(receiver, args);\n                    break;\n                case BuiltinMethod.SubscribeObservable:\n                    result = receiver.subscribe({ next: args[0] });\n                    break;\n                case BuiltinMethod.Bind:\n                    result = receiver.bind.apply(receiver, args);\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin method \" + expr.builtin);\n            }\n        }\n        else {\n            result = receiver[expr.name].apply(receiver, args);\n        }\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeFunctionExpr = function (stmt, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(stmt.args, ctx);\n        var /** @type {?} */ fnExpr = stmt.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n            return null;\n        }\n        else {\n            var /** @type {?} */ fn$$1 = stmt.fn.visitExpression(this, ctx);\n            return fn$$1.apply(null, args);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReturnStmt = function (stmt, ctx) {\n        return new ReturnValue(stmt.value.visitExpression(this, ctx));\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        var /** @type {?} */ clazz = createDynamicClass(stmt, ctx, this);\n        ctx.vars.set(stmt.name, clazz);\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExpressionStmt = function (stmt, ctx) {\n        return stmt.expr.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitIfStmt = function (stmt, ctx) {\n        var /** @type {?} */ condition = stmt.condition.visitExpression(this, ctx);\n        if (condition) {\n            return this.visitAllStatements(stmt.trueCase, ctx);\n        }\n        else if (stmt.falseCase != null) {\n            return this.visitAllStatements(stmt.falseCase, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitTryCatchStmt = function (stmt, ctx) {\n        try {\n            return this.visitAllStatements(stmt.bodyStmts, ctx);\n        }\n        catch (e) {\n            var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n            childCtx.vars.set(CATCH_ERROR_VAR$2, e);\n            childCtx.vars.set(CATCH_STACK_VAR$2, e.stack);\n            return this.visitAllStatements(stmt.catchStmts, childCtx);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitThrowStmt = function (stmt, ctx) {\n        throw stmt.error.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommentStmt = function (stmt, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInstantiateExpr = function (ast, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(ast.args, ctx);\n        var /** @type {?} */ clazz = ast.classExpr.visitExpression(this, ctx);\n        return new (clazz.bind.apply(clazz, [void 0].concat(args)))();\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralExpr = function (ast, ctx) { return ast.value; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExternalExpr = function (ast, ctx) {\n        return ast.value.reference;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitConditionalExpr = function (ast, ctx) {\n        if (ast.condition.visitExpression(this, ctx)) {\n            return ast.trueCase.visitExpression(this, ctx);\n        }\n        else if (ast.falseCase != null) {\n            return ast.falseCase.visitExpression(this, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitNotExpr = function (ast, ctx) {\n        return !ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCastExpr = function (ast, ctx) {\n        return ast.value.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitFunctionExpr = function (ast, ctx) {\n        var /** @type {?} */ paramNames = ast.params.map(function (param) { return param.name; });\n        return _declareFn(paramNames, ast.statements, ctx, this);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        var /** @type {?} */ paramNames = stmt.params.map(function (param) { return param.name; });\n        ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitBinaryOperatorExpr = function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ lhs = function () { return ast.lhs.visitExpression(_this, ctx); };\n        var /** @type {?} */ rhs = function () { return ast.rhs.visitExpression(_this, ctx); };\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                return lhs() == rhs();\n            case BinaryOperator.Identical:\n                return lhs() === rhs();\n            case BinaryOperator.NotEquals:\n                return lhs() != rhs();\n            case BinaryOperator.NotIdentical:\n                return lhs() !== rhs();\n            case BinaryOperator.And:\n                return lhs() && rhs();\n            case BinaryOperator.Or:\n                return lhs() || rhs();\n            case BinaryOperator.Plus:\n                return lhs() + rhs();\n            case BinaryOperator.Minus:\n                return lhs() - rhs();\n            case BinaryOperator.Divide:\n                return lhs() / rhs();\n            case BinaryOperator.Multiply:\n                return lhs() * rhs();\n            case BinaryOperator.Modulo:\n                return lhs() % rhs();\n            case BinaryOperator.Lower:\n                return lhs() < rhs();\n            case BinaryOperator.LowerEquals:\n                return lhs() <= rhs();\n            case BinaryOperator.Bigger:\n                return lhs() > rhs();\n            case BinaryOperator.BiggerEquals:\n                return lhs() >= rhs();\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadPropExpr = function (ast, ctx) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        result = receiver[ast.name];\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadKeyExpr = function (ast, ctx) {\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ prop = ast.index.visitExpression(this, ctx);\n        return receiver[prop];\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n        return this.visitAllExpressions(ast.entries, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralMapExpr = function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        ast.entries.forEach(function (entry) { return ((result))[entry.key] = entry.value.visitExpression(_this, ctx); });\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommaExpr = function (ast, context) {\n        var /** @type {?} */ values = this.visitAllExpressions(ast.parts, context);\n        return values[values.length - 1];\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllExpressions = function (expressions, ctx) {\n        var _this = this;\n        return expressions.map(function (expr) { return expr.visitExpression(_this, ctx); });\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllStatements = function (statements, ctx) {\n        for (var /** @type {?} */ i = 0; i < statements.length; i++) {\n            var /** @type {?} */ stmt = statements[i];\n            var /** @type {?} */ val = stmt.visitStatement(this, ctx);\n            if (val instanceof ReturnValue) {\n                return val;\n            }\n        }\n        return null;\n    };\n    return StatementInterpreter;\n}());\n/**\n * @param {?} varNames\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _declareFn(varNames, statements, ctx, visitor) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n    };\n}\nvar CATCH_ERROR_VAR$2 = 'error';\nvar CATCH_STACK_VAR$2 = 'stack';\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar AbstractJsEmitterVisitor = (function (_super) {\n    __extends(AbstractJsEmitterVisitor, _super);\n    function AbstractJsEmitterVisitor() {\n        return _super.call(this, false) || this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        this._visitClassConstructor(stmt, ctx);\n        if (stmt.parent != null) {\n            ctx.print(stmt, stmt.name + \".prototype = Object.create(\");\n            stmt.parent.visitExpression(this, ctx);\n            ctx.println(stmt, \".prototype);\");\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(stmt, getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(stmt, method, ctx); });\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        if (stmt.constructorMethod != null) {\n            this._visitParams(stmt.constructorMethod.params, ctx);\n        }\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (stmt.constructorMethod != null) {\n            if (stmt.constructorMethod.body.length > 0) {\n                ctx.println(stmt, \"var self = this;\");\n                this.visitAllStatements(stmt.constructorMethod.body, ctx);\n            }\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassGetter = function (stmt, getter, ctx) {\n        ctx.println(stmt, \"Object.defineProperty(\" + stmt.name + \".prototype, '\" + getter.name + \"', { get: function() {\");\n        ctx.incIndent();\n        if (getter.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(getter.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}});\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassMethod = function (stmt, method, ctx) {\n        ctx.print(stmt, stmt.name + \".prototype.\" + method.name + \" = function(\");\n        this._visitParams(method.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (method.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(method.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"};\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {\n        if (ast.builtin === BuiltinVar.This) {\n            ctx.print(ast, 'self');\n        }\n        else if (ast.builtin === BuiltinVar.Super) {\n            throw new Error(\"'super' needs to be handled at a parent ast node, not at the variable level!\");\n        }\n        else {\n            _super.prototype.visitReadVarExpr.call(this, ast, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"var \" + stmt.name + \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {\n        var /** @type {?} */ fnExpr = expr.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ctx.currentClass.parent.visitExpression(this, ctx);\n            ctx.print(expr, \".call(this\");\n            if (expr.args.length > 0) {\n                ctx.print(expr, \", \");\n                this.visitAllExpressions(expr.args, ctx, ',');\n            }\n            ctx.print(expr, \")\");\n        }\n        else {\n            _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {\n        ctx.print(ast, \"function(\");\n        this._visitParams(ast.params, ctx);\n        ctx.println(ast, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack')).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitParams = function (params, ctx) {\n        this.visitAllObjects(function (param) { return ctx.print(null, param.name); }, params, ctx, ',');\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    return AbstractJsEmitterVisitor;\n}(AbstractEmitterVisitor));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} sourceUrl\n * @param {?} ctx\n * @param {?} vars\n * @return {?}\n */\nfunction evalExpression(sourceUrl$$1, ctx, vars) {\n    var /** @type {?} */ fnBody = ctx.toSource() + \"\\n//# sourceURL=\" + sourceUrl$$1;\n    var /** @type {?} */ fnArgNames = [];\n    var /** @type {?} */ fnArgValues = [];\n    for (var /** @type {?} */ argName in vars) {\n        fnArgNames.push(argName);\n        fnArgValues.push(vars[argName]);\n    }\n    if (_angular_core.isDevMode()) {\n        // using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise\n        // E.g. ```\n        // function anonymous(a,b,c\n        // /**/) { ... }```\n        // We don't want to hard code this fact, so we auto detect it via an empty function first.\n        var /** @type {?} */ emptyFn = new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat('return null;'))))().toString();\n        var /** @type {?} */ headerLines = emptyFn.slice(0, emptyFn.indexOf('return null;')).split('\\n').length - 1;\n        fnBody += \"\\n\" + ctx.toSourceMapGenerator(sourceUrl$$1, sourceUrl$$1, headerLines).toJsComment();\n    }\n    return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);\n}\n/**\n * @param {?} sourceUrl\n * @param {?} statements\n * @param {?} resultVars\n * @return {?}\n */\nfunction jitStatements(sourceUrl$$1, statements, resultVars) {\n    var /** @type {?} */ converter = new JitEmitterVisitor();\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot(resultVars);\n    var /** @type {?} */ returnStmt = new ReturnStatement(literalArr(resultVars.map(function (resultVar) { return variable(resultVar); })));\n    converter.visitAllStatements(statements.concat([returnStmt]), ctx);\n    return evalExpression(sourceUrl$$1, ctx, converter.getArgs());\n}\nvar JitEmitterVisitor = (function (_super) {\n    __extends(JitEmitterVisitor, _super);\n    function JitEmitterVisitor() {\n        var _this = _super.apply(this, arguments) || this;\n        _this._evalArgNames = [];\n        _this._evalArgValues = [];\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.getArgs = function () {\n        var /** @type {?} */ result = {};\n        for (var /** @type {?} */ i = 0; i < this._evalArgNames.length; i++) {\n            result[this._evalArgNames[i]] = this._evalArgValues[i];\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {\n        var /** @type {?} */ value = ast.value.reference;\n        var /** @type {?} */ id = this._evalArgValues.indexOf(value);\n        if (id === -1) {\n            id = this._evalArgValues.length;\n            this._evalArgValues.push(value);\n            var /** @type {?} */ name = identifierName(ast.value) || 'val';\n            this._evalArgNames.push(\"jit_\" + name + id);\n        }\n        ctx.print(ast, this._evalArgNames[id]);\n        return null;\n    };\n    return JitEmitterVisitor;\n}(AbstractJsEmitterVisitor));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n *\n * \\@security When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar JitCompiler = (function () {\n    /**\n     * @param {?} _injector\n     * @param {?} _metadataResolver\n     * @param {?} _templateParser\n     * @param {?} _styleCompiler\n     * @param {?} _viewCompiler\n     * @param {?} _ngModuleCompiler\n     * @param {?} _compilerConfig\n     * @param {?} _console\n     */\n    function JitCompiler(_injector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _compilerConfig, _console) {\n        this._injector = _injector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._compilerConfig = _compilerConfig;\n        this._console = _console;\n        this._compiledTemplateCache = new Map();\n        this._compiledHostTemplateCache = new Map();\n        this._compiledDirectiveWrapperCache = new Map();\n        this._compiledNgModuleCache = new Map();\n        this._sharedStylesheetCount = 0;\n    }\n    Object.defineProperty(JitCompiler.prototype, \"injector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleSync = function (moduleType) {\n        return this._compileModuleAndComponents(moduleType, true).syncResult;\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAsync = function (moduleType) {\n        return this._compileModuleAndComponents(moduleType, false).asyncResult;\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n        return this._compileModuleAndAllComponents(moduleType, true).syncResult;\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n        return this._compileModuleAndAllComponents(moduleType, false).asyncResult;\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    JitCompiler.prototype.getNgContentSelectors = function (component) {\n        this._console.warn('Compiler.getNgContentSelectors is deprecated. Use ComponentFactory.ngContentSelectors instead!');\n        var /** @type {?} */ template = this._compiledTemplateCache.get(component);\n        if (!template) {\n            throw new Error(\"The component \" + _angular_core.ɵstringify(component) + \" is not yet compiled!\");\n        }\n        return template.compMeta.template.ngContentSelectors;\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndComponents = function (moduleType, isSync) {\n        var _this = this;\n        var /** @type {?} */ loadingPromise = this._loadModules(moduleType, isSync);\n        var /** @type {?} */ createResult = function () {\n            _this._compileComponents(moduleType, null);\n            return _this._compileModule(moduleType);\n        };\n        if (isSync) {\n            return new SyncAsyncResult(createResult());\n        }\n        else {\n            return new SyncAsyncResult(null, loadingPromise.then(createResult));\n        }\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndAllComponents = function (moduleType, isSync) {\n        var _this = this;\n        var /** @type {?} */ loadingPromise = this._loadModules(moduleType, isSync);\n        var /** @type {?} */ createResult = function () {\n            var /** @type {?} */ componentFactories = [];\n            _this._compileComponents(moduleType, componentFactories);\n            return new _angular_core.ModuleWithComponentFactories(_this._compileModule(moduleType), componentFactories);\n        };\n        if (isSync) {\n            return new SyncAsyncResult(createResult());\n        }\n        else {\n            return new SyncAsyncResult(null, loadingPromise.then(createResult));\n        }\n    };\n    /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._loadModules = function (mainModule, isSync) {\n        var _this = this;\n        var /** @type {?} */ loadingPromises = [];\n        var /** @type {?} */ ngModule = this._metadataResolver.getNgModuleMetadata(mainModule);\n        // Note: the loadingPromise for a module only includes the loading of the exported directives\n        // of imported modules.\n        // However, for runtime compilation, we want to transitively compile all modules,\n        // so we also need to call loadNgModuleDirectiveAndPipeMetadata for all nested modules.\n        ngModule.transitiveModule.modules.forEach(function (localModuleMeta) {\n            loadingPromises.push(_this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(localModuleMeta.reference, isSync));\n        });\n        return Promise.all(loadingPromises);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModule = function (moduleType) {\n        var _this = this;\n        var /** @type {?} */ ngModuleFactory = this._compiledNgModuleCache.get(moduleType);\n        if (!ngModuleFactory) {\n            var /** @type {?} */ moduleMeta_1 = this._metadataResolver.getNgModuleMetadata(moduleType);\n            // Always provide a bound Compiler\n            var /** @type {?} */ extraProviders = [this._metadataResolver.getProviderMetadata(new ProviderMeta(_angular_core.Compiler, { useFactory: function () { return new ModuleBoundCompiler(_this, moduleMeta_1.type.reference); } }))];\n            var /** @type {?} */ compileResult = this._ngModuleCompiler.compile(moduleMeta_1, extraProviders);\n            if (!this._compilerConfig.useJit) {\n                ngModuleFactory =\n                    interpretStatements(compileResult.statements, [compileResult.ngModuleFactoryVar])[0];\n            }\n            else {\n                ngModuleFactory = jitStatements(ngModuleJitUrl(moduleMeta_1), compileResult.statements, [compileResult.ngModuleFactoryVar])[0];\n            }\n            this._compiledNgModuleCache.set(moduleMeta_1.type.reference, ngModuleFactory);\n        }\n        return ngModuleFactory;\n    };\n    /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    JitCompiler.prototype._compileComponents = function (mainModule, allComponentFactories) {\n        var _this = this;\n        var /** @type {?} */ ngModule = this._metadataResolver.getNgModuleMetadata(mainModule);\n        var /** @type {?} */ moduleByDirective = new Map();\n        var /** @type {?} */ templates = new Set();\n        ngModule.transitiveModule.modules.forEach(function (localModuleSummary) {\n            var /** @type {?} */ localModuleMeta = _this._metadataResolver.getNgModuleMetadata(localModuleSummary.reference);\n            localModuleMeta.declaredDirectives.forEach(function (dirIdentifier) {\n                moduleByDirective.set(dirIdentifier.reference, localModuleMeta);\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirIdentifier.reference);\n                if (dirMeta.isComponent) {\n                    templates.add(_this._createCompiledTemplate(dirMeta, localModuleMeta));\n                    if (allComponentFactories) {\n                        var /** @type {?} */ template = _this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n                        templates.add(template);\n                        allComponentFactories.push(/** @type {?} */ (dirMeta.componentFactory));\n                    }\n                }\n            });\n        });\n        ngModule.transitiveModule.modules.forEach(function (localModuleSummary) {\n            var /** @type {?} */ localModuleMeta = _this._metadataResolver.getNgModuleMetadata(localModuleSummary.reference);\n            localModuleMeta.declaredDirectives.forEach(function (dirIdentifier) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirIdentifier.reference);\n                if (dirMeta.isComponent) {\n                    dirMeta.entryComponents.forEach(function (entryComponentType) {\n                        var /** @type {?} */ moduleMeta = moduleByDirective.get(entryComponentType.componentType);\n                        templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                    });\n                }\n            });\n            localModuleMeta.entryComponents.forEach(function (entryComponentType) {\n                var /** @type {?} */ moduleMeta = moduleByDirective.get(entryComponentType.componentType);\n                templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n            });\n        });\n        templates.forEach(function (template) { return _this._compileTemplate(template); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCacheFor = function (type) {\n        this._compiledNgModuleCache.delete(type);\n        this._metadataResolver.clearCacheFor(type);\n        this._compiledHostTemplateCache.delete(type);\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(type);\n        if (compiledTemplate) {\n            this._compiledTemplateCache.delete(type);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCache = function () {\n        this._metadataResolver.clearCache();\n        this._compiledTemplateCache.clear();\n        this._compiledHostTemplateCache.clear();\n        this._compiledNgModuleCache.clear();\n    };\n    /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledHostTemplate = function (compType, ngModule) {\n        if (!ngModule) {\n            throw new Error(\"Component \" + _angular_core.ɵstringify(compType) + \" is not part of any NgModule or the module has not been imported into your module.\");\n        }\n        var /** @type {?} */ compiledTemplate = this._compiledHostTemplateCache.get(compType);\n        if (!compiledTemplate) {\n            var /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n            assertComponent(compMeta);\n            var /** @type {?} */ componentFactory = (compMeta.componentFactory);\n            var /** @type {?} */ hostClass = this._metadataResolver.getHostComponentType(compType);\n            var /** @type {?} */ hostMeta = createHostComponentMeta(hostClass, compMeta, /** @type {?} */ (_angular_core.ɵgetComponentViewDefinitionFactory(componentFactory)));\n            compiledTemplate =\n                new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n            this._compiledHostTemplateCache.set(compType, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledTemplate = function (compMeta, ngModule) {\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n        if (!compiledTemplate) {\n            assertComponent(compMeta);\n            compiledTemplate = new CompiledTemplate(false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n            this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} template\n     * @return {?}\n     */\n    JitCompiler.prototype._compileTemplate = function (template) {\n        var _this = this;\n        if (template.isCompiled) {\n            return;\n        }\n        var /** @type {?} */ compMeta = template.compMeta;\n        var /** @type {?} */ externalStylesheetsByModuleUrl = new Map();\n        var /** @type {?} */ stylesCompileResult = this._styleCompiler.compileComponent(compMeta);\n        stylesCompileResult.externalStylesheets.forEach(function (r) { externalStylesheetsByModuleUrl.set(r.meta.moduleUrl, r); });\n        this._resolveStylesCompileResult(stylesCompileResult.componentStylesheet, externalStylesheetsByModuleUrl);\n        var /** @type {?} */ directives = template.directives.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = template.ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var _a = this._templateParser.parse(compMeta, compMeta.template.template, directives, pipes, template.ngModule.schemas, templateSourceUrl(template.ngModule.type, template.compMeta, template.compMeta.template)), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ compileResult = this._viewCompiler.compileComponent(compMeta, parsedTemplate, variable(stylesCompileResult.componentStylesheet.stylesVar), usedPipes);\n        var /** @type {?} */ statements = stylesCompileResult.componentStylesheet.statements.concat(compileResult.statements);\n        var /** @type {?} */ viewClassAndRendererTypeVars = compMeta.isHost ?\n            [compileResult.viewClassVar] :\n            [compileResult.viewClassVar, compileResult.rendererTypeVar];\n        var /** @type {?} */ viewClass;\n        var /** @type {?} */ rendererType;\n        if (!this._compilerConfig.useJit) {\n            _b = interpretStatements(statements, viewClassAndRendererTypeVars), viewClass = _b[0], rendererType = _b[1];\n        }\n        else {\n            _c = jitStatements(templateJitUrl(template.ngModule.type, template.compMeta), statements, viewClassAndRendererTypeVars), viewClass = _c[0], rendererType = _c[1];\n        }\n        template.compiled(viewClass, rendererType);\n        var _b, _c;\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveStylesCompileResult = function (result, externalStylesheetsByModuleUrl) {\n        var _this = this;\n        result.dependencies.forEach(function (dep, i) {\n            var /** @type {?} */ nestedCompileResult = externalStylesheetsByModuleUrl.get(dep.moduleUrl);\n            var /** @type {?} */ nestedStylesArr = _this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n            dep.valuePlaceholder.reference = nestedStylesArr;\n        });\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveAndEvalStylesCompileResult = function (result, externalStylesheetsByModuleUrl) {\n        this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n        if (!this._compilerConfig.useJit) {\n            return interpretStatements(result.statements, [result.stylesVar])[0];\n        }\n        else {\n            return jitStatements(sharedStylesheetJitUrl(result.meta, this._sharedStylesheetCount++), result.statements, [result.stylesVar])[0];\n        }\n    };\n    return JitCompiler;\n}());\nJitCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nJitCompiler.ctorParameters = function () { return [\n    { type: _angular_core.Injector, },\n    { type: CompileMetadataResolver, },\n    { type: TemplateParser, },\n    { type: StyleCompiler, },\n    { type: ViewCompiler, },\n    { type: NgModuleCompiler, },\n    { type: CompilerConfig, },\n    { type: _angular_core.ɵConsole, },\n]; };\nvar CompiledTemplate = (function () {\n    /**\n     * @param {?} isHost\n     * @param {?} compType\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directives\n     */\n    function CompiledTemplate(isHost, compType, compMeta, ngModule, directives) {\n        this.isHost = isHost;\n        this.compType = compType;\n        this.compMeta = compMeta;\n        this.ngModule = ngModule;\n        this.directives = directives;\n        this._viewClass = null;\n        this.isCompiled = false;\n    }\n    /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    CompiledTemplate.prototype.compiled = function (viewClass, rendererType) {\n        this._viewClass = viewClass;\n        ((this.compMeta.componentViewType)).setDelegate(viewClass);\n        for (var /** @type {?} */ prop in rendererType) {\n            ((this.compMeta.rendererType))[prop] = rendererType[prop];\n        }\n        this.isCompiled = true;\n    };\n    return CompiledTemplate;\n}());\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction assertComponent(meta) {\n    if (!meta.isComponent) {\n        throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n    }\n}\n/**\n * Implements `Compiler` by delegating to the JitCompiler using a known module.\n */\nvar ModuleBoundCompiler = (function () {\n    /**\n     * @param {?} _delegate\n     * @param {?} _ngModule\n     */\n    function ModuleBoundCompiler(_delegate, _ngModule) {\n        this._delegate = _delegate;\n        this._ngModule = _ngModule;\n    }\n    Object.defineProperty(ModuleBoundCompiler.prototype, \"_injector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._delegate.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.compileModuleSync = function (moduleType) {\n        return this._delegate.compileModuleSync(moduleType);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.compileModuleAsync = function (moduleType) {\n        return this._delegate.compileModuleAsync(moduleType);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n        return this._delegate.compileModuleAndAllComponentsSync(moduleType);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n        return this._delegate.compileModuleAndAllComponentsAsync(moduleType);\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.getNgContentSelectors = function (component) {\n        return this._delegate.getNgContentSelectors(component);\n    };\n    /**\n     * Clears all caches\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.clearCache = function () { this._delegate.clearCache(); };\n    /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.clearCacheFor = function (type) { this._delegate.clearCacheFor(type); };\n    return ModuleBoundCompiler;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for message extracted from the templates.\n */\nvar MessageBundle = (function () {\n    /**\n     * @param {?} _htmlParser\n     * @param {?} _implicitTags\n     * @param {?} _implicitAttrs\n     * @param {?=} _locale\n     */\n    function MessageBundle(_htmlParser, _implicitTags, _implicitAttrs, _locale) {\n        if (_locale === void 0) { _locale = null; }\n        this._htmlParser = _htmlParser;\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n        this._locale = _locale;\n        this._messages = [];\n    }\n    /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    MessageBundle.prototype.updateFromTemplate = function (html, url, interpolationConfig) {\n        var /** @type {?} */ htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n        if (htmlParserResult.errors.length) {\n            return htmlParserResult.errors;\n        }\n        var /** @type {?} */ i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n        if (i18nParserResult.errors.length) {\n            return i18nParserResult.errors;\n        }\n        (_a = this._messages).push.apply(_a, i18nParserResult.messages);\n        var _a;\n    };\n    /**\n     * @return {?}\n     */\n    MessageBundle.prototype.getMessages = function () { return this._messages; };\n    /**\n     * @param {?} serializer\n     * @return {?}\n     */\n    MessageBundle.prototype.write = function (serializer) {\n        var /** @type {?} */ messages = {};\n        var /** @type {?} */ mapperVisitor = new MapPlaceholderNames();\n        // Deduplicate messages based on their ID\n        this._messages.forEach(function (message) {\n            var /** @type {?} */ id = serializer.digest(message);\n            if (!messages.hasOwnProperty(id)) {\n                messages[id] = message;\n            }\n        });\n        // Transform placeholder names using the serializer mapping\n        var /** @type {?} */ msgList = Object.keys(messages).map(function (id) {\n            var /** @type {?} */ mapper = serializer.createNameMapper(messages[id]);\n            var /** @type {?} */ src = messages[id];\n            var /** @type {?} */ nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n            return new Message(nodes, {}, {}, src.meaning, src.description, id);\n        });\n        return serializer.write(msgList, this._locale);\n    };\n    return MessageBundle;\n}());\nvar MapPlaceholderNames = (function (_super) {\n    __extends(MapPlaceholderNames, _super);\n    function MapPlaceholderNames() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.convert = function (nodes, mapper) {\n        var _this = this;\n        return mapper ? nodes.map(function (n) { return n.visit(_this, mapper); }) : nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitTagPlaceholder = function (ph, mapper) {\n        var _this = this;\n        var /** @type {?} */ startName = mapper.toPublicName(ph.startName);\n        var /** @type {?} */ closeName = ph.closeName ? mapper.toPublicName(ph.closeName) : ph.closeName;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, mapper); });\n        return new TagPlaceholder(ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitPlaceholder = function (ph, mapper) {\n        return new Placeholder(ph.value, mapper.toPublicName(ph.name), ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitIcuPlaceholder = function (ph, mapper) {\n        return new IcuPlaceholder(ph.value, mapper.toPublicName(ph.name), ph.sourceSpan);\n    };\n    return MapPlaceholderNames;\n}(CloneVisitor));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extract i18n messages from source code\n */\nvar Extractor = (function () {\n    /**\n     * @param {?} host\n     * @param {?} staticSymbolResolver\n     * @param {?} messageBundle\n     * @param {?} metadataResolver\n     */\n    function Extractor(host, staticSymbolResolver, messageBundle, metadataResolver) {\n        this.host = host;\n        this.staticSymbolResolver = staticSymbolResolver;\n        this.messageBundle = messageBundle;\n        this.metadataResolver = metadataResolver;\n    }\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    Extractor.prototype.extract = function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ programSymbols = extractProgramSymbols(this.staticSymbolResolver, rootFiles, this.host);\n        var _a = analyzeAndValidateNgModules(programSymbols, this.host, this.metadataResolver), files = _a.files, ngModules = _a.ngModules;\n        return Promise\n            .all(ngModules.map(function (ngModule) { return _this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false); }))\n            .then(function () {\n            var /** @type {?} */ errors = [];\n            files.forEach(function (file) {\n                var /** @type {?} */ compMetas = [];\n                file.directives.forEach(function (directiveType) {\n                    var /** @type {?} */ dirMeta = _this.metadataResolver.getDirectiveMetadata(directiveType);\n                    if (dirMeta && dirMeta.isComponent) {\n                        compMetas.push(dirMeta);\n                    }\n                });\n                compMetas.forEach(function (compMeta) {\n                    var /** @type {?} */ html = compMeta.template.template;\n                    var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(compMeta.template.interpolation);\n                    errors.push.apply(errors, _this.messageBundle.updateFromTemplate(html, file.srcUrl, interpolationConfig));\n                });\n            });\n            if (errors.length) {\n                throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n            }\n            return _this.messageBundle;\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    Extractor.create = function (host, locale) {\n        var /** @type {?} */ htmlParser = new I18NHtmlParser(new HtmlParser());\n        var /** @type {?} */ urlResolver = createOfflineCompileUrlResolver();\n        var /** @type {?} */ symbolCache = new StaticSymbolCache();\n        var /** @type {?} */ summaryResolver = new AotSummaryResolver(host, symbolCache);\n        var /** @type {?} */ staticSymbolResolver = new StaticSymbolResolver(host, symbolCache, summaryResolver);\n        var /** @type {?} */ staticReflector = new StaticReflector(staticSymbolResolver);\n        StaticAndDynamicReflectionCapabilities.install(staticReflector);\n        var /** @type {?} */ config = new CompilerConfig({ defaultEncapsulation: _angular_core.ViewEncapsulation.Emulated, useJit: false });\n        var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return host.loadResource(url); } }, urlResolver, htmlParser, config);\n        var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n        var /** @type {?} */ resolver = new CompileMetadataResolver(config, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, new _angular_core.ɵConsole(), symbolCache, staticReflector);\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        var /** @type {?} */ extractor = new Extractor(host, staticSymbolResolver, messageBundle, resolver);\n        return { extractor: extractor, staticReflector: staticReflector };\n    };\n    return Extractor;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _NO_RESOURCE_LOADER = {\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    get: function (url) {\n        throw new Error(\"No ResourceLoader implementation has been provided. Can't read the url \\\"\" + url + \"\\\"\");\n    }\n};\nvar baseHtmlParser = new _angular_core.InjectionToken('HtmlParser');\n/**\n * A set of providers that provide `JitCompiler` and its dependencies to use for\n * template compilation.\n */\nvar COMPILER_PROVIDERS = [\n    { provide: _angular_core.ɵReflector, useValue: _angular_core.ɵreflector },\n    { provide: _angular_core.ɵReflectorReader, useExisting: _angular_core.ɵReflector },\n    { provide: ResourceLoader, useValue: _NO_RESOURCE_LOADER },\n    SummaryResolver,\n    _angular_core.ɵConsole,\n    Lexer,\n    Parser,\n    {\n        provide: baseHtmlParser,\n        useClass: HtmlParser,\n    },\n    {\n        provide: I18NHtmlParser,\n        useFactory: function (parser, translations, format, config, console) { return new I18NHtmlParser(parser, translations, format, config.missingTranslation, console); },\n        deps: [\n            baseHtmlParser,\n            [new _angular_core.Optional(), new _angular_core.Inject(_angular_core.TRANSLATIONS)],\n            [new _angular_core.Optional(), new _angular_core.Inject(_angular_core.TRANSLATIONS_FORMAT)],\n            [CompilerConfig],\n            [_angular_core.ɵConsole],\n        ]\n    },\n    {\n        provide: HtmlParser,\n        useExisting: I18NHtmlParser,\n    },\n    TemplateParser,\n    DirectiveNormalizer,\n    CompileMetadataResolver,\n    DEFAULT_PACKAGE_URL_PROVIDER,\n    StyleCompiler,\n    ViewCompiler,\n    NgModuleCompiler,\n    { provide: CompilerConfig, useValue: new CompilerConfig() },\n    JitCompiler,\n    { provide: _angular_core.Compiler, useExisting: JitCompiler },\n    DomElementSchemaRegistry,\n    { provide: ElementSchemaRegistry, useExisting: DomElementSchemaRegistry },\n    UrlResolver,\n    DirectiveResolver,\n    PipeResolver,\n    NgModuleResolver,\n];\nvar JitCompilerFactory = (function () {\n    /**\n     * @param {?} defaultOptions\n     */\n    function JitCompilerFactory(defaultOptions) {\n        var compilerOptions = {\n            useDebug: _angular_core.isDevMode(),\n            useJit: true,\n            defaultEncapsulation: _angular_core.ViewEncapsulation.Emulated,\n            missingTranslation: _angular_core.MissingTranslationStrategy.Warning,\n            enableLegacyTemplate: true,\n        };\n        this._defaultOptions = [compilerOptions].concat(defaultOptions);\n    }\n    /**\n     * @param {?=} options\n     * @return {?}\n     */\n    JitCompilerFactory.prototype.createCompiler = function (options) {\n        if (options === void 0) { options = []; }\n        var /** @type {?} */ opts = _mergeOptions(this._defaultOptions.concat(options));\n        var /** @type {?} */ injector = _angular_core.ReflectiveInjector.resolveAndCreate([\n            COMPILER_PROVIDERS, {\n                provide: CompilerConfig,\n                useFactory: function () {\n                    return new CompilerConfig({\n                        // let explicit values from the compiler options overwrite options\n                        // from the app providers\n                        useJit: opts.useJit,\n                        // let explicit values from the compiler options overwrite options\n                        // from the app providers\n                        defaultEncapsulation: opts.defaultEncapsulation,\n                        missingTranslation: opts.missingTranslation,\n                        enableLegacyTemplate: opts.enableLegacyTemplate,\n                    });\n                },\n                deps: []\n            },\n            opts.providers\n        ]);\n        return injector.get(_angular_core.Compiler);\n    };\n    return JitCompilerFactory;\n}());\nJitCompilerFactory.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nJitCompilerFactory.ctorParameters = function () { return [\n    { type: Array, decorators: [{ type: _angular_core.Inject, args: [_angular_core.COMPILER_OPTIONS,] },] },\n]; };\n/**\n * @return {?}\n */\nfunction _initReflector() {\n    _angular_core.ɵreflector.reflectionCapabilities = new _angular_core.ɵReflectionCapabilities();\n}\n/**\n * A platform that included corePlatform and the compiler.\n *\n * \\@experimental\n */\nvar platformCoreDynamic = _angular_core.createPlatformFactory(_angular_core.platformCore, 'coreDynamic', [\n    { provide: _angular_core.COMPILER_OPTIONS, useValue: {}, multi: true },\n    { provide: _angular_core.CompilerFactory, useClass: JitCompilerFactory },\n    { provide: _angular_core.PLATFORM_INITIALIZER, useValue: _initReflector, multi: true },\n]);\n/**\n * @param {?} optionsArr\n * @return {?}\n */\nfunction _mergeOptions(optionsArr) {\n    return {\n        useJit: _lastDefined(optionsArr.map(function (options) { return options.useJit; })),\n        defaultEncapsulation: _lastDefined(optionsArr.map(function (options) { return options.defaultEncapsulation; })),\n        providers: _mergeArrays(optionsArr.map(function (options) { return options.providers; })),\n        missingTranslation: _lastDefined(optionsArr.map(function (options) { return options.missingTranslation; })),\n    };\n}\n/**\n * @template T\n * @param {?} args\n * @return {?}\n */\nfunction _lastDefined(args) {\n    for (var /** @type {?} */ i = args.length - 1; i >= 0; i--) {\n        if (args[i] !== undefined) {\n            return args[i];\n        }\n    }\n    return undefined;\n}\n/**\n * @param {?} parts\n * @return {?}\n */\nfunction _mergeArrays(parts) {\n    var /** @type {?} */ result = [];\n    parts.forEach(function (part) { return part && result.push.apply(result, part); });\n    return result;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Interface that defines how import statements should be generated.\n * @abstract\n */\nvar ImportResolver = (function () {\n    function ImportResolver() {\n    }\n    /**\n     * Converts a file path to a module name that can be used as an `import.\n     * I.e. `path/to/importedFile.ts` should be imported by `path/to/containingFile.ts`.\n     * @abstract\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    ImportResolver.prototype.fileNameToModuleName = function (importedFilePath, containingFilePath) { };\n    /**\n     * Converts the given StaticSymbol into another StaticSymbol that should be used\n     * to generate the import from.\n     * @abstract\n     * @param {?} symbol\n     * @return {?}\n     */\n    ImportResolver.prototype.getImportAs = function (symbol) { };\n    /**\n     * Determine the airty of a type.\n     * @abstract\n     * @param {?} symbol\n     * @return {?}\n     */\n    ImportResolver.prototype.getTypeArity = function (symbol) { };\n    return ImportResolver;\n}());\n\nexports.VERSION = VERSION;\nexports.TEMPLATE_TRANSFORMS = TEMPLATE_TRANSFORMS;\nexports.CompilerConfig = CompilerConfig;\nexports.JitCompiler = JitCompiler;\nexports.DirectiveResolver = DirectiveResolver;\nexports.PipeResolver = PipeResolver;\nexports.NgModuleResolver = NgModuleResolver;\nexports.DEFAULT_INTERPOLATION_CONFIG = DEFAULT_INTERPOLATION_CONFIG;\nexports.InterpolationConfig = InterpolationConfig;\nexports.NgModuleCompiler = NgModuleCompiler;\nexports.ViewCompiler = ViewCompiler;\nexports.isSyntaxError = isSyntaxError;\nexports.syntaxError = syntaxError;\nexports.TextAst = TextAst;\nexports.BoundTextAst = BoundTextAst;\nexports.AttrAst = AttrAst;\nexports.BoundElementPropertyAst = BoundElementPropertyAst;\nexports.BoundEventAst = BoundEventAst;\nexports.ReferenceAst = ReferenceAst;\nexports.VariableAst = VariableAst;\nexports.ElementAst = ElementAst;\nexports.EmbeddedTemplateAst = EmbeddedTemplateAst;\nexports.BoundDirectivePropertyAst = BoundDirectivePropertyAst;\nexports.DirectiveAst = DirectiveAst;\nexports.ProviderAst = ProviderAst;\nexports.ProviderAstType = ProviderAstType;\nexports.NgContentAst = NgContentAst;\nexports.PropertyBindingType = PropertyBindingType;\nexports.templateVisitAll = templateVisitAll;\nexports.CompileAnimationEntryMetadata = CompileAnimationEntryMetadata;\nexports.CompileAnimationStateMetadata = CompileAnimationStateMetadata;\nexports.CompileAnimationStateDeclarationMetadata = CompileAnimationStateDeclarationMetadata;\nexports.CompileAnimationStateTransitionMetadata = CompileAnimationStateTransitionMetadata;\nexports.CompileAnimationMetadata = CompileAnimationMetadata;\nexports.CompileAnimationKeyframesSequenceMetadata = CompileAnimationKeyframesSequenceMetadata;\nexports.CompileAnimationStyleMetadata = CompileAnimationStyleMetadata;\nexports.CompileAnimationAnimateMetadata = CompileAnimationAnimateMetadata;\nexports.CompileAnimationWithStepsMetadata = CompileAnimationWithStepsMetadata;\nexports.CompileAnimationSequenceMetadata = CompileAnimationSequenceMetadata;\nexports.CompileAnimationGroupMetadata = CompileAnimationGroupMetadata;\nexports.identifierName = identifierName;\nexports.identifierModuleUrl = identifierModuleUrl;\nexports.viewClassName = viewClassName;\nexports.rendererTypeName = rendererTypeName;\nexports.hostViewClassName = hostViewClassName;\nexports.dirWrapperClassName = dirWrapperClassName;\nexports.componentFactoryName = componentFactoryName;\nexports.CompileSummaryKind = CompileSummaryKind;\nexports.tokenName = tokenName;\nexports.tokenReference = tokenReference;\nexports.CompileStylesheetMetadata = CompileStylesheetMetadata;\nexports.CompileTemplateMetadata = CompileTemplateMetadata;\nexports.CompileDirectiveMetadata = CompileDirectiveMetadata;\nexports.createHostComponentMeta = createHostComponentMeta;\nexports.CompilePipeMetadata = CompilePipeMetadata;\nexports.CompileNgModuleMetadata = CompileNgModuleMetadata;\nexports.TransitiveCompileNgModuleMetadata = TransitiveCompileNgModuleMetadata;\nexports.ProviderMeta = ProviderMeta;\nexports.flatten = flatten;\nexports.sourceUrl = sourceUrl;\nexports.templateSourceUrl = templateSourceUrl;\nexports.sharedStylesheetJitUrl = sharedStylesheetJitUrl;\nexports.ngModuleJitUrl = ngModuleJitUrl;\nexports.templateJitUrl = templateJitUrl;\nexports.createAotCompiler = createAotCompiler;\nexports.AotCompiler = AotCompiler;\nexports.analyzeNgModules = analyzeNgModules;\nexports.analyzeAndValidateNgModules = analyzeAndValidateNgModules;\nexports.extractProgramSymbols = extractProgramSymbols;\nexports.GeneratedFile = GeneratedFile;\nexports.StaticReflector = StaticReflector;\nexports.StaticAndDynamicReflectionCapabilities = StaticAndDynamicReflectionCapabilities;\nexports.StaticSymbol = StaticSymbol;\nexports.StaticSymbolCache = StaticSymbolCache;\nexports.ResolvedStaticSymbol = ResolvedStaticSymbol;\nexports.StaticSymbolResolver = StaticSymbolResolver;\nexports.unescapeIdentifier = unescapeIdentifier;\nexports.AotSummaryResolver = AotSummaryResolver;\nexports.SummaryResolver = SummaryResolver;\nexports.COMPILER_PROVIDERS = COMPILER_PROVIDERS;\nexports.JitCompilerFactory = JitCompilerFactory;\nexports.platformCoreDynamic = platformCoreDynamic;\nexports.createUrlResolverWithoutPackagePrefix = createUrlResolverWithoutPackagePrefix;\nexports.createOfflineCompileUrlResolver = createOfflineCompileUrlResolver;\nexports.DEFAULT_PACKAGE_URL_PROVIDER = DEFAULT_PACKAGE_URL_PROVIDER;\nexports.UrlResolver = UrlResolver;\nexports.getUrlScheme = getUrlScheme;\nexports.ResourceLoader = ResourceLoader;\nexports.ElementSchemaRegistry = ElementSchemaRegistry;\nexports.Extractor = Extractor;\nexports.I18NHtmlParser = I18NHtmlParser;\nexports.MessageBundle = MessageBundle;\nexports.Serializer = Serializer;\nexports.Xliff = Xliff;\nexports.Xmb = Xmb;\nexports.Xtb = Xtb;\nexports.DirectiveNormalizer = DirectiveNormalizer;\nexports.ParserError = ParserError;\nexports.ParseSpan = ParseSpan;\nexports.AST = AST;\nexports.Quote = Quote;\nexports.EmptyExpr = EmptyExpr;\nexports.ImplicitReceiver = ImplicitReceiver;\nexports.Chain = Chain;\nexports.Conditional = Conditional;\nexports.PropertyRead = PropertyRead;\nexports.PropertyWrite = PropertyWrite;\nexports.SafePropertyRead = SafePropertyRead;\nexports.KeyedRead = KeyedRead;\nexports.KeyedWrite = KeyedWrite;\nexports.BindingPipe = BindingPipe;\nexports.LiteralPrimitive = LiteralPrimitive;\nexports.LiteralArray = LiteralArray;\nexports.LiteralMap = LiteralMap;\nexports.Interpolation = Interpolation;\nexports.Binary = Binary;\nexports.PrefixNot = PrefixNot;\nexports.MethodCall = MethodCall;\nexports.SafeMethodCall = SafeMethodCall;\nexports.FunctionCall = FunctionCall;\nexports.ASTWithSource = ASTWithSource;\nexports.TemplateBinding = TemplateBinding;\nexports.RecursiveAstVisitor = RecursiveAstVisitor;\nexports.AstTransformer = AstTransformer;\nexports.TokenType = TokenType;\nexports.Lexer = Lexer;\nexports.Token = Token;\nexports.EOF = EOF;\nexports.isIdentifier = isIdentifier;\nexports.isQuote = isQuote;\nexports.SplitInterpolation = SplitInterpolation;\nexports.TemplateBindingParseResult = TemplateBindingParseResult;\nexports.Parser = Parser;\nexports._ParseAST = _ParseAST;\nexports.ERROR_COLLECTOR_TOKEN = ERROR_COLLECTOR_TOKEN;\nexports.CompileMetadataResolver = CompileMetadataResolver;\nexports.componentModuleUrl = componentModuleUrl;\nexports.Text = Text;\nexports.Expansion = Expansion;\nexports.ExpansionCase = ExpansionCase;\nexports.Attribute = Attribute$1;\nexports.Element = Element;\nexports.Comment = Comment;\nexports.visitAll = visitAll;\nexports.ParseTreeResult = ParseTreeResult;\nexports.TreeError = TreeError;\nexports.HtmlParser = HtmlParser;\nexports.HtmlTagDefinition = HtmlTagDefinition;\nexports.getHtmlTagDefinition = getHtmlTagDefinition;\nexports.TagContentType = TagContentType;\nexports.splitNsName = splitNsName;\nexports.getNsPrefix = getNsPrefix;\nexports.mergeNsAndName = mergeNsAndName;\nexports.NAMED_ENTITIES = NAMED_ENTITIES;\nexports.ImportResolver = ImportResolver;\nexports.debugOutputAstAsTypeScript = debugOutputAstAsTypeScript;\nexports.TypeScriptEmitter = TypeScriptEmitter;\nexports.ParseLocation = ParseLocation;\nexports.ParseSourceFile = ParseSourceFile;\nexports.ParseSourceSpan = ParseSourceSpan;\nexports.ParseErrorLevel = ParseErrorLevel;\nexports.ParseError = ParseError;\nexports.typeSourceSpan = typeSourceSpan;\nexports.DomElementSchemaRegistry = DomElementSchemaRegistry;\nexports.CssSelector = CssSelector;\nexports.SelectorMatcher = SelectorMatcher;\nexports.SelectorListContext = SelectorListContext;\nexports.SelectorContext = SelectorContext;\nexports.StylesCompileDependency = StylesCompileDependency;\nexports.StylesCompileResult = StylesCompileResult;\nexports.CompiledStylesheet = CompiledStylesheet;\nexports.StyleCompiler = StyleCompiler;\nexports.TemplateParseError = TemplateParseError;\nexports.TemplateParseResult = TemplateParseResult;\nexports.TemplateParser = TemplateParser;\nexports.splitClasses = splitClasses;\nexports.createElementCssSelector = createElementCssSelector;\nexports.removeSummaryDuplicates = removeSummaryDuplicates;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=compiler.umd.js.map\n"]}