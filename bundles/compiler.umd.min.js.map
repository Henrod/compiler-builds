{"version":3,"sources":["/home/travis/build/angular/angular/dist/packages-dist/compiler/bundles/compiler.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","compiler","core","this","_angular_core","templateVisitAll","visitor","asts","context","result","visit","ast","forEach","astResult","push","splitNsName","elementName","colonIndex","indexOf","Error","slice","isNgContainer","tagName","isNgContent","isNgTemplate","getNsPrefix","fullName","mergeNsAndName","prefix","localName","getHtmlTagDefinition","TAG_DEFINITIONS","toLowerCase","_DEFAULT_TAG_DEFINITION","dashCaseToCamelCase","input","replace","DASH_CASE_REGEXP","m","_i","arguments","length","toUpperCase","splitAtColon","defaultValues","_splitAt","splitAtPeriod","character","characterIndex","trim","visitValue","value","Array","isArray","visitArray","isStrictStringMap","visitStringMap","visitPrimitive","visitOther","isDefined","val","undefined","noUndefined","syntaxError","msg","error","ERROR_SYNTAX_ERROR","isSyntaxError","escapeRegExp","s","obj","Object","getPrototypeOf","STRING_MAP_PROTO","utf8Encode","str","encoded","index","codePoint","charCodeAt","low","String","fromCharCode","_sanitizeIdentifier","name","identifierName","compileIdentifier","reference","ref","StaticSymbol","identifier","ɵstringify","_anonymousTypeIndex","identifierModuleUrl","filePath","ɵreflector","importUri","viewClassName","compType","embeddedTemplateIndex","rendererTypeName","hostViewClassName","dirWrapperClassName","dirType","componentFactoryName","tokenName","token","tokenReference","createHostComponentMeta","hostTypeReference","compMeta","hostViewType","template","CssSelector","parse","getMatchingElementTemplate","CompileDirectiveMetadata","create","isHost","type","diDeps","lifecycleHooks","CompileTemplateMetadata","encapsulation","ViewEncapsulation","None","templateUrl","styles","styleUrls","ngContentSelectors","animations","isInline","externalStylesheets","interpolation","exportAs","changeDetection","ChangeDetectionStrategy","Default","inputs","outputs","host","isComponent","selector","providers","viewProviders","queries","viewQueries","componentViewType","rendererType","id","data","entryComponents","componentFactory","_normalizeArray","flatten","list","reduce","flat","item","flatItem","concat","sourceUrl","url","templateSourceUrl","ngModuleType","templateMeta","sharedStylesheetJitUrl","meta","pathParts","split","baseName","ngModuleJitUrl","moduleMeta","templateJitUrl","isWhitespace","code","$TAB","$SPACE","$NBSP","isDigit","$0","$9","isAsciiLetter","$a","$z","$A","$Z","isAsciiHexDigit","$f","$F","CompilerInjectable","x","assertArrayOfStrings","isDevMode","i","assertInterpolationSymbols","start_1","end_1","INTERPOLATION_BLACKLIST_REGEXPS","regexp","test","newCharacterToken","Token","TokenType","Character","newIdentifierToken","text","Identifier","newKeywordToken","Keyword","newOperatorToken","Operator","newStringToken","newNumberToken","n","Number","newErrorToken","message","isIdentifierStart","$_","$$","isIdentifier","scanner","_Scanner","peek","advance","$EOF","isIdentifierPart","isExponentStart","$e","$E","isExponentSign","$MINUS","$PLUS","isQuote","$SQ","$DQ","$BT","unescape","$n","$LF","$FF","$r","$CR","$t","$v","$VTAB","parseIntAutoRadix","parseInt","isNaN","_createInterpolateRegExp","config","pattern","start","end","RegExp","typeSourceSpan","kind","moduleUrl","sourceFileName","sourceFile","ParseSourceFile","ParseSourceSpan","ParseLocation","visitAll","nodes","tokenize","source","getTagDefinition","tokenizeExpansionForms","interpolationConfig","DEFAULT_INTERPOLATION_CONFIG","_Tokenizer","_unexpectedCharacterErrorMsg","charCode","char","_unknownEntityErrorMsg","entitySrc","isNotWhitespace","isNameEnd","$GT","$SLASH","$EQ","isPrefixEnd","isDigitEntityEnd","$SEMICOLON","isNamedEntityEnd","isExpansionFormStart","offset","isInterpolationStart","$LBRACE","isExpansionCaseStart","compareCharCodeCaseInsensitive","code1","code2","toUpperCaseCharCode","mergeTextTokens","srcTokens","dstTokens","lastDstToken","TokenType$1","TEXT","parts","sourceSpan","lastOnStack","stack","element","createI18nMessageFactory","_I18nVisitor","_expParser","meaning","description","toI18nMessage","_extractPlaceholderName","_CUSTOM_PH_EXP","extractMessages","implicitTags","implicitAttrs","_Visitor","extract","mergeTranslations","translations","merge","_isOpeningComment","Comment","startsWith","_isClosingComment","_getI18nAttr","p","attrs","find","attr","_I18N_ATTR","_parseMessageMeta","i18n","idIndex","ID_SEPARATOR","descIndex","MEANING_SEPARATOR","_a","meaningAndDesc","_b","getXmlTagDefinition","_TAG_DEFINITION","digest","sha1","serializeNodes","join","decimalDigest","_SerializerIgnoreIcuExpVisitor","map","a","computeMsgId","serializerVisitor","utf8","words32","stringToWords32","Endian","Big","len","w","b","c","d","e","h0","h1","h2","h3","h4","j","rol32","_c","fk","f","k","temp","add32","_d","_e","byteStringToHexString","words32ToByteString","fingerprint","hash32","hi","lo","him","lom","add64","rol64","byteStringToDecString","wordAt","Little","mix","sub32","add32to64","high","ah","al","bh","bl","carry","l","h","count","endian","byteAt","word","word32ToByteString","hex","toString","decimal","toThePower","addBigInt","numberTimesBigInt","reverse","y","sum","Math","max","tmpSum","num","product","bToThePower","serialize","node","_visitor","_escapeXml","_ESCAPED_CHARS","entry","getCtypeForTag","tag","getTypeForTag","digest$1","toPublicName","internalName","createLazyProperty","messages","valueFn","defineProperty","configurable","enumerable","get","set","_","createSerializer","format","Xmb","Xtb","Xliff2","Xliff","assetUrl","pkg","path","resolveIdentifier","runtime","createIdentifier","identifierToken","createIdentifierToken","expandNodes","expander","_Expander","ExpansionResult","isExpanded","errors","_expandPluralForm","children","cases","PLURAL_CASES","match","ExpansionError","valueSourceSpan","expansionResult","expression","apply","Element","Attribute$1","switchAttr","switchValue","switchValueSourceSpan","_expandDefaultForm","_transformProvider","provider","useExisting","useValue","deps","useClass","useFactory","multi","_transformProviderAst","eager","ProviderAst","multiProvider","providerType","_resolveProvidersFromDirectives","directives","targetErrors","providersByToken","Map","directive","dirProvider","_resolveProviders","ProviderAstType","Component","Directive","directivesWithComponentFirst","filter","dir","PublicService","PrivateService","targetProvidersByToken","resolvedProvider","ProviderError","isUseValue","_getViewQueries","component","viewQueryId","query","_addQueryToTokenMap","queryId","_getContentQueries","contentQueryStartId","contentQueryId","contentQueries","directiveIndex","selectors","isStyleUrlResolvable","schemeMatch","URL_WITH_SCHEMA_REGEXP","extractStyleUrls","resolver","baseUrl","cssText","foundUrls","modifiedCssText","CSS_COMMENT_REGEXP","CSS_IMPORT_REGEXP","resolve","StyleWithImports","_isAnimationLabel","calcPossibleSecurityContexts","registry","propName","isAttribute","ctxs","elementNames","allKnownElementNames","notElementNames","Set","notSelectors","isElementSelector","possibleElementNames","has","securityContext","SecurityContext","NONE","from","sort","preparseElement","selectAttr","hrefAttr","relAttr","nonBindable","projectAs","lcAttrName","NG_CONTENT_SELECT_ATTR","LINK_STYLE_HREF_ATTR","LINK_STYLE_REL_ATTR","NG_NON_BINDABLE_ATTR","NG_PROJECT_AS","normalizeNgContentSelect","nodeName","PreparsedElementType","OTHER","NG_CONTENT","STYLE_ELEMENT","STYLE","SCRIPT_ELEMENT","SCRIPT","LINK_ELEMENT","LINK_STYLE_REL_VALUE","STYLESHEET","PreparsedElement","warnOnlyOnce","warnings","warningCounts","splitClasses","classAttrValue","createElementCssSelector","attributes","cssSelector","elNameNoNs","setElement","attrName","attrNameNoNs","attrValue","addAttribute","CLASS_ATTR","classes","className","addClassName","_isEmptyTextNode","Text","removeSummaryDuplicates","items","values","isEmptyExpression","ASTWithSource","EmptyExpr","isTemplate","el","enableLegacyTemplate","reportDeprecation","tagNoNs","TEMPLATE_ELEMENT","TEMPLATE_ELEMENT_DEPRECATION_WARNING","createUrlResolverWithoutPackagePrefix","UrlResolver","createOfflineCompileUrlResolver","getUrlScheme","_split","_ComponentIndex","Scheme","_buildFromEncodedParts","opt_scheme","opt_userInfo","opt_domain","opt_port","opt_path","opt_queryData","opt_fragment","out","uri","_splitRe","_removeDotSegments","leadingSlash","trailingSlash","segments","up","pos","segment","pop","unshift","_joinAndCanonicalizePath","Path","UserInfo","Domain","Port","QueryData","Fragment","_resolveUrl","base","encodeURI","baseParts","lastIndexOf","substring","isDirectiveMetadata","findLast","arr","condition","ngfactoryFilePath","forceSourceFile","urlWithSuffix","splitTypescriptSuffix","stripGeneratedFileSuffix","GENERATED_FILE","isGeneratedFile","endsWith","lastDot","summaryFileName","fileName","fileNameWithoutSuffix","STRIP_SRC_FILE_SUFFIXES","summaryForJitFileName","stripSummaryForJitFileSuffix","JIT_SUMMARY_FILE","summaryForJitName","symbolName","stripSummaryForJitNameSuffix","JIT_SUMMARY_NAME","hasLifecycleHook","hook","getHookName","ɵLifecycleHooks","OnInit","OnDestroy","DoCheck","OnChanges","AfterContentInit","AfterContentChecked","AfterViewInit","AfterViewChecked","_isNgModuleMetadata","NgModule","_isPipeMetadata","Pipe","flattenArray","tree","resolveForwardRef","dedupeArray","array","flattenAndDedupeArray","isValidType","Type","componentModuleUrl","reflector","cmpMetadata","resourceUri","moduleId","scheme","MODULE_SUFFIX","stringifyType","extractIdentifiers","targetIdentifiers","_CompileValueConverter","componentStillLoadingError","ɵERROR_COMPONENT_TYPE","findReadVarNames","stmts","_ReadVarVisitor","visitAllStatements","varNames","applySourceSpanToStatementIfNeeded","stmt","transformer","_ApplySourceSpanTransformer","visitStatement","applySourceSpanToExpressionIfNeeded","expr","visitExpression","variable","ReadVarExpr","importExpr","typeParams","ExternalExpr","importType","typeModifiers","expressionType","ExpressionType","literalArr","LiteralArrayExpr","literalMap","quoted","LiteralMapExpr","LiteralMapEntry","not","NotExpr","fn","params","body","FunctionExpr","literal","LiteralExpr","createClassStmt","parentArgs","superCtorStmts","parent","SUPER_EXPR","callFn","toStmt","builder","concatClassBuilderParts","builders","ctor","ClassMethod","ctorParams","ctorStmts","ClassStmt","fields","getters","methods","modifiers","convertValueToOutputAst","_ValueOutputAstTransformer","createDiTokenExpression","toBase64String","b64","i1","i2","i3","toBase64Digit","toBase64VLQ","digit","B64_DIGITS","escapeIdentifier","escapeDollar","alwaysQuote","_SINGLE_QUOTE_ESCAPE_STRING_RE","requiresQuotes","_LEGAL_IDENTIFIER_RE","_createIndent","res","_INDENT_WITH","debugOutputAstAsTypeScript","converter","_TsEmitterVisitor","_debugFilePath","fileNameToModuleName","containingFilePath","getImportAs","symbol","getTypeArity","ctx","EmitterVisitorContext","createRoot","Statement","Expression","Type$1","visitType","toSource","registerContext","specs","specs_1","spec","SECURITY_SCHEMA","_isPixelDimensionStyle","prop","stripComments","_commentRe","extractSourceMappingUrl","matcher","_sourceMappingUrlRe","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","_ruleRe","content","suffix","contentPrefix","BLOCK_PLACEHOLDER","blocks","rule","CssRule","inputParts","_curlyRe","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","CLOSE_CURLY","OPEN_CURLY","StringWithEscapedBlocks","getStylesVarName","convertActionBinding","localResolver","implicitReceiver","action","bindingId","DefaultLocalResolver","actionWithoutBuiltins","convertPropertyBindingBuiltins","createLiteralArrayConverter","argCount","args","createLiteralMapConverter","keys","key","createPipeConverter","_AstToIrVisitor","actionStmts","flattenStatements","_Mode","prependTemporaryDecls","temporaryCount","lastIndex","preventDefaultVar","lastStatement","returnExpr","convertStmtIntoExpression","createPreventDefaultVar","cast","DYNAMIC_TYPE","notIdentical","toDeclStmt","StmtModifier","Final","ConvertActionBindingResult","converterFactory","convertBuiltins","convertPropertyBinding","expressionWithoutBuiltins","currValExpr","createCurrValueExpr","outputExpr","temporaryDeclaration","ConvertPropertyBindingResult","_BuiltinAstConverter","temporaryName","temporaryNumber","DeclareVarStmt","NULL_EXPR","statements","ensureStatementMode","mode","ensureExpressionMode","convertToStatementIfNeeded","arg","output","ExpressionStatement","ReturnStatement","providerDef","providerAst","multiProviderDef","singleProviderDef","convertDeps","providerIndex","dep","depIndex","paramName","allParams","FnParam","allDepDefs","depDef","exprs","depExprs","instantiate","providerExpr","INFERRED_TYPE","flags","depsExpr","providerMeta","tokenExpr","tokenMeta","isValue","isSkipSelf","isOptional","needsAdditionalRootNode","astNodes","lastAstNode","EmbeddedTemplateAst","hasViewContainer","ElementAst","NgContentAst","lifecycleHookToNodeFlag","lifecycleHook","nodeFlag","elementBindingDef","inputAst","dirAst","PropertyBindingType","Attribute","Property","Animation","bindingType","Class","Style","unit","fixedAttrsDef","elementAst","mapResult","attrAst","hostAttributes","prevValue","mergeAttributeValue","attrValue1","attrValue2","CLASS_ATTR$1","STYLE_ATTR","callCheckStmt","nodeIndex","CHECK_VAR","VIEW_VAR","callUnwrapValue","bindingIdx","Identifiers","unwrapValue","findStaticQueryIds","staticQueryIds","dynamicQueryIds","queryMatches","child","childData","add","delete","staticViewQueryIds","nodeStaticQueryIds","createComponentFactoryResolver","componentDirMeta","entryComponentFactories","entryComponent","ComponentFactoryResolver","classMeta","NgModuleRef","CodegenComponentFactoryResolver","elementEventNameAndTarget","eventAst","isAnimation","phase","target","calcStaticDynamicQueryFlags","queryIds","isFirst","serializeSummaries","summaryResolver","symbolResolver","symbols","types","toJsonSerializer","ToJsonSerializer","forJitSerializer","ForJitSerializer","resolvedSymbol","addOrMergeSummary","metadata","processedIndex","isLibraryFile","summary","resolveSummary","resolveSymbol","addLibType","addSourceType","summaryKind","CompileSummaryKind","ngModuleSummary","exportedDirectives","exportedPipes","summary_1","json","exportedVars","forJit","deserializeSummaries","symbolCache","deserializer","FromJsonDeserializer","deserialize","_resolveStyleStatements","compileResult","fileSuffix","dependencies","valuePlaceholder","getStaticSymbol","_stylesModuleUrl","isShimmed","stylesheetUrl","shim","_assertComponent","analyzeNgModules","programStaticSymbols","metadataResolver","_createNgModules","ngModules","symbolsMissingModule","_analyzeNgModules","analyzeAndValidateNgModules","programSymbols","ngModuleMetas","moduleMetasByRef","ngModule","ngModuleByPipeOrDirective","ngModulesByFile","ngDirectivesByFile","ngPipesByFile","ngInjectablesByFile","filePaths","isInjectable","ngModuleMeta","srcFileUrl","declaredDirectives","dirIdentifier","fileUrl","declaredPipes","pipeIdentifier","files","srcUrl","pipes","injectables","extractProgramSymbols","staticSymbolResolver","staticSymbols","isSourceFile","getSymbolsOf","symbolMeta","__symbolic","programPipesAndDirectives","ngModulePipesAndDirective","addNgModule","staticSymbol","getNgModuleMetadata","pipe","transitiveModule","modules","modMeta","isDirective","isPipe","isStaticType","shouldIgnore","expandedMessage","typeName","produceErrorMessage","mapStringMap","transform","HIDDEN_KEY","isPrimitive","o","positionalError","line","column","unescapeIdentifier","substr","createAotCompiler","compilerHost","options","urlResolver","StaticSymbolCache","AotSummaryResolver","StaticSymbolResolver","staticReflector","StaticReflector","StaticAndDynamicReflectionCapabilities","install","console","ɵConsole","htmlParser","I18NHtmlParser","HtmlParser","i18nFormat","missingTranslation","CompilerConfig","defaultEncapsulation","Emulated","useJit","normalizer","DirectiveNormalizer","loadResource","expressionParser","Parser","Lexer","elementSchemaRegistry","DomElementSchemaRegistry","tmplParser","TemplateParser","CompileMetadataResolver","NgModuleResolver","DirectiveResolver","PipeResolver","viewCompiler","ViewCompiler","AotCompiler","StyleCompiler","NgModuleCompiler","TypeScriptEmitter","locale","genFilePreamble","interpretStatements","resultVars","stmtsWithReturn","resultVar","_ExecutionContext","StatementInterpreter","_executeFunctionStatements","varValues","childCtx","createChildWihtLocalVars","vars","createDynamicClass","_classStmt","_ctx","propertyDescriptors","getter","instanceCtx","method","paramNames","param","writable","ctorParamNames","constructorMethod","_this","field","superClass","prototype","_declareFn","evalExpression","sourceUrl$$1","fnBody","fnArgNames","fnArgValues","argName","emptyFn","Function","bind","headerLines","toSourceMapGenerator","toJsComment","jitStatements","JitEmitterVisitor","returnStmt","getArgs","assertComponent","flattenSummaries","fn$$1","_initReflector","reflectionCapabilities","ɵReflectionCapabilities","_mergeOptions","optionsArr","_lastDefined","_mergeArrays","__extends","__","constructor","hasOwnProperty","VERSION","Version","TextAst","ngContentIndex","visitText","BoundTextAst","visitBoundText","AttrAst","visitAttr","BoundElementPropertyAst","visitElementProperty","BoundEventAst","handler","calcFullName","visitEvent","ReferenceAst","visitReference","VariableAst","visitVariable","references","endSourceSpan","visitElement","variables","visitEmbeddedTemplate","BoundDirectivePropertyAst","directiveName","templateName","visitDirectiveProperty","DirectiveAst","hostProperties","hostEvents","visitDirective","Builtin","visitNgContent","members","assertNoMembers","JSON","stringify","cache","declarationFile","memberSuffix","TagContentType","RAW_TEXT","ESCAPABLE_RAW_TEXT","PARSABLE_DATA","NAMED_ENTITIES","Aacute","aacute","Acirc","acirc","acute","AElig","aelig","Agrave","agrave","alefsym","Alpha","alpha","amp","and","ang","apos","Aring","aring","asymp","Atilde","atilde","Auml","auml","bdquo","Beta","beta","brvbar","bull","cap","Ccedil","ccedil","cedil","cent","Chi","chi","circ","clubs","cong","copy","crarr","cup","curren","dagger","Dagger","darr","dArr","deg","Delta","delta","diams","divide","Eacute","eacute","Ecirc","ecirc","Egrave","egrave","empty","emsp","ensp","Epsilon","epsilon","equiv","Eta","eta","ETH","eth","Euml","euml","euro","exist","fnof","forall","frac12","frac14","frac34","frasl","Gamma","gamma","ge","gt","harr","hArr","hearts","hellip","Iacute","iacute","Icirc","icirc","iexcl","Igrave","igrave","image","infin","int","Iota","iota","iquest","isin","Iuml","iuml","Kappa","kappa","Lambda","lambda","lang","laquo","larr","lArr","lceil","ldquo","le","lfloor","lowast","loz","lrm","lsaquo","lsquo","lt","macr","mdash","micro","middot","minus","Mu","mu","nabla","nbsp","ndash","ne","ni","notin","nsub","Ntilde","ntilde","Nu","nu","Oacute","oacute","Ocirc","ocirc","OElig","oelig","Ograve","ograve","oline","Omega","omega","Omicron","omicron","oplus","or","ordf","ordm","Oslash","oslash","Otilde","otilde","otimes","Ouml","ouml","para","permil","perp","Phi","phi","Pi","pi","piv","plusmn","pound","prime","Prime","prod","Psi","psi","quot","radic","rang","raquo","rarr","rArr","rceil","rdquo","real","reg","rfloor","Rho","rho","rlm","rsaquo","rsquo","sbquo","Scaron","scaron","sdot","sect","shy","Sigma","sigma","sigmaf","sim","spades","sub","sube","sup","sup1","sup2","sup3","supe","szlig","Tau","tau","there4","Theta","theta","thetasym","thinsp","THORN","thorn","tilde","times","trade","Uacute","uacute","uarr","uArr","Ucirc","ucirc","Ugrave","ugrave","uml","upsih","Upsilon","upsilon","Uuml","uuml","weierp","Xi","xi","Yacute","yacute","yen","yuml","Yuml","Zeta","zeta","zwj","zwnj","HtmlTagDefinition","closedByChildren","requiredParents","implicitNamespacePrefix","contentType","closedByParent","isVoid","_f","ignoreFirstLf","canSelfClose","parentToAdd","requireExtraParent","currentParent","lcParent","isParentTemplate","isClosedByChild","area","embed","link","img","hr","br","track","wbr","thead","tbody","tfoot","tr","td","th","col","svg","math","li","dt","dd","rb","rt","rtc","rp","optgroup","option","pre","listing","style","script","title","textarea","_SELECTOR_REGEXP","classNames","results","_addResult","cssSel","current","inNot","exec","hasElementSelector","classAttr","klass","notSelector","SelectorMatcher","_elementMap","_elementPartialMap","_classMap","_classPartialMap","_attrValueMap","_attrValuePartialMap","_listContexts","createNotMatcher","notMatcher","addSelectables","cssSelectors","callbackCtxt","listContext","SelectorListContext","_addSelectable","selectable","SelectorContext","isTerminal","_addTerminal","_addPartial","terminalMap","terminalValuesMap","partialMap","partialValuesMap","terminalList","matchedCallback","alreadyMatched","_matchTerminal","_matchPartial","selectables","starSelectables","finalize","nestedSelector","cbContext","callback","ValueTransformer","SyncAsyncResult","syncResult","asyncResult","Promise","HOST_REG_EXP","CompileAnimationEntryMetadata","definitions","CompileAnimationStateMetadata","CompileAnimationStateDeclarationMetadata","_super","stateNameExpr","call","CompileAnimationStateTransitionMetadata","stateChangeExpr","steps","CompileAnimationMetadata","CompileAnimationKeyframesSequenceMetadata","CompileAnimationStyleMetadata","CompileAnimationAnimateMetadata","timings","CompileAnimationWithStepsMetadata","CompileAnimationSequenceMetadata","CompileAnimationGroupMetadata","Injectable","CompileStylesheetMetadata","toSummary","anim","hostListeners","matches","inputsMap","bindConfig","outputsMap","CompilePipeMetadata","pure","CompileNgModuleMetadata","bootstrapComponents","importedModules","exportedModules","schemas","TransitiveCompileNgModuleMetadata","directivesSet","exportedDirectivesSet","pipesSet","exportedPipesSet","modulesSet","entryComponentsSet","addProvider","addDirective","addExportedDirective","addPipe","addExportedPipe","addModule","addEntryComponent","ec","componentType","ProviderMeta","ParserError","errLocation","ctxLocation","ParseSpan","AST","span","Quote","uninterpretedExpression","location","visitQuote","ImplicitReceiver","visitImplicitReceiver","Chain","expressions","visitChain","Conditional","trueExp","falseExp","visitConditional","PropertyRead","receiver","visitPropertyRead","PropertyWrite","visitPropertyWrite","SafePropertyRead","visitSafePropertyRead","KeyedRead","visitKeyedRead","KeyedWrite","visitKeyedWrite","BindingPipe","exp","visitPipe","LiteralPrimitive","visitLiteralPrimitive","LiteralArray","visitLiteralArray","LiteralMap","visitLiteralMap","Interpolation","strings","visitInterpolation","Binary","operation","left","right","visitBinary","PrefixNot","visitPrefixNot","MethodCall","visitMethodCall","SafeMethodCall","visitSafeMethodCall","FunctionCall","visitFunctionCall","TemplateBinding","keyIsVar","RecursiveAstVisitor","AstTransformer","$BANG","$HASH","$PERCENT","$AMPERSAND","$LPAREN","$RPAREN","$STAR","$COMMA","$PERIOD","$COLON","$LT","$QUESTION","$X","$LBRACKET","$BACKSLASH","$RBRACKET","$CARET","$u","$x","$BAR","$RBRACE","InterpolationConfig","fromArray","markers","KEYWORDS","tokens","scanToken","decorators","ctorParameters","numValue","strValue","isCharacter","isNumber","isString","isOperator","operater","isKeyword","isKeywordLet","isKeywordAs","isKeywordNull","isKeywordUndefined","isKeywordTrue","isKeywordFalse","isKeywordThis","isError","toNumber","EOF","scanIdentifier","scanNumber","scanCharacter","scanString","scanOperator","scanComplexOperator","one","twoCode","two","threeCode","three","simple","parseFloat","quote","buffer","marker","unescapedCode","last","position","SplitInterpolation","offsets","TemplateBindingParseResult","templateBindings","_lexer","parseAction","_checkNoInterpolation","sourceToLex","_stripComments","_ParseAST","parseChain","parseBinding","_parseBindingAst","parseSimpleBinding","SimpleExpressionChecker","check","_reportError","_parseQuote","prefixSeparatorIndex","parseTemplateBindings","prefixToken","prefixTokens","t","parseInterpolation","splitInterpolation","expressionText","_findInterpolationErrorColumn","wrapLiteralPrimitive","_commentStart","outerQuote","nextChar","partInErrIdx","inputLength","rparensExpected","rbracketsExpected","rbracesExpected","next","inputIndex","optionalCharacter","peekKeywordLet","peekKeywordAs","expectCharacter","optionalOperator","op","expectOperator","operator","expectIdentifierOrKeyword","expectIdentifierOrKeywordOrString","parsePipe","parseExpression","parseConditional","parseLogicalOr","yes","no","parseLogicalAnd","parseEquality","parseRelational","parseAdditive","parseMultiplicative","parsePrefix","parseCallChain","parsePrimary","parseAccessMemberOrMethodCall","parseCallArguments","elements","parseExpressionList","parseLiteralMap","literalValue","terminator","isSafe","positionals","expectTemplateBindingKey","operatorFound","bindings","rawKey","letStart","start_2","letName","locationText","skip","file","moveBy","ch","priorLine","getContext","maxChars","maxLines","startOffset","endOffset","ctxChars","ctxLines","before","after","details","ParseErrorLevel","WARNING","ERROR","ParseError","level","contextStr","Expansion","visitExpansion","ExpansionCase","expSourceSpan","visitExpansionCase","valueSpan","visitAttribute","startSourceSpan","visitComment","TAG_OPEN_START","TAG_OPEN_END","TAG_OPEN_END_VOID","TAG_CLOSE","COMMENT_START","COMMENT_END","CDATA_START","CDATA_END","ATTR_NAME","ATTR_VALUE","DOC_TYPE","EXPANSION_FORM_START","EXPANSION_CASE_VALUE","EXPANSION_CASE_EXP_START","EXPANSION_CASE_EXP_END","EXPANSION_FORM_END","Token$1","TokenError","errorMsg","tokenType","TokenizeResult","_CR_OR_CRLF_REGEXP","_ControlFlowError","_file","_getTagDefinition","_tokenizeIcu","_interpolationConfig","_peek","_nextPeek","_index","_line","_column","_expansionCaseStack","_inInterpolation","_input","_length","_advance","_processCarriageReturns","_getLocation","_attemptCharCode","_consumeCdata","_consumeComment","_consumeDocType","_consumeTagClose","_consumeTagOpen","_tokenizeExpansionForm","_consumeText","_beginToken","_endToken","_consumeExpansionFormStart","_isInExpansionForm","_consumeExpansionCaseStart","_isInExpansionCase","_consumeExpansionCaseEnd","_consumeExpansionFormEnd","_getSpan","_currentTokenStart","_currentTokenType","_createError","_attemptCharCodeCaseInsensitive","_requireCharCode","_attemptStr","chars","initialPosition","_savePosition","_restorePosition","_attemptStrCaseInsensitive","_requireStr","_attemptCharCodeUntilFn","predicate","_requireCharCodeUntilFn","_attemptUntilChar","_readChar","decodeEntities","_decodeEntity","startPosition","isHex","numberStart","strNum","entity","_consumeRawText","firstCharOfEnd","attemptEndRest","tagCloseStart","textStart","textToken","_consumePrefixAndName","nameOrPrefixStart","nameStart","lowercaseTagName","savedPos","_consumeTagOpenStart","_consumeAttributeName","_consumeAttributeValue","_consumeTagOpenEnd","contentTokenType","_consumeRawTextWithTagClose","prefixAndName","quoteChar","valueStart","_readUntil","_isTextEnd","nbTokens","TreeError","ParseTreeResult","rootNodes","Parser$1","parseExpansionForms","tokensAndErrors","treeAndErrors","_TreeBuilder","build","_rootNodes","_errors","_elementStack","_consumeStartTag","_consumeEndTag","_closeVoidElement","_consumeExpansion","prev","_advanceIf","startToken","_addToParent","expCase","_parseExpansionCase","_collectExpansionExpTokens","parsedExp","expansionFormStack","_getParentElement","startTagToken","_consumeAttr","_getElementFullName","selfClosing","tagDef","_pushElement","_popElement","parentEl","_getParentElementSkippingContainers","container","newParent","_insertBeforeContainer","endTagToken","errMsg","stackIndex","splice","valueToken","parentElement","Message","placeholders","placeholderToMessage","sources","startLine","startCol","endLine","endCol","Text$1","Container","visitContainer","Icu","visitIcu","TagPlaceholder","startName","closeName","visitTagPlaceholder","Placeholder","visitPlaceholder","IcuPlaceholder","visitIcuPlaceholder","CloneVisitor","icu","expressionPlaceholder","ph","RecurseVisitor","TAG_TO_PLACEHOLDER_NAMES","A","B","BR","EM","H1","H2","H3","H4","H5","H6","HR","I","LI","LINK","OL","P","Q","S","SMALL","SUB","SUP","TBODY","TD","TFOOT","TH","THEAD","TR","TT","U","UL","PlaceholderRegistry","_placeHolderNameCounts","_signatureToName","getStartTagPlaceholderName","signature","_hashTag","upperTag","_generateUniqueName","getCloseTagPlaceholderName","_hashClosingTag","getPlaceholderName","upperName","uniqueName","getUniquePlaceholder","strAttrs","seen","_expressionParser","_isIcu","_icuDepth","_placeholderRegistry","_placeholderToContent","_placeholderToMessage","i18nodes","startPhName","closePhName","attribute","_visitTextWithInterpolation","comment","i18nIcuCases","i18nIcu","caze","expPh","phName","icuCase","sDelimiter","eDelimiter","lastStringIdx","I18nError","_I18N_ATTR_PREFIX","_I18N_COMMENT_PREFIX_REGEXP","ExtractionResult","_VisitorMode","Extract","Merge","_implicitTags","_implicitAttrs","_init","_inI18nBlock","_messages","_translations","wrapper","translatedNode","_mode","_mayBeAddBlockChildren","wasInIcu","_inIcu","_isInTranslatableSection","_addMessage","isOpening","isClosing","_inI18nNode","_depth","_blockStartDepth","_closeTranslatableSection","_blockChildren","_blockMeaningAndDesc","_translateMessage","_openTranslatableSection","wasInI18nNode","wasInImplicitNode","_inImplicitNode","childNodes","translatedChildNodes","i18nAttr","i18nMeta","isImplicit","some","isTopLevelImplicit","isTranslatable","visitNodes","visited","_visitAttributesOf","translatedAttrs","_translateAttributes","_msgCountAtSectionStart","_createI18nMessage","explicitAttrNameToValue","implicitAttrNames","msgMeta","i18nParsedMessageMeta","translatedAttributes","directChildren","startIndex","significantChildren","XmlTagDefinition","XmlParser","_SerializerVisitor","strCases","Serializer","write","load","createNameMapper","SimplePlaceholderMapper","mapName","internalToPublic","publicToNextId","publicToInternal","toInternalName","publicName","visitPlaceholderName","nextId","_Visitor$1","visitTag","_serializeAttributes","strChildren","visitDeclaration","decl","visitDoctype","doctype","rootTag","dtd","Declaration","unescapedAttrs","Doctype","Tag","Text$2","unescapedValue","CR","ws","_VERSION","_XMLNS","_DEFAULT_SOURCE_LANG","_PLACEHOLDER_TAG","_FILE_TAG","_SOURCE_TAG","_TARGET_TAG","_UNIT_TAG","_CONTEXT_GROUP_TAG","_CONTEXT_TAG","_WriteVisitor","transUnits","contextTags","contextGroupTag","purpose","context-type","transUnit","datatype","priority","source-language","original","xliff","version","xmlns","encoding","xliffParser","XliffParser","msgIdToHtml","i18nNodesByMsgId","XmlToI18n","msgId","convert","i18nNodes","ctype","startTagPh","closeTagPh","_locale","_unitMlString","_msgIdToHtml","xml","idAttr","_addError","innerTextStart","innerTextEnd","innerText","localeAttr","expansion","expansionCase","xmlIcu","nameAttr","caseMap","_VERSION$1","_XMLNS$1","_DEFAULT_SOURCE_LANG$1","_PLACEHOLDER_TAG$1","_PLACEHOLDER_SPANNING_TAG","_XLIFF_TAG","_SOURCE_TAG$1","_TARGET_TAG$1","_UNIT_TAG$1","_WriteVisitor$1","units","notes","category","srcLang","xliff2Parser","Xliff2Parser","XmlToI18n$1","tagPh","_nextPlaceholderId","disp","tagPc","equivStart","equivEnd","dispStart","dispEnd","versionAttr","startAttr","endAttr","startId","endId","_MESSAGES_TAG","_MESSAGE_TAG","_PLACEHOLDER_TAG$2","_EXEMPLE_TAG","_SOURCE_TAG$2","_DOCTYPE","exampleVisitor","ExampleVisitor","_Visitor$2","rootNode","sourceTags","addDefaultExamples","startEx","closeEx","exText","_TRANSLATIONS_TAG","_TRANSLATION_TAG","_PLACEHOLDER_TAG$3","xtbParser","XtbParser","XmlToI18n$2","xtb","_bundleDepth","langAttr","TranslationBundle","_i18nNodesByMsgId","mapperFactory","missingTranslationStrategy","MissingTranslationStrategy","Warning","_i18nToHtml","I18nToHtmlVisitor","serializer","digestFn","srcMsg","html","_digest","_mapperFactory","_missingTranslationStrategy","_console","_contextStack","_convertToText","_srcMsg","_mapper","mapper","warn","_htmlParser","translationsFormat","_translationBundle","parseResult","CORE","ANALYZE_FOR_ENTRY_COMPONENTS","ElementRef","ViewContainerRef","ChangeDetectorRef","QueryList","TemplateRef","ɵCodegenComponentFactoryResolver","ComponentFactory","ComponentRef","NgModuleFactory","NgModuleInjector","ɵNgModuleInjector","RegisterModuleFactoryFn","ɵregisterModuleFactory","Injector","LOCALE_ID","TRANSLATIONS_FORMAT","inlineInterpolate","ɵinlineInterpolate","interpolate","ɵinterpolate","EMPTY_ARRAY","ɵEMPTY_ARRAY","EMPTY_MAP","ɵEMPTY_MAP","Renderer","viewDef","ɵvid","elementDef","ɵeld","anchorDef","ɵand","textDef","ɵted","directiveDef","ɵdid","ɵprd","queryDef","ɵqud","pureArrayDef","ɵpad","pureObjectDef","ɵpod","purePipeDef","ɵppd","pipeDef","ɵpid","nodeValue","ɵnov","ngContentDef","ɵncd","ɵunv","createRendererType2","ɵcrt","RendererType2","ViewDefinition","createComponentFactory","ɵccf","expanded","ProviderViewContext","ProviderElementContext","viewContext","_parent","_isViewRoot","_directiveAsts","refs","_sourceSpan","_transformedProviders","_seenProviders","_hasViewContainer","_queriedTokens","_attrs","directivesMeta","directiveAst","_allProviders","_contentQueries","_addQueryReadsTo","templateRefId","refAst","defaultQueryValue","_getOrCreateLocalProvider","afterElement","sortedProviderTypes","transformProviders","sortedDirectives","dir1","dir2","allMatches","defaultValue","queryReadTokens","_getQueriesFor","queryValue","read","tokenRef","currentEl","distance","descendants","requestingProviderType","transformedProviderAst","transformedProviders","transformedUseValue","transformedUseExisting","transformedDeps","existingDiDep","_getDependency","_getLocalDependency","currElement","currEager","isSelf","prevElement","NgModuleProviderAnalyzer","extraProviders","ngModuleProvider","errorString","requestorSourceSpan","foundLocal","ElementSchemaRegistry","hasProperty","schemaMetas","hasElement","getMappedPropName","getDefaultComponentElementName","validateProperty","validateAttribute","normalizeAnimationStyleProperty","normalizeAnimationStyleValue","camelCaseProp","userProvidedProp","style$$1","PROPERTY_PARTS_SEPARATOR","ATTRIBUTE_PREFIX","CLASS_PREFIX","STYLE_PREFIX","ANIMATE_PROP_PREFIX","BoundPropertyType","DEFAULT","LITERAL_ATTR","ANIMATION","BoundProperty","BindingParser","_exprParser","_schemaRegistry","_targetErrors","pipesByName","_usedPipes","getUsedPipes","createDirectiveHostPropertyAsts","dirMeta","elementSelector","boundProps_1","parsePropertyBinding","createElementPropertyAst","createDirectiveHostEventAsts","targetEventAsts_1","parseEvent","sourceInfo","_reportExpressionParserErrors","_checkPipes","parseInlineTemplateBinding","targetMatchableAttrs","targetProps","targetVars","_parseTemplateBindings","binding","_parsePropertyAst","parseLiteralAttr","bindingsResult","warning","_parseAnimation","isAnimationProp","_parseBinding","parsePropertyInterpolation","isHostBinding","boundProp","boundPropertyName","securityContexts","_validatePropertyOrAttributeName","nsSeparatorIdx","ns","targetEvents","_parseAnimationEvent","_parseEvent","eventName","_parseAction","errors_1","collector","PipeCollector","pipeName","pipeMeta","isAttr","report","BIND_NAME_REGEXP","KW_BIND_IDX","KW_LET_IDX","KW_REF_IDX","KW_ON_IDX","KW_BINDON_IDX","KW_AT_IDX","IDENT_KW_IDX","IDENT_BANANA_BOX_IDX","IDENT_PROPERTY_IDX","IDENT_EVENT_IDX","TEMPLATE_ATTR","TEMPLATE_ATTR_PREFIX","TEXT_CSS_SELECTOR","TEMPLATE_ATTR_DEPRECATION_WARNING","TEMPLATE_TRANSFORMS","InjectionToken","TemplateParseError","TemplateParseResult","templateAst","usedPipes","_config","transforms","tryParse","tryParseHtml","expandHtml","getInterpolationConfig","htmlAstWithErrors","uniqDirectives","uniqPipes","providerViewContext","bindingParser","parseVisitor","TemplateParseVisitor","EMPTY_ELEMENT_CONTEXT","_assertNoReferenceDuplicationOnTemplate","forced","expandedHtmlAst","existingReferences","Optional","Inject","_bindingParser","_schemas","selectorMatcher","directivesIndex","ngContentCount","findNgContentIndex","queryStartIndex","preparsedElement","matchableAttrs","elementOrDirectiveProps","elementOrDirectiveRefs","elementVars","events","templateElementOrDirectiveProps","templateMatchableAttrs","templateElementVars","hasInlineTemplates","isTemplateElement","templateBindingsSource","hasBinding","_parseAttr","normalizedName","_normalizeAttributeName","hasTemplateBinding","elementCssSelector","_parseDirectives","directiveMetas","matchElement","boundDirectivePropNames","directiveAsts","_createDirectiveAsts","elementProps","_createElementPropertyAsts","isViewRoot","providerContext","NON_BINDABLE_VISITOR","ElementContext","parsedElement","projectionSelector","every","_assertAllEventsPublishedByDirectives","_assertNoComponentsNorElementBindingsOnTemplate","transformedDirectiveAsts","transformedHasViewContainer","_assertElementExists","_assertOnlyOneComponent","ngContentIndex_1","templateQueryStartIndex","templateSelector","templateDirectiveMetas","templateBoundDirectivePropNames","templateDirectiveAsts","templateElementProps","templateProviderContext","targetRefs","srcSpan","bindParts","_parseVariable","_parseReference","_parseAssignmentEvent","ElementOrDirectiveRef","size","props","elementSourceSpan","targetReferences","targetBoundDirectivePropNames","matchedReferences","directiveProperties","_checkPropertiesInSchema","_createDirectivePropertyAsts","elOrDirRef","refToken","boundProps","targetBoundDirectiveProps","boundPropsByName_1","isLiteral","dirProp","elProp","boundElementProps","_findComponentDirectives","_findComponentDirectiveNames","componentTypeNames","elName","allDirectiveEvents","event","NonBindableVisitor","attrNameAndValues","_ngContentIndexMatcher","_wildcardNgContentIndex","wildcardNgContentIndex","ngContentIndices","ResourceLoader","DEFAULT_PACKAGE_URL_PROVIDER","provide","PACKAGE_ROOT_URL","_packagePrefix","resolvedUrl","resolvedParts","_resourceLoader","_urlResolver","_resourceLoaderCache","clearCache","clear","clearCacheFor","normalizedDirective","stylesheet","_fetch","normalizeTemplate","prenormData","normalizedTemplateSync","normalizedTemplateAsync","normalizeTemplateSync","normalizeTemplateAsync","then","normalizedTemplate","normalizeExternalStylesheets","prenomData","normalizeLoadedTemplate","templateAbsUrl","rootNodesAndErrors","templateMetadataStyles","normalizeStylesheet","TemplatePreparseVisitor","templateStyles","_loadMissingExternalStylesheets","loadedStylesheets","all","styleUrl","loadedStyle","allStyleUrls","allStyles","styleWithImports","ngNonBindableStackCount","textContent_1","__assign","assign","_reflector","typeMetadata","annotations","throwIfNotFound","propertyMetadata","propMetadata","_mergeWithPropertyMetadata","dm","directiveType","Input","bindingPropertyName","Output","hostBindings","HostBinding","hostBinding","hostPropertyName","startWith","HostListener","hostListener","Query","_merge","_extractPublicName","def","_dedupeBindings","names","reversedResult","mergedInputs","mergedOutputs","mergedHost","mergedQueries","ɵReflectorReader","isNgModule","metas","annotation","SummaryResolver","getLibraryFileName","addSummary","JitSummaryResolver","_summaries","ERROR_COLLECTOR_TOKEN","_ngModuleResolver","_directiveResolver","_pipeResolver","_summaryResolver","_directiveNormalizer","_staticSymbolCache","_errorCollector","_nonNormalizedDirectiveCache","_directiveCache","_summaryCache","_pipeCache","_ngModuleCache","_ngModuleOfTypes","_createProxyClass","baseType","delegate","proxyClass","setDelegate","overriddenName","getGeneratedClass","getComponentViewClass","getHostComponentViewClass","getHostComponentType","HostClass","getRendererType","getComponentFactory","hostView","initComponentFactory","_loadSummary","typeSummary","loadDirectiveMetadata","isSync","getNonNormalizedDirectiveMetadata","createDirectiveMetadata","templateMetadata","normalizedDirMeta","cacheEntry","nonNormalizedTemplateMetadata","changeDetectionStrategy","entryComponentMetadata","_getProvidersMetadata","_getEntryComponentMetadata","_getQueriesMetadata","_getTypeMetadata","getDirectiveMetadata","getDirectiveSummary","dirSummary","getNgModuleSummary","moduleType","moduleSummary","loadNgModuleDirectiveAndPipeMetadata","loading","promise","_loadPipeMetadata","compileMeta","exportedNonModuleIdentifiers","imports","importedType","importedModuleType","moduleWithProviders","_checkSelfImport","importedModuleSummary","_getTypeDescriptor","exportedType","exportedModuleSummary","_getIdentifierMetadata","_getTransitiveNgModuleMetadata","declarations","declaredType","declaredIdentifier","_addTypeToModule","exportedId","bootstrap","oldModule","modulesByToken","modSummary","mod","comp","addedTokens","prevModules","moduleRef","ann","getInjectableSummary","_getInjectableMetadata","throwOnUnknownDeps","_getDependenciesMetadata","ɵLIFECYCLE_HOOKS_VALUES","_getFactoryMetadata","getPipeMetadata","pipeType","getPipeSummary","pipeSummary","getOrLoadPipeMetadata","pipeAnnotation","typeOrFunc","hasUnknownDeps","parameters","dependenciesMetadata","paramEntry","Host","Self","SkipSelf","attributeName","_getTokenMetadata","depsTokens","compileToken","targetEntryComponents","debugInfo","compileProviders","providerIdx","_validateProvider","providersInfo","soFar","seenProvider","seenProviderIdx","_getEntryComponentsFromProvider","getProviderMetadata","components","collectedIdentifiers","compileDeps","compileTypeMetadata","compileFactoryMetadata","isViewQuery","propertyName","_getQueryMetadata","_queryVarBindings","q","varName","first","otherType","TypeModifier","Const","hasModifier","modifier","BuiltinTypeName","Dynamic","Bool","Int","Inferred","BuiltinType","visitBuiltintType","visitExpressionType","ArrayType","of","visitArrayType","MapType","valueType","visitMapType","BOOL_TYPE","BinaryOperator","Equals","NotEquals","Identical","NotIdentical","Minus","Plus","Divide","Multiply","Modulo","And","Or","Lower","LowerEquals","Bigger","BiggerEquals","ReadPropExpr","ReadKeyExpr","callMethod","InvokeMethodExpr","InvokeFunctionExpr","InstantiateExpr","conditional","trueCase","falseCase","ConditionalExpr","equals","rhs","BinaryOperatorExpr","notEquals","identical","plus","multiply","modulo","lower","lowerEquals","bigger","biggerEquals","isBlank","TYPED_NULL_EXPR","CastExpr","BuiltinVar","This","Super","CatchError","CatchStack","builtin","visitReadVarExpr","WriteVarExpr","visitWriteVarExpr","WriteKeyExpr","visitWriteKeyExpr","WritePropExpr","visitWritePropExpr","BuiltinMethod","ConcatArray","SubscribeObservable","Bind","visitInvokeMethodExpr","visitInvokeFunctionExpr","classExpr","visitInstantiateExpr","visitLiteralExpr","visitExternalExpr","visitConditionalExpr","visitNotExpr","visitCastExpr","visitFunctionExpr","DeclareFunctionStmt","lhs","visitBinaryOperatorExpr","visitReadPropExpr","visitReadKeyExpr","entries","visitLiteralArrayExpr","visitLiteralMapExpr","CommaExpr","visitCommaExpr","THIS_EXPR","Private","visitDeclareVarStmt","visitDeclareFunctionStmt","visitExpressionStmt","visitReturnStmt","AbstractClassPart","ClassField","ClassGetter","visitDeclareClassStmt","IfStmt","visitIfStmt","TryCatchStmt","bodyStmts","catchStmts","visitTryCatchStmt","ThrowStmt","visitThrowStmt","AstTransformer$1","transformExpr","transformStmt","visitAllExpressions","mapType","ctorMethod","visitCommentStmt","RecursiveAstVisitor$1","_clone","clone","QUOTED_KEYS","quotedSet","ComponentFactoryDependency","NgModuleCompileResult","ngModuleFactoryVar","compile","bootstrapComponentFactories","_InjectorBuilder","providerParser","injectorClass","ngModuleFactoryStmt","registerFactoryStmt","_ngModuleMeta","_entryComponentFactories","_bootstrapComponentFactories","_lazyProps","_tokens","_instances","_createStmts","_destroyStmts","providerValueExpressions","_getProviderValue","instance","_createProviderProperty","callNgOnDestroy","getMethodStmts","InjectMethodVars","notFoundResult","InjectorProps","injClassName","isMulti","isEager","resolvedProviderValueExpr","internalFieldProp","getterStmts","VERSION$1","JS_B64_PREFIX","SourceMapGenerator","sourcesContent","lines","lastCol0","hasMappings","addSource","addLine","addMapping","col0","sourceLine0","sourceCol0","currentLine","toJSON","sourcesIndex","mappings","lastSourceIndex","lastSourceLine0","lastSourceCol0","segAsStr","sourceRoot","CATCH_ERROR_VAR$1","CATCH_STACK_VAR$1","_EmittedLine","indent","srcSpans","_exportedVars","_indent","_classes","_lines","isExportedVar","println","lastPart","print","lineIsEmpty","_currentLine","newLine","removeEmptyLastLine","incIndent","decIndent","pushClass","clazz","popClass","sourceLines","sourceFilePath","genFilePath","startsAtLine","firstOffsetMapped","mapFirstOffsetIfNeeded","lineIdx","spans","spanIdx","sourceLine","sourceCol","AbstractEmitterVisitor","_escapeDollarInStrings","hasElseCase","lineWasEmpty","getBuiltinMethodName","opStr","useNewLine","visitAllObjects","separator","_importResolver","emitStatements","srcFilePath","preamble","preambleLines","reexports","exportedFilePath","reexportsCode","reexport","as","importsWithPrefixes","importedFilePath","sm","_genFilePath","typeExpression","defaultType","_visitIdentifier","_resolveStaticSymbol","_printColonType","_visitClassField","_visitClassConstructor","_visitClassGetter","_visitClassMethod","_visitParams","typeStr","arity","importReference","suppliedParameters","additionalParameters","HTML","URL","RESOURCE_URL","BOOLEAN","NUMBER","STRING","OBJECT","SCHEMA","_ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","_schema","encodedType","strType","strProperties","properties","typeNames","superName","superType","property","schema","NO_ERRORS_SCHEMA","CUSTOM_ELEMENTS_SCHEMA","elementProperties","strVal","valAndSuffixMatch","ShadowCss","strictStyling","shimCssText","hostSelector","sourceMappingUrl","_insertDirectives","_scopeCssText","_insertPolyfillDirectivesInCssText","_insertPolyfillRulesInCssText","_cssContentNextSelectorRe","_cssContentRuleRe","scopeSelector","unscopedRules","_extractUnscopedRulesFromCssText","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertShadowDOMSelectors","_scopeSelectors","r","_cssContentUnscopedRuleRe","_convertColonRule","_cssColonHostRe","_colonHostPartReplacer","_cssColonHostContextRe","_colonHostContextPartReplacer","regExp","partReplacer","_polyfillHostNoCombinator","_polyfillHost","_shadowDOMSelectorsRe","_scopeSelector","strict","_shadowDeepSelectors","deepParts","shallowPart","otherParts","applyScope","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","re","_makeScopeMatcher","lre","rre","_selectorReSuffix","_applySimpleSelectorScope","_polyfillHostRe","replaceBy_1","_polyfillHostNoCombinatorRe","hnc","colon","isRe","_scopeSelectorPart","scopedP","safeContent","SafeSelector","scopedSelector","sep","scopeAfter","scopedPart","restore","_colonHostContextRe","_polyfillHostContext","_colonHostRe","keep","replaceBy","_content","pseudo","_parenSuffix","COMPONENT_VARIABLE","HOST_ATTR","CONTENT_ATTR","StylesCompileDependency","StylesCompileResult","componentStylesheet","CompiledStylesheet","stylesVar","_shadowCss","compileComponent","_compileStyles","stylesheetMeta","compiledStylesheet","isComponentStylesheet","styleExpressions","plainStyle","_shimIfNeeded","EventHandlerVars","allowDefault","_converterFactory","BuiltinFunctionCall","_localResolver","_implicitReceiver","_nodeMap","_resultMap","_currentTemporary","fnResult","convertedArgs","leftMostSafe","leftMostSafeNode","convertSafeAccess","_getLocal","getLocal","varExpr","guardedExpression","temporary","needsTemporary","allocateTemporary","access","releaseTemporary","visitSome","tempNumber","IMPLICIT_TEMPLATE_VAR","ViewCompileResult","viewClassVar","rendererTypeVar","_genConfigNext","embeddedViewCount","renderComponentVarName","template_1","customRenderData","renderComponentVar","viewBuilderFactory","embeddedViewIndex","ViewBuilder","viewName","LOG_VAR","COMP_VAR","EVENT_NAME_VAR","ALLOW_DEFAULT_VAR","purePipeNodeIndices","refNodeIndices","_createPipe","queryIds_1","queryIndex","nodeFlags","nodeDef","targetStatements","_createNodeExpressions","updateRendererStmts","updateDirectivesStmts","nodeDefExprs","updateRendererFn","_createUpdateFn","updateDirectivesFn","viewFlags","OnPush","viewFactory","updateStmts","updateFn","preStmts","astWithSource","inter","updateRendererExpressions","bindingIndex","_preprocessUpdateExpression","updateRenderer","_visitElementOrTemplate","queryMatchesExpr","childVisitor","childCount","_createElementHandleEventFn","usedEvents","dirHostBindings","inputDefs","outputDefs","compAst","compRendererType","compView","ɵelementEventFullName","componentFactoryResolverProvider","_visitProvider","dirIndex","localDirAst","_visitDirective","dirHostEvents","queryMatchExprs","outputAst","elementNodeIndex","_visitProviderOrDirective","mapValue","updateDirectiveExpressions","dirContextExpr","hostEventAst","updateDirectives","currViewExpr","currBuilder","refNodeIndex","varAst","varValue","valueExpr_1","valueExpr_2","nodeIndex_1","compViewExpr","compBuilder","pipeNodeIndex","pipeValueExpr_1","nodeValueExpr_1","createUpdateStatements","allowEmptyExprs","updateBindingCount","nameResolver","self","logWithNodeDef","handlers","handleEventStmts","handleEventBindingCount","trueStmts","eventTarget","fullEventName","handleEventFn","GeneratedFile","genFileUrl","indexBySymbol","processedSummaryBySymbol","processedSummaries","clone_1","processedSummary","processValue","summaries","importAs","__symbol","baseSymbol","isLibrary","ngModuleSymbols","fnName","serializeSummaryWithDeps","jitExportAsName","serializeSummaryRef","serializeSummary","typeSymbol","jitImportedSymbol","Transformer","serializedSymbol","_host","_metadataResolver","_templateParser","_styleCompiler","_viewCompiler","_ngModuleCompiler","_outputEmitter","_localeId","_translationFormat","_genFilePreamble","_symbolResolver","compileAll","rootFiles","sourceModules","_compileSrcFile","generatedFiles","_createSummary","_compileModule","stylesCompileResults","compiledStyleSheet","_codgenStyles","compViewVars","_compileComponent","_compileComponentFactory","compRenderTypeVar","srcModule","_codegenSourceModule","targetExportedVars","symbolSummaries","typeData","appCompileResult","hostType","hostMeta","hostViewFactoryVar","compFactoryVar","inputsExprs","outputsExprs","directiveIdentifiers","componentStyles","parsedTemplate","stylesExpr","viewResult","stylesCompileResult","staticDelegate","dynamicDelegate","updateCapabilities","isReflectionEnabled","lcProperty","setter","resolveEnum","enumIdentifier","ANGULAR_CORE","IGNORE","knownMetadataClasses","knownMetadataFunctions","errorRecorder","annotationCache","propertyCache","parameterCache","methodCache","conversionMap","annotationForParentClassWithSummaryKind","annotationNames","initializeConversionMap","kc","_registerDecoratorOrConstructor","kf","_registerFunction","findSymbolDeclaration","getResourcePath","importSymbol","rootSymbol","findDeclaration","recordImportAs","containingFile","getSymbolByModule","classMetadata","getTypeMetadata","parentType","findParentType","parentAnnotations","ownAnnotations_1","simplify","requiredAnnotationTypes","typeHasRequiredAnnotation","requiredType","reportError","parentPropMetadata_1","parentProp","members_1","propData","parameters_1","ctorData","parameterTypes","parameterDecorators_1","paramType","nestedResult","_methodNames","methodNames","parentMethodNames_1","members_2","isMethod","trySimplify","injectionToken","opaqueToken","ContentChild","ContentChildren","ViewChild","ViewChildren","trigger","state","transition","animate","keyframes","sequence","group","originalRecorder","simplifyInContext","depth","resolveReferenceValue","simplifyCall","functionSymbol","targetFunction","calling","value_1","defaults","functionScope","BindingScope","result_1","oldScope","scope","done","result_2","spreadArray","spreadArray_1","spreadItem","value_2","declarationValue","operand","indexTarget","member","selectContext","selectTarget","localValue","missing","argExpressions","recordedSimplifyInContext","PopulatedScope","ResolvedStaticSymbol","SUPPORTED_SCHEMA_VERSION","staticSymbolCache","metadataCache","resolvedSymbols","resolvedFilePaths","symbolResourcePaths","symbolFromFile","knownFileNameToModuleNames","_resolveSymbolMembers","_resolveSymbolFromSummary","_createSymbolsOf","baseImportAs","summarizedFileName","summarizedName","sourceSymbol","targetSymbol","invalidateFile","symbols_1","baseResolvedSymbol","baseMetadata","statics","getModuleMetadata","topLevelSymbolNames_1","origins_1","metadataKey","origin","originFilePath","resolveModule","createResolvedSymbol","_loop_1","moduleExport","export","exportSymbol","symName","resolvedModule","createExport","this_1","nestedExports","topLevelPath","topLevelSymbolNames","transformedMeta_1","ReferenceTransformer","functionParams","symbolic","oldLen","module_1","transformedMeta","moduleMetadata","moduleMetadatas","getMetadataFor","maxVersion_1","md","errorMessage","moduleNameToFileName","summaryCache","loadedFilePaths","getOutputFileName","_loadSummaryFile","summaryFilePath","loadSummary","ReturnValue","debugAst","currCtx","__proto__","CATCH_ERROR_VAR$2","CATCH_STACK_VAR$2","subscribe","fnExpr","AbstractJsEmitterVisitor","_evalArgNames","_evalArgValues","JitCompiler","_injector","_compilerConfig","_compiledTemplateCache","_compiledHostTemplateCache","_compiledDirectiveWrapperCache","_compiledNgModuleCache","_sharedStylesheetCount","compileModuleSync","_compileModuleAndComponents","compileModuleAsync","compileModuleAndAllComponentsSync","_compileModuleAndAllComponents","compileModuleAndAllComponentsAsync","getNgContentSelectors","loadAotSummaries","hasAotSummary","_filterJitIdentifiers","ids","loadingPromise","_loadModules","createResult","_compileComponents","componentFactories","ModuleWithComponentFactories","mainModule","loadingPromises","mainNgModule","nestedNgModule","ngModuleFactory","moduleMeta_1","Compiler","ModuleBoundCompiler","allComponentFactories","moduleByJitDirective","templates","transJitModules","localMod","localModuleMeta","dirRef","_createCompiledTemplate","_createCompiledHostTemplate","entryComponentType","_compileTemplate","compiledTemplate","hostClass","ɵgetComponentViewDefinitionFactory","CompiledTemplate","isCompiled","externalStylesheetsByModuleUrl","_resolveStylesCompileResult","viewClass","viewClassAndRendererTypeVars","compiled","nestedCompileResult","nestedStylesArr","_resolveAndEvalStylesCompileResult","_viewClass","_delegate","_ngModule","injector","MessageBundle","updateFromTemplate","htmlParserResult","i18nParserResult","getMessages","filterSources","mapperVisitor","MapPlaceholderNames","msgList","src","transformedMessage","Extractor","messageBundle","compMetas","extractor","_NO_RESOURCE_LOADER","baseHtmlParser","COMPILER_PROVIDERS","ɵReflector","parser","TRANSLATIONS","JitCompilerFactory","defaultOptions","compilerOptions","useDebug","_defaultOptions","createCompiler","opts","ReflectiveInjector","resolveAndCreate","COMPILER_OPTIONS","platformCoreDynamic","createPlatformFactory","platformCore","CompilerFactory","PLATFORM_INITIALIZER","ImportResolver"],"mappings":"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2qB,IAAKwxE,eAG3B/xE,mBACTuwE,wBAmBEpvE,kBAaJJ,iBAAgBtyB,cAAcsiB,gBAAgB8hF,MAC1C,gBACA,cACA,gBAEJ9xE,gBAAgBtyB,cAAcsiB,gBAAgBsB,OAAQ,YAEtD0O,gBAAgBtyB,cAAcsiB,gBAAgB+hF,KAC1C,eAAgB,YAAa,YAAa,YAAa,SACvD,SAAU,kBAAmB,kBAAmB,WAAY,cAC5D,UAAW,aAAc,YAAa,WAAY,SAClD,aAAc,gBAAiB,YAAa,eAAgB,cAEhE/xE,gBAAgBtyB,cAAcsiB,gBAAgBgiF,cAC1C,cACA,kBACA,YACA,YACA,YACA,eACA,gBACA,aACA,YACA,YACA,kBACA,cACA;;;;;;;AASJ,GAAIC,SAAU,UACVC,OAAS,SACTC,OAAS,SACTC,OAAS,SAuDTC,QACA,4NACA,69BACA,4oCACA,mMACA,ilBACA,uBACA,2CACA,uBACA,wCACA,uBACA,kCACA,yCACA,mLACA,iJACA,eACA,yBACA,iCACA,iQACA,yHACA,sCACA,+BACA,4BACA,0BACA,8BACA,yCACA,6BACA,0BACA,uDACA,wCACA,qCACA,uGACA,iGACA,sOACA,mDACA,sBACA,wCACA,6BACA,2JACA,oJACA,wbACA,mEACA,+BACA,8BACA,6BACA,yHACA,yBACA,4HACA,8BACA,mDACA,2DACA,sCACA,kDACA,uIACA,yCACA,6EACA,wDACA,wBACA,gDACA,yBACA,2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,qBACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,2BACA,sBACA,+CACA,+CACA,+CACA,+CACA,6BACA,sBACA,sBACA,0BACA,2BACA,uBACA,2BACA,iCACA,0BACA,qBACA,2BACA,qBACA,oCACA,wBACA,4BACA,2BACA,qCACA,oBACA,qBACA,mBACA,uBACA,2BACA,sBACA,8BACA,+BACA,qCACA,2BACA,mDACA,yBACA,2BACA,mBACA,8CACA,6BACA,qBACA,mCACA,kCACA,kCACA,oBACA,0BACA,8BACA,2BACA,gFACA,yBACA,+BAEAC,eACAC,MAAS,YACTC,IAAO,UACPC,WAAc,aACdC,UAAa,YACbC,SAAY,WACZC,SAAY,YAEZz+D,yBAA4B,SAAU0d,QAEtC,QAAS1d,4BACL,GAAIsC,OAAQob,OAAOE,KAAKtkD,OAASA,IAqCjC,OApCAgpC,OAAMo8D,WACNR,OAAOnkG,QAAQ,SAAU4kG,aACrB,GAAIj+F,SACA4N,GAAKqwF,YAAY/6F,MAAM,KAAMg7F,QAAUtwF,GAAG,GAAIuwF,cAAgBvwF,GAAG,GACjEwwF,WAAaD,cAAcj7F,MAAM,KACjC4K,GAAKowF,QAAQh7F,MAAM,KAAMm7F,UAAYvwF,GAAG,GAAIwwF,UAAYxwF,GAAG,EAC/DuwF,WAAUn7F,MAAM,KAAK7J,QAAQ,SAAUma,KAAO,MAAOouB,OAAMo8D,QAAQxqF,IAAI/Y,eAAiBuF,MACxF,IAAIu+F,WAAYD,WAAa18D,MAAMo8D,QAAQM,UAAU7jG,cACjD8jG,YACAvhG,OAAOqxB,KAAKkwE,WAAWllG,QAAQ,SAAUoyB,MAAQzrB,KAAKyrB,MAAQ8yE,UAAU9yE,QAE5E2yE,WAAW/kG,QAAQ,SAAUmlG,UACzB,GAAIA,SAAStjG,OAAS,EAClB,OAAQsjG,SAAS,IACb,IAAK,IAMD,KACJ,KAAK,IACDx+F,KAAKw+F,SAASh9E,UAAU,IAAM47E,OAC9B,MACJ,KAAK,IACDp9F,KAAKw+F,SAASh9E,UAAU,IAAM67E,MAC9B,MACJ,KAAK,IACDr9F,KAAKw+F,SAASh9E,UAAU,IAAM+7E,MAC9B,MACJ,SACIv9F,KAAKw+F,UAAYlB,YAK9B17D,MAoJX,MA3LA+B,WAAUrE,yBAA0B0d,QA+CpC1d,yBAAyByC,UAAUgxC,YAAc,SAAUh5E,QAASwgB,SAAUy4D,aAC1E,GAAIA,YAAY/S,KAAK,SAAUw+B,QAAU,MAAOA,QAAO5gG,OAAShF,cAAc6lG,iBAAiB7gG,OAC3F,OAAO,CAEX,IAAI9D,QAAQJ,QAAQ,MAAO,EAAI,CAC3B,GAAIG,cAAcC,UAAYC,YAAYD,SACtC,OAAO,CAEX,IAAIi5E,YAAY/S,KAAK,SAAUw+B,QAAU,MAAOA,QAAO5gG,OAAShF,cAAc8lG,uBAAuB9gG,OAGjG,OAAO,EAGf,GAAqB+gG,mBAAoBhmG,KAAKolG,QAAQjkG,QAAQU,gBAAkB7B,KAAKolG,QAAiB,OACtG,SAASY,kBAAkBrkF,WAO/B+kB,yBAAyByC,UAAUkxC,WAAa,SAAUl5E,QAASi5E,aAC/D,GAAIA,YAAY/S,KAAK,SAAUw+B,QAAU,MAAOA,QAAO5gG,OAAShF,cAAc6lG,iBAAiB7gG,OAC3F,OAAO,CAEX,IAAI9D,QAAQJ,QAAQ,MAAO,EAAI,CAC3B,GAAIG,cAAcC,UAAYC,YAAYD,SACtC,OAAO,CAEX,IAAIi5E,YAAY/S,KAAK,SAAUw+B,QAAU,MAAOA,QAAO5gG,OAAShF,cAAc8lG,uBAAuB9gG,OAEjG,OAAO,EAGf,QAASjF,KAAKolG,QAAQjkG,QAAQU,gBAgBlC6kC,yBAAyByC,UAAU7mB,gBAAkB,SAAUnhB,QAASwgB,SAAUC,aAC1EA,cAEAD,SAAW3hB,KAAKs6E,kBAAkB34D,WAItCxgB,QAAUA,QAAQU,cAClB8f,SAAWA,SAAS9f,aACpB,IAAqBkwB,KAAMY,gBAAgBxxB,QAAU,IAAMwgB,SAC3D,OAAIoQ,KACOA,KAEXA,IAAMY,gBAAgB,KAAOhR,UACtBoQ,IAAMA,IAAM9xB,cAAcsiB,gBAAgBC,OAMrDkkB,yBAAyByC,UAAUmxC,kBAAoB,SAAU34D,UAAY,MAAOkjF,eAAcljF,WAAaA,UAI/G+kB,yBAAyByC,UAAUoxC,+BAAiC,WAAc,MAAO,gBAKzF7zC,yBAAyByC,UAAUqxC,iBAAmB,SAAUv1E,MAC5D,GAAIA,KAAKpD,cAAcqS,WAAW,MAAO,CACrC,GAAqBrQ,KAAM,8BAAgCoB,KAAO,0CAC7D,eAAiBA,KAAKhE,MAAM,GAAK,UACjC,SAAWgE,KAAO,sEACnB,kBACJ,QAASnB,OAAO,EAAMD,IAAKA,KAG3B,OAASC,OAAO,IAOxB4iC,yBAAyByC,UAAUsxC,kBAAoB,SAAUx1E,MAC7D,GAAIA,KAAKpD,cAAcqS,WAAW,MAAO,CACrC,GAAqBrQ,KAAM,+BAAiCoB,KAAO,0CAC9D,eAAiBA,KAAKhE,MAAM,GAAK,QACtC,QAAS6C,OAAO,EAAMD,IAAKA,KAG3B,OAASC,OAAO,IAMxB4iC,yBAAyByC,UAAUpnB,qBAAuB,WAAc,MAAO3d,QAAOqxB,KAAKz1B,KAAKolG,UAKhG1+D,yBAAyByC,UAAUuxC,gCAAkC,SAAU/4D,UAC3E,MAAO5f,qBAAoB4f,WAQ/B+kB,yBAAyByC,UAAUwxC,6BAA+B,SAAUC,cAAeC,iBAAkBp3E,KACzG,GAAqB23B,MAAO,GACP6qE,OAASxiG,IAAI8V,WAAWzW,OACxBi0D,SAAW,IAChC,IAAInkC,uBAAuBgoD,gBAA0B,IAARn3E,KAAqB,MAARA,IACtD,GAAmB,gBAARA,KACP23B,KAAO,SAEN,CACD,GAAqB8qE,mBAAoBziG,IAAIyZ,MAAM,yBAC/CgpF,oBAAoD,GAA/BA,kBAAkB,GAAG5jG,SAC1Cy0D,SAAW,uCAAyC8jB,iBAAmB,IAAMp3E,KAIzF,OAASK,MAAOizD,SAAU/zD,MAAOijG,OAAS7qE,OAEvCsL,0BACTwzC,sBACFxzC,0BAAyB+lB,aACnBrlD,KAAMuE,qBAKZ+6B,yBAAyBgmB,eAAiB,WAAc,SAwCxD,IAAIy5C,WAAa,WACb,QAASA,aACLnmG,KAAKomG,eAAgB,EAmUzB,MA3TAD,WAAUh9D,UAAUk9D,YAAc,SAAUplF,QAAStY,SAAU29F,cACtC,SAAjBA,eAA2BA,aAAe,GAC9C,IAAqBC,kBAAmBvzE,wBAAwB/R,QAGhE,OAFAA,SAAU6R,cAAc7R,SACxBA,QAAUjhB,KAAKwmG,kBAAkBvlF,SAC1BjhB,KAAKymG,cAAcxlF,QAAStY,SAAU29F,cAAgBC,kBAMjEJ,UAAUh9D,UAAUq9D,kBAAoB,SAAUvlF,SAE9C,MADAA,SAAUjhB,KAAK0mG,mCAAmCzlF,SAC3CjhB,KAAK2mG,8BAA8B1lF,UAM9CklF,UAAUh9D,UAAUu9D,mCAAqC,SAAUzlF,SAE/D,MAAOA,SAAQhf,QAAQ2kG,0BAA2B,WAE9C,IAAK,GADDzkG,MACKC,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCD,EAAEC,IAAMC,UAAUD,GAEtB,OAAOD,GAAE,GAAK,OAOtBgkG,UAAUh9D,UAAUw9D,8BAAgC,SAAU1lF,SAE1D,MAAOA,SAAQhf,QAAQ4kG,kBAAmB,WAEtC,IAAK,GADD1kG,MACKC,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCD,EAAEC,IAAMC,UAAUD,GAEtB,IAAqB2xB,MAAO5xB,EAAE,GAAGF,QAAQE,EAAE,GAAI,IAAIF,QAAQE,EAAE,GAAI,GACjE,OAAOA,GAAE,GAAK4xB,QAStBoyE,UAAUh9D,UAAUs9D,cAAgB,SAAUxlF,QAAS6lF,cAAeR,cAClE,GAAqBS,eAAgB/mG,KAAKgnG,iCAAiC/lF,QAU3E,OARAA,SAAUjhB,KAAKinG,6BAA6BhmF,SAC5CA,QAAUjhB,KAAKknG,kBAAkBjmF,SACjCA,QAAUjhB,KAAKmnG,yBAAyBlmF,SACxCA,QAAUjhB,KAAKonG,2BAA2BnmF,SACtC6lF,gBACA7lF,QAAUjhB,KAAKqnG,gBAAgBpmF,QAAS6lF,cAAeR,eAE3DrlF,QAAUA,QAAU,KAAO8lF,cACpB9lF,QAAQne,QAMnBqjG,UAAUh9D,UAAU69D,iCAAmC,SAAU/lF,SAE7D,GACqB9e,GADAmlG,EAAI,EAGzB,KADAC,0BAA0BrxE,UAAY,EACmB,QAAjD/zB,EAAIolG,0BAA0BtmD,KAAKhgC,WAAoB,CAC3D,GAAqB8S,MAAO5xB,EAAE,GAAGF,QAAQE,EAAE,GAAI,IAAIF,QAAQE,EAAE,GAAIA,EAAE,GACnEmlG,IAAKvzE,KAAO,OAEhB,MAAOuzE,IAMXnB,UAAUh9D,UAAU+9D,kBAAoB,SAAUjmF,SAC9C,MAAOjhB,MAAKwnG,kBAAkBvmF,QAASwmF,gBAAiBznG,KAAK0nG,yBAMjEvB,UAAUh9D,UAAUg+D,yBAA2B,SAAUlmF,SACrD,MAAOjhB,MAAKwnG,kBAAkBvmF,QAAS0mF,uBAAwB3nG,KAAK4nG,gCAQxEzB,UAAUh9D,UAAUq+D,kBAAoB,SAAUvmF,QAAS4mF,OAAQC,cAE/D,MAAO7mF,SAAQhf,QAAQ4lG,OAAQ,WAE3B,IAAK,GADD1lG,MACKC,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCD,EAAEC,IAAMC,UAAUD,GAEtB,IAAID,EAAE,GAAI,CAGN,IAAK,GAFgBwQ,OAAQxQ,EAAE,GAAGmI,MAAM,KACnBg9F,KACKv7F,EAAI,EAAGA,EAAI4G,MAAMrQ,OAAQyJ,IAAK,CACpD,GAAqBsI,GAAI1B,MAAM5G,GAAGjJ,MAClC,KAAKuR,EACD,KACJizF,GAAE3mG,KAAKmnG,aAAaC,0BAA2B1zF,EAAGlS,EAAE,KAExD,MAAOmlG,GAAE9xF,KAAK,KAGd,MAAOuyF,2BAA4B5lG,EAAE,MAUjDgkG,UAAUh9D,UAAUy+D,8BAAgC,SAAUn/F,KAAM+rB,KAAMb,QACtE,MAAIa,MAAKzzB,QAAQinG,gBAAiB,EACvBhoG,KAAK0nG,uBAAuBj/F,KAAM+rB,KAAMb,QAGxClrB,KAAO+rB,KAAOb,OAAS,KAAOa,KAAO,IAAM/rB,KAAOkrB,QASjEwyE,UAAUh9D,UAAUu+D,uBAAyB,SAAUj/F,KAAM+rB,KAAMb,QAC/D,MAAOlrB,MAAO+rB,KAAKvyB,QAAQ+lG,cAAe,IAAMr0E,QAMpDwyE,UAAUh9D,UAAUi+D,2BAA6B,SAAUnmF,SACvD,MAAOgnF,uBAAsBx+F,OAAO,SAAUnJ,OAAQmP,SAAW,MAAOnP,QAAO2B,QAAQwN,QAAS,MAASwR,UAQ7GklF,UAAUh9D,UAAUk+D,gBAAkB,SAAUpmF,QAAS6lF,cAAeR,cACpE,GAAIt9D,OAAQhpC,IACZ,OAAOmzB,cAAalS,QAAS,SAAU8S,MACnC,GAAqBprB,UAAWorB,KAAKprB,SAChB+qB,QAAUK,KAAKL,OASpC,OARwB,KAApBK,KAAKprB,SAAS,GACdA,SACIqgC,MAAMk/D,eAAen0E,KAAKprB,SAAUm+F,cAAeR,aAAct9D,MAAMo9D,gBAEtEryE,KAAKprB,SAASuL,WAAW,WAAa6f,KAAKprB,SAASuL,WAAW,cACpE6f,KAAKprB,SAASuL,WAAW,UAAY6f,KAAKprB,SAASuL,WAAW,gBAC9Dwf,QAAUsV,MAAMq+D,gBAAgBtzE,KAAKL,QAASozE,cAAeR,eAE1D,GAAItyE,SAAQrrB,SAAU+qB,YAUrCyyE,UAAUh9D,UAAU++D,eAAiB,SAAUv/F,SAAUm+F,cAAeR,aAAc6B,QAClF,GAAIn/D,OAAQhpC,IACZ,OAAO2I,UAAS2B,MAAM,KACjBqL,IAAI,SAAU6e,MAAQ,MAAOA,MAAK1xB,OAAOwH,MAAM89F,wBAC/CzyF,IAAI,SAAU0yF,WACf,GAAIC,aAAcD,UAAU,GAAIE,WAAaF,UAAUpnG,MAAM,GACxCunG,WAAa,SAAUF,aACxC,MAAIt/D,OAAMy/D,sBAAsBH,YAAaxB,eAClCqB,OACHn/D,MAAM0/D,0BAA0BJ,YAAaxB,cAAeR,cAC5Dt9D,MAAM2/D,oBAAoBL,YAAaxB,cAAeR,cAGnDgC,YAGf,QAAQE,WAAWF,cAAcz+F,OAAO0+F,YAAY/yF,KAAK,OAExDA,KAAK,OAOd2wF,UAAUh9D,UAAUs/D,sBAAwB,SAAU9/F,SAAUm+F,eAC5D,GAAqB8B,IAAK5oG,KAAK6oG,kBAAkB/B,cACjD,QAAQ8B,GAAGv8F,KAAK1D,WAMpBw9F,UAAUh9D,UAAU0/D,kBAAoB,SAAU/B,eAC9C,GAAqBgC,KAAM,MACNC,IAAM,KAE3B,OADAjC,eAAgBA,cAAc7kG,QAAQ6mG,IAAK,OAAO7mG,QAAQ8mG,IAAK,OACxD,GAAIn5F,QAAO,KAAOk3F,cAAgB,IAAMkC,kBAAmB,MAQtE7C,UAAUh9D,UAAUw/D,oBAAsB,SAAUhgG,SAAUm+F,cAAeR,cAEzE,MAAOtmG,MAAKipG,0BAA0BtgG,SAAUm+F,cAAeR,eAQnEH,UAAUh9D,UAAU8/D,0BAA4B,SAAUtgG,SAAUm+F,cAAeR,cAG/E,GADA4C,gBAAgBhzE,UAAY,EACxBgzE,gBAAgB78F,KAAK1D,UAAW,CAChC,GAAqBwgG,aAAcnpG,KAAKomG,cAAgB,IAAME,aAAe,IAAMQ,aACnF,OAAOn+F,UACF1G,QAAQmnG,4BAA6B,SAAUC,IAAK1gG,UACrD,MAAOA,UAAS1G,QAAQ,kBAAmB,SAAUwZ,EAAGk5C,OAAQ20C,MAAO10C,OACnE,MAAOD,QAASw0C,YAAcG,MAAQ10C,UAGzC3yD,QAAQinG,gBAAiBC,YAAc,KAEhD,MAAOrC,eAAgB,IAAMn+F,UAQjCw9F,UAAUh9D,UAAUu/D,0BAA4B,SAAU//F,SAAUm+F,cAAeR,cAC/E,GAAIt9D,OAAQhpC,KACSupG,KAAO,kBAC5BzC,eAAgBA,cAAc7kG,QAAQsnG,KAAM,SAAU9tF,GAElD,IAAK,GADD9I,UACKvQ,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCuQ,MAAMvQ,GAAK,GAAKC,UAAUD,GAE9B,OAAOuQ,OAAM,IAEjB,IAAqBmS,UAAW,IAAMgiF,cAAgB,IACjC0C,mBAAqB,SAAUn1F,GAChD,GAAqBo1F,SAAUp1F,EAAEvR,MACjC,KAAK2mG,QACD,MAAO,EAEX,IAAIp1F,EAAEtT,QAAQgnG,4BAA6B,EACvC0B,QAAUzgE,MAAMigE,0BAA0B50F,EAAGyyF,cAAeR,kBAE3D,CAED,GAAqBh2C,GAAIj8C,EAAEpS,QAAQinG,gBAAiB,GACpD,IAAI54C,EAAEhuD,OAAS,EAAG,CACd,GAAqBijD,SAAU+K,EAAEpzC,MAAM,kBACnCqoC,WACAkkD,QAAUlkD,QAAQ,GAAKzgC,SAAWygC,QAAQ,GAAKA,QAAQ,KAInE,MAAOkkD,UAEUC,YAAc,GAAIC,cAAahhG,SACpDA,UAAW+gG,YAAYh2E,SAMvB,KALA,GAEqBtC,KAFAw4E,eAAiB,GACjBvhC,WAAa,EAEbwhC,IAAM,sBACNC,WAAanhG,SAAS5H,QAAQgnG,2BACb,QAA9B32E,IAAMy4E,IAAI5oD,KAAKt4C,YAAqB,CACxC,GAAqB45F,WAAYnxE,IAAI,GAChBoD,KAAO7rB,SAAS1H,MAAMonE,WAAYj3C,IAAI1sB,OAAO5B,OAG7CinG,WAAa1hC,YAAcyhC,WAAaN,mBAAmBh1E,MAAQA,IACxFo1E,iBAAkBG,WAAa,IAAMxH,UAAY,IACjDl6B,WAAawhC,IAAI3zE,UAIrB,MAFA0zE,iBAAkBJ,mBAAmB7gG,SAASigB,UAAUy/C,aAEjDqhC,YAAYM,QAAQJ,iBAM/BzD,UAAUh9D,UAAU89D,6BAA+B,SAAUt+F,UACzD,MAAOA,UAAS1G,QAAQgoG,oBAAqBC,sBACxCjoG,QAAQkoG,aAAcnC,gBAExB7B,aAEPwD,aAAgB,WAIhB,QAASA,cAAahhG,UAClB,GAAIqgC,OAAQhpC,IACZA,MAAKi/D,gBACLj/D,KAAK0E,MAAQ,EAGbiE,SAAWA,SAAS1G,QAAQ,gBAAiB,SAAUwZ,EAAG2uF,MACtD,GAAIC,WAAY,QAAUrhE,MAAMtkC,MAAQ,IAGxC,OAFAskC,OAAMi2B,aAAat+D,KAAKypG,MACxBphE,MAAMtkC,QACC2lG,YAIXrqG,KAAKsqG,SAAW3hG,SAAS1G,QAAQ,4BAA6B,SAAUwZ,EAAG8uF,OAAQrhD,KAC/E,GAAImhD,WAAY,QAAUrhE,MAAMtkC,MAAQ,IAGxC,OAFAskC,OAAMi2B,aAAat+D,KAAKuoD,KACxBlgB,MAAMtkC,QACC6lG,OAASF,YAgBxB,MARAV,cAAaxgE,UAAU6gE,QAAU,SAAUt2E,SACvC,GAAIsV,OAAQhpC,IACZ,OAAO0zB,SAAQzxB,QAAQ,gBAAiB,SAAUu+D,GAAI97D,OAAS,MAAOskC,OAAMi2B,cAAcv6D,UAK9FilG,aAAaxgE,UAAUzV,QAAU,WAAc,MAAO1zB,MAAKsqG,UACpDX,gBAEP/C,0BAA4B,4EAC5BC,kBAAoB,kEACpBU,0BAA4B,2EAC5BS,cAAgB,iBAEhBkC,qBAAuB,oBACvBM,aAAe,kDAGf/C,gBAAkB,GAAI73F,QAAO,IAAMo4F,cAAgBwC,aAAc,OACjE7C,uBAAyB,GAAI/3F,QAAO,IAAMs6F,qBAAuBM,aAAc,OAC/EzC,0BAA4BC,cAAgB,iBAC5CoB,4BAA8B,uCAC9BnB,uBACA,YACA,aAEA,mBACA,eAEAG,qBAAuB,wBACvBY,kBAAoB,6BACpBE,gBAAkB,oBAClBiB,aAAe,WACfF,oBAAsB,mBACtBl3E,WAAa,uBASbG,oBAAsB,2CAStBO,QAAU,wDACVS,SAAW,UACXQ,WAAa,IACbD,YAAc,IACdZ,kBAAoB,UACpBG,QAAW,WAKX,QAASA,SAAQrrB,SAAU+qB,SACvB1zB,KAAK2I,SAAWA,SAChB3I,KAAK0zB,QAAUA,QAEnB,MAAOM,YA4BPW,wBAA2B,WAK3B,QAASA,yBAAwBnB,cAAeM,QAC5C9zB,KAAKwzB,cAAgBA,cACrBxzB,KAAK8zB,OAASA,OAElB,MAAOa,4BA6CP81E,mBAAqB,SACrBC,UAAY,WAAaD,mBACzBE,aAAe,cAAgBF,mBAC/BG,wBAA2B,WAO3B,QAASA,yBAAwB3lG,KAAM8K,UAAW2wB,UAAWH,kBACzDvgC,KAAKiF,KAAOA,KACZjF,KAAK+P,UAAYA,UACjB/P,KAAK0gC,UAAYA,UACjB1gC,KAAKugC,iBAAmBA,iBAE5B,MAAOqqE,4BAEPC,oBAAuB,WAKvB,QAASA,qBAAoBC,oBAAqB7iG,qBAC9CjI,KAAK8qG,oBAAsBA,oBAC3B9qG,KAAKiI,oBAAsBA,oBAE/B,MAAO4iG,wBAEPE,mBAAsB,WAQtB,QAASA,oBAAmBlzE,WAAYmzE,UAAW1qE,aAAcI,UAAWt2B,MACxEpK,KAAK63B,WAAaA,WAClB73B,KAAKgrG,UAAYA,UACjBhrG,KAAKsgC,aAAeA,aACpBtgC,KAAK0gC,UAAYA,UACjB1gC,KAAKoK,KAAOA,KAEhB,MAAO2gG,uBAEP3jE,cAAiB,WAIjB,QAASA,eAAcqgD,cACnBznF,KAAKynF,aAAeA,aACpBznF,KAAKirG,WAAa,GAAI9E,WAqD1B,MA/CA/+D,eAAc+B,UAAU+hE,iBAAmB,SAAU/Z,MACjD,GAAInoD,OAAQhpC,KACS6G,SAAasqF,KAAc,SAC3BlpF,uBACA6iG,oBAAsB9qG,KAAKmrG,eAAeha,KAAM,GAAIhsC,4BACrEv9C,OAAQf,SAASe,OACjBC,UAAWhB,SAASgB,UACpBkI,UAAWrK,oBAAoByrF,KAAK/pF,SACpC,EAKJ,OAJAP,UAASoB,oBAAoBxH,QAAQ,SAAU2qG,gBAC3C,GAAqBC,oBAAqBriE,MAAMmiE,eAAeha,KAAMia,gBAAgB,EACrFnjG,qBAAoBtH,KAAK0qG,sBAEtB,GAAIR,qBAAoBC,oBAAqB7iG,sBAQxDm/B,cAAc+B,UAAUgiE,eAAiB,SAAUha,KAAMpJ,WAAYujB,uBAKjE,IAAK,GAJDtiE,OAAQhpC,KACS4gC,KAASuwD,KAAc,SAAE3pF,gBAAkBvH,cAAcwH,kBAAkBw+B,SAC3EslE,iBAAmBxjB,WAAWngF,OAAO+N,IAAI,SAAU61F,YAAc,MAAO58E,SAAQoa,MAAMyiE,cAAcD,WAAY5qE,SAChHN,gBACKv0B,EAAI,EAAGA,EAAIg8E,WAAWlgF,UAAUvF,OAAQyJ,IAAK,CACnE,GAAqBxG,aAAeH,UAAW,KAC/Ck7B,cAAa3/B,KAAK,GAAIiqG,yBAAwBh2E,iBAAiB,MAAOmzD,WAAWlgF,UAAUkE,GAAI60B,KAAMr7B,aACrGgmG,iBAAiB5qG,KAAK,GAAIgtB,cAAapoB,aAI3C,GAAqBylG,WAAYp2E,iBAAiB02E,sBAAwBna,KAAO,MAC5DnkE,KAAOO,SAASy9E,WAChCxvF,IAAIwS,WAAWu9E,iBAAkB,GAAInW,WAAU3+D,cAAe+9D,aAAaC,UAC3E99D,WAAW,MAAOC,aAAaC,OACpC,OAAO,IAAIk0E,qBAAoB/9E,MAAOg+E,UAAW1qE,aAAcM,KAAMmnD,aAOzE3gD,cAAc+B,UAAUsiE,cAAgB,SAAU3wB,SAAUl6C,MACxD,MAAOA,MAAO5gC,KAAKirG,WAAW5E,YAAYvrB,SAAU6vB,aAAcD,WAAa5vB,UAE5E1zC,gBAEXA,eAAcqlB,aACRrlD,KAAMuE,qBAKZy7B,cAAcslB,eAAiB,WAAc,QACvCtlD,KAAMkf;;;;;;;AAoBZ,GAAIolF,kBAAoB,WACpB,QAASA,qBAET,MAAOA,oBAEXA,kBAAiBhlB,MAAQn5D,SAAS,SAClC,IAAIuJ,4BAA8B,WAK9B,QAASA,4BAA2BnK,MAAOg/E,cACvC3rG,KAAK2sB,MAAQA,MACb3sB,KAAK2rG,aAAeA,aAExB,MAAO70E,+BAwDPS,6BAAgC,WAKhC,QAASA,8BAA6B5K,MAAOwK,aACzCn3B,KAAK2sB,MAAQA,MACb3sB,KAAKm3B,YAAcA,YAEvB,MAAOI,iCAgEPxB,QACJA,OAAM7D,UAAY,EAClB6D,MAAM5D,WAAa,EACnB4D,MAAMA,MAAM7D,WAAa,YACzB6D,MAAMA,MAAM5D,YAAc,YAkC1B,IAAIqF,sBAAwB,SAAU4sB,QAKlC,QAAS5sB,sBAAqBo0E,mBAC1B,GAAI5iE,OAAQob,OAAOE,KAAKtkD,OAASA,IAEjC,OADAgpC,OAAM4iE,kBAAoBA,kBACnB5iE,MAgCX,MAvCA+B,WAAUvT,qBAAsB4sB,QAchC5sB,qBAAqB2R,UAAUggB,UAAY,SAAU3oD,IAAKH,SACtD,GAAI2oC,OAAQhpC,KACSu1B,MAAQ/0B,IAAI0oD,KAAKr/C,OAAOrJ,IAAI+0B,MAAM5f,IAAI,SAAUnV,KAAO,MAAOA,KAAID,MAAMyoC,MAAO3oC,UACpG,OAAO,IAAIwrG,qBAAoBrrG,IAAIgnD,KAAMjyB,KAAMv1B,KAAK4rG,kBAAkBj2E,oBAAoBn1B,IAAIyE,KAAMswB,KAAKjzB,UAO7Gk1B,qBAAqB2R,UAAUogB,kBAAoB,SAAU/oD,IAAKH,SAC9D,GAAI2oC,OAAQhpC,KACSu1B,KAAO/0B,IAAIwnD,YAAYryC,IAAI,SAAUnV,KAAO,MAAOA,KAAID,MAAMyoC,MAAO3oC,UACzF,OAAO,IAAIwrG,qBAAoBrrG,IAAIgnD,KAAMjyB,KAAMv1B,KAAK4rG,kBAAkBv2E,4BAA4B70B,IAAIwnD,YAAY1lD,UAOtHk1B,qBAAqB2R,UAAUsgB,gBAAkB,SAAUjpD,IAAKH,SAC5D,GAAI2oC,OAAQhpC,KACSu1B,KAAO/0B,IAAIklB,OAAO/P,IAAI,SAAUnV,KAAO,MAAOA,KAAID,MAAMyoC,MAAO3oC,UACpF,OAAO,IAAIwrG,qBAAoBrrG,IAAIgnD,KAAMjyB,KAAMv1B,KAAK4rG,kBAAkBp2E,0BAA0Bh1B,IAAIi1B,QAEjG+B,sBACTqzB,gBACEj1B,gBAAmB,WAMnB,QAASA,iBAAgBk2E,eAAgBC,kBAAmB92E,WACxDj1B,KAAK8rG,eAAiBA,eACtB9rG,KAAK+rG,kBAAoBA,kBACzB/rG,KAAKi1B,UAAYA,UACjBj1B,KAAKgsG,SAAW,GAAIjtF,KACpB/e,KAAKisG,WAAa,GAAIltF,KACtB/e,KAAKksG,kBAAoB,EACzBlsG,KAAKi2B,eAAiB,EAqmB1B,MA9lBAL,iBAAgBuT,UAAU8gB,YAAc,SAAUzpD,IAAKu3B,MACnD,GAAqB45B,GACrB,QAAQnxD,IAAIspD,WACR,IAAK,IACD6H,GAAKgkC,eAAeM,IACpB,MACJ,KAAK,IACDtkC,GAAKgkC,eAAeK,KACpB,MACJ,KAAK,IACDrkC,GAAKgkC,eAAeQ,QACpB,MACJ,KAAK,IACDxkC,GAAKgkC,eAAeO,MACpB,MACJ,KAAK,IACDvkC,GAAKgkC,eAAeS,MACpB,MACJ,KAAK,KACDzkC,GAAKgkC,eAAeU,GACpB,MACJ,KAAK,KACD1kC,GAAKgkC,eAAeW,EACpB,MACJ,KAAK,KACD3kC,GAAKgkC,eAAeC,MACpB,MACJ,KAAK,KACDjkC,GAAKgkC,eAAeE,SACpB,MACJ,KAAK,MACDlkC,GAAKgkC,eAAeG,SACpB,MACJ,KAAK,MACDnkC,GAAKgkC,eAAeI,YACpB,MACJ,KAAK,IACDpkC,GAAKgkC,eAAeY,KACpB,MACJ,KAAK,IACD5kC,GAAKgkC,eAAec,MACpB,MACJ,KAAK,KACD9kC,GAAKgkC,eAAea,WACpB,MACJ,KAAK,KACD7kC,GAAKgkC,eAAee,YACpB,MACJ,SACI,KAAM,IAAI11F,OAAM,yBAA2BR,IAAIspD,WAEvD,MAAO7xB,4BAA2BF,KAAM,GAAIw/D,oBAAmB5lC,GAAI3xD,KAAKO,MAAMC,IAAIupD,KAAMh0B,MAAM5D,YAAanyB,KAAKO,MAAMC,IAAIwpD,MAAOj0B,MAAM5D,eAO3IyD,gBAAgBuT,UAAU8e,WAAa,SAAUznD,IAAKu3B,MAElD,MADAD,qBAAoBC,KAAMv3B,KACnBR,KAAKqQ,SAAS7P,IAAIwnD,YAAajwB,OAO1CnC,gBAAgBuT,UAAUkf,iBAAmB,SAAU7nD,IAAKu3B,MACxD,GAAqB/0B,OAAQhD,KAAKO,MAAMC,IAAIwoB,UAAW+M,MAAM5D,WAC7D,OAAO8F,4BAA2BF,KAAM/0B,MAAMi0F,YAAYj3F,KAAKO,MAAMC,IAAI2nD,QAASpyB,MAAM5D,YAAanyB,KAAKO,MAAMC,IAAI4nD,SAAUryB,MAAM5D,eAOxIyD,gBAAgBuT,UAAUggB,UAAY,SAAU3oD,IAAKu3B,MACjD,KAAM,IAAI/2B,OAAM,yEAA2ER,IAAIyE,OAOnG2wB,gBAAgBuT,UAAUshB,kBAAoB,SAAUjqD,IAAKu3B,MACzD,GACqBo0E,UADAC,cAAgBpsG,KAAKqQ,SAAS7P,IAAI+0B,KAAMQ,MAAM5D,WAQnE,OALIg6E,UADA3rG,cAAeqrG,qBACJrrG,IAAI+wB,UAAU66E,eAGdpsG,KAAKO,MAAyBC,IAAW,OAAGu1B,MAAM5D,YAAYhD,OAAOi9E,eAE7En0E,2BAA2BF,KAAMo0E,WAO5Cv2E,gBAAgBuT,UAAU2e,sBAAwB,SAAUtnD,IAAKu3B,MAE7D,MADAC,sBAAqBD,KAAMv3B,KACpBR,KAAK+rG,mBAOhBn2E,gBAAgBuT,UAAUygB,mBAAqB,SAAUppD,IAAKu3B,MAC1DC,qBAAqBD,KAAMv3B,IAE3B,KAAK,GADgB+0B,OAAQ3G,QAAQpuB,IAAIwnD,YAAY1lD,SAC3ByJ,EAAI,EAAGA,EAAIvL,IAAImpD,QAAQrnD,OAAS,EAAGyJ,IACzDwpB,KAAK50B,KAAKiuB,QAAQpuB,IAAImpD,QAAQ59C,KAC9BwpB,KAAK50B,KAAKX,KAAKO,MAAMC,IAAIwnD,YAAYj8C,GAAIgqB,MAAM5D,YAGnD,OADAoD,MAAK50B,KAAKiuB,QAAQpuB,IAAImpD,QAAQnpD,IAAImpD,QAAQrnD,OAAS,KAC5C9B,IAAIwnD,YAAY1lD,QAAU,EAC7BmrB,WAAWpR,iBAAiBigB,YAAYy3C,oBAAoB5kD,OAAOoG,MACnE9H,WAAWpR,iBAAiBigB,YAAY23C,cAAc9kD,QAClDoG,KAAK,GAAIvH,WAAWuH,KAAKt0B,MAAM,OAQ3C20B,gBAAgBuT,UAAU2f,eAAiB,SAAUtoD,IAAKu3B,MACtD,GAAqBs0E,cAAersG,KAAKssG,iBAAiB9rG,IAC1D,OAAI6rG,cACOrsG,KAAKusG,kBAAkB/rG,IAAK6rG,aAAct0E,MAG1CE,2BAA2BF,KAAM/3B,KAAKO,MAAMC,IAAI2D,IAAK4xB,MAAM5D,YAAYuD,IAAI11B,KAAKO,MAAMC,IAAIk1B,IAAKK,MAAM5D,eAQpHyD,gBAAgBuT,UAAU6f,gBAAkB,SAAUxoD,IAAKu3B,MACvD,GAAqB5zB,KAAMnE,KAAKO,MAAMC,IAAI2D,IAAK4xB,MAAM5D,YAChCuD,IAAM11B,KAAKO,MAAMC,IAAIk1B,IAAKK,MAAM5D,YAChCnvB,MAAQhD,KAAKO,MAAMC,IAAIwC,MAAO+yB,MAAM5D,WACzD,OAAO8F,4BAA2BF,KAAM5zB,IAAIuxB,IAAIA,KAAKla,IAAIxY,SAO7D4yB,gBAAgBuT,UAAUogB,kBAAoB,SAAU/oD,IAAKu3B,MACzD,KAAM,IAAI/2B,OAAM,4EAOpB40B,gBAAgBuT,UAAUsgB,gBAAkB,SAAUjpD,IAAKu3B,MACvD,KAAM,IAAI/2B,OAAM,0EAOpB40B,gBAAgBuT,UAAUkgB,sBAAwB,SAAU7oD,IAAKu3B,MAC7D,MAAOE,4BAA2BF,KAAMnJ,QAAQpuB,IAAIwC,SAMxD4yB,gBAAgBuT,UAAUqjE,UAAY,SAAUvnG,MAAQ,MAAOjF,MAAK8rG,eAAeW,SAASxnG,OAM5F2wB,gBAAgBuT,UAAUkhB,gBAAkB,SAAU7pD,IAAKu3B,MACvD,GAAqBs0E,cAAersG,KAAKssG,iBAAiB9rG,IAC1D,IAAI6rG,aACA,MAAOrsG,MAAKusG,kBAAkB/rG,IAAK6rG,aAAct0E,KAGjD,IAAqBxC,MAAOv1B,KAAKqQ,SAAS7P,IAAI+0B,KAAMQ,MAAM5D,YACrC7xB,OAAS,KACTioD,SAAWvoD,KAAKO,MAAMC,IAAI+nD,SAAUxyB,MAAM5D,WAC/D,IAAIo2B,WAAavoD,KAAK+rG,kBAAmB,CACrC,GAAqBW,SAAU1sG,KAAKwsG,UAAUhsG,IAAIyE,KAC9CynG,WACApsG,OAASosG,QAAQv9E,OAAOoG,OAMhC,MAHc,OAAVj1B,SACAA,OAASioD,SAASsuC,WAAWr2F,IAAIyE,KAAMswB,OAEpC0C,2BAA2BF,KAAMz3B,SAQhDs1B,gBAAgBuT,UAAUghB,eAAiB,SAAU3pD,IAAKu3B,MACtD,MAAOE,4BAA2BF,KAAMzJ,IAAItuB,KAAKO,MAAMC,IAAI8c,WAAYyY,MAAM5D,eAOjFyD,gBAAgBuT,UAAUqf,kBAAoB,SAAUhoD,IAAKu3B,MACzD,GAAqBs0E,cAAersG,KAAKssG,iBAAiB9rG,IAC1D,IAAI6rG,aACA,MAAOrsG,MAAKusG,kBAAkB/rG,IAAK6rG,aAAct0E,KAGjD,IAAqBz3B,QAAS,KACTioD,SAAWvoD,KAAKO,MAAMC,IAAI+nD,SAAUxyB,MAAM5D,WAO/D,OANIo2B,YAAavoD,KAAK+rG,oBAClBzrG,OAASN,KAAKwsG,UAAUhsG,IAAIyE,OAElB,MAAV3E,SACAA,OAASioD,SAAS11B,KAAKryB,IAAIyE,OAExBgzB,2BAA2BF,KAAMz3B,SAQhDs1B,gBAAgBuT,UAAUuf,mBAAqB,SAAUloD,IAAKu3B,MAC1D,GAAqBwwB,UAAWvoD,KAAKO,MAAMC,IAAI+nD,SAAUxyB,MAAM5D,WAC/D,IAAIo2B,WAAavoD,KAAK+rG,kBAAmB,CACrC,GAAqBW,SAAU1sG,KAAKwsG,UAAUhsG,IAAIyE,KAClD,IAAIynG,QACA,KAAM,IAAI1rG,OAAM,6CAGxB,MAAOi3B,4BAA2BF,KAAMwwB,SAAS11B,KAAKryB,IAAIyE,MAAMuW,IAAIxb,KAAKO,MAAMC,IAAIwC,MAAO+yB,MAAM5D,eAOpGyD,gBAAgBuT,UAAUyf,sBAAwB,SAAUpoD,IAAKu3B,MAC7D,MAAO/3B,MAAKusG,kBAAkB/rG,IAAKR,KAAKssG,iBAAiB9rG,KAAMu3B,OAOnEnC,gBAAgBuT,UAAUohB,oBAAsB,SAAU/pD,IAAKu3B,MAC3D,MAAO/3B,MAAKusG,kBAAkB/rG,IAAKR,KAAKssG,iBAAiB9rG,KAAMu3B,OAOnEnC,gBAAgBuT,UAAU94B,SAAW,SAAUjQ,KAAM23B,MACjD,GAAIiR,OAAQhpC,IACZ,OAAOI,MAAKuV,IAAI,SAAUnV,KAAO,MAAOwoC,OAAMzoC,MAAMC,IAAKu3B,SAO7DnC,gBAAgBuT,UAAUye,WAAa,SAAUpnD,IAAKu3B,MAClD,KAAM,IAAI/2B,OAAM,gEAAkER,IAAIknD,wBAA0B,eAAiBlnD,IAAImnD,WAOzI/xB,gBAAgBuT,UAAU5oC,MAAQ,SAAUC,IAAKu3B,MAC7C,GAAqBz3B,QAASN,KAAKisG,WAAW1wF,IAAI/a,IAClD,OAAIF,QACOA,QACHN,KAAKgsG,SAASzwF,IAAI/a,MAAQA,KAAKD,MAAMP,KAAM+3B,OAQvDnC,gBAAgBuT,UAAUojE,kBAAoB,SAAU/rG,IAAK6rG,aAAct0E,MAoCvE,GAAqB40E,mBAAoB3sG,KAAKO,MAAM8rG,aAAa9jD,SAAUxyB,MAAM5D,YAC5Dy6E,UAAY,MAC7B5sG,MAAK6sG,eAAeR,aAAa9jD,YAGjCqkD,UAAY5sG,KAAK8sG,oBAEjBH,kBAAoBC,UAAUpxF,IAAImxF,mBAElC3sG,KAAKisG,WAAWzwF,IAAI6wF,aAAa9jD,SAAUqkD,WAE/C,IAAqB5jF,WAAY2jF,kBAAkB1U,SAG/CoU,wBAAwB/hD,gBACxBtqD,KAAKgsG,SAASxwF,IAAI6wF,aAAc,GAAIjiD,YAAWiiD,aAAa7kD,KAAM6kD,aAAa9jD,SAAU8jD,aAAapnG,KAAMonG,aAAa92E,OAGzHv1B,KAAKgsG,SAASxwF,IAAI6wF,aAAc,GAAI/jD,cAAa+jD,aAAa7kD,KAAM6kD,aAAa9jD,SAAU8jD,aAAapnG,MAG5G,IAAqB8nG,QAAS/sG,KAAKO,MAAMC,IAAKu1B,MAAM5D,WASpD,OANAnyB,MAAKgsG,SAASjvE,OAAOsvE,cAEjBO,WACA5sG,KAAKgtG,iBAAiBJ,WAGnB30E,2BAA2BF,KAAM/O,UAAUiuE,YAAYroE,QAAQ,MAAOm+E,UAMjFn3E,gBAAgBuT,UAAUmjE,iBAAmB,SAAU9rG,KACnD,GAAIwoC,OAAQhpC,KACSO,MAAQ,SAAUJ,QAASK,KAC5C,OAAQwoC,MAAMgjE,SAASzwF,IAAI/a,MAAQA,KAAKD,MAAMJ,SAElD,OAAOK,KAAID,OAKP0pD,YAAa,SAAUzpD,KAAO,MAAO,OAKrCynD,WAAY,SAAUznD,KAAO,MAAO,OAKpC6nD,iBAAkB,SAAU7nD,KAAO,MAAO,OAK1CiqD,kBAAmB,SAAUjqD,KAAO,MAAO,OAK3CsnD,sBAAuB,SAAUtnD,KAAO,MAAO,OAK/CopD,mBAAoB,SAAUppD,KAAO,MAAO,OAK5CsoD,eAAgB,SAAUtoD,KAAO,MAAOD,OAAMP,KAAMQ,IAAI2D,MAKxD6kD,gBAAiB,SAAUxoD,KAAO,MAAO,OAKzC+oD,kBAAmB,SAAU/oD,KAAO,MAAO,OAK3CipD,gBAAiB,SAAUjpD,KAAO,MAAO,OAKzC6oD,sBAAuB,SAAU7oD,KAAO,MAAO,OAK/C6pD,gBAAiB,SAAU7pD,KAAO,MAAOD,OAAMP,KAAMQ,IAAI+nD,WAKzDY,UAAW,SAAU3oD,KAAO,MAAO,OAKnC2pD,eAAgB,SAAU3pD,KAAO,MAAO,OAKxCgoD,kBAAmB,SAAUhoD,KAAO,MAAOD,OAAMP,KAAMQ,IAAI+nD,WAK3DG,mBAAoB,SAAUloD,KAAO,MAAO,OAK5ConD,WAAY,SAAUpnD,KAAO,MAAO,OAKpC+pD,oBAAqB,SAAU/pD,KAAO,MAAOD,OAAMP,KAAMQ,IAAI+nD,WAAa/nD,KAK1EooD,sBAAuB,SAAUpoD,KAC7B,MAAOD,OAAMP,KAAMQ,IAAI+nD,WAAa/nD,QAQhDo1B,gBAAgBuT,UAAU0jE,eAAiB,SAAUrsG,KACjD,GAAIwoC,OAAQhpC,KACSO,MAAQ,SAAUJ,QAASK,KAC5C,MAAOA,OAAQwoC,MAAMgjE,SAASzwF,IAAI/a,MAAQA,KAAKD,MAAMJ,UAEpC8sG,UAAY,SAAU9sG,QAASK,KAChD,MAAOA,KAAI6mE,KAAK,SAAU7mE,KAAO,MAAOD,OAAMJ,QAASK,OAE3D,OAAOA,KAAID,OAKP0pD,YAAa,SAAUzpD,KAAO,MAAOD,OAAMP,KAAMQ,IAAIupD,OAASxpD,MAAMP,KAAMQ,IAAIwpD,QAK9E/B,WAAY,SAAUznD,KAAO,OAAO,GAKpC6nD,iBAAkB,SAAU7nD,KACxB,MAAOD,OAAMP,KAAMQ,IAAIwoB,YAAczoB,MAAMP,KAAMQ,IAAI2nD,UACjD5nD,MAAMP,KAAMQ,IAAI4nD,WAMxBqC,kBAAmB,SAAUjqD,KAAO,OAAO,GAK3CsnD,sBAAuB,SAAUtnD,KAAO,OAAO,GAK/CopD,mBAAoB,SAAUppD,KAAO,MAAOysG,WAAUjtG,KAAMQ,IAAIwnD,cAKhEc,eAAgB,SAAUtoD,KAAO,OAAO,GAKxCwoD,gBAAiB,SAAUxoD,KAAO,OAAO,GAKzC+oD,kBAAmB,SAAU/oD,KAAO,OAAO,GAK3CipD,gBAAiB,SAAUjpD,KAAO,OAAO,GAKzC6oD,sBAAuB,SAAU7oD,KAAO,OAAO,GAK/C6pD,gBAAiB,SAAU7pD,KAAO,OAAO,GAKzC2oD,UAAW,SAAU3oD,KAAO,OAAO,GAKnC2pD,eAAgB,SAAU3pD,KAAO,MAAOD,OAAMP,KAAMQ,IAAI8c,aAKxDkrC,kBAAmB,SAAUhoD,KAAO,OAAO,GAK3CkoD,mBAAoB,SAAUloD,KAAO,OAAO,GAK5ConD,WAAY,SAAUpnD,KAAO,OAAO,GAKpC+pD,oBAAqB,SAAU/pD,KAAO,OAAO,GAK7CooD,sBAAuB,SAAUpoD,KAAO,OAAO,MAMvDo1B,gBAAgBuT,UAAU2jE,kBAAoB,WAC1C,GAAqBI,YAAaltG,KAAKksG,mBAEvC,OADAlsG,MAAKi2B,eAAiBlc,KAAKC,IAAIha,KAAKksG,kBAAmBlsG,KAAKi2B,gBACrD,GAAIzI,aAAYiK,cAAcz3B,KAAKi1B,UAAWi4E,cAMzDt3E,gBAAgBuT,UAAU6jE,iBAAmB,SAAUJ,WAEnD,GADA5sG,KAAKksG,oBACDU,UAAU3nG,MAAQwyB,cAAcz3B,KAAKi1B,UAAWj1B,KAAKksG,mBACrD,KAAM,IAAIlrG,OAAM,aAAe4rG,UAAU3nG,KAAO,2BAGjD2wB,mBAePV,qBAAwB,WACxB,QAASA,yBAYT,MANAA,sBAAqBiU,UAAUsjE,SAAW,SAAUxnG,MAChD,MAAIA,QAASymG,iBAAiBhlB,MAAMzhF,KACzBymG,iBAAiBhlB,MAErB,MAEJxxD,wBA6BP22E,oBAAuB,SAAUznD,QAOjC,QAASynD,qBAAoBrkD,KAAMjyB,KAAMhE,WACrC,GAAIyX,OAAQob,OAAOE,KAAKtkD,KAAMwnD,KAAM,KAAMjyB,OAASv1B,IAGnD,OAFAgpC,OAAMzT,KAAOA,KACbyT,MAAMzX,UAAYA,UACXyX,MAEX,MAZA+B,WAAU8gE,oBAAqBznD,QAYxBynD,qBACTrhD,cAQE1uB,aAAe,QACfC,WAAa,QACboxE,sBAAwB,YACxBC,kBAAqB,WAMrB,QAASA,mBAAkBv1E,WAAYw1E,aAAcC,iBACjDttG,KAAK63B,WAAaA,WAClB73B,KAAKqtG,aAAeA,aACpBrtG,KAAKstG,gBAAkBA,gBAE3B,MAAOF,sBAEPlmE,aAAgB,WAKhB,QAASA,cAAaqmE,eAAgB5xB,iBAClC37E,KAAKutG,eAAiBA,eACtBvtG,KAAK27E,gBAAkBA,gBAwC3B,MA/BAz0C,cAAaiC,UAAU+hE,iBAAmB,SAAUlrF,UAAWnZ,SAAUe,OAAQq4E,WAC7E,GAAqButB,mBAAoB,EACpB/wE,eAAiBD,mBAAmB31B,UACpCgxB,cACA41E,uBAAyB,MAC9C,KAAKztF,UAAU7Y,OAAQ,CACnB,GAAqBumG,YAAe1tF,UAAmB,SAClC2tF,mBACjBD,YAAW3lG,YAAc2lG,WAAW3lG,WAAWzF,QAC/CqrG,iBAAiBhtG,KAAK,GAAI0tB,iBAAgB,YAAa4B,wBAAwBy9E,WAAW3lG,cAAa,IAE3G,IAAqB6lG,oBAAqBrgF,SAAStnB,iBAAiB+Z,UAAU5Y,KAAKhC,WACnFqoG,wBAA2BG,mBAAwB,KACnD/1E,WAAWl3B,KAAKitG,mBACXpyF,IAAIiS,WAAWpR,iBAAiBigB,YAAY45C,sBAC5C/mD,QAAQ,GAAIf,iBACT,GAAIC,iBAAgB,gBAAiBO,QAAQ8+E,WAAWlmG,gBACxD,GAAI6mB,iBAAgB,SAAUzmB,QAC9B,GAAIymB,iBAAgB,OAAQ,GAAID,gBAAeu/E,wBAElDh3E,WAAW/I,WAAWvR,iBAAiBigB,YAAY85C,iBAAkBx/C,aAAaC,SAE3F,GAAqBg3E,oBAAqB,SAAU5+E,QAChD,GAAqB6+E,mBAAoBN,mBACzC,OAAO,IAAIO,aAAY9+E,OAAQjP,UAAW8tF,kBAAmB7tB,UAAWxjD,eAAgBoxE,qBAEvE1tG,QAAU0tG,mBAAmB,KAGlD,OAFA1tG,SAAQkQ,YAAaxJ,UACrBgxB,WAAWl3B,KAAK4c,MAAMsa,WAAY13B,QAAQy8D,SACnC,GAAIwwC,mBAAkBv1E,WAAY13B,QAAQ6tG,SAAUP,yBAExDvmE,eAEXA,cAAaulB,aACPrlD,KAAMuE,qBAKZu7B,aAAawlB,eAAiB,WAAc,QACtCtlD,KAAM2+B,iBACN3+B,KAAM8yE,wBAEZ,IAAI+zB,SAAU1gF,SAAS,KACnB4O,SAAW5O,SAAS,KACpB2O,UAAY3O,SAAS,MACrB2gF,SAAW3gF,SAAS,MACpB4gF,eAAiB5gF,SAAS,MAC1B6gF,kBAAoB7gF,SAAS,MAC7BwgF,YAAe,WASf,QAASA,aAAY9+E,OAAQjP,UAAW8tF,kBAAmB7tB,UAAWxjD,eAAgBoxE,oBAClF7tG,KAAKivB,OAASA,OACdjvB,KAAKggB,UAAYA,UACjBhgB,KAAK8tG,kBAAoBA,kBACzB9tG,KAAKigF,UAAYA,UACjBjgF,KAAKy8B,eAAiBA,eACtBz8B,KAAK6tG,mBAAqBA,mBAC1B7tG,KAAKsQ,SACLtQ,KAAKquG,oBAAsBjqG,OAAO8C,OAAO,MACzClH,KAAKsuG,eAAiBlqG,OAAO8C,OAAO,MACpClH,KAAKysC,aACLzsC,KAAK+c,YAIL/c,KAAK+F,SACD/F,KAAK8tG,kBAAoB,EAAIr3E,aAAe7I,WAAW5tB,KAAKggB,UAAU5Y,MA2wB9E,MAzwBAhD,QAAOgX,eAAe2yF,YAAY5kE,UAAW,YAIzC5tB,IAAK,WACD,MAAOzV,eAAc9F,KAAKggB,UAAU5Y,KAAKhC,UAAWpF,KAAK8tG,oBAE7DxyF,YAAY,EACZD,cAAc,IAOlB0yF,YAAY5kE,UAAU94B,SAAW,SAAUo8B,UAAWxS,UAClD,GAAI+O,OAAQhpC,IAUZ,IATAA,KAAKysC,UAAYA,UAEZzsC,KAAKivB,QACNjvB,KAAKigF,UAAUx/E,QAAQ,SAAU+iC,MACzBA,KAAKoiB,OACL5c,MAAMqlE,oBAAoB7qE,KAAKv+B,MAAQ+jC,MAAMulE,YAAY,KAAM/qE,UAItExjC,KAAKivB,OAAQ,CACd,GAAqBu/E,YAAaxxE,mBAAmBh9B,KAAKy8B,eAC1Dz8B,MAAKggB,UAAUjX,YAAYtI,QAAQ,SAAUyf,MAAOuuF,YAEhD,GAAqBruF,SAAUquF,WAAa,EACvBxzE,YAAc/a,MAAMo0E,MAAQ,EAAgB,EAC5C96D,MAAQ,SAA+BuE,4BAA4BywE,WAAYpuF,QAASF,MAAMo0E,MACnHtrD,OAAM14B,MAAM3P,KAAK,WAAc,OAC3BiS,WAAY,KACZ87F,UAAWl1E,MACXm1E,QAASlhF,WAAWpR,iBAAiBigB,YAAY64C,WAAWhmD,QACxDP,QAAQ4K,OAAQ5K,QAAQxO,SACxB,GAAIgO,iBAAgB,GAAIC,iBAAgBnO,MAAM+zE,aAAcrlE,QAAQqM,uBAKpF/6B,iBAAiBF,KAAMi6B,UACnBj6B,KAAKivB,SAA+B,IAApBgL,SAAS33B,QAAgB03B,wBAAwBC,YAEjEj6B,KAAKsQ,MAAM3P,KAAK,WAAc,OAC1BiS,WAAY,KACZ87F,UAAW,EACXC,QAASlhF,WAAWpR,iBAAiBigB,YAAYs4C,YAAYzlD,QACzDP,QAAQ,GAAegJ,UAAWA,UAAWhJ,QAAQ,SASrEm/E,YAAY5kE,UAAUyzB,MAAQ,SAAUgyC,kBACX,SAArBA,mBAA+BA,qBACnC5uG,KAAK+c,SAAStc,QAAQ,SAAUm8B,OAAS,MAAOA,OAAMggC,MAAMgyC,mBAC5D,IAAI55F,IAAKhV,KAAK6uG,yBAA0BC,oBAAsB95F,GAAG85F,oBAAqBC,sBAAwB/5F,GAAG+5F,sBAAuBC,aAAeh6F,GAAGg6F,aACrIC,iBAAmBjvG,KAAKkvG,gBAAgBJ,qBACxCK,mBAAqBnvG,KAAKkvG,gBAAgBH,uBAC1CK,UAAY,CAC5BpvG,MAAKivB,QAAUjvB,KAAKggB,UAAU5X,kBAAoBnI,cAAcoI,wBAAwBgnG,SACzFD,WAAa,EAEjB,IAAqBE,aAAc,GAAIvV,qBAAoB/5F,KAAKguG,UAAW,GAAIh1E,SAA2Bi1E,QAAa,QAAM,GAAI51E,iBAAgB5K,WAAWpR,iBAAiBigB,YAAYk4C,UAAUrlD,QAC3LP,QAAQwgF,WACRphF,WAAWghF,cACXG,mBACAF,qBACErhF,WAAWvR,iBAAiBigB,YAAY+5C,iBAElD,OADAu4B,kBAAiBjuG,KAAK2uG,aACfV,kBAMXb,YAAY5kE,UAAU+lE,gBAAkB,SAAUK,aAC9C,GAAqBC,SACrB,IAAID,YAAYjtG,OAAS,EAAG,CACxB,GAAqBmtG,cAChBzvG,KAAKggB,UAAU7Y,QAAUulB,iBAAiB6iF,aAAaltF,IAAuB6rF,SAAc,OAC7FuB,SAAS9uG,KAAKutG,SAAS1yF,IAAI2gB,SAAStJ,KAAK,cAAc8D,WAAW32B,KAAK+F,WAE3EypG,SAAWhhF,IACP,GAAIwK,SAA2BkD,UAAe,KAAG3C,eACjD,GAAIP,SAA2BmD,SAAc,KAAG5C,gBACjDk2E,SAAS5lG,OAAO0lG,aAAch2E,mBAGjCi2E,UAAW53E,SAEf,OAAO43E,WAOXzB,YAAY5kE,UAAUiE,eAAiB,SAAU5sC,IAAKH,SAElDL,KAAKsQ,MAAM3P,KAAK,WAAc,OAC1BiS,WAAYpS,IAAIoS,WAChB87F,UAAW,EACXC,QAASlhF,WAAWpR,iBAAiBigB,YAAYy5C,eAAe5mD,QAC5DP,QAAQpuB,IAAI8qC,gBAAiB1c,QAAQpuB,IAAIkE,aASrDqpG,YAAY5kE,UAAUoC,UAAY,SAAU/qC,IAAKH,SAE7CL,KAAKsQ,MAAM3P,KAAK,WAAc,OAC1BiS,WAAYpS,IAAIoS,WAChB87F,UAAW,EACXC,QAASlhF,WAAWpR,iBAAiBigB,YAAYw4C,UAAU3lD,QACvDP,QAAQpuB,IAAI8qC,gBAAiBtd,YAAYY,QAAQpuB,IAAIwC,eASjE+qG,YAAY5kE,UAAUsC,eAAiB,SAAUjrC,IAAKH,SAClD,GAAI2oC,OAAQhpC,KACSi8B,UAAYj8B,KAAKsQ,MAAMhO,MAE5CtC,MAAKsQ,MAAM3P,KAAsB,KACjC,IAAqB+uG,eAAiBlvG,IAAS,MAC1BmvG,MAASD,cAAiB,IAC1BE,0BAA4BD,MAAM3nD,YAAYryC,IAAI,SAAU0X,KAAMwiF,cAAgB,MAAO7mE,OAAM8mE,6BAA8B7zE,UAAWA,UAAW4zE,aAAcA,aAAcj9F,WAAYpS,IAAIoS,WAAYvS,QAAS6tG,SAAUlrG,MAAOqqB,QAE1PrtB,MAAKsQ,MAAM2rB,WAAa,WAAc,OAClCrpB,WAAYpS,IAAIoS,WAChB87F,UAAW,EACXC,QAASlhF,WAAWpR,iBAAiBigB,YAAYw4C,UAAU3lD,QACvDP,QAAQpuB,IAAI8qC,gBAAiBtd,WAAW2hF,MAAMhmD,QAAQh0C,IAAI,SAAUzR,GAAK,MAAO0qB,SAAQ1qB,QAE5F6rG,eAAgBH,6BAQxB7B,YAAY5kE,UAAUuD,sBAAwB,SAAUlsC,IAAKH,SACzD,GAAI2oC,OAAQhpC,KACSi8B,UAAYj8B,KAAKsQ,MAAMhO,MAE5CtC,MAAKsQ,MAAM3P,KAAsB,KACjC,IAAIqU,IAAKhV,KAAKgwG,wBAAwB/zE,UAAWz7B,KAAMg5B,MAAQxkB,GAAGwkB,MAAOy2E,iBAAmBj7F,GAAGi7F,iBAAkBhjE,WAAaj4B,GAAGi4B,WAC5GijE,aAAelwG,KAAK6tG,mBAAmB7tG,KAC5DA,MAAK+c,SAASpc,KAAKuvG,cACnBA,aAAa7/F,SAAS7P,IAAIisC,UAAWjsC,IAAIuc,SACzC,IAAqBozF,YAAanwG,KAAKsQ,MAAMhO,OAAS25B,UAAY,CAKlEj8B,MAAKsQ,MAAM2rB,WAAa,WAAc,OAClCrpB,WAAYpS,IAAIoS,WAChB87F,UAAW,EAAsBl1E,MACjCm1E,QAASlhF,WAAWpR,iBAAiBigB,YAAYs4C,YAAYzlD,QACzDP,QAAQ4K,OACRy2E,iBACArhF,QAAQpuB,IAAI8qC,gBACZ1c,QAAQuhF,YACRnnE,MAAMonE,4BAA4Bn0E,UAAWgR,YAC7C1f,SAAS2iF,aAAalC,eASlCD,YAAY5kE,UAAUqD,aAAe,SAAUhsC,IAAKH,SAChD,GAAI2oC,OAAQhpC,KACSi8B,UAAYj8B,KAAKsQ,MAAMhO,MAE5CtC,MAAKsQ,MAAM3P,KAAsB,KAEjC,IAAqB6lF,QAAStlF,cAAcV,IAAIyE,MAAQ,KAAOzE,IAAIyE,KAC/D+P,GAAKhV,KAAKgwG,wBAAwB/zE,UAAWz7B,KAAMg5B,MAAQxkB,GAAGwkB,MAAO62E,WAAar7F,GAAGq7F,WAAYJ,iBAAmBj7F,GAAGi7F,iBAAkBK,gBAAkBt7F,GAAG01E,aAAcz9C,WAAaj4B,GAAGi4B,WAC3KsjE,aACAX,6BACAY,aACrB,IAAIhqB,OAAQ,CACR,GAAqBkE,cAAelqF,IAAI+H,OACnCoN,IAAI,SAAUglB,UAAY,OAC3Bt6B,QAA0B,SAC1Bs6B,SAAUA,SACVC,OAAyB,QAExB/wB,OAAOymG,gBACR5lB,cAAapoF,SACbstG,0BACIllB,aAAa/0E,IAAI,SAAUi1E,YAAailB,cAAgB,MAAO7mE,OAAM8mE,6BACjEzvG,QAASuqF,YAAYvqF,QACrB47B,UAAWA,UACX4zE,aAAcA,aACdj9F,WAAYg4E,YAAYjwD,SAAS/nB,WACjC5P,MAAO4nF,YAAYjwD,SAAS33B,UAEpCutG,UAAY7lB,aAAa/0E,IAAI,SAAUi1E,aAAe,MAAOlwD,mBAAkBkwD,YAAYjwD,SAAUiwD,YAAYhwD,WAErH41E,WAAaH,WAAW16F,IAAI,SAAUX,IAClC,GAAI8oB,QAAS9oB,GAAG,GAAIopE,UAAYppE,GAAG,EACnC,OAAOgZ,aAAYY,QAAQkP,QAASlP,QAAQwvD,eAGpDl+E,iBAAiBF,KAAMQ,IAAIuc,SAC3B,IAAqBozF,YAAanwG,KAAKsQ,MAAMhO,OAAS25B,UAAY,EAC7Cw0E,QAAUjwG,IAAIoe,WAAWrK,KAAK,SAAUqmB,QAAU,MAAOA,QAAO5b,UAAUtW,cAC1EgoG,iBAAmB94E,UACnB+4E,SAAW/4E,SAC5B64E,WACAE,SAAWljF,YAAaroB,UAAWqrG,QAAQzxF,UAAUhW,oBACrD0nG,iBAAmBjjF,YAAaroB,UAAWqrG,QAAQzxF,UAAU/V,gBAUjEjJ,KAAKsQ,MAAM2rB,WAAa,WAAc,OAClCrpB,WAAYpS,IAAIoS,WAChB87F,UAAW,EAAsBl1E,MACjCm1E,QAASlhF,WAAWpR,iBAAiBigB,YAAYo4C,aAAavlD,QAC1DP,QAAQ4K,OACRy2E,iBACArhF,QAAQpuB,IAAI8qC,gBACZ1c,QAAQuhF,YACRvhF,QAAQ43D,QACRA,OAASnrD,cAAc76B,KAAOo3B,UAC9B24E,UAAUjuG,OAAS0rB,WAAWuiF,WAAa34E,UAC3C44E,WAAWluG,OAAS0rB,WAAWwiF,YAAc54E,UAC7CoR,MAAMonE,4BAA4Bn0E,UAAWgR,YAC7C0jE,SACAD,mBAEJX,eAAgBH,6BAQxB7B,YAAY5kE,UAAU6mE,wBAA0B,SAAU/zE,UAAWz7B,KACjE,GAAIwoC,OAAQhpC,KACSw5B,MAAQ,CACzBh5B,KAAI45B,mBACJZ,OAAS,QAEb,IAAqB62E,YAAa,GAAItxF,IACtCve,KAAIgI,QAAQ/H,QAAQ,SAAUimF,OAC1B,GAAI1xE,IAAK0oB,0BAA0BgpD,MAAO,MAAOzhF,KAAO+P,GAAG/P,KAAM64B,OAAS9oB,GAAG8oB,MAC7EuyE,YAAW70F,IAAIvb,cAAc2wG,sBAAsB9yE,OAAQ74B,OAAQ64B,OAAQ74B,SAE/EzE,IAAIoe,WAAWne,QAAQ,SAAUm6B,QAC7BA,OAAOqS,WAAWxsC,QAAQ,SAAUimF,OAChC,GAAI1xE,IAAK0oB,0BAA0BgpD,MAAO9rD,QAAS31B,KAAO+P,GAAG/P,KAAM64B,OAAS9oB,GAAG8oB,MAC/EuyE,YAAW70F,IAAIvb,cAAc2wG,sBAAsB9yE,OAAQ74B,OAAQ64B,OAAQ74B,UAGnF,IAAqBylF,iBACAz9C,cACA4jE,iCAAmC3zE,+BAA+B18B,IAAIoe,WACvFiyF,mCACA7wG,KAAK8wG,eAAeD,iCAAkCrwG,IAAIm8B,cAE9Dn8B,IAAIoI,UAAUnI,QAAQ,SAAU83B,YAAaI,eACzC,GAAqBiC,QAAS,OACTm2E,SAAW,MAOhC,IANAvwG,IAAIoe,WAAWne,QAAQ,SAAUuwG,YAAajlG,GACtCilG,YAAYhyF,UAAU5X,KAAKhC,YAAcoB,eAAe+xB,YAAYhyB,SACpEq0B,OAASo2E,YACTD,SAAWhlG,KAGf6uB,OAAQ,CACR,GAAI5lB,IAAKg0B,MAAMioE,gBAAgB14E,YAAaqC,OAAQm2E,SAAU90E,UAAWz7B,IAAI8rC,WAAY9rC,IAAIm8B,aAAc0zE,WAA+BrnE,MAAMvM,eAAelhB,IAAqB,MAAW+0F,gBAAkBt7F,GAAG01E,aAAcwmB,cAAgBl8F,GAAGi4B,UACrPy9C,cAAa/pF,KAAK4c,MAAMmtE,aAAc4lB,iBACtCrjE,WAAWtsC,KAAK4c,MAAM0vB,WAAYikE,mBAGlCloE,OAAM8nE,eAAev4E,YAAa/3B,IAAIm8B,eAG9C,IAAqBw0E,mBAgCrB,OA/BA3wG,KAAIm8B,aAAal8B,QAAQ,SAAUyc,OAC/B,GAAqBs4E,WAAY,MAC7BhvF,gBAAe0W,MAAMla,SAAWmZ,kBAAkBmgB,YAAYy2C,YAC9DyiB,UAAY,EAEPhvF,eAAe0W,MAAMla,SAAWmZ,kBAAkBmgB,YAAY02C,kBACnEwiB,UAAY,EAEPhvF,eAAe0W,MAAMla,SAAWmZ,kBAAkBmgB,YAAY62C,eACnEqiB,UAAY,GAEC,MAAbA,WACA2b,gBAAgBxwG,KAAKqtB,YAAYY,QAAQ1R,MAAMkD,SAAUwO,QAAQ4mE,gBAGzEh1F,IAAI8rC,WAAW7rC,QAAQ,SAAU4E,KAC7B,GAAqBmwF,WAAY,MAC5BnwF,KAAIrC,MAGAwD,eAAenB,IAAIrC,SAAWmZ,kBAAkBmgB,YAAY62C,eACjEqiB,UAAY,GAHZA,UAAY,EAKC,MAAbA,YACAxsD,MAAMslE,eAAejpG,IAAIJ,MAAQg3B,UACjCk1E,gBAAgBxwG,KAAKqtB,YAAYY,QAAQvpB,IAAIJ,MAAO2pB,QAAQ4mE,iBAGpEh1F,IAAIgI,QAAQ/H,QAAQ,SAAU2wG,WAC1BnkE,WAAWtsC,MAAON,QAAS6tG,SAAUvwE,SAAUyzE,UAAWx2E,OAAyB,UAGnFpB,MAAOA,MACP62E,WAAYptG,MAAMwf,KAAK4tF,WAAW3qF,UAClCuqF,iBAAkBkB,gBAAgB7uG,OAAS0rB,WAAWmjF,iBAAmBv5E,UACzE8yD,aAAcA,aACdz9C,WAAYA,aAcpB8gE,YAAY5kE,UAAU8nE,gBAAkB,SAAU14E,YAAaqC,OAAQna,eAAgB4wF,iBAAkBt6B,KAAMp6C,aAAc0zE,WAAYryE,UACrI,GAAIgL,OAAQhpC,KACSi8B,UAAYj8B,KAAKsQ,MAAMhO,MAE5CtC,MAAKsQ,MAAM3P,KAAsB,MACjCi6B,OAAO5b,UAAUlW,QAAQrI,QAAQ,SAAUyf,MAAOuuF,YAC9C,GAAqBruF,SAAUwa,OAAOta,oBAAsBmuF,WACvCj1E,MAAQ,SAAkCuE,4BAA4BC,SAAU5d,QAASF,MAAMo0E,OAC/Fr5D,YAAc/a,MAAMo0E,MAAQ,EAAgB,CACjEtrD,OAAM14B,MAAM3P,KAAK,WAAc,OAC3BiS,WAAYgoB,OAAOhoB,WACnB87F,UAAWl1E,MACXm1E,QAASlhF,WAAWpR,iBAAiBigB,YAAY64C,WAAWhmD,QACxDP,QAAQ4K,OAAQ5K,QAAQxO,SACxB,GAAIgO,iBAAgB,GAAIC,iBAAgBnO,MAAM+zE,aAAcrlE,QAAQqM,sBAQhF,IAAqBk1E,YAAanwG,KAAKsQ,MAAMhO,OAAS25B,UAAY,EAC9DjnB,GAAKhV,KAAKsxG,0BAA0B/4E,YAAaoE,cAAenD,MAAQxkB,GAAGwkB,MAAO23E,gBAAkBn8F,GAAGm8F,gBAAiB73E,aAAetkB,GAAGskB,aAAcG,SAAWzkB,GAAGykB,QAC1Ks9C,MAAKt2E,QAAQ,SAAU4E,KACfA,IAAIrC,OAASwD,eAAenB,IAAIrC,SAAWwD,eAAe+xB,YAAYhyB,SACtEyiC,MAAMslE,eAAejpG,IAAIJ,MAAQg3B,UACjCk1E,gBAAgBxwG,KAAKqtB,YAAYY,QAAQvpB,IAAIJ,MAAO2pB,QAAQ,SAGhEgM,OAAO5b,UAAUtW,cACjB8wB,OAAS,MAEb,IAAqB+2E,WAAY31E,OAAOryB,OAAOoN,IAAI,SAAUglB,SAAU02B,YACnE,GAAqBkgD,UAAWvjF,YAAYY,QAAQyiC,YAAaziC,QAAQ+L,SAASiS,gBAElF,OAAO,IAAIve,iBAAgBsM,SAASiS,cAAe2kE,WAAU,MAE5Cf,cACAv0B,QAAUrhD,OAAO5b,SACtC5a,QAAOqxB,KAAKwmD,QAAQzzE,SAAS/H,QAAQ,SAAUkhB,UAC3C,GAAqBy8D,WAAYnC,QAAQzzE,QAAQmZ,SAC7C0uF,YAAWhuF,IAAI+7D,YAEfoyB,WAAW7vG,KAAK,GAAI0tB,iBAAgB1M,SAAUiN,QAAQwvD,aAAY,MAG1E,IAAqBozB,gCACjB52E,OAAOryB,OAAOjG,SAAmB,OAARk3B,OAAuD,KAChFg4E,2BACI52E,OAAOryB,OAAOoN,IAAI,SAAU3T,MAAO6tG,cAAgB,MAAO7mE,OAAM8mE,6BAC5D7zE,UAAWA,UACX4zE,aAAcA,aACdj9F,WAAY5Q,MAAM4Q,WAClBvS,QAAS6tG,SACTlrG,MAAOhB,MAAMgB,UAGzB,IAAqByuG,gBAAiBhkF,WAAWpR,iBAAiBigB,YAAYu5C,YAAY1mD,QACtFgN,SAAUvN,QAAQqN,aAEDyuD,aAAe9vD,OAAOoS,eAAer3B,IAAI,SAAUglB,UAAY,OAChFt6B,QAASoxG,eACT72E,OAAQA,OACRD,SAAUA,YAEOsS,WAAarS,OAAOqS,WAAWt3B,IAAI,SAAU+7F,cAAgB,OAC9ErxG,QAASoxG,eACT9zE,SAAU+zE,aAAc92E,OAAQA,SAmBpC,OAZA56B,MAAKsQ,MAAM2rB,WAAa,WAAc,OAClCrpB,WAAYgoB,OAAOhoB,WACnB87F,UAAW,KAA2Bl1E,MACtCm1E,QAASlhF,WAAWpR,iBAAiBigB,YAAY04C,eAAe7lD,QAC5DP,QAAQ4K,OAAQ23E,gBAAgB7uG,OAAS0rB,WAAWmjF,iBAAmBv5E,UACvEhJ,QAAQuhF,YAAa72E,aAAcG,SACnC82E,UAAUjuG,OAAS,GAAI8rB,gBAAemiF,WAAa34E,UACnD44E,WAAWluG,OAAS,GAAI8rB,gBAAeoiF,YAAc54E,YAEzD+5E,iBAAkBH,2BAClBxyF,UAAW4b,OAAO5b,UAAU5X,QAEvBsjF,aAAcA,aAAcz9C,WAAYA,aAOrD8gE,YAAY5kE,UAAU2nE,eAAiB,SAAUv4E,YAAaoE,cAC1D,GAAqBV,WAAYj8B,KAAKsQ,MAAMhO,MAE5CtC,MAAKsQ,MAAM3P,KAAsB,KACjC,IAAIqU,IAAKhV,KAAKsxG,0BAA0B/4E,YAAaoE,cAAenD,MAAQxkB,GAAGwkB,MAAO23E,gBAAkBn8F,GAAGm8F,gBAAiB73E,aAAetkB,GAAGskB,aAAcG,SAAWzkB,GAAGykB,QAI1Kz5B,MAAKsQ,MAAM2rB,WAAa,WAAc,OAClCrpB,WAAY2lB,YAAY3lB,WACxB87F,UAAWl1E,MACXm1E,QAASlhF,WAAWpR,iBAAiBigB,YAAYhE,cAAcnJ,QAC3DP,QAAQ4K,OAAQ23E,gBAAgB7uG,OAAS0rB,WAAWmjF,iBAAmBv5E,UACvE+B,UAAUpB,YAAYhyB,OAAQ+yB,aAAcG,cASxDs0E,YAAY5kE,UAAUmoE,0BAA4B,SAAU/4E,YAAaoE,cACrE,GAAqBnD,OAAQ,CACxBjB,aAAYha,QACbib,OAAS,MAETjB,YAAY7Z,eAAiBS,gBAAgBO,iBAC7C8Z,OAAS,MAEbjB,YAAYjxB,eAAe7G,QAAQ,SAAU+5B,eAErCA,gBAAkBv6B,cAAcuqB,gBAAgBE,WAChD6N,YAAY7Z,eAAiBS,gBAAgBE,WAC7CkZ,YAAY7Z,eAAiBS,gBAAgBC,YAC7Coa,OAASe,wBAAwBC,iBAGzC,IAAqB22E,mBACrBx0E,cAAal8B,QAAQ,SAAUyc,OACvB1W,eAAe0W,MAAMla,SAAWwD,eAAe+xB,YAAYhyB,QAC3D4qG,gBAAgBxwG,KAAKqtB,YAAYY,QAAQ1R,MAAMkD,SAAUwO,QAAQ,OAGzE,IAAI5Z,IAAKsjB,YAAYC,aAAce,aAAetkB,GAAGskB,aAAcG,SAAWzkB,GAAGykB,SAAU/a,aAAe1J,GAAGwkB,KAC7G,QAASA,MAAOA,MAAQ9a,aAAcyyF,gBAAiBA,gBAAiB73E,aAAcA,aAAcG,SAAUA,WAMlHs0E,YAAY5kE,UAAUsjE,SAAW,SAAUxnG,MACvC,GAAIA,MAAQymG,iBAAiBhlB,MAAMzhF,KAC/B,MAAOymG,kBAAiBhlB,KAG5B,KAAK,GADgBkrB,cAAez1E,SACV01E,YAAc7xG,KAAM6xG,YAAaA,YAAcA,YAAY5iF,OACjF2iF,aAAeA,aAAa/+E,KAAK,UAAU2D,KAAKC,cAAe,CAE/D,GAAqBq7E,cAAeD,YAAYvD,eAAerpG,KAC/D,IAAoB,MAAhB6sG,aACA,MAAOrkF,YAAWpR,iBAAiBigB,YAAYu5C,YAAY1mD,QACvDyiF,aAAchjF,QAAQkjF,eAI9B,IAAqBC,QAASF,YAAYplE,UAAUl4B,KAAK,SAAUw9F,QAAU,MAAOA,QAAO9sG,OAASA,MACpG,IAAI8sG,OAAQ,CACR,GAAqBC,UAAWD,OAAO/uG,OAASmqG,qBAChD,OAAOyE,cAAa/+E,KAAK,WAAWA,KAAKm/E,WAGjD,MAAO,OAOXjE,YAAY5kE,UAAU9T,4BAA8B,SAAUziB,WAAY0iB,UACtE,GAAiB,IAAbA,SAAgB,CAChB,GAAqB28E,aAAcxkF,WAAWpR,iBAAiBigB,YAAY63C,aAC3E,OAAO,YAAc,MAAO89B,cAEhC,GAAqBh2E,WAAYj8B,KAAKsQ,MAAMhO,MAO5C,OALAtC,MAAKsQ,MAAM3P,KAAK,WAAc,OAC1BiS,WAAYA,WACZ87F,UAAW,GACXC,QAASlhF,WAAWpR,iBAAiBigB,YAAY+4C,eAAelmD,QAAQP,QAAQ0G,eAE7E,SAAUC,MAAQ,MAAOyG,eAAcC,UAAW1G,QAO7Dw4E,YAAY5kE,UAAU3T,0BAA4B,SAAU5iB,WAAY6iB,MACpE,GAAoB,IAAhBA,KAAKnzB,OAAc,CACnB,GAAqB4vG,aAAczkF,WAAWpR,iBAAiBigB,YAAY+3C,WAC3E,OAAO,YAAc,MAAO69B,cAEhC,GAAqBj2E,WAAYj8B,KAAKsQ,MAAMhO,MAQ5C,OANAtC,MAAKsQ,MAAM3P,KAAK,WAAc,OAC1BiS,WAAYA,WACZ87F,UAAW,GACXC,QAASlhF,WAAWpR,iBAAiBigB,YAAYi5C,gBAC5CpmD,QAAQnB,WAAWyH,KAAK9f,IAAI,SAAU+f,KAAO,MAAO9G,SAAQ8G,aAE9D,SAAUH,MAAQ,MAAOyG,eAAcC,UAAW1G,QAQ7Dw4E,YAAY5kE,UAAUxT,oBAAsB,SAAUrY,WAAYrY,KAAMqwB,UACpE,GAAqBkO,MAASxjC,KAAKigF,UAAU1rE,KAAK,SAAU09E,aAAe,MAAOA,aAAYhtF,OAASA,MACvG,IAAIu+B,KAAKoiB,KAAM,CACX,GAAqBusD,aAAcnyG,KAAKsQ,MAAMhO,MAE9CtC,MAAKsQ,MAAM3P,KAAK,WAAc,OAC1BiS,WAAY0K,WAAW1K,WACvB87F,UAAW,GACXC,QAASlhF,WAAWpR,iBAAiBigB,YAAYm5C,cAC5CtmD,QAAQP,QAAQ0G,cAKzB,KAFA,GAAqB88E,cAAej2E,SACfk2E,YAAcryG,KAC5BqyG,YAAYpjF,QACfojF,YAAcA,YAAYpjF,OAC1BmjF,aAAeA,aAAav/E,KAAK,UAAU2D,KAAKC,aAEpD,IAAqB67E,eAAgBD,YAAYhE,oBAAoBppG,MAChDstG,gBAAkB9kF,WAAWpR,iBAAiBigB,YAAYu5C,YAAY1mD,QACvFijF,aAAcxjF,QAAQ0jF,gBAE1B,OAAO,UAAU/8E,MAAQ,MAAO6G,iBAAgB9e,WAAW2e,UAAW3e,WAAWuyF,aAAc7zE,cAAcm2E,aAAcI,iBAAiB1oG,OAAO0rB,SAGnJ,GAAqB0G,WAAYj8B,KAAKuuG,YAAYjxF,WAAW1K,WAAY4wB,MACpDgvE,gBAAkB/kF,WAAWpR,iBAAiBigB,YAAYu5C,YAAY1mD,QACvFgN,SAAUvN,QAAQqN,YAEtB,OAAO,UAAU1G,MAAQ,MAAO6G,iBAAgB9e,WAAW2e,UAAW3e,WAAWuyF,aAAc2C,gBAAgB3b,WAAW,YAAathE,SAQ/Iw4E,YAAY5kE,UAAUolE,YAAc,SAAU37F,WAAY4wB,MACtD,GAAqBvH,WAAYj8B,KAAKsQ,MAAMhO,OACvBk3B,MAAQ,CAC7BgK,MAAKp8B,KAAKE,eAAe7G,QAAQ,SAAU+5B,eAEnCA,gBAAkBv6B,cAAcuqB,gBAAgBE,YAChD8O,OAASe,wBAAwBC,iBAGzC,IAAqBpB,UAAWoK,KAAKp8B,KAAKC,OAAOsO,IAAIujB,OAUrD,OAPAl5B,MAAKsQ,MAAM3P,KAAK,WAAc,OAC1BiS,WAAYA,WACZ87F,UAAW,EACXC,QAASlhF,WAAWpR,iBAAiBigB,YAAYq5C,UAAUxmD,QACvDP,QAAQ4K,OAAQ/L,WAAW+V,KAAKp8B,MAAO4mB,WAAWoL,eAGnD6C,WAMX8xE,YAAY5kE,UAAU2mE,4BAA8B,SAAUxyF,YAC1D,GAAI0rB,OAAQhpC,IACZ,QACIi8B,UAAW3e,WAAW2e,UACtB4zE,aAAcvyF,WAAWuyF,aACzBj9F,WAAY0K,WAAW1K,WACvBvS,QAASid,WAAWjd,QACpB2C,MAAOoyB,gCACHC,4BAA6B,SAAUC,UAAY,MAAO0T,OAAM3T,4BAA4B/X,WAAW1K,WAAY0iB,WACnHE,0BAA2B,SAAUC,MAAQ,MAAOuT,OAAMxT,0BAA0BlY,WAAW1K,WAAY6iB,OAC3GE,oBAAqB,SAAU1wB,KAAMqwB,UAAY,MAAO0T,OAAMrT,oBAAoBrY,WAAYrY,KAAMqwB,YACrGhY,WAAWta,SAMtB+qG,YAAY5kE,UAAU0lE,uBAAyB,WA+B3C,QAAS4D,wBAAuBx2E,UAAWrpB,WAAYo1C,YAAa0qD,iBAChE,GAAqBnD,gBACAp2E,MAAQ6uB,YAAYryC,IAAI,SAAUX,IACnD,GAAIpC,YAAaoC,GAAGpC,WAAYvS,QAAU2U,GAAG3U,QAAS2C,MAAQgS,GAAGhS,MAC5CiyB,UAAY,GAAK09E,qBACjBC,aAAevyG,UAAY6tG,SAAW2E,KAAO,KAC9D39F,GAAK+hB,uBAAuB27E,aAAcvyG,QAAS2C,MAAOiyB,WAAYtI,MAAQzX,GAAGyX,MAAOwK,YAAcjiB,GAAGiiB;AAE7G,MADAo4E,aAAY5uG,KAAK4c,MAAMgyF,YAAa5iF,MAAMhX,IAAI,SAAUqX,MAAQ,MAAOD,oCAAmCC,KAAMpa,eACzGwa,oCAAoC+J,YAAavkB,aAK5D,QAHIo1C,YAAY1lD,QAAUowG,kBACtBnD,YAAY5uG,KAAKosB,mCAAmCiP,cAAcC,UAAW9C,OAAO/J,SAAUxc,aAE3F28F,YA3CX,GAAqBsD,MAAO7yG,KACP2yG,mBAAqB,EACrB7D,uBACAC,yBACAC,aAAehvG,KAAKsQ,MAAMqF,IAAI,SAAUpW,QAAS08B,WAClE,GAAIjnB,IAAKzV,UAAWovG,QAAU35F,GAAG25F,QAASD,UAAY15F,GAAG05F,UAAWiD,iBAAmB38F,GAAG28F,iBAAkB5B,eAAiB/6F,GAAG+6F,eAAgBn9F,WAAaoC,GAAGpC,UAC5Jm9F,iBACAjB,oBAAoBnuG,KAAK4c,MAAMuxF,oBAAqB2D,uBAAuBx2E,UAAWrpB,WAAYm9F,gBAAgB,IAElH4B,kBACA5C,sBAAsBpuG,KAAK4c,MAAMwxF,sBAAuB0D,uBAAuBx2E,UAAWrpB,WAAY++F,kBAA+B,OAAZjD,WAA2D,GAOxL,IAAqBoE,gBAA6B,EAAZpE,UAClC,GAAInU,YAAW0T,QAAQ9+E,WAAWA,WAAYw/E,UAC9CA,OACJ,OAAOvhF,qCAAoC0lF,eAAgBlgG,aAE/D,QAASk8F,oBAAqBA,oBAAqBC,sBAAuBA,sBAAuBC,aAAcA,eA6BnHjB,YAAY5kE,UAAUinE,4BAA8B,SAAUn0E,UAAW82E,UACrE,GAAI/pE,OAAQhpC,KACSgzG,oBACAC,wBAA0B,CAC/CF,UAAStyG,QAAQ,SAAUuU,IACvB,GAAI3U,SAAU2U,GAAG3U,QAASs9B,SAAW3oB,GAAG2oB,SAAU/C,OAAS5lB,GAAG4lB,OACzC3F,UAAY,GAAKg+E,0BACjBL,aAAevyG,UAAY6tG,SAAWllE,MAAQ,KAC/D9zB,GAAK2f,qBAAqB+9E,aAAcvyG,QAASs9B,SAASoO,QAAS9W,WAAYtI,MAAQzX,GAAGyX,MAAOg/E,aAAez2F,GAAGy2F,aAClGuH,UAAYvmF,KAC7Bg/E,eACAuH,UAAUvyG,KAAKytG,kBAAkB5yF,IAAImwF,aAAa78D,IAAIs/D,oBAAoBh/E,SAE9E,IAAInY,IAAKymB,0BAA0BC,SAAU/C,QAASu4E,YAAcl8F,GAAG6mB,OAAQsgD,UAAYnnE,GAAGhS,KACzEmuG,cAAgBnzG,cAAc2wG,sBAAsBuC,YAAa/0B,UACtF40B,kBAAiBryG,KAAKosB,mCAAmC,GAAIouE,QAAOvsE,QAAQwkF,eAAe3b,UAAU0W,gBAAiB+E,WAAYv1E,SAAS/qB,cAE/I,IAAqBygG,cACrB,IAAIL,iBAAiB1wG,OAAS,EAAG,CAC7B,GAAqBmtG,WAAYrB,kBAAkB5yF,IAAIoT,SAAQ,IAAO+H,WAAW++D,aAC5E11F,KAAKggB,UAAU7Y,QAAUulB,iBAAiBsmF,kBAAkB3wF,IAAuB6rF,SAAc,OAClGuB,SAAS9uG,KAAKutG,SAAS1yF,IAAI2gB,SAAStJ,KAAK,cAAc8D,WAAW32B,KAAK+F,WAE3EstG,cAAgB7kF,IACZ,GAAIwK,SAA2BmD,SAAc,KAAG5C,eAChD,GAAIP,SAA2Bm1E,eAAoB,KAAG50E,eACtD,GAAIP,SAA2B0yE,iBAAiBhlB,MAAW,KAAGntD,gBAC/Dk2E,SAAS5lG,OAAOmpG,kBAAmB,GAAI36E,iBAAgB+1E,qBAAsB70E,mBAGhF85E,eAAgBz7E,SAEpB,OAAOy7E,gBAOXtF,YAAY5kE,UAAU+D,eAAiB,SAAU1sC,IAAKH,WAMtD0tG,YAAY5kE,UAAU2D,uBAAyB,SAAUtsC,IAAKH,WAM9D0tG,YAAY5kE,UAAUgD,eAAiB,SAAU3rC,IAAKH,WAMtD0tG,YAAY5kE,UAAUkD,cAAgB,SAAU7rC,IAAKH,WAMrD0tG,YAAY5kE,UAAU8C,WAAa,SAAUzrC,IAAKH,WAMlD0tG,YAAY5kE,UAAU0C,qBAAuB,SAAUrrC,IAAKH,WAM5D0tG,YAAY5kE,UAAUwC,UAAY,SAAUnrC,IAAKH,WAC1C0tG,eAoXPuF,cAAiB,WAMjB,QAASA,eAAcpxE,WAAYqxE,WAAY/iG,QAC3CxQ,KAAKkiC,WAAaA,WAClBliC,KAAKuzG,WAAaA,WAClBvzG,KAAKwQ,OAASA,OAElB,MAAO8iG,kBAiFP90E,iBAAoB,SAAU4lB,QAM9B,QAAS5lB,kBAAiBJ,eAAgBD,iBACtC,GAAI6K,OAAQob,OAAOE,KAAKtkD,OAASA,IAQjC,OAPAgpC,OAAM5K,eAAiBA,eACvB4K,MAAM7K,gBAAkBA,gBAExB6K,MAAM3K,WACN2K,MAAMwqE,cAAgB,GAAIz0F,KAC1BiqB,MAAMyqE,yBAA2B,GAAI10F,KACrCiqB,MAAM0qE,sBACC1qE,MA2FX,MAzGA+B,WAAUvM,iBAAkB4lB,QAoB5B5lB,iBAAiB2K,UAAUvK,kBAAoB,SAAUI,SACrD,GAAqBiE,YAAajE,QAAQH,QAC1C,IAAIoE,YAAwC,UAA1BA,WAAWC,WAAwB,CASjD,GAAqBywE,WACrBvvG,QAAOqxB,KAAKwN,YAAYxiC,QAAQ,SAAUkhB,UACrB,eAAbA,WACAgyF,QAAQhyF,UAAYshB,WAAWthB,aAGvCshB,WAAa0wE,QAEjB,GAAqBC,kBAAmB5zG,KAAKyzG,yBAAyBl4F,IAAIyjB,QAAQnN,OAC7E+hF,oBACDA,iBAAmB5zG,KAAK6zG,cAAehiF,OAAQmN,QAAQnN,SACvD7xB,KAAK0zG,mBAAmB/yG,KAAKizG,kBAC7B5zG,KAAKyzG,yBAAyBj4F,IAAIwjB,QAAQnN,OAAQ+hF,mBAGrB,MAA7BA,iBAAiB/0E,UAAkC,MAAdoE,aACrC2wE,iBAAiB/0E,SAAW7+B,KAAK6zG,aAAa5wE,aAGrB,MAAzB2wE,iBAAiBxsG,MAAgC,MAAhB43B,QAAQ53B,OACzCwsG,iBAAiBxsG,KAAOpH,KAAK6zG,aAAa70E,QAAQ53B,QAM1Do3B,iBAAiB2K,UAAU9uB,UAAY,WACnC,GAAI2uB,OAAQhpC,KACSmI,YACAw3B,KAAO4N,KAAKC,WAC7BsmE,UAAW9zG,KAAK0zG,mBAChBr1E,QAASr+B,KAAKq+B,QAAQ1oB,IAAI,SAAUkc,OAAQntB,OACxCmtB,OAAOyb,iBACP,IAAqBymE,UAAW,MAKhC,OAJI/qE,OAAM7K,gBAAgBY,cAAclN,OAAOlsB,YAC3CouG,SAAWliF,OAAO5sB,KAAO,IAAMP,MAC/ByD,SAASxH,MAAOkxB,OAAQA,OAAQ1pB,SAAU4rG,aAG1CC,SAAUtvG,MACVO,KAAM4sB,OAAO5sB,KAIbU,SAAUqjC,MAAM7K,gBAAgB8tD,mBAAmBp6D,OAAOlsB,UAC1DouG,SAAUA,aAItB,QAASp0E,KAAMA,KAAMx3B,SAAUA,WAMnCq2B,iBAAiB2K,UAAU0qE,aAAe,SAAU7wG,OAAS,MAAOD,YAAWC,MAAOhD,KAAM,OAM5Fw+B,iBAAiB2K,UAAU5lC,WAAa,SAAUP,MAAO3C,SACrD,GAAI2C,gBAAiBsC,cAAc,CAC/B,GAAqB2uG,YAAaj0G,KAAKo+B,eAAeoC,gBAAgBx9B,MAAM2C,SAAU3C,MAAMiC,MACvEP,MAAQ1E,KAAKwzG,cAAcj4F,IAAI04F,WAOpD,OALa,OAATvvG,QACAA,MAAQ1E,KAAKwzG,cAAcruB,KAC3BnlF,KAAKwzG,cAAch4F,IAAIy4F,WAAYvvG,OACnC1E,KAAKq+B,QAAQ19B,KAAKszG,cAEbD,SAAUtvG,MAAO2oC,QAASrqC,MAAMqqC,WAG1C7O,kBACTklB,kBACEhlB,iBAAoB,WAIpB,QAASA,kBAAiBN,gBACtBp+B,KAAKo+B,eAAiBA,eACtBp+B,KAAKmJ,KAAO,GAAI4V,KAmJpB,MA5IA2f,kBAAiByK,UAAU/J,cAAgB,SAAUJ,QAASH,UAC1D7+B,KAAKmJ,KAAKqS,IAAIwjB,QAAQ53B,KAAKhC,WAAa45B,QAASA,QAASH,SAAUA,SAAUq1E,WAAW,KAM7Fx1E,iBAAiByK,UAAUhK,WAAa,SAAUH,SAC9Ch/B,KAAKmJ,KAAKqS,IAAIwjB,QAAQ53B,KAAKhC,WAAa45B,QAASA,QAASH,SAAU,KAAMq1E,WAAW,KAMzFx1E,iBAAiByK,UAAU9uB,UAAY,SAAUlS,UAC7C,GAAI6gC,OAAQhpC,KACS63B,cACA+H,gBACAu0E,gBAAkB,GAAIlyF,IA2B3C,OA1BAhf,OAAMwf,KAAKziB,KAAKmJ,KAAKuc,UAAUjlB,QAAQ,SAAUuU,IAC7C,GAAIgqB,SAAUhqB,GAAGgqB,QAASH,SAAW7pB,GAAG6pB,SAAUq1E,UAAYl/F,GAAGk/F,SACjE,IAAIl1E,QAAQK,cAAgBC,mBAAmBpU,SAAU,CAKrDipF,gBAAgBr3E,IAAIkC,QAAQ53B,KAAKhC,UACjC,IAAqB6rF,YAAa,OAClCA,YAAWvtD,QAAQjjC,QAAQ,SAAUywF,KAAOijB,gBAAgBr3E,IAAIo0D,IAAI9rF,aAExE,IAAK8uG,UAAW,CACZ,GAAqBE,QAASnqF,kBAAkB+U,QAAQ53B,KAAKhC,UAAUH,KACvE4yB,YAAWl3B,KAAK6tB,OAAQ,GAAI6J,iBAAgB2Q,MAAMqrE,yBAAyBr1E,QAA0B,YAAiB,GAAIo2D,WAAU3+D,eAC/HE,WAAWy9E,QAASx9E,aAAaC,SACtC+I,aAAaj/B,KAAKyzG,WAG1BjsG,SAAS1H,QAAQ,SAAUia,OACvB,GAAqBmX,QAASnX,MAAMmX,MACpC,IAAIsiF,gBAAgB9xF,IAAIwP,QAAS,CAC7B,GAAqByiF,iBAAkBrqF,kBAAkBvP,MAAMvS,SAC/D0vB,YAAWl3B,KAAK4sB,SAAS+mF,iBAAiB94F,IAAIwtB,MAAMurE,oBAAoB1iF,SAAS8E,cACjFiJ,aAAaj/B,KAAK2zG,qBAGjBz8E,WAAYA,WAAY+H,aAAcA,eAOnDlB,iBAAiByK,UAAUkrE,yBAA2B,SAAUr1E,QAASH,UACrE,GAAImK,OAAQhpC,KACSgoD,aAAehoD,KAAKw0G,iBAAiBx1E,UACrCp2B,YACrB,IAAIi2B,mBAAoBgnB,yBACpBmC,YAAYrnD,KAAK4c,MAAMyqC,YAIvBnpB,SAASsD,mBAAmBt4B,OAAOg1B,SAASyD,eACvC3sB,IAAI,SAAUvO,MAAQ,MAAOA,MAAKhC,YAClCyE,OAAOg1B,SAAS4E,iBAAiBC,QAAQ/tB,IAAI,SAAUvO,MAAQ,MAAOA,MAAKhC,YAC3Ema,OAAO,SAAUla,KAAO,MAAOA,OAAQw5B,SAASz3B,KAAKhC,aACrDuQ,IAAI,SAAUtQ,KAAO,MAAO2jC,OAAMurE,oBAAoBlvG,QAG3DuD,UAAYi2B,SAASj2B,cAEpB,IAAIo2B,QAAQK,cAAgBC,mBAAmBjgB,UAAW,CAC3D,GAAqB+vE,YAAa,OAClCxmF,WAAYwmF,WAAWxmF,UAAUiB,OAAOulF,WAAWvmF,eASvD,MAHAm/C,aAAYrnD,KAAK4c,MAAMyqC,YAAap/C,UAAU2W,OAAO,SAAUxB,UAAY,QAASA,SAASI,WAAaxI,IAAI,SAAUoI,UAAY,MAAOirB,OAAMwrE,kBAC7In1E,YAAaC,mBAAmB4lB,WAAY99C,KAAM2W,SAASI,cAExD6P,WAAWg6B,cAMtBtpB,iBAAiByK,UAAUorE,oBAAsB,SAAUE,YACvD,GAAqBC,mBAAoB10G,KAAKo+B,eAAeoC,gBAAgB1W,sBAAsB2qF,WAAW9uG,UAAWskB,kBAAkBwqF,WAAWxvG,MACtJ,OAAOwoB,aAAaroB,UAAWsvG,qBAMnCh2E,iBAAiByK,UAAUqrE,iBAAmB,SAAUrrG,MACpD,GAAIwrG,aAAe,WACf,QAASA,gBAuCT,MAhCAA,aAAYxrE,UAAUhmC,WAAa,SAAU4lB,IAAK1oB,SAC9C,GAAI2oC,OAAQhpC,IACZ,OAAOguB,YAAWjF,IAAIpT,IAAI,SAAU+E,OAAS,MAAO3X,YAAW2X,MAAOsuB,MAAO3oC,aAOjFs0G,YAAYxrE,UAAU9lC,eAAiB,SAAUsS,IAAKtV,SAClD,GAAI2oC,OAAQhpC,IACZ,OAAO,IAAIouB,gBAAehqB,OAAOqxB,KAAK9f,KAAKA,IAAI,SAAU+f,KAAO,MAAO,IAAIrH,iBAAgBqH,IAAK3yB,WAAW4S,IAAI+f,KAAMsT,MAAO3oC,cAOhIs0G,YAAYxrE,UAAU7lC,eAAiB,SAAUN,MAAO3C,SAAW,MAAOuuB,SAAQ5rB,QAMlF2xG,YAAYxrE,UAAU5lC,WAAa,SAAUP,MAAO3C,SAChD,GAAI2C,gBAAiBsC,cACjB,MAAOmoB,aAAaroB,UAAWpC,OAG/B,MAAM,IAAIhC,OAAM,oCAAsCgC,QAGvD2xG,cAEX,OAAO5xG,YAAWoG,KAAM,GAAIwrG,aAAe,OAExCj2E,oBAEPuB,qBAAwB,SAAUmkB,QAKlC,QAASnkB,sBAAqBF,aAC1B,GAAIiJ,OAAQob,OAAOE,KAAKtkD,OAASA,IAEjC,OADAgpC,OAAMjJ,YAAcA,YACbiJ,MAqCX,MA5CA+B,WAAU9K,qBAAsBmkB,QAahCnkB,qBAAqBkJ,UAAUjJ,YAAc,SAAUP,MACnD,GAAIqJ,OAAQhpC,KACSmJ,KAAOokC,KAAKxmC,MAAM44B,MAClBo0E,WACrB/zG,MAAKq+B,WACLl1B,KAAKk1B,QAAQ59B,QAAQ,SAAUm0G,kBAC3B,GAAqB/iF,QAASmX,MAAMjJ,YAAYxkB,IAAIq5F,iBAAiBjvG,SAAUivG,iBAAiB3vG,KAChG+jC,OAAM3K,QAAQ19B,KAAKkxB,QACf+iF,iBAAiBb,UACjBA,SAASpzG,MAAOkxB,OAAQA,OAAQkiF,SAAUa,iBAAiBb,YAGnE,IAAqBD,WAAY/wG,WAAWoG,KAAK2qG,UAAW9zG,KAAM,KAClE,QAAS8zG,UAAWA,UAAWC,SAAUA,WAO7C9zE,qBAAqBkJ,UAAU9lC,eAAiB,SAAUsS,IAAKtV,SAC3D,GAAI,YAAcsV,KAAK,CACnB,GAAqBs+F,YAAaj0G,KAAKq+B,QAAQ1oB,IAAc,UACxC03B,QAAU13B,IAAa,OAC5C,OAAO03B,SAAQ/qC,OAAStC,KAAK+/B,YAAYxkB,IAAI04F,WAAWtuG,SAAUsuG,WAAWhvG,KAAMooC,SAC/E4mE,WAGJ,MAAO7vD,QAAOjb,UAAU9lC,eAAeihD,KAAKtkD,KAAM2V,IAAKtV,UAGxD4/B,sBACTyjB,kBAQEvc,YAAe,WAgBf,QAASA,aAAY+4C,QAAS20B,MAAOC,kBAAmBC,gBAAiBC,eAAgBC,cAAeC,kBAAmBC,eAAgB1oB,iBAAkB2oB,UAAWC,mBAAoBC,iBAAkBC,iBAC1Mv1G,KAAKkgF,QAAUA,QACflgF,KAAK60G,MAAQA,MACb70G,KAAK80G,kBAAoBA,kBACzB90G,KAAK+0G,gBAAkBA,gBACvB/0G,KAAKg1G,eAAiBA,eACtBh1G,KAAKi1G,cAAgBA,cACrBj1G,KAAKk1G,kBAAoBA,kBACzBl1G,KAAKm1G,eAAiBA,eACtBn1G,KAAKysF,iBAAmBA,iBACxBzsF,KAAKo1G,UAAYA,UACjBp1G,KAAKq1G,mBAAqBA,mBAC1Br1G,KAAKs1G,iBAAmBA,iBACxBt1G,KAAKu1G,gBAAkBA,gBA2M3B,MAtMApuE,aAAYgC,UAAUw+C,WAAa,WAAc3nF,KAAK80G,kBAAkBntB,cAKxExgD,YAAYgC,UAAUqsE,WAAa,SAAUC,WACzC,GAAIzsE,OAAQhpC,KACSshC,eAAiBsB,sBAAsB5iC,KAAKu1G,gBAAiBE,UAAWz1G,KAAK60G,OAC9F7/F,GAAKqsB,4BAA4BC,eAAgBthC,KAAK60G,MAAO70G,KAAK80G,mBAAoBpzE,0BAA4B1sB,GAAG0sB,0BAA2Bc,MAAQxtB,GAAGwtB,MAAOtB,UAAYlsB,GAAGksB,SACrL,OAAO4iB,SACFslC,IAAIloD,UAAUvrB,IAAI,SAAU8rB,UAAY,MAAOuH,OAAM8rE,kBAAkBtlB,qCAAqC/tD,SAASr6B,KAAKhC,WAAW,MACrImjF,KAAK,WACN,GAAqBmtB,eAAgBlzE,MAAM7sB,IAAI,SAAUq+C,MAAQ,MAAOhrB,OAAM2sE,gBAAgB3hD,KAAKvxB,OAAQf,0BAA2BsyB,KAAKp1C,WAAYo1C,KAAKtxB,MAAOsxB,KAAK9yB,UAAW8yB,KAAKrxB,cACxL,OAAOp5B,SAAQmsG,kBAYvBvuE,YAAYgC,UAAUwsE,gBAAkB,SAAUzzE,WAAYR,0BAA2B9iB,WAAY8jB,MAAOxB,UAAWyB,aACnH,GAAIqG,OAAQhpC,KACSqgC,WAAajX,sBAAsB8Y,YAAY,GAAM,GACrDrK,cACA+H,gBACAg2E,iBAwBrB,IAvBAA,eAAej1G,KAAK4c,MAAMq4F,eAAgB51G,KAAK61G,eAAe3zE,WAAYtjB,WAAY8jB,MAAOxB,UAAWyB,YAAa9K,WAAY+H,eAEjIA,aAAaj/B,KAAK4c,MAAMqiB,aAAcsB,UAAUvrB,IAAI,SAAU1L,cAAgB,MAAO++B,OAAM8sE,eAAe7rG,aAAc4tB,eAExHjZ,WAAWne,QAAQ,SAAU2F,SACzB,GAAqBO,UAAWqiC,MAAM8rE,kBAAkB5lB,qBAAsC,QAC9F,KAAKvoF,SAAS+B,YACV,MAAOo7C,SAAQxiC,QAAQ,KAE3B,IAAqBmgB,UAAWC,0BAA0BnmB,IAAInV,QAC9D,KAAKq7B,SACD,KAAM,IAAIzgC,OAAM,6DAA+DkE,eAAeyB,SAASS,MAAQ,IAEnHy5B,kBAAiBl6B,SAEjB,IAAqBovG,sBAAuB/sE,MAAMgsE,eAAe9J,iBAAiBvkG,SAClFovG,sBAAqB9tG,oBAAoBxH,QAAQ,SAAUu1G,oBACvDJ,eAAej1G,KAAKqoC,MAAMitE,cAAc/zE,WAAY8zE,mBAAoB31E,cAG5E,IAAqB61E,cAAeltE,MAAMmtE,kBAAkBxvG,SAAU86B,SAAUA,SAASgC,iBAAiB7kB,WAAYm3F,qBAAqBjL,oBAAqBzqE,WAAYxI,WAC5K+H,cAAaj/B,KAAKqoC,MAAMotE,yBAAyBzvG,SAAU86B,SAAUpB,WAAYxI,YAAaq+E,aAAa7I,aAAc6I,aAAaG,qBAEtIx+E,WAAWv1B,OAAS,EAAG,CACvB,GAAqBg0G,WAAYt2G,KAAKu2G,qBAAqBr0E,WAAYjZ,kBAAkBiZ,YAAY,GAAOrK,WAAY+H,aACxHg2E,gBAAe7tF,QAAQuuF,WAE3B,MAAOV,iBAYXzuE,YAAYgC,UAAU0sE,eAAiB,SAAU3zE,WAAYtjB,WAAY8jB,MAAOxB,UAAWyB,YAAaisE,iBAAkB4H,oBACtH,GAAIxtE,OAAQhpC,KACSy2G,gBAAkBz2G,KAAKu1G,gBAAgBvyE,aAAad,YACpEvsB,IAAI,SAAUkc,QAAU,MAAOmX,OAAMusE,gBAAgBr2E,cAAcrN,UACnD6kF,SAAWx1E,UAAUvrB,IAAI,SAAUtQ,KAAO,OAC3D25B,QAA4BgK,MAAM8rE,kBAAkBzlB,mBAAmBhqF,KACvEw5B,SAA6BmK,MAAM8rE,kBAAkBvxE,oBAAoBl+B,QACtEwE,OAAO+U,WAAWjJ,IAAI,SAAUtQ,KAAO,OAC1C25B,QAA4BgK,MAAM8rE,kBAAkB3lB,oBAAoB9pF,KACxEw5B,SAA6BmK,MAAM8rE,kBAAkB5lB,qBAAqB7pF,QACtEq9B,MAAM/sB,IAAI,SAAUtQ,KAAO,OAC/B25B,QAA4BgK,MAAM8rE,kBAAkB9iB,eAAe3sF,KACnEw5B,SAA6BmK,MAAM8rE,kBAAkBhjB,gBAAgBzsF,QACjEs9B,YAAYhtB,IAAI,SAAUtQ,KAAO,OACrC25B,QAA4BgK,MAAM8rE,kBAAkBtjB,qBAAqBnsF,KACzEw5B,SAA6BmK,MAAM8rE,kBAAkBtjB,qBAAqBnsF,KAAO+B,SAEjF4N,GAAKkpB,mBAAmBl+B,KAAKysF,iBAAkBzsF,KAAKu1G,gBAAiBkB,gBAAiBC,UAAW/2E,KAAO3qB,GAAG2qB,KAAMx3B,SAAW6M,GAAG7M,SAAU03B,OAAS7qB,GAAG6qB,MAKzJ,OAJA13B,UAAS1H,QAAQ,SAAUia,OACvBk0F,iBAAiBjuG,KAAK4sB,SAAS7S,MAAMvS,UAAUqT,IAAIiS,YAAaroB,UAAWsV,MAAMmX,UAAW8E,cAC5F6/E,mBAAmB71G,KAAK+Z,MAAMvS,aAG9B,GAAImrG,eAAcpxE,WAAYxY,gBAAgBwY,YAAavC,MAC3D3/B,KAAKu2G,qBAAqBr0E,WAAYpY,sBAAsBoY,YAAY,GAAOrC,OAAOhI,WAAYgI,OAAOD,gBAQjHuH,YAAYgC,UAAU2sE,eAAiB,SAAU7rG,aAAc2kG,kBAC3D,GAAqBntE,UAAazhC,KAAK80G,kBAAkBvxE,oBAAoBt5B,cACxDrB,YACjB5I,MAAKo1G,WACLxsG,UAAUjI,MACN4F,MAAOgW,sBAAsB+f,YAAYu3C,WACzC51D,SAAUje,KAAKo1G,YAGnBp1G,KAAKq1G,oBACLzsG,UAAUjI,MACN4F,MAAOgW,sBAAsB+f,YAAYw3C,qBACzC71D,SAAUje,KAAKq1G,oBAGvB,IAAqBsB,kBAAmB32G,KAAKk1G,kBAAkBxY,QAAQj7D,SAAU74B,UAEjF,OADAgmG,kBAAiBjuG,KAAK4c,MAAMqxF,iBAAkB+H,iBAAiB9+E,YACxD8+E,iBAAiBla,oBAS5Bt1D,YAAYgC,UAAUitE,yBAA2B,SAAUzvG,SAAU86B,SAAUpB,WAAYuuE,kBACvF,GAAqBgI,UAAW52G,KAAK80G,kBAAkBlnB,qBAAqBjnF,SAASS,KAAKhC,WACrEyxG,SAAWpwG,wBAAwBmwG,SAAUjwG,SAAU3G,KAAK80G,kBAAkBnnB,0BAA0BipB,WACxGE,mBAAqB92G,KAAKm2G,kBAAkBU,SAAUp1E,UAAW96B,SAASS,MAAO,KAAMi5B,WAAYuuE,kBACnHvB,aACgB0J,eAAiB1wG,qBAAqBM,SAASS,KAAKhC,WACpD4xG,cACrB,KAAK,GAAqBr1F,YAAYhb,UAAS4B,OAAQ,CACnD,GAAqBskC,cAAelmC,SAAS4B,OAAOoZ,SAEpDq1F,aAAYr2G,KAAK,GAAI0tB,iBAAgB1M,SAAUiN,QAAQie,gBAAe,KAE1E,GAAqBoqE,gBACrB,KAAK,GAAqBt1F,YAAYhb,UAAS6B,QAAS,CACpD,GAAqBqkC,cAAelmC,SAAS6B,QAAQmZ,SAErDs1F,cAAat2G,KAAK,GAAI0tB,iBAAgB1M,SAAUiN,QAAQie,gBAAe,KAU3E,MARA+hE,kBAAiBjuG,KAAK4sB,SAASwpF,gBAC1Bv7F,IAAIiS,WAAWpR,iBAAiBigB,YAAYg6C,yBAAyBnnD,QACtEP,QAAQjoB,SAASgC,UAAW8kB,WAAW9mB,SAASS,MAChDmmB,SAASupF,oBAAqB,GAAI1oF,gBAAe4oF,aACjD,GAAI5oF,gBAAe6oF,cACnBjpF,WAA8BrnB,SAAkB,SAAEmB,mBAAmB6N,IAAI,SAAUhN,UAAY,MAAOimB,SAAQjmB,gBAE7GguB,WAAW/I,WAAWvR,iBAAiBigB,YAAY+2C,mBAAuCzlD,WAAWjnB,SAASS,QAAWotF,aAAaC,SAAU79D,aAAaC,SAC3JkgF,gBAWX5vE,YAAYgC,UAAUgtE,kBAAoB,SAAUxvG,SAAU86B,SAAUy1E,qBAAsBC,gBAAiB92E,WAAYuuE,kBACvH,GAAI5lE,OAAQhpC,KACS4e,WAAas4F,qBAAqBvhG,IAAI,SAAU6J,KAAO,MAAOwpB,OAAM8rE,kBAAkB3lB,oBAAoB3vE,IAAIpa,aAC9Gs9B,MAAQjB,SAASgC,iBAAiBf,MAAM/sB,IAAI,SAAU6tB,MAAQ,MAAOwF,OAAM8rE,kBAAkB9iB,eAAexuD,KAAKp+B,aAClI4P,GAAKhV,KAAK+0G,gBAAgBhuG,MAAMJ,SAA+BA,SAAkB,SAAW,SAAGiY,WAAY8jB,MAAOjB,SAASwkB,QAASj8C,kBAAkBy3B,SAASr6B,KAAMT,SAA6BA,SAAkB,WAAKywG,eAAiBpiG,GAAGnO,SAAUo5E,UAAYjrE,GAAG0tB,MACrP20E,WAAaF,gBAAkB5pF,SAAS4pF,gBAAgBnM,WAAah9E,eACrEspF,WAAat3G,KAAKi1G,cAAc/J,iBAAiBvkG,SAAUywG,eAAgBC,WAAYp3B,UAK5G,OAJIk3B,kBACAvI,iBAAiBjuG,KAAK4c,MAAMqxF,iBAAkBzuE,wBAAwBngC,KAAKu1G,gBAAiB4B,gBAAiB92E,aAEjHuuE,iBAAiBjuG,KAAK4c,MAAMqxF,iBAAkB0I,WAAWz/E,aAChDw1E,aAAciK,WAAWjK,aAAcgJ,kBAAmBiB,WAAWhK,kBAQlFnmE,YAAYgC,UAAU8sE,cAAgB,SAAU5zE,QAASk1E,oBAAqBl3E,YAE1E,MADAF,yBAAwBngC,KAAKu1G,gBAAiBgC,oBAAqBl3E,YAC5DrgC,KAAKu2G,qBAAqBl0E,QAAS5B,iBAAoC82E,oBAAoBntG,KAAe,UAAGmtG,oBAAoB72E,UAAWL,YAAak3E,oBAAoB1/E,YAAa0/E,oBAAoBvM,aASzN7jE,YAAYgC,UAAUotE,qBAAuB,SAAUr0E,WAAYqxE,WAAY17E,WAAY+H,cACvF,MAAO,IAAI0zE,eAAcpxE,WAAYqxE,WAAYvzG,KAAKm1G,eAAe1S,eAAe34F,UAAUo4B,YAAaqxE,WAAY17E,WAAY+H,aAAc5/B,KAAKs1G,oBAEnJnuE,eAqLP7B,uCAA0C,WAI1C,QAASA,wCAAuCkyE,gBAC5Cx3G,KAAKw3G,eAAiBA,eACtBx3G,KAAKy3G,gBAAkB,GAAIx3G,eAAcyqC,wBAmG7C,MA7FApF,wCAAuCC,QAAU,SAAUiyE,gBACvDv3G,cAAc2F,WAAW8xG,mBAAmB,GAAIpyE,wCAAuCkyE,kBAK3FlyE,uCAAuC6D,UAAUwuE,oBAAsB,WAAc,OAAO,GAK5FryE,uCAAuC6D,UAAU5pC,QAAU,SAAU6H,MAAQ,MAAOpH,MAAKy3G,gBAAgBl4G,QAAQ6H,OAMjHk+B,uCAAuC6D,UAAU9e,iBAAmB,SAAUjjB,KAAMwwG,YAChF,MAAO9zE,cAAa18B,MAAQpH,KAAKw3G,eAAentF,iBAAiBjjB,KAAMwwG,YACnE53G,KAAKy3G,gBAAgBptF,iBAAiBjjB,KAAMwwG,aAMpDtyE,uCAAuC6D,UAAUmpD,WAAa,SAAUlrF,MACpE,MAAO08B,cAAa18B,MAAQpH,KAAKw3G,eAAellB,WAAWlrF,MACvDpH,KAAKy3G,gBAAgBnlB,WAAWlrF,OAMxCk+B,uCAAuC6D,UAAU6gD,YAAc,SAAU5iF,MACrE,MAAO08B,cAAa18B,MAAQpH,KAAKw3G,eAAextB,YAAY5iF,MACxDpH,KAAKy3G,gBAAgBztB,YAAY5iF,OAMzCk+B,uCAAuC6D,UAAUghD,aAAe,SAAUiI,YACtE,MAAOtuD,cAAasuD,YAAcpyF,KAAKw3G,eAAertB,aAAaiI,YAC/DpyF,KAAKy3G,gBAAgBttB,aAAaiI,aAM1C9sD,uCAAuC6D,UAAUX,OAAS,SAAUvjC,MAAQ,MAAOjF,MAAKy3G,gBAAgBjvE,OAAOvjC,OAK/GqgC,uCAAuC6D,UAAU0uE,OAAS,SAAU5yG,MAAQ,MAAOjF,MAAKy3G,gBAAgBI,OAAO5yG,OAK/GqgC,uCAAuC6D,UAAUT,OAAS,SAAUzjC,MAAQ,MAAOjF,MAAKy3G,gBAAgB/uE,OAAOzjC,OAK/GqgC,uCAAuC6D,UAAUtjC,UAAY,SAAUuB,MAAQ,MAASpH,MAAKw3G,eAAe3xG,UAAUuB,OAKtHk+B,uCAAuC6D,UAAUnd,YAAc,SAAU5kB,MAAQ,MAAOpH,MAAKw3G,eAAexrF,YAAY5kB,OAQxHk+B,uCAAuC6D,UAAUhtB,kBAAoB,SAAUlX,KAAM8K,UAAWs9B,QAASjxB,SACrG,MAAOpc,MAAKw3G,eAAer7F,kBAAkBlX,KAAM8K,UAAWs9B,UAOlE/H,uCAAuC6D,UAAU2uE,YAAc,SAAUC,eAAgB9yG,MACrF,MAAI6+B,cAAai0E,gBACN/3G,KAAKw3G,eAAeM,YAAYC,eAAgB9yG,MAGhD,MAGRqgC,0CAgBP0yE,aAAe,gBACf3zE,WAAa,WACb4zE,QACA/0E,WAAY,UAaZmC,gBAAmB,WAQnB,QAASA,iBAAgBlH,gBAAiBC,eAAgB85E,qBAAsBC,uBAAwBC,eACvE,SAAzBF,uBAAmCA,yBACR,SAA3BC,yBAAqCA,0BACzC,IAAInvE,OAAQhpC,IACZA,MAAKm+B,gBAAkBA,gBACvBn+B,KAAKo+B,eAAiBA,eACtBp+B,KAAKo4G,cAAgBA,cACrBp4G,KAAKq4G,gBAAkB,GAAIt5F,KAC3B/e,KAAKs4G,cAAgB,GAAIv5F,KACzB/e,KAAKu4G,eAAiB,GAAIx5F,KAC1B/e,KAAKw4G,YAAc,GAAIz5F,KACvB/e,KAAKy4G,cAAgB,GAAI15F,KACzB/e,KAAK04G,wCAA0C,GAAI35F,KACnD/e,KAAK24G,gBAAkB,GAAI55F,KAC3B/e,KAAK44G,0BACLV,qBAAqBz3G,QAAQ,SAAUo4G,IAAM,MAAO7vE,OAAM8vE,gCAAgC9vE,MAAMxI,gBAAgBq4E,GAAGlzG,SAAUkzG,GAAG5zG,MAAO4zG,GAAGrpF,QAC1I2oF,uBAAuB13G,QAAQ,SAAUs4G,IAAM,MAAO/vE,OAAMgwE,kBAAkBhwE,MAAMxI,gBAAgBu4E,GAAGpzG,SAAUozG,GAAG9zG,MAAO8zG,GAAGvqF,MAC9HxuB,KAAK04G,wCAAwCl9F,IAAI8jB,mBAAmBjgB,WAAYpf,cAAcof,UAAWpf,cAAcmf,YACvHpf,KAAK04G,wCAAwCl9F,IAAI8jB,mBAAmBlU,MAAOnrB,cAAcmrB,OACzFprB,KAAK04G,wCAAwCl9F,IAAI8jB,mBAAmBpU,UAAWjrB,cAAcirB,WAC7FlrB,KAAK04G,wCAAwCl9F,IAAI8jB,mBAAmB4lB,YAAajlD,cAAcilD,WAAYjlD,cAAcmrB,KAAMnrB,cAAcof,UAAWpf,cAAcmf,UAAWnf,cAAcirB,WAC/LlrB,KAAK24G,gBAAgBn9F,IAAIvb,cAAcof,UAAW,aAClDrf,KAAK24G,gBAAgBn9F,IAAIvb,cAAcmf,UAAW,aAClDpf,KAAK24G,gBAAgBn9F,IAAIvb,cAAcmrB,KAAM,QAC7CprB,KAAK24G,gBAAgBn9F,IAAIvb,cAAcirB,SAAU,YACjDlrB,KAAK24G,gBAAgBn9F,IAAIvb,cAAcilD,WAAY,cA0oBvD,MApoBA7f,iBAAgB8D,UAAUtjC,UAAY,SAAUusF,YAC5C,GAAqB9uD,cAAetjC,KAAKi5G,sBAAsB7mB,WAC/D,OAAO9uD,cAAeA,aAAa39B,SAAW,MAMlD0/B,gBAAgB8D,UAAUnd,YAAc,SAAUomE,YAC9C,GAAqB9uD,cAAetjC,KAAKi5G,sBAAsB7mB,WAC/D,OAAOpyF,MAAKo+B,eAAe86E,gBAAgB51E,eAQ/C+B,gBAAgB8D,UAAUhtB,kBAAoB,SAAUlX,KAAM8K,UAAWs9B,SACrE,GAAqB8rE,cAAen5G,KAAKwgC,gBAAgBzwB,UAAW9K,MAC/Cm0G,WAAap5G,KAAKq5G,gBAAgBtpG,UAAW9K,KAIlE,OAHIk0G,eAAgBC,YAChBp5G,KAAKo+B,eAAek7E,eAAeF,WAAYD,cAE/C9rE,SAAWA,QAAQ/qC,OACZtC,KAAKwgC,gBAAgB44E,WAAWzzG,SAAUyzG,WAAWn0G,KAAMooC,SAE/D+rE,YAQX/zE,gBAAgB8D,UAAUkwE,gBAAkB,SAAUtpG,UAAW9K,KAAMs0G,gBACnE,MAAOv5G,MAAKi5G,sBAAsBj5G,KAAKo+B,eAAeo7E,kBAAkBzpG,UAAW9K,KAAMs0G,kBAM7Fl0E,gBAAgB8D,UAAU8vE,sBAAwB,SAAUpnF,QACxD,GAAqB8M,gBAAiB3+B,KAAKo+B,eAAec,cAAcrN,OACxE,OAAI8M,iBAAkBA,eAAeE,mBAAoBv5B,cAC9CtF,KAAKi5G,sBAAsBt6E,eAAeE,UAG1ChN,QAQfwT,gBAAgB8D,UAAU2uE,YAAc,SAAUC,eAAgB9yG,MAC9D,GAAqBq+B,cAAey0E,eACf1qE,SAAW/J,aAAa+J,aAAexjC,OAAO5E,KACnE,OAAOjF,MAAKwgC,gBAAgB8C,aAAa39B,SAAU29B,aAAar+B,KAAMooC,UAM1EhI,gBAAgB8D,UAAU6gD,YAAc,SAAU5iF,MAC9C,GAAI4hC,OAAQhpC,KACSgqF,YAAchqF,KAAKq4G,gBAAgB98F,IAAInU,KAC5D,KAAK4iF,YAAa,CACdA,cACA,IAAqByvB,eAAgBz5G,KAAK05G,gBAAgBtyG,MACrCuyG,WAAa35G,KAAK45G,eAAexyG,KAAMqyG,cAC5D,IAAIE,WAAY,CACZ,GAAqBE,mBAAoB75G,KAAKgqF,YAAY2vB,WAC1D3vB,aAAYrpF,KAAK4c,MAAMysE,YAAa6vB,mBAExC,GAAqBC,oBAKrB,IAJIL,cAA0B,aAC1BK,iBAAmB95G,KAAK+5G,SAAS3yG,KAAMqyG,cAA0B,YACjEzvB,YAAYrpF,KAAK4c,MAAMysE,YAAa8vB,mBAEpCH,aAAe35G,KAAKm+B,gBAAgBY,cAAc33B,KAAKzB,WACvD3F,KAAKm+B,gBAAgBY,cAAc46E,WAAWh0G,UAAW,CACzD,GAAqBq5B,SAAUh/B,KAAKm+B,gBAAgBc,eAAe06E,WACnE,IAAI36E,SAAWA,QAAQ53B,KAAM,CACzB,GAAqB4yG,yBAA4Bh6G,KAAK04G,wCAAwCn9F,IAAuByjB,QAAQ53B,KAAiB,aACzH6yG,0BAA4BD,wBAAwB3yC,KAAK,SAAU6yC,cAAgB,MAAOJ,kBAAiBzyC,KAAK,SAAUkqB,KAAO,MAAOA,eAAe2oB,iBACvKD,4BACDj6G,KAAKm6G,YAAYv2G,YAAY,SAAWwD,KAAKnC,KAAO,OAASmC,KAAKzB,SAAW,mBAAqB25B,mBAAqBN,QAAQ53B,KAAiB,aAAK,oEAChJ,gBAAkB4yG,wBAAwBrkG,IAAI,SAAUvO,MAAQ,MAAO4hC,OAAM2vE,gBAAgBp9F,IAAInU,QAAUoO,KAAK,QAAU,6BAA8BpO,OAIzKpH,KAAKq4G,gBAAgB78F,IAAIpU,KAAM4iF,YAAYzqE,OAAO,SAAUgyE,KAAO,QAASA,OAEhF,MAAOvH,cAMX3kD,gBAAgB8D,UAAUghD,aAAe,SAAU/iF,MAC/C,GAAI4hC,OAAQhpC,KACSmqF,aAAenqF,KAAKs4G,cAAc/8F,IAAInU,KAC3D,KAAK+iF,aAAc,CACf,GAAqBsvB,eAAgBz5G,KAAK05G,gBAAgBtyG,KAC1D+iF,gBACA,IAAqBwvB,YAAa35G,KAAK45G,eAAexyG,KAAMqyG,cAC5D,IAAIE,WAAY,CACZ,GAAqBS,sBAAuBp6G,KAAKmqF,aAAawvB,WAC9Dv1G,QAAOqxB,KAAK2kF,sBAAsB35G,QAAQ,SAAU45G,YAChD,aAAiBA,YAAcD,qBAAqBC,cAG5D,GAAqBC,WAAYb,cAAuB,WACxDr1G,QAAOqxB,KAAK6kF,WAAW75G,QAAQ,SAAUkhB,UACrC,GAAqB44F,UAAWD,UAAU34F,UACrBkR,KAAO,SACvBte,KAAK,SAAUqB,GAAK,MAA0B,YAAnBA,EAAc,YAAsC,UAAnBA,EAAc,aAC1D62C,aACjB,cAAiB9qC,WACjB8qC,WAAW9rD,KAAK4c,MAAMkvC,WAAY,aAAiB9qC,WAEvD,aAAiBA,UAAY8qC,WACzB55B,MAAQA,KAAiB,YACzB45B,WAAW9rD,KAAK4c,MAAMkvC,WAAYzjB,MAAM+wE,SAAS3yG,KAAMyrB,KAAiB,eAGhF7yB,KAAKs4G,cAAc98F,IAAIpU,KAAM+iF,cAEjC,MAAOA,eAMX9kD,gBAAgB8D,UAAUmpD,WAAa,SAAUlrF,MAC7C,KAAMA,eAAgB9B,eAElB,MADAtF,MAAKm6G,YAAY,GAAIn5G,OAAM,uBAAyBusC,KAAKC,UAAUpmC,MAAQ,gCAAiCA,QAGhH,KACI,GAAqBozG,cAAex6G,KAAKu4G,eAAeh9F,IAAInU,KAC5D,KAAKozG,aAAc,CACf,GAAqBf,eAAgBz5G,KAAK05G,gBAAgBtyG,MACrCuyG,WAAa35G,KAAK45G,eAAexyG,KAAMqyG,eACvCpsE,QAAUosE,cAAgBA,cAAuB,QAAI,KACrDgB,SAAWptE,QAAUA,QAAkB,SAAI,IAChE,IAAIotE,SAAU,CACV,GAAqBjrF,MAAO,SAAajb,KAAK,SAAUqB,GAAK,MAA0B,eAAnBA,EAAc,aAC7D8kG,eAAkB16G,KAAK+5G,SAAS3yG,KAAMooB,KAAiB,gBACvDmrF,sBAAyB36G,KAAK+5G,SAAS3yG,KAAMooB,KAA0B,wBAC5FgrF,iBACAE,eAAej6G,QAAQ,SAAUm6G,UAAWl2G,OACxC,GAAqBm2G,gBACjBD,YACAC,aAAal6G,KAAKi6G,UAEtB,IAAqBnuD,YAAakuD,sBAAwBA,sBAAsBj2G,OAAS,IACrF+nD,aACAouD,aAAal6G,KAAK4c,MAAMs9F,aAAcpuD,YAE1C,aAAiB9rD,KAAKk6G,oBAGrBlB,cACLa,aAAex6G,KAAKsyF,WAAWqnB,YAE9Ba,gBACDA,iBAEJx6G,KAAKu4G,eAAe/8F,IAAIpU,KAAMozG,cAElC,MAAOA,cAEX,MAAO/jG,GAEH,KADA+uB,SAAQ1hC,MAAM,kBAAoBypC,KAAKC,UAAUpmC,MAAQ,eAAiBqP,GACpEA,IAOd4uB,gBAAgB8D,UAAU2xE,aAAe,SAAU1zG,MAC/C,GAAqB2zG,aAAc/6G,KAAKw4G,YAAYj9F,IAAInU,KACxD,KAAK2zG,YAAa,CACd,GAAqBtB,eAAgBz5G,KAAK05G,gBAAgBtyG,KAC1D2zG,eACA,IAAqBpB,YAAa35G,KAAK45G,eAAexyG,KAAMqyG,cAC5D,IAAIE,WAAY,CACZ,GAAqBqB,qBAAsBh7G,KAAK86G,aAAanB,WAC7Dv1G,QAAOqxB,KAAKulF,qBAAqBv6G,QAAQ,SAAU45G,YAC/C,YAAgBA,YAAcW,oBAAoBX,cAG1D,GAAqBY,WAAYxB,cAAuB,WACxDr1G,QAAOqxB,KAAKwlF,WAAWx6G,QAAQ,SAAUkhB,UACrC,GAAqB44F,UAAWU,UAAUt5F,UACrBu5F,SAAW,SAAa7zC,KAAK,SAAUzxD,GAAK,MAA0B,UAAnBA,EAAc,YACtF,aAAgB+L,UAAY,YAAgBA,WAAau5F,WAE7Dl7G,KAAKw4G,YAAYh9F,IAAIpU,KAAM2zG,aAE/B,MAAOA,cAOX11E,gBAAgB8D,UAAUywE,eAAiB,SAAUxyG,KAAMqyG,eACvD,GAAqBE,YAAa35G,KAAKm7G,YAAY/zG,KAAMqyG,cAAuB,QAChF,IAAIE,qBAAsBr0G,cACtB,MAAOq0G,aAQft0E,gBAAgB8D,UAAU9e,iBAAmB,SAAUjjB,KAAMwwG,YACnDxwG,eAAgB9B,eAClBtF,KAAKm6G,YAAY,GAAIn5G,OAAM,6BAA+BusC,KAAKC,UAAUpmC,MAAQ,gCAAiCA,KAEtH,KACI,QAASpH,KAAK86G,aAAa1zG,MAAMwwG,YAErC,MAAOnhG,GAEH,KADA+uB,SAAQ1hC,MAAM,kBAAoBypC,KAAKC,UAAUpmC,MAAQ,eAAiBqP,GACpEA,IAQd4uB,gBAAgB8D,UAAU2vE,gCAAkC,SAAU1xG,KAAMooB,MACxExvB,KAAKy4G,cAAcj9F,IAAIpU,KAAM,SAAU/G,QAASk1B,MAAQ,MAAO,KAAK/F,KAAKqa,KAAKtsB,MAAMiS,MAAO,QAAQ3lB,OAAO0rB,WAO9G8P,gBAAgB8D,UAAU6vE,kBAAoB,SAAU5xG,KAAMonB,IAC1DxuB,KAAKy4G,cAAcj9F,IAAIpU,KAAM,SAAU/G,QAASk1B,MAAQ,MAAO/G,IAAGjR,MAAM7Z,OAAW6xB,SAKvF8P,gBAAgB8D,UAAUyvE,wBAA0B,WAChD54G,KAAKo7G,eAAiBp7G,KAAKq5G,gBAAgBrB,aAAc,kBACzDh4G,KAAKq7G,YAAcr7G,KAAKq5G,gBAAgBrB,aAAc,eACtDh4G,KAAK84G,gCAAgC94G,KAAKq5G,gBAAgBrB,aAAc,QAAS/3G,cAAcwyF,MAC/FzyF,KAAK84G,gCAAgC94G,KAAKq5G,gBAAgBrB,aAAc,cAAe/3G,cAAcilD,YACrGllD,KAAK84G,gCAAgC94G,KAAKq5G,gBAAgBrB,aAAc,QAAS/3G,cAAcyyF,MAC/F1yF,KAAK84G,gCAAgC94G,KAAKq5G,gBAAgBrB,aAAc,YAAa/3G,cAAc0yF,UACnG3yF,KAAK84G,gCAAgC94G,KAAKq5G,gBAAgBrB,aAAc,UAAW/3G,cAAcohF,QACjGrhF,KAAK84G,gCAAgC94G,KAAKq5G,gBAAgBrB,aAAc,YAAa/3G,cAAcmhF,UACnGphF,KAAK84G,gCAAgC94G,KAAKq5G,gBAAgBrB,aAAc,aAAc/3G,cAAc66B,WACpG96B,KAAK84G,gCAAgC94G,KAAKq5G,gBAAgBrB,aAAc,gBAAiB/3G,cAAcq7G,cACvGt7G,KAAK84G,gCAAgC94G,KAAKq5G,gBAAgBrB,aAAc,mBAAoB/3G,cAAcs7G,iBAC1Gv7G,KAAK84G,gCAAgC94G,KAAKq5G,gBAAgBrB,aAAc,aAAc/3G,cAAcu7G,WACpGx7G,KAAK84G,gCAAgC94G,KAAKq5G,gBAAgBrB,aAAc,gBAAiB/3G,cAAcw7G,cACvGz7G,KAAK84G,gCAAgC94G,KAAKq5G,gBAAgBrB,aAAc,SAAU/3G,cAAcsqF,OAChGvqF,KAAK84G,gCAAgC94G,KAAKq5G,gBAAgBrB,aAAc,UAAW/3G,cAAcwqF,QACjGzqF,KAAK84G,gCAAgC94G,KAAKq5G,gBAAgBrB,aAAc,QAAS/3G,cAAcmrB,MAC/FprB,KAAK84G,gCAAgC94G,KAAKq5G,gBAAgBrB,aAAc,eAAgB/3G,cAAc0qF,aACtG3qF,KAAK84G,gCAAgC94G,KAAKq5G,gBAAgBrB,aAAc,gBAAiB/3G,cAAc8qF,cACvG/qF,KAAK84G,gCAAgC94G,KAAKq5G,gBAAgBrB,aAAc,aAAc/3G,cAAcof,WACpGrf,KAAK84G,gCAAgC94G,KAAKq5G,gBAAgBrB,aAAc,aAAc/3G,cAAcmf,WACpGpf,KAAK84G,gCAAgC94G,KAAKq5G,gBAAgBrB,aAAc,YAAa/3G,cAAcirB,UAEnGlrB,KAAK84G,gCAAgC94G,KAAKq5G,gBAAgBrB,aAAc,QAAS/3G,cAAcwyF,MAC/FzyF,KAAK84G,gCAAgC94G,KAAKq5G,gBAAgBrB,aAAc,QAAS/3G,cAAcyyF,MAC/F1yF,KAAK84G,gCAAgC94G,KAAKq5G,gBAAgBrB,aAAc,YAAa/3G,cAAc0yF,UACnG3yF,KAAK84G,gCAAgC94G,KAAKq5G,gBAAgBrB,aAAc,YAAa/3G,cAAcmhF,UACnGphF,KAAKg5G,kBAAkBh5G,KAAKq5G,gBAAgBrB,aAAc,WAAY/3G,cAAcy7G,SACpF17G,KAAKg5G,kBAAkBh5G,KAAKq5G,gBAAgBrB,aAAc,SAAU/3G,cAAc07G,OAClF37G,KAAKg5G,kBAAkBh5G,KAAKq5G,gBAAgBrB,aAAc,cAAe/3G,cAAc27G,YACvF57G,KAAKg5G,kBAAkBh5G,KAAKq5G,gBAAgBrB,aAAc,SAAU/3G,cAAcqgD,OAClFtgD,KAAKg5G,kBAAkBh5G,KAAKq5G,gBAAgBrB,aAAc,WAAY/3G,cAAc47G;AACpF77G,KAAKg5G,kBAAkBh5G,KAAKq5G,gBAAgBrB,aAAc,aAAc/3G,cAAc67G,WACtF97G,KAAKg5G,kBAAkBh5G,KAAKq5G,gBAAgBrB,aAAc,YAAa/3G,cAAc87G,UACrF/7G,KAAKg5G,kBAAkBh5G,KAAKq5G,gBAAgBrB,aAAc,SAAU/3G,cAAc+7G,QAWtF32E,gBAAgB8D,UAAU3I,gBAAkB,SAAUkN,gBAAiBzoC,KAAMooC,SACzE,MAAOrtC,MAAKo+B,eAAeoC,gBAAgBkN,gBAAiBzoC,KAAMooC,UAQtEhI,gBAAgB8D,UAAUgxE,YAAc,SAAUr2G,MAAOzD,QAAS6b,MAC9D,IAAIlc,KAAKo4G,cAIL,KAAMt0G,MAHN9D,MAAKo4G,cAAct0G,MAAQzD,SAAWA,QAAQsF,UAAauW,OAYnEmpB,gBAAgB8D,UAAUgyE,YAAc,SAAU96G,QAAS2C,OACvD,GAAqBi5G,kBAAmBj8G,KAAKo4G,aAC7Cp4G,MAAKo4G,cAAgB,SAAUt0G,MAAO6lB,WACtC,IAAqBrpB,QAASN,KAAK+5G,SAAS15G,QAAS2C,MAErD,OADAhD,MAAKo4G,cAAgB6D,iBACd37G,QAQX+kC,gBAAgB8D,UAAU4wE,SAAW,SAAU15G,QAAS2C,OAWpD,QAASk5G,mBAAkB77G,QAAS2C,MAAOm5G,OAKvC,QAASC,uBAAsB94E,cAC3B,GAAqB3E,gBAAiBk0E,KAAKz0E,eAAec,cAAcoE,aACxE,OAAO3E,gBAAiBA,eAAeE,SAAW,KAQtD,QAASw9E,cAAaC,eAAgBC,eAAgBhnF,MAClD,GAAIgnF,gBAAkD,YAAhCA,eAA2B,WAAiB,CAC9D,GAAIC,QAAQjhG,IAAI+gG,gBACZ,KAAM,IAAIt7G,OAAM,0BAEpBw7G,SAAQhhG,IAAI8gG,gBAAgB,EAC5B,KACI,GAAqBG,SAAUF,eAAsB,KACrD,IAAIE,UAAqB,GAATN,OAAoC,SAAtBM,QAAQv5E,YAAwB,CAC1D,GAAqBovD,YAAaiqB,eAA2B,WACxCG,SAAWH,eAAeG,QAC/CnnF,MAAOA,KAAK5f,IAAI,SAAUuiB,KAAO,MAAOgkF,mBAAkB77G,QAAS63B,IAAKikF,MAAQ,KAC3ExmG,IAAI,SAAUuiB,KAAO,MAAO6L,cAAa7L,KAAOx0B,OAAYw0B,MAC7DwkF,UAAYA,SAASp6G,OAASizB,KAAKjzB,QACnCizB,KAAK50B,KAAK4c,MAAMgY,KAAMmnF,SAASz7G,MAAMs0B,KAAKjzB,QAAQqT,IAAI,SAAU3S,OAAS,MAAO+2G,UAAS/2G,SAG7F,KAAK,GADgB25G,eAAgBC,aAAahgD,QACxB7wD,EAAI,EAAGA,EAAIumF,WAAWhwF,OAAQyJ,IACpD4wG,cAAch9G,OAAO2yF,WAAWvmF,GAAIwpB,KAAKxpB,GAE7C,IACqB8wG,UADAC,SAAWC,KAEhC,KACIA,MAAQJ,cAAcK,OACtBH,SAAWX,kBAAkBI,eAAgBG,QAASN,MAAQ,GAElE,QACIY,MAAQD,SAEZ,MAAOD,WAGf,QACIL,QAAQz/E,OAAOu/E,iBAGvB,MAAc,KAAVH,MAIOlE,OAEJ8B,UAAW72E,WAAY,QAAS51B,QAAS,8BAA+BjN,QAASi8G,iBAM5F,QAASvC,UAASz8F,YACd,GAAIgnB,YAAYhnB,YACZ,MAAOA,WAEX,IAAIA,qBAAsBra,OAAO,CAE7B,IAAK,GADgBg6G,aACZ76G,GAAK,EAAG4S,GAAK,WAAgB5S,GAAK4S,GAAG1S,OAAQF,KAAM,CACxD,GAAIuH,MAAOqL,GAAG5S,GAEd,IAAIuH,MAA4B,WAApBA,KAAKu5B,WAAyB,CACtC,GAAqBg6E,aAAcnD,SAASpwG,KAAK2T,WACjD,IAAIra,MAAMC,QAAQg6G,aAAc,CAC5B,IAAK,GAAIhoG,IAAK,EAAGioG,cAAgBD,YAAahoG,GAAKioG,cAAc76G,OAAQ4S,KAAM,CAC3E,GAAIkoG,YAAaD,cAAcjoG,GAC/B+nG,UAASt8G,KAAKy8G,YAElB,UAGR,GAAqBC,SAAUtD,SAASpwG,KACpCo6B,cAAas5E,UAGjBJ,SAASt8G,KAAK08G,SAElB,MAAOJ,UAEX,GAAI3/F,qBAAsBhY,cAAc,CAEpC,GAAIgY,aAAeu1F,KAAKuI,gBAAkB99F,aAAeu1F,KAAKwI,aAC1DxI,KAAK4F,cAAcp2F,IAAI/E,YACvB,MAAOA,WAGP,IAAqBgmB,cAAehmB,WACfggG,iBAAmBlB,sBAAsB94E,aAC9D,OAAIg6E,kBACOpB,kBAAkB54E,aAAcg6E,iBAAkBnB,MAAQ,GAG1D74E,aAInB,GAAIhmB,WAAY,CACZ,GAAIA,WAAuB,WAAG,CAC1B,GAAqBgmB,cAAe,MACpC,QAAQhmB,WAAuB,YAC3B,IAAK,QACD,GAAqBysC,MAAOgwD,SAASz8F,WAAiB,KACtD,IAAIymB,aAAagmB,MACb,MAAOA,KACX,IAAqBC,OAAQ+vD,SAASz8F,WAAkB,MACxD,IAAIymB,aAAaimB,OACb,MAAOA,MACX,QAAQ1sC,WAAqB,UACzB,IAAK,KACD,MAAOysC,OAAQC,KACnB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,MACD,MAAOD,QAASC,KACpB,KAAK,MACD,MAAOD,QAASC,KACpB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,MAEtB,MAAO,KACX,KAAK,KACD,GAAqBhhC,WAAY+wF,SAASz8F,WAAsB,UAChE,OAAmBy8F,UAAZ/wF,UAAqB1L,WAA2B,eAC1CA,WAA2B,eAC5C,KAAK,MACD,GAAqBigG,SAAUxD,SAASz8F,WAAoB,QAC5D,IAAIymB,aAAaw5E,SACb,MAAOA,QACX,QAAQjgG,WAAqB,UACzB,IAAK,IACD,MAAOigG,QACX,KAAK,IACD,OAAQA,OACZ,KAAK,IACD,OAAQA,OACZ,KAAK,IACD,OAAQA,QAEhB,MAAO,KACX,KAAK,QACD,GAAqBC,aAAczD,SAASz8F,WAAuB,YAC9C5Y,MAAQq1G,SAASz8F,WAAkB,MACxD,OAAIkgG,cAAel5E,YAAY5/B,OACpB84G,YAAY94G,OAChB,IACX,KAAK,SACD,GAAqB+4G,QAASngG,WAAmB,OAC5BogG,cAAgBr9G,QAChBs9G,aAAe5D,SAASz8F,WAAuB,WACpE,IAAIqgG,uBAAwBr4G,cAAc,CACtC,GAAqB+nC,SAAUswE,aAAatwE,QAAQxjC,OAAO4zG,OAC3DC,eACI7K,KAAKryE,gBAAgBm9E,aAAah4G,SAAUg4G,aAAa14G,KAAMooC,QACnE,IAAqBiwE,kBAAmBlB,sBAAsBsB,cAC9D,OAAIJ,kBACOpB,kBAAkBwB,cAAeJ,iBAAkBnB,MAAQ,GAG3DuB,cAGf,MAAIC,eAAgBr5E,YAAYm5E,QACrBvB,kBAAkBwB,cAAeC,aAAaF,QAAStB,MAAQ,GACnE,IACX,KAAK,YAID,GAAqBl3G,MAAOqY,WAAiB,KACxBsgG,WAAab,MAAMz7F,QAAQrc,KAChD,IAAI24G,YAAchB,aAAaiB,QAC3B,MAAOD,WAEX,MACJ,KAAK,QACD,MAAOv9G,QACX,KAAK,WACD,MAAOA,QACX,KAAK,MACL,IAAK,OAGD,GADAijC,aAAe44E,kBAAkB77G,QAASid,WAAuB,WAAG6+F,MAAQ,GACxE74E,uBAAwBh+B,cAAc,CACtC,GAAIg+B,eAAiBuvE,KAAKuI,gBAAkB93E,eAAiBuvE,KAAKwI,YAG9D,MAAOh7G,QAEX,IAAqBy9G,gBAAiBxgG,WAAsB,cACvCiU,UAAYshF,KAAK4F,cAAcl9F,IAAI+nB,aACxD,IAAI/R,UAAW,CACX,GAAqBgE,MAAOuoF,eAAenoG,IAAI,SAAUuiB,KAAO,MAAOgkF,mBAAkB77G,QAAS63B,IAAKikF,MAAQ,KAC1GxmG,IAAI,SAAUuiB,KAAO,MAAO6L,cAAa7L,KAAOx0B,OAAYw0B,KACjE,OAAO3G,WAAUlxB,QAASk1B,MAI1B,GAAqBgnF,gBAAiBH,sBAAsB94E,aAC5D,OAAO+4E,cAAa/4E,aAAci5E,eAAgBuB,gBAG1D,MAAO7F,OACX,KAAK,QACD,GAAqB3qG,SAAU42B,oBAAoB5mB,WASnD,OARIA,YAAiB,MACjBhQ,QACIA,QAAU,eAAiBgQ,WAAiB,KAAI,GAAK,KAAOA,WAAsB,UAAI,GAAK,6BAC/Fu1F,KAAKsH,YAAY31E,gBAAgBl3B,QAASjN,QAAQsF,SAAU2X,WAAiB,KAAGA,WAAsB,WAAIjd,UAG1GwyG,KAAKsH,YAAY,GAAIn5G,OAAMsM,SAAUjN,SAElC43G,MACX,KAAK,SACD,MAAO36F,YAEf,MAAO,MAEX,MAAO6mB,cAAa7mB,WAAY,SAAUta,MAAOiC,MAAQ,MAAO80G,UAAS/2G,SAE7E,MAAOi1G,QAEX,IACI,MAAO8B,UAAS/2G,OAEpB,MAAOyT,GACH,GAAqB42B,SAAUhtC,QAAQgtC,QAAQ/qC,OAAS,IAAMjC,QAAQgtC,QAAQ73B,KAAK,KAAO,GACrElI,QAAUmJ,EAAEnJ,QAAU,sBAAwBjN,QAAQ4E,KAAOooC,QAAU,OAAShtC,QAAQsF,QAC7G,IAAI8Q,EAAEkT,SACF,KAAM6a,iBAAgBl3B,QAASmJ,EAAEkT,SAAUlT,EAAEguB,KAAMhuB,EAAEiuB,OAEzD,MAAM9gC,aAAY0J,UA1R1B,GAAI07B,OAAQhpC,KACS6yG,KAAO7yG,KACP+8G,MAAQH,aAAalrE,MACrB8qE,QAAU,GAAIz9F,KA0Rdg/F,0BAA4B,SAAU19G,QAAS2C,MAAOm5G,OACvE,IACI,MAAOD,mBAAkB77G,QAAS2C,MAAOm5G,OAE7C,MAAO1lG,GACHuyB,MAAMmxE,YAAY1jG,EAAGpW,WAGRC,OAASN,KAAKo4G,cAAgB2F,0BAA0B19G,QAAS2C,MAAO,GACzFk5G,kBAAkB77G,QAAS2C,MAAO,EACtC,KAAI+gC,aAAazjC,QAGjB,MAAOA,SAMX+kC,gBAAgB8D,UAAUuwE,gBAAkB,SAAUtyG,MAClD,GAAqBu3B,gBAAiB3+B,KAAKo+B,eAAec,cAAc93B,KACxE,OAAOu3B,iBAAkBA,eAAeE,SAAWF,eAAeE,UAC5DqE,WAAY,UAEfmC,mBAyEPu3E,aAAgB,WAChB,QAASA,iBAuBT,MAhBAA,cAAazzE,UAAU7nB,QAAU,SAAUrc,QAI3C23G,aAAahgD,MAAQ,WACjB,GAAqB7b,SAAU,GAAIhiC,IACnC,QACIpf,OAAQ,SAAUsF,KAAMjC,OAEpB,MADA+9C,SAAQvlC,IAAIvW,KAAMjC,OACXhD,MAEXg9G,KAAM,WACF,MAAOj8D,SAAQokC,KAAO,EAAI,GAAI64B,gBAAej9D,SAAW67D,aAAalrE,SAI1EkrE,eAEXA,cAAaiB,WACbjB,aAAalrE,OAAUpwB,QAAS,SAAUrc,MAAQ,MAAO23G,cAAaiB,SACtE,IAAIG,gBAAkB,SAAU55D,QAK5B,QAAS45D,gBAAevqD,UACpB,GAAIzqB,OAAQob,OAAOE,KAAKtkD,OAASA,IAEjC,OADAgpC,OAAMyqB,SAAWA,SACVzqB,MASX,MAhBA+B,WAAUizE,eAAgB55D,QAa1B45D,eAAe70E,UAAU7nB,QAAU,SAAUrc,MACzC,MAAOjF,MAAKyzD,SAASpxC,IAAIpd,MAAQjF,KAAKyzD,SAASl4C,IAAItW,MAAQ23G,aAAaiB,SAErEG,gBACTpB,cAsBEqB,qBAAwB,WAKxB,QAASA,sBAAqBpsF,OAAQgN,UAClC7+B,KAAK6xB,OAASA,OACd7xB,KAAK6+B,SAAWA,SAEpB,MAAOo/E,yBAEPC,yBAA2B,EAS3B/4E,qBAAwB,WAOxB,QAASA,sBAAqB18B,KAAM01G,kBAAmBhgF,gBAAiBi6E,eACpEp4G,KAAKyI,KAAOA,KACZzI,KAAKm+G,kBAAoBA,kBACzBn+G,KAAKm+B,gBAAkBA,gBACvBn+B,KAAKo4G,cAAgBA,cACrBp4G,KAAKo+G,cAAgB,GAAIr/F,KACzB/e,KAAKq+G,gBAAkB,GAAIt/F,KAC3B/e,KAAKs+G,kBAAoB,GAAIr8F,KAC7BjiB,KAAK+zG,SAAW,GAAIh1F,KACpB/e,KAAKu+G,oBAAsB,GAAIx/F,KAC/B/e,KAAKw+G,eAAiB,GAAIz/F,KAC1B/e,KAAKy+G,2BAA6B,GAAI1/F,KAsc1C,MAhcAomB,sBAAqBgE,UAAUjK,cAAgB,SAAUoE,cACrD,GAAIA,aAAa+J,QAAQ/qC,OAAS,EAC9B,MAAStC,MAAK0+G,sBAAsBp7E,aAExC,IAAqBhjC,QAASN,KAAKq+G,gBAAgB9iG,IAAI+nB,aACvD,OAAIhjC,QACOA,QAEXA,OAAWN,KAAK2+G,0BAA0Br7E,eAE/BhjC,QAKXN,KAAK4+G,iBAAiBt7E,aAAa39B,UACnCrF,OAAWN,KAAKq+G,gBAAgB9iG,IAAI+nB,gBAaxC6B,qBAAqBgE,UAAUvX,YAAc,SAAU0R,cACnD,GAAIA,aAAa+J,QAAQ/qC,OAAQ,CAC7B,GAAqB2xG,YAAaj0G,KAAKwgC,gBAAgB8C,aAAa39B,SAAU29B,aAAar+B,MACtE45G,aAAe7+G,KAAK4xB,YAAYqiF,WACrD,OAAO4K,cACH7+G,KAAKwgC,gBAAgBq+E,aAAal5G,SAAUk5G,aAAa55G,KAAMq+B,aAAa+J,SAC5E,KAER,GAAqByxE,oBAAqB/0F,6BAA6BuZ,aAAa39B,SACpF,IAAIm5G,qBAAuBx7E,aAAa39B,SAAU,CAC9C,GAAqBo5G,gBAAiB50F,6BAA6BmZ,aAAar+B,MAC3DgvG,WAAaj0G,KAAKwgC,gBAAgBs+E,mBAAoBC,eAAgBz7E,aAAa+J,SACnFwxE,aAAe7+G,KAAK4xB,YAAYqiF,WACrD,OAAO4K,cACH7+G,KAAKwgC,gBAAgB1W,sBAAsB+0F,aAAal5G,UAAWskB,kBAAkB40F,aAAa55G,MAAOgvG,WAAW5mE,SACpH,KAER,GAAqB/sC,QAASN,KAAKm+B,gBAAgBvM,YAAY0R,aAI/D,OAHKhjC,UACDA,OAAWN,KAAK+zG,SAASx4F,IAAI+nB,eAE1BhjC,QASX6kC,qBAAqBgE,UAAU+vE,gBAAkB,SAAU51E,cACvD,MAAOtjC,MAAKu+G,oBAAoBhjG,IAAI+nB,eAAiBA,aAAa39B,UAQtEw/B,qBAAqBgE,UAAUrX,aAAe,SAAUwR,cAKpD,GAAI/Z,gBAAgB+Z,aAAa39B,UAC7B,MAAO,KAGX,KADA,GAAqBg5B,gBAAiB3+B,KAAKk/B,cAAcoE,cAClD3E,gBAAkBA,eAAeE,mBAAoBv5B,eACxDq5B,eAAiB3+B,KAAKk/B,cAAcP,eAAeE,SAEvD,OAAQF,iBAAkBA,eAAeE,UAAYF,eAAeE,SAASolE,OAAU,MAQ3F9+D,qBAAqBgE,UAAUzX,qBAAuB,SAAUyxE,iBAAkBxxE,oBAC9E,MAAIwxE,oBAAqBxxE,mBACd,KAEJ3xB,KAAKy+G,2BAA2BljG,IAAI4nF,mBACvCnjG,KAAKyI,KAAKipB,qBAAqByxE,iBAAkBxxE,qBAOzDwT,qBAAqBgE,UAAUmwE,eAAiB,SAAU0F,aAAcC,cACpED,aAAa1xE,kBACb2xE,aAAa3xE,kBACbttC,KAAK+zG,SAASv4F,IAAIwjG,aAAcC,eAQpC95E,qBAAqBgE,UAAU+1E,eAAiB,SAAUv1F,UACtD3pB,KAAKo+G,cAAcrhF,OAAOpT,UAC1B3pB,KAAKs+G,kBAAkBvhF,OAAOpT,SAC9B,IAAqB0U,SAAUr+B,KAAKw+G,eAAejjG,IAAIoO,SACvD,IAAI0U,QAAS,CACTr+B,KAAKw+G,eAAezhF,OAAOpT,SAC3B,KAAK,GAAIvnB,IAAK,EAAG+8G,UAAY9gF,QAASj8B,GAAK+8G,UAAU78G,OAAQF,KAAM,CAC/D,GAAIyvB,QAASstF,UAAU/8G,GACvBpC,MAAKq+G,gBAAgBthF,OAAOlL,QAC5B7xB,KAAK+zG,SAASh3E,OAAOlL,QACrB7xB,KAAKu+G,oBAAoBxhF,OAAOlL,WAQ5CsT,qBAAqBgE,UAAUu1E,sBAAwB,SAAUp7E,cAC7D,GAAqB+J,SAAU/J,aAAa+J,QACvB+xE,mBAAqBp/G,KAAKk/B,cAAcl/B,KAAKwgC,gBAAgB8C,aAAa39B,SAAU29B,aAAar+B,MACtH,KAAKm6G,mBACD,MAAO,KAEX,IAAqBC,cAAeD,mBAAmBvgF,QACvD,IAAIwgF,uBAAwB/5G,cACxB,MAAO,IAAI24G,sBAAqB36E,aAActjC,KAAKwgC,gBAAgB6+E,aAAa15G,SAAU05G,aAAap6G,KAAMooC,SAE5G,KAAIgyE,cAA4C,UAA5BA,aAAan8E,WAKjC,CAED,IAAK,GADgBlgC,OAAQq8G,aACHtzG,EAAI,EAAGA,EAAIshC,QAAQ/qC,QAAUU,MAAO+I,IAC1D/I,MAAQA,MAAMqqC,QAAQthC,GAE1B,OAAO,IAAIkyG,sBAAqB36E,aAActgC,OAT9C,MAAIq8G,cAAaC,SAA8B,IAAnBjyE,QAAQ/qC,OACzB,GAAI27G,sBAAqB36E,aAAc+7E,aAAaC,QAAQjyE,QAAQ,KAU5E,MAMXlI,qBAAqBgE,UAAUw1E,0BAA4B,SAAUr7E,cACjE,GAAqBtE,SAAUh/B,KAAKm+B,gBAAgBc,eAAeqE,aACnE,OAAOtE,SAAU,GAAIi/E,sBAAqB36E,aAActE,QAAQH,UAAY,MAWhFsG,qBAAqBgE,UAAU3I,gBAAkB,SAAUkN,gBAAiBzoC,KAAMooC,SAC9E,MAAOrtC,MAAKm+G,kBAAkB5iG,IAAImyB,gBAAiBzoC,KAAMooC,UAM7DlI,qBAAqBgE,UAAUnG,aAAe,SAAUr9B,UAIpD,GAAqB04B,SAAU,GAAIpc,KAAIjiB,KAAKm+B,gBAAgB6E,aAAar9B,UAOzE,OANA3F,MAAK4+G,iBAAiBj5G,UACtB3F,KAAKq+G,gBAAgB59G,QAAQ,SAAUk+B,gBAC/BA,eAAe9M,OAAOlsB,WAAaA,UACnC04B,QAAQvB,IAAI6B,eAAe9M,UAG5B5uB,MAAMwf,KAAK4b,UAMtB8G,qBAAqBgE,UAAUy1E,iBAAmB,SAAUj5G,UACxD,GAAIqjC,OAAQhpC,IACZ,KAAIA,KAAKs+G,kBAAkBj8F,IAAI1c,UAA/B,CAGA3F,KAAKs+G,kBAAkBxhF,IAAIn3B,SAC3B,IAAqB04G,oBACAx/E,SAAW7+B,KAAKu/G,kBAAkB55G,SAMvD,IALIk5B,SAAmB,UAGnB7+B,KAAKy+G,2BAA2BjjG,IAAI7V,SAAUk5B,SAAmB,UAEjEA,SAAmB,SAAG,CAEtB,GAAqB2gF,uBAAwB,GAAIv9F,KAAI7d,OAAOqxB,KAAKoJ,SAAmB,UAAGlpB,IAAIgvB,qBACtE86E,UAAY5gF,SAAkB,WACnDz6B,QAAOqxB,KAAKoJ,SAAmB,UAAGp+B,QAAQ,SAAUi/G,aAChD,GAAqBz8E,YAAapE,SAAmB,SAAE6gF,aAClCz6G,KAAO0/B,mBAAmB+6E,aAC1B7tF,OAASmX,MAAMxI,gBAAgB76B,SAAUV,MACzC06G,OAASF,UAAUv0E,eAAew0E,cAAgBD,UAAUC,YACjF,IAAIC,OAAQ,CAIR,GAAqBC,gBAAiB52E,MAAM62E,cAAcF,OAAQh6G,SAC7Di6G,gBAID52E,MAAMu1E,oBAAoB/iG,IAAIqW,OAAQ+tF,gBAHtC52E,MAAMmxE,YAAY,GAAIn5G,OAAM,wCAA0C2+G,OAAS,SAAWh6G,WAMlG04G,gBAAgB19G,KAAKqoC,MAAM82E,qBAAqBjuF,OAAQlsB,SAAU65G,sBAAuBv8E,eAIjG,GAAIpE,SAAkB,QAsClB,IAAK,GArCDkhF,SAAU,SAAUC,cAEpB,GAAIA,aAAaC,OACbD,aAAaC,OAAOx/G,QAAQ,SAAUy/G,cAClC,GAAqBh2F,WAEjBA,YADwB,gBAAjBg2F,cACMA,aAGAA,aAAajd,GAE9B/4E,WAAaya,mBAAmBza,WAChC,IAAqBi2F,SAAUj2F,UACH,iBAAjBg2F,gBACPC,QAAUx7E,mBAAmBu7E,aAAaj7G,MAE9C,IAAqBm7G,gBAAiBp3E,MAAM62E,cAAcG,aAAav9F,KAAM9c,SAC7E,IAAIy6G,eAAgB,CAChB,GAAqBnB,cAAej2E,MAAMxI,gBAAgB4/E,eAAgBD,SACrDnB,aAAeh2E,MAAMxI,gBAAgB76B,SAAUukB,WACpEm0F,iBAAgB19G,KAAKqoC,MAAMq3E,aAAarB,aAAcC,sBAI7D,CAED,GAAqBmB,gBAAiBE,OAAOT,cAAcG,aAAav9F,KAAM9c,SAC9E,IAAIy6G,eAAgB,CAChB,GAAqBG,eAAgBD,OAAOt9E,aAAao9E,eACzDG,eAAc9/G,QAAQ,SAAUw+G,cAC5B,GAAqBD,cAAeh2E,MAAMxI,gBAAgB76B,SAAUs5G,aAAah6G,KACjFo5G,iBAAgB19G,KAAKqoC,MAAMq3E,aAAarB,aAAcC,oBAKlEqB,OAAStgH,KACJoC,GAAK,EAAG4S,GAAK6pB,SAAkB,QAAGz8B,GAAK4S,GAAG1S,OAAQF,KAAM,CAC7D,GAAI49G,cAAehrG,GAAG5S,GACtB29G,SAAyBC,cAGjC3B,gBAAgB59G,QAAQ,SAAUk+B,gBAAkB,MAAOqK,OAAMq1E,gBAAgB7iG,IAAImjB,eAAe9M,OAAQ8M,kBAC5G3+B,KAAKw+G,eAAehjG,IAAI7V,SAAU04G,gBAAgB1oG,IAAI,SAAUgpB,gBAAkB,MAAOA,gBAAe9M,YAS5GsT,qBAAqBgE,UAAU22E,qBAAuB,SAAUd,aAAcwB,aAAcC,oBAAqB5hF,UAM7G,GAAI7+B,KAAKm+B,gBAAgBY,cAAcigF,aAAar5G,WAAak5B,UAClC,UAA3BA,SAAqB,WAAe,CACpC,GAAqB6hF,oBAAsBx9E,WAAY,QAAS+gE,MAAOplE,SAASolE,MAChF,OAAO,IAAIga,sBAAqBe,aAAc0B,mBAElD,GAAqB7N,MAAO7yG,KACxB2gH,qBAAwB,SAAUv8D,QAElC,QAASu8D,wBACL,MAAkB,QAAXv8D,QAAmBA,OAAO7mC,MAAMvd,KAAMqC,YAAcrC,KAiD/D,MAnDA+qC,WAAU41E,qBAAsBv8D,QAShCu8D,qBAAqBx3E,UAAU9lC,eAAiB,SAAUsS,IAAKirG,gBAC3D,GAAqBC,UAAWlrG,IAAgB,UAChD,IAAiB,aAAbkrG,SAAyB,CACzB,GAAqBC,QAASF,eAAet+G,MAC7Cs+G,gBAAejgH,KAAK4c,MAAMqjG,eAAiBjrG,IAAgB,eAC3D,IAAqBrV,QAAS8jD,OAAOjb,UAAU9lC,eAAeihD,KAAKtkD,KAAM2V,IAAKirG,eAE9E,OADAA,gBAAet+G,OAASw+G,OACjBxgH,OAEN,GAAiB,cAAbugH,SA8BL,MAAOz8D,QAAOjb,UAAU9lC,eAAeihD,KAAKtkD,KAAM2V,IAAKirG,eA7BvD,IAAqBG,UAAWprG,IAAY,OACvB1Q,KAAO0Q,IAAU,KAAIgvB,mBAAmBhvB,IAAU,MAAKA,IAAU,IACtF,KAAK1Q,KACD,MAAO,KAEX,IAAqBU,UAAW,MAChC,OAAIo7G,WACAp7G,SAAaktG,KAAKgN,cAAckB,SAAU/B,aAAar5G,UAClDA,SAMEktG,KAAKryE,gBAAgB76B,SAAUV,OAJ9Bi+B,WAAY,QACZ51B,QAAS,qBAAuByzG,SAAW,gBAAkB/B,aAAar5G,SAAW,MAKxFi7G,eAAe7/G,QAAQkE,OAAS,GAE5Bi+B,WAAY,YAAaj+B,KAAMA,MAGpCw7G,oBAAoBp+F,IAAIpd,MACjB4tG,KAAKryE,gBAAgBggF,aAAcv7G,MAD9C,QAWL07G,sBACTj9D,kBACmBs9D,gBAAkBj+G,WAAW87B,SAAU,GAAI8hF,yBAChE,OAAIK,2BAA2B17G,cACpBtF,KAAKqgH,aAAarB,aAAcgC,iBAEpC,GAAI/C,sBAAqBe,aAAcgC,kBAOlD77E,qBAAqBgE,UAAUk3E,aAAe,SAAUrB,aAAcC,cAUlE,MATAD,cAAa1xE,kBACb2xE,aAAa3xE,kBACTttC,KAAKm+B,gBAAgBY,cAAcigF,aAAar5G,WAKhD3F,KAAK+zG,SAASv4F,IAAIyjG,aAAcj/G,KAAK4xB,YAAYotF,eAAiBA,cAE/D,GAAIf,sBAAqBe,aAAcC,eAQlD95E,qBAAqBgE,UAAUgxE,YAAc,SAAUr2G,MAAOzD,QAAS6b,MACnE,IAAIlc,KAAKo4G,cAIL,KAAMt0G,MAHN9D,MAAKo4G,cAAct0G,MAAQzD,SAAWA,QAAQsF,UAAauW,OAUnEipB,qBAAqBgE,UAAUo2E,kBAAoB,SAAU9/G,QACzD,GAAqBwhH,gBAAiBjhH,KAAKo+G,cAAc7iG,IAAI9b,OAC7D,KAAKwhH,eAAgB,CACjB,GAAqBC,iBAAkBlhH,KAAKyI,KAAK04G,eAAe1hH,OAChE,IAAIyhH,gBAAiB,CACjB,GAAqBE,eAAe,CACpCF,iBAAgBzgH,QAAQ,SAAU4gH,IAC1BA,GAAY,QAAID,eAChBA,aAAeC,GAAY,QAC3BJ,eAAiBI,MAQ7B,GAJKJ,iBACDA,gBACM/9E,WAAY,SAAU8oC,QAASkyC,yBAA0Bz+G,OAAQA,OAAQo/B,cAE/EoiF,eAAwB,SAAK/C,yBAA0B,CACvD,GAAqBoD,cAA4C,GAA7BL,eAAwB,QACxD,gCAAkCA,eAAwB,QAAI,eAAiBxhH,OAAS,+DACxF,wCAA0CA,OAAS,mBAAqBwhH,eAAwB,QAAI,cAAgB/C,wBACxHl+G,MAAKm6G,YAAY,GAAIn5G,OAAMsgH,eAE/BthH,KAAKo+G,cAAc5iG,IAAI/b,OAAQwhH,gBAEnC,MAAOA,iBAQX97E,qBAAqBgE,UAAUqwE,kBAAoB,SAAU/5G,OAAQyqB,WAAYqvF,gBAC7E,GAAqB5zG,UAAW3F,KAAK6/G,cAAcpgH,OAAQ85G,eAC3D,OAAK5zG,UAIE3F,KAAKwgC,gBAAgB76B,SAAUukB,aAHlClqB,KAAKm6G,YAAY,GAAIn5G,OAAM,4BAA8BvB,QAAU85G,eAAiB,6DAA+D,MAC5Iv5G,KAAKwgC,gBAAgB,SAAW/gC,OAAQyqB,cASvDib,qBAAqBgE,UAAU02E,cAAgB,SAAUpgH,OAAQ85G,gBAC7D,IACI,MAAOv5G,MAAKyI,KAAK84G,qBAAqB9hH,OAAQ85G,gBAElD,MAAO9iG,GACH+uB,QAAQ1hC,MAAM,6BAA+BrE,OAAS,sBAAwB85G,gBAC9Ev5G,KAAKm6G,YAAY1jG,EAAG/S,OAAW61G,gBAEnC,MAAO,OAEJp0E,wBAgBPD,mBAAsB,WAKtB,QAASA,oBAAmBz8B,KAAM01G,mBAC9Bn+G,KAAKyI,KAAOA,KACZzI,KAAKm+G,kBAAoBA,kBACzBn+G,KAAKwhH,aAAe,GAAIziG,KACxB/e,KAAKyhH,gBAAkB,GAAIx/F,KAC3BjiB,KAAK+zG,SAAW,GAAIh1F,KAgFxB,MA1EAmmB,oBAAmBiE,UAAUpK,cAAgB,SAAUp5B,UAInD,OAAQ3F,KAAKyI,KAAKs6B,aAAa1Z,yBAAyB1jB,YAM5Du/B,mBAAmBiE,UAAU8iD,mBAAqB,SAAUtmF,UAAY,MAAO3F,MAAKyI,KAAKi5G,kBAAkB/7G,WAK3Gu/B,mBAAmBiE,UAAUlK,eAAiB,SAAUqE,cACpDA,aAAagK,iBACb,IAAqBtO,SAAUh/B,KAAKwhH,aAAajmG,IAAI+nB,aAKrD,OAJKtE,WACDh/B,KAAK2hH,iBAAiBr+E,aAAa39B,UACnCq5B,QAAYh/B,KAAKwhH,aAAajmG,IAAI+nB,eAE/BtE,SAMXkG,mBAAmBiE,UAAUnG,aAAe,SAAUr9B,UAElD,MADA3F,MAAK2hH,iBAAiBh8G,UACf1C,MAAMwf,KAAKziB,KAAKwhH,aAAa/rF,QAAQlW,OAAO,SAAUsS,QAAU,MAAOA,QAAOlsB,WAAaA,YAMtGu/B,mBAAmBiE,UAAUvX,YAAc,SAAU0R,cAEjD,MADAA,cAAagK,kBACJttC,KAAK+zG,SAASx4F,IAAI+nB,eAM/B4B,mBAAmBiE,UAAU+iD,WAAa,SAAUltD,SAAWh/B,KAAKwhH,aAAahmG,IAAIwjB,QAAQnN,OAAQmN,UAKrGkG,mBAAmBiE,UAAUw4E,iBAAmB,SAAUh8G,UACtD,GAAIqjC,OAAQhpC,IACZ,KAAIA,KAAKyhH,gBAAgBp/F,IAAI1c,YAG7B3F,KAAKyhH,gBAAgB3kF,IAAIn3B,UACrB3F,KAAK++B,cAAcp5B,WAAW,CAC9B,GAAqBi8G,iBAAkBl4F,gBAAgB/jB,UAClCg6B,KAAO,MAC5B,KACIA,KAAO3/B,KAAKyI,KAAKo5G,YAAYD,iBAEjC,MAAOnrG,GAEH,KADA+uB,SAAQ1hC,MAAM,8BAAgC89G,iBACxCnrG,EAEV,GAAIkpB,KAAM,CACN,GAAI3qB,IAAK8qB,qBAAqB9/B,KAAKm+G,kBAAmBx+E,MAAOm0E,UAAY9+F,GAAG8+F,UAAWC,SAAW/+F,GAAG++F,QACrGD,WAAUrzG,QAAQ,SAAUu+B,SAAW,MAAOgK,OAAMw4E,aAAahmG,IAAIwjB,QAAQnN,OAAQmN,WACrF+0E,SAAStzG,QAAQ,SAAUszG,UACvB/qE,MAAM+qE,SAASv4F,IAAIu4F,SAASliF,OAAQmX,MAAMm1E,kBAAkB5iG,IAAI0N,kBAAkBtjB,UAAWouG,SAASA,gBAK/G7uE,sBA4EP2C,kBAAqB,WAOrB,QAASA,mBAAkB5Y,OAAQ0uE,SAAUv4E,UAAW+iB,MACpDnoC,KAAKivB,OAASA,OACdjvB,KAAK29F,SAAWA,SAChB39F,KAAKolB,UAAYA,UACjBplB,KAAKmoC,KAAOA,KAQhB,MAHAN,mBAAkBsB,UAAUjB,yBAA2B,WACnD,MAAO,IAAIL,mBAAkB7nC,KAAMA,KAAK29F,SAAU39F,KAAKolB,UAAW,GAAIrG,OAEnE8oB,qBAEPi6E,YAAe,WAIf,QAASA,aAAY9+G,OACjBhD,KAAKgD,MAAQA,MAEjB,MAAO8+G,gBAoDPh6E,qBAAwB,WACxB,QAASA,yBA2YT,MArYAA,sBAAqBqB,UAAU44E,SAAW,SAAUvhH,KAAO,MAAO8wB,4BAA2B9wB,MAM7FsnC,qBAAqBqB,UAAUwxD,oBAAsB,SAAU3tE,KAAM+E,KAEjE,MADAA,KAAIoW,KAAK3sB,IAAIwR,KAAK/nB,KAAM+nB,KAAKhqB,MAAMsqB,gBAAgBttB,KAAM+xB,MAClD,MAOX+V,qBAAqBqB,UAAUyvD,kBAAoB,SAAUvrE,KAAM0E,KAG/D,IAFA,GAAqB/uB,OAAQqqB,KAAKrqB,MAAMsqB,gBAAgBttB,KAAM+xB,KACzCiwF,QAAUjwF,IACb,MAAXiwF,SAAiB,CACpB,GAAIA,QAAQ75E,KAAK9lB,IAAIgL,KAAKpoB,MAEtB,MADA+8G,SAAQ75E,KAAK3sB,IAAI6R,KAAKpoB,KAAMjC,OACrBA,KAEXg/G,SAAYA,QAAe,OAE/B,KAAM,IAAIhhH,OAAM,yBAA2BqsB,KAAKpoB,OAOpD6iC,qBAAqBqB,UAAUuvD,iBAAmB,SAAUl4F,IAAKuxB,KAC7D,GAAqBsiE,SAAY7zF,IAAS,IAC1C,IAAmB,MAAfA,IAAIi4F,QACJ,OAAQj4F,IAAIi4F,SACR,IAAKL,YAAWE,MACZ,MAAOvmE,KAAI4rE,SAASskB,SACxB,KAAK7pB,YAAWC,KACZ,MAAOtmE,KAAI4rE,QACf,KAAKvF,YAAWG,WACZlE,QAAU6tB,iBACV,MACJ,KAAK9pB,YAAWI,WACZnE,QAAU8tB,iBACV,MACJ,SACI,KAAM,IAAInhH,OAAM,4BAA8BR,IAAIi4F,SAI9D,IADA,GAAqBupB,SAAUjwF,IACb,MAAXiwF,SAAiB,CACpB,GAAIA,QAAQ75E,KAAK9lB,IAAIgyE,SACjB,MAAO2tB,SAAQ75E,KAAK5sB,IAAI84E,QAE5B2tB,SAAYA,QAAe,OAE/B,KAAM,IAAIhhH,OAAM,yBAA2BqzF,UAO/CvsD,qBAAqBqB,UAAU2vD,kBAAoB,SAAUzrE,KAAM0E,KAC/D,GAAqBw2B,UAAWl7B,KAAKk7B,SAASj7B,gBAAgBttB,KAAM+xB,KAC/CrtB,MAAQ2oB,KAAK3oB,MAAM4oB,gBAAgBttB,KAAM+xB,KACzC/uB,MAAQqqB,KAAKrqB,MAAMsqB,gBAAgBttB,KAAM+xB,IAE9D,OADAw2B,UAAS7jD,OAAS1B,MACXA,OAOX8kC,qBAAqBqB,UAAU6vD,mBAAqB,SAAU3rE,KAAM0E,KAChE,GAAqBw2B,UAAWl7B,KAAKk7B,SAASj7B,gBAAgBttB,KAAM+xB,KAC/C/uB,MAAQqqB,KAAKrqB,MAAMsqB,gBAAgBttB,KAAM+xB,IAE9D,OADAw2B,UAASl7B,KAAKpoB,MAAQjC,MACfA,OAOX8kC,qBAAqBqB,UAAUkwD,sBAAwB,SAAUhsE,KAAM0E,KACnE,GAEqBzxB,QAFAioD,SAAWl7B,KAAKk7B,SAASj7B,gBAAgBttB,KAAM+xB,KAC/CwD,KAAOv1B,KAAK87F,oBAAoBzuE,KAAKkI,KAAMxD,IAEhE,IAAoB,MAAhB1E,KAAKorE,QACL,OAAQprE,KAAKorE,SACT,IAAKQ,eAAcC,YACf54F,OAASioD,SAAS1+C,OAAO0T,MAAMgrC,SAAUhzB,KACzC,MACJ,KAAK0jE,eAAcE,oBACf74F,OAASioD,SAAS65D,WAAYhxD,KAAM77B,KAAK,IACzC,MACJ,KAAK0jE,eAAcG,KACf94F,OAASioD,SAAS1e,KAAKtsB,MAAMgrC,SAAUhzB,KACvC,MACJ,SACI,KAAM,IAAIv0B,OAAM,0BAA4BqsB,KAAKorE,aAIzDn4F,QAASioD,SAAWl7B,KAAU,MAAG9P,MAAMgrC,SAAUhzB,KAErD,OAAOj1B,SAOXwnC,qBAAqBqB,UAAUmwD,wBAA0B,SAAUtsE,KAAM+E,KACrE,GAAqBwD,MAAOv1B,KAAK87F,oBAAoB9uE,KAAKuI,KAAMxD,KAC3CswF,OAASr1F,KAAKwB,EACnC,IAAI6zF,iBAAkB70F,cAAe60F,OAAO5pB,UAAYL,WAAWE,MAE/D,MADAvmE,KAAI4rE,SAAS1yD,YAAY9B,UAAU8B,YAAY1tB,MAAMwU,IAAI4rE,SAAUpoE,MAC5D,IAGP,IAAqBgV,OAAQvd,KAAKwB,GAAGlB,gBAAgBttB,KAAM+xB,IAC3D,OAAOwY,OAAMhtB,MAAM,KAAMgY,OAQjCuS,qBAAqBqB,UAAU2xD,gBAAkB,SAAU9tE,KAAM+E,KAC7D,MAAO,IAAI+vF,aAAY90F,KAAKhqB,MAAMsqB,gBAAgBttB,KAAM+xB,OAO5D+V,qBAAqBqB,UAAU+xD,sBAAwB,SAAUluE,KAAM+E,KACnE,GAAqBmvE,OAAQ94D,mBAAmBpb,KAAM+E,IAAK/xB,KAE3D,OADA+xB,KAAIoW,KAAK3sB,IAAIwR,KAAK/nB,KAAMi8F,OACjB,MAOXp5D,qBAAqBqB,UAAU0xD,oBAAsB,SAAU7tE,KAAM+E,KACjE,MAAO/E,MAAKK,KAAKC,gBAAgBttB,KAAM+xB,MAO3C+V,qBAAqBqB,UAAUiyD,YAAc,SAAUpuE,KAAM+E,KACzD,GAAqB/I,WAAYgE,KAAKhE,UAAUsE,gBAAgBttB,KAAM+xB,IACtE,OAAI/I,WACOhpB,KAAK6sB,mBAAmBG,KAAKkqE,SAAUnlE,KAEvB,MAAlB/E,KAAKmqE,UACHn3F,KAAK6sB,mBAAmBG,KAAKmqE,UAAWplE,KAE5C,MAOX+V,qBAAqBqB,UAAUqyD,kBAAoB,SAAUxuE,KAAM+E,KAC/D,IACI,MAAO/xB,MAAK6sB,mBAAmBG,KAAKsuE,UAAWvpE,KAEnD,MAAOtb,GACH,GAAqBwxB,UAAWlW,IAAImW,0BAGpC,OAFAD,UAASE,KAAK3sB,IAAI0mG,kBAAmBzrG,GACrCwxB,SAASE,KAAK3sB,IAAI2mG,kBAAmB1rG,EAAE3D,OAChC9S,KAAK6sB,mBAAmBG,KAAKuuE,WAAYtzD,YAQxDH,qBAAqBqB,UAAUuyD,eAAiB,SAAU1uE,KAAM+E,KAC5D,KAAM/E,MAAKlpB,MAAMwpB,gBAAgBttB,KAAM+xB,MAO3C+V,qBAAqBqB,UAAU8yD,iBAAmB,SAAUjvE,KAAM3sB,SAAW,MAAO,OAMpFynC,qBAAqBqB,UAAUqwD,qBAAuB,SAAUh5F,IAAKuxB,KACjE,GAAqBwD,MAAOv1B,KAAK87F,oBAAoBt7F,IAAI+0B,KAAMxD,KAC1CmvE,MAAQ1gG,IAAI+4F,UAAUjsE,gBAAgBttB,KAAM+xB,IACjE,OAAO,KAAKmvE,MAAMr3D,KAAKtsB,MAAM2jF,OAAQ,QAAQr3F,OAAO0rB,SAOxDuS,qBAAqBqB,UAAUswD,iBAAmB,SAAUj5F,IAAKuxB,KAAO,MAAOvxB,KAAIwC,OAMnF8kC,qBAAqBqB,UAAUuwD,kBAAoB,SAAUl5F,IAAKuxB,KAC9D,MAAOvxB,KAAIwC,MAAMoC,WAOrB0iC,qBAAqBqB,UAAUwwD,qBAAuB,SAAUn5F,IAAKuxB,KACjE,MAAIvxB,KAAIwoB,UAAUsE,gBAAgBttB,KAAM+xB,KAC7BvxB,IAAI02F,SAAS5pE,gBAAgBttB,KAAM+xB,KAEpB,MAAjBvxB,IAAI22F,UACF32F,IAAI22F,UAAU7pE,gBAAgBttB,KAAM+xB,KAExC,MAOX+V,qBAAqBqB,UAAUywD,aAAe,SAAUp5F,IAAKuxB,KACzD,OAAQvxB,IAAIwoB,UAAUsE,gBAAgBttB,KAAM+xB,MAOhD+V,qBAAqBqB,UAAU0wD,cAAgB,SAAUr5F,IAAKuxB,KAC1D,MAAOvxB,KAAIwC,MAAMsqB,gBAAgBttB,KAAM+xB,MAO3C+V,qBAAqBqB,UAAU2wD,kBAAoB,SAAUt5F,IAAKuxB,KAC9D,GAAqB4W,YAAanoC,IAAIiuB,OAAO9Y,IAAI,SAAUizB,OAAS,MAAOA,OAAM3jC,MACjF,OAAOmkC,YAAWT,WAAYnoC,IAAIq3B,WAAY9F,IAAK/xB,OAOvD8nC,qBAAqBqB,UAAUyxD,yBAA2B,SAAU5tE,KAAM+E,KACtE,GAAqB4W,YAAa3b,KAAKyB,OAAO9Y,IAAI,SAAUizB,OAAS,MAAOA,OAAM3jC,MAElF,OADA8sB,KAAIoW,KAAK3sB,IAAIwR,KAAK/nB,KAAMmkC,WAAWT,WAAY3b,KAAK6K,WAAY9F,IAAK/xB,OAC9D,MAOX8nC,qBAAqBqB,UAAU8wD,wBAA0B,SAAUz5F,IAAKuxB,KACpE,GAAIiX,OAAQhpC,KACSg6F,IAAM,WAAc,MAAOx5F,KAAIw5F,IAAI1sE,gBAAgB0b,MAAOjX,MAC1DulE,IAAM,WAAc,MAAO92F,KAAI82F,IAAIhqE,gBAAgB0b,MAAOjX,KAC/E,QAAQvxB,IAAIqxD,UACR,IAAK8jC,gBAAeC,OAChB,MAAOoE,QAAS1C,KACpB,KAAK3B,gBAAeG,UAChB,MAAOkE,SAAU1C,KACrB,KAAK3B,gBAAeE,UAChB,MAAOmE,QAAS1C,KACpB,KAAK3B,gBAAeI,aAChB,MAAOiE,SAAU1C,KACrB,KAAK3B,gBAAeU,IAChB,MAAO2D,QAAS1C,KACpB,KAAK3B,gBAAeW,GAChB,MAAO0D,QAAS1C,KACpB,KAAK3B,gBAAeM,KAChB,MAAO+D,OAAQ1C,KACnB,KAAK3B,gBAAeK,MAChB,MAAOgE,OAAQ1C,KACnB,KAAK3B,gBAAeO,OAChB,MAAO8D,OAAQ1C,KACnB,KAAK3B,gBAAeQ,SAChB,MAAO6D,OAAQ1C,KACnB,KAAK3B,gBAAeS,OAChB,MAAO4D,OAAQ1C,KACnB,KAAK3B,gBAAeY,MAChB,MAAOyD,OAAQ1C,KACnB,KAAK3B,gBAAea,YAChB,MAAOwD,QAAS1C,KACpB,KAAK3B,gBAAec,OAChB,MAAOuD,OAAQ1C,KACnB,KAAK3B,gBAAee,aAChB,MAAOsD,QAAS1C,KACpB,SACI,KAAM,IAAIt2F,OAAM,oBAAsBR,IAAIqxD,YAQtD/pB,qBAAqBqB,UAAU+wD,kBAAoB,SAAU15F,IAAKuxB,KAC9D,GAAqBzxB,QACAioD,SAAW/nD,IAAI+nD,SAASj7B,gBAAgBttB,KAAM+xB,IAEnE,OADAzxB,QAASioD,SAAS/nD,IAAIyE,OAQ1B6iC,qBAAqBqB,UAAUgxD,iBAAmB,SAAU35F,IAAKuxB,KAC7D,GAAqBw2B,UAAW/nD,IAAI+nD,SAASj7B,gBAAgBttB,KAAM+xB,KAC9Cc,KAAOryB,IAAIkE,MAAM4oB,gBAAgBttB,KAAM+xB,IAC5D,OAAOw2B,UAAS11B,OAOpBiV,qBAAqBqB,UAAUkxD,sBAAwB,SAAU75F,IAAKuxB,KAClE,MAAO/xB,MAAK87F,oBAAoBt7F,IAAI45F,QAASroE,MAOjD+V,qBAAqBqB,UAAUmxD,oBAAsB,SAAU95F,IAAKuxB,KAChE,GAAIiX,OAAQhpC,KACSM,SAErB,OADAE,KAAI45F,QAAQ35F,QAAQ,SAAUia,OAAS,MAAO,QAAWA,MAAMgb,KAAOhb,MAAM1X,MAAMsqB,gBAAgB0b,MAAOjX,OAClGzxB,QAOXwnC,qBAAqBqB,UAAUqxD,eAAiB,SAAUh6F,IAAKH,SAC3D,GAAqBqlB,QAAS1lB,KAAK87F,oBAAoBt7F,IAAImS,MAAOtS,QAClE,OAAOqlB,QAAOA,OAAOpjB,OAAS,IAOlCwlC,qBAAqBqB,UAAU2yD,oBAAsB,SAAU9zC,YAAaj2B,KACxE,GAAIiX,OAAQhpC,IACZ,OAAOgoD,aAAYryC,IAAI,SAAU0X,MAAQ,MAAOA,MAAKC,gBAAgB0b,MAAOjX,QAOhF+V,qBAAqBqB,UAAUtc,mBAAqB,SAAUgL,WAAY9F,KACtE,IAAK,GAAqBhmB,GAAI,EAAGA,EAAI8rB,WAAWv1B,OAAQyJ,IAAK,CACzD,GAAqBihB,MAAO6K,WAAW9rB,GAClBtI,IAAMupB,KAAKG,eAAentB,KAAM+xB,IACrD,IAAItuB,cAAeq+G,aACf,MAAOr+G,KAGf,MAAO,OAEJqkC,wBAkBPo6E,kBAAoB,QACpBC,kBAAoB,QAWpBG,yBAA4B,SAAUl+D,QAEtC,QAASk+D,4BACL,MAAOl+D,QAAOE,KAAKtkD,MAAM,IAAUA,KAqNvC,MAvNA+qC,WAAUu3E,yBAA0Bl+D,QASpCk+D,yBAAyBn5E,UAAU+xD,sBAAwB,SAAUluE,KAAM+E,KACvE,GAAIiX,OAAQhpC,IAWZ,OAVA+xB,KAAIkvE,UAAUj0E,MACdhtB,KAAK4jG,uBAAuB52E,KAAM+E,KACf,MAAf/E,KAAKiC,SACL8C,IAAI2uE,MAAM1zE,KAAMA,KAAK/nB,KAAO,+BAC5B+nB,KAAKiC,OAAO3B,gBAAgBttB,KAAM+xB,KAClCA,IAAIyuE,QAAQxzE,KAAM,iBAEtBA,KAAK8C,QAAQrvB,QAAQ,SAAU+nC,QAAU,MAAOQ,OAAM66D,kBAAkB72E,KAAMwb,OAAQzW,OACtF/E,KAAK+C,QAAQtvB,QAAQ,SAAUioC,QAAU,MAAOM,OAAM86D,kBAAkB92E,KAAM0b,OAAQ3W,OACtFA,IAAIovE,WACG,MAOXmhB,yBAAyBn5E,UAAUy6D,uBAAyB,SAAU52E,KAAM+E,KACxEA,IAAI2uE,MAAM1zE,KAAM,YAAcA,KAAK/nB,KAAO,KACZ,MAA1B+nB,KAAK+b,mBACL/oC,KAAK+jG,aAAa/2E,KAAK+b,kBAAkBta,OAAQsD,KAErDA,IAAIyuE,QAAQxzE,KAAM,OAClB+E,IAAIgvE,YAC0B,MAA1B/zE,KAAK+b,mBACD/b,KAAK+b,kBAAkBra,KAAKpsB,OAAS,IACrCyvB,IAAIyuE,QAAQxzE,KAAM,oBAClBhtB,KAAK6sB,mBAAmBG,KAAK+b,kBAAkBra,KAAMqD,MAG7DA,IAAIivE,YACJjvE,IAAIyuE,QAAQxzE,KAAM,MAQtBs1F,yBAAyBn5E,UAAU06D,kBAAoB,SAAU72E,KAAMwb,OAAQzW,KAC3EA,IAAIyuE,QAAQxzE,KAAM,yBAA2BA,KAAK/nB,KAAO,gBAAkBujC,OAAOvjC,KAAO,0BACzF8sB,IAAIgvE,YACAv4D,OAAO9Z,KAAKpsB,OAAS,IACrByvB,IAAIyuE,QAAQxzE,KAAM,oBAClBhtB,KAAK6sB,mBAAmB2b,OAAO9Z,KAAMqD,MAEzCA,IAAIivE,YACJjvE,IAAIyuE,QAAQxzE,KAAM,SAQtBs1F,yBAAyBn5E,UAAU26D,kBAAoB,SAAU92E,KAAM0b,OAAQ3W,KAC3EA,IAAI2uE,MAAM1zE,KAAMA,KAAK/nB,KAAO,cAAgByjC,OAAOzjC,KAAO,gBAC1DjF,KAAK+jG,aAAar7D,OAAOja,OAAQsD,KACjCA,IAAIyuE,QAAQxzE,KAAM,OAClB+E,IAAIgvE,YACAr4D,OAAOha,KAAKpsB,OAAS,IACrByvB,IAAIyuE,QAAQxzE,KAAM,oBAClBhtB,KAAK6sB,mBAAmB6b,OAAOha,KAAMqD,MAEzCA,IAAIivE,YACJjvE,IAAIyuE,QAAQxzE,KAAM,OAOtBs1F,yBAAyBn5E,UAAUuvD,iBAAmB,SAAUl4F,IAAKuxB,KACjE,GAAIvxB,IAAIi4F,UAAYL,WAAWC,KAC3BtmE,IAAI2uE,MAAMlgG,IAAK,YAEd,CAAA,GAAIA,IAAIi4F,UAAYL,WAAWE,MAChC,KAAM,IAAIt3F,OAAM,+EAGhBojD,QAAOjb,UAAUuvD,iBAAiBp0C,KAAKtkD,KAAMQ,IAAKuxB,KAEtD,MAAO,OAOXuwF,yBAAyBn5E,UAAUwxD,oBAAsB,SAAU3tE,KAAM+E,KAIrE,MAHAA,KAAI2uE,MAAM1zE,KAAM,OAASA,KAAK/nB,KAAO,OACrC+nB,KAAKhqB,MAAMsqB,gBAAgBttB,KAAM+xB,KACjCA,IAAIyuE,QAAQxzE,KAAM,KACX,MAOXs1F,yBAAyBn5E,UAAU0wD,cAAgB,SAAUr5F,IAAKuxB,KAE9D,MADAvxB,KAAIwC,MAAMsqB,gBAAgBttB,KAAM+xB,KACzB,MAOXuwF,yBAAyBn5E,UAAUmwD,wBAA0B,SAAUjsE,KAAM0E,KACzE,GAAqBswF,QAASh1F,KAAKmB,EAanC,OAZI6zF,kBAAkB70F,cAAe60F,OAAO5pB,UAAYL,WAAWE,OAC3DvmE,IAAiB,aAAS,OAAEzE,gBAAgBttB,KAAM+xB,KACtDA,IAAI2uE,MAAMrzE,KAAM,cACZA,KAAKkI,KAAKjzB,OAAS,IACnByvB,IAAI2uE,MAAMrzE,KAAM,MAChBrtB,KAAK87F,oBAAoBzuE,KAAKkI,KAAMxD,IAAK,MAE7CA,IAAI2uE,MAAMrzE,KAAM,MAGhB+2B,OAAOjb,UAAUmwD,wBAAwBh1C,KAAKtkD,KAAMqtB,KAAM0E,KAEvD,MAOXuwF,yBAAyBn5E,UAAU2wD,kBAAoB,SAAUt5F,IAAKuxB,KAQlE,MAPAA,KAAI2uE,MAAMlgG,IAAK,aACfR,KAAK+jG,aAAavjG,IAAIiuB,OAAQsD,KAC9BA,IAAIyuE,QAAQhgG,IAAK,OACjBuxB,IAAIgvE,YACJ/gG,KAAK6sB,mBAAmBrsB,IAAIq3B,WAAY9F,KACxCA,IAAIivE,YACJjvE,IAAI2uE,MAAMlgG,IAAK,KACR,MAOX8hH,yBAAyBn5E,UAAUyxD,yBAA2B,SAAU5tE,KAAM+E,KAQ1E,MAPAA,KAAI2uE,MAAM1zE,KAAM,YAAcA,KAAK/nB,KAAO,KAC1CjF,KAAK+jG,aAAa/2E,KAAKyB,OAAQsD,KAC/BA,IAAIyuE,QAAQxzE,KAAM,OAClB+E,IAAIgvE,YACJ/gG,KAAK6sB,mBAAmBG,KAAK6K,WAAY9F,KACzCA,IAAIivE,YACJjvE,IAAIyuE,QAAQxzE,KAAM,KACX,MAOXs1F,yBAAyBn5E,UAAUqyD,kBAAoB,SAAUxuE,KAAM+E;AACnEA,IAAIyuE,QAAQxzE,KAAM,SAClB+E,IAAIgvE,YACJ/gG,KAAK6sB,mBAAmBG,KAAKsuE,UAAWvpE,KACxCA,IAAIivE,YACJjvE,IAAIyuE,QAAQxzE,KAAM,YAAc8yE,kBAAkB76F,KAAO,OACzD8sB,IAAIgvE,WACJ,IAAqBxF,aAAgCwE,kBAAkBvkF,IAAIskF,kBAAkBjtE,KAAK,UAAU8D,WAAW,MAC/GC,aAAaC,SACZhtB,OAAOmjB,KAAKuuE,WAIrB,OAHAv7F,MAAK6sB,mBAAmB0uE,WAAYxpE,KACpCA,IAAIivE,YACJjvE,IAAIyuE,QAAQxzE,KAAM,KACX,MAOXs1F,yBAAyBn5E,UAAU46D,aAAe,SAAUt1E,OAAQsD,KAChE/xB,KAAKsiG,gBAAgB,SAAU15D,OAAS,MAAO7W,KAAI2uE,MAAM,KAAM93D,MAAM3jC,OAAUwpB,OAAQsD,IAAK,MAMhGuwF,yBAAyBn5E,UAAUg5D,qBAAuB,SAAUz5D,QAChE,GAAqBzjC,KACrB,QAAQyjC,QACJ,IAAKuwD,eAAcC,YACfj0F,KAAO,QACP,MACJ,KAAKg0F,eAAcE,oBACfl0F,KAAO,WACP,MACJ,KAAKg0F,eAAcG,KACfn0F,KAAO,MACP,MACJ,SACI,KAAM,IAAIjE,OAAM,2BAA6B0nC,QAErD,MAAOzjC,OAEJq9G,0BACTvgB,wBA+CE73D,kBAAqB,SAAUka,QAE/B,QAASla,qBACL,GAAIlB,OAAQob,OAAO7mC,MAAMvd,KAAMqC,YAAcrC,IAG7C,OAFAgpC,OAAMu5E,iBACNv5E,MAAMw5E,kBACCx5E,MA6BX,MAlCA+B,WAAUb,kBAAmBka,QAU7Bla,kBAAkBf,UAAUiB,QAAU,WAElC,IAAK,GADgB9pC,WACKyL,EAAI,EAAGA,EAAI/L,KAAKuiH,cAAcjgH,OAAQyJ,IAC5DzL,OAAON,KAAKuiH,cAAcx2G,IAAM/L,KAAKwiH,eAAez2G,EAExD,OAAOzL,SAOX4pC,kBAAkBf,UAAUuwD,kBAAoB,SAAUl5F,IAAKuxB,KAC3D,GAAqB/uB,OAAQxC,IAAIwC,MAAMoC,UAClB8D,GAAKlJ,KAAKwiH,eAAezhH,QAAQiC,MACtD,IAAIkG,MAAO,EAAI,CACXA,GAAKlJ,KAAKwiH,eAAelgH,OACzBtC,KAAKwiH,eAAe7hH,KAAKqC,MACzB,IAAqBiC,MAAOC,eAAe1E,IAAIwC,QAAU,KACzDhD,MAAKuiH,cAAc5hH,KAAK,OAASsE,KAAOiE,IAG5C,MADA6oB,KAAI2uE,MAAMlgG,IAAKR,KAAKuiH,cAAcr5G,KAC3B,MAEJghC,mBACTo4E,0BAiBEG,YAAe,WAYf,QAASA,aAAYC,UAAW5N,kBAAmBC,gBAAiBC,eAAgBC,cAAeC,kBAAmBzoB,iBAAkBk2B,gBAAiBzwC,UACrJlyE,KAAK0iH,UAAYA,UACjB1iH,KAAK80G,kBAAoBA,kBACzB90G,KAAK+0G,gBAAkBA,gBACvB/0G,KAAKg1G,eAAiBA,eACtBh1G,KAAKi1G,cAAgBA,cACrBj1G,KAAKk1G,kBAAoBA,kBACzBl1G,KAAKysF,iBAAmBA,iBACxBzsF,KAAK2iH,gBAAkBA,gBACvB3iH,KAAKkyE,SAAWA,SAChBlyE,KAAK4iH,uBAAyB,GAAI7jG,KAClC/e,KAAK6iH,2BAA6B,GAAI9jG,KACtC/e,KAAK8iH,+BAAiC,GAAI/jG,KAC1C/e,KAAK+iH,uBAAyB,GAAIhkG,KAClC/e,KAAKgjH,uBAAyB,EAsVlC,MApVA5+G,QAAOgX,eAAeqnG,YAAYt5E,UAAW,YAIzC5tB,IAAK,WAAc,MAAOvb,MAAK0iH,WAC/BpnG,YAAY,EACZD,cAAc,IAOlBonG,YAAYt5E,UAAU85E,kBAAoB,SAAU3zB,YAChD,MAAStvF,MAAKkjH,4BAA4B5zB,YAAY,GAAiB,YAO3EmzB,YAAYt5E,UAAUg6E,mBAAqB,SAAU7zB,YACjD,MAAStvF,MAAKkjH,4BAA4B5zB,YAAY,GAAmB,aAO7EmzB,YAAYt5E,UAAUi6E,kCAAoC,SAAU9zB,YAChE,MAAStvF,MAAKqjH,+BAA+B/zB,YAAY,GAAiB,YAO9EmzB,YAAYt5E,UAAUm6E,mCAAqC,SAAUh0B,YACjE,MAAStvF,MAAKqjH,+BAA+B/zB,YAAY,GAAmB,aAMhFmzB,YAAYt5E,UAAUo6E,sBAAwB,SAAUvjG,WACpDhgB,KAAKkyE,SAASM,KAAK,iGACnB,IAAqB3rE,UAAW7G,KAAK4iH,uBAAuBrnG,IAAIyE,UAChE,KAAKnZ,SACD,KAAM,IAAI7F,OAAM,iBAAmBf,cAAcuF,WAAWwa,WAAa,wBAE7E,OAASnZ,UAASF,SAAkB,SAAEmB,oBAO1C26G,YAAYt5E,UAAU4kD,oBAAsB,SAAU/tE,WAClD,GAAqBgf,SAAUh/B,KAAK80G,kBAAkB3lB,oBAAoBnvE,UAC1E,OAAQgf,SAAwB,kBAMpCyjF,YAAYt5E,UAAUq6E,iBAAmB,SAAU1P,WAC/C,GAAI9qE,OAAQhpC,IACZA,MAAK2nF,aACLr9C,iBAAiBwpE,WAAWrzG,QAAQ,SAAUu+B,SAC1CgK,MAAMyjD,iBAAiBP,YAAar6D,OAAQmN,QAAQ53B,KAAKhC,UAAWy5B,SAAU,KAAMz3B,KAAM43B,aAOlGyjF,YAAYt5E,UAAUs6E,cAAgB,SAAUp+G,KAAO,QAASrF,KAAKysF,iBAAiBxtD,eAAe55B,MAKrGo9G,YAAYt5E,UAAUu6E,sBAAwB,SAAUC,KACpD,GAAI36E,OAAQhpC,IACZ,OAAO2jH,KAAIhuG,IAAI,SAAUu7E,KAAO,MAAOA,KAAI9rF,YAAcma,OAAO,SAAUla,KAAO,OAAQ2jC,MAAMy6E,cAAcp+G,QAQjHo9G,YAAYt5E,UAAU+5E,4BAA8B,SAAU5zB,WAAYjB,QACtE,GAAIrlD,OAAQhpC,KACS4jH,eAAiB5jH,KAAK6jH,aAAav0B,WAAYjB,QAC/Cy1B,aAAe,WAEhC,MADA96E,OAAM+6E,mBAAmBz0B,WAAY,MAC9BtmD,MAAM8sE,eAAexmB,YAEhC,OAAIjB,QACO,GAAI1qC,iBAAgBmgE,gBAGpB,GAAIngE,iBAAgB,KAAMigE,eAAer7B,KAAKu7B,gBAS7DrB,YAAYt5E,UAAUk6E,+BAAiC,SAAU/zB,WAAYjB,QACzE,GAAIrlD,OAAQhpC,KACS4jH,eAAiB5jH,KAAK6jH,aAAav0B,WAAYjB,QAC/Cy1B,aAAe,WAChC,GAAqBE,sBAErB,OADAh7E,OAAM+6E,mBAAmBz0B,WAAY00B,oBAC9B,GAAI/jH,eAAcgkH,6BAA6Bj7E,MAAM8sE,eAAexmB,YAAa00B,oBAE5F,OAAI31B,QACO,GAAI1qC,iBAAgBmgE,gBAGpB,GAAIngE,iBAAgB,KAAMigE,eAAer7B,KAAKu7B,gBAQ7DrB,YAAYt5E,UAAU06E,aAAe,SAAUK,WAAY71B,QACvD,GAAIrlD,OAAQhpC,KACSmkH,mBACAC,aAAiBpkH,KAAK80G,kBAAkBvxE,oBAAoB2gF,WAejF,OAZAlkH,MAAK0jH,sBAAsBU,aAAa3gF,iBAAiBC,SAASjjC,QAAQ,SAAU4jH,gBAEhF,GAAqB55G,YAAeu+B,MAAM8rE,kBAAkBvxE,oBAAoB8gF,eAChFr7E,OAAM06E,sBAAsBj5G,WAAW03B,oBAAoB1hC,QAAQ,SAAU4E,KACzE,GAAqBqqF,SAAU1mD,MAAM8rE,kBAAkB1mB,sBAAsB3jF,WAAWrD,KAAKhC,UAAWC,IAAKgpF,OACzGqB,UACAy0B,gBAAgBxjH,KAAK+uF,WAG7B1mD,MAAM06E,sBAAsBj5G,WAAW63B,eAClC7hC,QAAQ,SAAU4E,KAAO,MAAO2jC,OAAM8rE,kBAAkB5iB,sBAAsB7sF,SAEhFy+C,QAAQslC,IAAI+6B,kBAOvB1B,YAAYt5E,UAAU2sE,eAAiB,SAAUxmB,YAC7C,GAAItmD,OAAQhpC,KACSskH,gBAAoBtkH,KAAK+iH,uBAAuBxnG,IAAI+zE,WACzE,KAAKg1B,gBAAiB,CAClB,GAAqBC,cAAiBvkH,KAAK80G,kBAAkBvxE,oBAAoB+rD,YAE5DzV,gBAAkB75E,KAAK80G,kBAAkBphB,oBAAoB,GAAIxsC,cAAajnD,cAAcukH,UAAYpmG,WAAY,WAAc,MAAO,IAAIqmG,qBAAoBz7E,MAAOu7E,aAAan9G,KAAKhC,gBAC1Lg7B,cAAgBpgC,KAAKk1G,kBAAkBxY,QAAQ6nB,aAAc1qC,eAM9EyqC,iBALCtkH,KAAK2iH,gBAAgBz8E,OAKJ+D,cAAcz/B,eAAe+5G,cAAenkF,cAAcvI,YAAauI,cAAcq8D,qBAAqB,GAHxHh1D,oBAAoBrH,cAAcvI,YAAauI,cAAcq8D,qBAAqB,GAK1Fz8F,KAAK+iH,uBAAuBvnG,IAAI+oG,aAAan9G,KAAKhC,UAAWk/G,iBAEjE,MAAOA,kBAQX7B,YAAYt5E,UAAU46E,mBAAqB,SAAUG,WAAYQ,uBAC7D,GAAI17E,OAAQhpC,KACSyhC,SAAazhC,KAAK80G,kBAAkBvxE,oBAAoB2gF,YACxDS,qBAAuB,GAAI5lG,KAC3B6lG,UAAY,GAAI3iG,KAChB4iG,gBAAkB7kH,KAAK0jH,sBAAsBjiF,SAASgC,iBAAiBC,QAC5FmhF,iBAAgBpkH,QAAQ,SAAUqkH,UAC9B,GAAqBC,iBAAoB/7E,MAAM8rE,kBAAkBvxE,oBAAoBuhF,SACrF97E,OAAM06E,sBAAsBqB,gBAAgB5iF,oBAAoB1hC,QAAQ,SAAUukH,QAC9EL,qBAAqBnpG,IAAIwpG,OAAQD,gBACjC,IAAqB9oC,SAAUjzC,MAAM8rE,kBAAkB5lB,qBAAqB81B,OAC5E,IAAI/oC,QAAQvzE,cACRk8G,UAAU9nF,IAAIkM,MAAMi8E,wBAAwBhpC,QAAS8oC,kBACjDL,uBAAuB,CACvB,GAAqB79G,UAAWmiC,MAAMk8E,4BAA4BjpC,QAAQ70E,KAAKhC,UAAW2/G,gBAC1FH,WAAU9nF,IAAIj2B,UACd69G,sBAAsB/jH,KAAuBs7E,QAAwB,uBAKrF4oC,gBAAgBpkH,QAAQ,SAAUqkH,UAC9B,GAAqBC,iBAAoB/7E,MAAM8rE,kBAAkBvxE,oBAAoBuhF,SACrF97E,OAAM06E,sBAAsBqB,gBAAgB5iF,oBAAoB1hC,QAAQ,SAAUukH,QAC9E,GAAqB/oC,SAAUjzC,MAAM8rE,kBAAkB5lB,qBAAqB81B,OACxE/oC,SAAQvzE,aACRuzE,QAAQ7yE,gBAAgB3I,QAAQ,SAAU0kH,oBACtC,GAAqB16G,YAAek6G,qBAAqBppG,IAAI4pG,mBAAmBl+D,cAChF29D,WAAU9nF,IAAIkM,MAAMk8E,4BAA4BC,mBAAmBl+D,cAAex8C,iBAI9Fs6G,gBAAgB37G,gBAAgB3I,QAAQ,SAAU0kH,oBAC9C,IAAKn8E,MAAMy6E,cAAc0B,mBAAmBl+D,cAAc7hD,WAAY,CAClE,GAAqBqF,YAAek6G,qBAAqBppG,IAAI4pG,mBAAmBl+D,cAChF29D,WAAU9nF,IAAIkM,MAAMk8E,4BAA4BC,mBAAmBl+D,cAAex8C,kBAI9Fm6G,UAAUnkH,QAAQ,SAAUoG,UAAY,MAAOmiC,OAAMo8E,iBAAiBv+G,aAM1E47G,YAAYt5E,UAAU0+C,cAAgB,SAAUzgF,MAC5CpH,KAAK+iH,uBAAuBhmF,OAAO31B,MACnCpH,KAAK80G,kBAAkBjtB,cAAczgF,MACrCpH,KAAK6iH,2BAA2B9lF,OAAO31B,KACvC,IAAqBi+G,kBAAmBrlH,KAAK4iH,uBAAuBrnG,IAAInU,KACpEi+G,mBACArlH,KAAK4iH,uBAAuB7lF,OAAO31B,OAM3Cq7G,YAAYt5E,UAAUw+C,WAAa,WAC/B3nF,KAAK80G,kBAAkBntB,aACvB3nF,KAAK4iH,uBAAuBh7B,QAC5B5nF,KAAK6iH,2BAA2Bj7B,QAChC5nF,KAAK+iH,uBAAuBn7B,SAOhC66B,YAAYt5E,UAAU+7E,4BAA8B,SAAUn/G,SAAU07B,UACpE,IAAKA,SACD,KAAM,IAAIzgC,OAAM,aAAef,cAAcuF,WAAWO,UAAY,qFAExE,IAAqBs/G,kBAAmBrlH,KAAK6iH,2BAA2BtnG,IAAIxV,SAC5E,KAAKs/G,iBAAkB,CACnB,GAAqB1+G,UAAW3G,KAAK80G,kBAAkB5lB,qBAAqBnpF,SAC5EskC,iBAAgB1jC,SAChB,IAAqB0C,kBAAoB1C,SAAyB,iBAC7C2+G,UAAYtlH,KAAK80G,kBAAkBlnB,qBAAqB7nF,UACxD8wG,SAAWpwG,wBAAwB6+G,UAAW3+G,SAA4B1G,cAAcslH,mCAAmCl8G,kBAChJg8G,kBACI,GAAIG,oBAAiB,GAAM7+G,SAASS,KAAMyvG,SAAUp1E,UAAW96B,SAASS,OAC5EpH,KAAK6iH,2BAA2BrnG,IAAIzV,SAAUs/G,kBAElD,MAAOA,mBAOX5C,YAAYt5E,UAAU87E,wBAA0B,SAAUt+G,SAAU86B,UAChE,GAAqB4jF,kBAAmBrlH,KAAK4iH,uBAAuBrnG,IAAI5U,SAASS,KAAKhC,UAMtF,OALKigH,oBACDh7E,gBAAgB1jC,UAChB0+G,iBAAmB,GAAIG,oBAAiB,GAAO7+G,SAASS,KAAMT,SAAU86B,SAAUA,SAASgC,iBAAiB7kB,YAC5G5e,KAAK4iH,uBAAuBpnG,IAAI7U,SAASS,KAAKhC,UAAWigH,mBAEtDA,kBAMX5C,YAAYt5E,UAAUi8E,iBAAmB,SAAUv+G,UAC/C,GAAImiC,OAAQhpC,IACZ,KAAI6G,SAAS4+G,WAAb,CAGA,GAAqB9+G,UAAWE,SAASF,SACpB++G,+BAAiC,GAAI3mG,KACrCw4F,oBAAsBv3G,KAAKg1G,eAAe9J,iBAAiBvkG,SAChF4wG,qBAAoBtvG,oBAAoBxH,QAAQ,SAAU6mG,GAAKoe,+BAA+BlqG,IAAuB8rF,EAAEl9F,KAAe,UAAGk9F,KACzItnG,KAAK2lH,4BAA4BpO,oBAAoBzM,oBAAqB4a,+BAC1E,IAQqBE,WACA38G,aATA2V,WAAa/X,SAAS+X,WAAWjJ,IAAI,SAAU6J,KAAO,MAAOwpB,OAAM8rE,kBAAkB3lB,oBAAoB3vE,IAAIpa,aAC7Gs9B,MAAQ77B,SAAS46B,SAASgC,iBAAiBf,MAAM/sB,IAAI,SAAU6tB,MAAQ,MAAOwF,OAAM8rE,kBAAkB9iB,eAAexuD,KAAKp+B,aAC3I4P,GAAKhV,KAAK+0G,gBAAgBhuG,MAAMJ,SAA+BA,SAAkB,SAAW,SAAGiY,WAAY8jB,MAAO77B,SAAS46B,SAASwkB,QAASj8C,kBAAkBnD,SAAS46B,SAASr6B,KAAMP,SAASF,SAA6BE,SAASF,SAAkB,WAAKywG,eAAiBpiG,GAAGnO,SAAUo5E,UAAYjrE,GAAG0tB,MACzRtC,cAAgBpgC,KAAKi1G,cAAc/J,iBAAiBvkG,SAAUywG,eAAgB7pF,SAASgqF,oBAAoBzM,oBAAoBE,WAAY/qB,WAC3IpoD,WAAa0/E,oBAAoBzM,oBAAoBjzE,WAAWhuB,OAAOu2B,cAAcvI,YACrFguF,6BAA+Bl/G,SAASQ,QACxDi5B,cAAcitE,eACdjtE,cAAcitE,aAAcjtE,cAAcktE,gBAG1CttG,MAAK2iH,gBAAgBz8E,QAItBjvB,GAAKgzB,cAAcv/B,eAAe7D,SAAS46B,SAASr6B,KAAMP,SAASF,UAAWkxB,WAAYguF,8BAA+BD,UAAY3uG,GAAG,GAAIhO,aAAegO,GAAG,KAH9J/B,GAAKuyB,oBAAoB5P,WAAYguF,8BAA+BD,UAAY1wG,GAAG,GAAIjM,aAAeiM,GAAG,IAK7GrO,SAASi/G,SAASF,UAAW38G,aAC7B,IAAIiM,IAAI+B,KAOZwrG,YAAYt5E,UAAUw8E,4BAA8B,SAAUrlH,OAAQolH,gCAClE,GAAI18E,OAAQhpC,IACZM,QAAOggC,aAAa7/B,QAAQ,SAAUm4B,IAAK7sB,GACvC,GAAqBg6G,qBAAwBL,+BAA+BnqG,IAAIqd,IAAI7oB,WAC/Di2G,gBAAkBh9E,MAAMi9E,mCAAmCF,oBAAqBL,+BACrG9sF,KAAI2H,iBAAiBn7B,UAAY4gH,mBAQzCvD,YAAYt5E,UAAU88E,mCAAqC,SAAU3lH,OAAQolH,gCAEzE,MADA1lH,MAAK2lH,4BAA4BrlH,OAAQolH,gCACpC1lH,KAAK2iH,gBAAgBz8E,OAIf+D,cAAc9/B,uBAAuB7J,OAAO8J,KAAMpK,KAAKgjH,0BAA2B1iH,OAAOu3B,YAAav3B,OAAO0qG,YAAY,GAHzHvjE,oBAAoBnnC,OAAOu3B,YAAav3B,OAAO0qG,YAAY,IAMnEyX,cAEXA,aAAYh2D,aACNrlD,KAAMuE,qBAKZ82G,YAAY/1D,eAAiB,WAAc,QACrCtlD,KAAMnH,cAAc2zE,WACpBxsE,KAAMy/B,0BACNz/B,KAAMw/B,iBACNx/B,KAAMggC,gBACNhgC,KAAM8/B,eACN9/B,KAAMigC,mBACNjgC,KAAM4kF,kBACN5kF,KAAM2+B,iBACN3+B,KAAMnH,cAAcwlC,WAE1B,IAAI+/E,kBAAoB,WAQpB,QAASA,kBAAiBr+G,OAAQpB,SAAUY,SAAU86B,SAAU7iB,YAC5D5e,KAAKmH,OAASA,OACdnH,KAAK+F,SAAWA,SAChB/F,KAAK2G,SAAWA,SAChB3G,KAAKyhC,SAAWA,SAChBzhC,KAAK4e,WAAaA,WAClB5e,KAAKkmH,WAAa,KAClBlmH,KAAKylH,YAAa,EAetB,MARAD,kBAAiBr8E,UAAU28E,SAAW,SAAUF,UAAW38G,cACvDjJ,KAAKkmH,WAAaN,UAChB5lH,KAAK2G,SAA2B,kBAAE4mF,YAAYq4B,UAChD,KAAK,GAAqB/yF,QAAQ5pB,cAC5BjJ,KAAK2G,SAAsB,aAAEksB,MAAQ5pB,aAAa4pB,KAExD7yB,MAAKylH,YAAa,GAEfD,oBAcPf,oBAAuB,WAKvB,QAASA,qBAAoB0B,UAAWC,WACpCpmH,KAAKmmH,UAAYA,UACjBnmH,KAAKomH,UAAYA,UA4DrB,MA1DAhiH,QAAOgX,eAAeqpG,oBAAoBt7E,UAAW,aAIjD5tB,IAAK,WAAc,MAAOvb,MAAKmmH,UAAUE,UACzC/qG,YAAY,EACZD,cAAc,IAOlBopG,oBAAoBt7E,UAAU85E,kBAAoB,SAAU3zB,YACxD,MAAOtvF,MAAKmmH,UAAUlD,kBAAkB3zB,aAO5Cm1B,oBAAoBt7E,UAAUg6E,mBAAqB,SAAU7zB,YACzD,MAAOtvF,MAAKmmH,UAAUhD,mBAAmB7zB,aAO7Cm1B,oBAAoBt7E,UAAUi6E,kCAAoC,SAAU9zB,YACxE,MAAOtvF,MAAKmmH,UAAU/C,kCAAkC9zB,aAO5Dm1B,oBAAoBt7E,UAAUm6E,mCAAqC,SAAUh0B,YACzE,MAAOtvF,MAAKmmH,UAAU7C,mCAAmCh0B,aAM7Dm1B,oBAAoBt7E,UAAUo6E,sBAAwB,SAAUvjG,WAC5D,MAAOhgB,MAAKmmH,UAAU5C,sBAAsBvjG,YAMhDykG,oBAAoBt7E,UAAUw+C,WAAa,WAAc3nF,KAAKmmH,UAAUx+B,cAMxE88B,oBAAoBt7E,UAAU0+C,cAAgB,SAAUzgF,MAAQpH,KAAKmmH,UAAUt+B,cAAczgF,OACtFq9G,uBA6BP6B,cAAiB,WAOjB,QAASA,eAAc7zC,YAAapN,cAAeC,eAAgBwH,SAC/C,SAAZA,UAAsBA,QAAU,MACpC9sE,KAAKyyE,YAAcA,YACnBzyE,KAAKqlE,cAAgBA,cACrBrlE,KAAKslE,eAAiBA,eACtBtlE,KAAK8sE,QAAUA,QACf9sE,KAAKylE,aA0DT,MAlDA6gD,eAAcn9E,UAAUo9E,mBAAqB,SAAUz0C,KAAM/nE,IAAK4G,qBAC9D,GAAqB61G,kBAAmBxmH,KAAKyyE,YAAY1rE,MAAM+qE,KAAM/nE,KAAK,EAAM4G,oBAChF,IAAI61G,iBAAiB3pG,OAAOva,OACxB,MAAOkkH,kBAAiB3pG,MAE5B,IAAqB4pG,kBAAmBjzG,gBAAgBgzG,iBAAiBlqD,UAAW3rD,oBAAqB3Q,KAAKqlE,cAAerlE,KAAKslE,eAClI,OAAImhD,kBAAiB5pG,OAAOva,OACjBmkH,iBAAiB5pG,SAE3B7H,GAAKhV,KAAKylE,WAAW9kE,KAAK4c,MAAMvI,GAAIyxG,iBAAiBvrG,UAC/C,KACP,IAAIlG,KAKRsxG,cAAcn9E,UAAUu9E,YAAc,WAAc,MAAO1mH,MAAKylE,WAMhE6gD,cAAcn9E,UAAUy/B,MAAQ,SAAU+I,WAAYg1C,eAClD,GAAqBzrG,aACA0rG,cAAgB,GAAIC,oBAEzC7mH,MAAKylE,UAAUhlE,QAAQ,SAAU6M,SAC7B,GAAqBpE,IAAKyoE,WAAWt8D,OAAO/H,QACvC4N,UAASgwB,eAAehiC,KAIxB8L,GAAKkG,SAAShS,IAAIi2D,SAASx+D,KAAK4c,MAAMvI,GAAI1H,QAAQ6xD,SAHnDjkD,SAAShS,IAAMoE,OAKnB,IAAI0H,KAGR,IAAqB8xG,SAAU1iH,OAAOqxB,KAAKva,UAAUvF,IAAI,SAAUzM,IAC/D,GAAqBqpE,QAASZ,WAAW7I,iBAAiB5tD,SAAShS,KAC9C69G,IAAM7rG,SAAShS,IACfoH,MAAQiiE,OAASq0C,cAAcn6C,QAAQs6C,IAAIz2G,MAAOiiE,QAAUw0C,IAAIz2G,MAChE02G,mBAAqB,GAAIhoD,SAAQ1uD,YAAey2G,IAAI5zG,QAAS4zG,IAAI3zG,YAAalK,GAKnG,OAJA89G,oBAAmB7nD,QAAU4nD,IAAI5nD,QAC7BwnD,eACAK,mBAAmB7nD,QAAQ1+D,QAAQ,SAAU+P,QAAU,MAAOA,QAAO7K,SAAWghH,cAAcn2G,OAAO7K,YAElGqhH,oBAEX,OAAOr1C,YAAW/I,MAAMk+C,QAAS9mH,KAAK8sE,UAEnCw5C,iBAEPO,oBAAuB,SAAUziE,QAEjC,QAASyiE,uBACL,MAAkB,QAAXziE,QAAmBA,OAAO7mC,MAAMvd,KAAMqC,YAAcrC,KAuC/D,MAzCA+qC,WAAU87E,oBAAqBziE,QAS/ByiE,oBAAoB19E,UAAUsjC,QAAU,SAAUn8D,MAAOiiE,QACrD,GAAIvpC,OAAQhpC,IACZ,OAAOuyE,QAASjiE,MAAMqF,IAAI,SAAUxI,GAAK,MAAOA,GAAE5M,MAAMyoC,MAAOupC,UAAcjiE,OAOjFu2G,oBAAoB19E,UAAU62B,oBAAsB,SAAUQ,GAAI+R,QAC9D,GAAIvpC,OAAQhpC,KACS8/D,UAAcyS,OAAOx3D,aAAaylD,GAAGV,WACrCC,UAAYS,GAAGT,UAAcwS,OAAOx3D,aAAaylD,GAAGT,WAAeS,GAAGT,UACtEhjD,SAAWyjD,GAAGzjD,SAASpH,IAAI,SAAUxI,GAAK,MAAOA,GAAE5M,MAAMyoC,MAAOupC,SACrF,OAAO,IAAI1S,gBAAeW,GAAG5lD,IAAK4lD,GAAGlsD,MAAOwrD,UAAWC,UAAWhjD,SAAUyjD,GAAGxiB,OAAQwiB,GAAG5tD,aAO9Fi0G,oBAAoB19E,UAAU+2B,iBAAmB,SAAUM,GAAI+R,QAC3D,MAAO,IAAItS,aAAYO,GAAGx9D,MAA0BuvE,OAAOx3D,aAAaylD,GAAGv7D,MAASu7D,GAAG5tD,aAO3Fi0G,oBAAoB19E,UAAUi3B,oBAAsB,SAAUI,GAAI+R,QAC9D,MAAO,IAAIpS,gBAAeK,GAAGx9D,MAA0BuvE,OAAOx3D,aAAaylD,GAAGv7D,MAASu7D,GAAG5tD,aAEvFi0G,qBACTxmD,cAWE4mD,UAAa,WAOb,QAASA,WAAUx+G,KAAMo6B,qBAAsBqkF,cAAelmF,kBAC1DhhC,KAAKyI,KAAOA,KACZzI,KAAK6iC,qBAAuBA,qBAC5B7iC,KAAKknH,cAAgBA,cACrBlnH,KAAKghC,iBAAmBA,iBAwD5B,MAlDAimF,WAAU99E,UAAUv1B,QAAU,SAAU6hG,WACpC,GAAIzsE,OAAQhpC,KACSshC,eAAiBsB,sBAAsB5iC,KAAK6iC,qBAAsB4yE,UAAWz1G,KAAKyI,MACnGuM,GAAKqsB,4BAA4BC,eAAgBthC,KAAKyI,KAAMzI,KAAKghC,kBAAmBwB,MAAQxtB,GAAGwtB,MAAOtB,UAAYlsB,GAAGksB,SACzH,OAAO4iB,SACFslC,IAAIloD,UAAUvrB,IAAI,SAAU8rB,UAAY,MAAOuH,OAAMhI,iBAAiBwuD,qCAAqC/tD,SAASr6B,KAAKhC,WAAW,MACpImjF,KAAK,WACN,GAAqB1rE,UAerB,IAdA2lB,MAAM/hC,QAAQ,SAAUuzD,MACpB,GAAqBmzD,aACrBnzD,MAAKp1C,WAAWne,QAAQ,SAAU6pF,eAC9B,GAAqBrO,SAAUjzC,MAAMhI,iBAAiBkuD,qBAAqB5E,cACvErO,UAAWA,QAAQvzE,aACnBy+G,UAAUxmH,KAAKs7E,WAGvBkrC,UAAU1mH,QAAQ,SAAUkG,UACxB,GAAqBmrE,MAAWnrE,SAAkB,SAAW,SACxCgK,oBAAsBw7C,oBAAoBC,UAA6BzlD,SAAkB,SAAEuB,cAChH2U,QAAOlc,KAAK4c,MAAMV,OAAUmsB,MAAMk+E,cAAcX,mBAAmBz0C,KAAM9d,KAAKvxB,OAAQ9xB,0BAG1FkM,OAAOva,OACP,KAAM,IAAItB,OAAM6b,OAAOlH,IAAI,SAAUc,GAAK,MAAOA,GAAE8C,aAAe/D,KAAK,MAE3E,OAAOwzB,OAAMk+E,iBAQrBD,UAAU//G,OAAS,SAAUuB,KAAM8+B,QAC/B,GAAqB7B,YAAa,GAAIC,gBAAe,GAAIC,aACpCZ,YAAcze,kCACdwZ,YAAc,GAAIkF,mBAClB9G,gBAAkB,GAAI+G,oBAAmBz8B,KAAMs3B,aAC/C8C,qBAAuB,GAAIsC,sBAAqB18B,KAAMs3B,YAAa5B,iBACnEiH,gBAAkB,GAAIC,iBAAgBlH,gBAAiB0E,qBAC5EyC,wCAAuCC,QAAQH,gBAC/C,IAAqB51B,QAAS,GAAIu2B,iBAAiBC,qBAAsB/lC,cAAcwH,kBAAkBw+B,SAAUC,QAAQ,IACtGC,WAAa,GAAIC,sBAAsB7qB,IAAK,SAAUxR,KAAO,MAAOtB,MAAK49B,aAAat8B,OAAWi7B,YAAaU,WAAYl2B,QAC1Hi3B,sBAAwB,GAAIC,0BAC5B3lB,SAAW,GAAI8lB,yBAAwBr3B,OAAQ,GAAIs3B,kBAAiB1B,iBAAkB,GAAI2B,mBAAkB3B,iBAAkB,GAAI4B,cAAa5B,iBAAkBjH,gBAAiBsI,sBAAuBN,WAAY,GAAIlmC,eAAcwlC,SAAY1F,YAAaqF,iBAEhQ8hF,cAAgB,GAAIZ,eAAc5gF,iBAAoB6B,QACtD6/E,UAAY,GAAIH,WAAUx+G,KAAMo6B,qBAAsBqkF,cAAenmG,SAC1F,QAASqmG,UAAWA,UAAWhiF,gBAAiBA,kBAE7C6hF,aAgBPI,qBAKA9rG,IAAK,SAAUxR,KACX,KAAM,IAAI/I,OAAM,4EAA8E+I,IAAM,OAGxGu9G,eAAiB,GAAIrnH,eAAc4/E,eAAe,cAKlD0nC,qBACEpgC,QAASlnF,cAAcunH,WAAYvpG,SAAUhe,cAAc2F,aAC3DuhF,QAASlnF,cAAc2rF,iBAAkB5tE,YAAa/d,cAAcunH,aACpErgC,QAASF,eAAgBhpE,SAAUopG,qBACrCl7B,oBACEhF,QAAS6E,gBAAiBhuE,YAAamuE,oBACzClsF,cAAcwlC,SACde,MACAD,QAEI4gD,QAASmgC,eACTnpG,SAAUynB,aAGVuhD,QAASxhD,eACTvnB,WAAY,SAAUqpG,OAAQ3zG,aAAc6H,OAAQnM,OAAQg2B,SAAW,MAAO,IAAIG,gBAAe8hF,OAAQ3zG,aAAc6H,OAA2BnM,OAA0B,mBAAGg2B,UAC/KtnB,MACIopG,gBACC,GAAIrnH,eAAcmhF,SAAY,GAAInhF,eAAcohF,OAAOphF,cAAcynH,gBACrE,GAAIznH,eAAcmhF,SAAY,GAAInhF,eAAcohF,OAAOphF,cAAc6zE,uBACrE/tC,iBACA9lC,cAAcwlC,aAInB0hD,QAASvhD,WACT5nB,YAAa2nB,gBAEjBiB,eACAR,oBACAS,wBACAqgD,6BACA9/C,cACAF,aACAG,kBACE8/C,QAASphD,eAAgB9nB,SAAU,GAAI8nB,iBACzC08E,aACEt7B,QAASlnF,cAAcukH,SAAUxmG,YAAaykG,aAChD/7E,0BACEygD,QAASjN,sBAAuBl8D,YAAa0oB,0BAC/CpgB,YACAygB,kBACAC,aACAF,kBAEA6gF,mBAAsB,WAItB,QAASA,oBAAmBC,gBACxB,GAAIC,kBACAC,SAAU7nH,cAAc6L,YACxBo6B,QAAQ,EACRF,qBAAsB/lC,cAAcwH,kBAAkBw+B,SACtDH,mBAAoB7lC,cAAcsxE,2BAA2BC,QAC7DxrD,sBAAsB,EAE1BhmB,MAAK+nH,iBAAmBF,iBAAiBh+G,OAAO+9G,gBA6BpD,MAvBAD,oBAAmBx+E,UAAU6+E,eAAiB,SAAUjjF,SACpC,SAAZA,UAAsBA,WAC1B,IAAqBkjF,MAAOt9E,cAAc3qC,KAAK+nH,gBAAgBl+G,OAAOk7B,UACjDshF,SAAWpmH,cAAcioH,mBAAmBC,kBAC7DZ,oBACIpgC,QAASphD,eACT3nB,WAAY,WACR,MAAO,IAAI2nB,iBAGPG,OAAQ+hF,KAAK/hF,OAGbF,qBAAsBiiF,KAAKjiF,qBAC3BF,mBAAoBmiF,KAAKniF,mBACzB9f,qBAAsBiiG,KAAKjiG,wBAGnC9H,SACkB+pG,KAAe,WAEzC,OAAO5B,UAAS9qG,IAAItb,cAAcukH,WAE/BmD,qBAEXA,oBAAmBl7D,aACbrlD,KAAMuE,qBAKZg8G,mBAAmBj7D,eAAiB,WAAc,QAC5CtlD,KAAMnE,MAAOwpD,aAAerlD,KAAMnH,cAAcohF,OAAQ9rD,MAAOt1B,cAAcmoH,sBAanF,IAAIC,qBAAsBpoH,cAAcqoH,sBAAsBroH,cAAcsoH,aAAc,gBACpFphC,QAASlnF,cAAcmoH,iBAAkBnqG,YAAcI,OAAO,IAC9D8oE,QAASlnF,cAAcuoH,gBAAiBrqG,SAAUwpG,qBAClDxgC,QAASlnF,cAAcwoH,qBAAsBxqG,SAAUusB,eAAgBnsB,OAAO,KA+ChFqqG,eAAkB,WAClB,QAASA,mBA0BT,MAhBAA,gBAAev/E,UAAUzX,qBAAuB,SAAUyxE,iBAAkBxxE,sBAQ5E+2F,eAAev/E,UAAUvX,YAAc,SAAUC,UAOjD62F,eAAev/E,UAAUrX,aAAe,SAAUD,UAC3C62F,iBAGXlpH,SAAQ2rC,QAAUA,QAClB3rC,QAAQogF,oBAAsBA,oBAC9BpgF,QAAQumC,eAAiBA,eACzBvmC,QAAQijH,YAAcA,YACtBjjH,QAAQunC,kBAAoBA,kBAC5BvnC,QAAQwnC,aAAeA,aACvBxnC,QAAQsnC,iBAAmBA,iBAC3BtnC,QAAQoR,6BAA+BA,6BACvCpR,QAAQ2sD,oBAAsBA,oBAC9B3sD,QAAQ6nC,iBAAmBA,iBAC3B7nC,QAAQ0nC,aAAeA,aACvB1nC,QAAQwE,cAAgBA,cACxBxE,QAAQoE,YAAcA,YACtBpE,QAAQ6rC,QAAUA,QAClB7rC,QAAQgsC,aAAeA,aACvBhsC,QAAQksC,QAAUA,QAClBlsC,QAAQosC,wBAA0BA,wBAClCpsC,QAAQssC,cAAgBA,cACxBtsC,QAAQ0sC,aAAeA,aACvB1sC,QAAQ4sC,YAAcA,YACtB5sC,QAAQ66B,WAAaA,WACrB76B,QAAQ26B,oBAAsBA,oBAC9B36B,QAAQmtC,0BAA4BA,0BACpCntC,QAAQutC,aAAeA,aACvBvtC,QAAQgf,YAAcA,YACtBhf,QAAQ2f,gBAAkBA,gBAC1B3f,QAAQ86B,aAAeA,aACvB96B,QAAQq7B,oBAAsBA,oBAC9Br7B,QAAQU,iBAAmBA,iBAC3BV,QAAQwkD,8BAAgCA,8BACxCxkD,QAAQ0kD,8BAAgCA,8BACxC1kD,QAAQ2kD,yCAA2CA,yCACnD3kD,QAAQ+kD,wCAA0CA,wCAClD/kD,QAAQklD,yBAA2BA,yBACnCllD,QAAQmlD,0CAA4CA,0CACpDnlD,QAAQolD,8BAAgCA,8BACxCplD,QAAQqlD,gCAAkCA,gCAC1CrlD,QAAQulD,kCAAoCA,kCAC5CvlD,QAAQwlD,iCAAmCA,iCAC3CxlD,QAAQylD,8BAAgCA,8BACxCzlD,QAAQ0F,eAAiBA,eACzB1F,QAAQkG,oBAAsBA,oBAC9BlG,QAAQsG,cAAgBA,cACxBtG,QAAQyG,iBAAmBA,iBAC3BzG,QAAQ0G,kBAAoBA,kBAC5B1G,QAAQ2G,oBAAsBA,oBAC9B3G,QAAQ6G,qBAAuBA,qBAC/B7G,QAAQ8/B,mBAAqBA,mBAC7B9/B,QAAQ8G,UAAYA,UACpB9G,QAAQgH,eAAiBA,eACzBhH,QAAQ2lD,0BAA4BA,0BACpC3lD,QAAQ+H,wBAA0BA,wBAClC/H,QAAQyH,yBAA2BA,yBACnCzH,QAAQiH,wBAA0BA,wBAClCjH,QAAQmmD,oBAAsBA,oBAC9BnmD,QAAQqmD,wBAA0BA,wBAClCrmD,QAAQ0mD,kCAAoCA,kCAC5C1mD,QAAQ0nD,aAAeA,aACvB1nD,QAAQ+J,QAAUA,QAClB/J,QAAQsK,UAAYA,UACpBtK,QAAQwK,kBAAoBA,kBAC5BxK,QAAQ2K,uBAAyBA,uBACjC3K,QAAQgL,eAAiBA,eACzBhL,QAAQkL,eAAiBA,eACzBlL,QAAQqlC,kBAAoBA,kBAC5BrlC,QAAQ2nC,YAAcA,YACtB3nC,QAAQshC,iBAAmBA,iBAC3BthC,QAAQ6hC,4BAA8BA,4BACtC7hC,QAAQojC,sBAAwBA,sBAChCpjC,QAAQ8zG,cAAgBA,cACxB9zG,QAAQ6lC,gBAAkBA,gBAC1B7lC,QAAQ8lC,uCAAyCA,uCACjD9lC,QAAQ8F,aAAeA,aACvB9F,QAAQylC,kBAAoBA,kBAC5BzlC,QAAQy+G,qBAAuBA,qBAC/Bz+G,QAAQ2lC,qBAAuBA,qBAC/B3lC,QAAQmlC,mBAAqBA,mBAC7BnlC,QAAQ0lC,mBAAqBA,mBAC7B1lC,QAAQwsF,gBAAkBA,gBAC1BxsF,QAAQ2sF,mBAAqBA,mBAC7B3sF,QAAQ+nH,mBAAqBA,mBAC7B/nH,QAAQmoH,mBAAqBA,mBAC7BnoH,QAAQ6oH,oBAAsBA,oBAC9B7oH,QAAQ6mB,sCAAwCA,sCAChD7mB,QAAQ+mB,gCAAkCA,gCAC1C/mB,QAAQ0nF,6BAA+BA,6BACvC1nF,QAAQ8mB,YAAcA,YACtB9mB,QAAQgnB,aAAeA,aACvBhnB,QAAQynF,eAAiBA,eACzBznF,QAAQ06E,sBAAwBA,sBAChC16E,QAAQynH,UAAYA,UACpBznH,QAAQmmC,eAAiBA,eACzBnmC,QAAQ8mH,cAAgBA,cACxB9mH,QAAQmpE,WAAaA,WACrBnpE,QAAQuc,MAAQA,MAChBvc,QAAQsc,OAASA,OACjBtc,QAAQoc,IAAMA,IACdpc,QAAQqc,IAAMA,IACdrc,QAAQ4mC,oBAAsBA,oBAC9B5mC,QAAQ2nD,YAAcA,YACtB3nD,QAAQ8nD,UAAYA,UACpB9nD,QAAQ+nD,IAAMA,IACd/nD,QAAQioD,MAAQA,MAChBjoD,QAAQqmB,UAAYA,UACpBrmB,QAAQqoD,iBAAmBA,iBAC3BroD,QAAQuoD,MAAQA,MAChBvoD,QAAQ0oD,YAAcA,YACtB1oD,QAAQ8oD,aAAeA,aACvB9oD,QAAQipD,cAAgBA,cACxBjpD,QAAQmpD,iBAAmBA,iBAC3BnpD,QAAQqpD,UAAYA,UACpBrpD,QAAQupD,WAAaA,WACrBvpD,QAAQypD,YAAcA,YACtBzpD,QAAQ4pD,iBAAmBA,iBAC3B5pD,QAAQ8pD,aAAeA,aACvB9pD,QAAQgqD,WAAaA,WACrBhqD,QAAQkqD,cAAgBA,cACxBlqD,QAAQqqD,OAASA,OACjBrqD,QAAQ0qD,UAAYA,UACpB1qD,QAAQ4qD,WAAaA,WACrB5qD,QAAQ8qD,eAAiBA,eACzB9qD,QAAQgrD,aAAeA,aACvBhrD,QAAQomB,cAAgBA,cACxBpmB,QAAQkrD,gBAAkBA,gBAC1BlrD,QAAQorD,oBAAsBA,oBAC9BprD,QAAQqrD,eAAiBA,eACzBrrD,QAAQgN,UAAYA,UACpBhN,QAAQgnC,MAAQA,MAChBhnC,QAAQ+M,MAAQA,MAChB/M,QAAQouD,IAAMA,IACdpuD,QAAQkO,aAAeA,aACvBlO,QAAQ+O,QAAUA,QAClB/O,QAAQwvD,mBAAqBA,mBAC7BxvD,QAAQ0vD,2BAA6BA,2BACrC1vD,QAAQ+mC,OAASA,OACjB/mC,QAAQiwD,UAAYA,UACpBjwD,QAAQ6sF,sBAAwBA,sBAChC7sF,QAAQqnC,wBAA0BA,wBAClCrnC,QAAQqsB,mBAAqBA,mBAC7BrsB,QAAQ+lB,KAAOA,KACf/lB,QAAQ41D,UAAYA,UACpB51D,QAAQ81D,cAAgBA,cACxB91D,QAAQs7B,UAAYrd,YACpBje,QAAQge,QAAUA,QAClBhe,QAAQyU,QAAUA,QAClBzU,QAAQ6Q,SAAWA,SACnB7Q,QAAQ68D,gBAAkBA,gBAC1B78D,QAAQ48D,UAAYA,UACpB58D,QAAQomC,WAAaA,WACrBpmC,QAAQk+C,kBAAoBA,kBAC5Bl+C,QAAQmC,qBAAuBA,qBAC/BnC,QAAQouC,eAAiBA,eACzBpuC,QAAQoB,YAAcA,YACtBpB,QAAQ0B,cAAgBA,cACxB1B,QAAQ4B,YAAcA,YACtB5B,QAAQ6B,aAAeA,aACvB7B,QAAQ8B,YAAcA,YACtB9B,QAAQgC,eAAiBA,eACzBhC,QAAQwuC,eAAiBA,eACzBxuC,QAAQkpH,eAAiBA,eACzBlpH,QAAQ8xB,2BAA6BA,2BACrC9xB,QAAQ8nC,kBAAoBA,kBAC5B9nC,QAAQ4Q,cAAgBA,cACxB5Q,QAAQ0Q,gBAAkBA,gBAC1B1Q,QAAQ2Q,gBAAkBA,gBAC1B3Q,QAAQs1D,gBAAkBA,gBAC1Bt1D,QAAQy1D,WAAaA,WACrBz1D,QAAQqQ,eAAiBA,eACzBrQ,QAAQknC,yBAA2BA,yBACnClnC,QAAQsH,YAAcA,YACtBtH,QAAQ8hD,gBAAkBA,gBAC1B9hD,QAAQ4iD,oBAAsBA,oBAC9B5iD,QAAQ+iD,gBAAkBA,gBAC1B/iD,QAAQorG,wBAA0BA,wBAClCprG,QAAQqrG,oBAAsBA,oBAC9BrrG,QAAQurG,mBAAqBA,mBAC7BvrG,QAAQ4nC,cAAgBA,cACxB5nC,QAAQsgF,mBAAqBA,mBAC7BtgF,QAAQugF,oBAAsBA,oBAC9BvgF,QAAQonC,eAAiBA,eACzBpnC,QAAQ+kB,aAAeA,aACvB/kB,QAAQilB,yBAA2BA,yBACnCjlB,QAAQgmB,wBAA0BA,wBAElCphB,OAAOgX,eAAe5b,QAAS,cAAgBwD,OAAO","file":"/home/travis/build/angular/angular/dist/packages-dist/compiler/bundles/compiler.umd.min.js","sourcesContent":["/**\n * @license Angular v4.2.0-beta.0-b9ed97c\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', '@angular/core'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.compiler = global.ng.compiler || {}),global.ng.core));\n}(this, (function (exports,_angular_core) { 'use strict';\n\nvar __extends = (undefined && undefined.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * @license Angular v4.2.0-beta.0-b9ed97c\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new _angular_core.Version('4.2.0-beta.0-b9ed97c');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A segment of text within the template.\n */\nvar TextAst = (function () {\n    /**\n     * @param {?} value\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    function TextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TextAst.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n    return TextAst;\n}());\n/**\n * A bound expression within the text of a template.\n */\nvar BoundTextAst = (function () {\n    /**\n     * @param {?} value\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    function BoundTextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundTextAst.prototype.visit = function (visitor, context) {\n        return visitor.visitBoundText(this, context);\n    };\n    return BoundTextAst;\n}());\n/**\n * A plain attribute on an element.\n */\nvar AttrAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function AttrAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AttrAst.prototype.visit = function (visitor, context) { return visitor.visitAttr(this, context); };\n    return AttrAst;\n}());\n/**\n * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n * `[\\@trigger]=\"stateExp\"`)\n */\nvar BoundElementPropertyAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} type\n     * @param {?} securityContext\n     * @param {?} value\n     * @param {?} unit\n     * @param {?} sourceSpan\n     */\n    function BoundElementPropertyAst(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundElementPropertyAst.prototype.visit = function (visitor, context) {\n        return visitor.visitElementProperty(this, context);\n    };\n    Object.defineProperty(BoundElementPropertyAst.prototype, \"isAnimation\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.type === PropertyBindingType.Animation; },\n        enumerable: true,\n        configurable: true\n    });\n    return BoundElementPropertyAst;\n}());\n/**\n * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n * `(\\@trigger.phase)=\"callback($event)\"`).\n */\nvar BoundEventAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @param {?} handler\n     * @param {?} sourceSpan\n     */\n    function BoundEventAst(name, target, phase, handler, sourceSpan) {\n        this.name = name;\n        this.target = target;\n        this.phase = phase;\n        this.handler = handler;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    BoundEventAst.calcFullName = function (name, target, phase) {\n        if (target) {\n            return target + \":\" + name;\n        }\n        else if (phase) {\n            return \"@\" + name + \".\" + phase;\n        }\n        else {\n            return name;\n        }\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundEventAst.prototype.visit = function (visitor, context) {\n        return visitor.visitEvent(this, context);\n    };\n    Object.defineProperty(BoundEventAst.prototype, \"fullName\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return BoundEventAst.calcFullName(this.name, this.target, this.phase); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BoundEventAst.prototype, \"isAnimation\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return !!this.phase; },\n        enumerable: true,\n        configurable: true\n    });\n    return BoundEventAst;\n}());\n/**\n * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n */\nvar ReferenceAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function ReferenceAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReferenceAst.prototype.visit = function (visitor, context) {\n        return visitor.visitReference(this, context);\n    };\n    return ReferenceAst;\n}());\n/**\n * A variable declaration on a <ng-template> (e.g. `var-someName=\"someLocalName\"`).\n */\nvar VariableAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function VariableAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    VariableAst.prototype.visit = function (visitor, context) {\n        return visitor.visitVariable(this, context);\n    };\n    return VariableAst;\n}());\n/**\n * An element declaration in a template.\n */\nvar ElementAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} attrs\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} references\n     * @param {?} directives\n     * @param {?} providers\n     * @param {?} hasViewContainer\n     * @param {?} queryMatches\n     * @param {?} children\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     * @param {?} endSourceSpan\n     */\n    function ElementAst(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan, endSourceSpan) {\n        this.name = name;\n        this.attrs = attrs;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.references = references;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ElementAst.prototype.visit = function (visitor, context) {\n        return visitor.visitElement(this, context);\n    };\n    return ElementAst;\n}());\n/**\n * A `<ng-template>` element included in an Angular template.\n */\nvar EmbeddedTemplateAst = (function () {\n    /**\n     * @param {?} attrs\n     * @param {?} outputs\n     * @param {?} references\n     * @param {?} variables\n     * @param {?} directives\n     * @param {?} providers\n     * @param {?} hasViewContainer\n     * @param {?} queryMatches\n     * @param {?} children\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    function EmbeddedTemplateAst(attrs, outputs, references, variables, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan) {\n        this.attrs = attrs;\n        this.outputs = outputs;\n        this.references = references;\n        this.variables = variables;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    EmbeddedTemplateAst.prototype.visit = function (visitor, context) {\n        return visitor.visitEmbeddedTemplate(this, context);\n    };\n    return EmbeddedTemplateAst;\n}());\n/**\n * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n */\nvar BoundDirectivePropertyAst = (function () {\n    /**\n     * @param {?} directiveName\n     * @param {?} templateName\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\n        this.directiveName = directiveName;\n        this.templateName = templateName;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundDirectivePropertyAst.prototype.visit = function (visitor, context) {\n        return visitor.visitDirectiveProperty(this, context);\n    };\n    return BoundDirectivePropertyAst;\n}());\n/**\n * A directive declared on an element.\n */\nvar DirectiveAst = (function () {\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} hostProperties\n     * @param {?} hostEvents\n     * @param {?} contentQueryStartId\n     * @param {?} sourceSpan\n     */\n    function DirectiveAst(directive, inputs, hostProperties, hostEvents, contentQueryStartId, sourceSpan) {\n        this.directive = directive;\n        this.inputs = inputs;\n        this.hostProperties = hostProperties;\n        this.hostEvents = hostEvents;\n        this.contentQueryStartId = contentQueryStartId;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DirectiveAst.prototype.visit = function (visitor, context) {\n        return visitor.visitDirective(this, context);\n    };\n    return DirectiveAst;\n}());\n/**\n * A provider declared on an element\n */\nvar ProviderAst = (function () {\n    /**\n     * @param {?} token\n     * @param {?} multiProvider\n     * @param {?} eager\n     * @param {?} providers\n     * @param {?} providerType\n     * @param {?} lifecycleHooks\n     * @param {?} sourceSpan\n     */\n    function ProviderAst(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan) {\n        this.token = token;\n        this.multiProvider = multiProvider;\n        this.eager = eager;\n        this.providers = providers;\n        this.providerType = providerType;\n        this.lifecycleHooks = lifecycleHooks;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ProviderAst.prototype.visit = function (visitor, context) {\n        // No visit method in the visitor for now...\n        return null;\n    };\n    return ProviderAst;\n}());\nvar ProviderAstType = {};\nProviderAstType.PublicService = 0;\nProviderAstType.PrivateService = 1;\nProviderAstType.Component = 2;\nProviderAstType.Directive = 3;\nProviderAstType.Builtin = 4;\nProviderAstType[ProviderAstType.PublicService] = \"PublicService\";\nProviderAstType[ProviderAstType.PrivateService] = \"PrivateService\";\nProviderAstType[ProviderAstType.Component] = \"Component\";\nProviderAstType[ProviderAstType.Directive] = \"Directive\";\nProviderAstType[ProviderAstType.Builtin] = \"Builtin\";\n/**\n * Position where content is to be projected (instance of `<ng-content>` in a template).\n */\nvar NgContentAst = (function () {\n    /**\n     * @param {?} index\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    function NgContentAst(index, ngContentIndex, sourceSpan) {\n        this.index = index;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NgContentAst.prototype.visit = function (visitor, context) {\n        return visitor.visitNgContent(this, context);\n    };\n    return NgContentAst;\n}());\nvar PropertyBindingType = {};\nPropertyBindingType.Property = 0;\nPropertyBindingType.Attribute = 1;\nPropertyBindingType.Class = 2;\nPropertyBindingType.Style = 3;\nPropertyBindingType.Animation = 4;\nPropertyBindingType[PropertyBindingType.Property] = \"Property\";\nPropertyBindingType[PropertyBindingType.Attribute] = \"Attribute\";\nPropertyBindingType[PropertyBindingType.Class] = \"Class\";\nPropertyBindingType[PropertyBindingType.Style] = \"Style\";\nPropertyBindingType[PropertyBindingType.Animation] = \"Animation\";\n/**\n * Visit every node in a list of {\\@link TemplateAst}s with the given {\\@link TemplateAstVisitor}.\n * @param {?} visitor\n * @param {?} asts\n * @param {?=} context\n * @return {?}\n */\nfunction templateVisitAll(visitor, asts, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    asts.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\n/**\n * A token representing the a reference to a static type.\n *\n * This token is unique for a filePath and name and can be used as a hash table key.\n */\nvar StaticSymbol = (function () {\n    /**\n     * @param {?} filePath\n     * @param {?} name\n     * @param {?} members\n     */\n    function StaticSymbol(filePath, name, members) {\n        this.filePath = filePath;\n        this.name = name;\n        this.members = members;\n    }\n    /**\n     * @return {?}\n     */\n    StaticSymbol.prototype.assertNoMembers = function () {\n        if (this.members.length) {\n            throw new Error(\"Illegal state: symbol without members expected, but got \" + JSON.stringify(this) + \".\");\n        }\n    };\n    return StaticSymbol;\n}());\n/**\n * A cache of static symbol used by the StaticReflector to return the same symbol for the\n * same symbol values.\n */\nvar StaticSymbolCache = (function () {\n    function StaticSymbolCache() {\n        this.cache = new Map();\n    }\n    /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticSymbolCache.prototype.get = function (declarationFile, name, members) {\n        members = members || [];\n        var /** @type {?} */ memberSuffix = members.length ? \".\" + members.join('.') : '';\n        var /** @type {?} */ key = \"\\\"\" + declarationFile + \"\\\".\" + name + memberSuffix;\n        var /** @type {?} */ result = this.cache.get(key);\n        if (!result) {\n            result = new StaticSymbol(declarationFile, name, members);\n            this.cache.set(key, result);\n        }\n        return result;\n    };\n    return StaticSymbolCache;\n}());\nvar TagContentType = {};\nTagContentType.RAW_TEXT = 0;\nTagContentType.ESCAPABLE_RAW_TEXT = 1;\nTagContentType.PARSABLE_DATA = 2;\nTagContentType[TagContentType.RAW_TEXT] = \"RAW_TEXT\";\nTagContentType[TagContentType.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTagContentType[TagContentType.PARSABLE_DATA] = \"PARSABLE_DATA\";\n/**\n * @param {?} elementName\n * @return {?}\n */\nfunction splitNsName(elementName) {\n    if (elementName[0] != ':') {\n        return [null, elementName];\n    }\n    var /** @type {?} */ colonIndex = elementName.indexOf(':', 1);\n    if (colonIndex == -1) {\n        throw new Error(\"Unsupported format \\\"\" + elementName + \"\\\" expecting \\\":namespace:name\\\"\");\n    }\n    return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContainer(tagName) {\n    return splitNsName(tagName)[1] === 'ng-container';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContent(tagName) {\n    return splitNsName(tagName)[1] === 'ng-content';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgTemplate(tagName) {\n    return splitNsName(tagName)[1] === 'ng-template';\n}\n/**\n * @param {?} fullName\n * @return {?}\n */\nfunction getNsPrefix(fullName) {\n    return fullName === null ? null : splitNsName(fullName)[0];\n}\n/**\n * @param {?} prefix\n * @param {?} localName\n * @return {?}\n */\nfunction mergeNsAndName(prefix, localName) {\n    return prefix ? \":\" + prefix + \":\" + localName : localName;\n}\n// see http://www.w3.org/TR/html51/syntax.html#named-character-references\n// see https://html.spec.whatwg.org/multipage/entities.json\n// This list is not exhaustive to keep the compiler footprint low.\n// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not\n// exist.\nvar NAMED_ENTITIES = {\n    'Aacute': '\\u00C1',\n    'aacute': '\\u00E1',\n    'Acirc': '\\u00C2',\n    'acirc': '\\u00E2',\n    'acute': '\\u00B4',\n    'AElig': '\\u00C6',\n    'aelig': '\\u00E6',\n    'Agrave': '\\u00C0',\n    'agrave': '\\u00E0',\n    'alefsym': '\\u2135',\n    'Alpha': '\\u0391',\n    'alpha': '\\u03B1',\n    'amp': '&',\n    'and': '\\u2227',\n    'ang': '\\u2220',\n    'apos': '\\u0027',\n    'Aring': '\\u00C5',\n    'aring': '\\u00E5',\n    'asymp': '\\u2248',\n    'Atilde': '\\u00C3',\n    'atilde': '\\u00E3',\n    'Auml': '\\u00C4',\n    'auml': '\\u00E4',\n    'bdquo': '\\u201E',\n    'Beta': '\\u0392',\n    'beta': '\\u03B2',\n    'brvbar': '\\u00A6',\n    'bull': '\\u2022',\n    'cap': '\\u2229',\n    'Ccedil': '\\u00C7',\n    'ccedil': '\\u00E7',\n    'cedil': '\\u00B8',\n    'cent': '\\u00A2',\n    'Chi': '\\u03A7',\n    'chi': '\\u03C7',\n    'circ': '\\u02C6',\n    'clubs': '\\u2663',\n    'cong': '\\u2245',\n    'copy': '\\u00A9',\n    'crarr': '\\u21B5',\n    'cup': '\\u222A',\n    'curren': '\\u00A4',\n    'dagger': '\\u2020',\n    'Dagger': '\\u2021',\n    'darr': '\\u2193',\n    'dArr': '\\u21D3',\n    'deg': '\\u00B0',\n    'Delta': '\\u0394',\n    'delta': '\\u03B4',\n    'diams': '\\u2666',\n    'divide': '\\u00F7',\n    'Eacute': '\\u00C9',\n    'eacute': '\\u00E9',\n    'Ecirc': '\\u00CA',\n    'ecirc': '\\u00EA',\n    'Egrave': '\\u00C8',\n    'egrave': '\\u00E8',\n    'empty': '\\u2205',\n    'emsp': '\\u2003',\n    'ensp': '\\u2002',\n    'Epsilon': '\\u0395',\n    'epsilon': '\\u03B5',\n    'equiv': '\\u2261',\n    'Eta': '\\u0397',\n    'eta': '\\u03B7',\n    'ETH': '\\u00D0',\n    'eth': '\\u00F0',\n    'Euml': '\\u00CB',\n    'euml': '\\u00EB',\n    'euro': '\\u20AC',\n    'exist': '\\u2203',\n    'fnof': '\\u0192',\n    'forall': '\\u2200',\n    'frac12': '\\u00BD',\n    'frac14': '\\u00BC',\n    'frac34': '\\u00BE',\n    'frasl': '\\u2044',\n    'Gamma': '\\u0393',\n    'gamma': '\\u03B3',\n    'ge': '\\u2265',\n    'gt': '>',\n    'harr': '\\u2194',\n    'hArr': '\\u21D4',\n    'hearts': '\\u2665',\n    'hellip': '\\u2026',\n    'Iacute': '\\u00CD',\n    'iacute': '\\u00ED',\n    'Icirc': '\\u00CE',\n    'icirc': '\\u00EE',\n    'iexcl': '\\u00A1',\n    'Igrave': '\\u00CC',\n    'igrave': '\\u00EC',\n    'image': '\\u2111',\n    'infin': '\\u221E',\n    'int': '\\u222B',\n    'Iota': '\\u0399',\n    'iota': '\\u03B9',\n    'iquest': '\\u00BF',\n    'isin': '\\u2208',\n    'Iuml': '\\u00CF',\n    'iuml': '\\u00EF',\n    'Kappa': '\\u039A',\n    'kappa': '\\u03BA',\n    'Lambda': '\\u039B',\n    'lambda': '\\u03BB',\n    'lang': '\\u27E8',\n    'laquo': '\\u00AB',\n    'larr': '\\u2190',\n    'lArr': '\\u21D0',\n    'lceil': '\\u2308',\n    'ldquo': '\\u201C',\n    'le': '\\u2264',\n    'lfloor': '\\u230A',\n    'lowast': '\\u2217',\n    'loz': '\\u25CA',\n    'lrm': '\\u200E',\n    'lsaquo': '\\u2039',\n    'lsquo': '\\u2018',\n    'lt': '<',\n    'macr': '\\u00AF',\n    'mdash': '\\u2014',\n    'micro': '\\u00B5',\n    'middot': '\\u00B7',\n    'minus': '\\u2212',\n    'Mu': '\\u039C',\n    'mu': '\\u03BC',\n    'nabla': '\\u2207',\n    'nbsp': '\\u00A0',\n    'ndash': '\\u2013',\n    'ne': '\\u2260',\n    'ni': '\\u220B',\n    'not': '\\u00AC',\n    'notin': '\\u2209',\n    'nsub': '\\u2284',\n    'Ntilde': '\\u00D1',\n    'ntilde': '\\u00F1',\n    'Nu': '\\u039D',\n    'nu': '\\u03BD',\n    'Oacute': '\\u00D3',\n    'oacute': '\\u00F3',\n    'Ocirc': '\\u00D4',\n    'ocirc': '\\u00F4',\n    'OElig': '\\u0152',\n    'oelig': '\\u0153',\n    'Ograve': '\\u00D2',\n    'ograve': '\\u00F2',\n    'oline': '\\u203E',\n    'Omega': '\\u03A9',\n    'omega': '\\u03C9',\n    'Omicron': '\\u039F',\n    'omicron': '\\u03BF',\n    'oplus': '\\u2295',\n    'or': '\\u2228',\n    'ordf': '\\u00AA',\n    'ordm': '\\u00BA',\n    'Oslash': '\\u00D8',\n    'oslash': '\\u00F8',\n    'Otilde': '\\u00D5',\n    'otilde': '\\u00F5',\n    'otimes': '\\u2297',\n    'Ouml': '\\u00D6',\n    'ouml': '\\u00F6',\n    'para': '\\u00B6',\n    'permil': '\\u2030',\n    'perp': '\\u22A5',\n    'Phi': '\\u03A6',\n    'phi': '\\u03C6',\n    'Pi': '\\u03A0',\n    'pi': '\\u03C0',\n    'piv': '\\u03D6',\n    'plusmn': '\\u00B1',\n    'pound': '\\u00A3',\n    'prime': '\\u2032',\n    'Prime': '\\u2033',\n    'prod': '\\u220F',\n    'prop': '\\u221D',\n    'Psi': '\\u03A8',\n    'psi': '\\u03C8',\n    'quot': '\\u0022',\n    'radic': '\\u221A',\n    'rang': '\\u27E9',\n    'raquo': '\\u00BB',\n    'rarr': '\\u2192',\n    'rArr': '\\u21D2',\n    'rceil': '\\u2309',\n    'rdquo': '\\u201D',\n    'real': '\\u211C',\n    'reg': '\\u00AE',\n    'rfloor': '\\u230B',\n    'Rho': '\\u03A1',\n    'rho': '\\u03C1',\n    'rlm': '\\u200F',\n    'rsaquo': '\\u203A',\n    'rsquo': '\\u2019',\n    'sbquo': '\\u201A',\n    'Scaron': '\\u0160',\n    'scaron': '\\u0161',\n    'sdot': '\\u22C5',\n    'sect': '\\u00A7',\n    'shy': '\\u00AD',\n    'Sigma': '\\u03A3',\n    'sigma': '\\u03C3',\n    'sigmaf': '\\u03C2',\n    'sim': '\\u223C',\n    'spades': '\\u2660',\n    'sub': '\\u2282',\n    'sube': '\\u2286',\n    'sum': '\\u2211',\n    'sup': '\\u2283',\n    'sup1': '\\u00B9',\n    'sup2': '\\u00B2',\n    'sup3': '\\u00B3',\n    'supe': '\\u2287',\n    'szlig': '\\u00DF',\n    'Tau': '\\u03A4',\n    'tau': '\\u03C4',\n    'there4': '\\u2234',\n    'Theta': '\\u0398',\n    'theta': '\\u03B8',\n    'thetasym': '\\u03D1',\n    'thinsp': '\\u2009',\n    'THORN': '\\u00DE',\n    'thorn': '\\u00FE',\n    'tilde': '\\u02DC',\n    'times': '\\u00D7',\n    'trade': '\\u2122',\n    'Uacute': '\\u00DA',\n    'uacute': '\\u00FA',\n    'uarr': '\\u2191',\n    'uArr': '\\u21D1',\n    'Ucirc': '\\u00DB',\n    'ucirc': '\\u00FB',\n    'Ugrave': '\\u00D9',\n    'ugrave': '\\u00F9',\n    'uml': '\\u00A8',\n    'upsih': '\\u03D2',\n    'Upsilon': '\\u03A5',\n    'upsilon': '\\u03C5',\n    'Uuml': '\\u00DC',\n    'uuml': '\\u00FC',\n    'weierp': '\\u2118',\n    'Xi': '\\u039E',\n    'xi': '\\u03BE',\n    'Yacute': '\\u00DD',\n    'yacute': '\\u00FD',\n    'yen': '\\u00A5',\n    'yuml': '\\u00FF',\n    'Yuml': '\\u0178',\n    'Zeta': '\\u0396',\n    'zeta': '\\u03B6',\n    'zwj': '\\u200D',\n    'zwnj': '\\u200C',\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlTagDefinition = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function HtmlTagDefinition(_a) {\n        var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, _c = _b.contentType, contentType = _c === void 0 ? TagContentType.PARSABLE_DATA : _c, _d = _b.closedByParent, closedByParent = _d === void 0 ? false : _d, _e = _b.isVoid, isVoid = _e === void 0 ? false : _e, _f = _b.ignoreFirstLf, ignoreFirstLf = _f === void 0 ? false : _f;\n        var _this = this;\n        this.closedByChildren = {};\n        this.closedByParent = false;\n        this.canSelfClose = false;\n        if (closedByChildren && closedByChildren.length > 0) {\n            closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\n        }\n        this.isVoid = isVoid;\n        this.closedByParent = closedByParent || isVoid;\n        if (requiredParents && requiredParents.length > 0) {\n            this.requiredParents = {};\n            // The first parent is the list is automatically when none of the listed parents are present\n            this.parentToAdd = requiredParents[0];\n            requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\n        }\n        this.implicitNamespacePrefix = implicitNamespacePrefix || null;\n        this.contentType = contentType;\n        this.ignoreFirstLf = ignoreFirstLf;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.requireExtraParent = function (currentParent) {\n        if (!this.requiredParents) {\n            return false;\n        }\n        if (!currentParent) {\n            return true;\n        }\n        var /** @type {?} */ lcParent = currentParent.toLowerCase();\n        var /** @type {?} */ isParentTemplate = lcParent === 'template' || currentParent === 'ng-template';\n        return !isParentTemplate && this.requiredParents[lcParent] != true;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.isClosedByChild = function (name) {\n        return this.isVoid || name.toLowerCase() in this.closedByChildren;\n    };\n    return HtmlTagDefinition;\n}());\n// see http://www.w3.org/TR/html51/syntax.html#optional-tags\n// This implementation does not fully conform to the HTML5 spec.\nvar TAG_DEFINITIONS = {\n    'base': new HtmlTagDefinition({ isVoid: true }),\n    'meta': new HtmlTagDefinition({ isVoid: true }),\n    'area': new HtmlTagDefinition({ isVoid: true }),\n    'embed': new HtmlTagDefinition({ isVoid: true }),\n    'link': new HtmlTagDefinition({ isVoid: true }),\n    'img': new HtmlTagDefinition({ isVoid: true }),\n    'input': new HtmlTagDefinition({ isVoid: true }),\n    'param': new HtmlTagDefinition({ isVoid: true }),\n    'hr': new HtmlTagDefinition({ isVoid: true }),\n    'br': new HtmlTagDefinition({ isVoid: true }),\n    'source': new HtmlTagDefinition({ isVoid: true }),\n    'track': new HtmlTagDefinition({ isVoid: true }),\n    'wbr': new HtmlTagDefinition({ isVoid: true }),\n    'p': new HtmlTagDefinition({\n        closedByChildren: [\n            'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset', 'footer', 'form',\n            'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr',\n            'main', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'\n        ],\n        closedByParent: true\n    }),\n    'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n    'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n    'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n    'tr': new HtmlTagDefinition({\n        closedByChildren: ['tr'],\n        requiredParents: ['tbody', 'tfoot', 'thead'],\n        closedByParent: true\n    }),\n    'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n    'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n    'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n    'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n    'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n    'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n    'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n    'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n    'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n    'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'style': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'script': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'title': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT }),\n    'textarea': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n};\nvar _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getHtmlTagDefinition(tagName) {\n    return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' +\n    '([-\\\\w]+)|' +\n    '(?:\\\\.([-\\\\w]+))|' +\n    // \"-\" should appear first in the regexp below as FF31 parses \"[.-\\w]\" as a range\n    '(?:\\\\[([-.\\\\w*]+)(?:=([\\\"\\']?)([^\\\\]\\\"\\']*)\\\\5)?\\\\])|' +\n    // \"[name=\"value\"]\",\n    // \"[name='value']\"\n    '(\\\\))|' +\n    '(\\\\s*,\\\\s*)', // \",\"\n'g');\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nvar CssSelector = (function () {\n    function CssSelector() {\n        this.element = null;\n        this.classNames = [];\n        this.attrs = [];\n        this.notSelectors = [];\n    }\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CssSelector.parse = function (selector) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ _addResult = function (res, cssSel) {\n            if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n                cssSel.attrs.length == 0) {\n                cssSel.element = '*';\n            }\n            res.push(cssSel);\n        };\n        var /** @type {?} */ cssSelector = new CssSelector();\n        var /** @type {?} */ match;\n        var /** @type {?} */ current = cssSelector;\n        var /** @type {?} */ inNot = false;\n        _SELECTOR_REGEXP.lastIndex = 0;\n        while (match = _SELECTOR_REGEXP.exec(selector)) {\n            if (match[1]) {\n                if (inNot) {\n                    throw new Error('Nesting :not is not allowed in a selector');\n                }\n                inNot = true;\n                current = new CssSelector();\n                cssSelector.notSelectors.push(current);\n            }\n            if (match[2]) {\n                current.setElement(match[2]);\n            }\n            if (match[3]) {\n                current.addClassName(match[3]);\n            }\n            if (match[4]) {\n                current.addAttribute(match[4], match[6]);\n            }\n            if (match[7]) {\n                inNot = false;\n                current = cssSelector;\n            }\n            if (match[8]) {\n                if (inNot) {\n                    throw new Error('Multiple selectors in :not are not supported');\n                }\n                _addResult(results, cssSelector);\n                cssSelector = current = new CssSelector();\n            }\n        }\n        _addResult(results, cssSelector);\n        return results;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.isElementSelector = function () {\n        return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n            this.notSelectors.length === 0;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.hasElementSelector = function () { return !!this.element; };\n    /**\n     * @param {?=} element\n     * @return {?}\n     */\n    CssSelector.prototype.setElement = function (element) {\n        if (element === void 0) { element = null; }\n        this.element = element;\n    };\n    /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    CssSelector.prototype.getMatchingElementTemplate = function () {\n        var /** @type {?} */ tagName = this.element || 'div';\n        var /** @type {?} */ classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\n        var /** @type {?} */ attrs = '';\n        for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n            var /** @type {?} */ attrName = this.attrs[i];\n            var /** @type {?} */ attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\n            attrs += \" \" + attrName + attrValue;\n        }\n        return getHtmlTagDefinition(tagName).isVoid ? \"<\" + tagName + classAttr + attrs + \"/>\" :\n            \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\n    };\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    CssSelector.prototype.addAttribute = function (name, value) {\n        if (value === void 0) { value = ''; }\n        this.attrs.push(name, value && value.toLowerCase() || '');\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    CssSelector.prototype.addClassName = function (name) { this.classNames.push(name.toLowerCase()); };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.toString = function () {\n        var /** @type {?} */ res = this.element || '';\n        if (this.classNames) {\n            this.classNames.forEach(function (klass) { return res += \".\" + klass; });\n        }\n        if (this.attrs) {\n            for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n                var /** @type {?} */ name = this.attrs[i];\n                var /** @type {?} */ value = this.attrs[i + 1];\n                res += \"[\" + name + (value ? '=' + value : '') + \"]\";\n            }\n        }\n        this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\n        return res;\n    };\n    return CssSelector;\n}());\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nvar SelectorMatcher = (function () {\n    function SelectorMatcher() {\n        this._elementMap = new Map();\n        this._elementPartialMap = new Map();\n        this._classMap = new Map();\n        this._classPartialMap = new Map();\n        this._attrValueMap = new Map();\n        this._attrValuePartialMap = new Map();\n        this._listContexts = [];\n    }\n    /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    SelectorMatcher.createNotMatcher = function (notSelectors) {\n        var /** @type {?} */ notMatcher = new SelectorMatcher();\n        notMatcher.addSelectables(notSelectors, null);\n        return notMatcher;\n    };\n    /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    SelectorMatcher.prototype.addSelectables = function (cssSelectors, callbackCtxt) {\n        var /** @type {?} */ listContext = ((null));\n        if (cssSelectors.length > 1) {\n            listContext = new SelectorListContext(cssSelectors);\n            this._listContexts.push(listContext);\n        }\n        for (var /** @type {?} */ i = 0; i < cssSelectors.length; i++) {\n            this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n        }\n    };\n    /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addSelectable = function (cssSelector, callbackCtxt, listContext) {\n        var /** @type {?} */ matcher = this;\n        var /** @type {?} */ element = cssSelector.element;\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        var /** @type {?} */ selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n        if (element) {\n            var /** @type {?} */ isTerminal = attrs.length === 0 && classNames.length === 0;\n            if (isTerminal) {\n                this._addTerminal(matcher._elementMap, element, selectable);\n            }\n            else {\n                matcher = this._addPartial(matcher._elementPartialMap, element);\n            }\n        }\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ isTerminal = attrs.length === 0 && i === classNames.length - 1;\n                var /** @type {?} */ className = classNames[i];\n                if (isTerminal) {\n                    this._addTerminal(matcher._classMap, className, selectable);\n                }\n                else {\n                    matcher = this._addPartial(matcher._classPartialMap, className);\n                }\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ isTerminal = i === attrs.length - 2;\n                var /** @type {?} */ name = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                if (isTerminal) {\n                    var /** @type {?} */ terminalMap = matcher._attrValueMap;\n                    var /** @type {?} */ terminalValuesMap = terminalMap.get(name);\n                    if (!terminalValuesMap) {\n                        terminalValuesMap = new Map();\n                        terminalMap.set(name, terminalValuesMap);\n                    }\n                    this._addTerminal(terminalValuesMap, value, selectable);\n                }\n                else {\n                    var /** @type {?} */ partialMap = matcher._attrValuePartialMap;\n                    var /** @type {?} */ partialValuesMap = partialMap.get(name);\n                    if (!partialValuesMap) {\n                        partialValuesMap = new Map();\n                        partialMap.set(name, partialValuesMap);\n                    }\n                    matcher = this._addPartial(partialValuesMap, value);\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addTerminal = function (map, name, selectable) {\n        var /** @type {?} */ terminalList = map.get(name);\n        if (!terminalList) {\n            terminalList = [];\n            map.set(name, terminalList);\n        }\n        terminalList.push(selectable);\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addPartial = function (map, name) {\n        var /** @type {?} */ matcher = map.get(name);\n        if (!matcher) {\n            matcher = new SelectorMatcher();\n            map.set(name, matcher);\n        }\n        return matcher;\n    };\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    SelectorMatcher.prototype.match = function (cssSelector, matchedCallback) {\n        var /** @type {?} */ result = false;\n        var /** @type {?} */ element = ((cssSelector.element));\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        for (var /** @type {?} */ i = 0; i < this._listContexts.length; i++) {\n            this._listContexts[i].alreadyMatched = false;\n        }\n        result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n        result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n            result;\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ className = classNames[i];\n                result =\n                    this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n                result =\n                    this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n                        result;\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ name = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                var /** @type {?} */ terminalValuesMap = ((this._attrValueMap.get(name)));\n                if (value) {\n                    result =\n                        this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n                var /** @type {?} */ partialValuesMap = ((this._attrValuePartialMap.get(name)));\n                if (value) {\n                    result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n            }\n        }\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchTerminal = function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ selectables = map.get(name) || [];\n        var /** @type {?} */ starSelectables = ((map.get('*')));\n        if (starSelectables) {\n            selectables = selectables.concat(starSelectables);\n        }\n        if (selectables.length === 0) {\n            return false;\n        }\n        var /** @type {?} */ selectable;\n        var /** @type {?} */ result = false;\n        for (var /** @type {?} */ i = 0; i < selectables.length; i++) {\n            selectable = selectables[i];\n            result = selectable.finalize(cssSelector, matchedCallback) || result;\n        }\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchPartial = function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ nestedSelector = map.get(name);\n        if (!nestedSelector) {\n            return false;\n        }\n        // TODO(perf): get rid of recursion and measure again\n        // TODO(perf): don't pass the whole selector into the recursion,\n        // but only the not processed parts\n        return nestedSelector.match(cssSelector, matchedCallback);\n    };\n    return SelectorMatcher;\n}());\nvar SelectorListContext = (function () {\n    /**\n     * @param {?} selectors\n     */\n    function SelectorListContext(selectors) {\n        this.selectors = selectors;\n        this.alreadyMatched = false;\n    }\n    return SelectorListContext;\n}());\nvar SelectorContext = (function () {\n    /**\n     * @param {?} selector\n     * @param {?} cbContext\n     * @param {?} listContext\n     */\n    function SelectorContext(selector, cbContext, listContext) {\n        this.selector = selector;\n        this.cbContext = cbContext;\n        this.listContext = listContext;\n        this.notSelectors = selector.notSelectors;\n    }\n    /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    SelectorContext.prototype.finalize = function (cssSelector, callback) {\n        var /** @type {?} */ result = true;\n        if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n            var /** @type {?} */ notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n            result = !notMatcher.match(cssSelector, null);\n        }\n        if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n            if (this.listContext) {\n                this.listContext.alreadyMatched = true;\n            }\n            callback(this.selector, this.cbContext);\n        }\n        return result;\n    };\n    return SelectorContext;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar MODULE_SUFFIX = '';\nvar DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n/**\n * @param {?} input\n * @return {?}\n */\n/**\n * @param {?} input\n * @return {?}\n */\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return m[1].toUpperCase();\n    });\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtColon(input, defaultValues) {\n    return _splitAt(input, ':', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtPeriod(input, defaultValues) {\n    return _splitAt(input, '.', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} character\n * @param {?} defaultValues\n * @return {?}\n */\nfunction _splitAt(input, character, defaultValues) {\n    var /** @type {?} */ characterIndex = input.indexOf(character);\n    if (characterIndex == -1)\n        return defaultValues;\n    return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n}\n/**\n * @param {?} value\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nfunction visitValue(value, visitor, context) {\n    if (Array.isArray(value)) {\n        return visitor.visitArray(/** @type {?} */ (value), context);\n    }\n    if (isStrictStringMap(value)) {\n        return visitor.visitStringMap(/** @type {?} */ (value), context);\n    }\n    if (value == null || typeof value == 'string' || typeof value == 'number' ||\n        typeof value == 'boolean') {\n        return visitor.visitPrimitive(value, context);\n    }\n    return visitor.visitOther(value, context);\n}\n/**\n * @param {?} val\n * @return {?}\n */\nfunction isDefined(val) {\n    return val !== null && val !== undefined;\n}\n/**\n * @template T\n * @param {?} val\n * @return {?}\n */\nfunction noUndefined(val) {\n    return val === undefined ? ((null)) : val;\n}\nvar ValueTransformer = (function () {\n    function ValueTransformer() {\n    }\n    /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitArray = function (arr, context) {\n        var _this = this;\n        return arr.map(function (value) { return visitValue(value, _this, context); });\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitStringMap = function (map, context) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        Object.keys(map).forEach(function (key) { result[key] = visitValue(map[key], _this, context); });\n        return result;\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitPrimitive = function (value, context) { return value; };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitOther = function (value, context) { return value; };\n    return ValueTransformer;\n}());\nvar SyncAsyncResult = (function () {\n    /**\n     * @param {?} syncResult\n     * @param {?=} asyncResult\n     */\n    function SyncAsyncResult(syncResult, asyncResult) {\n        if (asyncResult === void 0) { asyncResult = null; }\n        this.syncResult = syncResult;\n        this.asyncResult = asyncResult;\n        if (!asyncResult) {\n            this.asyncResult = Promise.resolve(syncResult);\n        }\n    }\n    return SyncAsyncResult;\n}());\n/**\n * @param {?} msg\n * @return {?}\n */\nfunction syntaxError(msg) {\n    var /** @type {?} */ error = Error(msg);\n    ((error))[ERROR_SYNTAX_ERROR] = true;\n    return error;\n}\nvar ERROR_SYNTAX_ERROR = 'ngSyntaxError';\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isSyntaxError(error) {\n    return ((error))[ERROR_SYNTAX_ERROR];\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction escapeRegExp(s) {\n    return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\nvar STRING_MAP_PROTO = Object.getPrototypeOf({});\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isStrictStringMap(obj) {\n    return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction utf8Encode(str) {\n    var /** @type {?} */ encoded = '';\n    for (var /** @type {?} */ index = 0; index < str.length; index++) {\n        var /** @type {?} */ codePoint = str.charCodeAt(index);\n        // decode surrogate\n        // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        if (codePoint >= 0xd800 && codePoint <= 0xdbff && str.length > (index + 1)) {\n            var /** @type {?} */ low = str.charCodeAt(index + 1);\n            if (low >= 0xdc00 && low <= 0xdfff) {\n                index++;\n                codePoint = ((codePoint - 0xd800) << 10) + low - 0xdc00 + 0x10000;\n            }\n        }\n        if (codePoint <= 0x7f) {\n            encoded += String.fromCharCode(codePoint);\n        }\n        else if (codePoint <= 0x7ff) {\n            encoded += String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xc0, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0xffff) {\n            encoded += String.fromCharCode((codePoint >> 12) | 0xe0, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0x1fffff) {\n            encoded += String.fromCharCode(((codePoint >> 18) & 0x07) | 0xf0, ((codePoint >> 12) & 0x3f) | 0x80, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n    }\n    return encoded;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// group 0: \"[prop] or (event) or @trigger\"\n// group 1: \"prop\" from \"[prop]\"\n// group 2: \"event\" from \"(event)\"\n// group 3: \"@trigger\" from \"@trigger\"\nvar HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\nvar CompileAnimationEntryMetadata = (function () {\n    /**\n     * @param {?=} name\n     * @param {?=} definitions\n     */\n    function CompileAnimationEntryMetadata(name, definitions) {\n        if (name === void 0) { name = null; }\n        if (definitions === void 0) { definitions = null; }\n        this.name = name;\n        this.definitions = definitions;\n    }\n    return CompileAnimationEntryMetadata;\n}());\n/**\n * @abstract\n */\nvar CompileAnimationStateMetadata = (function () {\n    function CompileAnimationStateMetadata() {\n    }\n    return CompileAnimationStateMetadata;\n}());\nvar CompileAnimationStateDeclarationMetadata = (function (_super) {\n    __extends(CompileAnimationStateDeclarationMetadata, _super);\n    /**\n     * @param {?} stateNameExpr\n     * @param {?} styles\n     */\n    function CompileAnimationStateDeclarationMetadata(stateNameExpr, styles) {\n        var _this = _super.call(this) || this;\n        _this.stateNameExpr = stateNameExpr;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationStateDeclarationMetadata;\n}(CompileAnimationStateMetadata));\nvar CompileAnimationStateTransitionMetadata = (function (_super) {\n    __extends(CompileAnimationStateTransitionMetadata, _super);\n    /**\n     * @param {?} stateChangeExpr\n     * @param {?} steps\n     */\n    function CompileAnimationStateTransitionMetadata(stateChangeExpr, steps) {\n        var _this = _super.call(this) || this;\n        _this.stateChangeExpr = stateChangeExpr;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationStateTransitionMetadata;\n}(CompileAnimationStateMetadata));\n/**\n * @abstract\n */\nvar CompileAnimationMetadata = (function () {\n    function CompileAnimationMetadata() {\n    }\n    return CompileAnimationMetadata;\n}());\nvar CompileAnimationKeyframesSequenceMetadata = (function (_super) {\n    __extends(CompileAnimationKeyframesSequenceMetadata, _super);\n    /**\n     * @param {?=} steps\n     */\n    function CompileAnimationKeyframesSequenceMetadata(steps) {\n        if (steps === void 0) { steps = []; }\n        var _this = _super.call(this) || this;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationKeyframesSequenceMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationStyleMetadata = (function (_super) {\n    __extends(CompileAnimationStyleMetadata, _super);\n    /**\n     * @param {?} offset\n     * @param {?=} styles\n     */\n    function CompileAnimationStyleMetadata(offset, styles) {\n        if (styles === void 0) { styles = null; }\n        var _this = _super.call(this) || this;\n        _this.offset = offset;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationStyleMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationAnimateMetadata = (function (_super) {\n    __extends(CompileAnimationAnimateMetadata, _super);\n    /**\n     * @param {?=} timings\n     * @param {?=} styles\n     */\n    function CompileAnimationAnimateMetadata(timings, styles) {\n        if (timings === void 0) { timings = 0; }\n        if (styles === void 0) { styles = null; }\n        var _this = _super.call(this) || this;\n        _this.timings = timings;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationAnimateMetadata;\n}(CompileAnimationMetadata));\n/**\n * @abstract\n */\nvar CompileAnimationWithStepsMetadata = (function (_super) {\n    __extends(CompileAnimationWithStepsMetadata, _super);\n    /**\n     * @param {?=} steps\n     */\n    function CompileAnimationWithStepsMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        var _this = _super.call(this) || this;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationWithStepsMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationSequenceMetadata = (function (_super) {\n    __extends(CompileAnimationSequenceMetadata, _super);\n    /**\n     * @param {?=} steps\n     */\n    function CompileAnimationSequenceMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        return _super.call(this, steps) || this;\n    }\n    return CompileAnimationSequenceMetadata;\n}(CompileAnimationWithStepsMetadata));\nvar CompileAnimationGroupMetadata = (function (_super) {\n    __extends(CompileAnimationGroupMetadata, _super);\n    /**\n     * @param {?=} steps\n     */\n    function CompileAnimationGroupMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        return _super.call(this, steps) || this;\n    }\n    return CompileAnimationGroupMetadata;\n}(CompileAnimationWithStepsMetadata));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _sanitizeIdentifier(name) {\n    return name.replace(/\\W/g, '_');\n}\nvar _anonymousTypeIndex = 0;\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierName(compileIdentifier) {\n    if (!compileIdentifier || !compileIdentifier.reference) {\n        return null;\n    }\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.name;\n    }\n    if (ref['__anonymousType']) {\n        return ref['__anonymousType'];\n    }\n    var /** @type {?} */ identifier = _angular_core.ɵstringify(ref);\n    if (identifier.indexOf('(') >= 0) {\n        // case: anonymous functions!\n        identifier = \"anonymous_\" + _anonymousTypeIndex++;\n        ref['__anonymousType'] = identifier;\n    }\n    else {\n        identifier = _sanitizeIdentifier(identifier);\n    }\n    return identifier;\n}\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierModuleUrl(compileIdentifier) {\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.filePath;\n    }\n    return _angular_core.ɵreflector.importUri(ref);\n}\n/**\n * @param {?} compType\n * @param {?} embeddedTemplateIndex\n * @return {?}\n */\nfunction viewClassName(compType, embeddedTemplateIndex) {\n    return \"View_\" + identifierName({ reference: compType }) + \"_\" + embeddedTemplateIndex;\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction rendererTypeName(compType) {\n    return \"RenderType_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction hostViewClassName(compType) {\n    return \"HostView_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} dirType\n * @return {?}\n */\nfunction dirWrapperClassName(dirType) {\n    return \"Wrapper_\" + identifierName({ reference: dirType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction componentFactoryName(compType) {\n    return identifierName({ reference: compType }) + \"NgFactory\";\n}\nvar CompileSummaryKind = {};\nCompileSummaryKind.Pipe = 0;\nCompileSummaryKind.Directive = 1;\nCompileSummaryKind.NgModule = 2;\nCompileSummaryKind.Injectable = 3;\nCompileSummaryKind[CompileSummaryKind.Pipe] = \"Pipe\";\nCompileSummaryKind[CompileSummaryKind.Directive] = \"Directive\";\nCompileSummaryKind[CompileSummaryKind.NgModule] = \"NgModule\";\nCompileSummaryKind[CompileSummaryKind.Injectable] = \"Injectable\";\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenName(token) {\n    return token.value != null ? _sanitizeIdentifier(token.value) : identifierName(token.identifier);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenReference(token) {\n    if (token.identifier != null) {\n        return token.identifier.reference;\n    }\n    else {\n        return token.value;\n    }\n}\n/**\n * Metadata about a stylesheet\n */\nvar CompileStylesheetMetadata = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function CompileStylesheetMetadata(_a) {\n        var _b = _a === void 0 ? {} : _a, moduleUrl = _b.moduleUrl, styles = _b.styles, styleUrls = _b.styleUrls;\n        this.moduleUrl = moduleUrl || null;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n    }\n    return CompileStylesheetMetadata;\n}());\n/**\n * Metadata regarding compilation of a template.\n */\nvar CompileTemplateMetadata = (function () {\n    /**\n     * @param {?} __0\n     */\n    function CompileTemplateMetadata(_a) {\n        var encapsulation = _a.encapsulation, template = _a.template, templateUrl = _a.templateUrl, styles = _a.styles, styleUrls = _a.styleUrls, externalStylesheets = _a.externalStylesheets, animations = _a.animations, ngContentSelectors = _a.ngContentSelectors, interpolation = _a.interpolation, isInline = _a.isInline;\n        this.encapsulation = encapsulation;\n        this.template = template;\n        this.templateUrl = templateUrl;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n        this.externalStylesheets = _normalizeArray(externalStylesheets);\n        this.animations = animations ? flatten(animations) : [];\n        this.ngContentSelectors = ngContentSelectors || [];\n        if (interpolation && interpolation.length != 2) {\n            throw new Error(\"'interpolation' should have a start and an end symbol.\");\n        }\n        this.interpolation = interpolation;\n        this.isInline = isInline;\n    }\n    /**\n     * @return {?}\n     */\n    CompileTemplateMetadata.prototype.toSummary = function () {\n        return {\n            animations: this.animations.map(function (anim) { return anim.name; }),\n            ngContentSelectors: this.ngContentSelectors,\n            encapsulation: this.encapsulation,\n        };\n    };\n    return CompileTemplateMetadata;\n}());\n/**\n * Metadata regarding compilation of a directive.\n */\nvar CompileDirectiveMetadata = (function () {\n    /**\n     * @param {?} __0\n     */\n    function CompileDirectiveMetadata(_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, hostListeners = _a.hostListeners, hostProperties = _a.hostProperties, hostAttributes = _a.hostAttributes, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        this.isHost = !!isHost;\n        this.type = type;\n        this.isComponent = isComponent;\n        this.selector = selector;\n        this.exportAs = exportAs;\n        this.changeDetection = changeDetection;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.hostListeners = hostListeners;\n        this.hostProperties = hostProperties;\n        this.hostAttributes = hostAttributes;\n        this.providers = _normalizeArray(providers);\n        this.viewProviders = _normalizeArray(viewProviders);\n        this.queries = _normalizeArray(queries);\n        this.viewQueries = _normalizeArray(viewQueries);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.template = template;\n        this.componentViewType = componentViewType;\n        this.rendererType = rendererType;\n        this.componentFactory = componentFactory;\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    CompileDirectiveMetadata.create = function (_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, host = _a.host, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        var /** @type {?} */ hostListeners = {};\n        var /** @type {?} */ hostProperties = {};\n        var /** @type {?} */ hostAttributes = {};\n        if (host != null) {\n            Object.keys(host).forEach(function (key) {\n                var /** @type {?} */ value = host[key];\n                var /** @type {?} */ matches = key.match(HOST_REG_EXP);\n                if (matches === null) {\n                    hostAttributes[key] = value;\n                }\n                else if (matches[1] != null) {\n                    hostProperties[matches[1]] = value;\n                }\n                else if (matches[2] != null) {\n                    hostListeners[matches[2]] = value;\n                }\n            });\n        }\n        var /** @type {?} */ inputsMap = {};\n        if (inputs != null) {\n            inputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                inputsMap[parts[0]] = parts[1];\n            });\n        }\n        var /** @type {?} */ outputsMap = {};\n        if (outputs != null) {\n            outputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                outputsMap[parts[0]] = parts[1];\n            });\n        }\n        return new CompileDirectiveMetadata({\n            isHost: isHost,\n            type: type,\n            isComponent: !!isComponent, selector: selector, exportAs: exportAs, changeDetection: changeDetection,\n            inputs: inputsMap,\n            outputs: outputsMap,\n            hostListeners: hostListeners,\n            hostProperties: hostProperties,\n            hostAttributes: hostAttributes,\n            providers: providers,\n            viewProviders: viewProviders,\n            queries: queries,\n            viewQueries: viewQueries,\n            entryComponents: entryComponents,\n            template: template,\n            componentViewType: componentViewType,\n            rendererType: rendererType,\n            componentFactory: componentFactory,\n        });\n    };\n    /**\n     * @return {?}\n     */\n    CompileDirectiveMetadata.prototype.toSummary = function () {\n        return {\n            summaryKind: CompileSummaryKind.Directive,\n            type: this.type,\n            isComponent: this.isComponent,\n            selector: this.selector,\n            exportAs: this.exportAs,\n            inputs: this.inputs,\n            outputs: this.outputs,\n            hostListeners: this.hostListeners,\n            hostProperties: this.hostProperties,\n            hostAttributes: this.hostAttributes,\n            providers: this.providers,\n            viewProviders: this.viewProviders,\n            queries: this.queries,\n            viewQueries: this.viewQueries,\n            entryComponents: this.entryComponents,\n            changeDetection: this.changeDetection,\n            template: this.template && this.template.toSummary(),\n            componentViewType: this.componentViewType,\n            rendererType: this.rendererType,\n            componentFactory: this.componentFactory\n        };\n    };\n    return CompileDirectiveMetadata;\n}());\n/**\n * Construct {\\@link CompileDirectiveMetadata} from {\\@link ComponentTypeMetadata} and a selector.\n * @param {?} hostTypeReference\n * @param {?} compMeta\n * @param {?} hostViewType\n * @return {?}\n */\nfunction createHostComponentMeta(hostTypeReference, compMeta, hostViewType) {\n    var /** @type {?} */ template = CssSelector.parse(/** @type {?} */ ((compMeta.selector)))[0].getMatchingElementTemplate();\n    return CompileDirectiveMetadata.create({\n        isHost: true,\n        type: { reference: hostTypeReference, diDeps: [], lifecycleHooks: [] },\n        template: new CompileTemplateMetadata({\n            encapsulation: _angular_core.ViewEncapsulation.None,\n            template: template,\n            templateUrl: '',\n            styles: [],\n            styleUrls: [],\n            ngContentSelectors: [],\n            animations: [],\n            isInline: true,\n            externalStylesheets: [],\n            interpolation: null\n        }),\n        exportAs: null,\n        changeDetection: _angular_core.ChangeDetectionStrategy.Default,\n        inputs: [],\n        outputs: [],\n        host: {},\n        isComponent: true,\n        selector: '*',\n        providers: [],\n        viewProviders: [],\n        queries: [],\n        viewQueries: [],\n        componentViewType: hostViewType,\n        rendererType: { id: '__Host__', encapsulation: _angular_core.ViewEncapsulation.None, styles: [], data: {} },\n        entryComponents: [],\n        componentFactory: null\n    });\n}\nvar CompilePipeMetadata = (function () {\n    /**\n     * @param {?} __0\n     */\n    function CompilePipeMetadata(_a) {\n        var type = _a.type, name = _a.name, pure = _a.pure;\n        this.type = type;\n        this.name = name;\n        this.pure = !!pure;\n    }\n    /**\n     * @return {?}\n     */\n    CompilePipeMetadata.prototype.toSummary = function () {\n        return {\n            summaryKind: CompileSummaryKind.Pipe,\n            type: this.type,\n            name: this.name,\n            pure: this.pure\n        };\n    };\n    return CompilePipeMetadata;\n}());\n/**\n * Metadata regarding compilation of a module.\n */\nvar CompileNgModuleMetadata = (function () {\n    /**\n     * @param {?} __0\n     */\n    function CompileNgModuleMetadata(_a) {\n        var type = _a.type, providers = _a.providers, declaredDirectives = _a.declaredDirectives, exportedDirectives = _a.exportedDirectives, declaredPipes = _a.declaredPipes, exportedPipes = _a.exportedPipes, entryComponents = _a.entryComponents, bootstrapComponents = _a.bootstrapComponents, importedModules = _a.importedModules, exportedModules = _a.exportedModules, schemas = _a.schemas, transitiveModule = _a.transitiveModule, id = _a.id;\n        this.type = type || null;\n        this.declaredDirectives = _normalizeArray(declaredDirectives);\n        this.exportedDirectives = _normalizeArray(exportedDirectives);\n        this.declaredPipes = _normalizeArray(declaredPipes);\n        this.exportedPipes = _normalizeArray(exportedPipes);\n        this.providers = _normalizeArray(providers);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n        this.importedModules = _normalizeArray(importedModules);\n        this.exportedModules = _normalizeArray(exportedModules);\n        this.schemas = _normalizeArray(schemas);\n        this.id = id || null;\n        this.transitiveModule = transitiveModule || null;\n    }\n    /**\n     * @return {?}\n     */\n    CompileNgModuleMetadata.prototype.toSummary = function () {\n        var /** @type {?} */ module = ((this.transitiveModule));\n        return {\n            summaryKind: CompileSummaryKind.NgModule,\n            type: this.type,\n            entryComponents: module.entryComponents,\n            providers: module.providers,\n            modules: module.modules,\n            exportedDirectives: module.exportedDirectives,\n            exportedPipes: module.exportedPipes\n        };\n    };\n    return CompileNgModuleMetadata;\n}());\nvar TransitiveCompileNgModuleMetadata = (function () {\n    function TransitiveCompileNgModuleMetadata() {\n        this.directivesSet = new Set();\n        this.directives = [];\n        this.exportedDirectivesSet = new Set();\n        this.exportedDirectives = [];\n        this.pipesSet = new Set();\n        this.pipes = [];\n        this.exportedPipesSet = new Set();\n        this.exportedPipes = [];\n        this.modulesSet = new Set();\n        this.modules = [];\n        this.entryComponentsSet = new Set();\n        this.entryComponents = [];\n        this.providers = [];\n    }\n    /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addProvider = function (provider, module) {\n        this.providers.push({ provider: provider, module: module });\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addDirective = function (id) {\n        if (!this.directivesSet.has(id.reference)) {\n            this.directivesSet.add(id.reference);\n            this.directives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedDirective = function (id) {\n        if (!this.exportedDirectivesSet.has(id.reference)) {\n            this.exportedDirectivesSet.add(id.reference);\n            this.exportedDirectives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addPipe = function (id) {\n        if (!this.pipesSet.has(id.reference)) {\n            this.pipesSet.add(id.reference);\n            this.pipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedPipe = function (id) {\n        if (!this.exportedPipesSet.has(id.reference)) {\n            this.exportedPipesSet.add(id.reference);\n            this.exportedPipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addModule = function (id) {\n        if (!this.modulesSet.has(id.reference)) {\n            this.modulesSet.add(id.reference);\n            this.modules.push(id);\n        }\n    };\n    /**\n     * @param {?} ec\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addEntryComponent = function (ec) {\n        if (!this.entryComponentsSet.has(ec.componentType)) {\n            this.entryComponentsSet.add(ec.componentType);\n            this.entryComponents.push(ec);\n        }\n    };\n    return TransitiveCompileNgModuleMetadata;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _normalizeArray(obj) {\n    return obj || [];\n}\nvar ProviderMeta = (function () {\n    /**\n     * @param {?} token\n     * @param {?} __1\n     */\n    function ProviderMeta(token, _a) {\n        var useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n        this.token = token;\n        this.useClass = useClass || null;\n        this.useValue = useValue;\n        this.useExisting = useExisting;\n        this.useFactory = useFactory || null;\n        this.dependencies = deps || null;\n        this.multi = !!multi;\n    }\n    return ProviderMeta;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n        return ((flat)).concat(flatItem);\n    }, []);\n}\n/**\n * @param {?} url\n * @return {?}\n */\nfunction sourceUrl(url) {\n    // Note: We need 3 \"/\" so that ng shows up as a separate domain\n    // in the chrome dev tools.\n    return url.replace(/(\\w+:\\/\\/[\\w:-]+)?(\\/+)?/, 'ng:///');\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @param {?} templateMeta\n * @return {?}\n */\nfunction templateSourceUrl(ngModuleType, compMeta, templateMeta) {\n    var /** @type {?} */ url;\n    if (templateMeta.isInline) {\n        if (compMeta.type.reference instanceof StaticSymbol) {\n            // Note: a .ts file might contain multiple components with inline templates,\n            // so we need to give them unique urls, as these will be used for sourcemaps.\n            url = compMeta.type.reference.filePath + \".\" + compMeta.type.reference.name + \".html\";\n        }\n        else {\n            url = identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".html\";\n        }\n    }\n    else {\n        url = ((templateMeta.templateUrl));\n    }\n    // always prepend ng:// to make angular resources easy to find and not clobber\n    // user resources.\n    return sourceUrl(url);\n}\n/**\n * @param {?} meta\n * @param {?} id\n * @return {?}\n */\nfunction sharedStylesheetJitUrl(meta, id) {\n    var /** @type {?} */ pathParts = ((meta.moduleUrl)).split(/\\/\\\\/g);\n    var /** @type {?} */ baseName = pathParts[pathParts.length - 1];\n    return sourceUrl(\"css/\" + id + baseName + \".ngstyle.js\");\n}\n/**\n * @param {?} moduleMeta\n * @return {?}\n */\nfunction ngModuleJitUrl(moduleMeta) {\n    return sourceUrl(identifierName(moduleMeta.type) + \"/module.ngfactory.js\");\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @return {?}\n */\nfunction templateJitUrl(ngModuleType, compMeta) {\n    return sourceUrl(identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".ngfactory.js\");\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CompilerConfig = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function CompilerConfig(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.defaultEncapsulation, defaultEncapsulation = _c === void 0 ? _angular_core.ViewEncapsulation.Emulated : _c, _d = _b.useJit, useJit = _d === void 0 ? true : _d, missingTranslation = _b.missingTranslation, enableLegacyTemplate = _b.enableLegacyTemplate;\n        this.defaultEncapsulation = defaultEncapsulation;\n        this.useJit = !!useJit;\n        this.missingTranslation = missingTranslation || null;\n        this.enableLegacyTemplate = enableLegacyTemplate !== false;\n    }\n    return CompilerConfig;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParserError = (function () {\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     */\n    function ParserError(message, input, errLocation, ctxLocation) {\n        this.input = input;\n        this.errLocation = errLocation;\n        this.ctxLocation = ctxLocation;\n        this.message = \"Parser Error: \" + message + \" \" + errLocation + \" [\" + input + \"] in \" + ctxLocation;\n    }\n    return ParserError;\n}());\nvar ParseSpan = (function () {\n    /**\n     * @param {?} start\n     * @param {?} end\n     */\n    function ParseSpan(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    return ParseSpan;\n}());\nvar AST = (function () {\n    /**\n     * @param {?} span\n     */\n    function AST(span) {\n        this.span = span;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    AST.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return null;\n    };\n    /**\n     * @return {?}\n     */\n    AST.prototype.toString = function () { return 'AST'; };\n    return AST;\n}());\n/**\n * Represents a quoted expression of the form:\n *\n * quote = prefix `:` uninterpretedExpression\n * prefix = identifier\n * uninterpretedExpression = arbitrary string\n *\n * A quoted expression is meant to be pre-processed by an AST transformer that\n * converts it into another AST that no longer contains quoted expressions.\n * It is meant to allow third-party developers to extend Angular template\n * expression language. The `uninterpretedExpression` part of the quote is\n * therefore not interpreted by the Angular's own expression parser.\n */\nvar Quote = (function (_super) {\n    __extends(Quote, _super);\n    /**\n     * @param {?} span\n     * @param {?} prefix\n     * @param {?} uninterpretedExpression\n     * @param {?} location\n     */\n    function Quote(span, prefix, uninterpretedExpression, location) {\n        var _this = _super.call(this, span) || this;\n        _this.prefix = prefix;\n        _this.uninterpretedExpression = uninterpretedExpression;\n        _this.location = location;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Quote.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitQuote(this, context);\n    };\n    /**\n     * @return {?}\n     */\n    Quote.prototype.toString = function () { return 'Quote'; };\n    return Quote;\n}(AST));\nvar EmptyExpr = (function (_super) {\n    __extends(EmptyExpr, _super);\n    function EmptyExpr() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    EmptyExpr.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        // do nothing\n    };\n    return EmptyExpr;\n}(AST));\nvar ImplicitReceiver = (function (_super) {\n    __extends(ImplicitReceiver, _super);\n    function ImplicitReceiver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ImplicitReceiver.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitImplicitReceiver(this, context);\n    };\n    return ImplicitReceiver;\n}(AST));\n/**\n * Multiple expressions separated by a semicolon.\n */\nvar Chain = (function (_super) {\n    __extends(Chain, _super);\n    /**\n     * @param {?} span\n     * @param {?} expressions\n     */\n    function Chain(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Chain.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitChain(this, context);\n    };\n    return Chain;\n}(AST));\nvar Conditional = (function (_super) {\n    __extends(Conditional, _super);\n    /**\n     * @param {?} span\n     * @param {?} condition\n     * @param {?} trueExp\n     * @param {?} falseExp\n     */\n    function Conditional(span, condition, trueExp, falseExp) {\n        var _this = _super.call(this, span) || this;\n        _this.condition = condition;\n        _this.trueExp = trueExp;\n        _this.falseExp = falseExp;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Conditional.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitConditional(this, context);\n    };\n    return Conditional;\n}(AST));\nvar PropertyRead = (function (_super) {\n    __extends(PropertyRead, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     */\n    function PropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyRead.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyRead(this, context);\n    };\n    return PropertyRead;\n}(AST));\nvar PropertyWrite = (function (_super) {\n    __extends(PropertyWrite, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} value\n     */\n    function PropertyWrite(span, receiver, name, value) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyWrite.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyWrite(this, context);\n    };\n    return PropertyWrite;\n}(AST));\nvar SafePropertyRead = (function (_super) {\n    __extends(SafePropertyRead, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     */\n    function SafePropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafePropertyRead.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafePropertyRead(this, context);\n    };\n    return SafePropertyRead;\n}(AST));\nvar KeyedRead = (function (_super) {\n    __extends(KeyedRead, _super);\n    /**\n     * @param {?} span\n     * @param {?} obj\n     * @param {?} key\n     */\n    function KeyedRead(span, obj, key) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedRead.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedRead(this, context);\n    };\n    return KeyedRead;\n}(AST));\nvar KeyedWrite = (function (_super) {\n    __extends(KeyedWrite, _super);\n    /**\n     * @param {?} span\n     * @param {?} obj\n     * @param {?} key\n     * @param {?} value\n     */\n    function KeyedWrite(span, obj, key, value) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedWrite.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedWrite(this, context);\n    };\n    return KeyedWrite;\n}(AST));\nvar BindingPipe = (function (_super) {\n    __extends(BindingPipe, _super);\n    /**\n     * @param {?} span\n     * @param {?} exp\n     * @param {?} name\n     * @param {?} args\n     */\n    function BindingPipe(span, exp, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.exp = exp;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    BindingPipe.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPipe(this, context);\n    };\n    return BindingPipe;\n}(AST));\nvar LiteralPrimitive = (function (_super) {\n    __extends(LiteralPrimitive, _super);\n    /**\n     * @param {?} span\n     * @param {?} value\n     */\n    function LiteralPrimitive(span, value) {\n        var _this = _super.call(this, span) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralPrimitive.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralPrimitive(this, context);\n    };\n    return LiteralPrimitive;\n}(AST));\nvar LiteralArray = (function (_super) {\n    __extends(LiteralArray, _super);\n    /**\n     * @param {?} span\n     * @param {?} expressions\n     */\n    function LiteralArray(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralArray.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralArray(this, context);\n    };\n    return LiteralArray;\n}(AST));\nvar LiteralMap = (function (_super) {\n    __extends(LiteralMap, _super);\n    /**\n     * @param {?} span\n     * @param {?} keys\n     * @param {?} values\n     */\n    function LiteralMap(span, keys, values) {\n        var _this = _super.call(this, span) || this;\n        _this.keys = keys;\n        _this.values = values;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralMap.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralMap(this, context);\n    };\n    return LiteralMap;\n}(AST));\nvar Interpolation = (function (_super) {\n    __extends(Interpolation, _super);\n    /**\n     * @param {?} span\n     * @param {?} strings\n     * @param {?} expressions\n     */\n    function Interpolation(span, strings, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.strings = strings;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Interpolation.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitInterpolation(this, context);\n    };\n    return Interpolation;\n}(AST));\nvar Binary = (function (_super) {\n    __extends(Binary, _super);\n    /**\n     * @param {?} span\n     * @param {?} operation\n     * @param {?} left\n     * @param {?} right\n     */\n    function Binary(span, operation, left, right) {\n        var _this = _super.call(this, span) || this;\n        _this.operation = operation;\n        _this.left = left;\n        _this.right = right;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Binary.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitBinary(this, context);\n    };\n    return Binary;\n}(AST));\nvar PrefixNot = (function (_super) {\n    __extends(PrefixNot, _super);\n    /**\n     * @param {?} span\n     * @param {?} expression\n     */\n    function PrefixNot(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PrefixNot.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPrefixNot(this, context);\n    };\n    return PrefixNot;\n}(AST));\nvar MethodCall = (function (_super) {\n    __extends(MethodCall, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} args\n     */\n    function MethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    MethodCall.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitMethodCall(this, context);\n    };\n    return MethodCall;\n}(AST));\nvar SafeMethodCall = (function (_super) {\n    __extends(SafeMethodCall, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} args\n     */\n    function SafeMethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafeMethodCall.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafeMethodCall(this, context);\n    };\n    return SafeMethodCall;\n}(AST));\nvar FunctionCall = (function (_super) {\n    __extends(FunctionCall, _super);\n    /**\n     * @param {?} span\n     * @param {?} target\n     * @param {?} args\n     */\n    function FunctionCall(span, target, args) {\n        var _this = _super.call(this, span) || this;\n        _this.target = target;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    FunctionCall.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitFunctionCall(this, context);\n    };\n    return FunctionCall;\n}(AST));\nvar ASTWithSource = (function (_super) {\n    __extends(ASTWithSource, _super);\n    /**\n     * @param {?} ast\n     * @param {?} source\n     * @param {?} location\n     * @param {?} errors\n     */\n    function ASTWithSource(ast, source, location, errors) {\n        var _this = _super.call(this, new ParseSpan(0, source == null ? 0 : source.length)) || this;\n        _this.ast = ast;\n        _this.source = source;\n        _this.location = location;\n        _this.errors = errors;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ASTWithSource.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return this.ast.visit(visitor, context);\n    };\n    /**\n     * @return {?}\n     */\n    ASTWithSource.prototype.toString = function () { return this.source + \" in \" + this.location; };\n    return ASTWithSource;\n}(AST));\nvar TemplateBinding = (function () {\n    /**\n     * @param {?} span\n     * @param {?} key\n     * @param {?} keyIsVar\n     * @param {?} name\n     * @param {?} expression\n     */\n    function TemplateBinding(span, key, keyIsVar, name, expression) {\n        this.span = span;\n        this.key = key;\n        this.keyIsVar = keyIsVar;\n        this.name = name;\n        this.expression = expression;\n    }\n    return TemplateBinding;\n}());\nvar RecursiveAstVisitor = (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinary = function (ast, context) {\n        ast.left.visit(this);\n        ast.right.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitChain = function (ast, context) { return this.visitAll(ast.expressions, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditional = function (ast, context) {\n        ast.condition.visit(this);\n        ast.trueExp.visit(this);\n        ast.falseExp.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPipe = function (ast, context) {\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionCall = function (ast, context) {\n        ((ast.target)).visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitImplicitReceiver = function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInterpolation = function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedRead = function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedWrite = function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArray = function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMap = function (ast, context) { return this.visitAll(ast.values, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralPrimitive = function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMethodCall = function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPrefixNot = function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyRead = function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyWrite = function (ast, context) {\n        ast.receiver.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafePropertyRead = function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafeMethodCall = function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAll = function (asts, context) {\n        var _this = this;\n        asts.forEach(function (ast) { return ast.visit(_this, context); });\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitQuote = function (ast, context) { return null; };\n    return RecursiveAstVisitor;\n}());\nvar AstTransformer = (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitImplicitReceiver = function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInterpolation = function (ast, context) {\n        return new Interpolation(ast.span, ast.strings, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralPrimitive = function (ast, context) {\n        return new LiteralPrimitive(ast.span, ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyRead = function (ast, context) {\n        return new PropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyWrite = function (ast, context) {\n        return new PropertyWrite(ast.span, ast.receiver.visit(this), ast.name, ast.value.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafePropertyRead = function (ast, context) {\n        return new SafePropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitMethodCall = function (ast, context) {\n        return new MethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafeMethodCall = function (ast, context) {\n        return new SafeMethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionCall = function (ast, context) {\n        return new FunctionCall(ast.span, /** @type {?} */ ((ast.target)).visit(this), this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArray = function (ast, context) {\n        return new LiteralArray(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMap = function (ast, context) {\n        return new LiteralMap(ast.span, ast.keys, this.visitAll(ast.values));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinary = function (ast, context) {\n        return new Binary(ast.span, ast.operation, ast.left.visit(this), ast.right.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPrefixNot = function (ast, context) {\n        return new PrefixNot(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditional = function (ast, context) {\n        return new Conditional(ast.span, ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPipe = function (ast, context) {\n        return new BindingPipe(ast.span, ast.exp.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedRead = function (ast, context) {\n        return new KeyedRead(ast.span, ast.obj.visit(this), ast.key.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedWrite = function (ast, context) {\n        return new KeyedWrite(ast.span, ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));\n    };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAll = function (asts) {\n        var /** @type {?} */ res = new Array(asts.length);\n        for (var /** @type {?} */ i = 0; i < asts.length; ++i) {\n            res[i] = asts[i].visit(this);\n        }\n        return res;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitChain = function (ast, context) {\n        return new Chain(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitQuote = function (ast, context) {\n        return new Quote(ast.span, ast.prefix, ast.uninterpretedExpression, ast.location);\n    };\n    return AstTransformer;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar $EOF = 0;\nvar $TAB = 9;\nvar $LF = 10;\nvar $VTAB = 11;\nvar $FF = 12;\nvar $CR = 13;\nvar $SPACE = 32;\nvar $BANG = 33;\nvar $DQ = 34;\nvar $HASH = 35;\nvar $$ = 36;\nvar $PERCENT = 37;\nvar $AMPERSAND = 38;\nvar $SQ = 39;\nvar $LPAREN = 40;\nvar $RPAREN = 41;\nvar $STAR = 42;\nvar $PLUS = 43;\nvar $COMMA = 44;\nvar $MINUS = 45;\nvar $PERIOD = 46;\nvar $SLASH = 47;\nvar $COLON = 58;\nvar $SEMICOLON = 59;\nvar $LT = 60;\nvar $EQ = 61;\nvar $GT = 62;\nvar $QUESTION = 63;\nvar $0 = 48;\nvar $9 = 57;\nvar $A = 65;\nvar $E = 69;\nvar $F = 70;\nvar $X = 88;\nvar $Z = 90;\nvar $LBRACKET = 91;\nvar $BACKSLASH = 92;\nvar $RBRACKET = 93;\nvar $CARET = 94;\nvar $_ = 95;\nvar $a = 97;\nvar $e = 101;\nvar $f = 102;\nvar $n = 110;\nvar $r = 114;\nvar $t = 116;\nvar $u = 117;\nvar $v = 118;\nvar $x = 120;\nvar $z = 122;\nvar $LBRACE = 123;\nvar $BAR = 124;\nvar $RBRACE = 125;\nvar $NBSP = 160;\nvar $BT = 96;\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isWhitespace(code) {\n    return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigit(code) {\n    return $0 <= code && code <= $9;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiLetter(code) {\n    return code >= $a && code <= $z || code >= $A && code <= $Z;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiHexDigit(code) {\n    return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n}\n/**\n * A replacement for \\@Injectable to be used in the compiler, so that\n * we don't try to evaluate the metadata in the compiler during AoT.\n * This decorator is enough to make the compiler work with the ReflectiveInjector though.\n * \\@Annotation\n * @return {?}\n */\nfunction CompilerInjectable() {\n    return function (x) { return x; };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertArrayOfStrings(identifier, value) {\n    if (!_angular_core.isDevMode() || value == null) {\n        return;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n    }\n    for (var /** @type {?} */ i = 0; i < value.length; i += 1) {\n        if (typeof value[i] !== 'string') {\n            throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n        }\n    }\n}\nvar INTERPOLATION_BLACKLIST_REGEXPS = [\n    /^\\s*$/,\n    /[<>]/,\n    /^[{}]$/,\n    /&(#|[a-z])/i,\n    /^\\/\\//,\n];\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertInterpolationSymbols(identifier, value) {\n    if (value != null && !(Array.isArray(value) && value.length == 2)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array, [start, end].\");\n    }\n    else if (_angular_core.isDevMode() && value != null) {\n        var /** @type {?} */ start_1 = (value[0]);\n        var /** @type {?} */ end_1 = (value[1]);\n        // black list checking\n        INTERPOLATION_BLACKLIST_REGEXPS.forEach(function (regexp) {\n            if (regexp.test(start_1) || regexp.test(end_1)) {\n                throw new Error(\"['\" + start_1 + \"', '\" + end_1 + \"'] contains unusable interpolation symbol.\");\n            }\n        });\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar InterpolationConfig = (function () {\n    /**\n     * @param {?} start\n     * @param {?} end\n     */\n    function InterpolationConfig(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    /**\n     * @param {?} markers\n     * @return {?}\n     */\n    InterpolationConfig.fromArray = function (markers) {\n        if (!markers) {\n            return DEFAULT_INTERPOLATION_CONFIG;\n        }\n        assertInterpolationSymbols('interpolation', markers);\n        return new InterpolationConfig(markers[0], markers[1]);\n    };\n    \n    return InterpolationConfig;\n}());\nvar DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TokenType = {};\nTokenType.Character = 0;\nTokenType.Identifier = 1;\nTokenType.Keyword = 2;\nTokenType.String = 3;\nTokenType.Operator = 4;\nTokenType.Number = 5;\nTokenType.Error = 6;\nTokenType[TokenType.Character] = \"Character\";\nTokenType[TokenType.Identifier] = \"Identifier\";\nTokenType[TokenType.Keyword] = \"Keyword\";\nTokenType[TokenType.String] = \"String\";\nTokenType[TokenType.Operator] = \"Operator\";\nTokenType[TokenType.Number] = \"Number\";\nTokenType[TokenType.Error] = \"Error\";\nvar KEYWORDS = ['var', 'let', 'as', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\nvar Lexer = (function () {\n    function Lexer() {\n    }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    Lexer.prototype.tokenize = function (text) {\n        var /** @type {?} */ scanner = new _Scanner(text);\n        var /** @type {?} */ tokens = [];\n        var /** @type {?} */ token = scanner.scanToken();\n        while (token != null) {\n            tokens.push(token);\n            token = scanner.scanToken();\n        }\n        return tokens;\n    };\n    return Lexer;\n}());\nLexer.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nLexer.ctorParameters = function () { return []; };\nvar Token = (function () {\n    /**\n     * @param {?} index\n     * @param {?} type\n     * @param {?} numValue\n     * @param {?} strValue\n     */\n    function Token(index, type, numValue, strValue) {\n        this.index = index;\n        this.type = type;\n        this.numValue = numValue;\n        this.strValue = strValue;\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    Token.prototype.isCharacter = function (code) {\n        return this.type == TokenType.Character && this.numValue == code;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isNumber = function () { return this.type == TokenType.Number; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isString = function () { return this.type == TokenType.String; };\n    /**\n     * @param {?} operater\n     * @return {?}\n     */\n    Token.prototype.isOperator = function (operater) {\n        return this.type == TokenType.Operator && this.strValue == operater;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isIdentifier = function () { return this.type == TokenType.Identifier; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeyword = function () { return this.type == TokenType.Keyword; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordLet = function () { return this.type == TokenType.Keyword && this.strValue == 'let'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordAs = function () { return this.type == TokenType.Keyword && this.strValue == 'as'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordNull = function () { return this.type == TokenType.Keyword && this.strValue == 'null'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordUndefined = function () {\n        return this.type == TokenType.Keyword && this.strValue == 'undefined';\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordTrue = function () { return this.type == TokenType.Keyword && this.strValue == 'true'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordFalse = function () { return this.type == TokenType.Keyword && this.strValue == 'false'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordThis = function () { return this.type == TokenType.Keyword && this.strValue == 'this'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isError = function () { return this.type == TokenType.Error; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toNumber = function () { return this.type == TokenType.Number ? this.numValue : -1; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toString = function () {\n        switch (this.type) {\n            case TokenType.Character:\n            case TokenType.Identifier:\n            case TokenType.Keyword:\n            case TokenType.Operator:\n            case TokenType.String:\n            case TokenType.Error:\n                return this.strValue;\n            case TokenType.Number:\n                return this.numValue.toString();\n            default:\n                return null;\n        }\n    };\n    return Token;\n}());\n/**\n * @param {?} index\n * @param {?} code\n * @return {?}\n */\nfunction newCharacterToken(index, code) {\n    return new Token(index, TokenType.Character, code, String.fromCharCode(code));\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newIdentifierToken(index, text) {\n    return new Token(index, TokenType.Identifier, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newKeywordToken(index, text) {\n    return new Token(index, TokenType.Keyword, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newOperatorToken(index, text) {\n    return new Token(index, TokenType.Operator, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newStringToken(index, text) {\n    return new Token(index, TokenType.String, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} n\n * @return {?}\n */\nfunction newNumberToken(index, n) {\n    return new Token(index, TokenType.Number, n, '');\n}\n/**\n * @param {?} index\n * @param {?} message\n * @return {?}\n */\nfunction newErrorToken(index, message) {\n    return new Token(index, TokenType.Error, 0, message);\n}\nvar EOF = new Token(-1, TokenType.Character, 0, '');\nvar _Scanner = (function () {\n    /**\n     * @param {?} input\n     */\n    function _Scanner(input) {\n        this.input = input;\n        this.peek = 0;\n        this.index = -1;\n        this.length = input.length;\n        this.advance();\n    }\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.advance = function () {\n        this.peek = ++this.index >= this.length ? $EOF : this.input.charCodeAt(this.index);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanToken = function () {\n        var /** @type {?} */ input = this.input, /** @type {?} */ length = this.length;\n        var /** @type {?} */ peek = this.peek, /** @type {?} */ index = this.index;\n        // Skip whitespace.\n        while (peek <= $SPACE) {\n            if (++index >= length) {\n                peek = $EOF;\n                break;\n            }\n            else {\n                peek = input.charCodeAt(index);\n            }\n        }\n        this.peek = peek;\n        this.index = index;\n        if (index >= length) {\n            return null;\n        }\n        // Handle identifiers and numbers.\n        if (isIdentifierStart(peek))\n            return this.scanIdentifier();\n        if (isDigit(peek))\n            return this.scanNumber(index);\n        var /** @type {?} */ start = index;\n        switch (peek) {\n            case $PERIOD:\n                this.advance();\n                return isDigit(this.peek) ? this.scanNumber(start) :\n                    newCharacterToken(start, $PERIOD);\n            case $LPAREN:\n            case $RPAREN:\n            case $LBRACE:\n            case $RBRACE:\n            case $LBRACKET:\n            case $RBRACKET:\n            case $COMMA:\n            case $COLON:\n            case $SEMICOLON:\n                return this.scanCharacter(start, peek);\n            case $SQ:\n            case $DQ:\n                return this.scanString();\n            case $HASH:\n            case $PLUS:\n            case $MINUS:\n            case $STAR:\n            case $SLASH:\n            case $PERCENT:\n            case $CARET:\n                return this.scanOperator(start, String.fromCharCode(peek));\n            case $QUESTION:\n                return this.scanComplexOperator(start, '?', $PERIOD, '.');\n            case $LT:\n            case $GT:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=');\n            case $BANG:\n            case $EQ:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=', $EQ, '=');\n            case $AMPERSAND:\n                return this.scanComplexOperator(start, '&', $AMPERSAND, '&');\n            case $BAR:\n                return this.scanComplexOperator(start, '|', $BAR, '|');\n            case $NBSP:\n                while (isWhitespace(this.peek))\n                    this.advance();\n                return this.scanToken();\n        }\n        this.advance();\n        return this.error(\"Unexpected character [\" + String.fromCharCode(peek) + \"]\", 0);\n    };\n    /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    _Scanner.prototype.scanCharacter = function (start, code) {\n        this.advance();\n        return newCharacterToken(start, code);\n    };\n    /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    _Scanner.prototype.scanOperator = function (start, str) {\n        this.advance();\n        return newOperatorToken(start, str);\n    };\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    _Scanner.prototype.scanComplexOperator = function (start, one, twoCode, two, threeCode, three) {\n        this.advance();\n        var /** @type {?} */ str = one;\n        if (this.peek == twoCode) {\n            this.advance();\n            str += two;\n        }\n        if (threeCode != null && this.peek == threeCode) {\n            this.advance();\n            str += three;\n        }\n        return newOperatorToken(start, str);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanIdentifier = function () {\n        var /** @type {?} */ start = this.index;\n        this.advance();\n        while (isIdentifierPart(this.peek))\n            this.advance();\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n            newIdentifierToken(start, str);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Scanner.prototype.scanNumber = function (start) {\n        var /** @type {?} */ simple = (this.index === start);\n        this.advance(); // Skip initial digit.\n        while (true) {\n            if (isDigit(this.peek)) {\n            }\n            else if (this.peek == $PERIOD) {\n                simple = false;\n            }\n            else if (isExponentStart(this.peek)) {\n                this.advance();\n                if (isExponentSign(this.peek))\n                    this.advance();\n                if (!isDigit(this.peek))\n                    return this.error('Invalid exponent', -1);\n                simple = false;\n            }\n            else {\n                break;\n            }\n            this.advance();\n        }\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        var /** @type {?} */ value = simple ? parseIntAutoRadix(str) : parseFloat(str);\n        return newNumberToken(start, value);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanString = function () {\n        var /** @type {?} */ start = this.index;\n        var /** @type {?} */ quote = this.peek;\n        this.advance(); // Skip initial quote.\n        var /** @type {?} */ buffer = '';\n        var /** @type {?} */ marker = this.index;\n        var /** @type {?} */ input = this.input;\n        while (this.peek != quote) {\n            if (this.peek == $BACKSLASH) {\n                buffer += input.substring(marker, this.index);\n                this.advance();\n                var /** @type {?} */ unescapedCode = void 0;\n                // Workaround for TS2.1-introduced type strictness\n                this.peek = this.peek;\n                if (this.peek == $u) {\n                    // 4 character hex code for unicode character.\n                    var /** @type {?} */ hex = input.substring(this.index + 1, this.index + 5);\n                    if (/^[0-9a-f]+$/i.test(hex)) {\n                        unescapedCode = parseInt(hex, 16);\n                    }\n                    else {\n                        return this.error(\"Invalid unicode escape [\\\\u\" + hex + \"]\", 0);\n                    }\n                    for (var /** @type {?} */ i = 0; i < 5; i++) {\n                        this.advance();\n                    }\n                }\n                else {\n                    unescapedCode = unescape(this.peek);\n                    this.advance();\n                }\n                buffer += String.fromCharCode(unescapedCode);\n                marker = this.index;\n            }\n            else if (this.peek == $EOF) {\n                return this.error('Unterminated quote', 0);\n            }\n            else {\n                this.advance();\n            }\n        }\n        var /** @type {?} */ last = input.substring(marker, this.index);\n        this.advance(); // Skip terminating quote.\n        return newStringToken(start, buffer + last);\n    };\n    /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    _Scanner.prototype.error = function (message, offset) {\n        var /** @type {?} */ position = this.index + offset;\n        return newErrorToken(position, \"Lexer Error: \" + message + \" at column \" + position + \" in expression [\" + this.input + \"]\");\n    };\n    return _Scanner;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierStart(code) {\n    return ($a <= code && code <= $z) || ($A <= code && code <= $Z) ||\n        (code == $_) || (code == $$);\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction isIdentifier(input) {\n    if (input.length == 0)\n        return false;\n    var /** @type {?} */ scanner = new _Scanner(input);\n    if (!isIdentifierStart(scanner.peek))\n        return false;\n    scanner.advance();\n    while (scanner.peek !== $EOF) {\n        if (!isIdentifierPart(scanner.peek))\n            return false;\n        scanner.advance();\n    }\n    return true;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierPart(code) {\n    return isAsciiLetter(code) || isDigit(code) || (code == $_) ||\n        (code == $$);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentStart(code) {\n    return code == $e || code == $E;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentSign(code) {\n    return code == $MINUS || code == $PLUS;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isQuote(code) {\n    return code === $SQ || code === $DQ || code === $BT;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction unescape(code) {\n    switch (code) {\n        case $n:\n            return $LF;\n        case $f:\n            return $FF;\n        case $r:\n            return $CR;\n        case $t:\n            return $TAB;\n        case $v:\n            return $VTAB;\n        default:\n            return code;\n    }\n}\n/**\n * @param {?} text\n * @return {?}\n */\nfunction parseIntAutoRadix(text) {\n    var /** @type {?} */ result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SplitInterpolation = (function () {\n    /**\n     * @param {?} strings\n     * @param {?} expressions\n     * @param {?} offsets\n     */\n    function SplitInterpolation(strings, expressions, offsets) {\n        this.strings = strings;\n        this.expressions = expressions;\n        this.offsets = offsets;\n    }\n    return SplitInterpolation;\n}());\nvar TemplateBindingParseResult = (function () {\n    /**\n     * @param {?} templateBindings\n     * @param {?} warnings\n     * @param {?} errors\n     */\n    function TemplateBindingParseResult(templateBindings, warnings, errors) {\n        this.templateBindings = templateBindings;\n        this.warnings = warnings;\n        this.errors = errors;\n    }\n    return TemplateBindingParseResult;\n}());\n/**\n * @param {?} config\n * @return {?}\n */\nfunction _createInterpolateRegExp(config) {\n    var /** @type {?} */ pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n    return new RegExp(pattern, 'g');\n}\nvar Parser = (function () {\n    /**\n     * @param {?} _lexer\n     */\n    function Parser(_lexer) {\n        this._lexer = _lexer;\n        this.errors = [];\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseAction = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(this._stripComments(input));\n        var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseBinding = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseSimpleBinding = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        var /** @type {?} */ errors = SimpleExpressionChecker.check(ast);\n        if (errors.length > 0) {\n            this._reportError(\"Host binding expression cannot contain \" + errors.join(' '), input, location);\n        }\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    Parser.prototype._reportError = function (message, input, errLocation, ctxLocation) {\n        this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._parseBindingAst = function (input, location, interpolationConfig) {\n        // Quotes expressions use 3rd-party expression language. We don't want to use\n        // our lexer or parser for that, so we check for that ahead of time.\n        var /** @type {?} */ quote = this._parseQuote(input, location);\n        if (quote != null) {\n            return quote;\n        }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n        return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype._parseQuote = function (input, location) {\n        if (input == null)\n            return null;\n        var /** @type {?} */ prefixSeparatorIndex = input.indexOf(':');\n        if (prefixSeparatorIndex == -1)\n            return null;\n        var /** @type {?} */ prefix = input.substring(0, prefixSeparatorIndex).trim();\n        if (!isIdentifier(prefix))\n            return null;\n        var /** @type {?} */ uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n        return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.parseTemplateBindings = function (prefixToken, input, location) {\n        var /** @type {?} */ tokens = this._lexer.tokenize(input);\n        if (prefixToken) {\n            // Prefix the tokens with the tokens from prefixToken but have them take no space (0 index).\n            var /** @type {?} */ prefixTokens = this._lexer.tokenize(prefixToken).map(function (t) {\n                t.index = 0;\n                return t;\n            });\n            tokens.unshift.apply(tokens, prefixTokens);\n        }\n        return new _ParseAST(input, location, tokens, input.length, false, this.errors, 0)\n            .parseTemplateBindings();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseInterpolation = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ split = this.splitInterpolation(input, location, interpolationConfig);\n        if (split == null)\n            return null;\n        var /** @type {?} */ expressions = [];\n        for (var /** @type {?} */ i = 0; i < split.expressions.length; ++i) {\n            var /** @type {?} */ expressionText = split.expressions[i];\n            var /** @type {?} */ sourceToLex = this._stripComments(expressionText);\n            var /** @type {?} */ tokens = this._lexer.tokenize(this._stripComments(split.expressions[i]));\n            var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n                .parseChain();\n            expressions.push(ast);\n        }\n        return new ASTWithSource(new Interpolation(new ParseSpan(0, input == null ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.splitInterpolation = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length <= 1) {\n            return null;\n        }\n        var /** @type {?} */ strings = [];\n        var /** @type {?} */ expressions = [];\n        var /** @type {?} */ offsets = [];\n        var /** @type {?} */ offset = 0;\n        for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n            var /** @type {?} */ part = parts[i];\n            if (i % 2 === 0) {\n                // fixed string\n                strings.push(part);\n                offset += part.length;\n            }\n            else if (part.trim().length > 0) {\n                offset += interpolationConfig.start.length;\n                expressions.push(part);\n                offsets.push(offset);\n                offset += part.length + interpolationConfig.end.length;\n            }\n            else {\n                this._reportError('Blank expressions are not allowed in interpolated strings', input, \"at column \" + this._findInterpolationErrorColumn(parts, i, interpolationConfig) + \" in\", location);\n                expressions.push('$implict');\n                offsets.push(offset);\n            }\n        }\n        return new SplitInterpolation(strings, expressions, offsets);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.wrapLiteralPrimitive = function (input, location) {\n        return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, input == null ? 0 : input.length), input), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._stripComments = function (input) {\n        var /** @type {?} */ i = this._commentStart(input);\n        return i != null ? input.substring(0, i).trim() : input;\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._commentStart = function (input) {\n        var /** @type {?} */ outerQuote = null;\n        for (var /** @type {?} */ i = 0; i < input.length - 1; i++) {\n            var /** @type {?} */ char = input.charCodeAt(i);\n            var /** @type {?} */ nextChar = input.charCodeAt(i + 1);\n            if (char === $SLASH && nextChar == $SLASH && outerQuote == null)\n                return i;\n            if (outerQuote === char) {\n                outerQuote = null;\n            }\n            else if (outerQuote == null && isQuote(char)) {\n                outerQuote = char;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._checkNoInterpolation = function (input, location, interpolationConfig) {\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length > 1) {\n            this._reportError(\"Got interpolation (\" + interpolationConfig.start + interpolationConfig.end + \") where expression was expected\", input, \"at column \" + this._findInterpolationErrorColumn(parts, 1, interpolationConfig) + \" in\", location);\n        }\n    };\n    /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._findInterpolationErrorColumn = function (parts, partInErrIdx, interpolationConfig) {\n        var /** @type {?} */ errLocation = '';\n        for (var /** @type {?} */ j = 0; j < partInErrIdx; j++) {\n            errLocation += j % 2 === 0 ?\n                parts[j] :\n                \"\" + interpolationConfig.start + parts[j] + interpolationConfig.end;\n        }\n        return errLocation.length;\n    };\n    return Parser;\n}());\nParser.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nParser.ctorParameters = function () { return [\n    { type: Lexer, },\n]; };\nvar _ParseAST = (function () {\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} tokens\n     * @param {?} inputLength\n     * @param {?} parseAction\n     * @param {?} errors\n     * @param {?} offset\n     */\n    function _ParseAST(input, location, tokens, inputLength, parseAction, errors, offset) {\n        this.input = input;\n        this.location = location;\n        this.tokens = tokens;\n        this.inputLength = inputLength;\n        this.parseAction = parseAction;\n        this.errors = errors;\n        this.offset = offset;\n        this.rparensExpected = 0;\n        this.rbracketsExpected = 0;\n        this.rbracesExpected = 0;\n        this.index = 0;\n    }\n    /**\n     * @param {?} offset\n     * @return {?}\n     */\n    _ParseAST.prototype.peek = function (offset) {\n        var /** @type {?} */ i = this.index + offset;\n        return i < this.tokens.length ? this.tokens[i] : EOF;\n    };\n    Object.defineProperty(_ParseAST.prototype, \"next\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.peek(0); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_ParseAST.prototype, \"inputIndex\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return (this.index < this.tokens.length) ? this.next.index + this.offset :\n                this.inputLength + this.offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _ParseAST.prototype.span = function (start) { return new ParseSpan(start, this.inputIndex); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.advance = function () { this.index++; };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalCharacter = function (code) {\n        if (this.next.isCharacter(code)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordLet = function () { return this.next.isKeywordLet(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordAs = function () { return this.next.isKeywordAs(); };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.expectCharacter = function (code) {\n        if (this.optionalCharacter(code))\n            return;\n        this.error(\"Missing expected \" + String.fromCharCode(code));\n    };\n    /**\n     * @param {?} op\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalOperator = function (op) {\n        if (this.next.isOperator(op)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @param {?} operator\n     * @return {?}\n     */\n    _ParseAST.prototype.expectOperator = function (operator) {\n        if (this.optionalOperator(operator))\n            return;\n        this.error(\"Missing expected operator \" + operator);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeyword = function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier or keyword\");\n            return '';\n        }\n        this.advance();\n        return n.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeywordOrString = function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier, keyword, or string\");\n            return '';\n        }\n        this.advance();\n        return n.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseChain = function () {\n        var /** @type {?} */ exprs = [];\n        var /** @type {?} */ start = this.inputIndex;\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ expr = this.parsePipe();\n            exprs.push(expr);\n            if (this.optionalCharacter($SEMICOLON)) {\n                if (!this.parseAction) {\n                    this.error('Binding expression cannot contain chained expression');\n                }\n                while (this.optionalCharacter($SEMICOLON)) {\n                } // read all semicolons\n            }\n            else if (this.index < this.tokens.length) {\n                this.error(\"Unexpected token '\" + this.next + \"'\");\n            }\n        }\n        if (exprs.length == 0)\n            return new EmptyExpr(this.span(start));\n        if (exprs.length == 1)\n            return exprs[0];\n        return new Chain(this.span(start), exprs);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePipe = function () {\n        var /** @type {?} */ result = this.parseExpression();\n        if (this.optionalOperator('|')) {\n            if (this.parseAction) {\n                this.error('Cannot have a pipe in an action expression');\n            }\n            do {\n                var /** @type {?} */ name = ((this.expectIdentifierOrKeyword()));\n                var /** @type {?} */ args = [];\n                while (this.optionalCharacter($COLON)) {\n                    args.push(this.parseExpression());\n                }\n                result = new BindingPipe(this.span(result.span.start), result, name, args);\n            } while (this.optionalOperator('|'));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpression = function () { return this.parseConditional(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseConditional = function () {\n        var /** @type {?} */ start = this.inputIndex;\n        var /** @type {?} */ result = this.parseLogicalOr();\n        if (this.optionalOperator('?')) {\n            var /** @type {?} */ yes = this.parsePipe();\n            var /** @type {?} */ no = void 0;\n            if (!this.optionalCharacter($COLON)) {\n                var /** @type {?} */ end = this.inputIndex;\n                var /** @type {?} */ expression = this.input.substring(start, end);\n                this.error(\"Conditional expression \" + expression + \" requires all 3 expressions\");\n                no = new EmptyExpr(this.span(start));\n            }\n            else {\n                no = this.parsePipe();\n            }\n            return new Conditional(this.span(start), result, yes, no);\n        }\n        else {\n            return result;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalOr = function () {\n        // '||'\n        var /** @type {?} */ result = this.parseLogicalAnd();\n        while (this.optionalOperator('||')) {\n            var /** @type {?} */ right = this.parseLogicalAnd();\n            result = new Binary(this.span(result.span.start), '||', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalAnd = function () {\n        // '&&'\n        var /** @type {?} */ result = this.parseEquality();\n        while (this.optionalOperator('&&')) {\n            var /** @type {?} */ right = this.parseEquality();\n            result = new Binary(this.span(result.span.start), '&&', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseEquality = function () {\n        // '==','!=','===','!=='\n        var /** @type {?} */ result = this.parseRelational();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '==':\n                case '===':\n                case '!=':\n                case '!==':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseRelational();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseRelational = function () {\n        // '<', '>', '<=', '>='\n        var /** @type {?} */ result = this.parseAdditive();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '<':\n                case '>':\n                case '<=':\n                case '>=':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseAdditive();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAdditive = function () {\n        // '+', '-'\n        var /** @type {?} */ result = this.parseMultiplicative();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '+':\n                case '-':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseMultiplicative();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseMultiplicative = function () {\n        // '*', '%', '/'\n        var /** @type {?} */ result = this.parsePrefix();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '*':\n                case '%':\n                case '/':\n                    this.advance();\n                    var /** @type {?} */ right = this.parsePrefix();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrefix = function () {\n        if (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ operator = this.next.strValue;\n            var /** @type {?} */ result = void 0;\n            switch (operator) {\n                case '+':\n                    this.advance();\n                    return this.parsePrefix();\n                case '-':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n                case '!':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new PrefixNot(this.span(start), result);\n            }\n        }\n        return this.parseCallChain();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallChain = function () {\n        var /** @type {?} */ result = this.parsePrimary();\n        while (true) {\n            if (this.optionalCharacter($PERIOD)) {\n                result = this.parseAccessMemberOrMethodCall(result, false);\n            }\n            else if (this.optionalOperator('?.')) {\n                result = this.parseAccessMemberOrMethodCall(result, true);\n            }\n            else if (this.optionalCharacter($LBRACKET)) {\n                this.rbracketsExpected++;\n                var /** @type {?} */ key = this.parsePipe();\n                this.rbracketsExpected--;\n                this.expectCharacter($RBRACKET);\n                if (this.optionalOperator('=')) {\n                    var /** @type {?} */ value = this.parseConditional();\n                    result = new KeyedWrite(this.span(result.span.start), result, key, value);\n                }\n                else {\n                    result = new KeyedRead(this.span(result.span.start), result, key);\n                }\n            }\n            else if (this.optionalCharacter($LPAREN)) {\n                this.rparensExpected++;\n                var /** @type {?} */ args = this.parseCallArguments();\n                this.rparensExpected--;\n                this.expectCharacter($RPAREN);\n                result = new FunctionCall(this.span(result.span.start), result, args);\n            }\n            else {\n                return result;\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrimary = function () {\n        var /** @type {?} */ start = this.inputIndex;\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ result = this.parsePipe();\n            this.rparensExpected--;\n            this.expectCharacter($RPAREN);\n            return result;\n        }\n        else if (this.next.isKeywordNull()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), null);\n        }\n        else if (this.next.isKeywordUndefined()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), void 0);\n        }\n        else if (this.next.isKeywordTrue()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), true);\n        }\n        else if (this.next.isKeywordFalse()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), false);\n        }\n        else if (this.next.isKeywordThis()) {\n            this.advance();\n            return new ImplicitReceiver(this.span(start));\n        }\n        else if (this.optionalCharacter($LBRACKET)) {\n            this.rbracketsExpected++;\n            var /** @type {?} */ elements = this.parseExpressionList($RBRACKET);\n            this.rbracketsExpected--;\n            this.expectCharacter($RBRACKET);\n            return new LiteralArray(this.span(start), elements);\n        }\n        else if (this.next.isCharacter($LBRACE)) {\n            return this.parseLiteralMap();\n        }\n        else if (this.next.isIdentifier()) {\n            return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n        }\n        else if (this.next.isNumber()) {\n            var /** @type {?} */ value = this.next.toNumber();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), value);\n        }\n        else if (this.next.isString()) {\n            var /** @type {?} */ literalValue = this.next.toString();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), literalValue);\n        }\n        else if (this.index >= this.tokens.length) {\n            this.error(\"Unexpected end of expression: \" + this.input);\n            return new EmptyExpr(this.span(start));\n        }\n        else {\n            this.error(\"Unexpected token \" + this.next);\n            return new EmptyExpr(this.span(start));\n        }\n    };\n    /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpressionList = function (terminator) {\n        var /** @type {?} */ result = [];\n        if (!this.next.isCharacter(terminator)) {\n            do {\n                result.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLiteralMap = function () {\n        var /** @type {?} */ keys = [];\n        var /** @type {?} */ values = [];\n        var /** @type {?} */ start = this.inputIndex;\n        this.expectCharacter($LBRACE);\n        if (!this.optionalCharacter($RBRACE)) {\n            this.rbracesExpected++;\n            do {\n                var /** @type {?} */ key = ((this.expectIdentifierOrKeywordOrString()));\n                keys.push(key);\n                this.expectCharacter($COLON);\n                values.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n            this.rbracesExpected--;\n            this.expectCharacter($RBRACE);\n        }\n        return new LiteralMap(this.span(start), keys, values);\n    };\n    /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAccessMemberOrMethodCall = function (receiver, isSafe) {\n        if (isSafe === void 0) { isSafe = false; }\n        var /** @type {?} */ start = receiver.span.start;\n        var /** @type {?} */ id = ((this.expectIdentifierOrKeyword()));\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ args = this.parseCallArguments();\n            this.expectCharacter($RPAREN);\n            this.rparensExpected--;\n            var /** @type {?} */ span = this.span(start);\n            return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                new MethodCall(span, receiver, id, args);\n        }\n        else {\n            if (isSafe) {\n                if (this.optionalOperator('=')) {\n                    this.error('The \\'?.\\' operator cannot be used in the assignment');\n                    return new EmptyExpr(this.span(start));\n                }\n                else {\n                    return new SafePropertyRead(this.span(start), receiver, id);\n                }\n            }\n            else {\n                if (this.optionalOperator('=')) {\n                    if (!this.parseAction) {\n                        this.error('Bindings cannot contain assignments');\n                        return new EmptyExpr(this.span(start));\n                    }\n                    var /** @type {?} */ value = this.parseConditional();\n                    return new PropertyWrite(this.span(start), receiver, id, value);\n                }\n                else {\n                    return new PropertyRead(this.span(start), receiver, id);\n                }\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallArguments = function () {\n        if (this.next.isCharacter($RPAREN))\n            return [];\n        var /** @type {?} */ positionals = [];\n        do {\n            positionals.push(this.parsePipe());\n        } while (this.optionalCharacter($COMMA));\n        return (positionals);\n    };\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    _ParseAST.prototype.expectTemplateBindingKey = function () {\n        var /** @type {?} */ result = '';\n        var /** @type {?} */ operatorFound = false;\n        do {\n            result += this.expectIdentifierOrKeywordOrString();\n            operatorFound = this.optionalOperator('-');\n            if (operatorFound) {\n                result += '-';\n            }\n        } while (operatorFound);\n        return result.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseTemplateBindings = function () {\n        var /** @type {?} */ bindings = [];\n        var /** @type {?} */ prefix = ((null));\n        var /** @type {?} */ warnings = [];\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ keyIsVar = this.peekKeywordLet();\n            if (keyIsVar) {\n                this.advance();\n            }\n            var /** @type {?} */ rawKey = this.expectTemplateBindingKey();\n            var /** @type {?} */ key = rawKey;\n            if (!keyIsVar) {\n                if (prefix == null) {\n                    prefix = key;\n                }\n                else {\n                    key = prefix + key[0].toUpperCase() + key.substring(1);\n                }\n            }\n            this.optionalCharacter($COLON);\n            var /** @type {?} */ name = ((null));\n            var /** @type {?} */ expression = ((null));\n            if (keyIsVar) {\n                if (this.optionalOperator('=')) {\n                    name = this.expectTemplateBindingKey();\n                }\n                else {\n                    name = '\\$implicit';\n                }\n            }\n            else if (this.peekKeywordAs()) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                name = rawKey;\n                key = this.expectTemplateBindingKey(); // read local var name\n                keyIsVar = true;\n            }\n            else if (this.next !== EOF && !this.peekKeywordLet()) {\n                var /** @type {?} */ start_2 = this.inputIndex;\n                var /** @type {?} */ ast = this.parsePipe();\n                var /** @type {?} */ source = this.input.substring(start_2 - this.offset, this.inputIndex - this.offset);\n                expression = new ASTWithSource(ast, source, this.location, this.errors);\n            }\n            bindings.push(new TemplateBinding(this.span(start), key, keyIsVar, name, expression));\n            if (this.peekKeywordAs() && !keyIsVar) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                var /** @type {?} */ letName = this.expectTemplateBindingKey(); // read local var name\n                bindings.push(new TemplateBinding(this.span(letStart), letName, true, key, /** @type {?} */ ((null))));\n            }\n            if (!this.optionalCharacter($SEMICOLON)) {\n                this.optionalCharacter($COMMA);\n            }\n        }\n        return new TemplateBindingParseResult(bindings, warnings, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.error = function (message, index) {\n        if (index === void 0) { index = null; }\n        this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n        this.skip();\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.locationText = function (index) {\n        if (index === void 0) { index = null; }\n        if (index == null)\n            index = this.index;\n        return (index < this.tokens.length) ? \"at column \" + (this.tokens[index].index + 1) + \" in\" :\n            \"at the end of the expression\";\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.skip = function () {\n        var /** @type {?} */ n = this.next;\n        while (this.index < this.tokens.length && !n.isCharacter($SEMICOLON) &&\n            (this.rparensExpected <= 0 || !n.isCharacter($RPAREN)) &&\n            (this.rbracesExpected <= 0 || !n.isCharacter($RBRACE)) &&\n            (this.rbracketsExpected <= 0 || !n.isCharacter($RBRACKET))) {\n            if (this.next.isError()) {\n                this.errors.push(new ParserError(/** @type {?} */ ((this.next.toString())), this.input, this.locationText(), this.location));\n            }\n            this.advance();\n            n = this.next;\n        }\n    };\n    return _ParseAST;\n}());\nvar SimpleExpressionChecker = (function () {\n    function SimpleExpressionChecker() {\n        this.errors = [];\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    SimpleExpressionChecker.check = function (ast) {\n        var /** @type {?} */ s = new SimpleExpressionChecker();\n        ast.visit(s);\n        return s.errors;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitImplicitReceiver = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitInterpolation = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralPrimitive = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyWrite = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafePropertyRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitMethodCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafeMethodCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitFunctionCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralArray = function (ast, context) { this.visitAll(ast.expressions); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralMap = function (ast, context) { this.visitAll(ast.values); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitBinary = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPrefixNot = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitConditional = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPipe = function (ast, context) { this.errors.push('pipes'); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedWrite = function (ast, context) { };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitAll = function (asts) {\n        var _this = this;\n        return asts.map(function (node) { return node.visit(_this); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitChain = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitQuote = function (ast, context) { };\n    return SimpleExpressionChecker;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParseLocation = (function () {\n    /**\n     * @param {?} file\n     * @param {?} offset\n     * @param {?} line\n     * @param {?} col\n     */\n    function ParseLocation(file, offset, line, col) {\n        this.file = file;\n        this.offset = offset;\n        this.line = line;\n        this.col = col;\n    }\n    /**\n     * @return {?}\n     */\n    ParseLocation.prototype.toString = function () {\n        return this.offset != null ? this.file.url + \"@\" + this.line + \":\" + this.col : this.file.url;\n    };\n    /**\n     * @param {?} delta\n     * @return {?}\n     */\n    ParseLocation.prototype.moveBy = function (delta) {\n        var /** @type {?} */ source = this.file.content;\n        var /** @type {?} */ len = source.length;\n        var /** @type {?} */ offset = this.offset;\n        var /** @type {?} */ line = this.line;\n        var /** @type {?} */ col = this.col;\n        while (offset > 0 && delta < 0) {\n            offset--;\n            delta++;\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            if (ch == $LF) {\n                line--;\n                var /** @type {?} */ priorLine = source.substr(0, offset - 1).lastIndexOf(String.fromCharCode($LF));\n                col = priorLine > 0 ? offset - priorLine : offset;\n            }\n            else {\n                col--;\n            }\n        }\n        while (offset < len && delta > 0) {\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            offset++;\n            delta--;\n            if (ch == $LF) {\n                line++;\n                col = 0;\n            }\n            else {\n                col++;\n            }\n        }\n        return new ParseLocation(this.file, offset, line, col);\n    };\n    /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    ParseLocation.prototype.getContext = function (maxChars, maxLines) {\n        var /** @type {?} */ content = this.file.content;\n        var /** @type {?} */ startOffset = this.offset;\n        if (startOffset != null) {\n            if (startOffset > content.length - 1) {\n                startOffset = content.length - 1;\n            }\n            var /** @type {?} */ endOffset = startOffset;\n            var /** @type {?} */ ctxChars = 0;\n            var /** @type {?} */ ctxLines = 0;\n            while (ctxChars < maxChars && startOffset > 0) {\n                startOffset--;\n                ctxChars++;\n                if (content[startOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            ctxChars = 0;\n            ctxLines = 0;\n            while (ctxChars < maxChars && endOffset < content.length - 1) {\n                endOffset++;\n                ctxChars++;\n                if (content[endOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            return {\n                before: content.substring(startOffset, this.offset),\n                after: content.substring(this.offset, endOffset + 1),\n            };\n        }\n        return null;\n    };\n    return ParseLocation;\n}());\nvar ParseSourceFile = (function () {\n    /**\n     * @param {?} content\n     * @param {?} url\n     */\n    function ParseSourceFile(content, url) {\n        this.content = content;\n        this.url = url;\n    }\n    return ParseSourceFile;\n}());\nvar ParseSourceSpan = (function () {\n    /**\n     * @param {?} start\n     * @param {?} end\n     * @param {?=} details\n     */\n    function ParseSourceSpan(start, end, details) {\n        if (details === void 0) { details = null; }\n        this.start = start;\n        this.end = end;\n        this.details = details;\n    }\n    /**\n     * @return {?}\n     */\n    ParseSourceSpan.prototype.toString = function () {\n        return this.start.file.content.substring(this.start.offset, this.end.offset);\n    };\n    return ParseSourceSpan;\n}());\nvar ParseErrorLevel = {};\nParseErrorLevel.WARNING = 0;\nParseErrorLevel.ERROR = 1;\nParseErrorLevel[ParseErrorLevel.WARNING] = \"WARNING\";\nParseErrorLevel[ParseErrorLevel.ERROR] = \"ERROR\";\nvar ParseError = (function () {\n    /**\n     * @param {?} span\n     * @param {?} msg\n     * @param {?=} level\n     */\n    function ParseError(span, msg, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this.span = span;\n        this.msg = msg;\n        this.level = level;\n    }\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.toString = function () {\n        var /** @type {?} */ ctx = this.span.start.getContext(100, 3);\n        var /** @type {?} */ contextStr = ctx ? \" (\\\"\" + ctx.before + \"[\" + ParseErrorLevel[this.level] + \" ->]\" + ctx.after + \"\\\")\" : '';\n        var /** @type {?} */ details = this.span.details ? \", \" + this.span.details : '';\n        return \"\" + this.msg + contextStr + \": \" + this.span.start + details;\n    };\n    return ParseError;\n}());\n/**\n * @param {?} kind\n * @param {?} type\n * @return {?}\n */\nfunction typeSourceSpan(kind, type) {\n    var /** @type {?} */ moduleUrl = identifierModuleUrl(type);\n    var /** @type {?} */ sourceFileName = moduleUrl != null ? \"in \" + kind + \" \" + identifierName(type) + \" in \" + moduleUrl :\n        \"in \" + kind + \" \" + identifierName(type);\n    var /** @type {?} */ sourceFile = new ParseSourceFile('', sourceFileName);\n    return new ParseSourceSpan(new ParseLocation(sourceFile, -1, -1, -1), new ParseLocation(sourceFile, -1, -1, -1));\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Text = (function () {\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Text.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Expansion = (function () {\n    /**\n     * @param {?} switchValue\n     * @param {?} type\n     * @param {?} cases\n     * @param {?} sourceSpan\n     * @param {?} switchValueSourceSpan\n     */\n    function Expansion(switchValue, type, cases, sourceSpan, switchValueSourceSpan) {\n        this.switchValue = switchValue;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n        this.switchValueSourceSpan = switchValueSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Expansion.prototype.visit = function (visitor, context) { return visitor.visitExpansion(this, context); };\n    return Expansion;\n}());\nvar ExpansionCase = (function () {\n    /**\n     * @param {?} value\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} valueSourceSpan\n     * @param {?} expSourceSpan\n     */\n    function ExpansionCase(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n        this.value = value;\n        this.expression = expression;\n        this.sourceSpan = sourceSpan;\n        this.valueSourceSpan = valueSourceSpan;\n        this.expSourceSpan = expSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpansionCase.prototype.visit = function (visitor, context) { return visitor.visitExpansionCase(this, context); };\n    return ExpansionCase;\n}());\nvar Attribute$1 = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?=} valueSpan\n     */\n    function Attribute$1(name, value, sourceSpan, valueSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n        this.valueSpan = valueSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Attribute$1.prototype.visit = function (visitor, context) { return visitor.visitAttribute(this, context); };\n    return Attribute$1;\n}());\nvar Element = (function () {\n    /**\n     * @param {?} name\n     * @param {?} attrs\n     * @param {?} children\n     * @param {?} sourceSpan\n     * @param {?=} startSourceSpan\n     * @param {?=} endSourceSpan\n     */\n    function Element(name, attrs, children, sourceSpan, startSourceSpan, endSourceSpan) {\n        if (startSourceSpan === void 0) { startSourceSpan = null; }\n        if (endSourceSpan === void 0) { endSourceSpan = null; }\n        this.name = name;\n        this.attrs = attrs;\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Element.prototype.visit = function (visitor, context) { return visitor.visitElement(this, context); };\n    return Element;\n}());\nvar Comment = (function () {\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function Comment(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Comment.prototype.visit = function (visitor, context) { return visitor.visitComment(this, context); };\n    return Comment;\n}());\n/**\n * @param {?} visitor\n * @param {?} nodes\n * @param {?=} context\n * @return {?}\n */\nfunction visitAll(visitor, nodes, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    nodes.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TokenType$1 = {};\nTokenType$1.TAG_OPEN_START = 0;\nTokenType$1.TAG_OPEN_END = 1;\nTokenType$1.TAG_OPEN_END_VOID = 2;\nTokenType$1.TAG_CLOSE = 3;\nTokenType$1.TEXT = 4;\nTokenType$1.ESCAPABLE_RAW_TEXT = 5;\nTokenType$1.RAW_TEXT = 6;\nTokenType$1.COMMENT_START = 7;\nTokenType$1.COMMENT_END = 8;\nTokenType$1.CDATA_START = 9;\nTokenType$1.CDATA_END = 10;\nTokenType$1.ATTR_NAME = 11;\nTokenType$1.ATTR_VALUE = 12;\nTokenType$1.DOC_TYPE = 13;\nTokenType$1.EXPANSION_FORM_START = 14;\nTokenType$1.EXPANSION_CASE_VALUE = 15;\nTokenType$1.EXPANSION_CASE_EXP_START = 16;\nTokenType$1.EXPANSION_CASE_EXP_END = 17;\nTokenType$1.EXPANSION_FORM_END = 18;\nTokenType$1.EOF = 19;\nTokenType$1[TokenType$1.TAG_OPEN_START] = \"TAG_OPEN_START\";\nTokenType$1[TokenType$1.TAG_OPEN_END] = \"TAG_OPEN_END\";\nTokenType$1[TokenType$1.TAG_OPEN_END_VOID] = \"TAG_OPEN_END_VOID\";\nTokenType$1[TokenType$1.TAG_CLOSE] = \"TAG_CLOSE\";\nTokenType$1[TokenType$1.TEXT] = \"TEXT\";\nTokenType$1[TokenType$1.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTokenType$1[TokenType$1.RAW_TEXT] = \"RAW_TEXT\";\nTokenType$1[TokenType$1.COMMENT_START] = \"COMMENT_START\";\nTokenType$1[TokenType$1.COMMENT_END] = \"COMMENT_END\";\nTokenType$1[TokenType$1.CDATA_START] = \"CDATA_START\";\nTokenType$1[TokenType$1.CDATA_END] = \"CDATA_END\";\nTokenType$1[TokenType$1.ATTR_NAME] = \"ATTR_NAME\";\nTokenType$1[TokenType$1.ATTR_VALUE] = \"ATTR_VALUE\";\nTokenType$1[TokenType$1.DOC_TYPE] = \"DOC_TYPE\";\nTokenType$1[TokenType$1.EXPANSION_FORM_START] = \"EXPANSION_FORM_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_VALUE] = \"EXPANSION_CASE_VALUE\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_START] = \"EXPANSION_CASE_EXP_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_END] = \"EXPANSION_CASE_EXP_END\";\nTokenType$1[TokenType$1.EXPANSION_FORM_END] = \"EXPANSION_FORM_END\";\nTokenType$1[TokenType$1.EOF] = \"EOF\";\nvar Token$1 = (function () {\n    /**\n     * @param {?} type\n     * @param {?} parts\n     * @param {?} sourceSpan\n     */\n    function Token$1(type, parts, sourceSpan) {\n        this.type = type;\n        this.parts = parts;\n        this.sourceSpan = sourceSpan;\n    }\n    return Token$1;\n}());\nvar TokenError = (function (_super) {\n    __extends(TokenError, _super);\n    /**\n     * @param {?} errorMsg\n     * @param {?} tokenType\n     * @param {?} span\n     */\n    function TokenError(errorMsg, tokenType, span) {\n        var _this = _super.call(this, span, errorMsg) || this;\n        _this.tokenType = tokenType;\n        return _this;\n    }\n    return TokenError;\n}(ParseError));\nvar TokenizeResult = (function () {\n    /**\n     * @param {?} tokens\n     * @param {?} errors\n     */\n    function TokenizeResult(tokens, errors) {\n        this.tokens = tokens;\n        this.errors = errors;\n    }\n    return TokenizeResult;\n}());\n/**\n * @param {?} source\n * @param {?} url\n * @param {?} getTagDefinition\n * @param {?=} tokenizeExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nfunction tokenize(source, url, getTagDefinition, tokenizeExpansionForms, interpolationConfig) {\n    if (tokenizeExpansionForms === void 0) { tokenizeExpansionForms = false; }\n    if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n    return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n        .tokenize();\n}\nvar _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n/**\n * @param {?} charCode\n * @return {?}\n */\nfunction _unexpectedCharacterErrorMsg(charCode) {\n    var /** @type {?} */ char = charCode === $EOF ? 'EOF' : String.fromCharCode(charCode);\n    return \"Unexpected character \\\"\" + char + \"\\\"\";\n}\n/**\n * @param {?} entitySrc\n * @return {?}\n */\nfunction _unknownEntityErrorMsg(entitySrc) {\n    return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\n}\nvar _ControlFlowError = (function () {\n    /**\n     * @param {?} error\n     */\n    function _ControlFlowError(error) {\n        this.error = error;\n    }\n    return _ControlFlowError;\n}());\nvar _Tokenizer = (function () {\n    /**\n     * @param {?} _file The html source\n     * @param {?} _getTagDefinition\n     * @param {?} _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n     * @param {?=} _interpolationConfig\n     */\n    function _Tokenizer(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig) {\n        if (_interpolationConfig === void 0) { _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._file = _file;\n        this._getTagDefinition = _getTagDefinition;\n        this._tokenizeIcu = _tokenizeIcu;\n        this._interpolationConfig = _interpolationConfig;\n        this._peek = -1;\n        this._nextPeek = -1;\n        this._index = -1;\n        this._line = 0;\n        this._column = -1;\n        this._expansionCaseStack = [];\n        this._inInterpolation = false;\n        this.tokens = [];\n        this.errors = [];\n        this._input = _file.content;\n        this._length = _file.content.length;\n        this._advance();\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    _Tokenizer.prototype._processCarriageReturns = function (content) {\n        // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n        // In order to keep the original position in the source, we can not\n        // pre-process it.\n        // Instead CRs are processed right before instantiating the tokens.\n        return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype.tokenize = function () {\n        while (this._peek !== $EOF) {\n            var /** @type {?} */ start = this._getLocation();\n            try {\n                if (this._attemptCharCode($LT)) {\n                    if (this._attemptCharCode($BANG)) {\n                        if (this._attemptCharCode($LBRACKET)) {\n                            this._consumeCdata(start);\n                        }\n                        else if (this._attemptCharCode($MINUS)) {\n                            this._consumeComment(start);\n                        }\n                        else {\n                            this._consumeDocType(start);\n                        }\n                    }\n                    else if (this._attemptCharCode($SLASH)) {\n                        this._consumeTagClose(start);\n                    }\n                    else {\n                        this._consumeTagOpen(start);\n                    }\n                }\n                else if (!(this._tokenizeIcu && this._tokenizeExpansionForm())) {\n                    this._consumeText();\n                }\n            }\n            catch (e) {\n                if (e instanceof _ControlFlowError) {\n                    this.errors.push(e.error);\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        this._beginToken(TokenType$1.EOF);\n        this._endToken([]);\n        return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _Tokenizer.prototype._tokenizeExpansionForm = function () {\n        if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n            this._consumeExpansionFormStart();\n            return true;\n        }\n        if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n            this._consumeExpansionCaseStart();\n            return true;\n        }\n        if (this._peek === $RBRACE) {\n            if (this._isInExpansionCase()) {\n                this._consumeExpansionCaseEnd();\n                return true;\n            }\n            if (this._isInExpansionForm()) {\n                this._consumeExpansionFormEnd();\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._getLocation = function () {\n        return new ParseLocation(this._file, this._index, this._line, this._column);\n    };\n    /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._getSpan = function (start, end) {\n        if (start === void 0) { start = this._getLocation(); }\n        if (end === void 0) { end = this._getLocation(); }\n        return new ParseSourceSpan(start, end);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._beginToken = function (type, start) {\n        if (start === void 0) { start = this._getLocation(); }\n        this._currentTokenStart = start;\n        this._currentTokenType = type;\n    };\n    /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._endToken = function (parts, end) {\n        if (end === void 0) { end = this._getLocation(); }\n        var /** @type {?} */ token = new Token$1(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n        this.tokens.push(token);\n        this._currentTokenStart = ((null));\n        this._currentTokenType = ((null));\n        return token;\n    };\n    /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    _Tokenizer.prototype._createError = function (msg, span) {\n        if (this._isInExpansionForm()) {\n            msg += \" (Do you have an unescaped \\\"{\\\" in your template? Use \\\"{{ '{' }}\\\") to escape it.)\";\n        }\n        var /** @type {?} */ error = new TokenError(msg, this._currentTokenType, span);\n        this._currentTokenStart = ((null));\n        this._currentTokenType = ((null));\n        return new _ControlFlowError(error);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._advance = function () {\n        if (this._index >= this._length) {\n            throw this._createError(_unexpectedCharacterErrorMsg($EOF), this._getSpan());\n        }\n        if (this._peek === $LF) {\n            this._line++;\n            this._column = 0;\n        }\n        else if (this._peek !== $LF && this._peek !== $CR) {\n            this._column++;\n        }\n        this._index++;\n        this._peek = this._index >= this._length ? $EOF : this._input.charCodeAt(this._index);\n        this._nextPeek =\n            this._index + 1 >= this._length ? $EOF : this._input.charCodeAt(this._index + 1);\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCode = function (charCode) {\n        if (this._peek === charCode) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeCaseInsensitive = function (charCode) {\n        if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCode = function (charCode) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptCharCode(charCode)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n        }\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStr = function (chars) {\n        var /** @type {?} */ len = chars.length;\n        if (this._index + len > this._length) {\n            return false;\n        }\n        var /** @type {?} */ initialPosition = this._savePosition();\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            if (!this._attemptCharCode(chars.charCodeAt(i))) {\n                // If attempting to parse the string fails, we want to reset the parser\n                // to where it was before the attempt\n                this._restorePosition(initialPosition);\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStrCaseInsensitive = function (chars) {\n        for (var /** @type {?} */ i = 0; i < chars.length; i++) {\n            if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireStr = function (chars) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptStr(chars)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeUntilFn = function (predicate) {\n        while (!predicate(this._peek)) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCodeUntilFn = function (predicate, len) {\n        var /** @type {?} */ start = this._getLocation();\n        this._attemptCharCodeUntilFn(predicate);\n        if (this._index - start.offset < len) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n        }\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptUntilChar = function (char) {\n        while (this._peek !== char) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._readChar = function (decodeEntities) {\n        if (decodeEntities && this._peek === $AMPERSAND) {\n            return this._decodeEntity();\n        }\n        else {\n            var /** @type {?} */ index = this._index;\n            this._advance();\n            return this._input[index];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._decodeEntity = function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._advance();\n        if (this._attemptCharCode($HASH)) {\n            var /** @type {?} */ isHex = this._attemptCharCode($x) || this._attemptCharCode($X);\n            var /** @type {?} */ numberStart = this._getLocation().offset;\n            this._attemptCharCodeUntilFn(isDigitEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            this._advance();\n            var /** @type {?} */ strNum = this._input.substring(numberStart, this._index - 1);\n            try {\n                var /** @type {?} */ charCode = parseInt(strNum, isHex ? 16 : 10);\n                return String.fromCharCode(charCode);\n            }\n            catch (e) {\n                var /** @type {?} */ entity = this._input.substring(start.offset + 1, this._index - 1);\n                throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n            }\n        }\n        else {\n            var /** @type {?} */ startPosition = this._savePosition();\n            this._attemptCharCodeUntilFn(isNamedEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                this._restorePosition(startPosition);\n                return '&';\n            }\n            this._advance();\n            var /** @type {?} */ name = this._input.substring(start.offset + 1, this._index - 1);\n            var /** @type {?} */ char = NAMED_ENTITIES[name];\n            if (!char) {\n                throw this._createError(_unknownEntityErrorMsg(name), this._getSpan(start));\n            }\n            return char;\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawText = function (decodeEntities, firstCharOfEnd, attemptEndRest) {\n        var /** @type {?} */ tagCloseStart;\n        var /** @type {?} */ textStart = this._getLocation();\n        this._beginToken(decodeEntities ? TokenType$1.ESCAPABLE_RAW_TEXT : TokenType$1.RAW_TEXT, textStart);\n        var /** @type {?} */ parts = [];\n        while (true) {\n            tagCloseStart = this._getLocation();\n            if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n                break;\n            }\n            if (this._index > tagCloseStart.offset) {\n                // add the characters consumed by the previous if statement to the output\n                parts.push(this._input.substring(tagCloseStart.offset, this._index));\n            }\n            while (this._peek !== firstCharOfEnd) {\n                parts.push(this._readChar(decodeEntities));\n            }\n        }\n        return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeComment = function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.COMMENT_START, start);\n        this._requireCharCode($MINUS);\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $MINUS, function () { return _this._attemptStr('->'); });\n        this._beginToken(TokenType$1.COMMENT_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeCdata = function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.CDATA_START, start);\n        this._requireStr('CDATA[');\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $RBRACKET, function () { return _this._attemptStr(']>'); });\n        this._beginToken(TokenType$1.CDATA_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeDocType = function (start) {\n        this._beginToken(TokenType$1.DOC_TYPE, start);\n        this._attemptUntilChar($GT);\n        this._advance();\n        this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumePrefixAndName = function () {\n        var /** @type {?} */ nameOrPrefixStart = this._index;\n        var /** @type {?} */ prefix = ((null));\n        while (this._peek !== $COLON && !isPrefixEnd(this._peek)) {\n            this._advance();\n        }\n        var /** @type {?} */ nameStart;\n        if (this._peek === $COLON) {\n            this._advance();\n            prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n            nameStart = this._index;\n        }\n        else {\n            nameStart = nameOrPrefixStart;\n        }\n        this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n        var /** @type {?} */ name = this._input.substring(nameStart, this._index);\n        return [prefix, name];\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpen = function (start) {\n        var /** @type {?} */ savedPos = this._savePosition();\n        var /** @type {?} */ tagName;\n        var /** @type {?} */ lowercaseTagName;\n        try {\n            if (!isAsciiLetter(this._peek)) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            var /** @type {?} */ nameStart = this._index;\n            this._consumeTagOpenStart(start);\n            tagName = this._input.substring(nameStart, this._index);\n            lowercaseTagName = tagName.toLowerCase();\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            while (this._peek !== $SLASH && this._peek !== $GT) {\n                this._consumeAttributeName();\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n                if (this._attemptCharCode($EQ)) {\n                    this._attemptCharCodeUntilFn(isNotWhitespace);\n                    this._consumeAttributeValue();\n                }\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n            }\n            this._consumeTagOpenEnd();\n        }\n        catch (e) {\n            if (e instanceof _ControlFlowError) {\n                // When the start tag is invalid, assume we want a \"<\"\n                this._restorePosition(savedPos);\n                // Back to back text tokens are merged at the end\n                this._beginToken(TokenType$1.TEXT, start);\n                this._endToken(['<']);\n                return;\n            }\n            throw e;\n        }\n        var /** @type {?} */ contentTokenType = this._getTagDefinition(tagName).contentType;\n        if (contentTokenType === TagContentType.RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, false);\n        }\n        else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, true);\n        }\n    };\n    /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawTextWithTagClose = function (lowercaseTagName, decodeEntities) {\n        var _this = this;\n        var /** @type {?} */ textToken = this._consumeRawText(decodeEntities, $LT, function () {\n            if (!_this._attemptCharCode($SLASH))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            return _this._attemptCharCode($GT);\n        });\n        this._beginToken(TokenType$1.TAG_CLOSE, textToken.sourceSpan.end);\n        this._endToken([/** @type {?} */ ((null)), lowercaseTagName]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenStart = function (start) {\n        this._beginToken(TokenType$1.TAG_OPEN_START, start);\n        var /** @type {?} */ parts = this._consumePrefixAndName();\n        this._endToken(parts);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeName = function () {\n        this._beginToken(TokenType$1.ATTR_NAME);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeValue = function () {\n        this._beginToken(TokenType$1.ATTR_VALUE);\n        var /** @type {?} */ value;\n        if (this._peek === $SQ || this._peek === $DQ) {\n            var /** @type {?} */ quoteChar = this._peek;\n            this._advance();\n            var /** @type {?} */ parts = [];\n            while (this._peek !== quoteChar) {\n                parts.push(this._readChar(true));\n            }\n            value = parts.join('');\n            this._advance();\n        }\n        else {\n            var /** @type {?} */ valueStart = this._index;\n            this._requireCharCodeUntilFn(isNameEnd, 1);\n            value = this._input.substring(valueStart, this._index);\n        }\n        this._endToken([this._processCarriageReturns(value)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenEnd = function () {\n        var /** @type {?} */ tokenType = this._attemptCharCode($SLASH) ? TokenType$1.TAG_OPEN_END_VOID : TokenType$1.TAG_OPEN_END;\n        this._beginToken(tokenType);\n        this._requireCharCode($GT);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagClose = function (start) {\n        this._beginToken(TokenType$1.TAG_CLOSE, start);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._requireCharCode($GT);\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormStart = function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_FORM_START);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ condition = this._readUntil($COMMA);\n        this._endToken([condition], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ type = this._readUntil($COMMA);\n        this._endToken([type], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseStart = function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_VALUE, this._getLocation());\n        var /** @type {?} */ value = this._readUntil($LBRACE).trim();\n        this._endToken([value], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_CASE_EXP_START);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseEnd = function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormEnd = function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeText = function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._beginToken(TokenType$1.TEXT, start);\n        var /** @type {?} */ parts = [];\n        do {\n            if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n                parts.push(this._interpolationConfig.start);\n                this._inInterpolation = true;\n            }\n            else if (this._interpolationConfig && this._inInterpolation &&\n                this._attemptStr(this._interpolationConfig.end)) {\n                parts.push(this._interpolationConfig.end);\n                this._inInterpolation = false;\n            }\n            else {\n                parts.push(this._readChar(true));\n            }\n        } while (!this._isTextEnd());\n        this._endToken([this._processCarriageReturns(parts.join(''))]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isTextEnd = function () {\n        if (this._peek === $LT || this._peek === $EOF) {\n            return true;\n        }\n        if (this._tokenizeIcu && !this._inInterpolation) {\n            if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                // start of an expansion form\n                return true;\n            }\n            if (this._peek === $RBRACE && this._isInExpansionCase()) {\n                // end of and expansion case\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._savePosition = function () {\n        return [this._peek, this._index, this._column, this._line, this.tokens.length];\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._readUntil = function (char) {\n        var /** @type {?} */ start = this._index;\n        this._attemptUntilChar(char);\n        return this._input.substring(start, this._index);\n    };\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    _Tokenizer.prototype._restorePosition = function (position) {\n        this._peek = position[0];\n        this._index = position[1];\n        this._column = position[2];\n        this._line = position[3];\n        var /** @type {?} */ nbTokens = position[4];\n        if (nbTokens < this.tokens.length) {\n            // remove any extra tokens\n            this.tokens = this.tokens.slice(0, nbTokens);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionCase = function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_CASE_EXP_START;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionForm = function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_FORM_START;\n    };\n    return _Tokenizer;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNotWhitespace(code) {\n    return !isWhitespace(code) || code === $EOF;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNameEnd(code) {\n    return isWhitespace(code) || code === $GT || code === $SLASH ||\n        code === $SQ || code === $DQ || code === $EQ;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isPrefixEnd(code) {\n    return (code < $a || $z < code) && (code < $A || $Z < code) &&\n        (code < $0 || code > $9);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigitEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiHexDigit(code);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNamedEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiLetter(code);\n}\n/**\n * @param {?} input\n * @param {?} offset\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction isExpansionFormStart(input, offset, interpolationConfig) {\n    var /** @type {?} */ isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n    return input.charCodeAt(offset) == $LBRACE && !isInterpolationStart;\n}\n/**\n * @param {?} peek\n * @return {?}\n */\nfunction isExpansionCaseStart(peek) {\n    return peek === $EQ || isAsciiLetter(peek);\n}\n/**\n * @param {?} code1\n * @param {?} code2\n * @return {?}\n */\nfunction compareCharCodeCaseInsensitive(code1, code2) {\n    return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction toUpperCaseCharCode(code) {\n    return code >= $a && code <= $z ? code - $a + $A : code;\n}\n/**\n * @param {?} srcTokens\n * @return {?}\n */\nfunction mergeTextTokens(srcTokens) {\n    var /** @type {?} */ dstTokens = [];\n    var /** @type {?} */ lastDstToken = undefined;\n    for (var /** @type {?} */ i = 0; i < srcTokens.length; i++) {\n        var /** @type {?} */ token = srcTokens[i];\n        if (lastDstToken && lastDstToken.type == TokenType$1.TEXT && token.type == TokenType$1.TEXT) {\n            lastDstToken.parts[0] += token.parts[0];\n            lastDstToken.sourceSpan.end = token.sourceSpan.end;\n        }\n        else {\n            lastDstToken = token;\n            dstTokens.push(lastDstToken);\n        }\n    }\n    return dstTokens;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TreeError = (function (_super) {\n    __extends(TreeError, _super);\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     */\n    function TreeError(elementName, span, msg) {\n        var _this = _super.call(this, span, msg) || this;\n        _this.elementName = elementName;\n        return _this;\n    }\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    TreeError.create = function (elementName, span, msg) {\n        return new TreeError(elementName, span, msg);\n    };\n    return TreeError;\n}(ParseError));\nvar ParseTreeResult = (function () {\n    /**\n     * @param {?} rootNodes\n     * @param {?} errors\n     */\n    function ParseTreeResult(rootNodes, errors) {\n        this.rootNodes = rootNodes;\n        this.errors = errors;\n    }\n    return ParseTreeResult;\n}());\nvar Parser$1 = (function () {\n    /**\n     * @param {?} getTagDefinition\n     */\n    function Parser$1(getTagDefinition) {\n        this.getTagDefinition = getTagDefinition;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser$1.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ tokensAndErrors = tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n        var /** @type {?} */ treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n        return new ParseTreeResult(treeAndErrors.rootNodes, ((tokensAndErrors.errors)).concat(treeAndErrors.errors));\n    };\n    return Parser$1;\n}());\nvar _TreeBuilder = (function () {\n    /**\n     * @param {?} tokens\n     * @param {?} getTagDefinition\n     */\n    function _TreeBuilder(tokens, getTagDefinition) {\n        this.tokens = tokens;\n        this.getTagDefinition = getTagDefinition;\n        this._index = -1;\n        this._rootNodes = [];\n        this._errors = [];\n        this._elementStack = [];\n        this._advance();\n    }\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype.build = function () {\n        while (this._peek.type !== TokenType$1.EOF) {\n            if (this._peek.type === TokenType$1.TAG_OPEN_START) {\n                this._consumeStartTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TAG_CLOSE) {\n                this._consumeEndTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.CDATA_START) {\n                this._closeVoidElement();\n                this._consumeCdata(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.COMMENT_START) {\n                this._closeVoidElement();\n                this._consumeComment(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TEXT || this._peek.type === TokenType$1.RAW_TEXT ||\n                this._peek.type === TokenType$1.ESCAPABLE_RAW_TEXT) {\n                this._closeVoidElement();\n                this._consumeText(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.EXPANSION_FORM_START) {\n                this._consumeExpansion(this._advance());\n            }\n            else {\n                // Skip all other tokens...\n                this._advance();\n            }\n        }\n        return new ParseTreeResult(this._rootNodes, this._errors);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advance = function () {\n        var /** @type {?} */ prev = this._peek;\n        if (this._index < this.tokens.length - 1) {\n            // Note: there is always an EOF token at the end\n            this._index++;\n        }\n        this._peek = this.tokens[this._index];\n        return prev;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advanceIf = function (type) {\n        if (this._peek.type === type) {\n            return this._advance();\n        }\n        return null;\n    };\n    /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeCdata = function (startToken) {\n        this._consumeText(this._advance());\n        this._advanceIf(TokenType$1.CDATA_END);\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeComment = function (token) {\n        var /** @type {?} */ text = this._advanceIf(TokenType$1.RAW_TEXT);\n        this._advanceIf(TokenType$1.COMMENT_END);\n        var /** @type {?} */ value = text != null ? text.parts[0].trim() : null;\n        this._addToParent(new Comment(value, token.sourceSpan));\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeExpansion = function (token) {\n        var /** @type {?} */ switchValue = this._advance();\n        var /** @type {?} */ type = this._advance();\n        var /** @type {?} */ cases = [];\n        // read =\n        while (this._peek.type === TokenType$1.EXPANSION_CASE_VALUE) {\n            var /** @type {?} */ expCase = this._parseExpansionCase();\n            if (!expCase)\n                return; // error\n            cases.push(expCase);\n        }\n        // read the final }\n        if (this._peek.type !== TokenType$1.EXPANSION_FORM_END) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n            return;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n        this._addToParent(new Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n        this._advance();\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._parseExpansionCase = function () {\n        var /** @type {?} */ value = this._advance();\n        // read {\n        if (this._peek.type !== TokenType$1.EXPANSION_CASE_EXP_START) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '{'.\"));\n            return null;\n        }\n        // read until }\n        var /** @type {?} */ start = this._advance();\n        var /** @type {?} */ exp = this._collectExpansionExpTokens(start);\n        if (!exp)\n            return null;\n        var /** @type {?} */ end = this._advance();\n        exp.push(new Token$1(TokenType$1.EOF, [], end.sourceSpan));\n        // parse everything in between { and }\n        var /** @type {?} */ parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n        if (parsedExp.errors.length > 0) {\n            this._errors = this._errors.concat(/** @type {?} */ (parsedExp.errors));\n            return null;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n        var /** @type {?} */ expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n        return new ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _TreeBuilder.prototype._collectExpansionExpTokens = function (start) {\n        var /** @type {?} */ exp = [];\n        var /** @type {?} */ expansionFormStack = [TokenType$1.EXPANSION_CASE_EXP_START];\n        while (true) {\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_START ||\n                this._peek.type === TokenType$1.EXPANSION_CASE_EXP_START) {\n                expansionFormStack.push(this._peek.type);\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_CASE_EXP_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_CASE_EXP_START)) {\n                    expansionFormStack.pop();\n                    if (expansionFormStack.length == 0)\n                        return exp;\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_FORM_START)) {\n                    expansionFormStack.pop();\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EOF) {\n                this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                return null;\n            }\n            exp.push(this._advance());\n        }\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeText = function (token) {\n        var /** @type {?} */ text = token.parts[0];\n        if (text.length > 0 && text[0] == '\\n') {\n            var /** @type {?} */ parent = this._getParentElement();\n            if (parent != null && parent.children.length == 0 &&\n                this.getTagDefinition(parent.name).ignoreFirstLf) {\n                text = text.substring(1);\n            }\n        }\n        if (text.length > 0) {\n            this._addToParent(new Text(text, token.sourceSpan));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._closeVoidElement = function () {\n        if (this._elementStack.length > 0) {\n            var /** @type {?} */ el = this._elementStack[this._elementStack.length - 1];\n            if (this.getTagDefinition(el.name).isVoid) {\n                this._elementStack.pop();\n            }\n        }\n    };\n    /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeStartTag = function (startTagToken) {\n        var /** @type {?} */ prefix = startTagToken.parts[0];\n        var /** @type {?} */ name = startTagToken.parts[1];\n        var /** @type {?} */ attrs = [];\n        while (this._peek.type === TokenType$1.ATTR_NAME) {\n            attrs.push(this._consumeAttr(this._advance()));\n        }\n        var /** @type {?} */ fullName = this._getElementFullName(prefix, name, this._getParentElement());\n        var /** @type {?} */ selfClosing = false;\n        // Note: There could have been a tokenizer error\n        // so that we don't get a token for the end tag...\n        if (this._peek.type === TokenType$1.TAG_OPEN_END_VOID) {\n            this._advance();\n            selfClosing = true;\n            var /** @type {?} */ tagDef = this.getTagDefinition(fullName);\n            if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n                this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\n            }\n        }\n        else if (this._peek.type === TokenType$1.TAG_OPEN_END) {\n            this._advance();\n            selfClosing = false;\n        }\n        var /** @type {?} */ end = this._peek.sourceSpan.start;\n        var /** @type {?} */ span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n        var /** @type {?} */ el = new Element(fullName, attrs, [], span, span, undefined);\n        this._pushElement(el);\n        if (selfClosing) {\n            this._popElement(fullName);\n            el.endSourceSpan = span;\n        }\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _TreeBuilder.prototype._pushElement = function (el) {\n        if (this._elementStack.length > 0) {\n            var /** @type {?} */ parentEl = this._elementStack[this._elementStack.length - 1];\n            if (this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n                this._elementStack.pop();\n            }\n        }\n        var /** @type {?} */ tagDef = this.getTagDefinition(el.name);\n        var _a = this._getParentElementSkippingContainers(), parent = _a.parent, container = _a.container;\n        if (parent && tagDef.requireExtraParent(parent.name)) {\n            var /** @type {?} */ newParent = new Element(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n            this._insertBeforeContainer(parent, container, newParent);\n        }\n        this._addToParent(el);\n        this._elementStack.push(el);\n    };\n    /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeEndTag = function (endTagToken) {\n        var /** @type {?} */ fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n        if (this._getParentElement()) {\n            ((this._getParentElement())).endSourceSpan = endTagToken.sourceSpan;\n        }\n        if (this.getTagDefinition(fullName).isVoid) {\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n        }\n        else if (!this._popElement(fullName)) {\n            var /** @type {?} */ errMsg = \"Unexpected closing tag \\\"\" + fullName + \"\\\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags\";\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n        }\n    };\n    /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._popElement = function (fullName) {\n        for (var /** @type {?} */ stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n            var /** @type {?} */ el = this._elementStack[stackIndex];\n            if (el.name == fullName) {\n                this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n                return true;\n            }\n            if (!this.getTagDefinition(el.name).closedByParent) {\n                return false;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeAttr = function (attrName) {\n        var /** @type {?} */ fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n        var /** @type {?} */ end = attrName.sourceSpan.end;\n        var /** @type {?} */ value = '';\n        var /** @type {?} */ valueSpan = ((undefined));\n        if (this._peek.type === TokenType$1.ATTR_VALUE) {\n            var /** @type {?} */ valueToken = this._advance();\n            value = valueToken.parts[0];\n            end = valueToken.sourceSpan.end;\n            valueSpan = valueToken.sourceSpan;\n        }\n        return new Attribute$1(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElement = function () {\n        return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n    };\n    /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElementSkippingContainers = function () {\n        var /** @type {?} */ container = null;\n        for (var /** @type {?} */ i = this._elementStack.length - 1; i >= 0; i--) {\n            if (!isNgContainer(this._elementStack[i].name)) {\n                return { parent: this._elementStack[i], container: container };\n            }\n            container = this._elementStack[i];\n        }\n        return { parent: this._elementStack[this._elementStack.length - 1], container: container };\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._addToParent = function (node) {\n        var /** @type {?} */ parent = this._getParentElement();\n        if (parent != null) {\n            parent.children.push(node);\n        }\n        else {\n            this._rootNodes.push(node);\n        }\n    };\n    /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._insertBeforeContainer = function (parent, container, node) {\n        if (!container) {\n            this._addToParent(node);\n            this._elementStack.push(node);\n        }\n        else {\n            if (parent) {\n                // replace the container with the new node in the children\n                var /** @type {?} */ index = parent.children.indexOf(container);\n                parent.children[index] = node;\n            }\n            else {\n                this._rootNodes.push(node);\n            }\n            node.children.push(container);\n            this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n        }\n    };\n    /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getElementFullName = function (prefix, localName, parentElement) {\n        if (prefix == null) {\n            prefix = ((this.getTagDefinition(localName).implicitNamespacePrefix));\n            if (prefix == null && parentElement != null) {\n                prefix = getNsPrefix(parentElement.name);\n            }\n        }\n        return mergeNsAndName(prefix, localName);\n    };\n    return _TreeBuilder;\n}());\n/**\n * @param {?} stack\n * @param {?} element\n * @return {?}\n */\nfunction lastOnStack(stack, element) {\n    return stack.length > 0 && stack[stack.length - 1] === element;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Message = (function () {\n    /**\n     * @param {?} nodes message AST\n     * @param {?} placeholders maps placeholder names to static content\n     * @param {?} placeholderToMessage maps placeholder names to messages (used for nested ICU messages)\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     */\n    function Message(nodes, placeholders, placeholderToMessage, meaning, description, id) {\n        this.nodes = nodes;\n        this.placeholders = placeholders;\n        this.placeholderToMessage = placeholderToMessage;\n        this.meaning = meaning;\n        this.description = description;\n        this.id = id;\n        if (nodes.length) {\n            this.sources = [{\n                    filePath: nodes[0].sourceSpan.start.file.url,\n                    startLine: nodes[0].sourceSpan.start.line + 1,\n                    startCol: nodes[0].sourceSpan.start.col + 1,\n                    endLine: nodes[nodes.length - 1].sourceSpan.end.line + 1,\n                    endCol: nodes[0].sourceSpan.start.col + 1\n                }];\n        }\n        else {\n            this.sources = [];\n        }\n    }\n    return Message;\n}());\nvar Text$1 = (function () {\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function Text$1(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Text$1.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n    return Text$1;\n}());\nvar Container = (function () {\n    /**\n     * @param {?} children\n     * @param {?} sourceSpan\n     */\n    function Container(children, sourceSpan) {\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Container.prototype.visit = function (visitor, context) { return visitor.visitContainer(this, context); };\n    return Container;\n}());\nvar Icu = (function () {\n    /**\n     * @param {?} expression\n     * @param {?} type\n     * @param {?} cases\n     * @param {?} sourceSpan\n     */\n    function Icu(expression, type, cases, sourceSpan) {\n        this.expression = expression;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Icu.prototype.visit = function (visitor, context) { return visitor.visitIcu(this, context); };\n    return Icu;\n}());\nvar TagPlaceholder = (function () {\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} startName\n     * @param {?} closeName\n     * @param {?} children\n     * @param {?} isVoid\n     * @param {?} sourceSpan\n     */\n    function TagPlaceholder(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n        this.tag = tag;\n        this.attrs = attrs;\n        this.startName = startName;\n        this.closeName = closeName;\n        this.children = children;\n        this.isVoid = isVoid;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    TagPlaceholder.prototype.visit = function (visitor, context) { return visitor.visitTagPlaceholder(this, context); };\n    return TagPlaceholder;\n}());\nvar Placeholder = (function () {\n    /**\n     * @param {?} value\n     * @param {?} name\n     * @param {?} sourceSpan\n     */\n    function Placeholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Placeholder.prototype.visit = function (visitor, context) { return visitor.visitPlaceholder(this, context); };\n    return Placeholder;\n}());\nvar IcuPlaceholder = (function () {\n    /**\n     * @param {?} value\n     * @param {?} name\n     * @param {?} sourceSpan\n     */\n    function IcuPlaceholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    IcuPlaceholder.prototype.visit = function (visitor, context) { return visitor.visitIcuPlaceholder(this, context); };\n    return IcuPlaceholder;\n}());\nvar CloneVisitor = (function () {\n    function CloneVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitText = function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var /** @type {?} */ children = container.children.map(function (n) { return n.visit(_this, context); });\n        return new Container(children, container.sourceSpan);\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = {};\n        Object.keys(icu.cases).forEach(function (key) { return cases[key] = icu.cases[key].visit(_this, context); });\n        var /** @type {?} */ msg = new Icu(icu.expression, icu.type, cases, icu.sourceSpan);\n        msg.expressionPlaceholder = icu.expressionPlaceholder;\n        return msg;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, context); });\n        return new TagPlaceholder(ph.tag, ph.attrs, ph.startName, ph.closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitPlaceholder = function (ph, context) {\n        return new Placeholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        return new IcuPlaceholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    return CloneVisitor;\n}());\nvar RecurseVisitor = (function () {\n    function RecurseVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitText = function (text, context) { };\n    \n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        container.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        Object.keys(icu.cases).forEach(function (k) { icu.cases[k].visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        ph.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitPlaceholder = function (ph, context) { };\n    \n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcuPlaceholder = function (ph, context) { };\n    \n    return RecurseVisitor;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TAG_TO_PLACEHOLDER_NAMES = {\n    'A': 'LINK',\n    'B': 'BOLD_TEXT',\n    'BR': 'LINE_BREAK',\n    'EM': 'EMPHASISED_TEXT',\n    'H1': 'HEADING_LEVEL1',\n    'H2': 'HEADING_LEVEL2',\n    'H3': 'HEADING_LEVEL3',\n    'H4': 'HEADING_LEVEL4',\n    'H5': 'HEADING_LEVEL5',\n    'H6': 'HEADING_LEVEL6',\n    'HR': 'HORIZONTAL_RULE',\n    'I': 'ITALIC_TEXT',\n    'LI': 'LIST_ITEM',\n    'LINK': 'MEDIA_LINK',\n    'OL': 'ORDERED_LIST',\n    'P': 'PARAGRAPH',\n    'Q': 'QUOTATION',\n    'S': 'STRIKETHROUGH_TEXT',\n    'SMALL': 'SMALL_TEXT',\n    'SUB': 'SUBSTRIPT',\n    'SUP': 'SUPERSCRIPT',\n    'TBODY': 'TABLE_BODY',\n    'TD': 'TABLE_CELL',\n    'TFOOT': 'TABLE_FOOTER',\n    'TH': 'TABLE_HEADER_CELL',\n    'THEAD': 'TABLE_HEADER',\n    'TR': 'TABLE_ROW',\n    'TT': 'MONOSPACED_TEXT',\n    'U': 'UNDERLINED_TEXT',\n    'UL': 'UNORDERED_LIST',\n};\n/**\n * Creates unique names for placeholder with different content.\n *\n * Returns the same placeholder name when the content is identical.\n *\n * \\@internal\n */\nvar PlaceholderRegistry = (function () {\n    function PlaceholderRegistry() {\n        this._placeHolderNameCounts = {};\n        this._signatureToName = {};\n    }\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getStartTagPlaceholderName = function (tag, attrs, isVoid) {\n        var /** @type {?} */ signature = this._hashTag(tag, attrs, isVoid);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(isVoid ? baseName : \"START_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getCloseTagPlaceholderName = function (tag) {\n        var /** @type {?} */ signature = this._hashClosingTag(tag);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(\"CLOSE_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getPlaceholderName = function (name, content) {\n        var /** @type {?} */ upperName = name.toUpperCase();\n        var /** @type {?} */ signature = \"PH: \" + upperName + \"=\" + content;\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ uniqueName = this._generateUniqueName(upperName);\n        this._signatureToName[signature] = uniqueName;\n        return uniqueName;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getUniquePlaceholder = function (name) {\n        return this._generateUniqueName(name.toUpperCase());\n    };\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashTag = function (tag, attrs, isVoid) {\n        var /** @type {?} */ start = \"<\" + tag;\n        var /** @type {?} */ strAttrs = Object.keys(attrs).sort().map(function (name) { return \" \" + name + \"=\" + attrs[name]; }).join('');\n        var /** @type {?} */ end = isVoid ? '/>' : \"></\" + tag + \">\";\n        return start + strAttrs + end;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashClosingTag = function (tag) { return this._hashTag(\"/\" + tag, {}, false); };\n    /**\n     * @param {?} base\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._generateUniqueName = function (base) {\n        var /** @type {?} */ seen = this._placeHolderNameCounts.hasOwnProperty(base);\n        if (!seen) {\n            this._placeHolderNameCounts[base] = 1;\n            return base;\n        }\n        var /** @type {?} */ id = this._placeHolderNameCounts[base];\n        this._placeHolderNameCounts[base] = id + 1;\n        return base + \"_\" + id;\n    };\n    return PlaceholderRegistry;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _expParser = new Parser(new Lexer());\n/**\n * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction createI18nMessageFactory(interpolationConfig) {\n    var /** @type {?} */ visitor = new _I18nVisitor(_expParser, interpolationConfig);\n    return function (nodes, meaning, description, id) { return visitor.toI18nMessage(nodes, meaning, description, id); };\n}\nvar _I18nVisitor = (function () {\n    /**\n     * @param {?} _expressionParser\n     * @param {?} _interpolationConfig\n     */\n    function _I18nVisitor(_expressionParser, _interpolationConfig) {\n        this._expressionParser = _expressionParser;\n        this._interpolationConfig = _interpolationConfig;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    _I18nVisitor.prototype.toI18nMessage = function (nodes, meaning, description, id) {\n        this._isIcu = nodes.length == 1 && nodes[0] instanceof Expansion;\n        this._icuDepth = 0;\n        this._placeholderRegistry = new PlaceholderRegistry();\n        this._placeholderToContent = {};\n        this._placeholderToMessage = {};\n        var /** @type {?} */ i18nodes = visitAll(this, nodes, {});\n        return new Message(i18nodes, this._placeholderToContent, this._placeholderToMessage, meaning, description, id);\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitElement = function (el, context) {\n        var /** @type {?} */ children = visitAll(this, el.children);\n        var /** @type {?} */ attrs = {};\n        el.attrs.forEach(function (attr) {\n            // Do not visit the attributes, translatable ones are top-level ASTs\n            attrs[attr.name] = attr.value;\n        });\n        var /** @type {?} */ isVoid = getHtmlTagDefinition(el.name).isVoid;\n        var /** @type {?} */ startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n        this._placeholderToContent[startPhName] = ((el.sourceSpan)).toString();\n        var /** @type {?} */ closePhName = '';\n        if (!isVoid) {\n            closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n            this._placeholderToContent[closePhName] = \"</\" + el.name + \">\";\n        }\n        return new TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, /** @type {?} */ ((el.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitAttribute = function (attribute, context) {\n        return this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitText = function (text, context) {\n        return this._visitTextWithInterpolation(text.value, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitComment = function (comment, context) { return null; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansion = function (icu, context) {\n        var _this = this;\n        this._icuDepth++;\n        var /** @type {?} */ i18nIcuCases = {};\n        var /** @type {?} */ i18nIcu = new Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n        icu.cases.forEach(function (caze) {\n            i18nIcuCases[caze.value] = new Container(caze.expression.map(function (node) { return node.visit(_this, {}); }), caze.expSourceSpan);\n        });\n        this._icuDepth--;\n        if (this._isIcu || this._icuDepth > 0) {\n            // Returns an ICU node when:\n            // - the message (vs a part of the message) is an ICU message, or\n            // - the ICU message is nested.\n            var /** @type {?} */ expPh = this._placeholderRegistry.getUniquePlaceholder(\"VAR_\" + icu.type);\n            i18nIcu.expressionPlaceholder = expPh;\n            this._placeholderToContent[expPh] = icu.switchValue;\n            return i18nIcu;\n        }\n        // Else returns a placeholder\n        // ICU placeholders should not be replaced with their original content but with the their\n        // translations. We need to create a new visitor (they are not re-entrant) to compute the\n        // message id.\n        // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n        var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n        var /** @type {?} */ visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n        this._placeholderToMessage[phName] = visitor.toI18nMessage([icu], '', '', '');\n        return new IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansionCase = function (icuCase, context) {\n        throw new Error('Unreachable code');\n    };\n    /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _I18nVisitor.prototype._visitTextWithInterpolation = function (text, sourceSpan) {\n        var /** @type {?} */ splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n        if (!splitInterpolation) {\n            // No expression, return a single text\n            return new Text$1(text, sourceSpan);\n        }\n        // Return a group of text + expressions\n        var /** @type {?} */ nodes = [];\n        var /** @type {?} */ container = new Container(nodes, sourceSpan);\n        var _a = this._interpolationConfig, sDelimiter = _a.start, eDelimiter = _a.end;\n        for (var /** @type {?} */ i = 0; i < splitInterpolation.strings.length - 1; i++) {\n            var /** @type {?} */ expression = splitInterpolation.expressions[i];\n            var /** @type {?} */ baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n            var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n            if (splitInterpolation.strings[i].length) {\n                // No need to add empty strings\n                nodes.push(new Text$1(splitInterpolation.strings[i], sourceSpan));\n            }\n            nodes.push(new Placeholder(expression, phName, sourceSpan));\n            this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n        }\n        // The last index contains no expression\n        var /** @type {?} */ lastStringIdx = splitInterpolation.strings.length - 1;\n        if (splitInterpolation.strings[lastStringIdx].length) {\n            nodes.push(new Text$1(splitInterpolation.strings[lastStringIdx], sourceSpan));\n        }\n        return container;\n    };\n    return _I18nVisitor;\n}());\nvar _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*(\"|')([\\s\\S]*?)\\1[\\s\\S]*\\)/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction _extractPlaceholderName(input) {\n    return input.split(_CUSTOM_PH_EXP)[2];\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An i18n error.\n */\nvar I18nError = (function (_super) {\n    __extends(I18nError, _super);\n    /**\n     * @param {?} span\n     * @param {?} msg\n     */\n    function I18nError(span, msg) {\n        return _super.call(this, span, msg) || this;\n    }\n    return I18nError;\n}(ParseError));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _I18N_ATTR = 'i18n';\nvar _I18N_ATTR_PREFIX = 'i18n-';\nvar _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\nvar MEANING_SEPARATOR = '|';\nvar ID_SEPARATOR = '@@';\n/**\n * Extract translatable messages from an html AST\n * @param {?} nodes\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.extract(nodes, interpolationConfig);\n}\n/**\n * @param {?} nodes\n * @param {?} translations\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.merge(nodes, translations, interpolationConfig);\n}\nvar ExtractionResult = (function () {\n    /**\n     * @param {?} messages\n     * @param {?} errors\n     */\n    function ExtractionResult(messages, errors) {\n        this.messages = messages;\n        this.errors = errors;\n    }\n    return ExtractionResult;\n}());\nvar _VisitorMode = {};\n_VisitorMode.Extract = 0;\n_VisitorMode.Merge = 1;\n_VisitorMode[_VisitorMode.Extract] = \"Extract\";\n_VisitorMode[_VisitorMode.Merge] = \"Merge\";\n/**\n * This Visitor is used:\n * 1. to extract all the translatable strings from an html AST (see `extract()`),\n * 2. to replace the translatable strings with the actual translations (see `merge()`)\n *\n * \\@internal\n */\nvar _Visitor = (function () {\n    /**\n     * @param {?} _implicitTags\n     * @param {?} _implicitAttrs\n     */\n    function _Visitor(_implicitTags, _implicitAttrs) {\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n    }\n    /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.extract = function (nodes, interpolationConfig) {\n        var _this = this;\n        this._init(_VisitorMode.Extract, interpolationConfig);\n        nodes.forEach(function (node) { return node.visit(_this, null); });\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ExtractionResult(this._messages, this._errors);\n    };\n    /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.merge = function (nodes, translations, interpolationConfig) {\n        this._init(_VisitorMode.Merge, interpolationConfig);\n        this._translations = translations;\n        // Construct a single fake root element\n        var /** @type {?} */ wrapper = new Element('wrapper', [], nodes, /** @type {?} */ ((undefined)), undefined, undefined);\n        var /** @type {?} */ translatedNode = wrapper.visit(this, null);\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ParseTreeResult(translatedNode.children, this._errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansionCase = function (icuCase, context) {\n        // Parse cases for translatable html attributes\n        var /** @type {?} */ expression = visitAll(this, icuCase.expression, context);\n        if (this._mode === _VisitorMode.Merge) {\n            return new ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n        }\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansion = function (icu, context) {\n        this._mayBeAddBlockChildren(icu);\n        var /** @type {?} */ wasInIcu = this._inIcu;\n        if (!this._inIcu) {\n            // nested ICU messages should not be extracted but top-level translated as a whole\n            if (this._isInTranslatableSection) {\n                this._addMessage([icu]);\n            }\n            this._inIcu = true;\n        }\n        var /** @type {?} */ cases = visitAll(this, icu.cases, context);\n        if (this._mode === _VisitorMode.Merge) {\n            icu = new Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n        }\n        this._inIcu = wasInIcu;\n        return icu;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitComment = function (comment, context) {\n        var /** @type {?} */ isOpening = _isOpeningComment(comment);\n        if (isOpening && this._isInTranslatableSection) {\n            this._reportError(comment, 'Could not start a block inside a translatable section');\n            return;\n        }\n        var /** @type {?} */ isClosing = _isClosingComment(comment);\n        if (isClosing && !this._inI18nBlock) {\n            this._reportError(comment, 'Trying to close an unopened block');\n            return;\n        }\n        if (!this._inI18nNode && !this._inIcu) {\n            if (!this._inI18nBlock) {\n                if (isOpening) {\n                    this._inI18nBlock = true;\n                    this._blockStartDepth = this._depth;\n                    this._blockChildren = [];\n                    this._blockMeaningAndDesc = ((comment.value)).replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n                    this._openTranslatableSection(comment);\n                }\n            }\n            else {\n                if (isClosing) {\n                    if (this._depth == this._blockStartDepth) {\n                        this._closeTranslatableSection(comment, this._blockChildren);\n                        this._inI18nBlock = false;\n                        var /** @type {?} */ message = ((this._addMessage(this._blockChildren, this._blockMeaningAndDesc)));\n                        // merge attributes in sections\n                        var /** @type {?} */ nodes = this._translateMessage(comment, message);\n                        return visitAll(this, nodes);\n                    }\n                    else {\n                        this._reportError(comment, 'I18N blocks should not cross element boundaries');\n                        return;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = function (text, context) {\n        if (this._isInTranslatableSection) {\n            this._mayBeAddBlockChildren(text);\n        }\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitElement = function (el, context) {\n        var _this = this;\n        this._mayBeAddBlockChildren(el);\n        this._depth++;\n        var /** @type {?} */ wasInI18nNode = this._inI18nNode;\n        var /** @type {?} */ wasInImplicitNode = this._inImplicitNode;\n        var /** @type {?} */ childNodes = [];\n        var /** @type {?} */ translatedChildNodes = ((undefined));\n        // Extract:\n        // - top level nodes with the (implicit) \"i18n\" attribute if not already in a section\n        // - ICU messages\n        var /** @type {?} */ i18nAttr = _getI18nAttr(el);\n        var /** @type {?} */ i18nMeta = i18nAttr ? i18nAttr.value : '';\n        var /** @type {?} */ isImplicit = this._implicitTags.some(function (tag) { return el.name === tag; }) && !this._inIcu &&\n            !this._isInTranslatableSection;\n        var /** @type {?} */ isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n        this._inImplicitNode = wasInImplicitNode || isImplicit;\n        if (!this._isInTranslatableSection && !this._inIcu) {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._inI18nNode = true;\n                var /** @type {?} */ message = ((this._addMessage(el.children, i18nMeta)));\n                translatedChildNodes = this._translateMessage(el, message);\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                var /** @type {?} */ isTranslatable = i18nAttr || isTopLevelImplicit;\n                if (isTranslatable)\n                    this._openTranslatableSection(el);\n                visitAll(this, el.children);\n                if (isTranslatable)\n                    this._closeTranslatableSection(el, el.children);\n            }\n        }\n        else {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                // Descend into child nodes for extraction\n                visitAll(this, el.children);\n            }\n        }\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ visitNodes = translatedChildNodes || el.children;\n            visitNodes.forEach(function (child) {\n                var /** @type {?} */ visited = child.visit(_this, context);\n                if (visited && !_this._isInTranslatableSection) {\n                    // Do not add the children from translatable sections (= i18n blocks here)\n                    // They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)\n                    childNodes = childNodes.concat(visited);\n                }\n            });\n        }\n        this._visitAttributesOf(el);\n        this._depth--;\n        this._inI18nNode = wasInI18nNode;\n        this._inImplicitNode = wasInImplicitNode;\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ translatedAttrs = this._translateAttributes(el);\n            return new Element(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitAttribute = function (attribute, context) {\n        throw new Error('unreachable code');\n    };\n    /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype._init = function (mode, interpolationConfig) {\n        this._mode = mode;\n        this._inI18nBlock = false;\n        this._inI18nNode = false;\n        this._depth = 0;\n        this._inIcu = false;\n        this._msgCountAtSectionStart = undefined;\n        this._errors = [];\n        this._messages = [];\n        this._inImplicitNode = false;\n        this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._visitAttributesOf = function (el) {\n        var _this = this;\n        var /** @type {?} */ explicitAttrNameToValue = {};\n        var /** @type {?} */ implicitAttrNames = this._implicitAttrs[el.name] || [];\n        el.attrs.filter(function (attr) { return attr.name.startsWith(_I18N_ATTR_PREFIX); })\n            .forEach(function (attr) { return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n            attr.value; });\n        el.attrs.forEach(function (attr) {\n            if (attr.name in explicitAttrNameToValue) {\n                _this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n            }\n            else if (implicitAttrNames.some(function (name) { return attr.name === name; })) {\n                _this._addMessage([attr]);\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    _Visitor.prototype._addMessage = function (ast, msgMeta) {\n        if (ast.length == 0 ||\n            ast.length == 1 && ast[0] instanceof Attribute$1 && !((ast[0])).value) {\n            // Do not create empty messages\n            return null;\n        }\n        var _a = _parseMessageMeta(msgMeta), meaning = _a.meaning, description = _a.description, id = _a.id;\n        var /** @type {?} */ message = this._createI18nMessage(ast, meaning, description, id);\n        this._messages.push(message);\n        return message;\n    };\n    /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    _Visitor.prototype._translateMessage = function (el, message) {\n        if (message && this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ nodes = this._translations.get(message);\n            if (nodes) {\n                return nodes;\n            }\n            this._reportError(el, \"Translation unavailable for message id=\\\"\" + this._translations.digest(message) + \"\\\"\");\n        }\n        return [];\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._translateAttributes = function (el) {\n        var _this = this;\n        var /** @type {?} */ attributes = el.attrs;\n        var /** @type {?} */ i18nParsedMessageMeta = {};\n        attributes.forEach(function (attr) {\n            if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                    _parseMessageMeta(attr.value);\n            }\n        });\n        var /** @type {?} */ translatedAttributes = [];\n        attributes.forEach(function (attr) {\n            if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                // strip i18n specific attributes\n                return;\n            }\n            if (attr.value && attr.value != '' && i18nParsedMessageMeta.hasOwnProperty(attr.name)) {\n                var _a = i18nParsedMessageMeta[attr.name], meaning = _a.meaning, description = _a.description, id = _a.id;\n                var /** @type {?} */ message = _this._createI18nMessage([attr], meaning, description, id);\n                var /** @type {?} */ nodes = _this._translations.get(message);\n                if (nodes) {\n                    if (nodes.length == 0) {\n                        translatedAttributes.push(new Attribute$1(attr.name, '', attr.sourceSpan));\n                    }\n                    else if (nodes[0] instanceof Text) {\n                        var /** @type {?} */ value = ((nodes[0])).value;\n                        translatedAttributes.push(new Attribute$1(attr.name, value, attr.sourceSpan));\n                    }\n                    else {\n                        _this._reportError(el, \"Unexpected translation for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                    }\n                }\n                else {\n                    _this._reportError(el, \"Translation unavailable for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                }\n            }\n            else {\n                translatedAttributes.push(attr);\n            }\n        });\n        return translatedAttributes;\n    };\n    /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._mayBeAddBlockChildren = function (node) {\n        if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n            this._blockChildren.push(node);\n        }\n    };\n    /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._openTranslatableSection = function (node) {\n        if (this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section start');\n        }\n        else {\n            this._msgCountAtSectionStart = this._messages.length;\n        }\n    };\n    Object.defineProperty(_Visitor.prototype, \"_isInTranslatableSection\", {\n        /**\n         * A translatable section could be:\n         * - the content of translatable element,\n         * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n         * @return {?}\n         */\n        get: function () {\n            return this._msgCountAtSectionStart !== void 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    _Visitor.prototype._closeTranslatableSection = function (node, directChildren) {\n        if (!this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section end');\n            return;\n        }\n        var /** @type {?} */ startIndex = this._msgCountAtSectionStart;\n        var /** @type {?} */ significantChildren = directChildren.reduce(function (count, node) { return count + (node instanceof Comment ? 0 : 1); }, 0);\n        if (significantChildren == 1) {\n            for (var /** @type {?} */ i = this._messages.length - 1; i >= startIndex; i--) {\n                var /** @type {?} */ ast = this._messages[i].nodes;\n                if (!(ast.length == 1 && ast[0] instanceof Text$1)) {\n                    this._messages.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this._msgCountAtSectionStart = undefined;\n    };\n    /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    _Visitor.prototype._reportError = function (node, msg) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), msg));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isOpeningComment(n) {\n    return !!(n instanceof Comment && n.value && n.value.startsWith('i18n'));\n}\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isClosingComment(n) {\n    return !!(n instanceof Comment && n.value && n.value === '/i18n');\n}\n/**\n * @param {?} p\n * @return {?}\n */\nfunction _getI18nAttr(p) {\n    return p.attrs.find(function (attr) { return attr.name === _I18N_ATTR; }) || null;\n}\n/**\n * @param {?=} i18n\n * @return {?}\n */\nfunction _parseMessageMeta(i18n) {\n    if (!i18n)\n        return { meaning: '', description: '', id: '' };\n    var /** @type {?} */ idIndex = i18n.indexOf(ID_SEPARATOR);\n    var /** @type {?} */ descIndex = i18n.indexOf(MEANING_SEPARATOR);\n    var _a = (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''], meaningAndDesc = _a[0], id = _a[1];\n    var _b = (descIndex > -1) ?\n        [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n        ['', meaningAndDesc], meaning = _b[0], description = _b[1];\n    return { meaning: meaning, description: description, id: id };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlTagDefinition = (function () {\n    function XmlTagDefinition() {\n        this.closedByParent = false;\n        this.contentType = TagContentType.PARSABLE_DATA;\n        this.isVoid = false;\n        this.ignoreFirstLf = false;\n        this.canSelfClose = true;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.requireExtraParent = function (currentParent) { return false; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.isClosedByChild = function (name) { return false; };\n    return XmlTagDefinition;\n}());\nvar _TAG_DEFINITION = new XmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getXmlTagDefinition(tagName) {\n    return _TAG_DEFINITION;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlParser = (function (_super) {\n    __extends(XmlParser, _super);\n    function XmlParser() {\n        return _super.call(this, getXmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    XmlParser.prototype.parse = function (source, url, parseExpansionForms) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms);\n    };\n    return XmlParser;\n}(Parser$1));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest(message) {\n    return message.id || sha1(serializeNodes(message.nodes).join('') + (\"[\" + message.meaning + \"]\"));\n}\n/**\n * @param {?} message\n * @return {?}\n */\nfunction decimalDigest(message) {\n    if (message.id) {\n        return message.id;\n    }\n    var /** @type {?} */ visitor = new _SerializerIgnoreIcuExpVisitor();\n    var /** @type {?} */ parts = message.nodes.map(function (a) { return a.visit(visitor, null); });\n    return computeMsgId(parts.join(''), message.meaning);\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * \\@internal\n */\nvar _SerializerVisitor = (function () {\n    function _SerializerVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitText = function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        return \"[\" + container.children.map(function (child) { return child.visit(_this); }).join(', ') + \"]\";\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        return \"{\" + icu.expression + \", \" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        return ph.isVoid ?\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\"/>\" :\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\">\" + ph.children.map(function (child) { return child.visit(_this); }).join(', ') + \"</ph name=\\\"\" + ph.closeName + \"\\\">\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitPlaceholder = function (ph, context) {\n        return ph.value ? \"<ph name=\\\"\" + ph.name + \"\\\">\" + ph.value + \"</ph>\" : \"<ph name=\\\"\" + ph.name + \"\\\"/>\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        return \"<ph icu name=\\\"\" + ph.name + \"\\\">\" + ph.value.visit(this) + \"</ph>\";\n    };\n    return _SerializerVisitor;\n}());\nvar serializerVisitor = new _SerializerVisitor();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serializeNodes(nodes) {\n    return nodes.map(function (a) { return a.visit(serializerVisitor, null); });\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n *\n * \\@internal\n */\nvar _SerializerIgnoreIcuExpVisitor = (function (_super) {\n    __extends(_SerializerIgnoreIcuExpVisitor, _super);\n    function _SerializerIgnoreIcuExpVisitor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerIgnoreIcuExpVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // Do not take the expression into account\n        return \"{\" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    return _SerializerIgnoreIcuExpVisitor;\n}(_SerializerVisitor));\n/**\n * Compute the SHA1 of the given string\n *\n * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n * @param {?} str\n * @return {?}\n */\nfunction sha1(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var /** @type {?} */ words32 = stringToWords32(utf8, Endian.Big);\n    var /** @type {?} */ len = utf8.length * 8;\n    var /** @type {?} */ w = new Array(80);\n    var _a = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], a = _a[0], b = _a[1], c = _a[2], d = _a[3], e = _a[4];\n    words32[len >> 5] |= 0x80 << (24 - len % 32);\n    words32[((len + 64 >> 9) << 4) + 15] = len;\n    for (var /** @type {?} */ i = 0; i < words32.length; i += 16) {\n        var _b = [a, b, c, d, e], h0 = _b[0], h1 = _b[1], h2 = _b[2], h3 = _b[3], h4 = _b[4];\n        for (var /** @type {?} */ j = 0; j < 80; j++) {\n            if (j < 16) {\n                w[j] = words32[i + j];\n            }\n            else {\n                w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            }\n            var _c = fk(j, b, c, d), f = _c[0], k = _c[1];\n            var /** @type {?} */ temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n            _d = [d, c, rol32(b, 30), a, temp], e = _d[0], d = _d[1], c = _d[2], b = _d[3], a = _d[4];\n        }\n        _e = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)], a = _e[0], b = _e[1], c = _e[2], d = _e[3], e = _e[4];\n    }\n    return byteStringToHexString(words32ToByteString([a, b, c, d, e]));\n    var _d, _e;\n}\n/**\n * @param {?} index\n * @param {?} b\n * @param {?} c\n * @param {?} d\n * @return {?}\n */\nfunction fk(index, b, c, d) {\n    if (index < 20) {\n        return [(b & c) | (~b & d), 0x5a827999];\n    }\n    if (index < 40) {\n        return [b ^ c ^ d, 0x6ed9eba1];\n    }\n    if (index < 60) {\n        return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n    }\n    return [b ^ c ^ d, 0xca62c1d6];\n}\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n * @param {?} str\n * @return {?}\n */\nfunction fingerprint(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var _a = [hash32(utf8, 0), hash32(utf8, 102072)], hi = _a[0], lo = _a[1];\n    if (hi == 0 && (lo == 0 || lo == 1)) {\n        hi = hi ^ 0x130f9bef;\n        lo = lo ^ -0x6b5f56d8;\n    }\n    return [hi, lo];\n}\n/**\n * @param {?} msg\n * @param {?} meaning\n * @return {?}\n */\nfunction computeMsgId(msg, meaning) {\n    var _a = fingerprint(msg), hi = _a[0], lo = _a[1];\n    if (meaning) {\n        var _b = fingerprint(meaning), him = _b[0], lom = _b[1];\n        _c = add64(rol64([hi, lo], 1), [him, lom]), hi = _c[0], lo = _c[1];\n    }\n    return byteStringToDecString(words32ToByteString([hi & 0x7fffffff, lo]));\n    var _c;\n}\n/**\n * @param {?} str\n * @param {?} c\n * @return {?}\n */\nfunction hash32(str, c) {\n    var _a = [0x9e3779b9, 0x9e3779b9], a = _a[0], b = _a[1];\n    var /** @type {?} */ i;\n    var /** @type {?} */ len = str.length;\n    for (i = 0; i + 12 <= len; i += 12) {\n        a = add32(a, wordAt(str, i, Endian.Little));\n        b = add32(b, wordAt(str, i + 4, Endian.Little));\n        c = add32(c, wordAt(str, i + 8, Endian.Little));\n        _b = mix([a, b, c]), a = _b[0], b = _b[1], c = _b[2];\n    }\n    a = add32(a, wordAt(str, i, Endian.Little));\n    b = add32(b, wordAt(str, i + 4, Endian.Little));\n    // the first byte of c is reserved for the length\n    c = add32(c, len);\n    c = add32(c, wordAt(str, i + 8, Endian.Little) << 8);\n    return mix([a, b, c])[2];\n    var _b;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction mix(_a) {\n    var a = _a[0], b = _a[1], c = _a[2];\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 13;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 8;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 13;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 12;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 16;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 5;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 3;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 10;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 15;\n    return [a, b, c];\n}\nvar Endian = {};\nEndian.Little = 0;\nEndian.Big = 1;\nEndian[Endian.Little] = \"Little\";\nEndian[Endian.Big] = \"Big\";\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32(a, b) {\n    return add32to64(a, b)[1];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32to64(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) + (b & 0xffff);\n    var /** @type {?} */ high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n    return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\n/**\n * @param {?} __0\n * @param {?} __1\n * @return {?}\n */\nfunction add64(_a, _b) {\n    var ah = _a[0], al = _a[1];\n    var bh = _b[0], bl = _b[1];\n    var _c = add32to64(al, bl), carry = _c[0], l = _c[1];\n    var /** @type {?} */ h = add32(add32(ah, bh), carry);\n    return [h, l];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction sub32(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) - (b & 0xffff);\n    var /** @type {?} */ high = (a >> 16) - (b >> 16) + (low >> 16);\n    return (high << 16) | (low & 0xffff);\n}\n/**\n * @param {?} a\n * @param {?} count\n * @return {?}\n */\nfunction rol32(a, count) {\n    return (a << count) | (a >>> (32 - count));\n}\n/**\n * @param {?} __0\n * @param {?} count\n * @return {?}\n */\nfunction rol64(_a, count) {\n    var hi = _a[0], lo = _a[1];\n    var /** @type {?} */ h = (hi << count) | (lo >>> (32 - count));\n    var /** @type {?} */ l = (lo << count) | (hi >>> (32 - count));\n    return [h, l];\n}\n/**\n * @param {?} str\n * @param {?} endian\n * @return {?}\n */\nfunction stringToWords32(str, endian) {\n    var /** @type {?} */ words32 = Array((str.length + 3) >>> 2);\n    for (var /** @type {?} */ i = 0; i < words32.length; i++) {\n        words32[i] = wordAt(str, i * 4, endian);\n    }\n    return words32;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @return {?}\n */\nfunction byteAt(str, index) {\n    return index >= str.length ? 0 : str.charCodeAt(index) & 0xff;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @param {?} endian\n * @return {?}\n */\nfunction wordAt(str, index, endian) {\n    var /** @type {?} */ word = 0;\n    if (endian === Endian.Big) {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << (24 - 8 * i);\n        }\n    }\n    else {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << 8 * i;\n        }\n    }\n    return word;\n}\n/**\n * @param {?} words32\n * @return {?}\n */\nfunction words32ToByteString(words32) {\n    return words32.reduce(function (str, word) { return str + word32ToByteString(word); }, '');\n}\n/**\n * @param {?} word\n * @return {?}\n */\nfunction word32ToByteString(word) {\n    var /** @type {?} */ str = '';\n    for (var /** @type {?} */ i = 0; i < 4; i++) {\n        str += String.fromCharCode((word >>> 8 * (3 - i)) & 0xff);\n    }\n    return str;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToHexString(str) {\n    var /** @type {?} */ hex = '';\n    for (var /** @type {?} */ i = 0; i < str.length; i++) {\n        var /** @type {?} */ b = byteAt(str, i);\n        hex += (b >>> 4).toString(16) + (b & 0x0f).toString(16);\n    }\n    return hex.toLowerCase();\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToDecString(str) {\n    var /** @type {?} */ decimal = '';\n    var /** @type {?} */ toThePower = '1';\n    for (var /** @type {?} */ i = str.length - 1; i >= 0; i--) {\n        decimal = addBigInt(decimal, numberTimesBigInt(byteAt(str, i), toThePower));\n        toThePower = numberTimesBigInt(256, toThePower);\n    }\n    return decimal.split('').reverse().join('');\n}\n/**\n * @param {?} x\n * @param {?} y\n * @return {?}\n */\nfunction addBigInt(x, y) {\n    var /** @type {?} */ sum = '';\n    var /** @type {?} */ len = Math.max(x.length, y.length);\n    for (var /** @type {?} */ i = 0, /** @type {?} */ carry = 0; i < len || carry; i++) {\n        var /** @type {?} */ tmpSum = carry + +(x[i] || 0) + +(y[i] || 0);\n        if (tmpSum >= 10) {\n            carry = 1;\n            sum += tmpSum - 10;\n        }\n        else {\n            carry = 0;\n            sum += tmpSum;\n        }\n    }\n    return sum;\n}\n/**\n * @param {?} num\n * @param {?} b\n * @return {?}\n */\nfunction numberTimesBigInt(num, b) {\n    var /** @type {?} */ product = '';\n    var /** @type {?} */ bToThePower = b;\n    for (; num !== 0; num = num >>> 1) {\n        if (num & 1)\n            product = addBigInt(product, bToThePower);\n        bToThePower = addBigInt(bToThePower, bToThePower);\n    }\n    return product;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar Serializer = (function () {\n    function Serializer() {\n    }\n    /**\n     * @abstract\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Serializer.prototype.write = function (messages, locale) { };\n    /**\n     * @abstract\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Serializer.prototype.load = function (content, url) { };\n    /**\n     * @abstract\n     * @param {?} message\n     * @return {?}\n     */\n    Serializer.prototype.digest = function (message) { };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Serializer.prototype.createNameMapper = function (message) { return null; };\n    return Serializer;\n}());\n/**\n * A simple mapper that take a function to transform an internal name to a public name\n */\nvar SimplePlaceholderMapper = (function (_super) {\n    __extends(SimplePlaceholderMapper, _super);\n    /**\n     * @param {?} message\n     * @param {?} mapName\n     */\n    function SimplePlaceholderMapper(message, mapName) {\n        var _this = _super.call(this) || this;\n        _this.mapName = mapName;\n        _this.internalToPublic = {};\n        _this.publicToNextId = {};\n        _this.publicToInternal = {};\n        message.nodes.forEach(function (node) { return node.visit(_this); });\n        return _this;\n    }\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toPublicName = function (internalName) {\n        return this.internalToPublic.hasOwnProperty(internalName) ?\n            this.internalToPublic[internalName] :\n            null;\n    };\n    /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toInternalName = function (publicName) {\n        return this.publicToInternal.hasOwnProperty(publicName) ? this.publicToInternal[publicName] :\n            null;\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitText = function (text, context) { return null; };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitTagPlaceholder = function (ph, context) {\n        this.visitPlaceholderName(ph.startName);\n        _super.prototype.visitTagPlaceholder.call(this, ph, context);\n        this.visitPlaceholderName(ph.closeName);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholder = function (ph, context) { this.visitPlaceholderName(ph.name); };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitIcuPlaceholder = function (ph, context) {\n        this.visitPlaceholderName(ph.name);\n    };\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholderName = function (internalName) {\n        if (!internalName || this.internalToPublic.hasOwnProperty(internalName)) {\n            return;\n        }\n        var /** @type {?} */ publicName = this.mapName(internalName);\n        if (this.publicToInternal.hasOwnProperty(publicName)) {\n            // Create a new XMB when it has already been used\n            var /** @type {?} */ nextId = this.publicToNextId[publicName];\n            this.publicToNextId[publicName] = nextId + 1;\n            publicName = publicName + \"_\" + nextId;\n        }\n        else {\n            this.publicToNextId[publicName] = 1;\n        }\n        this.internalToPublic[internalName] = publicName;\n        this.publicToInternal[publicName] = internalName;\n    };\n    return SimplePlaceholderMapper;\n}(RecurseVisitor));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _Visitor$1 = (function () {\n    function _Visitor$1() {\n    }\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    _Visitor$1.prototype.visitTag = function (tag) {\n        var _this = this;\n        var /** @type {?} */ strAttrs = this._serializeAttributes(tag.attrs);\n        if (tag.children.length == 0) {\n            return \"<\" + tag.name + strAttrs + \"/>\";\n        }\n        var /** @type {?} */ strChildren = tag.children.map(function (node) { return node.visit(_this); });\n        return \"<\" + tag.name + strAttrs + \">\" + strChildren.join('') + \"</\" + tag.name + \">\";\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    _Visitor$1.prototype.visitText = function (text) { return text.value; };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    _Visitor$1.prototype.visitDeclaration = function (decl) {\n        return \"<?xml\" + this._serializeAttributes(decl.attrs) + \" ?>\";\n    };\n    /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    _Visitor$1.prototype._serializeAttributes = function (attrs) {\n        var /** @type {?} */ strAttrs = Object.keys(attrs).map(function (name) { return name + \"=\\\"\" + attrs[name] + \"\\\"\"; }).join(' ');\n        return strAttrs.length > 0 ? ' ' + strAttrs : '';\n    };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    _Visitor$1.prototype.visitDoctype = function (doctype) {\n        return \"<!DOCTYPE \" + doctype.rootTag + \" [\\n\" + doctype.dtd + \"\\n]>\";\n    };\n    return _Visitor$1;\n}());\nvar _visitor = new _Visitor$1();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serialize(nodes) {\n    return nodes.map(function (node) { return node.visit(_visitor); }).join('');\n}\nvar Declaration = (function () {\n    /**\n     * @param {?} unescapedAttrs\n     */\n    function Declaration(unescapedAttrs) {\n        var _this = this;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Declaration.prototype.visit = function (visitor) { return visitor.visitDeclaration(this); };\n    return Declaration;\n}());\nvar Doctype = (function () {\n    /**\n     * @param {?} rootTag\n     * @param {?} dtd\n     */\n    function Doctype(rootTag, dtd) {\n        this.rootTag = rootTag;\n        this.dtd = dtd;\n    }\n    \n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Doctype.prototype.visit = function (visitor) { return visitor.visitDoctype(this); };\n    return Doctype;\n}());\nvar Tag = (function () {\n    /**\n     * @param {?} name\n     * @param {?=} unescapedAttrs\n     * @param {?=} children\n     */\n    function Tag(name, unescapedAttrs, children) {\n        if (unescapedAttrs === void 0) { unescapedAttrs = {}; }\n        if (children === void 0) { children = []; }\n        var _this = this;\n        this.name = name;\n        this.children = children;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Tag.prototype.visit = function (visitor) { return visitor.visitTag(this); };\n    return Tag;\n}());\nvar Text$2 = (function () {\n    /**\n     * @param {?} unescapedValue\n     */\n    function Text$2(unescapedValue) {\n        this.value = _escapeXml(unescapedValue);\n    }\n    \n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Text$2.prototype.visit = function (visitor) { return visitor.visitText(this); };\n    return Text$2;\n}());\nvar CR = (function (_super) {\n    __extends(CR, _super);\n    /**\n     * @param {?=} ws\n     */\n    function CR(ws) {\n        if (ws === void 0) { ws = 0; }\n        return _super.call(this, \"\\n\" + new Array(ws + 1).join(' ')) || this;\n    }\n    return CR;\n}(Text$2));\nvar _ESCAPED_CHARS = [\n    [/&/g, '&amp;'],\n    [/\"/g, '&quot;'],\n    [/'/g, '&apos;'],\n    [/</g, '&lt;'],\n    [/>/g, '&gt;'],\n];\n/**\n * @param {?} text\n * @return {?}\n */\nfunction _escapeXml(text) {\n    return _ESCAPED_CHARS.reduce(function (text, entry) { return text.replace(entry[0], entry[1]); }, text);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION = '1.2';\nvar _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG = 'en';\nvar _PLACEHOLDER_TAG = 'x';\nvar _FILE_TAG = 'file';\nvar _SOURCE_TAG = 'source';\nvar _TARGET_TAG = 'target';\nvar _UNIT_TAG = 'trans-unit';\nvar _CONTEXT_GROUP_TAG = 'context-group';\nvar _CONTEXT_TAG = 'context';\nvar Xliff = (function (_super) {\n    __extends(Xliff, _super);\n    function Xliff() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff.prototype.write = function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor();\n        var /** @type {?} */ transUnits = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ contextTags = [];\n            message.sources.forEach(function (source) {\n                var /** @type {?} */ contextGroupTag = new Tag(_CONTEXT_GROUP_TAG, { purpose: 'location' });\n                contextGroupTag.children.push(new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'sourcefile' }, [new Text$2(source.filePath)]), new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'linenumber' }, [new Text$2(\"\" + source.startLine)]), new CR(8));\n                contextTags.push(new CR(8), contextGroupTag);\n            });\n            var /** @type {?} */ transUnit = new Tag(_UNIT_TAG, { id: message.id, datatype: 'html' });\n            (_a = transUnit.children).push.apply(_a, [new CR(8), new Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes)), new CR(8), new Tag(_TARGET_TAG)].concat(contextTags));\n            if (message.description) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'description' }, [new Text$2(message.description)]));\n            }\n            if (message.meaning) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'meaning' }, [new Text$2(message.meaning)]));\n            }\n            transUnit.children.push(new CR(6));\n            transUnits.push(new CR(6), transUnit);\n            var _a;\n        });\n        var /** @type {?} */ body = new Tag('body', {}, transUnits.concat([new CR(4)]));\n        var /** @type {?} */ file = new Tag('file', {\n            'source-language': locale || _DEFAULT_SOURCE_LANG,\n            datatype: 'plaintext',\n            original: 'ng2.template',\n        }, [new CR(4), body, new CR(2)]);\n        var /** @type {?} */ xliff = new Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff.prototype.load = function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliffParser = new XliffParser();\n        var _a = xliffParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff.prototype.digest = function (message) { return digest(message); };\n    return Xliff;\n}(Serializer));\nvar _WriteVisitor = (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var /** @type {?} */ ctype = getCtypeForTag(ph.tag);\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype });\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.closeName, ctype: ctype });\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar XliffParser = (function () {\n    function XliffParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    XliffParser.prototype.parse = function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitElement = function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG:\n                this._unitMlString = ((null));\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG:\n                // ignore source message\n                break;\n            case _TARGET_TAG:\n                var /** @type {?} */ innerTextStart = ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _FILE_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'target-language'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                visitAll(this, element.children, null);\n                break;\n            default:\n                // TODO(vicb): assert file structure, xliff version\n                // For now only recurse on unhandled nodes\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitText = function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansion = function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansionCase = function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XliffParser.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XliffParser;\n}());\nvar XmlToI18n = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'id'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"id\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getCtypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n            return 'lb';\n        case 'img':\n            return 'image';\n        default:\n            return \"x-\" + tag;\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION$1 = '2.0';\nvar _XMLNS$1 = 'urn:oasis:names:tc:xliff:document:2.0';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG$1 = 'en';\nvar _PLACEHOLDER_TAG$1 = 'ph';\nvar _PLACEHOLDER_SPANNING_TAG = 'pc';\nvar _XLIFF_TAG = 'xliff';\nvar _SOURCE_TAG$1 = 'source';\nvar _TARGET_TAG$1 = 'target';\nvar _UNIT_TAG$1 = 'unit';\nvar Xliff2 = (function (_super) {\n    __extends(Xliff2, _super);\n    function Xliff2() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff2.prototype.write = function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor$1();\n        var /** @type {?} */ units = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ unit = new Tag(_UNIT_TAG$1, { id: message.id });\n            if (message.description || message.meaning) {\n                var /** @type {?} */ notes = new Tag('notes');\n                if (message.description) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'description' }, [new Text$2(message.description)]));\n                }\n                if (message.meaning) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'meaning' }, [new Text$2(message.meaning)]));\n                }\n                notes.children.push(new CR(6));\n                unit.children.push(new CR(6), notes);\n            }\n            var /** @type {?} */ segment = new Tag('segment');\n            segment.children.push(new CR(8), new Tag(_SOURCE_TAG$1, {}, visitor.serialize(message.nodes)), new CR(6));\n            unit.children.push(new CR(6), segment, new CR(4));\n            units.push(new CR(4), unit);\n        });\n        var /** @type {?} */ file = new Tag('file', { 'original': 'ng.template', id: 'ngi18n' }, units.concat([new CR(2)]));\n        var /** @type {?} */ xliff = new Tag(_XLIFF_TAG, { version: _VERSION$1, xmlns: _XMLNS$1, srcLang: locale || _DEFAULT_SOURCE_LANG$1 }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2.prototype.load = function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliff2Parser = new Xliff2Parser();\n        var _a = xliff2Parser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$1();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff2 parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2.prototype.digest = function (message) { return decimalDigest(message); };\n    return Xliff2;\n}(Serializer));\nvar _WriteVisitor$1 = (function () {\n    function _WriteVisitor$1() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitText = function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ type = getTypeForTag(ph.tag);\n        if (ph.isVoid) {\n            var /** @type {?} */ tagPh = new Tag(_PLACEHOLDER_TAG$1, {\n                id: (this._nextPlaceholderId++).toString(),\n                equiv: ph.startName,\n                type: type,\n                disp: \"<\" + ph.tag + \"/>\",\n            });\n            return [tagPh];\n        }\n        var /** @type {?} */ tagPc = new Tag(_PLACEHOLDER_SPANNING_TAG, {\n            id: (this._nextPlaceholderId++).toString(),\n            equivStart: ph.startName,\n            equivEnd: ph.closeName,\n            type: type,\n            dispStart: \"<\" + ph.tag + \">\",\n            dispEnd: \"</\" + ph.tag + \">\",\n        });\n        var /** @type {?} */ nodes = [].concat.apply([], ph.children.map(function (node) { return node.visit(_this); }));\n        if (nodes.length) {\n            nodes.forEach(function (node) { return tagPc.children.push(node); });\n        }\n        else {\n            tagPc.children.push(new Text$2(''));\n        }\n        return [tagPc];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG$1, {\n                id: (this._nextPlaceholderId++).toString(),\n                equiv: ph.name,\n                disp: \"{{\" + ph.value + \"}}\",\n            })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitIcuPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG$1, { id: (this._nextPlaceholderId++).toString() })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.serialize = function (nodes) {\n        var _this = this;\n        this._nextPlaceholderId = 0;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor$1;\n}());\nvar Xliff2Parser = (function () {\n    function Xliff2Parser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2Parser.prototype.parse = function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitElement = function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG$1:\n                this._unitMlString = null;\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG$1 + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG$1:\n                // ignore source message\n                break;\n            case _TARGET_TAG$1:\n                var /** @type {?} */ innerTextStart = ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _XLIFF_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'trgLang'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                var /** @type {?} */ versionAttr = element.attrs.find(function (attr) { return attr.name === 'version'; });\n                if (versionAttr) {\n                    var /** @type {?} */ version = versionAttr.value;\n                    if (version !== '2.0') {\n                        this._addError(element, \"The XLIFF file version \" + version + \" is not compatible with XLIFF 2.0 serializer\");\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                    }\n                }\n                break;\n            default:\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitText = function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansion = function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansionCase = function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2Parser.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return Xliff2Parser;\n}());\nvar XmlToI18n$1 = (function () {\n    function XmlToI18n$1() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.convert = function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] : [].concat.apply([], visitAll(this, xmlIcu.rootNodes));\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitText = function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitElement = function (el, context) {\n        var _this = this;\n        switch (el.name) {\n            case _PLACEHOLDER_TAG$1:\n                var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'equiv'; });\n                if (nameAttr) {\n                    return [new Placeholder('', nameAttr.value, el.sourceSpan)];\n                }\n                this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equiv\\\" attribute\");\n                break;\n            case _PLACEHOLDER_SPANNING_TAG:\n                var /** @type {?} */ startAttr = el.attrs.find(function (attr) { return attr.name === 'equivStart'; });\n                var /** @type {?} */ endAttr = el.attrs.find(function (attr) { return attr.name === 'equivEnd'; });\n                if (!startAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivStart\\\" attribute\");\n                }\n                else if (!endAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivEnd\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ startId = startAttr.value;\n                    var /** @type {?} */ endId = endAttr.value;\n                    var /** @type {?} */ nodes = [];\n                    return nodes.concat.apply(nodes, [new Placeholder('', startId, el.sourceSpan)].concat(el.children.map(function (node) { return node.visit(_this, null); }), [new Placeholder('', endId, el.sourceSpan)]));\n                }\n                break;\n            default:\n                this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitExpansion = function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitExpansionCase = function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: [].concat.apply([], visitAll(this, icuCase.expression)),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n$1.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XmlToI18n$1;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getTypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n        case 'b':\n        case 'i':\n        case 'u':\n            return 'fmt';\n        case 'img':\n            return 'image';\n        case 'a':\n            return 'link';\n        default:\n            return 'other';\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _MESSAGES_TAG = 'messagebundle';\nvar _MESSAGE_TAG = 'msg';\nvar _PLACEHOLDER_TAG$2 = 'ph';\nvar _EXEMPLE_TAG = 'ex';\nvar _SOURCE_TAG$2 = 'source';\nvar _DOCTYPE = \"<!ELEMENT messagebundle (msg)*>\\n<!ATTLIST messagebundle class CDATA #IMPLIED>\\n\\n<!ELEMENT msg (#PCDATA|ph|source)*>\\n<!ATTLIST msg id CDATA #IMPLIED>\\n<!ATTLIST msg seq CDATA #IMPLIED>\\n<!ATTLIST msg name CDATA #IMPLIED>\\n<!ATTLIST msg desc CDATA #IMPLIED>\\n<!ATTLIST msg meaning CDATA #IMPLIED>\\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\\n<!ATTLIST msg xml:space (default|preserve) \\\"default\\\">\\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\\n\\n<!ELEMENT source (#PCDATA)>\\n\\n<!ELEMENT ph (#PCDATA|ex)*>\\n<!ATTLIST ph name CDATA #REQUIRED>\\n\\n<!ELEMENT ex (#PCDATA)>\";\nvar Xmb = (function (_super) {\n    __extends(Xmb, _super);\n    function Xmb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xmb.prototype.write = function (messages, locale) {\n        var /** @type {?} */ exampleVisitor = new ExampleVisitor();\n        var /** @type {?} */ visitor = new _Visitor$2();\n        var /** @type {?} */ rootNode = new Tag(_MESSAGES_TAG);\n        messages.forEach(function (message) {\n            var /** @type {?} */ attrs = { id: message.id };\n            if (message.description) {\n                attrs['desc'] = message.description;\n            }\n            if (message.meaning) {\n                attrs['meaning'] = message.meaning;\n            }\n            var /** @type {?} */ sourceTags = [];\n            message.sources.forEach(function (source) {\n                sourceTags.push(new Tag(_SOURCE_TAG$2, {}, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            rootNode.children.push(new CR(2), new Tag(_MESSAGE_TAG, attrs, sourceTags.concat(visitor.serialize(message.nodes))));\n        });\n        rootNode.children.push(new CR());\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }),\n            new CR(),\n            new Doctype(_MESSAGES_TAG, _DOCTYPE),\n            new CR(),\n            exampleVisitor.addDefaultExamples(rootNode),\n            new CR(),\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xmb.prototype.load = function (content, url) {\n        throw new Error('Unsupported');\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.digest = function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.createNameMapper = function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xmb;\n}(Serializer));\nvar _Visitor$2 = (function () {\n    function _Visitor$2() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitText = function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitTagPlaceholder = function (ph, context) {\n        var /** @type {?} */ startEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"<\" + ph.tag + \">\")]);\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.startName }, [startEx]);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        var /** @type {?} */ closeEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"</\" + ph.tag + \">\")]);\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.closeName }, [closeEx]);\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitIcuPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _Visitor$2.prototype.serialize = function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _Visitor$2;\n}());\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest$1(message) {\n    return decimalDigest(message);\n}\nvar ExampleVisitor = (function () {\n    function ExampleVisitor() {\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    ExampleVisitor.prototype.addDefaultExamples = function (node) {\n        node.visit(this);\n        return node;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitTag = function (tag) {\n        var _this = this;\n        if (tag.name === _PLACEHOLDER_TAG$2) {\n            if (!tag.children || tag.children.length == 0) {\n                var /** @type {?} */ exText = new Text$2(tag.attrs['name'] || '...');\n                tag.children = [new Tag(_EXEMPLE_TAG, {}, [exText])];\n            }\n        }\n        else if (tag.children) {\n            tag.children.forEach(function (node) { return node.visit(_this); });\n        }\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitText = function (text) { };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDeclaration = function (decl) { };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDoctype = function (doctype) { };\n    return ExampleVisitor;\n}());\n/**\n * @param {?} internalName\n * @return {?}\n */\nfunction toPublicName(internalName) {\n    return internalName.toUpperCase().replace(/[^A-Z0-9_]/g, '_');\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _TRANSLATIONS_TAG = 'translationbundle';\nvar _TRANSLATION_TAG = 'translation';\nvar _PLACEHOLDER_TAG$3 = 'ph';\nvar Xtb = (function (_super) {\n    __extends(Xtb, _super);\n    function Xtb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xtb.prototype.write = function (messages, locale) { throw new Error('Unsupported'); };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xtb.prototype.load = function (content, url) {\n        // xtb to xml nodes\n        var /** @type {?} */ xtbParser = new XtbParser();\n        var _a = xtbParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$2();\n        // Because we should be able to load xtb files that rely on features not supported by angular,\n        // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n        // converted\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var /** @type {?} */ valueFn = function () {\n                var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, errors = _a.errors;\n                if (errors.length) {\n                    throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n                }\n                return i18nNodes;\n            };\n            createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n        });\n        if (errors.length) {\n            throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.digest = function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.createNameMapper = function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xtb;\n}(Serializer));\n/**\n * @param {?} messages\n * @param {?} id\n * @param {?} valueFn\n * @return {?}\n */\nfunction createLazyProperty(messages, id, valueFn) {\n    Object.defineProperty(messages, id, {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n            var /** @type {?} */ value = valueFn();\n            Object.defineProperty(messages, id, { enumerable: true, value: value });\n            return value;\n        },\n        set: function (_) { throw new Error('Could not overwrite an XTB translation'); },\n    });\n}\nvar XtbParser = (function () {\n    function XtbParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    XtbParser.prototype.parse = function (xtb, url) {\n        this._bundleDepth = 0;\n        this._msgIdToHtml = {};\n        // We can not parse the ICU messages at this point as some messages might not originate\n        // from Angular that could not be lex'd.\n        var /** @type {?} */ xml = new XmlParser().parse(xtb, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitElement = function (element, context) {\n        switch (element.name) {\n            case _TRANSLATIONS_TAG:\n                this._bundleDepth++;\n                if (this._bundleDepth > 1) {\n                    this._addError(element, \"<\" + _TRANSLATIONS_TAG + \"> elements can not be nested\");\n                }\n                var /** @type {?} */ langAttr = element.attrs.find(function (attr) { return attr.name === 'lang'; });\n                if (langAttr) {\n                    this._locale = langAttr.value;\n                }\n                visitAll(this, element.children, null);\n                this._bundleDepth--;\n                break;\n            case _TRANSLATION_TAG:\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _TRANSLATION_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        var /** @type {?} */ innerTextStart = ((element.startSourceSpan)).end.offset;\n                        var /** @type {?} */ innerTextEnd = ((element.endSourceSpan)).start.offset;\n                        var /** @type {?} */ content = ((element.startSourceSpan)).start.file.content;\n                        var /** @type {?} */ innerText = content.slice(/** @type {?} */ ((innerTextStart)), /** @type {?} */ ((innerTextEnd)));\n                        this._msgIdToHtml[id] = innerText;\n                    }\n                }\n                break;\n            default:\n                this._addError(element, 'Unexpected tag');\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitText = function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansion = function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansionCase = function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XtbParser.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XtbParser;\n}());\nvar XmlToI18n$2 = (function () {\n    function XmlToI18n$2() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.convert = function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitText = function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitExpansion = function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitExpansionCase = function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitElement = function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG$3) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'name'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG$3 + \"> misses the \\\"name\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n$2.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n$2;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlParser = (function (_super) {\n    __extends(HtmlParser, _super);\n    function HtmlParser() {\n        return _super.call(this, getHtmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    HtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms, interpolationConfig);\n    };\n    return HtmlParser;\n}(Parser$1));\nHtmlParser.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nHtmlParser.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for translated messages\n */\nvar TranslationBundle = (function () {\n    /**\n     * @param {?=} _i18nNodesByMsgId\n     * @param {?=} locale\n     * @param {?=} digest\n     * @param {?=} mapperFactory\n     * @param {?=} missingTranslationStrategy\n     * @param {?=} console\n     */\n    function TranslationBundle(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        if (missingTranslationStrategy === void 0) { missingTranslationStrategy = _angular_core.MissingTranslationStrategy.Warning; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this.digest = digest;\n        this.mapperFactory = mapperFactory;\n        this._i18nToHtml = new I18nToHtmlVisitor(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console);\n    }\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    TranslationBundle.load = function (content, url, serializer, missingTranslationStrategy, console) {\n        var _a = serializer.load(content, url), locale = _a.locale, i18nNodesByMsgId = _a.i18nNodesByMsgId;\n        var /** @type {?} */ digestFn = function (m) { return serializer.digest(m); };\n        var /** @type {?} */ mapperFactory = function (m) { return ((serializer.createNameMapper(m))); };\n        return new TranslationBundle(i18nNodesByMsgId, locale, digestFn, mapperFactory, missingTranslationStrategy, console);\n    };\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.get = function (srcMsg) {\n        var /** @type {?} */ html = this._i18nToHtml.convert(srcMsg);\n        if (html.errors.length) {\n            throw new Error(html.errors.join('\\n'));\n        }\n        return html.nodes;\n    };\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.has = function (srcMsg) { return this.digest(srcMsg) in this._i18nNodesByMsgId; };\n    return TranslationBundle;\n}());\nvar I18nToHtmlVisitor = (function () {\n    /**\n     * @param {?=} _i18nNodesByMsgId\n     * @param {?=} _locale\n     * @param {?=} _digest\n     * @param {?=} _mapperFactory\n     * @param {?=} _missingTranslationStrategy\n     * @param {?=} _console\n     */\n    function I18nToHtmlVisitor(_i18nNodesByMsgId, _locale, _digest, _mapperFactory, _missingTranslationStrategy, _console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this._locale = _locale;\n        this._digest = _digest;\n        this._mapperFactory = _mapperFactory;\n        this._missingTranslationStrategy = _missingTranslationStrategy;\n        this._console = _console;\n        this._contextStack = [];\n        this._errors = [];\n    }\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.convert = function (srcMsg) {\n        this._contextStack.length = 0;\n        this._errors.length = 0;\n        // i18n to text\n        var /** @type {?} */ text = this._convertToText(srcMsg);\n        // text to html\n        var /** @type {?} */ url = srcMsg.nodes[0].sourceSpan.start.file.url;\n        var /** @type {?} */ html = new HtmlParser().parse(text, url, true);\n        return {\n            nodes: html.rootNodes,\n            errors: this._errors.concat(html.errors),\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitText = function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        return container.children.map(function (n) { return n.visit(_this); }).join('');\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // TODO(vicb): Once all format switch to using expression placeholders\n        // we should throw when the placeholder is not in the source message\n        var /** @type {?} */ exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n            this._srcMsg.placeholders[icu.expression] :\n            icu.expression;\n        return \"{\" + exp + \", \" + icu.type + \", \" + cases.join(' ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitPlaceholder = function (ph, context) {\n        var /** @type {?} */ phName = this._mapper(ph.name);\n        if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n            return this._srcMsg.placeholders[phName];\n        }\n        if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n            return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n        }\n        this._addError(ph, \"Unknown placeholder \\\"\" + ph.name + \"\\\"\");\n        return '';\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ tag = \"\" + ph.tag;\n        var /** @type {?} */ attrs = Object.keys(ph.attrs).map(function (name) { return name + \"=\\\"\" + ph.attrs[name] + \"\\\"\"; }).join(' ');\n        if (ph.isVoid) {\n            return \"<\" + tag + \" \" + attrs + \"/>\";\n        }\n        var /** @type {?} */ children = ph.children.map(function (c) { return c.visit(_this); }).join('');\n        return \"<\" + tag + \" \" + attrs + \">\" + children + \"</\" + tag + \">\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        // An ICU placeholder references the source message to be serialized\n        return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n    };\n    /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._convertToText = function (srcMsg) {\n        var _this = this;\n        var /** @type {?} */ id = this._digest(srcMsg);\n        var /** @type {?} */ mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n        var /** @type {?} */ nodes;\n        this._contextStack.push({ msg: this._srcMsg, mapper: this._mapper });\n        this._srcMsg = srcMsg;\n        if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n            // When there is a translation use its nodes as the source\n            // And create a mapper to convert serialized placeholder names to internal names\n            nodes = this._i18nNodesByMsgId[id];\n            this._mapper = function (name) { return mapper ? ((mapper.toInternalName(name))) : name; };\n        }\n        else {\n            // When no translation has been found\n            // - report an error / a warning / nothing,\n            // - use the nodes from the original message\n            // - placeholders are already internal and need no mapper\n            if (this._missingTranslationStrategy === _angular_core.MissingTranslationStrategy.Error) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._addError(srcMsg.nodes[0], \"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            else if (this._console &&\n                this._missingTranslationStrategy === _angular_core.MissingTranslationStrategy.Warning) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._console.warn(\"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            nodes = srcMsg.nodes;\n            this._mapper = function (name) { return name; };\n        }\n        var /** @type {?} */ text = nodes.map(function (node) { return node.visit(_this); }).join('');\n        var /** @type {?} */ context = ((this._contextStack.pop()));\n        this._srcMsg = context.msg;\n        this._mapper = context.mapper;\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._addError = function (el, msg) {\n        this._errors.push(new I18nError(el.sourceSpan, msg));\n    };\n    return I18nToHtmlVisitor;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar I18NHtmlParser = (function () {\n    /**\n     * @param {?} _htmlParser\n     * @param {?=} translations\n     * @param {?=} translationsFormat\n     * @param {?=} missingTranslation\n     * @param {?=} console\n     */\n    function I18NHtmlParser(_htmlParser, translations, translationsFormat, missingTranslation, console) {\n        if (missingTranslation === void 0) { missingTranslation = _angular_core.MissingTranslationStrategy.Warning; }\n        this._htmlParser = _htmlParser;\n        if (translations) {\n            var serializer = createSerializer(translationsFormat);\n            this._translationBundle =\n                TranslationBundle.load(translations, 'i18n', serializer, missingTranslation, console);\n        }\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    I18NHtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n        if (!this._translationBundle) {\n            // Do not enable i18n when no translation bundle is provided\n            return parseResult;\n        }\n        if (parseResult.errors.length) {\n            return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n        }\n        return mergeTranslations(parseResult.rootNodes, this._translationBundle, interpolationConfig, [], {});\n    };\n    return I18NHtmlParser;\n}());\n/**\n * @param {?=} format\n * @return {?}\n */\nfunction createSerializer(format) {\n    format = (format || 'xlf').toLowerCase();\n    switch (format) {\n        case 'xmb':\n            return new Xmb();\n        case 'xtb':\n            return new Xtb();\n        case 'xliff2':\n        case 'xlf2':\n            return new Xliff2();\n        case 'xliff':\n        case 'xlf':\n        default:\n            return new Xliff();\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CORE = assetUrl('core');\nvar Identifiers = (function () {\n    function Identifiers() {\n    }\n    return Identifiers;\n}());\nIdentifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n    name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n    moduleUrl: CORE,\n    runtime: _angular_core.ANALYZE_FOR_ENTRY_COMPONENTS\n};\nIdentifiers.ElementRef = { name: 'ElementRef', moduleUrl: CORE, runtime: _angular_core.ElementRef };\nIdentifiers.NgModuleRef = { name: 'NgModuleRef', moduleUrl: CORE, runtime: _angular_core.NgModuleRef };\nIdentifiers.ViewContainerRef = { name: 'ViewContainerRef', moduleUrl: CORE, runtime: _angular_core.ViewContainerRef };\nIdentifiers.ChangeDetectorRef = { name: 'ChangeDetectorRef', moduleUrl: CORE, runtime: _angular_core.ChangeDetectorRef };\nIdentifiers.QueryList = { name: 'QueryList', moduleUrl: CORE, runtime: _angular_core.QueryList };\nIdentifiers.TemplateRef = { name: 'TemplateRef', moduleUrl: CORE, runtime: _angular_core.TemplateRef };\nIdentifiers.CodegenComponentFactoryResolver = {\n    name: 'ɵCodegenComponentFactoryResolver',\n    moduleUrl: CORE,\n    runtime: _angular_core.ɵCodegenComponentFactoryResolver\n};\nIdentifiers.ComponentFactoryResolver = {\n    name: 'ComponentFactoryResolver',\n    moduleUrl: CORE,\n    runtime: _angular_core.ComponentFactoryResolver\n};\nIdentifiers.ComponentFactory = { name: 'ComponentFactory', moduleUrl: CORE, runtime: _angular_core.ComponentFactory };\nIdentifiers.ComponentRef = { name: 'ComponentRef', moduleUrl: CORE, runtime: _angular_core.ComponentRef };\nIdentifiers.NgModuleFactory = { name: 'NgModuleFactory', moduleUrl: CORE, runtime: _angular_core.NgModuleFactory };\nIdentifiers.NgModuleInjector = {\n    name: 'ɵNgModuleInjector',\n    moduleUrl: CORE,\n    runtime: _angular_core.ɵNgModuleInjector,\n};\nIdentifiers.RegisterModuleFactoryFn = {\n    name: 'ɵregisterModuleFactory',\n    moduleUrl: CORE,\n    runtime: _angular_core.ɵregisterModuleFactory,\n};\nIdentifiers.Injector = { name: 'Injector', moduleUrl: CORE, runtime: _angular_core.Injector };\nIdentifiers.ViewEncapsulation = { name: 'ViewEncapsulation', moduleUrl: CORE, runtime: _angular_core.ViewEncapsulation };\nIdentifiers.ChangeDetectionStrategy = {\n    name: 'ChangeDetectionStrategy',\n    moduleUrl: CORE,\n    runtime: _angular_core.ChangeDetectionStrategy\n};\nIdentifiers.SecurityContext = {\n    name: 'SecurityContext',\n    moduleUrl: CORE,\n    runtime: _angular_core.SecurityContext,\n};\nIdentifiers.LOCALE_ID = { name: 'LOCALE_ID', moduleUrl: CORE, runtime: _angular_core.LOCALE_ID };\nIdentifiers.TRANSLATIONS_FORMAT = { name: 'TRANSLATIONS_FORMAT', moduleUrl: CORE, runtime: _angular_core.TRANSLATIONS_FORMAT };\nIdentifiers.inlineInterpolate = { name: 'ɵinlineInterpolate', moduleUrl: CORE, runtime: _angular_core.ɵinlineInterpolate };\nIdentifiers.interpolate = { name: 'ɵinterpolate', moduleUrl: CORE, runtime: _angular_core.ɵinterpolate };\nIdentifiers.EMPTY_ARRAY = { name: 'ɵEMPTY_ARRAY', moduleUrl: CORE, runtime: _angular_core.ɵEMPTY_ARRAY };\nIdentifiers.EMPTY_MAP = { name: 'ɵEMPTY_MAP', moduleUrl: CORE, runtime: _angular_core.ɵEMPTY_MAP };\nIdentifiers.Renderer = { name: 'Renderer', moduleUrl: CORE, runtime: _angular_core.Renderer };\nIdentifiers.viewDef = { name: 'ɵvid', moduleUrl: CORE, runtime: _angular_core.ɵvid };\nIdentifiers.elementDef = { name: 'ɵeld', moduleUrl: CORE, runtime: _angular_core.ɵeld };\nIdentifiers.anchorDef = { name: 'ɵand', moduleUrl: CORE, runtime: _angular_core.ɵand };\nIdentifiers.textDef = { name: 'ɵted', moduleUrl: CORE, runtime: _angular_core.ɵted };\nIdentifiers.directiveDef = { name: 'ɵdid', moduleUrl: CORE, runtime: _angular_core.ɵdid };\nIdentifiers.providerDef = { name: 'ɵprd', moduleUrl: CORE, runtime: _angular_core.ɵprd };\nIdentifiers.queryDef = { name: 'ɵqud', moduleUrl: CORE, runtime: _angular_core.ɵqud };\nIdentifiers.pureArrayDef = { name: 'ɵpad', moduleUrl: CORE, runtime: _angular_core.ɵpad };\nIdentifiers.pureObjectDef = { name: 'ɵpod', moduleUrl: CORE, runtime: _angular_core.ɵpod };\nIdentifiers.purePipeDef = { name: 'ɵppd', moduleUrl: CORE, runtime: _angular_core.ɵppd };\nIdentifiers.pipeDef = { name: 'ɵpid', moduleUrl: CORE, runtime: _angular_core.ɵpid };\nIdentifiers.nodeValue = { name: 'ɵnov', moduleUrl: CORE, runtime: _angular_core.ɵnov };\nIdentifiers.ngContentDef = { name: 'ɵncd', moduleUrl: CORE, runtime: _angular_core.ɵncd };\nIdentifiers.unwrapValue = { name: 'ɵunv', moduleUrl: CORE, runtime: _angular_core.ɵunv };\nIdentifiers.createRendererType2 = { name: 'ɵcrt', moduleUrl: CORE, runtime: _angular_core.ɵcrt };\nIdentifiers.RendererType2 = {\n    name: 'RendererType2',\n    moduleUrl: CORE,\n    // type only\n    runtime: null\n};\nIdentifiers.ViewDefinition = {\n    name: 'ɵViewDefinition',\n    moduleUrl: CORE,\n    // type only\n    runtime: null\n};\nIdentifiers.createComponentFactory = { name: 'ɵccf', moduleUrl: CORE, runtime: _angular_core.ɵccf };\n/**\n * @param {?} pkg\n * @param {?=} path\n * @param {?=} type\n * @return {?}\n */\nfunction assetUrl(pkg, path, type) {\n    if (path === void 0) { path = null; }\n    if (type === void 0) { type = 'src'; }\n    if (path == null) {\n        return \"@angular/\" + pkg;\n    }\n    else {\n        return \"@angular/\" + pkg + \"/\" + type + \"/\" + path;\n    }\n}\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction resolveIdentifier(identifier) {\n    var /** @type {?} */ name = identifier.name;\n    return _angular_core.ɵreflector.resolveIdentifier(name, identifier.moduleUrl, null, identifier.runtime);\n}\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction createIdentifier(identifier) {\n    return { reference: resolveIdentifier(identifier) };\n}\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction identifierToken(identifier) {\n    return { identifier: identifier };\n}\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction createIdentifierToken(identifier) {\n    return identifierToken(createIdentifier(identifier));\n}\n/**\n * @param {?} enumType\n * @param {?} name\n * @return {?}\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// http://cldr.unicode.org/index/cldr-spec/plural-rules\nvar PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n/**\n * Expands special forms into elements.\n *\n * For example,\n *\n * ```\n * { messages.length, plural,\n *   =0 {zero}\n *   =1 {one}\n *   other {more than one}\n * }\n * ```\n *\n * will be expanded into\n *\n * ```\n * <ng-container [ngPlural]=\"messages.length\">\n *   <ng-template ngPluralCase=\"=0\">zero</ng-template>\n *   <ng-template ngPluralCase=\"=1\">one</ng-template>\n *   <ng-template ngPluralCase=\"other\">more than one</ng-template>\n * </ng-container>\n * ```\n * @param {?} nodes\n * @return {?}\n */\nfunction expandNodes(nodes) {\n    var /** @type {?} */ expander = new _Expander();\n    return new ExpansionResult(visitAll(expander, nodes), expander.isExpanded, expander.errors);\n}\nvar ExpansionResult = (function () {\n    /**\n     * @param {?} nodes\n     * @param {?} expanded\n     * @param {?} errors\n     */\n    function ExpansionResult(nodes, expanded, errors) {\n        this.nodes = nodes;\n        this.expanded = expanded;\n        this.errors = errors;\n    }\n    return ExpansionResult;\n}());\nvar ExpansionError = (function (_super) {\n    __extends(ExpansionError, _super);\n    /**\n     * @param {?} span\n     * @param {?} errorMsg\n     */\n    function ExpansionError(span, errorMsg) {\n        return _super.call(this, span, errorMsg) || this;\n    }\n    return ExpansionError;\n}(ParseError));\n/**\n * Expand expansion forms (plural, select) to directives\n *\n * \\@internal\n */\nvar _Expander = (function () {\n    function _Expander() {\n        this.isExpanded = false;\n        this.errors = [];\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitElement = function (element, context) {\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitAttribute = function (attribute, context) { return attribute; };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitText = function (text, context) { return text; };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitComment = function (comment, context) { return comment; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansion = function (icu, context) {\n        this.isExpanded = true;\n        return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n            _expandDefaultForm(icu, this.errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansionCase = function (icuCase, context) {\n        throw new Error('Should not be reached');\n    };\n    return _Expander;\n}());\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandPluralForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n            errors.push(new ExpansionError(c.valueSourceSpan, \"Plural cases should be \\\"=<number>\\\" or one of \" + PLURAL_CASES.join(\", \")));\n        }\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        return new Element(\"ng-template\", [new Attribute$1('ngPluralCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandDefaultForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        if (c.value === 'other') {\n            // other is the default case when no values match\n            return new Element(\"ng-template\", [new Attribute$1('ngSwitchDefault', '', c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n        }\n        return new Element(\"ng-template\", [new Attribute$1('ngSwitchCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ProviderError = (function (_super) {\n    __extends(ProviderError, _super);\n    /**\n     * @param {?} message\n     * @param {?} span\n     */\n    function ProviderError(message, span) {\n        return _super.call(this, span, message) || this;\n    }\n    return ProviderError;\n}(ParseError));\nvar ProviderViewContext = (function () {\n    /**\n     * @param {?} component\n     */\n    function ProviderViewContext(component) {\n        var _this = this;\n        this.component = component;\n        this.errors = [];\n        this.viewQueries = _getViewQueries(component);\n        this.viewProviders = new Map();\n        component.viewProviders.forEach(function (provider) {\n            if (_this.viewProviders.get(tokenReference(provider.token)) == null) {\n                _this.viewProviders.set(tokenReference(provider.token), true);\n            }\n        });\n    }\n    return ProviderViewContext;\n}());\nvar ProviderElementContext = (function () {\n    /**\n     * @param {?} viewContext\n     * @param {?} _parent\n     * @param {?} _isViewRoot\n     * @param {?} _directiveAsts\n     * @param {?} attrs\n     * @param {?} refs\n     * @param {?} isTemplate\n     * @param {?} contentQueryStartId\n     * @param {?} _sourceSpan\n     */\n    function ProviderElementContext(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, isTemplate, contentQueryStartId, _sourceSpan) {\n        var _this = this;\n        this.viewContext = viewContext;\n        this._parent = _parent;\n        this._isViewRoot = _isViewRoot;\n        this._directiveAsts = _directiveAsts;\n        this._sourceSpan = _sourceSpan;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._hasViewContainer = false;\n        this._queriedTokens = new Map();\n        this._attrs = {};\n        attrs.forEach(function (attrAst) { return _this._attrs[attrAst.name] = attrAst.value; });\n        var directivesMeta = _directiveAsts.map(function (directiveAst) { return directiveAst.directive; });\n        this._allProviders =\n            _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n        this._contentQueries = _getContentQueries(contentQueryStartId, directivesMeta);\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._addQueryReadsTo(provider.token, provider.token, _this._queriedTokens);\n        });\n        if (isTemplate) {\n            var templateRefId = createIdentifierToken(Identifiers.TemplateRef);\n            this._addQueryReadsTo(templateRefId, templateRefId, this._queriedTokens);\n        }\n        refs.forEach(function (refAst) {\n            var defaultQueryValue = refAst.value || createIdentifierToken(Identifiers.ElementRef);\n            _this._addQueryReadsTo({ value: refAst.name }, defaultQueryValue, _this._queriedTokens);\n        });\n        if (this._queriedTokens.get(resolveIdentifier(Identifiers.ViewContainerRef))) {\n            this._hasViewContainer = true;\n        }\n        // create the providers that we know are eager first\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            var eager = provider.eager || _this._queriedTokens.get(tokenReference(provider.token));\n            if (eager) {\n                _this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ProviderElementContext.prototype.afterElement = function () {\n        var _this = this;\n        // collect lazy providers\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n        });\n    };\n    Object.defineProperty(ProviderElementContext.prototype, \"transformProviders\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return Array.from(this._transformedProviders.values());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedDirectiveAsts\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ sortedProviderTypes = this.transformProviders.map(function (provider) { return provider.token.identifier; });\n            var /** @type {?} */ sortedDirectives = this._directiveAsts.slice();\n            sortedDirectives.sort(function (dir1, dir2) { return sortedProviderTypes.indexOf(dir1.directive.type) -\n                sortedProviderTypes.indexOf(dir2.directive.type); });\n            return sortedDirectives;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedHasViewContainer\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._hasViewContainer; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"queryMatches\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ allMatches = [];\n            this._queriedTokens.forEach(function (matches) { allMatches.push.apply(allMatches, matches); });\n            return allMatches;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    ProviderElementContext.prototype._addQueryReadsTo = function (token, defaultValue, queryReadTokens) {\n        this._getQueriesFor(token).forEach(function (query) {\n            var /** @type {?} */ queryValue = query.meta.read || defaultValue;\n            var /** @type {?} */ tokenRef = tokenReference(queryValue);\n            var /** @type {?} */ queryMatches = queryReadTokens.get(tokenRef);\n            if (!queryMatches) {\n                queryMatches = [];\n                queryReadTokens.set(tokenRef, queryMatches);\n            }\n            queryMatches.push({ queryId: query.queryId, value: queryValue });\n        });\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getQueriesFor = function (token) {\n        var /** @type {?} */ result = [];\n        var /** @type {?} */ currentEl = this;\n        var /** @type {?} */ distance = 0;\n        var /** @type {?} */ queries;\n        while (currentEl !== null) {\n            queries = currentEl._contentQueries.get(tokenReference(token));\n            if (queries) {\n                result.push.apply(result, queries.filter(function (query) { return query.meta.descendants || distance <= 1; }));\n            }\n            if (currentEl._directiveAsts.length > 0) {\n                distance++;\n            }\n            currentEl = currentEl._parent;\n        }\n        queries = this.viewContext.viewQueries.get(tokenReference(token));\n        if (queries) {\n            result.push.apply(result, queries);\n        }\n        return result;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getOrCreateLocalProvider = function (requestingProviderType, token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider || ((requestingProviderType === ProviderAstType.Directive ||\n            requestingProviderType === ProviderAstType.PublicService) &&\n            resolvedProvider.providerType === ProviderAstType.PrivateService) ||\n            ((requestingProviderType === ProviderAstType.PrivateService ||\n                requestingProviderType === ProviderAstType.PublicService) &&\n                resolvedProvider.providerType === ProviderAstType.Builtin)) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this.viewContext.errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), this._sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = ((_this._getDependency(resolvedProvider.providerType, { token: provider.useExisting }, eager)));\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getLocalDependency = function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        if (dep.isAttribute) {\n            var /** @type {?} */ attrValue = this._attrs[((dep.token)).value];\n            return { isValue: true, value: attrValue == null ? null : attrValue };\n        }\n        if (dep.token != null) {\n            // access builtints\n            if ((requestingProviderType === ProviderAstType.Directive ||\n                requestingProviderType === ProviderAstType.Component)) {\n                if (tokenReference(dep.token) === resolveIdentifier(Identifiers.Renderer) ||\n                    tokenReference(dep.token) === resolveIdentifier(Identifiers.ElementRef) ||\n                    tokenReference(dep.token) === resolveIdentifier(Identifiers.ChangeDetectorRef) ||\n                    tokenReference(dep.token) === resolveIdentifier(Identifiers.TemplateRef)) {\n                    return dep;\n                }\n                if (tokenReference(dep.token) === resolveIdentifier(Identifiers.ViewContainerRef)) {\n                    this._hasViewContainer = true;\n                }\n            }\n            // access the injector\n            if (tokenReference(dep.token) === resolveIdentifier(Identifiers.Injector)) {\n                return dep;\n            }\n            // access providers\n            if (this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager) != null) {\n                return dep;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getDependency = function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ currElement = this;\n        var /** @type {?} */ currEager = eager;\n        var /** @type {?} */ result = null;\n        if (!dep.isSkipSelf) {\n            result = this._getLocalDependency(requestingProviderType, dep, eager);\n        }\n        if (dep.isSelf) {\n            if (!result && dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n        }\n        else {\n            // check parent elements\n            while (!result && currElement._parent) {\n                var /** @type {?} */ prevElement = currElement;\n                currElement = currElement._parent;\n                if (prevElement._isViewRoot) {\n                    currEager = false;\n                }\n                result = currElement._getLocalDependency(ProviderAstType.PublicService, dep, currEager);\n            }\n            // check @Host restriction\n            if (!result) {\n                if (!dep.isHost || this.viewContext.component.isHost ||\n                    this.viewContext.component.type.reference === tokenReference(/** @type {?} */ ((dep.token))) ||\n                    this.viewContext.viewProviders.get(tokenReference(/** @type {?} */ ((dep.token)))) != null) {\n                    result = dep;\n                }\n                else {\n                    result = dep.isOptional ? result = { isValue: true, value: null } : null;\n                }\n            }\n        }\n        if (!result) {\n            this.viewContext.errors.push(new ProviderError(\"No provider for \" + tokenName(/** @type {?} */ ((dep.token))), this._sourceSpan));\n        }\n        return result;\n    };\n    return ProviderElementContext;\n}());\nvar NgModuleProviderAnalyzer = (function () {\n    /**\n     * @param {?} ngModule\n     * @param {?} extraProviders\n     * @param {?} sourceSpan\n     */\n    function NgModuleProviderAnalyzer(ngModule, extraProviders, sourceSpan) {\n        var _this = this;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._errors = [];\n        this._allProviders = new Map();\n        ngModule.transitiveModule.modules.forEach(function (ngModuleType) {\n            var ngModuleProvider = { token: { identifier: ngModuleType }, useClass: ngModuleType };\n            _resolveProviders([ngModuleProvider], ProviderAstType.PublicService, true, sourceSpan, _this._errors, _this._allProviders);\n        });\n        _resolveProviders(ngModule.transitiveModule.providers.map(function (entry) { return entry.provider; }).concat(extraProviders), ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders);\n    }\n    /**\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype.parse = function () {\n        var _this = this;\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.token, provider.eager);\n        });\n        if (this._errors.length > 0) {\n            var /** @type {?} */ errorString = this._errors.join('\\n');\n            throw new Error(\"Provider parse errors:\\n\" + errorString);\n        }\n        return Array.from(this._transformedProviders.values());\n    };\n    /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider = function (token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this._errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), resolvedProvider.sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = _this._getDependency({ token: provider.useExisting }, eager, resolvedProvider.sourceSpan);\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getDependency = function (dep, eager, requestorSourceSpan) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ foundLocal = false;\n        if (!dep.isSkipSelf && dep.token != null) {\n            // access the injector\n            if (tokenReference(dep.token) === resolveIdentifier(Identifiers.Injector) ||\n                tokenReference(dep.token) === resolveIdentifier(Identifiers.ComponentFactoryResolver)) {\n                foundLocal = true;\n            }\n            else if (this._getOrCreateLocalProvider(dep.token, eager) != null) {\n                foundLocal = true;\n            }\n        }\n        var /** @type {?} */ result = dep;\n        if (dep.isSelf && !foundLocal) {\n            if (dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n            else {\n                this._errors.push(new ProviderError(\"No provider for \" + tokenName(/** @type {?} */ ((dep.token))), requestorSourceSpan));\n            }\n        }\n        return result;\n    };\n    return NgModuleProviderAnalyzer;\n}());\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProvider(provider, _a) {\n    var useExisting = _a.useExisting, useValue = _a.useValue, deps = _a.deps;\n    return {\n        token: provider.token,\n        useClass: provider.useClass,\n        useExisting: useExisting,\n        useFactory: provider.useFactory,\n        useValue: useValue,\n        deps: deps,\n        multi: provider.multi\n    };\n}\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProviderAst(provider, _a) {\n    var eager = _a.eager, providers = _a.providers;\n    return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan);\n}\n/**\n * @param {?} directives\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @return {?}\n */\nfunction _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n    var /** @type {?} */ providersByToken = new Map();\n    directives.forEach(function (directive) {\n        var /** @type {?} */ dirProvider = { token: { identifier: directive.type }, useClass: directive.type };\n        _resolveProviders([dirProvider], directive.isComponent ? ProviderAstType.Component : ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken);\n    });\n    // Note: directives need to be able to overwrite providers of a component!\n    var /** @type {?} */ directivesWithComponentFirst = directives.filter(function (dir) { return dir.isComponent; }).concat(directives.filter(function (dir) { return !dir.isComponent; }));\n    directivesWithComponentFirst.forEach(function (directive) {\n        _resolveProviders(directive.providers, ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken);\n        _resolveProviders(directive.viewProviders, ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken);\n    });\n    return providersByToken;\n}\n/**\n * @param {?} providers\n * @param {?} providerType\n * @param {?} eager\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @param {?} targetProvidersByToken\n * @return {?}\n */\nfunction _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken) {\n    providers.forEach(function (provider) {\n        var /** @type {?} */ resolvedProvider = targetProvidersByToken.get(tokenReference(provider.token));\n        if (resolvedProvider != null && !!resolvedProvider.multiProvider !== !!provider.multi) {\n            targetErrors.push(new ProviderError(\"Mixing multi and non multi provider is not possible for token \" + tokenName(resolvedProvider.token), sourceSpan));\n        }\n        if (!resolvedProvider) {\n            var /** @type {?} */ lifecycleHooks = provider.token.identifier &&\n                ((provider.token.identifier)).lifecycleHooks ?\n                ((provider.token.identifier)).lifecycleHooks :\n                [];\n            var /** @type {?} */ isUseValue = !(provider.useClass || provider.useExisting || provider.useFactory);\n            resolvedProvider = new ProviderAst(provider.token, !!provider.multi, eager || isUseValue, [provider], providerType, lifecycleHooks, sourceSpan);\n            targetProvidersByToken.set(tokenReference(provider.token), resolvedProvider);\n        }\n        else {\n            if (!provider.multi) {\n                resolvedProvider.providers.length = 0;\n            }\n            resolvedProvider.providers.push(provider);\n        }\n    });\n}\n/**\n * @param {?} component\n * @return {?}\n */\nfunction _getViewQueries(component) {\n    // Note: queries start with id 1 so we can use the number in a Bloom filter!\n    var /** @type {?} */ viewQueryId = 1;\n    var /** @type {?} */ viewQueries = new Map();\n    if (component.viewQueries) {\n        component.viewQueries.forEach(function (query) { return _addQueryToTokenMap(viewQueries, { meta: query, queryId: viewQueryId++ }); });\n    }\n    return viewQueries;\n}\n/**\n * @param {?} contentQueryStartId\n * @param {?} directives\n * @return {?}\n */\nfunction _getContentQueries(contentQueryStartId, directives) {\n    var /** @type {?} */ contentQueryId = contentQueryStartId;\n    var /** @type {?} */ contentQueries = new Map();\n    directives.forEach(function (directive, directiveIndex) {\n        if (directive.queries) {\n            directive.queries.forEach(function (query) { return _addQueryToTokenMap(contentQueries, { meta: query, queryId: contentQueryId++ }); });\n        }\n    });\n    return contentQueries;\n}\n/**\n * @param {?} map\n * @param {?} query\n * @return {?}\n */\nfunction _addQueryToTokenMap(map, query) {\n    query.meta.selectors.forEach(function (token) {\n        var /** @type {?} */ entry = map.get(tokenReference(token));\n        if (!entry) {\n            entry = [];\n            map.set(tokenReference(token), entry);\n        }\n        entry.push(query);\n    });\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar ElementSchemaRegistry = (function () {\n    function ElementSchemaRegistry() {\n    }\n    /**\n     * @abstract\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.hasProperty = function (tagName, propName, schemaMetas) { };\n    /**\n     * @abstract\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.hasElement = function (tagName, schemaMetas) { };\n    /**\n     * @abstract\n     * @param {?} elementName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.securityContext = function (elementName, propName, isAttribute) { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.allKnownElementNames = function () { };\n    /**\n     * @abstract\n     * @param {?} propName\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.getMappedPropName = function (propName) { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.getDefaultComponentElementName = function () { };\n    /**\n     * @abstract\n     * @param {?} name\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.validateProperty = function (name) { };\n    /**\n     * @abstract\n     * @param {?} name\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.validateAttribute = function (name) { };\n    /**\n     * @abstract\n     * @param {?} propName\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = function (propName) { };\n    /**\n     * @abstract\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.normalizeAnimationStyleValue = function (camelCaseProp, userProvidedProp, val) { };\n    return ElementSchemaRegistry;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar StyleWithImports = (function () {\n    /**\n     * @param {?} style\n     * @param {?} styleUrls\n     */\n    function StyleWithImports(style$$1, styleUrls) {\n        this.style = style$$1;\n        this.styleUrls = styleUrls;\n    }\n    return StyleWithImports;\n}());\n/**\n * @param {?} url\n * @return {?}\n */\nfunction isStyleUrlResolvable(url) {\n    if (url == null || url.length === 0 || url[0] == '/')\n        return false;\n    var /** @type {?} */ schemeMatch = url.match(URL_WITH_SCHEMA_REGEXP);\n    return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n}\n/**\n * Rewrites stylesheets by resolving and removing the \\@import urls that\n * are either relative or don't have a `package:` scheme\n * @param {?} resolver\n * @param {?} baseUrl\n * @param {?} cssText\n * @return {?}\n */\nfunction extractStyleUrls(resolver, baseUrl, cssText) {\n    var /** @type {?} */ foundUrls = [];\n    var /** @type {?} */ modifiedCssText = cssText.replace(CSS_COMMENT_REGEXP, '').replace(CSS_IMPORT_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ url = m[1] || m[2];\n        if (!isStyleUrlResolvable(url)) {\n            // Do not attempt to resolve non-package absolute URLs with URI scheme\n            return m[0];\n        }\n        foundUrls.push(resolver.resolve(baseUrl, url));\n        return '';\n    });\n    return new StyleWithImports(modifiedCssText, foundUrls);\n}\nvar CSS_IMPORT_REGEXP = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\nvar CSS_COMMENT_REGEXP = /\\/\\*.+?\\*\\//g;\nvar URL_WITH_SCHEMA_REGEXP = /^([^:/?#]+):/;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PROPERTY_PARTS_SEPARATOR = '.';\nvar ATTRIBUTE_PREFIX = 'attr';\nvar CLASS_PREFIX = 'class';\nvar STYLE_PREFIX = 'style';\nvar ANIMATE_PROP_PREFIX = 'animate-';\nvar BoundPropertyType = {};\nBoundPropertyType.DEFAULT = 0;\nBoundPropertyType.LITERAL_ATTR = 1;\nBoundPropertyType.ANIMATION = 2;\nBoundPropertyType[BoundPropertyType.DEFAULT] = \"DEFAULT\";\nBoundPropertyType[BoundPropertyType.LITERAL_ATTR] = \"LITERAL_ATTR\";\nBoundPropertyType[BoundPropertyType.ANIMATION] = \"ANIMATION\";\n/**\n * Represents a parsed property.\n */\nvar BoundProperty = (function () {\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} type\n     * @param {?} sourceSpan\n     */\n    function BoundProperty(name, expression, type, sourceSpan) {\n        this.name = name;\n        this.expression = expression;\n        this.type = type;\n        this.sourceSpan = sourceSpan;\n    }\n    Object.defineProperty(BoundProperty.prototype, \"isLiteral\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.type === BoundPropertyType.LITERAL_ATTR; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BoundProperty.prototype, \"isAnimation\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.type === BoundPropertyType.ANIMATION; },\n        enumerable: true,\n        configurable: true\n    });\n    return BoundProperty;\n}());\n/**\n * Parses bindings in templates and in the directive host area.\n */\nvar BindingParser = (function () {\n    /**\n     * @param {?} _exprParser\n     * @param {?} _interpolationConfig\n     * @param {?} _schemaRegistry\n     * @param {?} pipes\n     * @param {?} _targetErrors\n     */\n    function BindingParser(_exprParser, _interpolationConfig, _schemaRegistry, pipes, _targetErrors) {\n        var _this = this;\n        this._exprParser = _exprParser;\n        this._interpolationConfig = _interpolationConfig;\n        this._schemaRegistry = _schemaRegistry;\n        this._targetErrors = _targetErrors;\n        this.pipesByName = new Map();\n        this._usedPipes = new Map();\n        pipes.forEach(function (pipe) { return _this.pipesByName.set(pipe.name, pipe); });\n    }\n    /**\n     * @return {?}\n     */\n    BindingParser.prototype.getUsedPipes = function () { return Array.from(this._usedPipes.values()); };\n    /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostPropertyAsts = function (dirMeta, elementSelector, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostProperties) {\n            var /** @type {?} */ boundProps_1 = [];\n            Object.keys(dirMeta.hostProperties).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostProperties[propName];\n                if (typeof expression === 'string') {\n                    _this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host property binding \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return boundProps_1.map(function (prop) { return _this.createElementPropertyAst(elementSelector, prop); });\n        }\n        return null;\n    };\n    /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostEventAsts = function (dirMeta, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostListeners) {\n            var /** @type {?} */ targetEventAsts_1 = [];\n            Object.keys(dirMeta.hostListeners).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostListeners[propName];\n                if (typeof expression === 'string') {\n                    _this.parseEvent(propName, expression, sourceSpan, [], targetEventAsts_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host listener \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return targetEventAsts_1;\n        }\n        return null;\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.parseInterpolation = function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = ((this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig)));\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    BindingParser.prototype.parseInlineTemplateBinding = function (prefixToken, value, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n        var /** @type {?} */ bindings = this._parseTemplateBindings(prefixToken, value, sourceSpan);\n        for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n            var /** @type {?} */ binding = bindings[i];\n            if (binding.keyIsVar) {\n                targetVars.push(new VariableAst(binding.key, binding.name, sourceSpan));\n            }\n            else if (binding.expression) {\n                this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n            else {\n                targetMatchableAttrs.push([binding.key, '']);\n                this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseTemplateBindings = function (prefixToken, value, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ bindingsResult = this._exprParser.parseTemplateBindings(prefixToken, value, sourceInfo);\n            this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n            bindingsResult.templateBindings.forEach(function (binding) {\n                if (binding.expression) {\n                    _this._checkPipes(binding.expression, sourceSpan);\n                }\n            });\n            bindingsResult.warnings.forEach(function (warning) { _this._reportError(warning, sourceSpan, ParseErrorLevel.WARNING); });\n            return bindingsResult.templateBindings;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return [];\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parseLiteralAttr = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        if (_isAnimationLabel(name)) {\n            name = name.substring(1);\n            if (value) {\n                this._reportError(\"Assigning animation triggers via @prop=\\\"exp\\\" attributes with an expression is invalid.\" +\n                    \" Use property bindings (e.g. [@prop]=\\\"exp\\\") or use an attribute without a value (e.g. @prop) instead.\", sourceSpan, ParseErrorLevel.ERROR);\n            }\n            this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            targetProps.push(new BoundProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), BoundPropertyType.LITERAL_ATTR, sourceSpan));\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyBinding = function (name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ isAnimationProp = false;\n        if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n            isAnimationProp = true;\n            name = name.substring(ANIMATE_PROP_PREFIX.length);\n        }\n        else if (_isAnimationLabel(name)) {\n            isAnimationProp = true;\n            name = name.substring(1);\n        }\n        if (isAnimationProp) {\n            this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyInterpolation = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ expr = this.parseInterpolation(value, sourceSpan);\n        if (expr) {\n            this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parsePropertyAst = function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.DEFAULT, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimation = function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n        // This will occur when a @trigger is not paired with an expression.\n        // For animations it is valid to not have an expression since */void\n        // states will be applied by angular when the element is attached/detached\n        var /** @type {?} */ ast = this._parseBinding(expression || 'null', false, sourceSpan);\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.ANIMATION, sourceSpan));\n    };\n    /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseBinding = function (value, isHostBinding, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = isHostBinding ?\n                this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n                this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    BindingParser.prototype.createElementPropertyAst = function (elementSelector, boundProp) {\n        if (boundProp.isAnimation) {\n            return new BoundElementPropertyAst(boundProp.name, PropertyBindingType.Animation, _angular_core.SecurityContext.NONE, boundProp.expression, null, boundProp.sourceSpan);\n        }\n        var /** @type {?} */ unit = null;\n        var /** @type {?} */ bindingType = ((undefined));\n        var /** @type {?} */ boundPropertyName = null;\n        var /** @type {?} */ parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n        var /** @type {?} */ securityContexts = ((undefined));\n        // Check check for special cases (prefix style, attr, class)\n        if (parts.length > 1) {\n            if (parts[0] == ATTRIBUTE_PREFIX) {\n                boundPropertyName = parts[1];\n                this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n                securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n                var /** @type {?} */ nsSeparatorIdx = boundPropertyName.indexOf(':');\n                if (nsSeparatorIdx > -1) {\n                    var /** @type {?} */ ns = boundPropertyName.substring(0, nsSeparatorIdx);\n                    var /** @type {?} */ name = boundPropertyName.substring(nsSeparatorIdx + 1);\n                    boundPropertyName = mergeNsAndName(ns, name);\n                }\n                bindingType = PropertyBindingType.Attribute;\n            }\n            else if (parts[0] == CLASS_PREFIX) {\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Class;\n                securityContexts = [_angular_core.SecurityContext.NONE];\n            }\n            else if (parts[0] == STYLE_PREFIX) {\n                unit = parts.length > 2 ? parts[2] : null;\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Style;\n                securityContexts = [_angular_core.SecurityContext.STYLE];\n            }\n        }\n        // If not a special case, use the full property name\n        if (boundPropertyName === null) {\n            boundPropertyName = this._schemaRegistry.getMappedPropName(boundProp.name);\n            securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n            bindingType = PropertyBindingType.Property;\n            this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n        }\n        return new BoundElementPropertyAst(boundPropertyName, bindingType, securityContexts[0], boundProp.expression, unit, boundProp.sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype.parseEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        if (_isAnimationLabel(name)) {\n            name = name.substr(1);\n            this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n        }\n        else {\n            this._parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimationEvent = function (name, expression, sourceSpan, targetEvents) {\n        var /** @type {?} */ matches = splitAtPeriod(name, [name, '']);\n        var /** @type {?} */ eventName = matches[0];\n        var /** @type {?} */ phase = matches[1].toLowerCase();\n        if (phase) {\n            switch (phase) {\n                case 'start':\n                case 'done':\n                    var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n                    targetEvents.push(new BoundEventAst(eventName, null, phase, ast, sourceSpan));\n                    break;\n                default:\n                    this._reportError(\"The provided animation output phase value \\\"\" + phase + \"\\\" for \\\"@\" + eventName + \"\\\" is not supported (use start or done)\", sourceSpan);\n                    break;\n            }\n        }\n        else {\n            this._reportError(\"The animation trigger output event (@\" + eventName + \") is missing its phase value name (start or done are currently supported)\", sourceSpan);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        // long format: 'target: eventName'\n        var _a = splitAtColon(name, [/** @type {?} */ ((null)), name]), target = _a[0], eventName = _a[1];\n        var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n        targetMatchableAttrs.push([/** @type {?} */ ((name)), /** @type {?} */ ((ast.source))]);\n        targetEvents.push(new BoundEventAst(eventName, target, null, ast, sourceSpan));\n        // Don't detect directives for event names for now,\n        // so don't add the event name to the matchableAttrs\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseAction = function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n            if (ast) {\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            }\n            if (!ast || ast.ast instanceof EmptyExpr) {\n                this._reportError(\"Empty expressions are not allowed\", sourceSpan);\n                return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n            }\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    BindingParser.prototype._reportError = function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._reportExpressionParserErrors = function (errors, sourceSpan) {\n        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n            var error = errors_1[_i];\n            this._reportError(error.message, sourceSpan);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._checkPipes = function (ast, sourceSpan) {\n        var _this = this;\n        if (ast) {\n            var /** @type {?} */ collector = new PipeCollector();\n            ast.visit(collector);\n            collector.pipes.forEach(function (ast, pipeName) {\n                var /** @type {?} */ pipeMeta = _this.pipesByName.get(pipeName);\n                if (!pipeMeta) {\n                    _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", new ParseSourceSpan(sourceSpan.start.moveBy(ast.span.start), sourceSpan.start.moveBy(ast.span.end)));\n                }\n                else {\n                    _this._usedPipes.set(pipeName, pipeMeta);\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    BindingParser.prototype._validatePropertyOrAttributeName = function (propName, sourceSpan, isAttr) {\n        var /** @type {?} */ report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n            this._schemaRegistry.validateProperty(propName);\n        if (report.error) {\n            this._reportError(/** @type {?} */ ((report.msg)), sourceSpan, ParseErrorLevel.ERROR);\n        }\n    };\n    return BindingParser;\n}());\nvar PipeCollector = (function (_super) {\n    __extends(PipeCollector, _super);\n    function PipeCollector() {\n        var _this = _super.apply(this, arguments) || this;\n        _this.pipes = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    PipeCollector.prototype.visitPipe = function (ast, context) {\n        this.pipes.set(ast.name, ast);\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    return PipeCollector;\n}(RecursiveAstVisitor));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _isAnimationLabel(name) {\n    return name[0] == '@';\n}\n/**\n * @param {?} registry\n * @param {?} selector\n * @param {?} propName\n * @param {?} isAttribute\n * @return {?}\n */\nfunction calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n    var /** @type {?} */ ctxs = [];\n    CssSelector.parse(selector).forEach(function (selector) {\n        var /** @type {?} */ elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n        var /** @type {?} */ notElementNames = new Set(selector.notSelectors.filter(function (selector) { return selector.isElementSelector(); })\n            .map(function (selector) { return selector.element; }));\n        var /** @type {?} */ possibleElementNames = elementNames.filter(function (elementName) { return !notElementNames.has(elementName); });\n        ctxs.push.apply(ctxs, possibleElementNames.map(function (elementName) { return registry.securityContext(elementName, propName, isAttribute); }));\n    });\n    return ctxs.length === 0 ? [_angular_core.SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NG_CONTENT_SELECT_ATTR = 'select';\nvar LINK_ELEMENT = 'link';\nvar LINK_STYLE_REL_ATTR = 'rel';\nvar LINK_STYLE_HREF_ATTR = 'href';\nvar LINK_STYLE_REL_VALUE = 'stylesheet';\nvar STYLE_ELEMENT = 'style';\nvar SCRIPT_ELEMENT = 'script';\nvar NG_NON_BINDABLE_ATTR = 'ngNonBindable';\nvar NG_PROJECT_AS = 'ngProjectAs';\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction preparseElement(ast) {\n    var /** @type {?} */ selectAttr = ((null));\n    var /** @type {?} */ hrefAttr = ((null));\n    var /** @type {?} */ relAttr = ((null));\n    var /** @type {?} */ nonBindable = false;\n    var /** @type {?} */ projectAs = ((null));\n    ast.attrs.forEach(function (attr) {\n        var /** @type {?} */ lcAttrName = attr.name.toLowerCase();\n        if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n            selectAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n            hrefAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n            relAttr = attr.value;\n        }\n        else if (attr.name == NG_NON_BINDABLE_ATTR) {\n            nonBindable = true;\n        }\n        else if (attr.name == NG_PROJECT_AS) {\n            if (attr.value.length > 0) {\n                projectAs = attr.value;\n            }\n        }\n    });\n    selectAttr = normalizeNgContentSelect(selectAttr);\n    var /** @type {?} */ nodeName = ast.name.toLowerCase();\n    var /** @type {?} */ type = PreparsedElementType.OTHER;\n    if (isNgContent(nodeName)) {\n        type = PreparsedElementType.NG_CONTENT;\n    }\n    else if (nodeName == STYLE_ELEMENT) {\n        type = PreparsedElementType.STYLE;\n    }\n    else if (nodeName == SCRIPT_ELEMENT) {\n        type = PreparsedElementType.SCRIPT;\n    }\n    else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n        type = PreparsedElementType.STYLESHEET;\n    }\n    return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n}\nvar PreparsedElementType = {};\nPreparsedElementType.NG_CONTENT = 0;\nPreparsedElementType.STYLE = 1;\nPreparsedElementType.STYLESHEET = 2;\nPreparsedElementType.SCRIPT = 3;\nPreparsedElementType.OTHER = 4;\nPreparsedElementType[PreparsedElementType.NG_CONTENT] = \"NG_CONTENT\";\nPreparsedElementType[PreparsedElementType.STYLE] = \"STYLE\";\nPreparsedElementType[PreparsedElementType.STYLESHEET] = \"STYLESHEET\";\nPreparsedElementType[PreparsedElementType.SCRIPT] = \"SCRIPT\";\nPreparsedElementType[PreparsedElementType.OTHER] = \"OTHER\";\nvar PreparsedElement = (function () {\n    /**\n     * @param {?} type\n     * @param {?} selectAttr\n     * @param {?} hrefAttr\n     * @param {?} nonBindable\n     * @param {?} projectAs\n     */\n    function PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n        this.type = type;\n        this.selectAttr = selectAttr;\n        this.hrefAttr = hrefAttr;\n        this.nonBindable = nonBindable;\n        this.projectAs = projectAs;\n    }\n    return PreparsedElement;\n}());\n/**\n * @param {?} selectAttr\n * @return {?}\n */\nfunction normalizeNgContentSelect(selectAttr) {\n    if (selectAttr === null || selectAttr.length === 0) {\n        return '*';\n    }\n    return selectAttr;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n// Group 1 = \"bind-\"\nvar KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nvar KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nvar KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nvar KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nvar KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nvar KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nvar IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nvar IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nvar IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nvar IDENT_EVENT_IDX = 10;\n// deprecated in 4.x\nvar TEMPLATE_ELEMENT = 'template';\n// deprecated in 4.x\nvar TEMPLATE_ATTR = 'template';\nvar TEMPLATE_ATTR_PREFIX = '*';\nvar CLASS_ATTR = 'class';\nvar TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\nvar TEMPLATE_ELEMENT_DEPRECATION_WARNING = 'The <template> element is deprecated. Use <ng-template> instead';\nvar TEMPLATE_ATTR_DEPRECATION_WARNING = 'The template attribute is deprecated. Use an ng-template element instead.';\nvar warningCounts = {};\n/**\n * @param {?} warnings\n * @return {?}\n */\nfunction warnOnlyOnce(warnings) {\n    return function (error) {\n        if (warnings.indexOf(error.msg) !== -1) {\n            warningCounts[error.msg] = (warningCounts[error.msg] || 0) + 1;\n            return warningCounts[error.msg] <= 1;\n        }\n        return true;\n    };\n}\n/**\n * Provides an array of {@link TemplateAstVisitor}s which will be used to transform\n * parsed templates before compilation is invoked, allowing custom expression syntax\n * and other advanced transformations.\n *\n * This is currently an internal-only feature and not meant for general use.\n */\nvar TEMPLATE_TRANSFORMS = new _angular_core.InjectionToken('TemplateTransforms');\nvar TemplateParseError = (function (_super) {\n    __extends(TemplateParseError, _super);\n    /**\n     * @param {?} message\n     * @param {?} span\n     * @param {?} level\n     */\n    function TemplateParseError(message, span, level) {\n        return _super.call(this, span, message, level) || this;\n    }\n    return TemplateParseError;\n}(ParseError));\nvar TemplateParseResult = (function () {\n    /**\n     * @param {?=} templateAst\n     * @param {?=} usedPipes\n     * @param {?=} errors\n     */\n    function TemplateParseResult(templateAst, usedPipes, errors) {\n        this.templateAst = templateAst;\n        this.usedPipes = usedPipes;\n        this.errors = errors;\n    }\n    return TemplateParseResult;\n}());\nvar TemplateParser = (function () {\n    /**\n     * @param {?} _config\n     * @param {?} _exprParser\n     * @param {?} _schemaRegistry\n     * @param {?} _htmlParser\n     * @param {?} _console\n     * @param {?} transforms\n     */\n    function TemplateParser(_config, _exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n        this._config = _config;\n        this._exprParser = _exprParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._htmlParser = _htmlParser;\n        this._console = _console;\n        this.transforms = transforms;\n    }\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @return {?}\n     */\n    TemplateParser.prototype.parse = function (component, template, directives, pipes, schemas, templateUrl) {\n        var /** @type {?} */ result = this.tryParse(component, template, directives, pipes, schemas, templateUrl);\n        var /** @type {?} */ warnings = ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.WARNING; })\n            .filter(warnOnlyOnce([TEMPLATE_ATTR_DEPRECATION_WARNING, TEMPLATE_ELEMENT_DEPRECATION_WARNING]));\n        var /** @type {?} */ errors = ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.ERROR; });\n        if (warnings.length > 0) {\n            this._console.warn(\"Template parse warnings:\\n\" + warnings.join('\\n'));\n        }\n        if (errors.length > 0) {\n            var /** @type {?} */ errorString = errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString);\n        }\n        return { template: /** @type {?} */ ((result.templateAst)), pipes: /** @type {?} */ ((result.usedPipes)) };\n    };\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParse = function (component, template, directives, pipes, schemas, templateUrl) {\n        return this.tryParseHtml(this.expandHtml(/** @type {?} */ ((this._htmlParser)).parse(template, templateUrl, true, this.getInterpolationConfig(component))), component, directives, pipes, schemas);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParseHtml = function (htmlAstWithErrors, component, directives, pipes, schemas) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        var /** @type {?} */ usedPipes = [];\n        if (htmlAstWithErrors.rootNodes.length > 0) {\n            var /** @type {?} */ uniqDirectives = removeSummaryDuplicates(directives);\n            var /** @type {?} */ uniqPipes = removeSummaryDuplicates(pipes);\n            var /** @type {?} */ providerViewContext = new ProviderViewContext(component);\n            var /** @type {?} */ interpolationConfig = ((undefined));\n            if (component.template && component.template.interpolation) {\n                interpolationConfig = {\n                    start: component.template.interpolation[0],\n                    end: component.template.interpolation[1]\n                };\n            }\n            var /** @type {?} */ bindingParser = new BindingParser(this._exprParser, /** @type {?} */ ((interpolationConfig)), this._schemaRegistry, uniqPipes, errors);\n            var /** @type {?} */ parseVisitor = new TemplateParseVisitor(this._config, providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n            result = visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n            errors.push.apply(errors, providerViewContext.errors);\n            usedPipes.push.apply(usedPipes, bindingParser.getUsedPipes());\n        }\n        else {\n            result = [];\n        }\n        this._assertNoReferenceDuplicationOnTemplate(result, errors);\n        if (errors.length > 0) {\n            return new TemplateParseResult(result, usedPipes, errors);\n        }\n        if (this.transforms) {\n            this.transforms.forEach(function (transform) { result = templateVisitAll(transform, result); });\n        }\n        return new TemplateParseResult(result, usedPipes, errors);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    TemplateParser.prototype.expandHtml = function (htmlAstWithErrors, forced) {\n        if (forced === void 0) { forced = false; }\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        if (errors.length == 0 || forced) {\n            // Transform ICU messages to angular directives\n            var /** @type {?} */ expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n            errors.push.apply(errors, expandedHtmlAst.errors);\n            htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n        }\n        return htmlAstWithErrors;\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    TemplateParser.prototype.getInterpolationConfig = function (component) {\n        if (component.template) {\n            return InterpolationConfig.fromArray(component.template.interpolation);\n        }\n        return undefined;\n    };\n    /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate = function (result, errors) {\n        var /** @type {?} */ existingReferences = [];\n        result.filter(function (element) { return !!((element)).references; })\n            .forEach(function (element) { return ((element)).references.forEach(function (reference) {\n            var /** @type {?} */ name = reference.name;\n            if (existingReferences.indexOf(name) < 0) {\n                existingReferences.push(name);\n            }\n            else {\n                var /** @type {?} */ error = new TemplateParseError(\"Reference \\\"#\" + name + \"\\\" is defined several times\", reference.sourceSpan, ParseErrorLevel.ERROR);\n                errors.push(error);\n            }\n        }); });\n    };\n    return TemplateParser;\n}());\nTemplateParser.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nTemplateParser.ctorParameters = function () { return [\n    { type: CompilerConfig, },\n    { type: Parser, },\n    { type: ElementSchemaRegistry, },\n    { type: I18NHtmlParser, },\n    { type: _angular_core.ɵConsole, },\n    { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [TEMPLATE_TRANSFORMS,] },] },\n]; };\nvar TemplateParseVisitor = (function () {\n    /**\n     * @param {?} config\n     * @param {?} providerViewContext\n     * @param {?} directives\n     * @param {?} _bindingParser\n     * @param {?} _schemaRegistry\n     * @param {?} _schemas\n     * @param {?} _targetErrors\n     */\n    function TemplateParseVisitor(config, providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n        var _this = this;\n        this.config = config;\n        this.providerViewContext = providerViewContext;\n        this._bindingParser = _bindingParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._schemas = _schemas;\n        this._targetErrors = _targetErrors;\n        this.selectorMatcher = new SelectorMatcher();\n        this.directivesIndex = new Map();\n        this.ngContentCount = 0;\n        // Note: queries start with id 1 so we can use the number in a Bloom filter!\n        this.contentQueryStartId = providerViewContext.component.viewQueries.length + 1;\n        directives.forEach(function (directive, index) {\n            var selector = CssSelector.parse(directive.selector);\n            _this.selectorMatcher.addSelectables(selector, directive);\n            _this.directivesIndex.set(directive, index);\n        });\n    }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansion = function (expansion, context) { return null; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return null; };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitText = function (text, parent) {\n        var /** @type {?} */ ngContentIndex = ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        var /** @type {?} */ expr = this._bindingParser.parseInterpolation(text.value, /** @type {?} */ ((text.sourceSpan)));\n        return expr ? new BoundTextAst(expr, ngContentIndex, /** @type {?} */ ((text.sourceSpan))) :\n            new TextAst(text.value, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitAttribute = function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitComment = function (comment, context) { return null; };\n    /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitElement = function (element, parent) {\n        var _this = this;\n        var /** @type {?} */ queryStartIndex = this.contentQueryStartId;\n        var /** @type {?} */ nodeName = element.name;\n        var /** @type {?} */ preparsedElement = preparseElement(element);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE) {\n            // Skipping <script> for security reasons\n            // Skipping <style> as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n            isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n            // Skipping stylesheets with either relative urls or package scheme as we already processed\n            // them in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ matchableAttrs = [];\n        var /** @type {?} */ elementOrDirectiveProps = [];\n        var /** @type {?} */ elementOrDirectiveRefs = [];\n        var /** @type {?} */ elementVars = [];\n        var /** @type {?} */ events = [];\n        var /** @type {?} */ templateElementOrDirectiveProps = [];\n        var /** @type {?} */ templateMatchableAttrs = [];\n        var /** @type {?} */ templateElementVars = [];\n        var /** @type {?} */ hasInlineTemplates = false;\n        var /** @type {?} */ attrs = [];\n        var /** @type {?} */ isTemplateElement = isTemplate(element, this.config.enableLegacyTemplate, function (m, span) { return _this._reportError(m, span, ParseErrorLevel.WARNING); });\n        element.attrs.forEach(function (attr) {\n            var /** @type {?} */ hasBinding = _this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n            var /** @type {?} */ templateBindingsSource;\n            var /** @type {?} */ prefixToken;\n            var /** @type {?} */ normalizedName = _this._normalizeAttributeName(attr.name);\n            if (_this.config.enableLegacyTemplate && normalizedName == TEMPLATE_ATTR) {\n                _this._reportError(TEMPLATE_ATTR_DEPRECATION_WARNING, attr.sourceSpan, ParseErrorLevel.WARNING);\n                templateBindingsSource = attr.value;\n            }\n            else if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n                templateBindingsSource = attr.value;\n                prefixToken = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length) + ':';\n            }\n            var /** @type {?} */ hasTemplateBinding = templateBindingsSource != null;\n            if (hasTemplateBinding) {\n                if (hasInlineTemplates) {\n                    _this._reportError(\"Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *\", attr.sourceSpan);\n                }\n                hasInlineTemplates = true;\n                _this._bindingParser.parseInlineTemplateBinding(/** @type {?} */ ((prefixToken)), /** @type {?} */ ((templateBindingsSource)), attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, templateElementVars);\n            }\n            if (!hasBinding && !hasTemplateBinding) {\n                // don't include the bindings as attributes as well in the AST\n                attrs.push(_this.visitAttribute(attr, null));\n                matchableAttrs.push([attr.name, attr.value]);\n            }\n        });\n        var /** @type {?} */ elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);\n        var _a = this._parseDirectives(this.selectorMatcher, elementCssSelector), directiveMetas = _a.directives, matchElement = _a.matchElement;\n        var /** @type {?} */ references = [];\n        var /** @type {?} */ boundDirectivePropNames = new Set();\n        var /** @type {?} */ directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, /** @type {?} */ ((element.sourceSpan)), references, boundDirectivePropNames);\n        var /** @type {?} */ elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, boundDirectivePropNames);\n        var /** @type {?} */ isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n        var /** @type {?} */ providerContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), isViewRoot, directiveAsts, attrs, references, isTemplateElement, queryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n        var /** @type {?} */ children = visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? ((parent.providerContext)) : providerContext));\n        providerContext.afterElement();\n        // Override the actual selector when the `ngProjectAs` attribute is provided\n        var /** @type {?} */ projectionSelector = preparsedElement.projectAs != null ?\n            CssSelector.parse(preparsedElement.projectAs)[0] :\n            elementCssSelector;\n        var /** @type {?} */ ngContentIndex = ((parent.findNgContentIndex(projectionSelector)));\n        var /** @type {?} */ parsedElement;\n        if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n            if (element.children && !element.children.every(_isEmptyTextNode)) {\n                this._reportError(\"<ng-content> element cannot have content.\", /** @type {?} */ ((element.sourceSpan)));\n            }\n            parsedElement = new NgContentAst(this.ngContentCount++, hasInlineTemplates ? ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else if (isTemplateElement) {\n            this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n            this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, /** @type {?} */ ((element.sourceSpan)));\n            parsedElement = new EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else {\n            this._assertElementExists(matchElement, element);\n            this._assertOnlyOneComponent(directiveAsts, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ ngContentIndex_1 = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n            parsedElement = new ElementAst(nodeName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex_1, element.sourceSpan, element.endSourceSpan || null);\n        }\n        if (hasInlineTemplates) {\n            var /** @type {?} */ templateQueryStartIndex = this.contentQueryStartId;\n            var /** @type {?} */ templateSelector = createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);\n            var templateDirectiveMetas = this._parseDirectives(this.selectorMatcher, templateSelector).directives;\n            var /** @type {?} */ templateBoundDirectivePropNames = new Set();\n            var /** @type {?} */ templateDirectiveAsts = this._createDirectiveAsts(true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [], /** @type {?} */ ((element.sourceSpan)), [], templateBoundDirectivePropNames);\n            var /** @type {?} */ templateElementProps = this._createElementPropertyAsts(element.name, templateElementOrDirectiveProps, templateBoundDirectivePropNames);\n            this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ templateProviderContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), parent.isTemplateElement, templateDirectiveAsts, [], [], true, templateQueryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n            templateProviderContext.afterElement();\n            parsedElement = new EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches, [parsedElement], ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        return parsedElement;\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAttr = function (isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n        var /** @type {?} */ name = this._normalizeAttributeName(attr.name);\n        var /** @type {?} */ value = attr.value;\n        var /** @type {?} */ srcSpan = attr.sourceSpan;\n        var /** @type {?} */ bindParts = name.match(BIND_NAME_REGEXP);\n        var /** @type {?} */ hasBinding = false;\n        if (bindParts !== null) {\n            hasBinding = true;\n            if (bindParts[KW_BIND_IDX] != null) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[KW_LET_IDX]) {\n                if (isTemplateElement) {\n                    var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                    this._parseVariable(identifier, value, srcSpan, targetVars);\n                }\n                else {\n                    this._reportError(\"\\\"let-\\\" is only supported on template elements.\", srcSpan);\n                }\n            }\n            else if (bindParts[KW_REF_IDX]) {\n                var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                this._parseReference(identifier, value, srcSpan, targetRefs);\n            }\n            else if (bindParts[KW_ON_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_BINDON_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_AT_IDX]) {\n                this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[IDENT_PROPERTY_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_EVENT_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n        }\n        else {\n            hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        if (!hasBinding) {\n            this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        return hasBinding;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._normalizeAttributeName = function (attrName) {\n        return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseVariable = function (identifier, value, sourceSpan, targetVars) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n        }\n        targetVars.push(new VariableAst(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseReference = function (identifier, value, sourceSpan, targetRefs) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n        }\n        targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAssignmentEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        this._bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\n    };\n    /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseDirectives = function (selectorMatcher, elementCssSelector) {\n        var _this = this;\n        // Need to sort the directives so that we get consistent results throughout,\n        // as selectorMatcher uses Maps inside.\n        // Also deduplicate directives as they might match more than one time!\n        var /** @type {?} */ directives = new Array(this.directivesIndex.size);\n        // Whether any directive selector matches on the element name\n        var /** @type {?} */ matchElement = false;\n        selectorMatcher.match(elementCssSelector, function (selector, directive) {\n            directives[((_this.directivesIndex.get(directive)))] = directive;\n            matchElement = matchElement || selector.hasElementSelector();\n        });\n        return {\n            directives: directives.filter(function (dir) { return !!dir; }),\n            matchElement: matchElement,\n        };\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectiveAsts = function (isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences, targetBoundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ matchedReferences = new Set();\n        var /** @type {?} */ component = ((null));\n        var /** @type {?} */ directiveAsts = directives.map(function (directive) {\n            var /** @type {?} */ sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, \"Directive \" + identifierName(directive.type));\n            if (directive.isComponent) {\n                component = directive;\n            }\n            var /** @type {?} */ directiveProperties = [];\n            var /** @type {?} */ hostProperties = ((_this._bindingParser.createDirectiveHostPropertyAsts(directive, elementName, sourceSpan)));\n            // Note: We need to check the host properties here as well,\n            // as we don't know the element name in the DirectiveWrapperCompiler yet.\n            hostProperties = _this._checkPropertiesInSchema(elementName, hostProperties);\n            var /** @type {?} */ hostEvents = ((_this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan)));\n            _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties, targetBoundDirectivePropNames);\n            elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n                if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n                    (directive.exportAs == elOrDirRef.value)) {\n                    targetReferences.push(new ReferenceAst(elOrDirRef.name, identifierToken(directive.type), elOrDirRef.sourceSpan));\n                    matchedReferences.add(elOrDirRef.name);\n                }\n            });\n            var /** @type {?} */ contentQueryStartId = _this.contentQueryStartId;\n            _this.contentQueryStartId += directive.queries.length;\n            return new DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, contentQueryStartId, sourceSpan);\n        });\n        elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n            if (elOrDirRef.value.length > 0) {\n                if (!matchedReferences.has(elOrDirRef.name)) {\n                    _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + elOrDirRef.value + \"\\\"\", elOrDirRef.sourceSpan);\n                }\n            }\n            else if (!component) {\n                var /** @type {?} */ refToken = ((null));\n                if (isTemplateElement) {\n                    refToken = createIdentifierToken(Identifiers.TemplateRef);\n                }\n                targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.sourceSpan));\n            }\n        });\n        return directiveAsts;\n    };\n    /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectivePropertyAsts = function (directiveProperties, boundProps, targetBoundDirectiveProps, targetBoundDirectivePropNames) {\n        if (directiveProperties) {\n            var /** @type {?} */ boundPropsByName_1 = new Map();\n            boundProps.forEach(function (boundProp) {\n                var /** @type {?} */ prevValue = boundPropsByName_1.get(boundProp.name);\n                if (!prevValue || prevValue.isLiteral) {\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    boundPropsByName_1.set(boundProp.name, boundProp);\n                }\n            });\n            Object.keys(directiveProperties).forEach(function (dirProp) {\n                var /** @type {?} */ elProp = directiveProperties[dirProp];\n                var /** @type {?} */ boundProp = boundPropsByName_1.get(elProp);\n                // Bindings are optional, so this binding only needs to be set up if an expression is given.\n                if (boundProp) {\n                    targetBoundDirectivePropNames.add(boundProp.name);\n                    if (!isEmptyExpression(boundProp.expression)) {\n                        targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createElementPropertyAsts = function (elementName, props, boundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ boundElementProps = [];\n        props.forEach(function (prop) {\n            if (!prop.isLiteral && !boundDirectivePropNames.has(prop.name)) {\n                boundElementProps.push(_this._bindingParser.createElementPropertyAst(elementName, prop));\n            }\n        });\n        return this._checkPropertiesInSchema(elementName, boundElementProps);\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectives = function (directives) {\n        return directives.filter(function (directive) { return directive.directive.isComponent; });\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectiveNames = function (directives) {\n        return this._findComponentDirectives(directives)\n            .map(function (directive) { return ((identifierName(directive.directive.type))); });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertOnlyOneComponent = function (directives, sourceSpan) {\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 1) {\n            this._reportError(\"More than one component matched on this element.\\n\" +\n                \"Make sure that only one component's selector can match a given element.\\n\" +\n                (\"Conflicting components: \" + componentTypeNames.join(',')), sourceSpan);\n        }\n    };\n    /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertElementExists = function (matchElement, element) {\n        var /** @type {?} */ elName = element.name.replace(/^:xhtml:/, '');\n        if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n            var /** @type {?} */ errorMsg = \"'\" + elName + \"' is not a known element:\\n\";\n            errorMsg +=\n                \"1. If '\" + elName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n            if (elName.indexOf('-') > -1) {\n                errorMsg +=\n                    \"2. If '\" + elName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n            }\n            else {\n                errorMsg +=\n                    \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n            }\n            this._reportError(errorMsg, /** @type {?} */ ((element.sourceSpan)));\n        }\n    };\n    /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = function (directives, elementProps, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 0) {\n            this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\n        }\n        elementProps.forEach(function (prop) {\n            _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", sourceSpan);\n        });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = function (directives, events) {\n        var _this = this;\n        var /** @type {?} */ allDirectiveEvents = new Set();\n        directives.forEach(function (directive) {\n            Object.keys(directive.directive.outputs).forEach(function (k) {\n                var /** @type {?} */ eventName = directive.directive.outputs[k];\n                allDirectiveEvents.add(eventName);\n            });\n        });\n        events.forEach(function (event) {\n            if (event.target != null || !allDirectiveEvents.has(event.name)) {\n                _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", event.sourceSpan);\n            }\n        });\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._checkPropertiesInSchema = function (elementName, boundProps) {\n        var _this = this;\n        // Note: We can't filter out empty expressions before this method,\n        // as we still want to validate them!\n        return boundProps.filter(function (boundProp) {\n            if (boundProp.type === PropertyBindingType.Property &&\n                !_this._schemaRegistry.hasProperty(elementName, boundProp.name, _this._schemas)) {\n                var /** @type {?} */ errorMsg = \"Can't bind to '\" + boundProp.name + \"' since it isn't a known property of '\" + elementName + \"'.\";\n                if (elementName.startsWith('ng-')) {\n                    errorMsg +=\n                        \"\\n1. If '\" + boundProp.name + \"' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.\" +\n                            \"\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                else if (elementName.indexOf('-') > -1) {\n                    errorMsg +=\n                        \"\\n1. If '\" + elementName + \"' is an Angular component and it has '\" + boundProp.name + \"' input, then verify that it is part of this module.\" +\n                            (\"\\n2. If '\" + elementName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\") +\n                            \"\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                _this._reportError(errorMsg, boundProp.sourceSpan);\n            }\n            return !isEmptyExpression(boundProp.value);\n        });\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._reportError = function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    return TemplateParseVisitor;\n}());\nvar NonBindableVisitor = (function () {\n    function NonBindableVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitElement = function (ast, parent) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE ||\n            preparsedElement.type === PreparsedElementType.STYLESHEET) {\n            // Skipping <script> for security reasons\n            // Skipping <style> and stylesheets as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ attrNameAndValues = ast.attrs.map(function (attr) { return [attr.name, attr.value]; });\n        var /** @type {?} */ selector = createElementCssSelector(ast.name, attrNameAndValues);\n        var /** @type {?} */ ngContentIndex = parent.findNgContentIndex(selector);\n        var /** @type {?} */ children = visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n        return new ElementAst(ast.name, visitAll(this, ast.attrs), [], [], [], [], [], false, [], children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitComment = function (comment, context) { return null; };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitAttribute = function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitText = function (text, parent) {\n        var /** @type {?} */ ngContentIndex = ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        return new TextAst(text.value, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansion = function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return expansionCase; };\n    return NonBindableVisitor;\n}());\nvar ElementOrDirectiveRef = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function ElementOrDirectiveRef(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    return ElementOrDirectiveRef;\n}());\n/**\n * @param {?} classAttrValue\n * @return {?}\n */\nfunction splitClasses(classAttrValue) {\n    return classAttrValue.trim().split(/\\s+/g);\n}\nvar ElementContext = (function () {\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} _ngContentIndexMatcher\n     * @param {?} _wildcardNgContentIndex\n     * @param {?} providerContext\n     */\n    function ElementContext(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n        this.isTemplateElement = isTemplateElement;\n        this._ngContentIndexMatcher = _ngContentIndexMatcher;\n        this._wildcardNgContentIndex = _wildcardNgContentIndex;\n        this.providerContext = providerContext;\n    }\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    ElementContext.create = function (isTemplateElement, directives, providerContext) {\n        var /** @type {?} */ matcher = new SelectorMatcher();\n        var /** @type {?} */ wildcardNgContentIndex = ((null));\n        var /** @type {?} */ component = directives.find(function (directive) { return directive.directive.isComponent; });\n        if (component) {\n            var /** @type {?} */ ngContentSelectors = ((component.directive.template)).ngContentSelectors;\n            for (var /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n                var /** @type {?} */ selector = ngContentSelectors[i];\n                if (selector === '*') {\n                    wildcardNgContentIndex = i;\n                }\n                else {\n                    matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n                }\n            }\n        }\n        return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ElementContext.prototype.findNgContentIndex = function (selector) {\n        var /** @type {?} */ ngContentIndices = [];\n        this._ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\n        ngContentIndices.sort();\n        if (this._wildcardNgContentIndex != null) {\n            ngContentIndices.push(this._wildcardNgContentIndex);\n        }\n        return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n    };\n    return ElementContext;\n}());\n/**\n * @param {?} elementName\n * @param {?} attributes\n * @return {?}\n */\nfunction createElementCssSelector(elementName, attributes) {\n    var /** @type {?} */ cssSelector = new CssSelector();\n    var /** @type {?} */ elNameNoNs = splitNsName(elementName)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (var /** @type {?} */ i = 0; i < attributes.length; i++) {\n        var /** @type {?} */ attrName = attributes[i][0];\n        var /** @type {?} */ attrNameNoNs = splitNsName(attrName)[1];\n        var /** @type {?} */ attrValue = attributes[i][1];\n        cssSelector.addAttribute(attrNameNoNs, attrValue);\n        if (attrName.toLowerCase() == CLASS_ATTR) {\n            var /** @type {?} */ classes = splitClasses(attrValue);\n            classes.forEach(function (className) { return cssSelector.addClassName(className); });\n        }\n    }\n    return cssSelector;\n}\nvar EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nvar NON_BINDABLE_VISITOR = new NonBindableVisitor();\n/**\n * @param {?} node\n * @return {?}\n */\nfunction _isEmptyTextNode(node) {\n    return node instanceof Text && node.value.trim().length == 0;\n}\n/**\n * @template T\n * @param {?} items\n * @return {?}\n */\nfunction removeSummaryDuplicates(items) {\n    var /** @type {?} */ map = new Map();\n    items.forEach(function (item) {\n        if (!map.get(item.type.reference)) {\n            map.set(item.type.reference, item);\n        }\n    });\n    return Array.from(map.values());\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction isEmptyExpression(ast) {\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    return ast instanceof EmptyExpr;\n}\n/**\n * @param {?} el\n * @param {?} enableLegacyTemplate\n * @param {?} reportDeprecation\n * @return {?}\n */\nfunction isTemplate(el, enableLegacyTemplate, reportDeprecation) {\n    if (isNgTemplate(el.name))\n        return true;\n    var /** @type {?} */ tagNoNs = splitNsName(el.name)[1];\n    // `<template>` is HTML and case insensitive\n    if (tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n        if (enableLegacyTemplate && tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n            reportDeprecation(TEMPLATE_ELEMENT_DEPRECATION_WARNING, /** @type {?} */ ((el.sourceSpan)));\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * An interface for retrieving documents by URL that the compiler uses\n * to load templates.\n */\nvar ResourceLoader = (function () {\n    function ResourceLoader() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    ResourceLoader.prototype.get = function (url) { return null; };\n    return ResourceLoader;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a {\\@link UrlResolver} with no package prefix.\n * @return {?}\n */\nfunction createUrlResolverWithoutPackagePrefix() {\n    return new UrlResolver();\n}\n/**\n * @return {?}\n */\nfunction createOfflineCompileUrlResolver() {\n    return new UrlResolver('.');\n}\n/**\n * A default provider for {@link PACKAGE_ROOT_URL} that maps to '/'.\n */\nvar DEFAULT_PACKAGE_URL_PROVIDER = {\n    provide: _angular_core.PACKAGE_ROOT_URL,\n    useValue: '/'\n};\n/**\n * Used by the {\\@link Compiler} when resolving HTML and CSS template URLs.\n *\n * This class can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n *\n * ## Example\n *\n * {\\@example compiler/ts/url_resolver/url_resolver.ts region='url_resolver'}\n *\n * \\@security When compiling templates at runtime, you must\n * ensure that the entire template comes from a trusted source.\n * Attacker-controlled data introduced by a template could expose your\n * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar UrlResolver = (function () {\n    /**\n     * @param {?=} _packagePrefix\n     */\n    function UrlResolver(_packagePrefix) {\n        if (_packagePrefix === void 0) { _packagePrefix = null; }\n        this._packagePrefix = _packagePrefix;\n    }\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    UrlResolver.prototype.resolve = function (baseUrl, url) {\n        var /** @type {?} */ resolvedUrl = url;\n        if (baseUrl != null && baseUrl.length > 0) {\n            resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n        }\n        var /** @type {?} */ resolvedParts = _split(resolvedUrl);\n        var /** @type {?} */ prefix = this._packagePrefix;\n        if (prefix != null && resolvedParts != null &&\n            resolvedParts[_ComponentIndex.Scheme] == 'package') {\n            var /** @type {?} */ path = resolvedParts[_ComponentIndex.Path];\n            prefix = prefix.replace(/\\/+$/, '');\n            path = path.replace(/^\\/+/, '');\n            return prefix + \"/\" + path;\n        }\n        return resolvedUrl;\n    };\n    return UrlResolver;\n}());\nUrlResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nUrlResolver.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.PACKAGE_ROOT_URL,] },] },\n]; };\n/**\n * Extract the scheme of a URL.\n * @param {?} url\n * @return {?}\n */\nfunction getUrlScheme(url) {\n    var /** @type {?} */ match = _split(url);\n    return (match && match[_ComponentIndex.Scheme]) || '';\n}\n/**\n * Builds a URI string from already-encoded parts.\n *\n * No encoding is performed.  Any component may be omitted as either null or\n * undefined.\n *\n * @param {?=} opt_scheme The scheme such as 'http'.\n * @param {?=} opt_userInfo The user name before the '\\@'.\n * @param {?=} opt_domain The domain such as 'www.google.com', already\n *     URI-encoded.\n * @param {?=} opt_port The port number.\n * @param {?=} opt_path The path, already URI-encoded.  If it is not\n *     empty, it must begin with a slash.\n * @param {?=} opt_queryData The URI-encoded query data.\n * @param {?=} opt_fragment The URI-encoded fragment identifier.\n * @return {?} The fully combined URI.\n */\nfunction _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n    var /** @type {?} */ out = [];\n    if (opt_scheme != null) {\n        out.push(opt_scheme + ':');\n    }\n    if (opt_domain != null) {\n        out.push('//');\n        if (opt_userInfo != null) {\n            out.push(opt_userInfo + '@');\n        }\n        out.push(opt_domain);\n        if (opt_port != null) {\n            out.push(':' + opt_port);\n        }\n    }\n    if (opt_path != null) {\n        out.push(opt_path);\n    }\n    if (opt_queryData != null) {\n        out.push('?' + opt_queryData);\n    }\n    if (opt_fragment != null) {\n        out.push('#' + opt_fragment);\n    }\n    return out.join('');\n}\n/**\n * A regular expression for breaking a URI into its component parts.\n *\n * {\\@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n * \\@internal\n */\nvar _splitRe = new RegExp('^' +\n    '(?:' +\n    '([^:/?#.]+)' +\n    // used by other URL parts such as :,\n    // ?, /, #, and .\n    ':)?' +\n    '(?://' +\n    '(?:([^/?#]*)@)?' +\n    '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' +\n    // digits, dashes, dots, percent\n    // escapes, and unicode characters.\n    '(?::([0-9]+))?' +\n    ')?' +\n    '([^?#]+)?' +\n    '(?:\\\\?([^#]*))?' +\n    '(?:#(.*))?' +\n    '$');\nvar _ComponentIndex = {};\n_ComponentIndex.Scheme = 1;\n_ComponentIndex.UserInfo = 2;\n_ComponentIndex.Domain = 3;\n_ComponentIndex.Port = 4;\n_ComponentIndex.Path = 5;\n_ComponentIndex.QueryData = 6;\n_ComponentIndex.Fragment = 7;\n_ComponentIndex[_ComponentIndex.Scheme] = \"Scheme\";\n_ComponentIndex[_ComponentIndex.UserInfo] = \"UserInfo\";\n_ComponentIndex[_ComponentIndex.Domain] = \"Domain\";\n_ComponentIndex[_ComponentIndex.Port] = \"Port\";\n_ComponentIndex[_ComponentIndex.Path] = \"Path\";\n_ComponentIndex[_ComponentIndex.QueryData] = \"QueryData\";\n_ComponentIndex[_ComponentIndex.Fragment] = \"Fragment\";\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n * </pre>\n *\n * @param {?} uri The URI string to examine.\n * @return {?} Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\nfunction _split(uri) {\n    return ((uri.match(_splitRe)));\n}\n/**\n * Removes dot segments in given path component, as described in\n * RFC 3986, section 5.2.4.\n *\n * @param {?} path A non-empty path component.\n * @return {?} Path component with removed dot segments.\n */\nfunction _removeDotSegments(path) {\n    if (path == '/')\n        return '/';\n    var /** @type {?} */ leadingSlash = path[0] == '/' ? '/' : '';\n    var /** @type {?} */ trailingSlash = path[path.length - 1] === '/' ? '/' : '';\n    var /** @type {?} */ segments = path.split('/');\n    var /** @type {?} */ out = [];\n    var /** @type {?} */ up = 0;\n    for (var /** @type {?} */ pos = 0; pos < segments.length; pos++) {\n        var /** @type {?} */ segment = segments[pos];\n        switch (segment) {\n            case '':\n            case '.':\n                break;\n            case '..':\n                if (out.length > 0) {\n                    out.pop();\n                }\n                else {\n                    up++;\n                }\n                break;\n            default:\n                out.push(segment);\n        }\n    }\n    if (leadingSlash == '') {\n        while (up-- > 0) {\n            out.unshift('..');\n        }\n        if (out.length === 0)\n            out.push('.');\n    }\n    return leadingSlash + out.join('/') + trailingSlash;\n}\n/**\n * Takes an array of the parts from split and canonicalizes the path part\n * and then joins all the parts.\n * @param {?} parts\n * @return {?}\n */\nfunction _joinAndCanonicalizePath(parts) {\n    var /** @type {?} */ path = parts[_ComponentIndex.Path];\n    path = path == null ? '' : _removeDotSegments(path);\n    parts[_ComponentIndex.Path] = path;\n    return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n}\n/**\n * Resolves a URL.\n * @param {?} base The URL acting as the base URL.\n * @param {?} url\n * @return {?}\n */\nfunction _resolveUrl(base, url) {\n    var /** @type {?} */ parts = _split(encodeURI(url));\n    var /** @type {?} */ baseParts = _split(base);\n    if (parts[_ComponentIndex.Scheme] != null) {\n        return _joinAndCanonicalizePath(parts);\n    }\n    else {\n        parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n    }\n    for (var /** @type {?} */ i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n        if (parts[i] == null) {\n            parts[i] = baseParts[i];\n        }\n    }\n    if (parts[_ComponentIndex.Path][0] == '/') {\n        return _joinAndCanonicalizePath(parts);\n    }\n    var /** @type {?} */ path = baseParts[_ComponentIndex.Path];\n    if (path == null)\n        path = '/';\n    var /** @type {?} */ index = path.lastIndexOf('/');\n    path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];\n    parts[_ComponentIndex.Path] = path;\n    return _joinAndCanonicalizePath(parts);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DirectiveNormalizer = (function () {\n    /**\n     * @param {?} _resourceLoader\n     * @param {?} _urlResolver\n     * @param {?} _htmlParser\n     * @param {?} _config\n     */\n    function DirectiveNormalizer(_resourceLoader, _urlResolver, _htmlParser, _config) {\n        this._resourceLoader = _resourceLoader;\n        this._urlResolver = _urlResolver;\n        this._htmlParser = _htmlParser;\n        this._config = _config;\n        this._resourceLoaderCache = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCache = function () { this._resourceLoaderCache.clear(); };\n    /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCacheFor = function (normalizedDirective) {\n        var _this = this;\n        if (!normalizedDirective.isComponent) {\n            return;\n        }\n        var /** @type {?} */ template = ((normalizedDirective.template));\n        this._resourceLoaderCache.delete(/** @type {?} */ ((template.templateUrl)));\n        template.externalStylesheets.forEach(function (stylesheet) { _this._resourceLoaderCache.delete(/** @type {?} */ ((stylesheet.moduleUrl))); });\n    };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._fetch = function (url) {\n        var /** @type {?} */ result = this._resourceLoaderCache.get(url);\n        if (!result) {\n            result = ((this._resourceLoader.get(url)));\n            this._resourceLoaderCache.set(url, result);\n        }\n        return result;\n    };\n    /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplate = function (prenormData) {\n        var _this = this;\n        var /** @type {?} */ normalizedTemplateSync = ((null));\n        var /** @type {?} */ normalizedTemplateAsync = ((undefined));\n        if (isDefined(prenormData.template)) {\n            if (isDefined(prenormData.templateUrl)) {\n                throw syntaxError(\"'\" + _angular_core.ɵstringify(prenormData.componentType) + \"' component cannot define both template and templateUrl\");\n            }\n            if (typeof prenormData.template !== 'string') {\n                throw syntaxError(\"The template specified for component \" + _angular_core.ɵstringify(prenormData.componentType) + \" is not a string\");\n            }\n            normalizedTemplateSync = this.normalizeTemplateSync(prenormData);\n            normalizedTemplateAsync = Promise.resolve(/** @type {?} */ ((normalizedTemplateSync)));\n        }\n        else if (isDefined(prenormData.templateUrl)) {\n            if (typeof prenormData.templateUrl !== 'string') {\n                throw syntaxError(\"The templateUrl specified for component \" + _angular_core.ɵstringify(prenormData.componentType) + \" is not a string\");\n            }\n            normalizedTemplateAsync = this.normalizeTemplateAsync(prenormData);\n        }\n        else {\n            throw syntaxError(\"No template specified for component \" + _angular_core.ɵstringify(prenormData.componentType));\n        }\n        if (normalizedTemplateSync && normalizedTemplateSync.styleUrls.length === 0) {\n            // sync case\n            return new SyncAsyncResult(normalizedTemplateSync);\n        }\n        else {\n            // async case\n            return new SyncAsyncResult(null, normalizedTemplateAsync.then(function (normalizedTemplate) { return _this.normalizeExternalStylesheets(normalizedTemplate); }));\n        }\n    };\n    /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplateSync = function (prenomData) {\n        return this.normalizeLoadedTemplate(prenomData, /** @type {?} */ ((prenomData.template)), prenomData.moduleUrl);\n    };\n    /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplateAsync = function (prenomData) {\n        var _this = this;\n        var /** @type {?} */ templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, /** @type {?} */ ((prenomData.templateUrl)));\n        return this._fetch(templateUrl)\n            .then(function (value) { return _this.normalizeLoadedTemplate(prenomData, value, templateUrl); });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeLoadedTemplate = function (prenormData, template, templateAbsUrl) {\n        var /** @type {?} */ isInline = !!prenormData.template;\n        var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((prenormData.interpolation)));\n        var /** @type {?} */ rootNodesAndErrors = this._htmlParser.parse(template, templateSourceUrl({ reference: prenormData.ngModuleType }, { type: { reference: prenormData.componentType } }, { isInline: isInline, templateUrl: templateAbsUrl }), true, interpolationConfig);\n        if (rootNodesAndErrors.errors.length > 0) {\n            var /** @type {?} */ errorString = rootNodesAndErrors.errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString);\n        }\n        var /** @type {?} */ templateMetadataStyles = this.normalizeStylesheet(new CompileStylesheetMetadata({\n            styles: prenormData.styles,\n            styleUrls: prenormData.styleUrls,\n            moduleUrl: prenormData.moduleUrl\n        }));\n        var /** @type {?} */ visitor = new TemplatePreparseVisitor();\n        visitAll(visitor, rootNodesAndErrors.rootNodes);\n        var /** @type {?} */ templateStyles = this.normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n        var /** @type {?} */ encapsulation = prenormData.encapsulation;\n        if (encapsulation == null) {\n            encapsulation = this._config.defaultEncapsulation;\n        }\n        var /** @type {?} */ styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n        var /** @type {?} */ styleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n        if (encapsulation === _angular_core.ViewEncapsulation.Emulated && styles.length === 0 &&\n            styleUrls.length === 0) {\n            encapsulation = _angular_core.ViewEncapsulation.None;\n        }\n        return new CompileTemplateMetadata({\n            encapsulation: encapsulation,\n            template: template,\n            templateUrl: templateAbsUrl, styles: styles, styleUrls: styleUrls,\n            ngContentSelectors: visitor.ngContentSelectors,\n            animations: prenormData.animations,\n            interpolation: prenormData.interpolation, isInline: isInline,\n            externalStylesheets: []\n        });\n    };\n    /**\n     * @param {?} templateMeta\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeExternalStylesheets = function (templateMeta) {\n        return this._loadMissingExternalStylesheets(templateMeta.styleUrls)\n            .then(function (externalStylesheets) { return new CompileTemplateMetadata({\n            encapsulation: templateMeta.encapsulation,\n            template: templateMeta.template,\n            templateUrl: templateMeta.templateUrl,\n            styles: templateMeta.styles,\n            styleUrls: templateMeta.styleUrls,\n            externalStylesheets: externalStylesheets,\n            ngContentSelectors: templateMeta.ngContentSelectors,\n            animations: templateMeta.animations,\n            interpolation: templateMeta.interpolation,\n            isInline: templateMeta.isInline,\n        }); });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._loadMissingExternalStylesheets = function (styleUrls, loadedStylesheets) {\n        var _this = this;\n        if (loadedStylesheets === void 0) { loadedStylesheets = new Map(); }\n        return Promise\n            .all(styleUrls.filter(function (styleUrl) { return !loadedStylesheets.has(styleUrl); })\n            .map(function (styleUrl) { return _this._fetch(styleUrl).then(function (loadedStyle) {\n            var /** @type {?} */ stylesheet = _this.normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n            loadedStylesheets.set(styleUrl, stylesheet);\n            return _this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n        }); }))\n            .then(function (_) { return Array.from(loadedStylesheets.values()); });\n    };\n    /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeStylesheet = function (stylesheet) {\n        var _this = this;\n        var /** @type {?} */ moduleUrl = ((stylesheet.moduleUrl));\n        var /** @type {?} */ allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n            .map(function (url) { return _this._urlResolver.resolve(moduleUrl, url); });\n        var /** @type {?} */ allStyles = stylesheet.styles.map(function (style$$1) {\n            var /** @type {?} */ styleWithImports = extractStyleUrls(_this._urlResolver, moduleUrl, style$$1);\n            allStyleUrls.push.apply(allStyleUrls, styleWithImports.styleUrls);\n            return styleWithImports.style;\n        });\n        return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: moduleUrl });\n    };\n    return DirectiveNormalizer;\n}());\nDirectiveNormalizer.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nDirectiveNormalizer.ctorParameters = function () { return [\n    { type: ResourceLoader, },\n    { type: UrlResolver, },\n    { type: HtmlParser, },\n    { type: CompilerConfig, },\n]; };\nvar TemplatePreparseVisitor = (function () {\n    function TemplatePreparseVisitor() {\n        this.ngContentSelectors = [];\n        this.styles = [];\n        this.styleUrls = [];\n        this.ngNonBindableStackCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitElement = function (ast, context) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        switch (preparsedElement.type) {\n            case PreparsedElementType.NG_CONTENT:\n                if (this.ngNonBindableStackCount === 0) {\n                    this.ngContentSelectors.push(preparsedElement.selectAttr);\n                }\n                break;\n            case PreparsedElementType.STYLE:\n                var /** @type {?} */ textContent_1 = '';\n                ast.children.forEach(function (child) {\n                    if (child instanceof Text) {\n                        textContent_1 += child.value;\n                    }\n                });\n                this.styles.push(textContent_1);\n                break;\n            case PreparsedElementType.STYLESHEET:\n                this.styleUrls.push(preparsedElement.hrefAttr);\n                break;\n            default:\n                break;\n        }\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount++;\n        }\n        visitAll(this, ast.children);\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount--;\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansion = function (ast, context) { visitAll(this, ast.cases); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansionCase = function (ast, context) {\n        visitAll(this, ast.expression);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitComment = function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitAttribute = function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitText = function (ast, context) { return null; };\n    return TemplatePreparseVisitor;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __assign = (undefined && undefined.__assign) || Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n    }\n    return t;\n};\nvar DirectiveResolver = (function () {\n    /**\n     * @param {?=} _reflector\n     */\n    function DirectiveResolver(_reflector) {\n        if (_reflector === void 0) { _reflector = _angular_core.ɵreflector; }\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    DirectiveResolver.prototype.isDirective = function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    DirectiveResolver.prototype.resolve = function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n        if (typeMetadata) {\n            var /** @type {?} */ metadata = findLast(typeMetadata, isDirectiveMetadata);\n            if (metadata) {\n                var /** @type {?} */ propertyMetadata = this._reflector.propMetadata(type);\n                return this._mergeWithPropertyMetadata(metadata, propertyMetadata, type);\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Directive annotation found on \" + _angular_core.ɵstringify(type));\n        }\n        return null;\n    };\n    /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._mergeWithPropertyMetadata = function (dm, propertyMetadata, directiveType) {\n        var /** @type {?} */ inputs = [];\n        var /** @type {?} */ outputs = [];\n        var /** @type {?} */ host = {};\n        var /** @type {?} */ queries = {};\n        Object.keys(propertyMetadata).forEach(function (propName) {\n            var /** @type {?} */ input = findLast(propertyMetadata[propName], function (a) { return a instanceof _angular_core.Input; });\n            if (input) {\n                if (input.bindingPropertyName) {\n                    inputs.push(propName + \": \" + input.bindingPropertyName);\n                }\n                else {\n                    inputs.push(propName);\n                }\n            }\n            var /** @type {?} */ output = findLast(propertyMetadata[propName], function (a) { return a instanceof _angular_core.Output; });\n            if (output) {\n                if (output.bindingPropertyName) {\n                    outputs.push(propName + \": \" + output.bindingPropertyName);\n                }\n                else {\n                    outputs.push(propName);\n                }\n            }\n            var /** @type {?} */ hostBindings = propertyMetadata[propName].filter(function (a) { return a && a instanceof _angular_core.HostBinding; });\n            hostBindings.forEach(function (hostBinding) {\n                if (hostBinding.hostPropertyName) {\n                    var /** @type {?} */ startWith = hostBinding.hostPropertyName[0];\n                    if (startWith === '(') {\n                        throw new Error(\"@HostBinding can not bind to events. Use @HostListener instead.\");\n                    }\n                    else if (startWith === '[') {\n                        throw new Error(\"@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.\");\n                    }\n                    host[\"[\" + hostBinding.hostPropertyName + \"]\"] = propName;\n                }\n                else {\n                    host[\"[\" + propName + \"]\"] = propName;\n                }\n            });\n            var /** @type {?} */ hostListeners = propertyMetadata[propName].filter(function (a) { return a && a instanceof _angular_core.HostListener; });\n            hostListeners.forEach(function (hostListener) {\n                var /** @type {?} */ args = hostListener.args || [];\n                host[\"(\" + hostListener.eventName + \")\"] = propName + \"(\" + args.join(',') + \")\";\n            });\n            var /** @type {?} */ query = findLast(propertyMetadata[propName], function (a) { return a instanceof _angular_core.Query; });\n            if (query) {\n                queries[propName] = query;\n            }\n        });\n        return this._merge(dm, inputs, outputs, host, queries, directiveType);\n    };\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    DirectiveResolver.prototype._extractPublicName = function (def) { return splitAtColon(def, [/** @type {?} */ ((null)), def])[1].trim(); };\n    /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    DirectiveResolver.prototype._dedupeBindings = function (bindings) {\n        var /** @type {?} */ names = new Set();\n        var /** @type {?} */ reversedResult = [];\n        // go last to first to allow later entries to overwrite previous entries\n        for (var /** @type {?} */ i = bindings.length - 1; i >= 0; i--) {\n            var /** @type {?} */ binding = bindings[i];\n            var /** @type {?} */ name = this._extractPublicName(binding);\n            if (!names.has(name)) {\n                names.add(name);\n                reversedResult.push(binding);\n            }\n        }\n        return reversedResult.reverse();\n    };\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._merge = function (directive, inputs, outputs, host, queries, directiveType) {\n        var /** @type {?} */ mergedInputs = this._dedupeBindings(directive.inputs ? directive.inputs.concat(inputs) : inputs);\n        var /** @type {?} */ mergedOutputs = this._dedupeBindings(directive.outputs ? directive.outputs.concat(outputs) : outputs);\n        var /** @type {?} */ mergedHost = directive.host ? __assign({}, directive.host, host) : host;\n        var /** @type {?} */ mergedQueries = directive.queries ? __assign({}, directive.queries, queries) : queries;\n        if (directive instanceof _angular_core.Component) {\n            return new _angular_core.Component({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                moduleId: directive.moduleId,\n                queries: mergedQueries,\n                changeDetection: directive.changeDetection,\n                providers: directive.providers,\n                viewProviders: directive.viewProviders,\n                entryComponents: directive.entryComponents,\n                template: directive.template,\n                templateUrl: directive.templateUrl,\n                styles: directive.styles,\n                styleUrls: directive.styleUrls,\n                encapsulation: directive.encapsulation,\n                animations: directive.animations,\n                interpolation: directive.interpolation\n            });\n        }\n        else {\n            return new _angular_core.Directive({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                queries: mergedQueries,\n                providers: directive.providers\n            });\n        }\n    };\n    return DirectiveResolver;\n}());\nDirectiveResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nDirectiveResolver.ctorParameters = function () { return [\n    { type: _angular_core.ɵReflectorReader, },\n]; };\n/**\n * @param {?} type\n * @return {?}\n */\nfunction isDirectiveMetadata(type) {\n    return type instanceof _angular_core.Directive;\n}\n/**\n * @template T\n * @param {?} arr\n * @param {?} condition\n * @return {?}\n */\nfunction findLast(arr, condition) {\n    for (var /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n        if (condition(arr[i])) {\n            return arr[i];\n        }\n    }\n    return null;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nvar GENERATED_FILE = /\\.ngfactory\\.|\\.ngsummary\\./;\nvar JIT_SUMMARY_FILE = /\\.ngsummary\\./;\nvar JIT_SUMMARY_NAME = /NgSummary$/;\n/**\n * @param {?} filePath\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction ngfactoryFilePath(filePath, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(filePath, forceSourceFile);\n    return urlWithSuffix[0] + \".ngfactory\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripGeneratedFileSuffix(filePath) {\n    return filePath.replace(GENERATED_FILE, '.');\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction isGeneratedFile(filePath) {\n    return GENERATED_FILE.test(filePath);\n}\n/**\n * @param {?} path\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction splitTypescriptSuffix(path, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    if (path.endsWith('.d.ts')) {\n        return [path.slice(0, -5), forceSourceFile ? '.ts' : '.d.ts'];\n    }\n    var /** @type {?} */ lastDot = path.lastIndexOf('.');\n    if (lastDot !== -1) {\n        return [path.substring(0, lastDot), path.substring(lastDot)];\n    }\n    return [path, ''];\n}\n/**\n * @param {?} fileName\n * @return {?}\n */\nfunction summaryFileName(fileName) {\n    var /** @type {?} */ fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n    return fileNameWithoutSuffix + \".ngsummary.json\";\n}\n/**\n * @param {?} fileName\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction summaryForJitFileName(fileName, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(stripGeneratedFileSuffix(fileName), forceSourceFile);\n    return urlWithSuffix[0] + \".ngsummary\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripSummaryForJitFileSuffix(filePath) {\n    return filePath.replace(JIT_SUMMARY_FILE, '.');\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction summaryForJitName(symbolName) {\n    return symbolName + \"NgSummary\";\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction stripSummaryForJitNameSuffix(symbolName) {\n    return symbolName.replace(JIT_SUMMARY_NAME, '');\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} hook\n * @param {?} token\n * @return {?}\n */\nfunction hasLifecycleHook(hook, token) {\n    return _angular_core.ɵreflector.hasLifecycleHook(token, getHookName(hook));\n}\n/**\n * @param {?} hook\n * @return {?}\n */\nfunction getHookName(hook) {\n    switch (hook) {\n        case _angular_core.ɵLifecycleHooks.OnInit:\n            return 'ngOnInit';\n        case _angular_core.ɵLifecycleHooks.OnDestroy:\n            return 'ngOnDestroy';\n        case _angular_core.ɵLifecycleHooks.DoCheck:\n            return 'ngDoCheck';\n        case _angular_core.ɵLifecycleHooks.OnChanges:\n            return 'ngOnChanges';\n        case _angular_core.ɵLifecycleHooks.AfterContentInit:\n            return 'ngAfterContentInit';\n        case _angular_core.ɵLifecycleHooks.AfterContentChecked:\n            return 'ngAfterContentChecked';\n        case _angular_core.ɵLifecycleHooks.AfterViewInit:\n            return 'ngAfterViewInit';\n        case _angular_core.ɵLifecycleHooks.AfterViewChecked:\n            return 'ngAfterViewChecked';\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _isNgModuleMetadata(obj) {\n    return obj instanceof _angular_core.NgModule;\n}\n/**\n * Resolves types to {\\@link NgModule}.\n */\nvar NgModuleResolver = (function () {\n    /**\n     * @param {?=} _reflector\n     */\n    function NgModuleResolver(_reflector) {\n        if (_reflector === void 0) { _reflector = _angular_core.ɵreflector; }\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    NgModuleResolver.prototype.isNgModule = function (type) { return this._reflector.annotations(type).some(_isNgModuleMetadata); };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    NgModuleResolver.prototype.resolve = function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModuleMeta = findLast(this._reflector.annotations(type), _isNgModuleMetadata);\n        if (ngModuleMeta) {\n            return ngModuleMeta;\n        }\n        else {\n            if (throwIfNotFound) {\n                throw new Error(\"No NgModule metadata found for '\" + _angular_core.ɵstringify(type) + \"'.\");\n            }\n            return null;\n        }\n    };\n    return NgModuleResolver;\n}());\nNgModuleResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nNgModuleResolver.ctorParameters = function () { return [\n    { type: _angular_core.ɵReflectorReader, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} type\n * @return {?}\n */\nfunction _isPipeMetadata(type) {\n    return type instanceof _angular_core.Pipe;\n}\n/**\n * Resolve a `Type` for {\\@link Pipe}.\n *\n * This interface can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n */\nvar PipeResolver = (function () {\n    /**\n     * @param {?=} _reflector\n     */\n    function PipeResolver(_reflector) {\n        if (_reflector === void 0) { _reflector = _angular_core.ɵreflector; }\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    PipeResolver.prototype.isPipe = function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(_isPipeMetadata);\n    };\n    /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    PipeResolver.prototype.resolve = function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ metas = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n        if (metas) {\n            var /** @type {?} */ annotation = findLast(metas, _isPipeMetadata);\n            if (annotation) {\n                return annotation;\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Pipe decorator found on \" + _angular_core.ɵstringify(type));\n        }\n        return null;\n    };\n    return PipeResolver;\n}());\nPipeResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nPipeResolver.ctorParameters = function () { return [\n    { type: _angular_core.ɵReflectorReader, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar SummaryResolver = (function () {\n    function SummaryResolver() {\n    }\n    /**\n     * @abstract\n     * @param {?} fileName\n     * @return {?}\n     */\n    SummaryResolver.prototype.isLibraryFile = function (fileName) { };\n    /**\n     * @abstract\n     * @param {?} fileName\n     * @return {?}\n     */\n    SummaryResolver.prototype.getLibraryFileName = function (fileName) { };\n    /**\n     * @abstract\n     * @param {?} reference\n     * @return {?}\n     */\n    SummaryResolver.prototype.resolveSummary = function (reference) { };\n    /**\n     * @abstract\n     * @param {?} filePath\n     * @return {?}\n     */\n    SummaryResolver.prototype.getSymbolsOf = function (filePath) { };\n    /**\n     * @abstract\n     * @param {?} reference\n     * @return {?}\n     */\n    SummaryResolver.prototype.getImportAs = function (reference) { };\n    /**\n     * @abstract\n     * @param {?} summary\n     * @return {?}\n     */\n    SummaryResolver.prototype.addSummary = function (summary) { };\n    return SummaryResolver;\n}());\nvar JitSummaryResolver = (function () {\n    function JitSummaryResolver() {\n        this._summaries = new Map();\n    }\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.isLibraryFile = function (fileName) { return false; };\n    \n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getLibraryFileName = function (fileName) { return null; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.resolveSummary = function (reference) {\n        return this._summaries.get(reference) || null;\n    };\n    \n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getSymbolsOf = function (filePath) { return []; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getImportAs = function (reference) { return reference; };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.addSummary = function (summary) { this._summaries.set(summary.symbol, summary); };\n    \n    return JitSummaryResolver;\n}());\nJitSummaryResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nJitSummaryResolver.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ERROR_COLLECTOR_TOKEN = new _angular_core.InjectionToken('ErrorCollector');\nvar CompileMetadataResolver = (function () {\n    /**\n     * @param {?} _config\n     * @param {?} _ngModuleResolver\n     * @param {?} _directiveResolver\n     * @param {?} _pipeResolver\n     * @param {?} _summaryResolver\n     * @param {?} _schemaRegistry\n     * @param {?} _directiveNormalizer\n     * @param {?} _console\n     * @param {?} _staticSymbolCache\n     * @param {?=} _reflector\n     * @param {?=} _errorCollector\n     */\n    function CompileMetadataResolver(_config, _ngModuleResolver, _directiveResolver, _pipeResolver, _summaryResolver, _schemaRegistry, _directiveNormalizer, _console, _staticSymbolCache, _reflector, _errorCollector) {\n        if (_reflector === void 0) { _reflector = _angular_core.ɵreflector; }\n        this._config = _config;\n        this._ngModuleResolver = _ngModuleResolver;\n        this._directiveResolver = _directiveResolver;\n        this._pipeResolver = _pipeResolver;\n        this._summaryResolver = _summaryResolver;\n        this._schemaRegistry = _schemaRegistry;\n        this._directiveNormalizer = _directiveNormalizer;\n        this._console = _console;\n        this._staticSymbolCache = _staticSymbolCache;\n        this._reflector = _reflector;\n        this._errorCollector = _errorCollector;\n        this._nonNormalizedDirectiveCache = new Map();\n        this._directiveCache = new Map();\n        this._summaryCache = new Map();\n        this._pipeCache = new Map();\n        this._ngModuleCache = new Map();\n        this._ngModuleOfTypes = new Map();\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCacheFor = function (type) {\n        var /** @type {?} */ dirMeta = this._directiveCache.get(type);\n        this._directiveCache.delete(type);\n        this._nonNormalizedDirectiveCache.delete(type);\n        this._summaryCache.delete(type);\n        this._pipeCache.delete(type);\n        this._ngModuleOfTypes.delete(type);\n        // Clear all of the NgModule as they contain transitive information!\n        this._ngModuleCache.clear();\n        if (dirMeta) {\n            this._directiveNormalizer.clearCacheFor(dirMeta);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCache = function () {\n        this._directiveCache.clear();\n        this._nonNormalizedDirectiveCache.clear();\n        this._summaryCache.clear();\n        this._pipeCache.clear();\n        this._ngModuleCache.clear();\n        this._ngModuleOfTypes.clear();\n        this._directiveNormalizer.clearCache();\n    };\n    /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._createProxyClass = function (baseType, name) {\n        var /** @type {?} */ delegate = null;\n        var /** @type {?} */ proxyClass = (function () {\n            if (!delegate) {\n                throw new Error(\"Illegal state: Class \" + name + \" for type \" + _angular_core.ɵstringify(baseType) + \" is not compiled yet!\");\n            }\n            return delegate.apply(this, arguments);\n        });\n        proxyClass.setDelegate = function (d) {\n            delegate = d;\n            ((proxyClass)).prototype = d.prototype;\n        };\n        // Make stringify work correctly\n        ((proxyClass)).overriddenName = name;\n        return proxyClass;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getGeneratedClass = function (dirType, name) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n        }\n        else {\n            return this._createProxyClass(dirType, name);\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentViewClass = function (dirType) {\n        return this.getGeneratedClass(dirType, viewClassName(dirType, 0));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentViewClass = function (dirType) {\n        return this.getGeneratedClass(dirType, hostViewClassName(dirType));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentType = function (dirType) {\n        var /** @type {?} */ name = identifierName({ reference: dirType }) + \"_Host\";\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(dirType.filePath, name);\n        }\n        else {\n            var /** @type {?} */ HostClass = (function HostClass() { });\n            HostClass.overriddenName = name;\n            return HostClass;\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getRendererType = function (dirType) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), rendererTypeName(dirType));\n        }\n        else {\n            // returning an object as proxy,\n            // that we fill later during runtime compilation.\n            return ({});\n        }\n    };\n    /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentFactory = function (selector, dirType, inputs, outputs) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), componentFactoryName(dirType));\n        }\n        else {\n            var /** @type {?} */ hostView = this.getHostComponentViewClass(dirType);\n            // Note: ngContentSelectors will be filled later once the template is\n            // loaded.\n            return _angular_core.ɵccf(selector, dirType, /** @type {?} */ (hostView), inputs, outputs, []);\n        }\n    };\n    /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.initComponentFactory = function (factory, ngContentSelectors) {\n        if (!(factory instanceof StaticSymbol)) {\n            (_a = factory.ngContentSelectors).push.apply(_a, ngContentSelectors);\n        }\n        var _a;\n    };\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadSummary = function (type, kind) {\n        var /** @type {?} */ typeSummary = this._summaryCache.get(type);\n        if (!typeSummary) {\n            var /** @type {?} */ summary = this._summaryResolver.resolveSummary(type);\n            typeSummary = summary ? summary.type : null;\n            this._summaryCache.set(type, typeSummary || null);\n        }\n        return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n    };\n    /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadDirectiveMetadata = function (ngModuleType, directiveType, isSync) {\n        var _this = this;\n        if (this._directiveCache.has(directiveType)) {\n            return null;\n        }\n        directiveType = _angular_core.resolveForwardRef(directiveType);\n        var _a = ((this.getNonNormalizedDirectiveMetadata(directiveType))), annotation = _a.annotation, metadata = _a.metadata;\n        var /** @type {?} */ createDirectiveMetadata = function (templateMetadata) {\n            var /** @type {?} */ normalizedDirMeta = new CompileDirectiveMetadata({\n                isHost: false,\n                type: metadata.type,\n                isComponent: metadata.isComponent,\n                selector: metadata.selector,\n                exportAs: metadata.exportAs,\n                changeDetection: metadata.changeDetection,\n                inputs: metadata.inputs,\n                outputs: metadata.outputs,\n                hostListeners: metadata.hostListeners,\n                hostProperties: metadata.hostProperties,\n                hostAttributes: metadata.hostAttributes,\n                providers: metadata.providers,\n                viewProviders: metadata.viewProviders,\n                queries: metadata.queries,\n                viewQueries: metadata.viewQueries,\n                entryComponents: metadata.entryComponents,\n                componentViewType: metadata.componentViewType,\n                rendererType: metadata.rendererType,\n                componentFactory: metadata.componentFactory,\n                template: templateMetadata\n            });\n            if (templateMetadata) {\n                _this.initComponentFactory(/** @type {?} */ ((metadata.componentFactory)), templateMetadata.ngContentSelectors);\n            }\n            _this._directiveCache.set(directiveType, normalizedDirMeta);\n            _this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n            return normalizedDirMeta;\n        };\n        if (metadata.isComponent) {\n            var /** @type {?} */ template = ((metadata.template));\n            var /** @type {?} */ templateMeta = this._directiveNormalizer.normalizeTemplate({\n                ngModuleType: ngModuleType,\n                componentType: directiveType,\n                moduleUrl: componentModuleUrl(this._reflector, directiveType, annotation),\n                encapsulation: template.encapsulation,\n                template: template.template,\n                templateUrl: template.templateUrl,\n                styles: template.styles,\n                styleUrls: template.styleUrls,\n                animations: template.animations,\n                interpolation: template.interpolation\n            });\n            if (templateMeta.syncResult) {\n                createDirectiveMetadata(templateMeta.syncResult);\n                return null;\n            }\n            else {\n                if (isSync) {\n                    this._reportError(componentStillLoadingError(directiveType), directiveType);\n                    return null;\n                }\n                return ((templateMeta.asyncResult)).then(createDirectiveMetadata);\n            }\n        }\n        else {\n            // directive\n            createDirectiveMetadata(null);\n            return null;\n        }\n    };\n    /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNonNormalizedDirectiveMetadata = function (directiveType) {\n        var _this = this;\n        directiveType = _angular_core.resolveForwardRef(directiveType);\n        if (!directiveType) {\n            return null;\n        }\n        var /** @type {?} */ cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n        if (cacheEntry) {\n            return cacheEntry;\n        }\n        var /** @type {?} */ dirMeta = this._directiveResolver.resolve(directiveType, false);\n        if (!dirMeta) {\n            return null;\n        }\n        var /** @type {?} */ nonNormalizedTemplateMetadata = ((undefined));\n        if (dirMeta instanceof _angular_core.Component) {\n            // component\n            assertArrayOfStrings('styles', dirMeta.styles);\n            assertArrayOfStrings('styleUrls', dirMeta.styleUrls);\n            assertInterpolationSymbols('interpolation', dirMeta.interpolation);\n            var /** @type {?} */ animations = dirMeta.animations;\n            nonNormalizedTemplateMetadata = new CompileTemplateMetadata({\n                encapsulation: noUndefined(dirMeta.encapsulation),\n                template: noUndefined(dirMeta.template),\n                templateUrl: noUndefined(dirMeta.templateUrl),\n                styles: dirMeta.styles || [],\n                styleUrls: dirMeta.styleUrls || [],\n                animations: animations || [],\n                interpolation: noUndefined(dirMeta.interpolation),\n                isInline: !!dirMeta.template,\n                externalStylesheets: [],\n                ngContentSelectors: []\n            });\n        }\n        var /** @type {?} */ changeDetectionStrategy = ((null));\n        var /** @type {?} */ viewProviders = [];\n        var /** @type {?} */ entryComponentMetadata = [];\n        var /** @type {?} */ selector = dirMeta.selector;\n        if (dirMeta instanceof _angular_core.Component) {\n            // Component\n            changeDetectionStrategy = ((dirMeta.changeDetection));\n            if (dirMeta.viewProviders) {\n                viewProviders = this._getProvidersMetadata(dirMeta.viewProviders, entryComponentMetadata, \"viewProviders for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n            }\n            if (dirMeta.entryComponents) {\n                entryComponentMetadata = flattenAndDedupeArray(dirMeta.entryComponents)\n                    .map(function (type) { return ((_this._getEntryComponentMetadata(type))); })\n                    .concat(entryComponentMetadata);\n            }\n            if (!selector) {\n                selector = this._schemaRegistry.getDefaultComponentElementName();\n            }\n        }\n        else {\n            // Directive\n            if (!selector) {\n                this._reportError(syntaxError(\"Directive \" + stringifyType(directiveType) + \" has no selector, please add it!\"), directiveType);\n                selector = 'error';\n            }\n        }\n        var /** @type {?} */ providers = [];\n        if (dirMeta.providers != null) {\n            providers = this._getProvidersMetadata(dirMeta.providers, entryComponentMetadata, \"providers for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n        }\n        var /** @type {?} */ queries = [];\n        var /** @type {?} */ viewQueries = [];\n        if (dirMeta.queries != null) {\n            queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n            viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n        }\n        var /** @type {?} */ metadata = CompileDirectiveMetadata.create({\n            isHost: false,\n            selector: selector,\n            exportAs: noUndefined(dirMeta.exportAs),\n            isComponent: !!nonNormalizedTemplateMetadata,\n            type: this._getTypeMetadata(directiveType),\n            template: nonNormalizedTemplateMetadata,\n            changeDetection: changeDetectionStrategy,\n            inputs: dirMeta.inputs || [],\n            outputs: dirMeta.outputs || [],\n            host: dirMeta.host || {},\n            providers: providers || [],\n            viewProviders: viewProviders || [],\n            queries: queries || [],\n            viewQueries: viewQueries || [],\n            entryComponents: entryComponentMetadata,\n            componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                null,\n            rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : null,\n            componentFactory: null\n        });\n        if (nonNormalizedTemplateMetadata) {\n            metadata.componentFactory =\n                this.getComponentFactory(selector, directiveType, metadata.inputs, metadata.outputs);\n        }\n        cacheEntry = { metadata: metadata, annotation: dirMeta };\n        this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n        return cacheEntry;\n    };\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveMetadata = function (directiveType) {\n        var /** @type {?} */ dirMeta = ((this._directiveCache.get(directiveType)));\n        if (!dirMeta) {\n            this._reportError(syntaxError(\"Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive \" + stringifyType(directiveType) + \".\"), directiveType);\n        }\n        return dirMeta;\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveSummary = function (dirType) {\n        var /** @type {?} */ dirSummary = (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (!dirSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for directive \" + stringifyType(dirType) + \".\"), dirType);\n        }\n        return dirSummary;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isDirective = function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Directive) ||\n            this._directiveResolver.isDirective(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isPipe = function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Pipe) ||\n            this._pipeResolver.isPipe(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isNgModule = function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.NgModule) ||\n            this._ngModuleResolver.isNgModule(type);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleSummary = function (moduleType) {\n        var /** @type {?} */ moduleSummary = (this._loadSummary(moduleType, CompileSummaryKind.NgModule));\n        if (!moduleSummary) {\n            var /** @type {?} */ moduleMeta = this.getNgModuleMetadata(moduleType, false);\n            moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n            if (moduleSummary) {\n                this._summaryCache.set(moduleType, moduleSummary);\n            }\n        }\n        return moduleSummary;\n    };\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadNgModuleDirectiveAndPipeMetadata = function (moduleType, isSync, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n        var /** @type {?} */ loading = [];\n        if (ngModule) {\n            ngModule.declaredDirectives.forEach(function (id) {\n                var /** @type {?} */ promise = _this.loadDirectiveMetadata(moduleType, id.reference, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            ngModule.declaredPipes.forEach(function (id) { return _this._loadPipeMetadata(id.reference); });\n        }\n        return Promise.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleMetadata = function (moduleType, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        moduleType = _angular_core.resolveForwardRef(moduleType);\n        var /** @type {?} */ compileMeta = this._ngModuleCache.get(moduleType);\n        if (compileMeta) {\n            return compileMeta;\n        }\n        var /** @type {?} */ meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n        if (!meta) {\n            return null;\n        }\n        var /** @type {?} */ declaredDirectives = [];\n        var /** @type {?} */ exportedNonModuleIdentifiers = [];\n        var /** @type {?} */ declaredPipes = [];\n        var /** @type {?} */ importedModules = [];\n        var /** @type {?} */ exportedModules = [];\n        var /** @type {?} */ providers = [];\n        var /** @type {?} */ entryComponents = [];\n        var /** @type {?} */ bootstrapComponents = [];\n        var /** @type {?} */ schemas = [];\n        if (meta.imports) {\n            flattenAndDedupeArray(meta.imports).forEach(function (importedType) {\n                var /** @type {?} */ importedModuleType = ((undefined));\n                if (isValidType(importedType)) {\n                    importedModuleType = importedType;\n                }\n                else if (importedType && importedType.ngModule) {\n                    var /** @type {?} */ moduleWithProviders = importedType;\n                    importedModuleType = moduleWithProviders.ngModule;\n                    if (moduleWithProviders.providers) {\n                        providers.push.apply(providers, _this._getProvidersMetadata(moduleWithProviders.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(importedModuleType) + \"'\", [], importedType));\n                    }\n                }\n                if (importedModuleType) {\n                    if (_this._checkSelfImport(moduleType, importedModuleType))\n                        return;\n                    var /** @type {?} */ importedModuleSummary = _this.getNgModuleSummary(importedModuleType);\n                    if (!importedModuleSummary) {\n                        _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(importedType) + \" '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'. Please add a @NgModule annotation.\"), moduleType);\n                        return;\n                    }\n                    importedModules.push(importedModuleSummary);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n            });\n        }\n        if (meta.exports) {\n            flattenAndDedupeArray(meta.exports).forEach(function (exportedType) {\n                if (!isValidType(exportedType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(exportedType) + \"' exported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ exportedModuleSummary = _this.getNgModuleSummary(exportedType);\n                if (exportedModuleSummary) {\n                    exportedModules.push(exportedModuleSummary);\n                }\n                else {\n                    exportedNonModuleIdentifiers.push(_this._getIdentifierMetadata(exportedType));\n                }\n            });\n        }\n        // Note: This will be modified later, so we rely on\n        // getting a new instance every time!\n        var /** @type {?} */ transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n        if (meta.declarations) {\n            flattenAndDedupeArray(meta.declarations).forEach(function (declaredType) {\n                if (!isValidType(declaredType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ declaredIdentifier = _this._getIdentifierMetadata(declaredType);\n                if (_this.isDirective(declaredType)) {\n                    transitiveModule.addDirective(declaredIdentifier);\n                    declaredDirectives.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else if (_this.isPipe(declaredType)) {\n                    transitiveModule.addPipe(declaredIdentifier);\n                    transitiveModule.pipes.push(declaredIdentifier);\n                    declaredPipes.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(declaredType) + \" '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\"), moduleType);\n                    return;\n                }\n            });\n        }\n        var /** @type {?} */ exportedDirectives = [];\n        var /** @type {?} */ exportedPipes = [];\n        exportedNonModuleIdentifiers.forEach(function (exportedId) {\n            if (transitiveModule.directivesSet.has(exportedId.reference)) {\n                exportedDirectives.push(exportedId);\n                transitiveModule.addExportedDirective(exportedId);\n            }\n            else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n                exportedPipes.push(exportedId);\n                transitiveModule.addExportedPipe(exportedId);\n            }\n            else {\n                _this._reportError(syntaxError(\"Can't export \" + _this._getTypeDescriptor(exportedId.reference) + \" \" + stringifyType(exportedId.reference) + \" from \" + stringifyType(moduleType) + \" as it was neither declared nor imported!\"), moduleType);\n                return;\n            }\n        });\n        // The providers of the module have to go last\n        // so that they overwrite any other provider we already added.\n        if (meta.providers) {\n            providers.push.apply(providers, this._getProvidersMetadata(meta.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(moduleType) + \"'\", [], moduleType));\n        }\n        if (meta.entryComponents) {\n            entryComponents.push.apply(entryComponents, flattenAndDedupeArray(meta.entryComponents)\n                .map(function (type) { return ((_this._getEntryComponentMetadata(type))); }));\n        }\n        if (meta.bootstrap) {\n            flattenAndDedupeArray(meta.bootstrap).forEach(function (type) {\n                if (!isValidType(type)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(type) + \"' used in the bootstrap property of module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                bootstrapComponents.push(_this._getIdentifierMetadata(type));\n            });\n        }\n        entryComponents.push.apply(entryComponents, bootstrapComponents.map(function (type) { return ((_this._getEntryComponentMetadata(type.reference))); }));\n        if (meta.schemas) {\n            schemas.push.apply(schemas, flattenAndDedupeArray(meta.schemas));\n        }\n        compileMeta = new CompileNgModuleMetadata({\n            type: this._getTypeMetadata(moduleType),\n            providers: providers,\n            entryComponents: entryComponents,\n            bootstrapComponents: bootstrapComponents,\n            schemas: schemas,\n            declaredDirectives: declaredDirectives,\n            exportedDirectives: exportedDirectives,\n            declaredPipes: declaredPipes,\n            exportedPipes: exportedPipes,\n            importedModules: importedModules,\n            exportedModules: exportedModules,\n            transitiveModule: transitiveModule,\n            id: meta.id || null,\n        });\n        entryComponents.forEach(function (id) { return transitiveModule.addEntryComponent(id); });\n        providers.forEach(function (provider) { return transitiveModule.addProvider(provider, /** @type {?} */ ((compileMeta)).type); });\n        transitiveModule.addModule(compileMeta.type);\n        this._ngModuleCache.set(moduleType, compileMeta);\n        return compileMeta;\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._checkSelfImport = function (moduleType, importedModuleType) {\n        if (moduleType === importedModuleType) {\n            this._reportError(syntaxError(\"'\" + stringifyType(moduleType) + \"' module can't import itself\"), moduleType);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeDescriptor = function (type) {\n        if (this.isDirective(type)) {\n            return 'directive';\n        }\n        if (this.isPipe(type)) {\n            return 'pipe';\n        }\n        if (this.isNgModule(type)) {\n            return 'module';\n        }\n        if (((type)).provide) {\n            return 'provider';\n        }\n        return 'value';\n    };\n    /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._addTypeToModule = function (type, moduleType) {\n        var /** @type {?} */ oldModule = this._ngModuleOfTypes.get(type);\n        if (oldModule && oldModule !== moduleType) {\n            this._reportError(syntaxError(\"Type \" + stringifyType(type) + \" is part of the declarations of 2 modules: \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \"! \" +\n                (\"Please consider moving \" + stringifyType(type) + \" to a higher module that imports \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \". \") +\n                (\"You can also create a new NgModule that exports and includes \" + stringifyType(type) + \" then import that NgModule in \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \".\")), moduleType);\n            return;\n        }\n        this._ngModuleOfTypes.set(type, moduleType);\n    };\n    /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata = function (importedModules, exportedModules) {\n        // collect `providers` / `entryComponents` from all imported and all exported modules\n        var /** @type {?} */ result = new TransitiveCompileNgModuleMetadata();\n        var /** @type {?} */ modulesByToken = new Map();\n        importedModules.concat(exportedModules).forEach(function (modSummary) {\n            modSummary.modules.forEach(function (mod) { return result.addModule(mod); });\n            modSummary.entryComponents.forEach(function (comp) { return result.addEntryComponent(comp); });\n            var /** @type {?} */ addedTokens = new Set();\n            modSummary.providers.forEach(function (entry) {\n                var /** @type {?} */ tokenRef = tokenReference(entry.provider.token);\n                var /** @type {?} */ prevModules = modulesByToken.get(tokenRef);\n                if (!prevModules) {\n                    prevModules = new Set();\n                    modulesByToken.set(tokenRef, prevModules);\n                }\n                var /** @type {?} */ moduleRef = entry.module.reference;\n                // Note: the providers of one module may still contain multiple providers\n                // per token (e.g. for multi providers), and we need to preserve these.\n                if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n                    prevModules.add(moduleRef);\n                    addedTokens.add(tokenRef);\n                    result.addProvider(entry.provider, entry.module);\n                }\n            });\n        });\n        exportedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addExportedDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addExportedPipe(id); });\n        });\n        importedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addPipe(id); });\n        });\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getIdentifierMetadata = function (type) {\n        type = _angular_core.resolveForwardRef(type);\n        return { reference: type };\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isInjectable = function (type) {\n        var /** @type {?} */ annotations = this._reflector.annotations(type);\n        // Note: We need an exact check here as @Component / @Directive / ... inherit\n        // from @CompilerInjectable!\n        return annotations.some(function (ann) { return ann.constructor === _angular_core.Injectable; });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getInjectableSummary = function (type) {\n        return {\n            summaryKind: CompileSummaryKind.Injectable,\n            type: this._getTypeMetadata(type, null, false)\n        };\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getInjectableMetadata = function (type, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        var /** @type {?} */ typeSummary = this._loadSummary(type, CompileSummaryKind.Injectable);\n        if (typeSummary) {\n            return typeSummary.type;\n        }\n        return this._getTypeMetadata(type, dependencies);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeMetadata = function (type, dependencies, throwOnUnknownDeps) {\n        if (dependencies === void 0) { dependencies = null; }\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ identifier = this._getIdentifierMetadata(type);\n        return {\n            reference: identifier.reference,\n            diDeps: this._getDependenciesMetadata(identifier.reference, dependencies, throwOnUnknownDeps),\n            lifecycleHooks: _angular_core.ɵLIFECYCLE_HOOKS_VALUES.filter(function (hook) { return hasLifecycleHook(hook, identifier.reference); }),\n        };\n    };\n    /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getFactoryMetadata = function (factory, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        factory = _angular_core.resolveForwardRef(factory);\n        return { reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies) };\n    };\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeMetadata = function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            this._reportError(syntaxError(\"Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeMeta || null;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeSummary = function (pipeType) {\n        var /** @type {?} */ pipeSummary = (this._loadSummary(pipeType, CompileSummaryKind.Pipe));\n        if (!pipeSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeSummary;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getOrLoadPipeMetadata = function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            pipeMeta = this._loadPipeMetadata(pipeType);\n        }\n        return pipeMeta;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadPipeMetadata = function (pipeType) {\n        pipeType = _angular_core.resolveForwardRef(pipeType);\n        var /** @type {?} */ pipeAnnotation = ((this._pipeResolver.resolve(pipeType)));\n        var /** @type {?} */ pipeMeta = new CompilePipeMetadata({\n            type: this._getTypeMetadata(pipeType),\n            name: pipeAnnotation.name,\n            pure: !!pipeAnnotation.pure\n        });\n        this._pipeCache.set(pipeType, pipeMeta);\n        this._summaryCache.set(pipeType, pipeMeta.toSummary());\n        return pipeMeta;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getDependenciesMetadata = function (typeOrFunc, dependencies, throwOnUnknownDeps) {\n        var _this = this;\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ hasUnknownDeps = false;\n        var /** @type {?} */ params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n        var /** @type {?} */ dependenciesMetadata = params.map(function (param) {\n            var /** @type {?} */ isAttribute = false;\n            var /** @type {?} */ isHost = false;\n            var /** @type {?} */ isSelf = false;\n            var /** @type {?} */ isSkipSelf = false;\n            var /** @type {?} */ isOptional = false;\n            var /** @type {?} */ token = null;\n            if (Array.isArray(param)) {\n                param.forEach(function (paramEntry) {\n                    if (paramEntry instanceof _angular_core.Host) {\n                        isHost = true;\n                    }\n                    else if (paramEntry instanceof _angular_core.Self) {\n                        isSelf = true;\n                    }\n                    else if (paramEntry instanceof _angular_core.SkipSelf) {\n                        isSkipSelf = true;\n                    }\n                    else if (paramEntry instanceof _angular_core.Optional) {\n                        isOptional = true;\n                    }\n                    else if (paramEntry instanceof _angular_core.Attribute) {\n                        isAttribute = true;\n                        token = paramEntry.attributeName;\n                    }\n                    else if (paramEntry instanceof _angular_core.Inject) {\n                        token = paramEntry.token;\n                    }\n                    else if (paramEntry instanceof _angular_core.InjectionToken) {\n                        token = paramEntry;\n                    }\n                    else if (isValidType(paramEntry) && token == null) {\n                        token = paramEntry;\n                    }\n                });\n            }\n            else {\n                token = param;\n            }\n            if (token == null) {\n                hasUnknownDeps = true;\n                return ((null));\n            }\n            return {\n                isAttribute: isAttribute,\n                isHost: isHost,\n                isSelf: isSelf,\n                isSkipSelf: isSkipSelf,\n                isOptional: isOptional,\n                token: _this._getTokenMetadata(token)\n            };\n        });\n        if (hasUnknownDeps) {\n            var /** @type {?} */ depsTokens = dependenciesMetadata.map(function (dep) { return dep ? stringifyType(dep.token) : '?'; }).join(', ');\n            var /** @type {?} */ message = \"Can't resolve all parameters for \" + stringifyType(typeOrFunc) + \": (\" + depsTokens + \").\";\n            if (throwOnUnknownDeps) {\n                this._reportError(syntaxError(message), typeOrFunc);\n            }\n            else {\n                this._console.warn(\"Warning: \" + message + \" This will become an error in Angular v5.x\");\n            }\n        }\n        return dependenciesMetadata;\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTokenMetadata = function (token) {\n        token = _angular_core.resolveForwardRef(token);\n        var /** @type {?} */ compileToken;\n        if (typeof token === 'string') {\n            compileToken = { value: token };\n        }\n        else {\n            compileToken = { identifier: { reference: token } };\n        }\n        return compileToken;\n    };\n    /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getProvidersMetadata = function (providers, targetEntryComponents, debugInfo, compileProviders, type) {\n        var _this = this;\n        if (compileProviders === void 0) { compileProviders = []; }\n        providers.forEach(function (provider, providerIdx) {\n            if (Array.isArray(provider)) {\n                _this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n            }\n            else {\n                provider = _angular_core.resolveForwardRef(provider);\n                var /** @type {?} */ providerMeta = ((undefined));\n                if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n                    _this._validateProvider(provider);\n                    providerMeta = new ProviderMeta(provider.provide, provider);\n                }\n                else if (isValidType(provider)) {\n                    providerMeta = new ProviderMeta(provider, { useClass: provider });\n                }\n                else if (provider === void 0) {\n                    _this._reportError(syntaxError(\"Encountered undefined provider! Usually this means you have a circular dependencies (might be caused by using 'barrel' index.ts files.\"));\n                    return;\n                }\n                else {\n                    var /** @type {?} */ providersInfo = ((providers.reduce(function (soFar, seenProvider, seenProviderIdx) {\n                        if (seenProviderIdx < providerIdx) {\n                            soFar.push(\"\" + stringifyType(seenProvider));\n                        }\n                        else if (seenProviderIdx == providerIdx) {\n                            soFar.push(\"?\" + stringifyType(seenProvider) + \"?\");\n                        }\n                        else if (seenProviderIdx == providerIdx + 1) {\n                            soFar.push('...');\n                        }\n                        return soFar;\n                    }, [])))\n                        .join(', ');\n                    _this._reportError(syntaxError(\"Invalid \" + (debugInfo ? debugInfo : 'provider') + \" - only instances of Provider and Type are allowed, got: [\" + providersInfo + \"]\"), type);\n                    return;\n                }\n                if (providerMeta.token === resolveIdentifier(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n                    targetEntryComponents.push.apply(targetEntryComponents, _this._getEntryComponentsFromProvider(providerMeta, type));\n                }\n                else {\n                    compileProviders.push(_this.getProviderMetadata(providerMeta));\n                }\n            }\n        });\n        return compileProviders;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._validateProvider = function (provider) {\n        if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n            this._reportError(syntaxError(\"Invalid provider for \" + stringifyType(provider.provide) + \". useClass cannot be \" + provider.useClass + \".\\n           Usually it happens when:\\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\\n           2. Class was used before it was declared. Use forwardRef in this case.\"));\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentsFromProvider = function (provider, type) {\n        var _this = this;\n        var /** @type {?} */ components = [];\n        var /** @type {?} */ collectedIdentifiers = [];\n        if (provider.useFactory || provider.useExisting || provider.useClass) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!\"), type);\n            return [];\n        }\n        if (!provider.multi) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!\"), type);\n            return [];\n        }\n        extractIdentifiers(provider.useValue, collectedIdentifiers);\n        collectedIdentifiers.forEach(function (identifier) {\n            var /** @type {?} */ entry = _this._getEntryComponentMetadata(identifier.reference, false);\n            if (entry) {\n                components.push(entry);\n            }\n        });\n        return components;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentMetadata = function (dirType, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n        if (dirMeta && dirMeta.metadata.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirMeta.metadata.componentFactory)) };\n        }\n        var /** @type {?} */ dirSummary = (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (dirSummary && dirSummary.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirSummary.componentFactory)) };\n        }\n        if (throwIfNotFound) {\n            throw syntaxError(dirType.name + \" cannot be used as an entry component.\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getProviderMetadata = function (provider) {\n        var /** @type {?} */ compileDeps = ((undefined));\n        var /** @type {?} */ compileTypeMetadata = ((null));\n        var /** @type {?} */ compileFactoryMetadata = ((null));\n        var /** @type {?} */ token = this._getTokenMetadata(provider.token);\n        if (provider.useClass) {\n            compileTypeMetadata = this._getInjectableMetadata(provider.useClass, provider.dependencies);\n            compileDeps = compileTypeMetadata.diDeps;\n            if (provider.token === provider.useClass) {\n                // use the compileTypeMetadata as it contains information about lifecycleHooks...\n                token = { identifier: compileTypeMetadata };\n            }\n        }\n        else if (provider.useFactory) {\n            compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n            compileDeps = compileFactoryMetadata.diDeps;\n        }\n        return {\n            token: token,\n            useClass: compileTypeMetadata,\n            useValue: provider.useValue,\n            useFactory: compileFactoryMetadata,\n            useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : undefined,\n            deps: compileDeps,\n            multi: provider.multi\n        };\n    };\n    /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueriesMetadata = function (queries, isViewQuery, directiveType) {\n        var _this = this;\n        var /** @type {?} */ res = [];\n        Object.keys(queries).forEach(function (propertyName) {\n            var /** @type {?} */ query = queries[propertyName];\n            if (query.isViewQuery === isViewQuery) {\n                res.push(_this._getQueryMetadata(query, propertyName, directiveType));\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._queryVarBindings = function (selector) { return selector.split(/\\s*,\\s*/); };\n    /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueryMetadata = function (q, propertyName, typeOrFunc) {\n        var _this = this;\n        var /** @type {?} */ selectors;\n        if (typeof q.selector === 'string') {\n            selectors =\n                this._queryVarBindings(q.selector).map(function (varName) { return _this._getTokenMetadata(varName); });\n        }\n        else {\n            if (!q.selector) {\n                this._reportError(syntaxError(\"Can't construct a query for the property \\\"\" + propertyName + \"\\\" of \\\"\" + stringifyType(typeOrFunc) + \"\\\" since the query selector wasn't defined.\"), typeOrFunc);\n                selectors = [];\n            }\n            else {\n                selectors = [this._getTokenMetadata(q.selector)];\n            }\n        }\n        return {\n            selectors: selectors,\n            first: q.first,\n            descendants: q.descendants, propertyName: propertyName,\n            read: q.read ? this._getTokenMetadata(q.read) : ((null))\n        };\n    };\n    /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._reportError = function (error, type, otherType) {\n        if (this._errorCollector) {\n            this._errorCollector(error, type);\n            if (otherType) {\n                this._errorCollector(error, otherType);\n            }\n        }\n        else {\n            throw error;\n        }\n    };\n    return CompileMetadataResolver;\n}());\nCompileMetadataResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nCompileMetadataResolver.ctorParameters = function () { return [\n    { type: CompilerConfig, },\n    { type: NgModuleResolver, },\n    { type: DirectiveResolver, },\n    { type: PipeResolver, },\n    { type: SummaryResolver, },\n    { type: ElementSchemaRegistry, },\n    { type: DirectiveNormalizer, },\n    { type: _angular_core.ɵConsole, },\n    { type: StaticSymbolCache, decorators: [{ type: _angular_core.Optional },] },\n    { type: _angular_core.ɵReflectorReader, },\n    { type: undefined, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [ERROR_COLLECTOR_TOKEN,] },] },\n]; };\n/**\n * @param {?} tree\n * @param {?=} out\n * @return {?}\n */\nfunction flattenArray(tree, out) {\n    if (out === void 0) { out = []; }\n    if (tree) {\n        for (var /** @type {?} */ i = 0; i < tree.length; i++) {\n            var /** @type {?} */ item = _angular_core.resolveForwardRef(tree[i]);\n            if (Array.isArray(item)) {\n                flattenArray(item, out);\n            }\n            else {\n                out.push(item);\n            }\n        }\n    }\n    return out;\n}\n/**\n * @param {?} array\n * @return {?}\n */\nfunction dedupeArray(array) {\n    if (array) {\n        return Array.from(new Set(array));\n    }\n    return [];\n}\n/**\n * @param {?} tree\n * @return {?}\n */\nfunction flattenAndDedupeArray(tree) {\n    return dedupeArray(flattenArray(tree));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValidType(value) {\n    return (value instanceof StaticSymbol) || (value instanceof _angular_core.Type);\n}\n/**\n * @param {?} reflector\n * @param {?} type\n * @param {?} cmpMetadata\n * @return {?}\n */\nfunction componentModuleUrl(reflector, type, cmpMetadata) {\n    if (type instanceof StaticSymbol) {\n        return reflector.resourceUri(type);\n    }\n    var /** @type {?} */ moduleId = cmpMetadata.moduleId;\n    if (typeof moduleId === 'string') {\n        var /** @type {?} */ scheme = getUrlScheme(moduleId);\n        return scheme ? moduleId : \"package:\" + moduleId + MODULE_SUFFIX;\n    }\n    else if (moduleId !== null && moduleId !== void 0) {\n        throw syntaxError(\"moduleId should be a string in \\\"\" + stringifyType(type) + \"\\\". See https://goo.gl/wIDDiL for more information.\\n\" +\n            \"If you're using Webpack you should inline the template and the styles, see https://goo.gl/X2J8zc.\");\n    }\n    return ((reflector.importUri(type)));\n}\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nfunction extractIdentifiers(value, targetIdentifiers) {\n    visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\nvar _CompileValueConverter = (function (_super) {\n    __extends(_CompileValueConverter, _super);\n    function _CompileValueConverter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    _CompileValueConverter.prototype.visitOther = function (value, targetIdentifiers) {\n        targetIdentifiers.push({ reference: value });\n    };\n    return _CompileValueConverter;\n}(ValueTransformer));\n/**\n * @param {?} type\n * @return {?}\n */\nfunction stringifyType(type) {\n    if (type instanceof StaticSymbol) {\n        return type.name + \" in \" + type.filePath;\n    }\n    else {\n        return _angular_core.ɵstringify(type);\n    }\n}\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n * @param {?} compType\n * @return {?}\n */\nfunction componentStillLoadingError(compType) {\n    var /** @type {?} */ error = Error(\"Can't compile synchronously as \" + _angular_core.ɵstringify(compType) + \" is still being loaded!\");\n    ((error))[_angular_core.ɵERROR_COMPONENT_TYPE] = compType;\n    return error;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TypeModifier = {};\nTypeModifier.Const = 0;\nTypeModifier[TypeModifier.Const] = \"Const\";\n/**\n * @abstract\n */\nvar Type$1 = (function () {\n    /**\n     * @param {?=} modifiers\n     */\n    function Type$1(modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n    }\n    /**\n     * @abstract\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Type$1.prototype.visitType = function (visitor, context) { };\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Type$1.prototype.hasModifier = function (modifier) { return ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Type$1;\n}());\nvar BuiltinTypeName = {};\nBuiltinTypeName.Dynamic = 0;\nBuiltinTypeName.Bool = 1;\nBuiltinTypeName.String = 2;\nBuiltinTypeName.Int = 3;\nBuiltinTypeName.Number = 4;\nBuiltinTypeName.Function = 5;\nBuiltinTypeName.Inferred = 6;\nBuiltinTypeName[BuiltinTypeName.Dynamic] = \"Dynamic\";\nBuiltinTypeName[BuiltinTypeName.Bool] = \"Bool\";\nBuiltinTypeName[BuiltinTypeName.String] = \"String\";\nBuiltinTypeName[BuiltinTypeName.Int] = \"Int\";\nBuiltinTypeName[BuiltinTypeName.Number] = \"Number\";\nBuiltinTypeName[BuiltinTypeName.Function] = \"Function\";\nBuiltinTypeName[BuiltinTypeName.Inferred] = \"Inferred\";\nvar BuiltinType = (function (_super) {\n    __extends(BuiltinType, _super);\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     */\n    function BuiltinType(name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BuiltinType.prototype.visitType = function (visitor, context) {\n        return visitor.visitBuiltintType(this, context);\n    };\n    return BuiltinType;\n}(Type$1));\nvar ExpressionType = (function (_super) {\n    __extends(ExpressionType, _super);\n    /**\n     * @param {?} value\n     * @param {?=} modifiers\n     */\n    function ExpressionType(value, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionType.prototype.visitType = function (visitor, context) {\n        return visitor.visitExpressionType(this, context);\n    };\n    return ExpressionType;\n}(Type$1));\nvar ArrayType = (function (_super) {\n    __extends(ArrayType, _super);\n    /**\n     * @param {?} of\n     * @param {?=} modifiers\n     */\n    function ArrayType(of, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.of = of;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ArrayType.prototype.visitType = function (visitor, context) {\n        return visitor.visitArrayType(this, context);\n    };\n    return ArrayType;\n}(Type$1));\nvar MapType = (function (_super) {\n    __extends(MapType, _super);\n    /**\n     * @param {?} valueType\n     * @param {?=} modifiers\n     */\n    function MapType(valueType, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.valueType = valueType || null;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    MapType.prototype.visitType = function (visitor, context) { return visitor.visitMapType(this, context); };\n    return MapType;\n}(Type$1));\nvar DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\nvar INFERRED_TYPE = new BuiltinType(BuiltinTypeName.Inferred);\nvar BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\nvar INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\nvar NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\nvar STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\nvar FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\nvar BinaryOperator = {};\nBinaryOperator.Equals = 0;\nBinaryOperator.NotEquals = 1;\nBinaryOperator.Identical = 2;\nBinaryOperator.NotIdentical = 3;\nBinaryOperator.Minus = 4;\nBinaryOperator.Plus = 5;\nBinaryOperator.Divide = 6;\nBinaryOperator.Multiply = 7;\nBinaryOperator.Modulo = 8;\nBinaryOperator.And = 9;\nBinaryOperator.Or = 10;\nBinaryOperator.Lower = 11;\nBinaryOperator.LowerEquals = 12;\nBinaryOperator.Bigger = 13;\nBinaryOperator.BiggerEquals = 14;\nBinaryOperator[BinaryOperator.Equals] = \"Equals\";\nBinaryOperator[BinaryOperator.NotEquals] = \"NotEquals\";\nBinaryOperator[BinaryOperator.Identical] = \"Identical\";\nBinaryOperator[BinaryOperator.NotIdentical] = \"NotIdentical\";\nBinaryOperator[BinaryOperator.Minus] = \"Minus\";\nBinaryOperator[BinaryOperator.Plus] = \"Plus\";\nBinaryOperator[BinaryOperator.Divide] = \"Divide\";\nBinaryOperator[BinaryOperator.Multiply] = \"Multiply\";\nBinaryOperator[BinaryOperator.Modulo] = \"Modulo\";\nBinaryOperator[BinaryOperator.And] = \"And\";\nBinaryOperator[BinaryOperator.Or] = \"Or\";\nBinaryOperator[BinaryOperator.Lower] = \"Lower\";\nBinaryOperator[BinaryOperator.LowerEquals] = \"LowerEquals\";\nBinaryOperator[BinaryOperator.Bigger] = \"Bigger\";\nBinaryOperator[BinaryOperator.BiggerEquals] = \"BiggerEquals\";\n/**\n * @abstract\n */\nvar Expression = (function () {\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     */\n    function Expression(type, sourceSpan) {\n        this.type = type || null;\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @abstract\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Expression.prototype.visitExpression = function (visitor, context) { };\n    /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.prop = function (name, sourceSpan) {\n        return new ReadPropExpr(this, name, null, sourceSpan);\n    };\n    /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.key = function (index, type, sourceSpan) {\n        return new ReadKeyExpr(this, index, type, sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callMethod = function (name, params, sourceSpan) {\n        return new InvokeMethodExpr(this, name, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callFn = function (params, sourceSpan) {\n        return new InvokeFunctionExpr(this, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.instantiate = function (params, type, sourceSpan) {\n        return new InstantiateExpr(this, params, type, sourceSpan);\n    };\n    /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.conditional = function (trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        return new ConditionalExpr(this, trueCase, falseCase, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.equals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notEquals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.identical = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notIdentical = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.minus = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.plus = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.divide = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.multiply = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.modulo = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.and = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.And, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.or = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lower = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lowerEquals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.bigger = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.biggerEquals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.isBlank = function (sourceSpan) {\n        // Note: We use equals by purpose here to compare to null and undefined in JS.\n        // We use the typed null to allow strictNullChecks to narrow types.\n        return this.equals(TYPED_NULL_EXPR, sourceSpan);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.cast = function (type, sourceSpan) {\n        return new CastExpr(this, type, sourceSpan);\n    };\n    /**\n     * @return {?}\n     */\n    Expression.prototype.toStmt = function () { return new ExpressionStatement(this, null); };\n    return Expression;\n}());\nvar BuiltinVar = {};\nBuiltinVar.This = 0;\nBuiltinVar.Super = 1;\nBuiltinVar.CatchError = 2;\nBuiltinVar.CatchStack = 3;\nBuiltinVar[BuiltinVar.This] = \"This\";\nBuiltinVar[BuiltinVar.Super] = \"Super\";\nBuiltinVar[BuiltinVar.CatchError] = \"CatchError\";\nBuiltinVar[BuiltinVar.CatchStack] = \"CatchStack\";\nvar ReadVarExpr = (function (_super) {\n    __extends(ReadVarExpr, _super);\n    /**\n     * @param {?} name\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function ReadVarExpr(name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        if (typeof name === 'string') {\n            _this.name = name;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = name;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadVarExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitReadVarExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadVarExpr.prototype.set = function (value) {\n        if (!this.name) {\n            throw new Error(\"Built in variable \" + this.builtin + \" can not be assigned to.\");\n        }\n        return new WriteVarExpr(this.name, value, null, this.sourceSpan);\n    };\n    return ReadVarExpr;\n}(Expression));\nvar WriteVarExpr = (function (_super) {\n    __extends(WriteVarExpr, _super);\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function WriteVarExpr(name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteVarExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWriteVarExpr(this, context);\n    };\n    /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    WriteVarExpr.prototype.toDeclStmt = function (type, modifiers) {\n        return new DeclareVarStmt(this.name, this.value, type, modifiers, this.sourceSpan);\n    };\n    return WriteVarExpr;\n}(Expression));\nvar WriteKeyExpr = (function (_super) {\n    __extends(WriteKeyExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} index\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function WriteKeyExpr(receiver, index, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWriteKeyExpr(this, context);\n    };\n    return WriteKeyExpr;\n}(Expression));\nvar WritePropExpr = (function (_super) {\n    __extends(WritePropExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function WritePropExpr(receiver, name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WritePropExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWritePropExpr(this, context);\n    };\n    return WritePropExpr;\n}(Expression));\nvar BuiltinMethod = {};\nBuiltinMethod.ConcatArray = 0;\nBuiltinMethod.SubscribeObservable = 1;\nBuiltinMethod.Bind = 2;\nBuiltinMethod[BuiltinMethod.ConcatArray] = \"ConcatArray\";\nBuiltinMethod[BuiltinMethod.SubscribeObservable] = \"SubscribeObservable\";\nBuiltinMethod[BuiltinMethod.Bind] = \"Bind\";\nvar InvokeMethodExpr = (function (_super) {\n    __extends(InvokeMethodExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} method\n     * @param {?} args\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function InvokeMethodExpr(receiver, method, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.args = args;\n        if (typeof method === 'string') {\n            _this.name = method;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = method;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitInvokeMethodExpr(this, context);\n    };\n    return InvokeMethodExpr;\n}(Expression));\nvar InvokeFunctionExpr = (function (_super) {\n    __extends(InvokeFunctionExpr, _super);\n    /**\n     * @param {?} fn\n     * @param {?} args\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function InvokeFunctionExpr(fn, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.fn = fn;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitInvokeFunctionExpr(this, context);\n    };\n    return InvokeFunctionExpr;\n}(Expression));\nvar InstantiateExpr = (function (_super) {\n    __extends(InstantiateExpr, _super);\n    /**\n     * @param {?} classExpr\n     * @param {?} args\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function InstantiateExpr(classExpr, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.classExpr = classExpr;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InstantiateExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitInstantiateExpr(this, context);\n    };\n    return InstantiateExpr;\n}(Expression));\nvar LiteralExpr = (function (_super) {\n    __extends(LiteralExpr, _super);\n    /**\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function LiteralExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitLiteralExpr(this, context);\n    };\n    return LiteralExpr;\n}(Expression));\nvar ExternalExpr = (function (_super) {\n    __extends(ExternalExpr, _super);\n    /**\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} typeParams\n     * @param {?=} sourceSpan\n     */\n    function ExternalExpr(value, type, typeParams, sourceSpan) {\n        if (typeParams === void 0) { typeParams = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        _this.typeParams = typeParams;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExternalExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitExternalExpr(this, context);\n    };\n    return ExternalExpr;\n}(Expression));\nvar ConditionalExpr = (function (_super) {\n    __extends(ConditionalExpr, _super);\n    /**\n     * @param {?} condition\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function ConditionalExpr(condition, trueCase, falseCase, type, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        var _this = _super.call(this, type || trueCase.type, sourceSpan) || this;\n        _this.condition = condition;\n        _this.falseCase = falseCase;\n        _this.trueCase = trueCase;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ConditionalExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitConditionalExpr(this, context);\n    };\n    return ConditionalExpr;\n}(Expression));\nvar NotExpr = (function (_super) {\n    __extends(NotExpr, _super);\n    /**\n     * @param {?} condition\n     * @param {?=} sourceSpan\n     */\n    function NotExpr(condition, sourceSpan) {\n        var _this = _super.call(this, BOOL_TYPE, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NotExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitNotExpr(this, context);\n    };\n    return NotExpr;\n}(Expression));\nvar CastExpr = (function (_super) {\n    __extends(CastExpr, _super);\n    /**\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function CastExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CastExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitCastExpr(this, context);\n    };\n    return CastExpr;\n}(Expression));\nvar FnParam = (function () {\n    /**\n     * @param {?} name\n     * @param {?=} type\n     */\n    function FnParam(name, type) {\n        if (type === void 0) { type = null; }\n        this.name = name;\n        this.type = type;\n    }\n    return FnParam;\n}());\nvar FunctionExpr = (function (_super) {\n    __extends(FunctionExpr, _super);\n    /**\n     * @param {?} params\n     * @param {?} statements\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function FunctionExpr(params, statements, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.params = params;\n        _this.statements = statements;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    FunctionExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitFunctionExpr(this, context);\n    };\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    FunctionExpr.prototype.toDeclStmt = function (name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers, this.sourceSpan);\n    };\n    return FunctionExpr;\n}(Expression));\nvar BinaryOperatorExpr = (function (_super) {\n    __extends(BinaryOperatorExpr, _super);\n    /**\n     * @param {?} operator\n     * @param {?} lhs\n     * @param {?} rhs\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function BinaryOperatorExpr(operator, lhs, rhs, type, sourceSpan) {\n        var _this = _super.call(this, type || lhs.type, sourceSpan) || this;\n        _this.operator = operator;\n        _this.rhs = rhs;\n        _this.lhs = lhs;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitBinaryOperatorExpr(this, context);\n    };\n    return BinaryOperatorExpr;\n}(Expression));\nvar ReadPropExpr = (function (_super) {\n    __extends(ReadPropExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function ReadPropExpr(receiver, name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadPropExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitReadPropExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadPropExpr.prototype.set = function (value) {\n        return new WritePropExpr(this.receiver, this.name, value, null, this.sourceSpan);\n    };\n    return ReadPropExpr;\n}(Expression));\nvar ReadKeyExpr = (function (_super) {\n    __extends(ReadKeyExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function ReadKeyExpr(receiver, index, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitReadKeyExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.set = function (value) {\n        return new WriteKeyExpr(this.receiver, this.index, value, null, this.sourceSpan);\n    };\n    return ReadKeyExpr;\n}(Expression));\nvar LiteralArrayExpr = (function (_super) {\n    __extends(LiteralArrayExpr, _super);\n    /**\n     * @param {?} entries\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function LiteralArrayExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitLiteralArrayExpr(this, context);\n    };\n    return LiteralArrayExpr;\n}(Expression));\nvar LiteralMapEntry = (function () {\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @param {?=} quoted\n     */\n    function LiteralMapEntry(key, value, quoted) {\n        if (quoted === void 0) { quoted = false; }\n        this.key = key;\n        this.value = value;\n        this.quoted = quoted;\n    }\n    return LiteralMapEntry;\n}());\nvar LiteralMapExpr = (function (_super) {\n    __extends(LiteralMapExpr, _super);\n    /**\n     * @param {?} entries\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function LiteralMapExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        _this.valueType = null;\n        if (type) {\n            _this.valueType = type.valueType;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitLiteralMapExpr(this, context);\n    };\n    return LiteralMapExpr;\n}(Expression));\nvar CommaExpr = (function (_super) {\n    __extends(CommaExpr, _super);\n    /**\n     * @param {?} parts\n     * @param {?=} sourceSpan\n     */\n    function CommaExpr(parts, sourceSpan) {\n        var _this = _super.call(this, parts[parts.length - 1].type, sourceSpan) || this;\n        _this.parts = parts;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommaExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitCommaExpr(this, context);\n    };\n    return CommaExpr;\n}(Expression));\nvar THIS_EXPR = new ReadVarExpr(BuiltinVar.This, null, null);\nvar SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super, null, null);\nvar CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError, null, null);\nvar CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack, null, null);\nvar NULL_EXPR = new LiteralExpr(null, null, null);\nvar TYPED_NULL_EXPR = new LiteralExpr(null, INFERRED_TYPE, null);\nvar StmtModifier = {};\nStmtModifier.Final = 0;\nStmtModifier.Private = 1;\nStmtModifier[StmtModifier.Final] = \"Final\";\nStmtModifier[StmtModifier.Private] = \"Private\";\n/**\n * @abstract\n */\nvar Statement = (function () {\n    /**\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    function Statement(modifiers, sourceSpan) {\n        this.modifiers = modifiers || [];\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @abstract\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Statement.prototype.visitStatement = function (visitor, context) { };\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Statement.prototype.hasModifier = function (modifier) { return ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Statement;\n}());\nvar DeclareVarStmt = (function (_super) {\n    __extends(DeclareVarStmt, _super);\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    function DeclareVarStmt(name, value, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        _this.type = type || value.type;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitDeclareVarStmt(this, context);\n    };\n    return DeclareVarStmt;\n}(Statement));\nvar DeclareFunctionStmt = (function (_super) {\n    __extends(DeclareFunctionStmt, _super);\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?} statements\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    function DeclareFunctionStmt(name, params, statements, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.statements = statements;\n        _this.type = type || null;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitDeclareFunctionStmt(this, context);\n    };\n    return DeclareFunctionStmt;\n}(Statement));\nvar ExpressionStatement = (function (_super) {\n    __extends(ExpressionStatement, _super);\n    /**\n     * @param {?} expr\n     * @param {?=} sourceSpan\n     */\n    function ExpressionStatement(expr, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.expr = expr;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionStatement.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitExpressionStmt(this, context);\n    };\n    return ExpressionStatement;\n}(Statement));\nvar ReturnStatement = (function (_super) {\n    __extends(ReturnStatement, _super);\n    /**\n     * @param {?} value\n     * @param {?=} sourceSpan\n     */\n    function ReturnStatement(value, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReturnStatement.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitReturnStmt(this, context);\n    };\n    return ReturnStatement;\n}(Statement));\nvar AbstractClassPart = (function () {\n    /**\n     * @param {?} type\n     * @param {?} modifiers\n     */\n    function AbstractClassPart(type, modifiers) {\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n        this.type = type || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    AbstractClassPart.prototype.hasModifier = function (modifier) { return ((this.modifiers)).indexOf(modifier) !== -1; };\n    return AbstractClassPart;\n}());\nvar ClassField = (function (_super) {\n    __extends(ClassField, _super);\n    /**\n     * @param {?} name\n     * @param {?=} type\n     * @param {?=} modifiers\n     */\n    function ClassField(name, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    return ClassField;\n}(AbstractClassPart));\nvar ClassMethod = (function (_super) {\n    __extends(ClassMethod, _super);\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?} body\n     * @param {?=} type\n     * @param {?=} modifiers\n     */\n    function ClassMethod(name, params, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.body = body;\n        return _this;\n    }\n    return ClassMethod;\n}(AbstractClassPart));\nvar ClassGetter = (function (_super) {\n    __extends(ClassGetter, _super);\n    /**\n     * @param {?} name\n     * @param {?} body\n     * @param {?=} type\n     * @param {?=} modifiers\n     */\n    function ClassGetter(name, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.body = body;\n        return _this;\n    }\n    return ClassGetter;\n}(AbstractClassPart));\nvar ClassStmt = (function (_super) {\n    __extends(ClassStmt, _super);\n    /**\n     * @param {?} name\n     * @param {?} parent\n     * @param {?} fields\n     * @param {?} getters\n     * @param {?} constructorMethod\n     * @param {?} methods\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    function ClassStmt(name, parent, fields, getters, constructorMethod, methods, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.parent = parent;\n        _this.fields = fields;\n        _this.getters = getters;\n        _this.constructorMethod = constructorMethod;\n        _this.methods = methods;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ClassStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitDeclareClassStmt(this, context);\n    };\n    return ClassStmt;\n}(Statement));\nvar IfStmt = (function (_super) {\n    __extends(IfStmt, _super);\n    /**\n     * @param {?} condition\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     */\n    function IfStmt(condition, trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = []; }\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.condition = condition;\n        _this.trueCase = trueCase;\n        _this.falseCase = falseCase;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    IfStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitIfStmt(this, context);\n    };\n    return IfStmt;\n}(Statement));\nvar TryCatchStmt = (function (_super) {\n    __extends(TryCatchStmt, _super);\n    /**\n     * @param {?} bodyStmts\n     * @param {?} catchStmts\n     * @param {?=} sourceSpan\n     */\n    function TryCatchStmt(bodyStmts, catchStmts, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.bodyStmts = bodyStmts;\n        _this.catchStmts = catchStmts;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TryCatchStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitTryCatchStmt(this, context);\n    };\n    return TryCatchStmt;\n}(Statement));\nvar ThrowStmt = (function (_super) {\n    __extends(ThrowStmt, _super);\n    /**\n     * @param {?} error\n     * @param {?=} sourceSpan\n     */\n    function ThrowStmt(error, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.error = error;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ThrowStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitThrowStmt(this, context);\n    };\n    return ThrowStmt;\n}(Statement));\nvar AstTransformer$1 = (function () {\n    function AstTransformer$1() {\n    }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.transformExpr = function (expr, context) { return expr; };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.transformStmt = function (stmt, context) { return stmt; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitReadVarExpr = function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitWriteVarExpr = function (expr, context) {\n        return this.transformExpr(new WriteVarExpr(expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitWriteKeyExpr = function (expr, context) {\n        return this.transformExpr(new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitWritePropExpr = function (expr, context) {\n        return this.transformExpr(new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitInvokeMethodExpr = function (ast, context) {\n        var /** @type {?} */ method = ast.builtin || ast.name;\n        return this.transformExpr(new InvokeMethodExpr(ast.receiver.visitExpression(this, context), /** @type {?} */ ((method)), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitInvokeFunctionExpr = function (ast, context) {\n        return this.transformExpr(new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitInstantiateExpr = function (ast, context) {\n        return this.transformExpr(new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitLiteralExpr = function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitExternalExpr = function (ast, context) {\n        return this.transformExpr(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitConditionalExpr = function (ast, context) {\n        return this.transformExpr(new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), /** @type {?} */ ((ast.falseCase)).visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitNotExpr = function (ast, context) {\n        return this.transformExpr(new NotExpr(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitCastExpr = function (ast, context) {\n        return this.transformExpr(new CastExpr(ast.value.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitFunctionExpr = function (ast, context) {\n        return this.transformExpr(new FunctionExpr(ast.params, this.visitAllStatements(ast.statements, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitBinaryOperatorExpr = function (ast, context) {\n        return this.transformExpr(new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitReadPropExpr = function (ast, context) {\n        return this.transformExpr(new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitReadKeyExpr = function (ast, context) {\n        return this.transformExpr(new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitLiteralArrayExpr = function (ast, context) {\n        return this.transformExpr(new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitLiteralMapExpr = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ entries = ast.entries.map(function (entry) { return new LiteralMapEntry(entry.key, entry.value.visitExpression(_this, context), entry.quoted); });\n        var /** @type {?} */ mapType = new MapType(ast.valueType, null);\n        return this.transformExpr(new LiteralMapExpr(entries, mapType, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitCommaExpr = function (ast, context) {\n        return this.transformExpr(new CommaExpr(this.visitAllExpressions(ast.parts, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitAllExpressions = function (exprs, context) {\n        var _this = this;\n        return exprs.map(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitDeclareVarStmt = function (stmt, context) {\n        return this.transformStmt(new DeclareVarStmt(stmt.name, stmt.value.visitExpression(this, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n        return this.transformStmt(new DeclareFunctionStmt(stmt.name, stmt.params, this.visitAllStatements(stmt.statements, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitExpressionStmt = function (stmt, context) {\n        return this.transformStmt(new ExpressionStatement(stmt.expr.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitReturnStmt = function (stmt, context) {\n        return this.transformStmt(new ReturnStatement(stmt.value.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitDeclareClassStmt = function (stmt, context) {\n        var _this = this;\n        var /** @type {?} */ parent = ((stmt.parent)).visitExpression(this, context);\n        var /** @type {?} */ getters = stmt.getters.map(function (getter) { return new ClassGetter(getter.name, _this.visitAllStatements(getter.body, context), getter.type, getter.modifiers); });\n        var /** @type {?} */ ctorMethod = stmt.constructorMethod &&\n            new ClassMethod(stmt.constructorMethod.name, stmt.constructorMethod.params, this.visitAllStatements(stmt.constructorMethod.body, context), stmt.constructorMethod.type, stmt.constructorMethod.modifiers);\n        var /** @type {?} */ methods = stmt.methods.map(function (method) { return new ClassMethod(method.name, method.params, _this.visitAllStatements(method.body, context), method.type, method.modifiers); });\n        return this.transformStmt(new ClassStmt(stmt.name, parent, stmt.fields, getters, ctorMethod, methods, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitIfStmt = function (stmt, context) {\n        return this.transformStmt(new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitTryCatchStmt = function (stmt, context) {\n        return this.transformStmt(new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitThrowStmt = function (stmt, context) {\n        return this.transformStmt(new ThrowStmt(stmt.error.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitCommentStmt = function (stmt, context) {\n        return this.transformStmt(stmt, context);\n    };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitAllStatements = function (stmts, context) {\n        var _this = this;\n        return stmts.map(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return AstTransformer$1;\n}());\nvar RecursiveAstVisitor$1 = (function () {\n    function RecursiveAstVisitor$1() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitReadVarExpr = function (ast, context) { return ast; };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitWriteVarExpr = function (expr, context) {\n        expr.value.visitExpression(this, context);\n        return expr;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitWriteKeyExpr = function (expr, context) {\n        expr.receiver.visitExpression(this, context);\n        expr.index.visitExpression(this, context);\n        expr.value.visitExpression(this, context);\n        return expr;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitWritePropExpr = function (expr, context) {\n        expr.receiver.visitExpression(this, context);\n        expr.value.visitExpression(this, context);\n        return expr;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitInvokeMethodExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitInvokeFunctionExpr = function (ast, context) {\n        ast.fn.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitInstantiateExpr = function (ast, context) {\n        ast.classExpr.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitLiteralExpr = function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitExternalExpr = function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitConditionalExpr = function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        ast.trueCase.visitExpression(this, context); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitNotExpr = function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitCastExpr = function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitFunctionExpr = function (ast, context) {\n        this.visitAllStatements(ast.statements, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitBinaryOperatorExpr = function (ast, context) {\n        ast.lhs.visitExpression(this, context);\n        ast.rhs.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitReadPropExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitReadKeyExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitLiteralArrayExpr = function (ast, context) {\n        this.visitAllExpressions(ast.entries, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitLiteralMapExpr = function (ast, context) {\n        var _this = this;\n        ast.entries.forEach(function (entry) { return entry.value.visitExpression(_this, context); });\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitCommaExpr = function (ast, context) {\n        this.visitAllExpressions(ast.parts, context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitAllExpressions = function (exprs, context) {\n        var _this = this;\n        exprs.forEach(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitDeclareVarStmt = function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n        this.visitAllStatements(stmt.statements, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitExpressionStmt = function (stmt, context) {\n        stmt.expr.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitReturnStmt = function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitDeclareClassStmt = function (stmt, context) {\n        var _this = this;\n        ((stmt.parent)).visitExpression(this, context);\n        stmt.getters.forEach(function (getter) { return _this.visitAllStatements(getter.body, context); });\n        if (stmt.constructorMethod) {\n            this.visitAllStatements(stmt.constructorMethod.body, context);\n        }\n        stmt.methods.forEach(function (method) { return _this.visitAllStatements(method.body, context); });\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitIfStmt = function (stmt, context) {\n        stmt.condition.visitExpression(this, context);\n        this.visitAllStatements(stmt.trueCase, context);\n        this.visitAllStatements(stmt.falseCase, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitTryCatchStmt = function (stmt, context) {\n        this.visitAllStatements(stmt.bodyStmts, context);\n        this.visitAllStatements(stmt.catchStmts, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitThrowStmt = function (stmt, context) {\n        stmt.error.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitCommentStmt = function (stmt, context) { return stmt; };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitAllStatements = function (stmts, context) {\n        var _this = this;\n        stmts.forEach(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return RecursiveAstVisitor$1;\n}());\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction findReadVarNames(stmts) {\n    var /** @type {?} */ visitor = new _ReadVarVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.varNames;\n}\nvar _ReadVarVisitor = (function (_super) {\n    __extends(_ReadVarVisitor, _super);\n    function _ReadVarVisitor() {\n        var _this = _super.apply(this, arguments) || this;\n        _this.varNames = new Set();\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n        // Don't descend into nested functions\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareClassStmt = function (stmt, context) {\n        // Don't descend into nested classes\n        return stmt;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitReadVarExpr = function (ast, context) {\n        if (ast.name) {\n            this.varNames.add(ast.name);\n        }\n        return null;\n    };\n    return _ReadVarVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmt\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToStatementIfNeeded(stmt, sourceSpan) {\n    if (!sourceSpan) {\n        return stmt;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return stmt.visitStatement(transformer, null);\n}\n/**\n * @param {?} expr\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToExpressionIfNeeded(expr, sourceSpan) {\n    if (!sourceSpan) {\n        return expr;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return expr.visitExpression(transformer, null);\n}\nvar _ApplySourceSpanTransformer = (function (_super) {\n    __extends(_ApplySourceSpanTransformer, _super);\n    /**\n     * @param {?} sourceSpan\n     */\n    function _ApplySourceSpanTransformer(sourceSpan) {\n        var _this = _super.call(this) || this;\n        _this.sourceSpan = sourceSpan;\n        return _this;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype._clone = function (obj) {\n        var /** @type {?} */ clone = Object.create(obj.constructor.prototype);\n        for (var /** @type {?} */ prop in obj) {\n            clone[prop] = obj[prop];\n        }\n        return clone;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformExpr = function (expr, context) {\n        if (!expr.sourceSpan) {\n            expr = this._clone(expr);\n            expr.sourceSpan = this.sourceSpan;\n        }\n        return expr;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformStmt = function (stmt, context) {\n        if (!stmt.sourceSpan) {\n            stmt = this._clone(stmt);\n            stmt.sourceSpan = this.sourceSpan;\n        }\n        return stmt;\n    };\n    return _ApplySourceSpanTransformer;\n}(AstTransformer$1));\n/**\n * @param {?} name\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction variable(name, type, sourceSpan) {\n    return new ReadVarExpr(name, type, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction importExpr(id, typeParams, sourceSpan) {\n    if (typeParams === void 0) { typeParams = null; }\n    return new ExternalExpr(id, null, typeParams, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction importType(id, typeParams, typeModifiers) {\n    if (typeParams === void 0) { typeParams = null; }\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return id != null ? expressionType(importExpr(id, typeParams, null), typeModifiers) : null;\n}\n/**\n * @param {?} expr\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction expressionType(expr, typeModifiers) {\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return expr != null ? ((new ExpressionType(expr, typeModifiers))) : null;\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literalArr(values, type, sourceSpan) {\n    return new LiteralArrayExpr(values, type, sourceSpan);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @param {?=} quoted\n * @return {?}\n */\nfunction literalMap(values, type, quoted) {\n    if (type === void 0) { type = null; }\n    if (quoted === void 0) { quoted = false; }\n    return new LiteralMapExpr(values.map(function (entry) { return new LiteralMapEntry(entry[0], entry[1], quoted); }), type, null);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction not(expr, sourceSpan) {\n    return new NotExpr(expr, sourceSpan);\n}\n/**\n * @param {?} params\n * @param {?} body\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction fn(params, body, type, sourceSpan) {\n    return new FunctionExpr(params, body, type, sourceSpan);\n}\n/**\n * @param {?} value\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literal(value, type, sourceSpan) {\n    return new LiteralExpr(value, type, sourceSpan);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a new class stmts based on the given data.\n * @param {?} config\n * @return {?}\n */\nfunction createClassStmt(config) {\n    var /** @type {?} */ parentArgs = config.parentArgs || [];\n    var /** @type {?} */ superCtorStmts = config.parent ? [SUPER_EXPR.callFn(parentArgs).toStmt()] : [];\n    var /** @type {?} */ builder = concatClassBuilderParts(Array.isArray(config.builders) ? config.builders : [config.builders]);\n    var /** @type {?} */ ctor = new ClassMethod(null, config.ctorParams || [], superCtorStmts.concat(builder.ctorStmts));\n    return new ClassStmt(config.name, config.parent || null, builder.fields, builder.getters, ctor, builder.methods, config.modifiers || [], config.sourceSpan);\n}\n/**\n * @param {?} builders\n * @return {?}\n */\nfunction concatClassBuilderParts(builders) {\n    return {\n        fields: [].concat.apply([], ((builders.map((function (builder) { return builder.fields || []; }))))),\n        methods: [].concat.apply([], ((builders.map(function (builder) { return builder.methods || []; })))),\n        getters: [].concat.apply([], ((builders.map(function (builder) { return builder.getters || []; })))),\n        ctorStmts: [].concat.apply([], ((builders.map(function (builder) { return builder.ctorStmts || []; })))),\n    };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUOTED_KEYS = '$quoted$';\n/**\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nfunction convertValueToOutputAst(value, type) {\n    if (type === void 0) { type = null; }\n    return visitValue(value, new _ValueOutputAstTransformer(), type);\n}\nvar _ValueOutputAstTransformer = (function () {\n    function _ValueOutputAstTransformer() {\n    }\n    /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitArray = function (arr, type) {\n        var _this = this;\n        return literalArr(arr.map(function (value) { return visitValue(value, _this, null); }), type);\n    };\n    /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitStringMap = function (map, type) {\n        var _this = this;\n        var /** @type {?} */ entries = [];\n        var /** @type {?} */ quotedSet = new Set(map && map[QUOTED_KEYS]);\n        Object.keys(map).forEach(function (key) {\n            entries.push(new LiteralMapEntry(key, visitValue(map[key], _this, null), quotedSet.has(key)));\n        });\n        return new LiteralMapExpr(entries, type);\n    };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitPrimitive = function (value, type) { return literal(value, type); };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitOther = function (value, type) {\n        if (value instanceof Expression) {\n            return value;\n        }\n        else {\n            return importExpr({ reference: value });\n        }\n    };\n    return _ValueOutputAstTransformer;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This is currently not read, but will probably be used in the future.\n * We keep it as we already pass it through all the rigth places...\n */\nvar ComponentFactoryDependency = (function () {\n    /**\n     * @param {?} compType\n     */\n    function ComponentFactoryDependency(compType) {\n        this.compType = compType;\n    }\n    return ComponentFactoryDependency;\n}());\nvar NgModuleCompileResult = (function () {\n    /**\n     * @param {?} statements\n     * @param {?} ngModuleFactoryVar\n     * @param {?} dependencies\n     */\n    function NgModuleCompileResult(statements, ngModuleFactoryVar, dependencies) {\n        this.statements = statements;\n        this.ngModuleFactoryVar = ngModuleFactoryVar;\n        this.dependencies = dependencies;\n    }\n    return NgModuleCompileResult;\n}());\nvar NgModuleCompiler = (function () {\n    function NgModuleCompiler() {\n    }\n    /**\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.compile = function (ngModuleMeta, extraProviders) {\n        var /** @type {?} */ sourceSpan = typeSourceSpan('NgModule', ngModuleMeta.type);\n        var /** @type {?} */ deps = [];\n        var /** @type {?} */ bootstrapComponentFactories = [];\n        var /** @type {?} */ entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents.map(function (entryComponent) {\n            if (ngModuleMeta.bootstrapComponents.some(function (id) { return id.reference === entryComponent.componentType; })) {\n                bootstrapComponentFactories.push({ reference: entryComponent.componentFactory });\n            }\n            deps.push(new ComponentFactoryDependency(entryComponent.componentType));\n            return { reference: entryComponent.componentFactory };\n        });\n        var /** @type {?} */ builder = new _InjectorBuilder(ngModuleMeta, entryComponentFactories, bootstrapComponentFactories, sourceSpan);\n        var /** @type {?} */ providerParser = new NgModuleProviderAnalyzer(ngModuleMeta, extraProviders, sourceSpan);\n        providerParser.parse().forEach(function (provider) { return builder.addProvider(provider); });\n        var /** @type {?} */ injectorClass = builder.build();\n        var /** @type {?} */ ngModuleFactoryVar = identifierName(ngModuleMeta.type) + \"NgFactory\";\n        var /** @type {?} */ ngModuleFactoryStmt = variable(ngModuleFactoryVar)\n            .set(importExpr(createIdentifier(Identifiers.NgModuleFactory))\n            .instantiate([variable(injectorClass.name), importExpr(ngModuleMeta.type)], importType(createIdentifier(Identifiers.NgModuleFactory), [/** @type {?} */ ((importType(ngModuleMeta.type)))], [TypeModifier.Const])))\n            .toDeclStmt(null, [StmtModifier.Final]);\n        var /** @type {?} */ stmts = [injectorClass, ngModuleFactoryStmt];\n        if (ngModuleMeta.id) {\n            var /** @type {?} */ registerFactoryStmt = importExpr(createIdentifier(Identifiers.RegisterModuleFactoryFn))\n                .callFn([literal(ngModuleMeta.id), variable(ngModuleFactoryVar)])\n                .toStmt();\n            stmts.push(registerFactoryStmt);\n        }\n        return new NgModuleCompileResult(stmts, ngModuleFactoryVar, deps);\n    };\n    return NgModuleCompiler;\n}());\nNgModuleCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nNgModuleCompiler.ctorParameters = function () { return []; };\nvar _InjectorBuilder = (function () {\n    /**\n     * @param {?} _ngModuleMeta\n     * @param {?} _entryComponentFactories\n     * @param {?} _bootstrapComponentFactories\n     * @param {?} _sourceSpan\n     */\n    function _InjectorBuilder(_ngModuleMeta, _entryComponentFactories, _bootstrapComponentFactories, _sourceSpan) {\n        this._ngModuleMeta = _ngModuleMeta;\n        this._entryComponentFactories = _entryComponentFactories;\n        this._bootstrapComponentFactories = _bootstrapComponentFactories;\n        this._sourceSpan = _sourceSpan;\n        this.fields = [];\n        this.getters = [];\n        this.methods = [];\n        this.ctorStmts = [];\n        this._lazyProps = new Map();\n        this._tokens = [];\n        this._instances = new Map();\n        this._createStmts = [];\n        this._destroyStmts = [];\n    }\n    /**\n     * @param {?} resolvedProvider\n     * @return {?}\n     */\n    _InjectorBuilder.prototype.addProvider = function (resolvedProvider) {\n        var _this = this;\n        var /** @type {?} */ providerValueExpressions = resolvedProvider.providers.map(function (provider) { return _this._getProviderValue(provider); });\n        var /** @type {?} */ propName = \"_\" + tokenName(resolvedProvider.token) + \"_\" + this._instances.size;\n        var /** @type {?} */ instance = this._createProviderProperty(propName, resolvedProvider, providerValueExpressions, resolvedProvider.multiProvider, resolvedProvider.eager);\n        if (resolvedProvider.lifecycleHooks.indexOf(_angular_core.ɵLifecycleHooks.OnDestroy) !== -1) {\n            var /** @type {?} */ callNgOnDestroy = instance.callMethod('ngOnDestroy', []);\n            if (!resolvedProvider.eager) {\n                callNgOnDestroy = ((this._lazyProps.get(instance.name))).and(callNgOnDestroy);\n            }\n            this._destroyStmts.push(callNgOnDestroy.toStmt());\n        }\n        this._tokens.push(resolvedProvider.token);\n        this._instances.set(tokenReference(resolvedProvider.token), instance);\n    };\n    /**\n     * @return {?}\n     */\n    _InjectorBuilder.prototype.build = function () {\n        var _this = this;\n        var /** @type {?} */ getMethodStmts = this._tokens.map(function (token) {\n            var /** @type {?} */ providerExpr = ((_this._instances.get(tokenReference(token))));\n            return new IfStmt(InjectMethodVars.token.identical(createDiTokenExpression(token)), [new ReturnStatement(providerExpr)]);\n        });\n        var /** @type {?} */ methods = [\n            new ClassMethod('createInternal', [], this._createStmts.concat(new ReturnStatement(/** @type {?} */ ((this._instances.get(this._ngModuleMeta.type.reference))))), importType(this._ngModuleMeta.type)),\n            new ClassMethod('getInternal', [\n                new FnParam(/** @type {?} */ ((InjectMethodVars.token.name)), DYNAMIC_TYPE),\n                new FnParam(/** @type {?} */ ((InjectMethodVars.notFoundResult.name)), DYNAMIC_TYPE)\n            ], getMethodStmts.concat([new ReturnStatement(InjectMethodVars.notFoundResult)]), DYNAMIC_TYPE),\n            new ClassMethod('destroyInternal', [], this._destroyStmts),\n        ];\n        var /** @type {?} */ parentArgs = [\n            variable(InjectorProps.parent.name),\n            literalArr(this._entryComponentFactories.map(function (componentFactory) { return importExpr(componentFactory); })),\n            literalArr(this._bootstrapComponentFactories.map(function (componentFactory) { return importExpr(componentFactory); }))\n        ];\n        var /** @type {?} */ injClassName = identifierName(this._ngModuleMeta.type) + \"Injector\";\n        return createClassStmt({\n            name: injClassName,\n            ctorParams: [new FnParam(InjectorProps.parent.name, importType(createIdentifier(Identifiers.Injector)))],\n            parent: importExpr(createIdentifier(Identifiers.NgModuleInjector), [/** @type {?} */ ((importType(this._ngModuleMeta.type)))]),\n            parentArgs: parentArgs,\n            builders: [{ methods: methods }, this]\n        });\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    _InjectorBuilder.prototype._getProviderValue = function (provider) {\n        var _this = this;\n        var /** @type {?} */ result;\n        if (provider.useExisting != null) {\n            result = this._getDependency({ token: provider.useExisting });\n        }\n        else if (provider.useFactory != null) {\n            var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n            var /** @type {?} */ depsExpr = deps.map(function (dep) { return _this._getDependency(dep); });\n            result = importExpr(provider.useFactory).callFn(depsExpr);\n        }\n        else if (provider.useClass != null) {\n            var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n            var /** @type {?} */ depsExpr = deps.map(function (dep) { return _this._getDependency(dep); });\n            result =\n                importExpr(provider.useClass).instantiate(depsExpr, importType(provider.useClass));\n        }\n        else {\n            result = convertValueToOutputAst(provider.useValue);\n        }\n        return result;\n    };\n    /**\n     * @param {?} propName\n     * @param {?} provider\n     * @param {?} providerValueExpressions\n     * @param {?} isMulti\n     * @param {?} isEager\n     * @return {?}\n     */\n    _InjectorBuilder.prototype._createProviderProperty = function (propName, provider, providerValueExpressions, isMulti, isEager) {\n        var /** @type {?} */ resolvedProviderValueExpr;\n        var /** @type {?} */ type;\n        if (isMulti) {\n            resolvedProviderValueExpr = literalArr(providerValueExpressions);\n            type = new ArrayType(DYNAMIC_TYPE);\n        }\n        else {\n            resolvedProviderValueExpr = providerValueExpressions[0];\n            type = ((providerValueExpressions[0].type));\n        }\n        if (!type) {\n            type = DYNAMIC_TYPE;\n        }\n        if (isEager) {\n            this.fields.push(new ClassField(propName, type));\n            this._createStmts.push(THIS_EXPR.prop(propName).set(resolvedProviderValueExpr).toStmt());\n        }\n        else {\n            var /** @type {?} */ internalFieldProp = THIS_EXPR.prop(\"_\" + propName);\n            this.fields.push(new ClassField(internalFieldProp.name, type));\n            // Note: Equals is important for JS so that it also checks the undefined case!\n            var /** @type {?} */ getterStmts = [\n                new IfStmt(internalFieldProp.isBlank(), [internalFieldProp.set(resolvedProviderValueExpr).toStmt()]),\n                new ReturnStatement(internalFieldProp)\n            ];\n            this.getters.push(new ClassGetter(propName, getterStmts, type));\n            this._lazyProps.set(propName, internalFieldProp);\n        }\n        return THIS_EXPR.prop(propName);\n    };\n    /**\n     * @param {?} dep\n     * @return {?}\n     */\n    _InjectorBuilder.prototype._getDependency = function (dep) {\n        var /** @type {?} */ result = ((null));\n        if (dep.isValue) {\n            result = literal(dep.value);\n        }\n        if (!dep.isSkipSelf) {\n            if (dep.token) {\n                if (tokenReference(dep.token) === resolveIdentifier(Identifiers.Injector)) {\n                    result = THIS_EXPR;\n                }\n                else if (tokenReference(dep.token) === resolveIdentifier(Identifiers.ComponentFactoryResolver)) {\n                    result = THIS_EXPR.prop('componentFactoryResolver');\n                }\n            }\n            if (!result) {\n                result = ((this._instances.get(tokenReference(/** @type {?} */ ((dep.token))))));\n            }\n        }\n        if (!result) {\n            var /** @type {?} */ args = [createDiTokenExpression(/** @type {?} */ ((dep.token)))];\n            if (dep.isOptional) {\n                args.push(NULL_EXPR);\n            }\n            result = InjectorProps.parent.callMethod('get', args);\n        }\n        return result;\n    };\n    return _InjectorBuilder;\n}());\n/**\n * @param {?} token\n * @return {?}\n */\nfunction createDiTokenExpression(token) {\n    if (token.value != null) {\n        return literal(token.value);\n    }\n    else {\n        return importExpr(/** @type {?} */ ((token.identifier)));\n    }\n}\nvar InjectorProps = (function () {\n    function InjectorProps() {\n    }\n    return InjectorProps;\n}());\nInjectorProps.parent = THIS_EXPR.prop('parent');\nvar InjectMethodVars = (function () {\n    function InjectMethodVars() {\n    }\n    return InjectMethodVars;\n}());\nInjectMethodVars.token = variable('token');\nInjectMethodVars.notFoundResult = variable('notFoundResult');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\nvar VERSION$1 = 3;\nvar JS_B64_PREFIX = '# sourceMappingURL=data:application/json;base64,';\nvar SourceMapGenerator = (function () {\n    /**\n     * @param {?=} file\n     */\n    function SourceMapGenerator(file) {\n        if (file === void 0) { file = null; }\n        this.file = file;\n        this.sourcesContent = new Map();\n        this.lines = [];\n        this.lastCol0 = 0;\n        this.hasMappings = false;\n    }\n    /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addSource = function (url, content) {\n        if (content === void 0) { content = null; }\n        if (!this.sourcesContent.has(url)) {\n            this.sourcesContent.set(url, content);\n        }\n        return this;\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addLine = function () {\n        this.lines.push([]);\n        this.lastCol0 = 0;\n        return this;\n    };\n    /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addMapping = function (col0, sourceUrl, sourceLine0, sourceCol0) {\n        if (!this.currentLine) {\n            throw new Error(\"A line must be added before mappings can be added\");\n        }\n        if (sourceUrl != null && !this.sourcesContent.has(sourceUrl)) {\n            throw new Error(\"Unknown source file \\\"\" + sourceUrl + \"\\\"\");\n        }\n        if (col0 == null) {\n            throw new Error(\"The column in the generated code must be provided\");\n        }\n        if (col0 < this.lastCol0) {\n            throw new Error(\"Mapping should be added in output order\");\n        }\n        if (sourceUrl && (sourceLine0 == null || sourceCol0 == null)) {\n            throw new Error(\"The source location must be provided when a source url is provided\");\n        }\n        this.hasMappings = true;\n        this.lastCol0 = col0;\n        this.currentLine.push({ col0: col0, sourceUrl: sourceUrl, sourceLine0: sourceLine0, sourceCol0: sourceCol0 });\n        return this;\n    };\n    Object.defineProperty(SourceMapGenerator.prototype, \"currentLine\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.lines.slice(-1)[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJSON = function () {\n        var _this = this;\n        if (!this.hasMappings) {\n            return null;\n        }\n        var /** @type {?} */ sourcesIndex = new Map();\n        var /** @type {?} */ sources = [];\n        var /** @type {?} */ sourcesContent = [];\n        Array.from(this.sourcesContent.keys()).forEach(function (url, i) {\n            sourcesIndex.set(url, i);\n            sources.push(url);\n            sourcesContent.push(_this.sourcesContent.get(url) || null);\n        });\n        var /** @type {?} */ mappings = '';\n        var /** @type {?} */ lastCol0 = 0;\n        var /** @type {?} */ lastSourceIndex = 0;\n        var /** @type {?} */ lastSourceLine0 = 0;\n        var /** @type {?} */ lastSourceCol0 = 0;\n        this.lines.forEach(function (segments) {\n            lastCol0 = 0;\n            mappings += segments\n                .map(function (segment) {\n                // zero-based starting column of the line in the generated code\n                var /** @type {?} */ segAsStr = toBase64VLQ(segment.col0 - lastCol0);\n                lastCol0 = segment.col0;\n                if (segment.sourceUrl != null) {\n                    // zero-based index into the “sources” list\n                    segAsStr +=\n                        toBase64VLQ(/** @type {?} */ ((sourcesIndex.get(segment.sourceUrl))) - lastSourceIndex);\n                    lastSourceIndex = ((sourcesIndex.get(segment.sourceUrl)));\n                    // the zero-based starting line in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceLine0)) - lastSourceLine0);\n                    lastSourceLine0 = ((segment.sourceLine0));\n                    // the zero-based starting column in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceCol0)) - lastSourceCol0);\n                    lastSourceCol0 = ((segment.sourceCol0));\n                }\n                return segAsStr;\n            })\n                .join(',');\n            mappings += ';';\n        });\n        mappings = mappings.slice(0, -1);\n        return {\n            'file': this.file || '',\n            'version': VERSION$1,\n            'sourceRoot': '',\n            'sources': sources,\n            'sourcesContent': sourcesContent,\n            'mappings': mappings,\n        };\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJsComment = function () {\n        return this.hasMappings ? '//' + JS_B64_PREFIX + toBase64String(JSON.stringify(this, null, 0)) :\n            '';\n    };\n    return SourceMapGenerator;\n}());\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64String(value) {\n    var /** @type {?} */ b64 = '';\n    value = utf8Encode(value);\n    for (var /** @type {?} */ i = 0; i < value.length;) {\n        var /** @type {?} */ i1 = value.charCodeAt(i++);\n        var /** @type {?} */ i2 = value.charCodeAt(i++);\n        var /** @type {?} */ i3 = value.charCodeAt(i++);\n        b64 += toBase64Digit(i1 >> 2);\n        b64 += toBase64Digit(((i1 & 3) << 4) | (isNaN(i2) ? 0 : i2 >> 4));\n        b64 += isNaN(i2) ? '=' : toBase64Digit(((i2 & 15) << 2) | (i3 >> 6));\n        b64 += isNaN(i2) || isNaN(i3) ? '=' : toBase64Digit(i3 & 63);\n    }\n    return b64;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64VLQ(value) {\n    value = value < 0 ? ((-value) << 1) + 1 : value << 1;\n    var /** @type {?} */ out = '';\n    do {\n        var /** @type {?} */ digit = value & 31;\n        value = value >> 5;\n        if (value > 0) {\n            digit = digit | 32;\n        }\n        out += toBase64Digit(digit);\n    } while (value > 0);\n    return out;\n}\nvar B64_DIGITS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64Digit(value) {\n    if (value < 0 || value >= 64) {\n        throw new Error(\"Can only encode value in the range [0, 63]\");\n    }\n    return B64_DIGITS[value];\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\nvar _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\nvar _INDENT_WITH = '  ';\nvar CATCH_ERROR_VAR$1 = variable('error', null, null);\nvar CATCH_STACK_VAR$1 = variable('stack', null, null);\n/**\n * @abstract\n */\nvar _EmittedLine = (function () {\n    /**\n     * @param {?} indent\n     */\n    function _EmittedLine(indent) {\n        this.indent = indent;\n        this.parts = [];\n        this.srcSpans = [];\n    }\n    return _EmittedLine;\n}());\nvar EmitterVisitorContext = (function () {\n    /**\n     * @param {?} _exportedVars\n     * @param {?} _indent\n     */\n    function EmitterVisitorContext(_exportedVars, _indent) {\n        this._exportedVars = _exportedVars;\n        this._indent = _indent;\n        this._classes = [];\n        this._lines = [new _EmittedLine(_indent)];\n    }\n    /**\n     * @param {?} exportedVars\n     * @return {?}\n     */\n    EmitterVisitorContext.createRoot = function (exportedVars) {\n        return new EmitterVisitorContext(exportedVars, 0);\n    };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"_currentLine\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._lines[this._lines.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} varName\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.isExportedVar = function (varName) { return this._exportedVars.indexOf(varName) !== -1; };\n    /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.println = function (from, lastPart) {\n        if (lastPart === void 0) { lastPart = ''; }\n        this.print(from || null, lastPart, true);\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineIsEmpty = function () { return this._currentLine.parts.length === 0; };\n    /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.print = function (from, part, newLine) {\n        if (newLine === void 0) { newLine = false; }\n        if (part.length > 0) {\n            this._currentLine.parts.push(part);\n            this._currentLine.srcSpans.push(from && from.sourceSpan || null);\n        }\n        if (newLine) {\n            this._lines.push(new _EmittedLine(this._indent));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.removeEmptyLastLine = function () {\n        if (this.lineIsEmpty()) {\n            this._lines.pop();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.incIndent = function () {\n        this._indent++;\n        this._currentLine.indent = this._indent;\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.decIndent = function () {\n        this._indent--;\n        this._currentLine.indent = this._indent;\n    };\n    /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.pushClass = function (clazz) { this._classes.push(clazz); };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.popClass = function () { return ((this._classes.pop())); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"currentClass\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSource = function () {\n        return this.sourceLines\n            .map(function (l) { return l.parts.length > 0 ? _createIndent(l.indent) + l.parts.join('') : ''; })\n            .join('\\n');\n    };\n    /**\n     * @param {?} sourceFilePath\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSourceMapGenerator = function (sourceFilePath, genFilePath, startsAtLine) {\n        if (startsAtLine === void 0) { startsAtLine = 0; }\n        var /** @type {?} */ map = new SourceMapGenerator(genFilePath);\n        var /** @type {?} */ firstOffsetMapped = false;\n        var /** @type {?} */ mapFirstOffsetIfNeeded = function () {\n            if (!firstOffsetMapped) {\n                // Add a single space so that tools won't try to load the file from disk.\n                // Note: We are using virtual urls like `ng:///`, so we have to\n                // provide a content here.\n                map.addSource(sourceFilePath, ' ').addMapping(0, sourceFilePath, 0, 0);\n                firstOffsetMapped = true;\n            }\n        };\n        for (var /** @type {?} */ i = 0; i < startsAtLine; i++) {\n            map.addLine();\n            mapFirstOffsetIfNeeded();\n        }\n        this.sourceLines.forEach(function (line, lineIdx) {\n            map.addLine();\n            var /** @type {?} */ spans = line.srcSpans;\n            var /** @type {?} */ parts = line.parts;\n            var /** @type {?} */ col0 = line.indent * _INDENT_WITH.length;\n            var /** @type {?} */ spanIdx = 0;\n            // skip leading parts without source spans\n            while (spanIdx < spans.length && !spans[spanIdx]) {\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n            }\n            if (spanIdx < spans.length && lineIdx === 0 && col0 === 0) {\n                firstOffsetMapped = true;\n            }\n            else {\n                mapFirstOffsetIfNeeded();\n            }\n            while (spanIdx < spans.length) {\n                var /** @type {?} */ span = ((spans[spanIdx]));\n                var /** @type {?} */ source = span.start.file;\n                var /** @type {?} */ sourceLine = span.start.line;\n                var /** @type {?} */ sourceCol = span.start.col;\n                map.addSource(source.url, source.content)\n                    .addMapping(col0, source.url, sourceLine, sourceCol);\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n                // assign parts without span or the same span to the previous segment\n                while (spanIdx < spans.length && (span === spans[spanIdx] || !spans[spanIdx])) {\n                    col0 += parts[spanIdx].length;\n                    spanIdx++;\n                }\n            }\n        });\n        return map;\n    };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"sourceLines\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (this._lines.length && this._lines[this._lines.length - 1].parts.length === 0) {\n                return this._lines.slice(0, -1);\n            }\n            return this._lines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EmitterVisitorContext;\n}());\n/**\n * @abstract\n */\nvar AbstractEmitterVisitor = (function () {\n    /**\n     * @param {?} _escapeDollarInStrings\n     */\n    function AbstractEmitterVisitor(_escapeDollarInStrings) {\n        this._escapeDollarInStrings = _escapeDollarInStrings;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitExpressionStmt = function (stmt, ctx) {\n        stmt.expr.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReturnStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"return \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCastExpr = function (ast, context) { };\n    /**\n     * @abstract\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) { };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitIfStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"if (\");\n        stmt.condition.visitExpression(this, ctx);\n        ctx.print(stmt, \") {\");\n        var /** @type {?} */ hasElseCase = stmt.falseCase != null && stmt.falseCase.length > 0;\n        if (stmt.trueCase.length <= 1 && !hasElseCase) {\n            ctx.print(stmt, \" \");\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.removeEmptyLastLine();\n            ctx.print(stmt, \" \");\n        }\n        else {\n            ctx.println();\n            ctx.incIndent();\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.decIndent();\n            if (hasElseCase) {\n                ctx.println(stmt, \"} else {\");\n                ctx.incIndent();\n                this.visitAllStatements(stmt.falseCase, ctx);\n                ctx.decIndent();\n            }\n        }\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) { };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitThrowStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"throw \");\n        stmt.error.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommentStmt = function (stmt, ctx) {\n        var /** @type {?} */ lines = stmt.comment.split('\\n');\n        lines.forEach(function (line) { ctx.println(stmt, \"// \" + line); });\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) { };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteVarExpr = function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        ctx.print(expr, expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteKeyExpr = function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \"[\");\n        expr.index.visitExpression(this, ctx);\n        ctx.print(expr, \"] = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWritePropExpr = function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \".\" + expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeMethodExpr = function (expr, ctx) {\n        expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ name = expr.name;\n        if (expr.builtin != null) {\n            name = this.getBuiltinMethodName(expr.builtin);\n            if (name == null) {\n                // some builtins just mean to skip the call.\n                return null;\n            }\n        }\n        ctx.print(expr, \".\" + name + \"(\");\n        this.visitAllExpressions(expr.args, ctx, \",\");\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} method\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.getBuiltinMethodName = function (method) { };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {\n        expr.fn.visitExpression(this, ctx);\n        ctx.print(expr, \"(\");\n        this.visitAllExpressions(expr.args, ctx, ',');\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {\n        var /** @type {?} */ varName = ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    varName = 'super';\n                    break;\n                case BuiltinVar.This:\n                    varName = 'this';\n                    break;\n                case BuiltinVar.CatchError:\n                    varName = ((CATCH_ERROR_VAR$1.name));\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = ((CATCH_STACK_VAR$1.name));\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        ctx.print(ast, varName);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInstantiateExpr = function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        ast.classExpr.visitExpression(this, ctx);\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralExpr = function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (typeof value === 'string') {\n            ctx.print(ast, escapeIdentifier(value, this._escapeDollarInStrings));\n        }\n        else {\n            ctx.print(ast, \"\" + value);\n        }\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) { };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitConditionalExpr = function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        ast.condition.visitExpression(this, ctx);\n        ctx.print(ast, '? ');\n        ast.trueCase.visitExpression(this, ctx);\n        ctx.print(ast, ': '); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitNotExpr = function (ast, ctx) {\n        ctx.print(ast, '!');\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) { };\n    /**\n     * @abstract\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr = function (ast, ctx) {\n        var /** @type {?} */ opStr;\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                opStr = '==';\n                break;\n            case BinaryOperator.Identical:\n                opStr = '===';\n                break;\n            case BinaryOperator.NotEquals:\n                opStr = '!=';\n                break;\n            case BinaryOperator.NotIdentical:\n                opStr = '!==';\n                break;\n            case BinaryOperator.And:\n                opStr = '&&';\n                break;\n            case BinaryOperator.Or:\n                opStr = '||';\n                break;\n            case BinaryOperator.Plus:\n                opStr = '+';\n                break;\n            case BinaryOperator.Minus:\n                opStr = '-';\n                break;\n            case BinaryOperator.Divide:\n                opStr = '/';\n                break;\n            case BinaryOperator.Multiply:\n                opStr = '*';\n                break;\n            case BinaryOperator.Modulo:\n                opStr = '%';\n                break;\n            case BinaryOperator.Lower:\n                opStr = '<';\n                break;\n            case BinaryOperator.LowerEquals:\n                opStr = '<=';\n                break;\n            case BinaryOperator.Bigger:\n                opStr = '>';\n                break;\n            case BinaryOperator.BiggerEquals:\n                opStr = '>=';\n                break;\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n        ctx.print(ast, \"(\");\n        ast.lhs.visitExpression(this, ctx);\n        ctx.print(ast, \" \" + opStr + \" \");\n        ast.rhs.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadPropExpr = function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \".\");\n        ctx.print(ast, ast.name);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadKeyExpr = function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \"[\");\n        ast.index.visitExpression(this, ctx);\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n        var /** @type {?} */ useNewLine = ast.entries.length > 1;\n        ctx.print(ast, \"[\", useNewLine);\n        ctx.incIndent();\n        this.visitAllExpressions(ast.entries, ctx, ',', useNewLine);\n        ctx.decIndent();\n        ctx.print(ast, \"]\", useNewLine);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralMapExpr = function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ useNewLine = ast.entries.length > 1;\n        ctx.print(ast, \"{\", useNewLine);\n        ctx.incIndent();\n        this.visitAllObjects(function (entry) {\n            ctx.print(ast, escapeIdentifier(entry.key, _this._escapeDollarInStrings, entry.quoted) + \": \");\n            entry.value.visitExpression(_this, ctx);\n        }, ast.entries, ctx, ',', useNewLine);\n        ctx.decIndent();\n        ctx.print(ast, \"}\", useNewLine);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommaExpr = function (ast, ctx) {\n        ctx.print(ast, '(');\n        this.visitAllExpressions(ast.parts, ctx, ',');\n        ctx.print(ast, ')');\n        return null;\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @param {?=} newLine\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllExpressions = function (expressions, ctx, separator, newLine) {\n        var _this = this;\n        if (newLine === void 0) { newLine = false; }\n        this.visitAllObjects(function (expr) { return expr.visitExpression(_this, ctx); }, expressions, ctx, separator, newLine);\n    };\n    /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @param {?=} newLine\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllObjects = function (handler, expressions, ctx, separator, newLine) {\n        if (newLine === void 0) { newLine = false; }\n        for (var /** @type {?} */ i = 0; i < expressions.length; i++) {\n            if (i > 0) {\n                ctx.print(null, separator, newLine);\n            }\n            handler(expressions[i]);\n        }\n        if (newLine) {\n            ctx.println();\n        }\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllStatements = function (statements, ctx) {\n        var _this = this;\n        statements.forEach(function (stmt) { return stmt.visitStatement(_this, ctx); });\n    };\n    return AbstractEmitterVisitor;\n}());\n/**\n * @param {?} input\n * @param {?} escapeDollar\n * @param {?=} alwaysQuote\n * @return {?}\n */\nfunction escapeIdentifier(input, escapeDollar, alwaysQuote) {\n    if (alwaysQuote === void 0) { alwaysQuote = true; }\n    if (input == null) {\n        return null;\n    }\n    var /** @type {?} */ body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, function () {\n        var match = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            match[_i] = arguments[_i];\n        }\n        if (match[0] == '$') {\n            return escapeDollar ? '\\\\$' : '$';\n        }\n        else if (match[0] == '\\n') {\n            return '\\\\n';\n        }\n        else if (match[0] == '\\r') {\n            return '\\\\r';\n        }\n        else {\n            return \"\\\\\" + match[0];\n        }\n    });\n    var /** @type {?} */ requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n    return requiresQuotes ? \"'\" + body + \"'\" : body;\n}\n/**\n * @param {?} count\n * @return {?}\n */\nfunction _createIndent(count) {\n    var /** @type {?} */ res = '';\n    for (var /** @type {?} */ i = 0; i < count; i++) {\n        res += _INDENT_WITH;\n    }\n    return res;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _debugFilePath = '/debug/lib';\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction debugOutputAstAsTypeScript(ast) {\n    var /** @type {?} */ converter = new _TsEmitterVisitor(_debugFilePath, {\n        /**\n         * @param {?} filePath\n         * @param {?} containingFilePath\n         * @return {?}\n         */\n        fileNameToModuleName: function (filePath, containingFilePath) { return filePath; },\n        /**\n         * @param {?} symbol\n         * @return {?}\n         */\n        getImportAs: function (symbol) { return null; },\n        getTypeArity: function (symbol) { return null; }\n    });\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot([]);\n    var /** @type {?} */ asts = Array.isArray(ast) ? ast : [ast];\n    asts.forEach(function (ast) {\n        if (ast instanceof Statement) {\n            ast.visitStatement(converter, ctx);\n        }\n        else if (ast instanceof Expression) {\n            ast.visitExpression(converter, ctx);\n        }\n        else if (ast instanceof Type$1) {\n            ast.visitType(converter, ctx);\n        }\n        else {\n            throw new Error(\"Don't know how to print debug info for \" + ast);\n        }\n    });\n    return ctx.toSource();\n}\nvar TypeScriptEmitter = (function () {\n    /**\n     * @param {?} _importResolver\n     */\n    function TypeScriptEmitter(_importResolver) {\n        this._importResolver = _importResolver;\n    }\n    /**\n     * @param {?} srcFilePath\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?} exportedVars\n     * @param {?=} preamble\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatements = function (srcFilePath, genFilePath, stmts, exportedVars, preamble) {\n        var _this = this;\n        if (preamble === void 0) { preamble = ''; }\n        var /** @type {?} */ converter = new _TsEmitterVisitor(genFilePath, this._importResolver);\n        var /** @type {?} */ ctx = EmitterVisitorContext.createRoot(exportedVars);\n        converter.visitAllStatements(stmts, ctx);\n        var /** @type {?} */ preambleLines = preamble ? preamble.split('\\n') : [];\n        converter.reexports.forEach(function (reexports, exportedFilePath) {\n            var /** @type {?} */ reexportsCode = reexports.map(function (reexport) { return reexport.name + \" as \" + reexport.as; }).join(',');\n            preambleLines.push(\"export {\" + reexportsCode + \"} from '\" + _this._importResolver.fileNameToModuleName(exportedFilePath, genFilePath) + \"';\");\n        });\n        converter.importsWithPrefixes.forEach(function (prefix, importedFilePath) {\n            // Note: can't write the real word for import as it screws up system.js auto detection...\n            preambleLines.push(\"imp\" +\n                (\"ort * as \" + prefix + \" from '\" + _this._importResolver.fileNameToModuleName(importedFilePath, genFilePath) + \"';\"));\n        });\n        var /** @type {?} */ sm = ctx.toSourceMapGenerator(srcFilePath, genFilePath, preambleLines.length).toJsComment();\n        var /** @type {?} */ lines = preambleLines.concat([ctx.toSource(), sm]);\n        if (sm) {\n            // always add a newline at the end, as some tools have bugs without it.\n            lines.push('');\n        }\n        return lines.join('\\n');\n    };\n    return TypeScriptEmitter;\n}());\nvar _TsEmitterVisitor = (function (_super) {\n    __extends(_TsEmitterVisitor, _super);\n    /**\n     * @param {?} _genFilePath\n     * @param {?} _importResolver\n     */\n    function _TsEmitterVisitor(_genFilePath, _importResolver) {\n        var _this = _super.call(this, false) || this;\n        _this._genFilePath = _genFilePath;\n        _this._importResolver = _importResolver;\n        _this.typeExpression = 0;\n        _this.importsWithPrefixes = new Map();\n        _this.reexports = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitType = function (t, ctx, defaultType) {\n        if (defaultType === void 0) { defaultType = 'any'; }\n        if (t) {\n            this.typeExpression++;\n            t.visitType(this, ctx);\n            this.typeExpression--;\n        }\n        else {\n            ctx.print(null, defaultType);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralExpr = function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (value == null && ast.type != INFERRED_TYPE) {\n            ctx.print(ast, \"(\" + value + \" as any)\");\n            return null;\n        }\n        return _super.prototype.visitLiteralExpr.call(this, ast, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n        if (ast.entries.length === 0) {\n            ctx.print(ast, '(');\n        }\n        var /** @type {?} */ result = _super.prototype.visitLiteralArrayExpr.call(this, ast, ctx);\n        if (ast.entries.length === 0) {\n            ctx.print(ast, ' as any[])');\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {\n        this._visitIdentifier(ast.value, ast.typeParams, ctx);\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        if (ctx.isExportedVar(stmt.name) && stmt.value instanceof ExternalExpr && !stmt.type) {\n            // check for a reexport\n            var _a = this._resolveStaticSymbol(stmt.value.value), name = _a.name, filePath = _a.filePath, members = _a.members;\n            if (((members)).length === 0 && filePath !== this._genFilePath) {\n                var /** @type {?} */ reexports = this.reexports.get(filePath);\n                if (!reexports) {\n                    reexports = [];\n                    this.reexports.set(filePath, reexports);\n                }\n                reexports.push({ name: name, as: stmt.name });\n                return null;\n            }\n        }\n        if (ctx.isExportedVar(stmt.name)) {\n            ctx.print(stmt, \"export \");\n        }\n        if (stmt.hasModifier(StmtModifier.Final)) {\n            ctx.print(stmt, \"const\");\n        }\n        else {\n            ctx.print(stmt, \"var\");\n        }\n        ctx.print(stmt, \" \" + stmt.name);\n        this._printColonType(stmt.type, ctx);\n        ctx.print(stmt, \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {\n        ctx.print(ast, \"(<\"); /** @type {?} */\n        ((ast.type)).visitType(this, ctx);\n        ctx.print(ast, \">\");\n        ast.value.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitInstantiateExpr = function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        this.typeExpression++;\n        ast.classExpr.visitExpression(this, ctx);\n        this.typeExpression--;\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        if (ctx.isExportedVar(stmt.name)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"class \" + stmt.name);\n        if (stmt.parent != null) {\n            ctx.print(stmt, \" extends \");\n            this.typeExpression++;\n            stmt.parent.visitExpression(this, ctx);\n            this.typeExpression--;\n        }\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        stmt.fields.forEach(function (field) { return _this._visitClassField(field, ctx); });\n        if (stmt.constructorMethod != null) {\n            this._visitClassConstructor(stmt, ctx);\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(method, ctx); });\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassField = function (field, ctx) {\n        if (field.hasModifier(StmtModifier.Private)) {\n            // comment out as a workaround for #10967\n            ctx.print(null, \"/*private*/ \");\n        }\n        ctx.print(null, field.name);\n        this._printColonType(field.type, ctx);\n        ctx.println(null, \";\");\n    };\n    /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassGetter = function (getter, ctx) {\n        if (getter.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, \"get \" + getter.name + \"()\");\n        this._printColonType(getter.type, ctx);\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(getter.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {\n        ctx.print(stmt, \"constructor(\");\n        this._visitParams(stmt.constructorMethod.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.constructorMethod.body, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassMethod = function (method, ctx) {\n        if (method.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, method.name + \"(\");\n        this._visitParams(method.params, ctx);\n        ctx.print(null, \")\");\n        this._printColonType(method.type, ctx, 'void');\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(method.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        this._visitParams(ast.params, ctx);\n        ctx.print(ast, \")\");\n        this._printColonType(ast.type, ctx, 'void');\n        ctx.println(ast, \" => {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        if (ctx.isExportedVar(stmt.name)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.print(stmt, \")\");\n        this._printColonType(stmt.type, ctx, 'void');\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack', null)).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitBuiltintType = function (type, ctx) {\n        var /** @type {?} */ typeStr;\n        switch (type.name) {\n            case BuiltinTypeName.Bool:\n                typeStr = 'boolean';\n                break;\n            case BuiltinTypeName.Dynamic:\n                typeStr = 'any';\n                break;\n            case BuiltinTypeName.Function:\n                typeStr = 'Function';\n                break;\n            case BuiltinTypeName.Number:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.Int:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.String:\n                typeStr = 'string';\n                break;\n            default:\n                throw new Error(\"Unsupported builtin type \" + type.name);\n        }\n        ctx.print(null, typeStr);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExpressionType = function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitArrayType = function (type, ctx) {\n        this.visitType(type.of, ctx);\n        ctx.print(null, \"[]\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitMapType = function (type, ctx) {\n        ctx.print(null, \"{[key: string]:\");\n        this.visitType(type.valueType, ctx);\n        ctx.print(null, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitParams = function (params, ctx) {\n        var _this = this;\n        this.visitAllObjects(function (param) {\n            ctx.print(null, param.name);\n            _this._printColonType(param.type, ctx);\n        }, params, ctx, ',');\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._resolveStaticSymbol = function (value) {\n        var /** @type {?} */ reference = value.reference;\n        if (!(reference instanceof StaticSymbol)) {\n            throw new Error(\"Internal error: unknown identifier \" + JSON.stringify(value));\n        }\n        var /** @type {?} */ arity = this._importResolver.getTypeArity(reference) || undefined;\n        var /** @type {?} */ importReference = this._importResolver.getImportAs(reference) || reference;\n        return {\n            name: importReference.name,\n            filePath: importReference.filePath,\n            members: importReference.members, arity: arity\n        };\n    };\n    /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitIdentifier = function (value, typeParams, ctx) {\n        var _this = this;\n        var _a = this._resolveStaticSymbol(value), name = _a.name, filePath = _a.filePath, members = _a.members, arity = _a.arity;\n        if (filePath != this._genFilePath) {\n            var /** @type {?} */ prefix = this.importsWithPrefixes.get(filePath);\n            if (prefix == null) {\n                prefix = \"import\" + this.importsWithPrefixes.size;\n                this.importsWithPrefixes.set(filePath, prefix);\n            }\n            ctx.print(null, prefix + \".\");\n        }\n        if (((members)).length) {\n            ctx.print(null, name);\n            ctx.print(null, '.');\n            ctx.print(null, /** @type {?} */ ((members)).join('.'));\n        }\n        else {\n            ctx.print(null, name);\n        }\n        if (this.typeExpression > 0) {\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedParameters = (typeParams && typeParams.length) || 0;\n            var /** @type {?} */ additionalParameters = (arity || 0) - suppliedParameters;\n            if (suppliedParameters > 0 || additionalParameters > 0) {\n                ctx.print(null, \"<\");\n                if (suppliedParameters > 0) {\n                    this.visitAllObjects(function (type) { return type.visitType(_this, ctx); }, /** @type {?} */ ((typeParams)), ctx, ',');\n                }\n                if (additionalParameters > 0) {\n                    for (var /** @type {?} */ i = 0; i < additionalParameters; i++) {\n                        if (i > 0 || suppliedParameters > 0)\n                            ctx.print(null, ',');\n                        ctx.print(null, 'any');\n                    }\n                }\n                ctx.print(null, \">\");\n            }\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._printColonType = function (type, ctx, defaultType) {\n        if (type !== INFERRED_TYPE) {\n            ctx.print(null, ':');\n            this.visitType(type, ctx, defaultType);\n        }\n    };\n    return _TsEmitterVisitor;\n}(AbstractEmitterVisitor));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// =================================================================================================\n// =================================================================================================\n// =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========\n// =================================================================================================\n// =================================================================================================\n//\n//        DO NOT EDIT THIS LIST OF SECURITY SENSITIVE PROPERTIES WITHOUT A SECURITY REVIEW!\n//                               Reach out to mprobst for details.\n//\n// =================================================================================================\n/** Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'. */\nvar SECURITY_SCHEMA = {};\n/**\n * @param {?} ctx\n * @param {?} specs\n * @return {?}\n */\nfunction registerContext(ctx, specs) {\n    for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n        var spec = specs_1[_i];\n        SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n    }\n}\n// Case is insignificant below, all element and attribute names are lower-cased for lookup.\nregisterContext(_angular_core.SecurityContext.HTML, [\n    'iframe|srcdoc',\n    '*|innerHTML',\n    '*|outerHTML',\n]);\nregisterContext(_angular_core.SecurityContext.STYLE, ['*|style']);\n// NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\nregisterContext(_angular_core.SecurityContext.URL, [\n    '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n    'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n    'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n    'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n]);\nregisterContext(_angular_core.SecurityContext.RESOURCE_URL, [\n    'applet|code',\n    'applet|codebase',\n    'base|href',\n    'embed|src',\n    'frame|src',\n    'head|profile',\n    'html|manifest',\n    'iframe|src',\n    'link|href',\n    'media|src',\n    'object|codebase',\n    'object|data',\n    'script|src',\n]);\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BOOLEAN = 'boolean';\nvar NUMBER = 'number';\nvar STRING = 'string';\nvar OBJECT = 'object';\n/**\n * This array represents the DOM schema. It encodes inheritance, properties, and events.\n *\n * ## Overview\n *\n * Each line represents one kind of element. The `element_inheritance` and properties are joined\n * using `element_inheritance|properties` syntax.\n *\n * ## Element Inheritance\n *\n * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n * Here the individual elements are separated by `,` (commas). Every element in the list\n * has identical properties.\n *\n * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n * specified then `\"\"` (blank) element is assumed.\n *\n * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n * elements.\n *\n * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n *\n * ## Properties\n *\n * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n * by a special character designating its type:\n *\n * - (no prefix): property is a string.\n * - `*`: property represents an event.\n * - `!`: property is a boolean.\n * - `#`: property is a number.\n * - `%`: property is an object.\n *\n * ## Query\n *\n * The class creates an internal squas representation which allows to easily answer the query of\n * if a given property exist on a given element.\n *\n * NOTE: We don't yet support querying for types or events.\n * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n *       see dom_element_schema_registry_spec.ts\n */\n// =================================================================================================\n// =================================================================================================\n// =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========\n// =================================================================================================\n// =================================================================================================\n//\n//                       DO NOT EDIT THIS DOM SCHEMA WITHOUT A SECURITY REVIEW!\n//\n// Newly added properties must be security reviewed and assigned an appropriate SecurityContext in\n// dom_security_schema.ts. Reach out to mprobst & rjamet for details.\n//\n// =================================================================================================\nvar SCHEMA = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*beforecopy,*beforecut,*beforepaste,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*copy,*cuechange,*cut,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*message,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*paste,*pause,*play,*playing,*progress,*ratechange,*reset,*resize,*scroll,*search,*seeked,*seeking,*select,*selectstart,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*beforecopy,*beforecut,*beforepaste,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*copy,*cuechange,*cut,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*message,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*paste,*pause,*play,*playing,*progress,*ratechange,*reset,*resize,*scroll,*search,*seeked,*seeking,*select,*selectstart,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,keytype,name',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:cursor^:svg:|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n];\nvar _ATTR_TO_PROP = {\n    'class': 'className',\n    'for': 'htmlFor',\n    'formaction': 'formAction',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\nvar DomElementSchemaRegistry = (function (_super) {\n    __extends(DomElementSchemaRegistry, _super);\n    function DomElementSchemaRegistry() {\n        var _this = _super.call(this) || this;\n        _this._schema = {};\n        SCHEMA.forEach(function (encodedType) {\n            var type = {};\n            var _a = encodedType.split('|'), strType = _a[0], strProperties = _a[1];\n            var properties = strProperties.split(',');\n            var _b = strType.split('^'), typeNames = _b[0], superName = _b[1];\n            typeNames.split(',').forEach(function (tag) { return _this._schema[tag.toLowerCase()] = type; });\n            var superType = superName && _this._schema[superName.toLowerCase()];\n            if (superType) {\n                Object.keys(superType).forEach(function (prop) { type[prop] = superType[prop]; });\n            }\n            properties.forEach(function (property) {\n                if (property.length > 0) {\n                    switch (property[0]) {\n                        case '*':\n                            // We don't yet support events.\n                            // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                            // will\n                            // almost certainly introduce bad XSS vulnerabilities.\n                            // type[property.substring(1)] = EVENT;\n                            break;\n                        case '!':\n                            type[property.substring(1)] = BOOLEAN;\n                            break;\n                        case '#':\n                            type[property.substring(1)] = NUMBER;\n                            break;\n                        case '%':\n                            type[property.substring(1)] = OBJECT;\n                            break;\n                        default:\n                            type[property] = STRING;\n                    }\n                }\n            });\n        });\n        return _this;\n    }\n    /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasProperty = function (tagName, propName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === _angular_core.NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return false;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === _angular_core.CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Can't tell now as we don't know which properties a custom element will get\n                // once it is instantiated\n                return true;\n            }\n        }\n        var /** @type {?} */ elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n        return !!elementProperties[propName];\n    };\n    /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasElement = function (tagName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === _angular_core.NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return true;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === _angular_core.CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Allow any custom elements\n                return true;\n            }\n        }\n        return !!this._schema[tagName.toLowerCase()];\n    };\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.securityContext = function (tagName, propName, isAttribute) {\n        if (isAttribute) {\n            // NB: For security purposes, use the mapped property name, not the attribute name.\n            propName = this.getMappedPropName(propName);\n        }\n        // Make sure comparisons are case insensitive, so that case differences between attribute and\n        // property names do not have a security impact.\n        tagName = tagName.toLowerCase();\n        propName = propName.toLowerCase();\n        var /** @type {?} */ ctx = SECURITY_SCHEMA[tagName + '|' + propName];\n        if (ctx) {\n            return ctx;\n        }\n        ctx = SECURITY_SCHEMA['*|' + propName];\n        return ctx ? ctx : _angular_core.SecurityContext.NONE;\n    };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getMappedPropName = function (propName) { return _ATTR_TO_PROP[propName] || propName; };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getDefaultComponentElementName = function () { return 'ng-component'; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateProperty = function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateAttribute = function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.allKnownElementNames = function () { return Object.keys(this._schema); };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = function (propName) {\n        return dashCaseToCamelCase(propName);\n    };\n    /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue = function (camelCaseProp, userProvidedProp, val) {\n        var /** @type {?} */ unit = '';\n        var /** @type {?} */ strVal = val.toString().trim();\n        var /** @type {?} */ errorMsg = ((null));\n        if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n            if (typeof val === 'number') {\n                unit = 'px';\n            }\n            else {\n                var /** @type {?} */ valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errorMsg = \"Please provide a CSS unit value for \" + userProvidedProp + \":\" + val;\n                }\n            }\n        }\n        return { error: errorMsg, value: strVal + unit };\n    };\n    return DomElementSchemaRegistry;\n}(ElementSchemaRegistry));\nDomElementSchemaRegistry.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nDomElementSchemaRegistry.ctorParameters = function () { return []; };\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction _isPixelDimensionStyle(prop) {\n    switch (prop) {\n        case 'width':\n        case 'height':\n        case 'minWidth':\n        case 'minHeight':\n        case 'maxWidth':\n        case 'maxHeight':\n        case 'left':\n        case 'top':\n        case 'bottom':\n        case 'right':\n        case 'fontSize':\n        case 'outlineWidth':\n        case 'outlineOffset':\n        case 'paddingTop':\n        case 'paddingLeft':\n        case 'paddingBottom':\n        case 'paddingRight':\n        case 'marginTop':\n        case 'marginLeft':\n        case 'marginBottom':\n        case 'marginRight':\n        case 'borderRadius':\n        case 'borderWidth':\n        case 'borderTopWidth':\n        case 'borderLeftWidth':\n        case 'borderRightWidth':\n        case 'borderBottomWidth':\n        case 'textIndent':\n            return true;\n        default:\n            return false;\n    }\n}\nvar ShadowCss = (function () {\n    function ShadowCss() {\n        this.strictStyling = true;\n    }\n    /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype.shimCssText = function (cssText, selector, hostSelector) {\n        if (hostSelector === void 0) { hostSelector = ''; }\n        var /** @type {?} */ sourceMappingUrl = extractSourceMappingUrl(cssText);\n        cssText = stripComments(cssText);\n        cssText = this._insertDirectives(cssText);\n        return this._scopeCssText(cssText, selector, hostSelector) + sourceMappingUrl;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertDirectives = function (cssText) {\n        cssText = this._insertPolyfillDirectivesInCssText(cssText);\n        return this._insertPolyfillRulesInCssText(cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillDirectivesInCssText = function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentNextSelectorRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return m[2] + '{';\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillRulesInCssText = function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentRuleRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            var /** @type {?} */ rule = m[0].replace(m[1], '').replace(m[2], '');\n            return m[4] + rule;\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeCssText = function (cssText, scopeSelector, hostSelector) {\n        var /** @type {?} */ unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n        // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n        cssText = this._insertPolyfillHostInCssText(cssText);\n        cssText = this._convertColonHost(cssText);\n        cssText = this._convertColonHostContext(cssText);\n        cssText = this._convertShadowDOMSelectors(cssText);\n        if (scopeSelector) {\n            cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n        }\n        cssText = cssText + '\\n' + unscopedRules;\n        return cssText.trim();\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._extractUnscopedRulesFromCssText = function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        var /** @type {?} */ r = '';\n        var /** @type {?} */ m;\n        _cssContentUnscopedRuleRe.lastIndex = 0;\n        while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n            var /** @type {?} */ rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n            r += rule + '\\n\\n';\n        }\n        return r;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHost = function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHostContext = function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonRule = function (cssText, regExp, partReplacer) {\n        // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n        return cssText.replace(regExp, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            if (m[2]) {\n                var /** @type {?} */ parts = m[2].split(',');\n                var /** @type {?} */ r = [];\n                for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n                    var /** @type {?} */ p = parts[i].trim();\n                    if (!p)\n                        break;\n                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                }\n                return r.join(',');\n            }\n            else {\n                return _polyfillHostNoCombinator + m[3];\n            }\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostContextPartReplacer = function (host, part, suffix) {\n        if (part.indexOf(_polyfillHost) > -1) {\n            return this._colonHostPartReplacer(host, part, suffix);\n        }\n        else {\n            return host + part + suffix + ', ' + part + ' ' + host + suffix;\n        }\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostPartReplacer = function (host, part, suffix) {\n        return host + part.replace(_polyfillHost, '') + suffix;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertShadowDOMSelectors = function (cssText) {\n        return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelectors = function (cssText, scopeSelector, hostSelector) {\n        var _this = this;\n        return processRules(cssText, function (rule) {\n            var /** @type {?} */ selector = rule.selector;\n            var /** @type {?} */ content = rule.content;\n            if (rule.selector[0] != '@') {\n                selector =\n                    _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n            }\n            return new CssRule(selector, content);\n        });\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelector = function (selector, scopeSelector, hostSelector, strict) {\n        var _this = this;\n        return selector.split(',')\n            .map(function (part) { return part.trim().split(_shadowDeepSelectors); })\n            .map(function (deepParts) {\n            var shallowPart = deepParts[0], otherParts = deepParts.slice(1);\n            var /** @type {?} */ applyScope = function (shallowPart) {\n                if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                    return strict ?\n                        _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                        _this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n                }\n                else {\n                    return shallowPart;\n                }\n            };\n            return [applyScope(shallowPart)].concat(otherParts).join(' ');\n        })\n            .join(', ');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._selectorNeedsScoping = function (selector, scopeSelector) {\n        var /** @type {?} */ re = this._makeScopeMatcher(scopeSelector);\n        return !re.test(selector);\n    };\n    /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._makeScopeMatcher = function (scopeSelector) {\n        var /** @type {?} */ lre = /\\[/g;\n        var /** @type {?} */ rre = /\\]/g;\n        scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n        return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySelectorScope = function (selector, scopeSelector, hostSelector) {\n        // Difference from webcomponents.js: scopeSelector could not be an array\n        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {\n        // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n        _polyfillHostRe.lastIndex = 0;\n        if (_polyfillHostRe.test(selector)) {\n            var /** @type {?} */ replaceBy_1 = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\n            return selector\n                .replace(_polyfillHostNoCombinatorRe, function (hnc, selector) {\n                return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                    return before + replaceBy_1 + colon + after;\n                });\n            })\n                .replace(_polyfillHostRe, replaceBy_1 + ' ');\n        }\n        return scopeSelector + ' ' + selector;\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applyStrictSelectorScope = function (selector, scopeSelector, hostSelector) {\n        var _this = this;\n        var /** @type {?} */ isRe = /\\[is=([^\\]]*)\\]/g;\n        scopeSelector = scopeSelector.replace(isRe, function (_) {\n            var parts = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                parts[_i - 1] = arguments[_i];\n            }\n            return parts[0];\n        });\n        var /** @type {?} */ attrName = '[' + scopeSelector + ']';\n        var /** @type {?} */ _scopeSelectorPart = function (p) {\n            var /** @type {?} */ scopedP = p.trim();\n            if (!scopedP) {\n                return '';\n            }\n            if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n            }\n            else {\n                // remove :host since it should be unnecessary\n                var /** @type {?} */ t = p.replace(_polyfillHostRe, '');\n                if (t.length > 0) {\n                    var /** @type {?} */ matches = t.match(/([^:]*)(:*)(.*)/);\n                    if (matches) {\n                        scopedP = matches[1] + attrName + matches[2] + matches[3];\n                    }\n                }\n            }\n            return scopedP;\n        };\n        var /** @type {?} */ safeContent = new SafeSelector(selector);\n        selector = safeContent.content();\n        var /** @type {?} */ scopedSelector = '';\n        var /** @type {?} */ startIndex = 0;\n        var /** @type {?} */ res;\n        var /** @type {?} */ sep = /( |>|\\+|~(?!=))\\s*/g;\n        var /** @type {?} */ scopeAfter = selector.indexOf(_polyfillHostNoCombinator);\n        while ((res = sep.exec(selector)) !== null) {\n            var /** @type {?} */ separator = res[1];\n            var /** @type {?} */ part = selector.slice(startIndex, res.index).trim();\n            // if a selector appears before :host-context it should not be shimmed as it\n            // matches on ancestor elements and not on elements in the host's shadow\n            var /** @type {?} */ scopedPart = startIndex >= scopeAfter ? _scopeSelectorPart(part) : part;\n            scopedSelector += scopedPart + \" \" + separator + \" \";\n            startIndex = sep.lastIndex;\n        }\n        scopedSelector += _scopeSelectorPart(selector.substring(startIndex));\n        // replace the placeholders with their original values\n        return safeContent.restore(scopedSelector);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillHostInCssText = function (selector) {\n        return selector.replace(_colonHostContextRe, _polyfillHostContext)\n            .replace(_colonHostRe, _polyfillHost);\n    };\n    return ShadowCss;\n}());\nvar SafeSelector = (function () {\n    /**\n     * @param {?} selector\n     */\n    function SafeSelector(selector) {\n        var _this = this;\n        this.placeholders = [];\n        this.index = 0;\n        // Replaces attribute selectors with placeholders.\n        // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n        selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n            var replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(keep);\n            _this.index++;\n            return replaceBy;\n        });\n        // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n        // WS and \"+\" would otherwise be interpreted as selector separators.\n        this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n            var replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(exp);\n            _this.index++;\n            return pseudo + replaceBy;\n        });\n    }\n    \n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    SafeSelector.prototype.restore = function (content) {\n        var _this = this;\n        return content.replace(/__ph-(\\d+)__/g, function (ph, index) { return _this.placeholders[+index]; });\n    };\n    /**\n     * @return {?}\n     */\n    SafeSelector.prototype.content = function () { return this._content; };\n    return SafeSelector;\n}());\nvar _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\nvar _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _polyfillHost = '-shadowcsshost';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g,\n    // Deprecated selectors\n    /\\/shadow-deep\\//g,\n    /\\/shadow\\//g,\n];\nvar _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)/g;\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stripComments(input) {\n    return input.replace(_commentRe, '');\n}\n// all comments except inline source mapping\nvar _sourceMappingUrlRe = /\\/\\*\\s*#\\s*sourceMappingURL=[\\s\\S]+?\\*\\//;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction extractSourceMappingUrl(input) {\n    var /** @type {?} */ matcher = input.match(_sourceMappingUrlRe);\n    return matcher ? matcher[0] : '';\n}\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar CssRule = (function () {\n    /**\n     * @param {?} selector\n     * @param {?} content\n     */\n    function CssRule(selector, content) {\n        this.selector = selector;\n        this.content = content;\n    }\n    return CssRule;\n}());\n/**\n * @param {?} input\n * @param {?} ruleCallback\n * @return {?}\n */\nfunction processRules(input, ruleCallback) {\n    var /** @type {?} */ inputWithEscapedBlocks = escapeBlocks(input);\n    var /** @type {?} */ nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ selector = m[2];\n        var /** @type {?} */ content = '';\n        var /** @type {?} */ suffix = m[4];\n        var /** @type {?} */ contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var /** @type {?} */ rule = ruleCallback(new CssRule(selector, content));\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n}\nvar StringWithEscapedBlocks = (function () {\n    /**\n     * @param {?} escapedString\n     * @param {?} blocks\n     */\n    function StringWithEscapedBlocks(escapedString, blocks) {\n        this.escapedString = escapedString;\n        this.blocks = blocks;\n    }\n    return StringWithEscapedBlocks;\n}());\n/**\n * @param {?} input\n * @return {?}\n */\nfunction escapeBlocks(input) {\n    var /** @type {?} */ inputParts = input.split(_curlyRe);\n    var /** @type {?} */ resultParts = [];\n    var /** @type {?} */ escapedBlocks = [];\n    var /** @type {?} */ bracketCount = 0;\n    var /** @type {?} */ currentBlockParts = [];\n    for (var /** @type {?} */ partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var /** @type {?} */ part = inputParts[partIndex];\n        if (part == CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part == OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\nvar CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\nvar StylesCompileDependency = (function () {\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} isShimmed\n     * @param {?} valuePlaceholder\n     */\n    function StylesCompileDependency(name, moduleUrl, isShimmed, valuePlaceholder) {\n        this.name = name;\n        this.moduleUrl = moduleUrl;\n        this.isShimmed = isShimmed;\n        this.valuePlaceholder = valuePlaceholder;\n    }\n    return StylesCompileDependency;\n}());\nvar StylesCompileResult = (function () {\n    /**\n     * @param {?} componentStylesheet\n     * @param {?} externalStylesheets\n     */\n    function StylesCompileResult(componentStylesheet, externalStylesheets) {\n        this.componentStylesheet = componentStylesheet;\n        this.externalStylesheets = externalStylesheets;\n    }\n    return StylesCompileResult;\n}());\nvar CompiledStylesheet = (function () {\n    /**\n     * @param {?} statements\n     * @param {?} stylesVar\n     * @param {?} dependencies\n     * @param {?} isShimmed\n     * @param {?} meta\n     */\n    function CompiledStylesheet(statements, stylesVar, dependencies, isShimmed, meta) {\n        this.statements = statements;\n        this.stylesVar = stylesVar;\n        this.dependencies = dependencies;\n        this.isShimmed = isShimmed;\n        this.meta = meta;\n    }\n    return CompiledStylesheet;\n}());\nvar StyleCompiler = (function () {\n    /**\n     * @param {?} _urlResolver\n     */\n    function StyleCompiler(_urlResolver) {\n        this._urlResolver = _urlResolver;\n        this._shadowCss = new ShadowCss();\n    }\n    /**\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileComponent = function (comp) {\n        var _this = this;\n        var /** @type {?} */ template = ((comp.template));\n        var /** @type {?} */ externalStylesheets = [];\n        var /** @type {?} */ componentStylesheet = this._compileStyles(comp, new CompileStylesheetMetadata({\n            styles: template.styles,\n            styleUrls: template.styleUrls,\n            moduleUrl: identifierModuleUrl(comp.type)\n        }), true);\n        template.externalStylesheets.forEach(function (stylesheetMeta) {\n            var /** @type {?} */ compiledStylesheet = _this._compileStyles(comp, stylesheetMeta, false);\n            externalStylesheets.push(compiledStylesheet);\n        });\n        return new StylesCompileResult(componentStylesheet, externalStylesheets);\n    };\n    /**\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    StyleCompiler.prototype._compileStyles = function (comp, stylesheet, isComponentStylesheet) {\n        var _this = this;\n        var /** @type {?} */ shim = ((comp.template)).encapsulation === _angular_core.ViewEncapsulation.Emulated;\n        var /** @type {?} */ styleExpressions = stylesheet.styles.map(function (plainStyle) { return literal(_this._shimIfNeeded(plainStyle, shim)); });\n        var /** @type {?} */ dependencies = [];\n        for (var /** @type {?} */ i = 0; i < stylesheet.styleUrls.length; i++) {\n            var /** @type {?} */ identifier = { reference: null };\n            dependencies.push(new StylesCompileDependency(getStylesVarName(null), stylesheet.styleUrls[i], shim, identifier));\n            styleExpressions.push(new ExternalExpr(identifier));\n        }\n        // styles variable contains plain strings and arrays of other styles arrays (recursive),\n        // so we set its type to dynamic.\n        var /** @type {?} */ stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n        var /** @type {?} */ stmt = variable(stylesVar)\n            .set(literalArr(styleExpressions, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])))\n            .toDeclStmt(null, [StmtModifier.Final]);\n        return new CompiledStylesheet([stmt], stylesVar, dependencies, shim, stylesheet);\n    };\n    /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype._shimIfNeeded = function (style$$1, shim) {\n        return shim ? this._shadowCss.shimCssText(style$$1, CONTENT_ATTR, HOST_ATTR) : style$$1;\n    };\n    return StyleCompiler;\n}());\nStyleCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nStyleCompiler.ctorParameters = function () { return [\n    { type: UrlResolver, },\n]; };\n/**\n * @param {?} component\n * @return {?}\n */\nfunction getStylesVarName(component) {\n    var /** @type {?} */ result = \"styles\";\n    if (component) {\n        result += \"_\" + identifierName(component.type);\n    }\n    return result;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventHandlerVars = (function () {\n    function EventHandlerVars() {\n    }\n    return EventHandlerVars;\n}());\nEventHandlerVars.event = variable('$event');\nvar ConvertActionBindingResult = (function () {\n    /**\n     * @param {?} stmts\n     * @param {?} allowDefault\n     */\n    function ConvertActionBindingResult(stmts, allowDefault) {\n        this.stmts = stmts;\n        this.allowDefault = allowDefault;\n    }\n    return ConvertActionBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression is\n * used in an action binding (e.g. an event handler).\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} action\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertActionBinding(localResolver, implicitReceiver, action, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ actionWithoutBuiltins = convertPropertyBindingBuiltins({\n        createLiteralArrayConverter: function (argCount) {\n            // Note: no caching for literal arrays in actions.\n            return function (args) { return literalArr(args); };\n        },\n        createLiteralMapConverter: function (keys) {\n            // Note: no caching for literal maps in actions.\n            return function (args) { return literalMap(/** @type {?} */ (keys.map(function (key, i) { return [key, args[i]]; }))); };\n        },\n        createPipeConverter: function (name) {\n            throw new Error(\"Illegal State: Actions are not allowed to contain pipes. Pipe: \" + name);\n        }\n    }, action);\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ actionStmts = [];\n    flattenStatements(actionWithoutBuiltins.visit(visitor, _Mode.Statement), actionStmts);\n    prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n    var /** @type {?} */ lastIndex = actionStmts.length - 1;\n    var /** @type {?} */ preventDefaultVar = ((null));\n    if (lastIndex >= 0) {\n        var /** @type {?} */ lastStatement = actionStmts[lastIndex];\n        var /** @type {?} */ returnExpr = convertStmtIntoExpression(lastStatement);\n        if (returnExpr) {\n            // Note: We need to cast the result of the method call to dynamic,\n            // as it might be a void method!\n            preventDefaultVar = createPreventDefaultVar(bindingId);\n            actionStmts[lastIndex] =\n                preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false)))\n                    .toDeclStmt(null, [StmtModifier.Final]);\n        }\n    }\n    return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertPropertyBindingBuiltins(converterFactory, ast) {\n    return convertBuiltins(converterFactory, ast);\n}\nvar ConvertPropertyBindingResult = (function () {\n    /**\n     * @param {?} stmts\n     * @param {?} currValExpr\n     */\n    function ConvertPropertyBindingResult(stmts, currValExpr) {\n        this.stmts = stmts;\n        this.currValExpr = currValExpr;\n    }\n    return ConvertPropertyBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression\n * is used in property binding. The expression has to be preprocessed via\n * `convertPropertyBindingBuiltins`.\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} expressionWithoutBuiltins\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertPropertyBinding(localResolver, implicitReceiver, expressionWithoutBuiltins, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ currValExpr = createCurrValueExpr(bindingId);\n    var /** @type {?} */ stmts = [];\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ outputExpr = expressionWithoutBuiltins.visit(visitor, _Mode.Expression);\n    if (visitor.temporaryCount) {\n        for (var /** @type {?} */ i = 0; i < visitor.temporaryCount; i++) {\n            stmts.push(temporaryDeclaration(bindingId, i));\n        }\n    }\n    stmts.push(currValExpr.set(outputExpr).toDeclStmt(null, [StmtModifier.Final]));\n    return new ConvertPropertyBindingResult(stmts, currValExpr);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertBuiltins(converterFactory, ast) {\n    var /** @type {?} */ visitor = new _BuiltinAstConverter(converterFactory);\n    return ast.visit(visitor);\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryName(bindingId, temporaryNumber) {\n    return \"tmp_\" + bindingId + \"_\" + temporaryNumber;\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryDeclaration(bindingId, temporaryNumber) {\n    return new DeclareVarStmt(temporaryName(bindingId, temporaryNumber), NULL_EXPR);\n}\n/**\n * @param {?} temporaryCount\n * @param {?} bindingId\n * @param {?} statements\n * @return {?}\n */\nfunction prependTemporaryDecls(temporaryCount, bindingId, statements) {\n    for (var /** @type {?} */ i = temporaryCount - 1; i >= 0; i--) {\n        statements.unshift(temporaryDeclaration(bindingId, i));\n    }\n}\nvar _Mode = {};\n_Mode.Statement = 0;\n_Mode.Expression = 1;\n_Mode[_Mode.Statement] = \"Statement\";\n_Mode[_Mode.Expression] = \"Expression\";\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureStatementMode(mode, ast) {\n    if (mode !== _Mode.Statement) {\n        throw new Error(\"Expected a statement, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureExpressionMode(mode, ast) {\n    if (mode !== _Mode.Expression) {\n        throw new Error(\"Expected an expression, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} expr\n * @return {?}\n */\nfunction convertToStatementIfNeeded(mode, expr) {\n    if (mode === _Mode.Statement) {\n        return expr.toStmt();\n    }\n    else {\n        return expr;\n    }\n}\nvar _BuiltinAstConverter = (function (_super) {\n    __extends(_BuiltinAstConverter, _super);\n    /**\n     * @param {?} _converterFactory\n     */\n    function _BuiltinAstConverter(_converterFactory) {\n        var _this = _super.call(this) || this;\n        _this._converterFactory = _converterFactory;\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitPipe = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = [ast.exp].concat(ast.args).map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createPipeConverter(ast.name, args.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralArray = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.expressions.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralArrayConverter(ast.expressions.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralMap = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.values.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralMapConverter(ast.keys));\n    };\n    return _BuiltinAstConverter;\n}(AstTransformer));\nvar _AstToIrVisitor = (function () {\n    /**\n     * @param {?} _localResolver\n     * @param {?} _implicitReceiver\n     * @param {?} bindingId\n     */\n    function _AstToIrVisitor(_localResolver, _implicitReceiver, bindingId) {\n        this._localResolver = _localResolver;\n        this._implicitReceiver = _implicitReceiver;\n        this.bindingId = bindingId;\n        this._nodeMap = new Map();\n        this._resultMap = new Map();\n        this._currentTemporary = 0;\n        this.temporaryCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitBinary = function (ast, mode) {\n        var /** @type {?} */ op;\n        switch (ast.operation) {\n            case '+':\n                op = BinaryOperator.Plus;\n                break;\n            case '-':\n                op = BinaryOperator.Minus;\n                break;\n            case '*':\n                op = BinaryOperator.Multiply;\n                break;\n            case '/':\n                op = BinaryOperator.Divide;\n                break;\n            case '%':\n                op = BinaryOperator.Modulo;\n                break;\n            case '&&':\n                op = BinaryOperator.And;\n                break;\n            case '||':\n                op = BinaryOperator.Or;\n                break;\n            case '==':\n                op = BinaryOperator.Equals;\n                break;\n            case '!=':\n                op = BinaryOperator.NotEquals;\n                break;\n            case '===':\n                op = BinaryOperator.Identical;\n                break;\n            case '!==':\n                op = BinaryOperator.NotIdentical;\n                break;\n            case '<':\n                op = BinaryOperator.Lower;\n                break;\n            case '>':\n                op = BinaryOperator.Bigger;\n                break;\n            case '<=':\n                op = BinaryOperator.LowerEquals;\n                break;\n            case '>=':\n                op = BinaryOperator.BiggerEquals;\n                break;\n            default:\n                throw new Error(\"Unsupported operation \" + ast.operation);\n        }\n        return convertToStatementIfNeeded(mode, new BinaryOperatorExpr(op, this.visit(ast.left, _Mode.Expression), this.visit(ast.right, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitChain = function (ast, mode) {\n        ensureStatementMode(mode, ast);\n        return this.visitAll(ast.expressions, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitConditional = function (ast, mode) {\n        var /** @type {?} */ value = this.visit(ast.condition, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, value.conditional(this.visit(ast.trueExp, _Mode.Expression), this.visit(ast.falseExp, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPipe = function (ast, mode) {\n        throw new Error(\"Illegal state: Pipes should have been converted into functions. Pipe: \" + ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitFunctionCall = function (ast, mode) {\n        var /** @type {?} */ convertedArgs = this.visitAll(ast.args, _Mode.Expression);\n        var /** @type {?} */ fnResult;\n        if (ast instanceof BuiltinFunctionCall) {\n            fnResult = ast.converter(convertedArgs);\n        }\n        else {\n            fnResult = this.visit(/** @type {?} */ ((ast.target)), _Mode.Expression).callFn(convertedArgs);\n        }\n        return convertToStatementIfNeeded(mode, fnResult);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitImplicitReceiver = function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        return this._implicitReceiver;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitInterpolation = function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        var /** @type {?} */ args = [literal(ast.expressions.length)];\n        for (var /** @type {?} */ i = 0; i < ast.strings.length - 1; i++) {\n            args.push(literal(ast.strings[i]));\n            args.push(this.visit(ast.expressions[i], _Mode.Expression));\n        }\n        args.push(literal(ast.strings[ast.strings.length - 1]));\n        return ast.expressions.length <= 9 ?\n            importExpr(createIdentifier(Identifiers.inlineInterpolate)).callFn(args) :\n            importExpr(createIdentifier(Identifiers.interpolate)).callFn([\n                args[0], literalArr(args.slice(1))\n            ]);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedRead = function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            return convertToStatementIfNeeded(mode, this.visit(ast.obj, _Mode.Expression).key(this.visit(ast.key, _Mode.Expression)));\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedWrite = function (ast, mode) {\n        var /** @type {?} */ obj = this.visit(ast.obj, _Mode.Expression);\n        var /** @type {?} */ key = this.visit(ast.key, _Mode.Expression);\n        var /** @type {?} */ value = this.visit(ast.value, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralArray = function (ast, mode) {\n        throw new Error(\"Illegal State: literal arrays should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralMap = function (ast, mode) {\n        throw new Error(\"Illegal State: literal maps should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralPrimitive = function (ast, mode) {\n        return convertToStatementIfNeeded(mode, literal(ast.value));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._getLocal = function (name) { return this._localResolver.getLocal(name); };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitMethodCall = function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ args = this.visitAll(ast.args, _Mode.Expression);\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this.visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                var /** @type {?} */ varExpr = this._getLocal(ast.name);\n                if (varExpr) {\n                    result = varExpr.callFn(args);\n                }\n            }\n            if (result == null) {\n                result = receiver.callMethod(ast.name, args);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPrefixNot = function (ast, mode) {\n        return convertToStatementIfNeeded(mode, not(this.visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyRead = function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this.visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                result = this._getLocal(ast.name);\n            }\n            if (result == null) {\n                result = receiver.prop(ast.name);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyWrite = function (ast, mode) {\n        var /** @type {?} */ receiver = this.visit(ast.receiver, _Mode.Expression);\n        if (receiver === this._implicitReceiver) {\n            var /** @type {?} */ varExpr = this._getLocal(ast.name);\n            if (varExpr) {\n                throw new Error('Cannot assign to a reference or variable!');\n            }\n        }\n        return convertToStatementIfNeeded(mode, receiver.prop(ast.name).set(this.visit(ast.value, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafePropertyRead = function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafeMethodCall = function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitAll = function (asts, mode) {\n        var _this = this;\n        return asts.map(function (ast) { return _this.visit(ast, mode); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitQuote = function (ast, mode) {\n        throw new Error(\"Quotes are not supported for evaluation!\\n        Statement: \" + ast.uninterpretedExpression + \" located at \" + ast.location);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visit = function (ast, mode) {\n        var /** @type {?} */ result = this._resultMap.get(ast);\n        if (result)\n            return result;\n        return (this._nodeMap.get(ast) || ast).visit(this, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.convertSafeAccess = function (ast, leftMostSafe, mode) {\n        // If the expression contains a safe access node on the left it needs to be converted to\n        // an expression that guards the access to the member by checking the receiver for blank. As\n        // execution proceeds from left to right, the left most part of the expression must be guarded\n        // first but, because member access is left associative, the right side of the expression is at\n        // the top of the AST. The desired result requires lifting a copy of the the left part of the\n        // expression up to test it for blank before generating the unguarded version.\n        // Consider, for example the following expression: a?.b.c?.d.e\n        // This results in the ast:\n        //         .\n        //        / \\\n        //       ?.   e\n        //      /  \\\n        //     .    d\n        //    / \\\n        //   ?.  c\n        //  /  \\\n        // a    b\n        // The following tree should be generated:\n        //\n        //        /---- ? ----\\\n        //       /      |      \\\n        //     a   /--- ? ---\\  null\n        //        /     |     \\\n        //       .      .     null\n        //      / \\    / \\\n        //     .  c   .   e\n        //    / \\    / \\\n        //   a   b  ,   d\n        //         / \\\n        //        .   c\n        //       / \\\n        //      a   b\n        //\n        // Notice that the first guard condition is the left hand of the left most safe access node\n        // which comes in as leftMostSafe to this routine.\n        var /** @type {?} */ guardedExpression = this.visit(leftMostSafe.receiver, _Mode.Expression);\n        var /** @type {?} */ temporary = ((undefined));\n        if (this.needsTemporary(leftMostSafe.receiver)) {\n            // If the expression has method calls or pipes then we need to save the result into a\n            // temporary variable to avoid calling stateful or impure code more than once.\n            temporary = this.allocateTemporary();\n            // Preserve the result in the temporary variable\n            guardedExpression = temporary.set(guardedExpression);\n            // Ensure all further references to the guarded expression refer to the temporary instead.\n            this._resultMap.set(leftMostSafe.receiver, temporary);\n        }\n        var /** @type {?} */ condition = guardedExpression.isBlank();\n        // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n        // leftMostNode with its unguarded version in the call to `this.visit()`.\n        if (leftMostSafe instanceof SafeMethodCall) {\n            this._nodeMap.set(leftMostSafe, new MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n        }\n        else {\n            this._nodeMap.set(leftMostSafe, new PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n        }\n        // Recursively convert the node now without the guarded member access.\n        var /** @type {?} */ access = this.visit(ast, _Mode.Expression);\n        // Remove the mapping. This is not strictly required as the converter only traverses each node\n        // once but is safer if the conversion is changed to traverse the nodes more than once.\n        this._nodeMap.delete(leftMostSafe);\n        // If we allocated a temporary, release it.\n        if (temporary) {\n            this.releaseTemporary(temporary);\n        }\n        // Produce the conditional\n        return convertToStatementIfNeeded(mode, condition.conditional(literal(null), access));\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.leftMostSafeNode = function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        return ast.visit({\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitBinary: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitChain: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitConditional: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitFunctionCall: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitImplicitReceiver: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitInterpolation: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedRead: function (ast) { return visit(this, ast.obj); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedWrite: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralArray: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralMap: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralPrimitive: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitMethodCall: function (ast) { return visit(this, ast.receiver); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPipe: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPrefixNot: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyRead: function (ast) { return visit(this, ast.receiver); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyWrite: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitQuote: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafeMethodCall: function (ast) { return visit(this, ast.receiver) || ast; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafePropertyRead: function (ast) {\n                return visit(this, ast.receiver) || ast;\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.needsTemporary = function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return ast && (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        var /** @type {?} */ visitSome = function (visitor, ast) {\n            return ast.some(function (ast) { return visit(visitor, ast); });\n        };\n        return ast.visit({\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitBinary: function (ast) { return visit(this, ast.left) || visit(this, ast.right); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitChain: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitConditional: function (ast) {\n                return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                    visit(this, ast.falseExp);\n            },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitFunctionCall: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitImplicitReceiver: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitInterpolation: function (ast) { return visitSome(this, ast.expressions); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedRead: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedWrite: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralArray: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralMap: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralPrimitive: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitMethodCall: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPipe: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPrefixNot: function (ast) { return visit(this, ast.expression); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyRead: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyWrite: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitQuote: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafeMethodCall: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafePropertyRead: function (ast) { return false; }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.allocateTemporary = function () {\n        var /** @type {?} */ tempNumber = this._currentTemporary++;\n        this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n        return new ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n    };\n    /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.releaseTemporary = function (temporary) {\n        this._currentTemporary--;\n        if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n            throw new Error(\"Temporary \" + temporary.name + \" released out of order\");\n        }\n    };\n    return _AstToIrVisitor;\n}());\n/**\n * @param {?} arg\n * @param {?} output\n * @return {?}\n */\nfunction flattenStatements(arg, output) {\n    if (Array.isArray(arg)) {\n        ((arg)).forEach(function (entry) { return flattenStatements(entry, output); });\n    }\n    else {\n        output.push(arg);\n    }\n}\nvar DefaultLocalResolver = (function () {\n    function DefaultLocalResolver() {\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DefaultLocalResolver.prototype.getLocal = function (name) {\n        if (name === EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        return null;\n    };\n    return DefaultLocalResolver;\n}());\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createCurrValueExpr(bindingId) {\n    return variable(\"currVal_\" + bindingId); // fix syntax highlighting: `\n}\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createPreventDefaultVar(bindingId) {\n    return variable(\"pd_\" + bindingId);\n}\n/**\n * @param {?} stmt\n * @return {?}\n */\nfunction convertStmtIntoExpression(stmt) {\n    if (stmt instanceof ExpressionStatement) {\n        return stmt.expr;\n    }\n    else if (stmt instanceof ReturnStatement) {\n        return stmt.value;\n    }\n    return null;\n}\nvar BuiltinFunctionCall = (function (_super) {\n    __extends(BuiltinFunctionCall, _super);\n    /**\n     * @param {?} span\n     * @param {?} args\n     * @param {?} converter\n     */\n    function BuiltinFunctionCall(span, args, converter) {\n        var _this = _super.call(this, span, null, args) || this;\n        _this.args = args;\n        _this.converter = converter;\n        return _this;\n    }\n    return BuiltinFunctionCall;\n}(FunctionCall));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CLASS_ATTR$1 = 'class';\nvar STYLE_ATTR = 'style';\nvar IMPLICIT_TEMPLATE_VAR = '\\$implicit';\nvar ViewCompileResult = (function () {\n    /**\n     * @param {?} statements\n     * @param {?} viewClassVar\n     * @param {?} rendererTypeVar\n     */\n    function ViewCompileResult(statements, viewClassVar, rendererTypeVar) {\n        this.statements = statements;\n        this.viewClassVar = viewClassVar;\n        this.rendererTypeVar = rendererTypeVar;\n    }\n    return ViewCompileResult;\n}());\nvar ViewCompiler = (function () {\n    /**\n     * @param {?} _genConfigNext\n     * @param {?} _schemaRegistry\n     */\n    function ViewCompiler(_genConfigNext, _schemaRegistry) {\n        this._genConfigNext = _genConfigNext;\n        this._schemaRegistry = _schemaRegistry;\n    }\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    ViewCompiler.prototype.compileComponent = function (component, template, styles, usedPipes) {\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ staticQueryIds = findStaticQueryIds(template);\n        var /** @type {?} */ statements = [];\n        var /** @type {?} */ renderComponentVarName = ((undefined));\n        if (!component.isHost) {\n            var /** @type {?} */ template_1 = ((component.template));\n            var /** @type {?} */ customRenderData = [];\n            if (template_1.animations && template_1.animations.length) {\n                customRenderData.push(new LiteralMapEntry('animation', convertValueToOutputAst(template_1.animations), true));\n            }\n            var /** @type {?} */ renderComponentVar = variable(rendererTypeName(component.type.reference));\n            renderComponentVarName = ((renderComponentVar.name));\n            statements.push(renderComponentVar\n                .set(importExpr(createIdentifier(Identifiers.createRendererType2))\n                .callFn([new LiteralMapExpr([\n                    new LiteralMapEntry('encapsulation', literal(template_1.encapsulation)),\n                    new LiteralMapEntry('styles', styles),\n                    new LiteralMapEntry('data', new LiteralMapExpr(customRenderData))\n                ])]))\n                .toDeclStmt(importType(createIdentifier(Identifiers.RendererType2)), [StmtModifier.Final]));\n        }\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder(parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        statements.push.apply(statements, visitor.build());\n        return new ViewCompileResult(statements, visitor.viewName, renderComponentVarName);\n    };\n    return ViewCompiler;\n}());\nViewCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nViewCompiler.ctorParameters = function () { return [\n    { type: CompilerConfig, },\n    { type: ElementSchemaRegistry, },\n]; };\nvar LOG_VAR = variable('l');\nvar VIEW_VAR = variable('v');\nvar CHECK_VAR = variable('ck');\nvar COMP_VAR = variable('co');\nvar EVENT_NAME_VAR = variable('en');\nvar ALLOW_DEFAULT_VAR = variable(\"ad\");\nvar ViewBuilder = (function () {\n    /**\n     * @param {?} parent\n     * @param {?} component\n     * @param {?} embeddedViewIndex\n     * @param {?} usedPipes\n     * @param {?} staticQueryIds\n     * @param {?} viewBuilderFactory\n     */\n    function ViewBuilder(parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory) {\n        this.parent = parent;\n        this.component = component;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.usedPipes = usedPipes;\n        this.staticQueryIds = staticQueryIds;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.nodes = [];\n        this.purePipeNodeIndices = Object.create(null);\n        this.refNodeIndices = Object.create(null);\n        this.variables = [];\n        this.children = [];\n        // TODO(tbosch): The old view compiler used to use an `any` type\n        // for the context in any embedded view. We keep this behaivor for now\n        // to be able to introduce the new view compiler without too many errors.\n        this.compType =\n            this.embeddedViewIndex > 0 ? DYNAMIC_TYPE : importType(this.component.type);\n    }\n    Object.defineProperty(ViewBuilder.prototype, \"viewName\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return viewClassName(this.component.type.reference, this.embeddedViewIndex);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = function (variables, astNodes) {\n        var _this = this;\n        this.variables = variables;\n        // create the pipes for the pure pipes immediately, so that we know their indices.\n        if (!this.parent) {\n            this.usedPipes.forEach(function (pipe) {\n                if (pipe.pure) {\n                    _this.purePipeNodeIndices[pipe.name] = _this._createPipe(null, pipe);\n                }\n            });\n        }\n        if (!this.parent) {\n            var /** @type {?} */ queryIds_1 = staticViewQueryIds(this.staticQueryIds);\n            this.component.viewQueries.forEach(function (query, queryIndex) {\n                // Note: queries start with id 1 so we can use the number in a Bloom filter!\n                var /** @type {?} */ queryId = queryIndex + 1;\n                var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n                var /** @type {?} */ flags = 67108864 /* TypeViewQuery */ | calcStaticDynamicQueryFlags(queryIds_1, queryId, query.first);\n                _this.nodes.push(function () { return ({\n                    sourceSpan: null,\n                    nodeFlags: flags,\n                    nodeDef: importExpr(createIdentifier(Identifiers.queryDef)).callFn([\n                        literal(flags), literal(queryId),\n                        new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType))])\n                    ])\n                }); });\n            });\n        }\n        templateVisitAll(this, astNodes);\n        if (this.parent && (astNodes.length === 0 || needsAdditionalRootNode(astNodes))) {\n            // if the view is an embedded view, then we need to add an additional root node in some cases\n            this.nodes.push(function () { return ({\n                sourceSpan: null,\n                nodeFlags: 1 /* TypeElement */,\n                nodeDef: importExpr(createIdentifier(Identifiers.anchorDef)).callFn([\n                    literal(0 /* None */), NULL_EXPR, NULL_EXPR, literal(0)\n                ])\n            }); });\n        }\n    };\n    /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = function (targetStatements) {\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(targetStatements); });\n        var _a = this._createNodeExpressions(), updateRendererStmts = _a.updateRendererStmts, updateDirectivesStmts = _a.updateDirectivesStmts, nodeDefExprs = _a.nodeDefExprs;\n        var /** @type {?} */ updateRendererFn = this._createUpdateFn(updateRendererStmts);\n        var /** @type {?} */ updateDirectivesFn = this._createUpdateFn(updateDirectivesStmts);\n        var /** @type {?} */ viewFlags = 0;\n        if (!this.parent && this.component.changeDetection === _angular_core.ChangeDetectionStrategy.OnPush) {\n            viewFlags |= 2 /* OnPush */;\n        }\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(this.viewName, [new FnParam(/** @type {?} */ ((LOG_VAR.name)))], [new ReturnStatement(importExpr(createIdentifier(Identifiers.viewDef)).callFn([\n                literal(viewFlags),\n                literalArr(nodeDefExprs),\n                updateDirectivesFn,\n                updateRendererFn,\n            ]))], importType(createIdentifier(Identifiers.ViewDefinition)));\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    ViewBuilder.prototype._createUpdateFn = function (updateStmts) {\n        var /** @type {?} */ updateFn;\n        if (updateStmts.length > 0) {\n            var /** @type {?} */ preStmts = [];\n            if (!this.component.isHost && findReadVarNames(updateStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            updateFn = fn([\n                new FnParam(/** @type {?} */ ((CHECK_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE)\n            ], preStmts.concat(updateStmts), INFERRED_TYPE);\n        }\n        else {\n            updateFn = NULL_EXPR;\n        }\n        return updateFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = function (ast, context) {\n        // ngContentDef(ngContentIndex: number, index: number): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 4 /* TypeNgContent */,\n            nodeDef: importExpr(createIdentifier(Identifiers.ngContentDef)).callFn([\n                literal(ast.ngContentIndex), literal(ast.index)\n            ])\n        }); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = function (ast, context) {\n        // textDef(ngContentIndex: number, constants: string[]): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 2 /* TypeText */,\n            nodeDef: importExpr(createIdentifier(Identifiers.textDef)).callFn([\n                literal(ast.ngContentIndex), literalArr([literal(ast.value)])\n            ])\n        }); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var /** @type {?} */ astWithSource = (ast.value);\n        var /** @type {?} */ inter = (astWithSource.ast);\n        var /** @type {?} */ updateRendererExpressions = inter.expressions.map(function (expr, bindingIndex) { return _this._preprocessUpdateExpression({ nodeIndex: nodeIndex, bindingIndex: bindingIndex, sourceSpan: ast.sourceSpan, context: COMP_VAR, value: expr }); });\n        // textDef(ngContentIndex: number, constants: string[]): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 2 /* TypeText */,\n            nodeDef: importExpr(createIdentifier(Identifiers.textDef)).callFn([\n                literal(ast.ngContentIndex), literalArr(inter.strings.map(function (s) { return literal(s); }))\n            ]),\n            updateRenderer: updateRendererExpressions\n        }); };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, queryMatchesExpr = _a.queryMatchesExpr, hostEvents = _a.hostEvents;\n        var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n        this.children.push(childVisitor);\n        childVisitor.visitAll(ast.variables, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        // anchorDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n        //   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:\n        //   ViewDefinitionFactory): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 1 /* TypeElement */ | flags,\n            nodeDef: importExpr(createIdentifier(Identifiers.anchorDef)).callFn([\n                literal(flags),\n                queryMatchesExpr,\n                literal(ast.ngContentIndex),\n                literal(childCount),\n                _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                variable(childVisitor.viewName),\n            ])\n        }); };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        // Using a null element name creates an anchor.\n        var /** @type {?} */ elName = isNgContainer(ast.name) ? null : ast.name;\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, usedEvents = _a.usedEvents, queryMatchesExpr = _a.queryMatchesExpr, dirHostBindings = _a.hostBindings, hostEvents = _a.hostEvents;\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        if (elName) {\n            var /** @type {?} */ hostBindings = ast.inputs\n                .map(function (inputAst) { return ({\n                context: /** @type {?} */ (COMP_VAR),\n                inputAst: inputAst,\n                dirAst: /** @type {?} */ (null),\n            }); })\n                .concat(dirHostBindings);\n            if (hostBindings.length) {\n                updateRendererExpressions =\n                    hostBindings.map(function (hostBinding, bindingIndex) { return _this._preprocessUpdateExpression({\n                        context: hostBinding.context,\n                        nodeIndex: nodeIndex,\n                        bindingIndex: bindingIndex,\n                        sourceSpan: hostBinding.inputAst.sourceSpan,\n                        value: hostBinding.inputAst.value\n                    }); });\n                inputDefs = hostBindings.map(function (hostBinding) { return elementBindingDef(hostBinding.inputAst, hostBinding.dirAst); });\n            }\n            outputDefs = usedEvents.map(function (_a) {\n                var target = _a[0], eventName = _a[1];\n                return literalArr([literal(target), literal(eventName)]);\n            });\n        }\n        templateVisitAll(this, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var /** @type {?} */ compAst = ast.directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        var /** @type {?} */ compRendererType = NULL_EXPR;\n        var /** @type {?} */ compView = NULL_EXPR;\n        if (compAst) {\n            compView = importExpr({ reference: compAst.directive.componentViewType });\n            compRendererType = importExpr({ reference: compAst.directive.rendererType });\n        }\n        // elementDef(\n        //   flags: NodeFlags, matchedQueriesDsl: [string | number, QueryValueType][],\n        //   ngContentIndex: number, childCount: number, namespaceAndName: string,\n        //   fixedAttrs: [string, string][] = [],\n        //   bindings?: [BindingFlags, string, string | SecurityContext][],\n        //   outputs?: ([OutputType.ElementOutput | OutputType.DirectiveHostOutput, string, string])[],\n        //   handleEvent?: ElementHandleEventFn,\n        //   componentView?: () => ViewDefinition, componentRendererType?: RendererType2): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 1 /* TypeElement */ | flags,\n            nodeDef: importExpr(createIdentifier(Identifiers.elementDef)).callFn([\n                literal(flags),\n                queryMatchesExpr,\n                literal(ast.ngContentIndex),\n                literal(childCount),\n                literal(elName),\n                elName ? fixedAttrsDef(ast) : NULL_EXPR,\n                inputDefs.length ? literalArr(inputDefs) : NULL_EXPR,\n                outputDefs.length ? literalArr(outputDefs) : NULL_EXPR,\n                _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                compView,\n                compRendererType,\n            ]),\n            updateRenderer: updateRendererExpressions\n        }); };\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitElementOrTemplate = function (nodeIndex, ast) {\n        var _this = this;\n        var /** @type {?} */ flags = 0;\n        if (ast.hasViewContainer) {\n            flags |= 8388608 /* EmbeddedViews */;\n        }\n        var /** @type {?} */ usedEvents = new Map();\n        ast.outputs.forEach(function (event) {\n            var _a = elementEventNameAndTarget(event, null), name = _a.name, target = _a.target;\n            usedEvents.set(_angular_core.ɵelementEventFullName(target, name), [target, name]);\n        });\n        ast.directives.forEach(function (dirAst) {\n            dirAst.hostEvents.forEach(function (event) {\n                var _a = elementEventNameAndTarget(event, dirAst), name = _a.name, target = _a.target;\n                usedEvents.set(_angular_core.ɵelementEventFullName(target, name), [target, name]);\n            });\n        });\n        var /** @type {?} */ hostBindings = [];\n        var /** @type {?} */ hostEvents = [];\n        var /** @type {?} */ componentFactoryResolverProvider = createComponentFactoryResolver(ast.directives);\n        if (componentFactoryResolverProvider) {\n            this._visitProvider(componentFactoryResolverProvider, ast.queryMatches);\n        }\n        ast.providers.forEach(function (providerAst, providerIndex) {\n            var /** @type {?} */ dirAst = ((undefined));\n            var /** @type {?} */ dirIndex = ((undefined));\n            ast.directives.forEach(function (localDirAst, i) {\n                if (localDirAst.directive.type.reference === tokenReference(providerAst.token)) {\n                    dirAst = localDirAst;\n                    dirIndex = i;\n                }\n            });\n            if (dirAst) {\n                var _a = _this._visitDirective(providerAst, dirAst, dirIndex, nodeIndex, ast.references, ast.queryMatches, usedEvents, /** @type {?} */ ((_this.staticQueryIds.get(/** @type {?} */ (ast))))), dirHostBindings = _a.hostBindings, dirHostEvents = _a.hostEvents;\n                hostBindings.push.apply(hostBindings, dirHostBindings);\n                hostEvents.push.apply(hostEvents, dirHostEvents);\n            }\n            else {\n                _this._visitProvider(providerAst, ast.queryMatches);\n            }\n        });\n        var /** @type {?} */ queryMatchExprs = [];\n        ast.queryMatches.forEach(function (match) {\n            var /** @type {?} */ valueType = ((undefined));\n            if (tokenReference(match.value) === resolveIdentifier(Identifiers.ElementRef)) {\n                valueType = 0 /* ElementRef */;\n            }\n            else if (tokenReference(match.value) === resolveIdentifier(Identifiers.ViewContainerRef)) {\n                valueType = 3 /* ViewContainerRef */;\n            }\n            else if (tokenReference(match.value) === resolveIdentifier(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(valueType)]));\n            }\n        });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ valueType = ((undefined));\n            if (!ref.value) {\n                valueType = 1 /* RenderElement */;\n            }\n            else if (tokenReference(ref.value) === resolveIdentifier(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(valueType)]));\n            }\n        });\n        ast.outputs.forEach(function (outputAst) {\n            hostEvents.push({ context: COMP_VAR, eventAst: outputAst, dirAst: /** @type {?} */ ((null)) });\n        });\n        return {\n            flags: flags,\n            usedEvents: Array.from(usedEvents.values()),\n            queryMatchesExpr: queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n            hostBindings: hostBindings,\n            hostEvents: hostEvents\n        };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitDirective = function (providerAst, dirAst, directiveIndex, elementNodeIndex, refs, queryMatches, usedEvents, queryIds) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        dirAst.directive.queries.forEach(function (query, queryIndex) {\n            var /** @type {?} */ queryId = dirAst.contentQueryStartId + queryIndex;\n            var /** @type {?} */ flags = 33554432 /* TypeContentQuery */ | calcStaticDynamicQueryFlags(queryIds, queryId, query.first);\n            var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n            _this.nodes.push(function () { return ({\n                sourceSpan: dirAst.sourceSpan,\n                nodeFlags: flags,\n                nodeDef: importExpr(createIdentifier(Identifiers.queryDef)).callFn([\n                    literal(flags), literal(queryId),\n                    new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType))])\n                ]),\n            }); });\n        });\n        // Note: the operation below might also create new nodeDefs,\n        // but we don't want them to be a child of a directive,\n        // as they might be a provider/pipe on their own.\n        // I.e. we only allow queries as children of directives nodes.\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var _a = this._visitProviderOrDirective(providerAst, queryMatches), flags = _a.flags, queryMatchExprs = _a.queryMatchExprs, providerExpr = _a.providerExpr, depsExpr = _a.depsExpr;\n        refs.forEach(function (ref) {\n            if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(4 /* Provider */)]));\n            }\n        });\n        if (dirAst.directive.isComponent) {\n            flags |= 16384 /* Component */;\n        }\n        var /** @type {?} */ inputDefs = dirAst.inputs.map(function (inputAst, inputIndex) {\n            var /** @type {?} */ mapValue = literalArr([literal(inputIndex), literal(inputAst.directiveName)]);\n            // Note: it's important to not quote the key so that we can capture renames by minifiers!\n            return new LiteralMapEntry(inputAst.directiveName, mapValue, false);\n        });\n        var /** @type {?} */ outputDefs = [];\n        var /** @type {?} */ dirMeta = dirAst.directive;\n        Object.keys(dirMeta.outputs).forEach(function (propName) {\n            var /** @type {?} */ eventName = dirMeta.outputs[propName];\n            if (usedEvents.has(eventName)) {\n                // Note: it's important to not quote the key so that we can capture renames by minifiers!\n                outputDefs.push(new LiteralMapEntry(propName, literal(eventName), false));\n            }\n        });\n        var /** @type {?} */ updateDirectiveExpressions = [];\n        if (dirAst.inputs.length || (flags & (131072 /* DoCheck */ | 32768 /* OnInit */)) > 0) {\n            updateDirectiveExpressions =\n                dirAst.inputs.map(function (input, bindingIndex) { return _this._preprocessUpdateExpression({\n                    nodeIndex: nodeIndex,\n                    bindingIndex: bindingIndex,\n                    sourceSpan: input.sourceSpan,\n                    context: COMP_VAR,\n                    value: input.value\n                }); });\n        }\n        var /** @type {?} */ dirContextExpr = importExpr(createIdentifier(Identifiers.nodeValue)).callFn([\n            VIEW_VAR, literal(nodeIndex)\n        ]);\n        var /** @type {?} */ hostBindings = dirAst.hostProperties.map(function (inputAst) { return ({\n            context: dirContextExpr,\n            dirAst: dirAst,\n            inputAst: inputAst,\n        }); });\n        var /** @type {?} */ hostEvents = dirAst.hostEvents.map(function (hostEventAst) { return ({\n            context: dirContextExpr,\n            eventAst: hostEventAst, dirAst: dirAst,\n        }); });\n        // directiveDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], childCount: number, ctor:\n        //   any,\n        //   deps: ([DepFlags, any] | any)[], props?: {[name: string]: [number, string]},\n        //   outputs?: {[name: string]: string}, component?: () => ViewDefinition): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: dirAst.sourceSpan,\n            nodeFlags: 8192 /* TypeDirective */ | flags,\n            nodeDef: importExpr(createIdentifier(Identifiers.directiveDef)).callFn([\n                literal(flags), queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n                literal(childCount), providerExpr, depsExpr,\n                inputDefs.length ? new LiteralMapExpr(inputDefs) : NULL_EXPR,\n                outputDefs.length ? new LiteralMapExpr(outputDefs) : NULL_EXPR\n            ]),\n            updateDirectives: updateDirectiveExpressions,\n            directive: dirAst.directive.type,\n        }); };\n        return { hostBindings: hostBindings, hostEvents: hostEvents };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProvider = function (providerAst, queryMatches) {\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        var _a = this._visitProviderOrDirective(providerAst, queryMatches), flags = _a.flags, queryMatchExprs = _a.queryMatchExprs, providerExpr = _a.providerExpr, depsExpr = _a.depsExpr;\n        // providerDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,\n        //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: providerAst.sourceSpan,\n            nodeFlags: flags,\n            nodeDef: importExpr(createIdentifier(Identifiers.providerDef)).callFn([\n                literal(flags), queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n                tokenExpr(providerAst.token), providerExpr, depsExpr\n            ])\n        }); };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProviderOrDirective = function (providerAst, queryMatches) {\n        var /** @type {?} */ flags = 0;\n        if (!providerAst.eager) {\n            flags |= 2048 /* LazyProvider */;\n        }\n        if (providerAst.providerType === ProviderAstType.PrivateService) {\n            flags |= 4096 /* PrivateProvider */;\n        }\n        providerAst.lifecycleHooks.forEach(function (lifecycleHook) {\n            // for regular providers, we only support ngOnDestroy\n            if (lifecycleHook === _angular_core.ɵLifecycleHooks.OnDestroy ||\n                providerAst.providerType === ProviderAstType.Directive ||\n                providerAst.providerType === ProviderAstType.Component) {\n                flags |= lifecycleHookToNodeFlag(lifecycleHook);\n            }\n        });\n        var /** @type {?} */ queryMatchExprs = [];\n        queryMatches.forEach(function (match) {\n            if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(4 /* Provider */)]));\n            }\n        });\n        var _a = providerDef(providerAst), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, providerType = _a.flags;\n        return { flags: flags | providerType, queryMatchExprs: queryMatchExprs, providerExpr: providerExpr, depsExpr: depsExpr };\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        var /** @type {?} */ currViewExpr = VIEW_VAR;\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent,\n            currViewExpr = currViewExpr.prop('parent').cast(DYNAMIC_TYPE)) {\n            // check references\n            var /** @type {?} */ refNodeIndex = currBuilder.refNodeIndices[name];\n            if (refNodeIndex != null) {\n                return importExpr(createIdentifier(Identifiers.nodeValue)).callFn([\n                    currViewExpr, literal(refNodeIndex)\n                ]);\n            }\n            // check variables\n            var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n            if (varAst) {\n                var /** @type {?} */ varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n                return currViewExpr.prop('context').prop(varValue);\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype.createLiteralArrayConverter = function (sourceSpan, argCount) {\n        if (argCount === 0) {\n            var /** @type {?} */ valueExpr_1 = importExpr(createIdentifier(Identifiers.EMPTY_ARRAY));\n            return function () { return valueExpr_1; };\n        }\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // pureArrayDef(argCount: number): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: sourceSpan,\n            nodeFlags: 16 /* TypePureArray */,\n            nodeDef: importExpr(createIdentifier(Identifiers.pureArrayDef)).callFn([literal(argCount)])\n        }); });\n        return function (args) { return callCheckStmt(nodeIndex, args); };\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    ViewBuilder.prototype.createLiteralMapConverter = function (sourceSpan, keys) {\n        if (keys.length === 0) {\n            var /** @type {?} */ valueExpr_2 = importExpr(createIdentifier(Identifiers.EMPTY_MAP));\n            return function () { return valueExpr_2; };\n        }\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // function pureObjectDef(propertyNames: string[]): NodeDef\n        this.nodes.push(function () { return ({\n            sourceSpan: sourceSpan,\n            nodeFlags: 32 /* TypePureObject */,\n            nodeDef: importExpr(createIdentifier(Identifiers.pureObjectDef))\n                .callFn([literalArr(keys.map(function (key) { return literal(key); }))])\n        }); });\n        return function (args) { return callCheckStmt(nodeIndex, args); };\n    };\n    /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype.createPipeConverter = function (expression, name, argCount) {\n        var /** @type {?} */ pipe = ((this.usedPipes.find(function (pipeSummary) { return pipeSummary.name === name; })));\n        if (pipe.pure) {\n            var /** @type {?} */ nodeIndex_1 = this.nodes.length;\n            // function purePipeDef(argCount: number): NodeDef;\n            this.nodes.push(function () { return ({\n                sourceSpan: expression.sourceSpan,\n                nodeFlags: 64 /* TypePurePipe */,\n                nodeDef: importExpr(createIdentifier(Identifiers.purePipeDef))\n                    .callFn([literal(argCount)])\n            }); });\n            // find underlying pipe in the component view\n            var /** @type {?} */ compViewExpr = VIEW_VAR;\n            var /** @type {?} */ compBuilder = this;\n            while (compBuilder.parent) {\n                compBuilder = compBuilder.parent;\n                compViewExpr = compViewExpr.prop('parent').cast(DYNAMIC_TYPE);\n            }\n            var /** @type {?} */ pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n            var /** @type {?} */ pipeValueExpr_1 = importExpr(createIdentifier(Identifiers.nodeValue)).callFn([\n                compViewExpr, literal(pipeNodeIndex)\n            ]);\n            return function (args) { return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, callCheckStmt(nodeIndex_1, [pipeValueExpr_1].concat(args))); };\n        }\n        else {\n            var /** @type {?} */ nodeIndex = this._createPipe(expression.sourceSpan, pipe);\n            var /** @type {?} */ nodeValueExpr_1 = importExpr(createIdentifier(Identifiers.nodeValue)).callFn([\n                VIEW_VAR, literal(nodeIndex)\n            ]);\n            return function (args) { return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, nodeValueExpr_1.callMethod('transform', args)); };\n        }\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipe = function (sourceSpan, pipe) {\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        var /** @type {?} */ flags = 0;\n        pipe.type.lifecycleHooks.forEach(function (lifecycleHook) {\n            // for pipes, we only support ngOnDestroy\n            if (lifecycleHook === _angular_core.ɵLifecycleHooks.OnDestroy) {\n                flags |= lifecycleHookToNodeFlag(lifecycleHook);\n            }\n        });\n        var /** @type {?} */ depExprs = pipe.type.diDeps.map(depDef);\n        // function pipeDef(\n        //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n        this.nodes.push(function () { return ({\n            sourceSpan: sourceSpan,\n            nodeFlags: 8 /* TypePipe */,\n            nodeDef: importExpr(createIdentifier(Identifiers.pipeDef)).callFn([\n                literal(flags), importExpr(pipe.type), literalArr(depExprs)\n            ])\n        }); });\n        return nodeIndex;\n    };\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype._preprocessUpdateExpression = function (expression) {\n        var _this = this;\n        return {\n            nodeIndex: expression.nodeIndex,\n            bindingIndex: expression.bindingIndex,\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) { return _this.createLiteralArrayConverter(expression.sourceSpan, argCount); },\n                createLiteralMapConverter: function (keys) { return _this.createLiteralMapConverter(expression.sourceSpan, keys); },\n                createPipeConverter: function (name, argCount) { return _this.createPipeConverter(expression, name, argCount); }\n            }, expression.value)\n        };\n    };\n    /**\n     * @return {?}\n     */\n    ViewBuilder.prototype._createNodeExpressions = function () {\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ updateBindingCount = 0;\n        var /** @type {?} */ updateRendererStmts = [];\n        var /** @type {?} */ updateDirectivesStmts = [];\n        var /** @type {?} */ nodeDefExprs = this.nodes.map(function (factory, nodeIndex) {\n            var _a = factory(), nodeDef = _a.nodeDef, nodeFlags = _a.nodeFlags, updateDirectives = _a.updateDirectives, updateRenderer = _a.updateRenderer, sourceSpan = _a.sourceSpan;\n            if (updateRenderer) {\n                updateRendererStmts.push.apply(updateRendererStmts, createUpdateStatements(nodeIndex, sourceSpan, updateRenderer, false));\n            }\n            if (updateDirectives) {\n                updateDirectivesStmts.push.apply(updateDirectivesStmts, createUpdateStatements(nodeIndex, sourceSpan, updateDirectives, (nodeFlags & (131072 /* DoCheck */ | 32768 /* OnInit */)) > 0));\n            }\n            // We use a comma expression to call the log function before\n            // the nodeDef function, but still use the result of the nodeDef function\n            // as the value.\n            // Note: We only add the logger to elements / text nodes,\n            // so we don't generate too much code.\n            var /** @type {?} */ logWithNodeDef = nodeFlags & 3 /* CatRenderNode */ ?\n                new CommaExpr([LOG_VAR.callFn([]).callFn([]), nodeDef]) :\n                nodeDef;\n            return applySourceSpanToExpressionIfNeeded(logWithNodeDef, sourceSpan);\n        });\n        return { updateRendererStmts: updateRendererStmts, updateDirectivesStmts: updateDirectivesStmts, nodeDefExprs: nodeDefExprs };\n        /**\n         * @param {?} nodeIndex\n         * @param {?} sourceSpan\n         * @param {?} expressions\n         * @param {?} allowEmptyExprs\n         * @return {?}\n         */\n        function createUpdateStatements(nodeIndex, sourceSpan, expressions, allowEmptyExprs) {\n            var /** @type {?} */ updateStmts = [];\n            var /** @type {?} */ exprs = expressions.map(function (_a) {\n                var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n                var /** @type {?} */ bindingId = \"\" + updateBindingCount++;\n                var /** @type {?} */ nameResolver = context === COMP_VAR ? self : null;\n                var _b = convertPropertyBinding(nameResolver, context, value, bindingId), stmts = _b.stmts, currValExpr = _b.currValExpr;\n                updateStmts.push.apply(updateStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n                return applySourceSpanToExpressionIfNeeded(currValExpr, sourceSpan);\n            });\n            if (expressions.length || allowEmptyExprs) {\n                updateStmts.push(applySourceSpanToStatementIfNeeded(callCheckStmt(nodeIndex, exprs).toStmt(), sourceSpan));\n            }\n            return updateStmts;\n        }\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    ViewBuilder.prototype._createElementHandleEventFn = function (nodeIndex, handlers) {\n        var _this = this;\n        var /** @type {?} */ handleEventStmts = [];\n        var /** @type {?} */ handleEventBindingCount = 0;\n        handlers.forEach(function (_a) {\n            var context = _a.context, eventAst = _a.eventAst, dirAst = _a.dirAst;\n            var /** @type {?} */ bindingId = \"\" + handleEventBindingCount++;\n            var /** @type {?} */ nameResolver = context === COMP_VAR ? _this : null;\n            var _b = convertActionBinding(nameResolver, context, eventAst.handler, bindingId), stmts = _b.stmts, allowDefault = _b.allowDefault;\n            var /** @type {?} */ trueStmts = stmts;\n            if (allowDefault) {\n                trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n            }\n            var _c = elementEventNameAndTarget(eventAst, dirAst), eventTarget = _c.target, eventName = _c.name;\n            var /** @type {?} */ fullEventName = _angular_core.ɵelementEventFullName(eventTarget, eventName);\n            handleEventStmts.push(applySourceSpanToStatementIfNeeded(new IfStmt(literal(fullEventName).identical(EVENT_NAME_VAR), trueStmts), eventAst.sourceSpan));\n        });\n        var /** @type {?} */ handleEventFn;\n        if (handleEventStmts.length > 0) {\n            var /** @type {?} */ preStmts = [ALLOW_DEFAULT_VAR.set(literal(true)).toDeclStmt(BOOL_TYPE)];\n            if (!this.component.isHost && findReadVarNames(handleEventStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            handleEventFn = fn([\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EVENT_NAME_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EventHandlerVars.event.name)), INFERRED_TYPE)\n            ], preStmts.concat(handleEventStmts, [new ReturnStatement(ALLOW_DEFAULT_VAR)]), INFERRED_TYPE);\n        }\n        else {\n            handleEventFn = NULL_EXPR;\n        }\n        return handleEventFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = function (ast, context) { };\n    return ViewBuilder;\n}());\n/**\n * @param {?} providerAst\n * @return {?}\n */\nfunction providerDef(providerAst) {\n    return providerAst.multiProvider ?\n        multiProviderDef(providerAst.providers) :\n        singleProviderDef(providerAst.providerType, providerAst.providers[0]);\n}\n/**\n * @param {?} providers\n * @return {?}\n */\nfunction multiProviderDef(providers) {\n    var /** @type {?} */ allDepDefs = [];\n    var /** @type {?} */ allParams = [];\n    var /** @type {?} */ exprs = providers.map(function (provider, providerIndex) {\n        var /** @type {?} */ expr;\n        if (provider.useClass) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useClass.diDeps);\n            expr = importExpr(provider.useClass).instantiate(depExprs);\n        }\n        else if (provider.useFactory) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useFactory.diDeps);\n            expr = importExpr(provider.useFactory).callFn(depExprs);\n        }\n        else if (provider.useExisting) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, [{ token: provider.useExisting }]);\n            expr = depExprs[0];\n        }\n        else {\n            expr = convertValueToOutputAst(provider.useValue);\n        }\n        return expr;\n    });\n    var /** @type {?} */ providerExpr = fn(allParams, [new ReturnStatement(literalArr(exprs))], INFERRED_TYPE);\n    return { providerExpr: providerExpr, flags: 512 /* TypeFactoryProvider */, depsExpr: literalArr(allDepDefs) };\n    /**\n     * @param {?} providerIndex\n     * @param {?} deps\n     * @return {?}\n     */\n    function convertDeps(providerIndex, deps) {\n        return deps.map(function (dep, depIndex) {\n            var /** @type {?} */ paramName = \"p\" + providerIndex + \"_\" + depIndex;\n            allParams.push(new FnParam(paramName, DYNAMIC_TYPE));\n            allDepDefs.push(depDef(dep));\n            return variable(paramName);\n        });\n    }\n}\n/**\n * @param {?} providerType\n * @param {?} providerMeta\n * @return {?}\n */\nfunction singleProviderDef(providerType, providerMeta) {\n    var /** @type {?} */ providerExpr;\n    var /** @type {?} */ flags;\n    var /** @type {?} */ deps;\n    if (providerType === ProviderAstType.Directive || providerType === ProviderAstType.Component) {\n        providerExpr = importExpr(/** @type {?} */ ((providerMeta.useClass)));\n        flags = 8192 /* TypeDirective */;\n        deps = providerMeta.deps || ((providerMeta.useClass)).diDeps;\n    }\n    else {\n        if (providerMeta.useClass) {\n            providerExpr = importExpr(providerMeta.useClass);\n            flags = 256 /* TypeClassProvider */;\n            deps = providerMeta.deps || providerMeta.useClass.diDeps;\n        }\n        else if (providerMeta.useFactory) {\n            providerExpr = importExpr(providerMeta.useFactory);\n            flags = 512 /* TypeFactoryProvider */;\n            deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n        }\n        else if (providerMeta.useExisting) {\n            providerExpr = NULL_EXPR;\n            flags = 1024 /* TypeUseExistingProvider */;\n            deps = [{ token: providerMeta.useExisting }];\n        }\n        else {\n            providerExpr = convertValueToOutputAst(providerMeta.useValue);\n            flags = 128 /* TypeValueProvider */;\n            deps = [];\n        }\n    }\n    var /** @type {?} */ depsExpr = literalArr(deps.map(function (dep) { return depDef(dep); }));\n    return { providerExpr: providerExpr, flags: flags, depsExpr: depsExpr };\n}\n/**\n * @param {?} tokenMeta\n * @return {?}\n */\nfunction tokenExpr(tokenMeta) {\n    return tokenMeta.identifier ? importExpr(tokenMeta.identifier) : literal(tokenMeta.value);\n}\n/**\n * @param {?} dep\n * @return {?}\n */\nfunction depDef(dep) {\n    // Note: the following fields have already been normalized out by provider_analyzer:\n    // - isAttribute, isSelf, isHost\n    var /** @type {?} */ expr = dep.isValue ? convertValueToOutputAst(dep.value) : tokenExpr(/** @type {?} */ ((dep.token)));\n    var /** @type {?} */ flags = 0;\n    if (dep.isSkipSelf) {\n        flags |= 1 /* SkipSelf */;\n    }\n    if (dep.isOptional) {\n        flags |= 2 /* Optional */;\n    }\n    if (dep.isValue) {\n        flags |= 8 /* Value */;\n    }\n    return flags === 0 /* None */ ? expr : literalArr([literal(flags), expr]);\n}\n/**\n * @param {?} astNodes\n * @return {?}\n */\nfunction needsAdditionalRootNode(astNodes) {\n    var /** @type {?} */ lastAstNode = astNodes[astNodes.length - 1];\n    if (lastAstNode instanceof EmbeddedTemplateAst) {\n        return lastAstNode.hasViewContainer;\n    }\n    if (lastAstNode instanceof ElementAst) {\n        if (isNgContainer(lastAstNode.name) && lastAstNode.children.length) {\n            return needsAdditionalRootNode(lastAstNode.children);\n        }\n        return lastAstNode.hasViewContainer;\n    }\n    return lastAstNode instanceof NgContentAst;\n}\n/**\n * @param {?} lifecycleHook\n * @return {?}\n */\nfunction lifecycleHookToNodeFlag(lifecycleHook) {\n    var /** @type {?} */ nodeFlag = 0;\n    switch (lifecycleHook) {\n        case _angular_core.ɵLifecycleHooks.AfterContentChecked:\n            nodeFlag = 1048576 /* AfterContentChecked */;\n            break;\n        case _angular_core.ɵLifecycleHooks.AfterContentInit:\n            nodeFlag = 524288 /* AfterContentInit */;\n            break;\n        case _angular_core.ɵLifecycleHooks.AfterViewChecked:\n            nodeFlag = 4194304 /* AfterViewChecked */;\n            break;\n        case _angular_core.ɵLifecycleHooks.AfterViewInit:\n            nodeFlag = 2097152 /* AfterViewInit */;\n            break;\n        case _angular_core.ɵLifecycleHooks.DoCheck:\n            nodeFlag = 131072 /* DoCheck */;\n            break;\n        case _angular_core.ɵLifecycleHooks.OnChanges:\n            nodeFlag = 262144 /* OnChanges */;\n            break;\n        case _angular_core.ɵLifecycleHooks.OnDestroy:\n            nodeFlag = 65536 /* OnDestroy */;\n            break;\n        case _angular_core.ɵLifecycleHooks.OnInit:\n            nodeFlag = 32768 /* OnInit */;\n            break;\n    }\n    return nodeFlag;\n}\n/**\n * @param {?} inputAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementBindingDef(inputAst, dirAst) {\n    switch (inputAst.type) {\n        case PropertyBindingType.Attribute:\n            return literalArr([\n                literal(1 /* TypeElementAttribute */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Property:\n            return literalArr([\n                literal(8 /* TypeProperty */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Animation:\n            var /** @type {?} */ bindingType = 8 /* TypeProperty */ |\n                (dirAst && dirAst.directive.isComponent ? 32 /* SyntheticHostProperty */ :\n                    16 /* SyntheticProperty */);\n            return literalArr([\n                literal(bindingType), literal('@' + inputAst.name), literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Class:\n            return literalArr([literal(2 /* TypeElementClass */), literal(inputAst.name), NULL_EXPR]);\n        case PropertyBindingType.Style:\n            return literalArr([\n                literal(4 /* TypeElementStyle */), literal(inputAst.name), literal(inputAst.unit)\n            ]);\n    }\n}\n/**\n * @param {?} elementAst\n * @return {?}\n */\nfunction fixedAttrsDef(elementAst) {\n    var /** @type {?} */ mapResult = Object.create(null);\n    elementAst.attrs.forEach(function (attrAst) { mapResult[attrAst.name] = attrAst.value; });\n    elementAst.directives.forEach(function (dirAst) {\n        Object.keys(dirAst.directive.hostAttributes).forEach(function (name) {\n            var /** @type {?} */ value = dirAst.directive.hostAttributes[name];\n            var /** @type {?} */ prevValue = mapResult[name];\n            mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n        });\n    });\n    // Note: We need to sort to get a defined output order\n    // for tests and for caching generated artifacts...\n    return literalArr(Object.keys(mapResult).sort().map(function (attrName) { return literalArr([literal(attrName), literal(mapResult[attrName])]); }));\n}\n/**\n * @param {?} attrName\n * @param {?} attrValue1\n * @param {?} attrValue2\n * @return {?}\n */\nfunction mergeAttributeValue(attrName, attrValue1, attrValue2) {\n    if (attrName == CLASS_ATTR$1 || attrName == STYLE_ATTR) {\n        return attrValue1 + \" \" + attrValue2;\n    }\n    else {\n        return attrValue2;\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} exprs\n * @return {?}\n */\nfunction callCheckStmt(nodeIndex, exprs) {\n    if (exprs.length > 10) {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(1 /* Dynamic */), literalArr(exprs)]);\n    }\n    else {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(0 /* Inline */)].concat(exprs));\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} bindingIdx\n * @param {?} expr\n * @return {?}\n */\nfunction callUnwrapValue(nodeIndex, bindingIdx, expr) {\n    return importExpr(createIdentifier(Identifiers.unwrapValue)).callFn([\n        VIEW_VAR, literal(nodeIndex), literal(bindingIdx), expr\n    ]);\n}\n/**\n * @param {?} nodes\n * @param {?=} result\n * @return {?}\n */\nfunction findStaticQueryIds(nodes, result) {\n    if (result === void 0) { result = new Map(); }\n    nodes.forEach(function (node) {\n        var /** @type {?} */ staticQueryIds = new Set();\n        var /** @type {?} */ dynamicQueryIds = new Set();\n        var /** @type {?} */ queryMatches = ((undefined));\n        if (node instanceof ElementAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        else if (node instanceof EmbeddedTemplateAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        if (queryMatches) {\n            queryMatches.forEach(function (match) { return staticQueryIds.add(match.queryId); });\n        }\n        dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n        result.set(node, { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds });\n    });\n    return result;\n}\n/**\n * @param {?} nodeStaticQueryIds\n * @return {?}\n */\nfunction staticViewQueryIds(nodeStaticQueryIds) {\n    var /** @type {?} */ staticQueryIds = new Set();\n    var /** @type {?} */ dynamicQueryIds = new Set();\n    Array.from(nodeStaticQueryIds.values()).forEach(function (entry) {\n        entry.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n        entry.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n    });\n    dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n    return { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds };\n}\n/**\n * @param {?} directives\n * @return {?}\n */\nfunction createComponentFactoryResolver(directives) {\n    var /** @type {?} */ componentDirMeta = directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n    if (componentDirMeta && componentDirMeta.directive.entryComponents.length) {\n        var /** @type {?} */ entryComponentFactories = componentDirMeta.directive.entryComponents.map(function (entryComponent) { return importExpr({ reference: entryComponent.componentFactory }); });\n        var /** @type {?} */ token = createIdentifierToken(Identifiers.ComponentFactoryResolver);\n        var /** @type {?} */ classMeta = {\n            diDeps: [\n                { isValue: true, value: literalArr(entryComponentFactories) },\n                { token: token, isSkipSelf: true, isOptional: true },\n                { token: createIdentifierToken(Identifiers.NgModuleRef) },\n            ],\n            lifecycleHooks: [],\n            reference: resolveIdentifier(Identifiers.CodegenComponentFactoryResolver)\n        };\n        return new ProviderAst(token, false, true, [{ token: token, multi: false, useClass: classMeta }], ProviderAstType.PrivateService, [], componentDirMeta.sourceSpan);\n    }\n    return null;\n}\n/**\n * @param {?} eventAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementEventNameAndTarget(eventAst, dirAst) {\n    if (eventAst.isAnimation) {\n        return {\n            name: \"@\" + eventAst.name + \".\" + eventAst.phase,\n            target: dirAst && dirAst.directive.isComponent ? 'component' : null\n        };\n    }\n    else {\n        return eventAst;\n    }\n}\n/**\n * @param {?} queryIds\n * @param {?} queryId\n * @param {?} isFirst\n * @return {?}\n */\nfunction calcStaticDynamicQueryFlags(queryIds, queryId, isFirst) {\n    var /** @type {?} */ flags = 0;\n    // Note: We only make queries static that query for a single item.\n    // This is because of backwards compatibility with the old view compiler...\n    if (isFirst && (queryIds.staticQueryIds.has(queryId) || !queryIds.dynamicQueryIds.has(queryId))) {\n        flags |= 134217728 /* StaticQuery */;\n    }\n    else {\n        flags |= 268435456 /* DynamicQuery */;\n    }\n    return flags;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar GeneratedFile = (function () {\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} genFileUrl\n     * @param {?} source\n     */\n    function GeneratedFile(srcFileUrl, genFileUrl, source) {\n        this.srcFileUrl = srcFileUrl;\n        this.genFileUrl = genFileUrl;\n        this.source = source;\n    }\n    return GeneratedFile;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} summaryResolver\n * @param {?} symbolResolver\n * @param {?} symbols\n * @param {?} types\n * @return {?}\n */\nfunction serializeSummaries(summaryResolver, symbolResolver, symbols, types) {\n    var /** @type {?} */ toJsonSerializer = new ToJsonSerializer(symbolResolver, summaryResolver);\n    var /** @type {?} */ forJitSerializer = new ForJitSerializer(symbolResolver);\n    // for symbols, we use everything except for the class metadata itself\n    // (we keep the statics though), as the class metadata is contained in the\n    // CompileTypeSummary.\n    symbols.forEach(function (resolvedSymbol) { return toJsonSerializer.addOrMergeSummary({ symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata }); });\n    // Add summaries that are referenced by the given symbols (transitively)\n    // Note: the serializer.symbols array might be growing while\n    // we execute the loop!\n    for (var /** @type {?} */ processedIndex = 0; processedIndex < toJsonSerializer.symbols.length; processedIndex++) {\n        var /** @type {?} */ symbol = toJsonSerializer.symbols[processedIndex];\n        if (summaryResolver.isLibraryFile(symbol.filePath)) {\n            var /** @type {?} */ summary = summaryResolver.resolveSummary(symbol);\n            if (!summary) {\n                // some symbols might originate from a plain typescript library\n                // that just exported .d.ts and .metadata.json files, i.e. where no summary\n                // files were created.\n                var /** @type {?} */ resolvedSymbol = symbolResolver.resolveSymbol(symbol);\n                if (resolvedSymbol) {\n                    summary = { symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata };\n                }\n            }\n            if (summary) {\n                if (summary.type) {\n                    forJitSerializer.addLibType(summary.type);\n                }\n                toJsonSerializer.addOrMergeSummary(summary);\n            }\n        }\n    }\n    // Add type summaries.\n    // Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,\n    // as the type summaries already contain the transitive data that they require\n    // (in a minimal way).\n    types.forEach(function (_a) {\n        var summary = _a.summary, metadata = _a.metadata;\n        forJitSerializer.addSourceType(summary, metadata);\n        toJsonSerializer.addOrMergeSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n        if (summary.summaryKind === CompileSummaryKind.NgModule) {\n            var /** @type {?} */ ngModuleSummary = (summary);\n            ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach(function (id) {\n                var /** @type {?} */ symbol = id.reference;\n                if (summaryResolver.isLibraryFile(symbol.filePath)) {\n                    var /** @type {?} */ summary_1 = summaryResolver.resolveSummary(symbol);\n                    if (summary_1) {\n                        toJsonSerializer.addOrMergeSummary(summary_1);\n                    }\n                }\n            });\n        }\n    });\n    var _a = toJsonSerializer.serialize(), json = _a.json, exportAs = _a.exportAs;\n    var _b = forJitSerializer.serialize(exportAs), statements = _b.statements, exportedVars = _b.exportedVars;\n    return { json: json, forJit: { statements: statements, exportedVars: exportedVars }, exportAs: exportAs };\n}\n/**\n * @param {?} symbolCache\n * @param {?} json\n * @return {?}\n */\nfunction deserializeSummaries(symbolCache, json) {\n    var /** @type {?} */ deserializer = new FromJsonDeserializer(symbolCache);\n    return deserializer.deserialize(json);\n}\nvar ToJsonSerializer = (function (_super) {\n    __extends(ToJsonSerializer, _super);\n    /**\n     * @param {?} symbolResolver\n     * @param {?} summaryResolver\n     */\n    function ToJsonSerializer(symbolResolver, summaryResolver) {\n        var _this = _super.call(this) || this;\n        _this.symbolResolver = symbolResolver;\n        _this.summaryResolver = summaryResolver;\n        // Note: This only contains symbols without members.\n        _this.symbols = [];\n        _this.indexBySymbol = new Map();\n        _this.processedSummaryBySymbol = new Map();\n        _this.processedSummaries = [];\n        return _this;\n    }\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.addOrMergeSummary = function (summary) {\n        var /** @type {?} */ symbolMeta = summary.metadata;\n        if (symbolMeta && symbolMeta.__symbolic === 'class') {\n            // For classes, we keep everything except their class decorators.\n            // We need to keep e.g. the ctor args, method names, method decorators\n            // so that the class can be extended in another compilation unit.\n            // We don't keep the class decorators as\n            // 1) they refer to data\n            //   that should not cause a rebuild of downstream compilation units\n            //   (e.g. inline templates of @Component, or @NgModule.declarations)\n            // 2) their data is already captured in TypeSummaries, e.g. DirectiveSummary.\n            var /** @type {?} */ clone_1 = {};\n            Object.keys(symbolMeta).forEach(function (propName) {\n                if (propName !== 'decorators') {\n                    clone_1[propName] = symbolMeta[propName];\n                }\n            });\n            symbolMeta = clone_1;\n        }\n        var /** @type {?} */ processedSummary = this.processedSummaryBySymbol.get(summary.symbol);\n        if (!processedSummary) {\n            processedSummary = this.processValue({ symbol: summary.symbol });\n            this.processedSummaries.push(processedSummary);\n            this.processedSummaryBySymbol.set(summary.symbol, processedSummary);\n        }\n        // Note: == on purpose to compare with undefined!\n        if (processedSummary.metadata == null && symbolMeta != null) {\n            processedSummary.metadata = this.processValue(symbolMeta);\n        }\n        // Note: == on purpose to compare with undefined!\n        if (processedSummary.type == null && summary.type != null) {\n            processedSummary.type = this.processValue(summary.type);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.serialize = function () {\n        var _this = this;\n        var /** @type {?} */ exportAs = [];\n        var /** @type {?} */ json = JSON.stringify({\n            summaries: this.processedSummaries,\n            symbols: this.symbols.map(function (symbol, index) {\n                symbol.assertNoMembers();\n                var /** @type {?} */ importAs = ((undefined));\n                if (_this.summaryResolver.isLibraryFile(symbol.filePath)) {\n                    importAs = symbol.name + \"_\" + index;\n                    exportAs.push({ symbol: symbol, exportAs: importAs });\n                }\n                return {\n                    __symbol: index,\n                    name: symbol.name,\n                    // We convert the source filenames tinto output filenames,\n                    // as the generated summary file will be used when teh current\n                    // compilation unit is used as a library\n                    filePath: _this.summaryResolver.getLibraryFileName(symbol.filePath),\n                    importAs: importAs\n                };\n            })\n        });\n        return { json: json, exportAs: exportAs };\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.processValue = function (value) { return visitValue(value, this, null); };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitOther = function (value, context) {\n        if (value instanceof StaticSymbol) {\n            var /** @type {?} */ baseSymbol = this.symbolResolver.getStaticSymbol(value.filePath, value.name);\n            var /** @type {?} */ index = this.indexBySymbol.get(baseSymbol);\n            // Note: == on purpose to compare with undefined!\n            if (index == null) {\n                index = this.indexBySymbol.size;\n                this.indexBySymbol.set(baseSymbol, index);\n                this.symbols.push(baseSymbol);\n            }\n            return { __symbol: index, members: value.members };\n        }\n    };\n    return ToJsonSerializer;\n}(ValueTransformer));\nvar ForJitSerializer = (function () {\n    /**\n     * @param {?} symbolResolver\n     */\n    function ForJitSerializer(symbolResolver) {\n        this.symbolResolver = symbolResolver;\n        this.data = new Map();\n    }\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addSourceType = function (summary, metadata) {\n        this.data.set(summary.type.reference, { summary: summary, metadata: metadata, isLibrary: false });\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addLibType = function (summary) {\n        this.data.set(summary.type.reference, { summary: summary, metadata: null, isLibrary: true });\n    };\n    /**\n     * @param {?} exportAs\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serialize = function (exportAs) {\n        var _this = this;\n        var /** @type {?} */ statements = [];\n        var /** @type {?} */ exportedVars = [];\n        var /** @type {?} */ ngModuleSymbols = new Set();\n        Array.from(this.data.values()).forEach(function (_a) {\n            var summary = _a.summary, metadata = _a.metadata, isLibrary = _a.isLibrary;\n            if (summary.summaryKind === CompileSummaryKind.NgModule) {\n                // collect the symbols that refer to NgModule classes.\n                // Note: we can't just rely on `summary.type.summaryKind` to determine this as\n                // we don't add the summaries of all referenced symbols when we serialize type summaries.\n                // See serializeSummaries for details.\n                ngModuleSymbols.add(summary.type.reference);\n                var /** @type {?} */ modSummary = (summary);\n                modSummary.modules.forEach(function (mod) { ngModuleSymbols.add(mod.reference); });\n            }\n            if (!isLibrary) {\n                var /** @type {?} */ fnName = summaryForJitName(summary.type.reference.name);\n                statements.push(fn([], [new ReturnStatement(_this.serializeSummaryWithDeps(summary, /** @type {?} */ ((metadata))))], new ArrayType(DYNAMIC_TYPE))\n                    .toDeclStmt(fnName, [StmtModifier.Final]));\n                exportedVars.push(fnName);\n            }\n        });\n        exportAs.forEach(function (entry) {\n            var /** @type {?} */ symbol = entry.symbol;\n            if (ngModuleSymbols.has(symbol)) {\n                var /** @type {?} */ jitExportAsName = summaryForJitName(entry.exportAs);\n                statements.push(variable(jitExportAsName).set(_this.serializeSummaryRef(symbol)).toDeclStmt());\n                exportedVars.push(jitExportAsName);\n            }\n        });\n        return { statements: statements, exportedVars: exportedVars };\n    };\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryWithDeps = function (summary, metadata) {\n        var _this = this;\n        var /** @type {?} */ expressions = [this.serializeSummary(summary)];\n        var /** @type {?} */ providers = [];\n        if (metadata instanceof CompileNgModuleMetadata) {\n            expressions.push.apply(expressions, \n            // For directives / pipes, we only add the declared ones,\n            // and rely on transitively importing NgModules to get the transitive\n            // summaries.\n            metadata.declaredDirectives.concat(metadata.declaredPipes)\n                .map(function (type) { return type.reference; })\n                .concat(metadata.transitiveModule.modules.map(function (type) { return type.reference; })\n                .filter(function (ref) { return ref !== metadata.type.reference; }))\n                .map(function (ref) { return _this.serializeSummaryRef(ref); }));\n            // Note: We don't use `NgModuleSummary.providers`, as that one is transitive,\n            // and we already have transitive modules.\n            providers = metadata.providers;\n        }\n        else if (summary.summaryKind === CompileSummaryKind.Directive) {\n            var /** @type {?} */ dirSummary = (summary);\n            providers = dirSummary.providers.concat(dirSummary.viewProviders);\n        }\n        // Note: We can't just refer to the `ngsummary.ts` files for `useClass` providers (as we do for\n        // declaredDirectives / declaredPipes), as we allow\n        // providers without ctor arguments to skip the `@Injectable` decorator,\n        // i.e. we didn't generate .ngsummary.ts files for these.\n        expressions.push.apply(expressions, providers.filter(function (provider) { return !!provider.useClass; }).map(function (provider) { return _this.serializeSummary(/** @type {?} */ ({\n            summaryKind: CompileSummaryKind.Injectable, type: provider.useClass\n        })); }));\n        return literalArr(expressions);\n    };\n    /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryRef = function (typeSymbol) {\n        var /** @type {?} */ jitImportedSymbol = this.symbolResolver.getStaticSymbol(summaryForJitFileName(typeSymbol.filePath), summaryForJitName(typeSymbol.name));\n        return importExpr({ reference: jitImportedSymbol });\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummary = function (data) {\n        var Transformer = (function () {\n            function Transformer() {\n            }\n            /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitArray = function (arr, context) {\n                var _this = this;\n                return literalArr(arr.map(function (entry) { return visitValue(entry, _this, context); }));\n            };\n            /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitStringMap = function (map, context) {\n                var _this = this;\n                return new LiteralMapExpr(Object.keys(map).map(function (key) { return new LiteralMapEntry(key, visitValue(map[key], _this, context)); }));\n            };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitPrimitive = function (value, context) { return literal(value); };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitOther = function (value, context) {\n                if (value instanceof StaticSymbol) {\n                    return importExpr({ reference: value });\n                }\n                else {\n                    throw new Error(\"Illegal State: Encountered value \" + value);\n                }\n            };\n            return Transformer;\n        }());\n        return visitValue(data, new Transformer(), null);\n    };\n    return ForJitSerializer;\n}());\nvar FromJsonDeserializer = (function (_super) {\n    __extends(FromJsonDeserializer, _super);\n    /**\n     * @param {?} symbolCache\n     */\n    function FromJsonDeserializer(symbolCache) {\n        var _this = _super.call(this) || this;\n        _this.symbolCache = symbolCache;\n        return _this;\n    }\n    /**\n     * @param {?} json\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.deserialize = function (json) {\n        var _this = this;\n        var /** @type {?} */ data = JSON.parse(json);\n        var /** @type {?} */ importAs = [];\n        this.symbols = [];\n        data.symbols.forEach(function (serializedSymbol) {\n            var /** @type {?} */ symbol = _this.symbolCache.get(serializedSymbol.filePath, serializedSymbol.name);\n            _this.symbols.push(symbol);\n            if (serializedSymbol.importAs) {\n                importAs.push({ symbol: symbol, importAs: serializedSymbol.importAs });\n            }\n        });\n        var /** @type {?} */ summaries = visitValue(data.summaries, this, null);\n        return { summaries: summaries, importAs: importAs };\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.visitStringMap = function (map, context) {\n        if ('__symbol' in map) {\n            var /** @type {?} */ baseSymbol = this.symbols[map['__symbol']];\n            var /** @type {?} */ members = map['members'];\n            return members.length ? this.symbolCache.get(baseSymbol.filePath, baseSymbol.name, members) :\n                baseSymbol;\n        }\n        else {\n            return _super.prototype.visitStringMap.call(this, map, context);\n        }\n    };\n    return FromJsonDeserializer;\n}(ValueTransformer));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AotCompiler = (function () {\n    /**\n     * @param {?} _config\n     * @param {?} _host\n     * @param {?} _metadataResolver\n     * @param {?} _templateParser\n     * @param {?} _styleCompiler\n     * @param {?} _viewCompiler\n     * @param {?} _ngModuleCompiler\n     * @param {?} _outputEmitter\n     * @param {?} _summaryResolver\n     * @param {?} _localeId\n     * @param {?} _translationFormat\n     * @param {?} _genFilePreamble\n     * @param {?} _symbolResolver\n     */\n    function AotCompiler(_config, _host, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _outputEmitter, _summaryResolver, _localeId, _translationFormat, _genFilePreamble, _symbolResolver) {\n        this._config = _config;\n        this._host = _host;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._outputEmitter = _outputEmitter;\n        this._summaryResolver = _summaryResolver;\n        this._localeId = _localeId;\n        this._translationFormat = _translationFormat;\n        this._genFilePreamble = _genFilePreamble;\n        this._symbolResolver = _symbolResolver;\n    }\n    /**\n     * @return {?}\n     */\n    AotCompiler.prototype.clearCache = function () { this._metadataResolver.clearCache(); };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.compileAll = function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ programSymbols = extractProgramSymbols(this._symbolResolver, rootFiles, this._host);\n        var _a = analyzeAndValidateNgModules(programSymbols, this._host, this._metadataResolver), ngModuleByPipeOrDirective = _a.ngModuleByPipeOrDirective, files = _a.files, ngModules = _a.ngModules;\n        return Promise\n            .all(ngModules.map(function (ngModule) { return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false); }))\n            .then(function () {\n            var /** @type {?} */ sourceModules = files.map(function (file) { return _this._compileSrcFile(file.srcUrl, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables); });\n            return flatten(sourceModules);\n        });\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    AotCompiler.prototype._compileSrcFile = function (srcFileUrl, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n        var _this = this;\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(srcFileUrl, true)[1];\n        var /** @type {?} */ statements = [];\n        var /** @type {?} */ exportedVars = [];\n        var /** @type {?} */ generatedFiles = [];\n        generatedFiles.push.apply(generatedFiles, this._createSummary(srcFileUrl, directives, pipes, ngModules, injectables, statements, exportedVars));\n        // compile all ng modules\n        exportedVars.push.apply(exportedVars, ngModules.map(function (ngModuleType) { return _this._compileModule(ngModuleType, statements); }));\n        // compile components\n        directives.forEach(function (dirType) {\n            var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(/** @type {?} */ (dirType));\n            if (!compMeta.isComponent) {\n                return Promise.resolve(null);\n            }\n            var /** @type {?} */ ngModule = ngModuleByPipeOrDirective.get(dirType);\n            if (!ngModule) {\n                throw new Error(\"Internal Error: cannot determine the module for component \" + identifierName(compMeta.type) + \"!\");\n            }\n            _assertComponent(compMeta);\n            // compile styles\n            var /** @type {?} */ stylesCompileResults = _this._styleCompiler.compileComponent(compMeta);\n            stylesCompileResults.externalStylesheets.forEach(function (compiledStyleSheet) {\n                generatedFiles.push(_this._codgenStyles(srcFileUrl, compiledStyleSheet, fileSuffix));\n            });\n            // compile components\n            var /** @type {?} */ compViewVars = _this._compileComponent(compMeta, ngModule, ngModule.transitiveModule.directives, stylesCompileResults.componentStylesheet, fileSuffix, statements);\n            exportedVars.push(_this._compileComponentFactory(compMeta, ngModule, fileSuffix, statements), compViewVars.viewClassVar, compViewVars.compRenderTypeVar);\n        });\n        if (statements.length > 0) {\n            var /** @type {?} */ srcModule = this._codegenSourceModule(srcFileUrl, ngfactoryFilePath(srcFileUrl, true), statements, exportedVars);\n            generatedFiles.unshift(srcModule);\n        }\n        return generatedFiles;\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} targetStatements\n     * @param {?} targetExportedVars\n     * @return {?}\n     */\n    AotCompiler.prototype._createSummary = function (srcFileUrl, directives, pipes, ngModules, injectables, targetStatements, targetExportedVars) {\n        var _this = this;\n        var /** @type {?} */ symbolSummaries = this._symbolResolver.getSymbolsOf(srcFileUrl)\n            .map(function (symbol) { return _this._symbolResolver.resolveSymbol(symbol); });\n        var /** @type {?} */ typeData = ngModules.map(function (ref) { return ({\n            summary: /** @type {?} */ ((_this._metadataResolver.getNgModuleSummary(ref))),\n            metadata: /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(ref)))\n        }); }).concat(directives.map(function (ref) { return ({\n            summary: /** @type {?} */ ((_this._metadataResolver.getDirectiveSummary(ref))),\n            metadata: /** @type {?} */ ((_this._metadataResolver.getDirectiveMetadata(ref)))\n        }); }), pipes.map(function (ref) { return ({\n            summary: /** @type {?} */ ((_this._metadataResolver.getPipeSummary(ref))),\n            metadata: /** @type {?} */ ((_this._metadataResolver.getPipeMetadata(ref)))\n        }); }), injectables.map(function (ref) { return ({\n            summary: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))),\n            metadata: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))).type\n        }); }));\n        var _a = serializeSummaries(this._summaryResolver, this._symbolResolver, symbolSummaries, typeData), json = _a.json, exportAs = _a.exportAs, forJit = _a.forJit;\n        exportAs.forEach(function (entry) {\n            targetStatements.push(variable(entry.exportAs).set(importExpr({ reference: entry.symbol })).toDeclStmt());\n            targetExportedVars.push(entry.exportAs);\n        });\n        return [\n            new GeneratedFile(srcFileUrl, summaryFileName(srcFileUrl), json),\n            this._codegenSourceModule(srcFileUrl, summaryForJitFileName(srcFileUrl, true), forJit.statements, forJit.exportedVars)\n        ];\n    };\n    /**\n     * @param {?} ngModuleType\n     * @param {?} targetStatements\n     * @return {?}\n     */\n    AotCompiler.prototype._compileModule = function (ngModuleType, targetStatements) {\n        var /** @type {?} */ ngModule = ((this._metadataResolver.getNgModuleMetadata(ngModuleType)));\n        var /** @type {?} */ providers = [];\n        if (this._localeId) {\n            providers.push({\n                token: createIdentifierToken(Identifiers.LOCALE_ID),\n                useValue: this._localeId,\n            });\n        }\n        if (this._translationFormat) {\n            providers.push({\n                token: createIdentifierToken(Identifiers.TRANSLATIONS_FORMAT),\n                useValue: this._translationFormat\n            });\n        }\n        var /** @type {?} */ appCompileResult = this._ngModuleCompiler.compile(ngModule, providers);\n        targetStatements.push.apply(targetStatements, appCompileResult.statements);\n        return appCompileResult.ngModuleFactoryVar;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @param {?} targetStatements\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponentFactory = function (compMeta, ngModule, fileSuffix, targetStatements) {\n        var /** @type {?} */ hostType = this._metadataResolver.getHostComponentType(compMeta.type.reference);\n        var /** @type {?} */ hostMeta = createHostComponentMeta(hostType, compMeta, this._metadataResolver.getHostComponentViewClass(hostType));\n        var /** @type {?} */ hostViewFactoryVar = this._compileComponent(hostMeta, ngModule, [compMeta.type], null, fileSuffix, targetStatements)\n            .viewClassVar;\n        var /** @type {?} */ compFactoryVar = componentFactoryName(compMeta.type.reference);\n        var /** @type {?} */ inputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.inputs) {\n            var /** @type {?} */ templateName = compMeta.inputs[propName];\n            // Don't quote so that the key gets minified...\n            inputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        var /** @type {?} */ outputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.outputs) {\n            var /** @type {?} */ templateName = compMeta.outputs[propName];\n            // Don't quote so that the key gets minified...\n            outputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        targetStatements.push(variable(compFactoryVar)\n            .set(importExpr(createIdentifier(Identifiers.createComponentFactory)).callFn([\n            literal(compMeta.selector), importExpr(compMeta.type),\n            variable(hostViewFactoryVar), new LiteralMapExpr(inputsExprs),\n            new LiteralMapExpr(outputsExprs),\n            literalArr(/** @type {?} */ ((compMeta.template)).ngContentSelectors.map(function (selector) { return literal(selector); }))\n        ]))\n            .toDeclStmt(importType(createIdentifier(Identifiers.ComponentFactory), [/** @type {?} */ ((importType(compMeta.type)))], [TypeModifier.Const]), [StmtModifier.Final]));\n        return compFactoryVar;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @param {?} targetStatements\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponent = function (compMeta, ngModule, directiveIdentifiers, componentStyles, fileSuffix, targetStatements) {\n        var _this = this;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var _a = this._templateParser.parse(compMeta, /** @type {?} */ ((((compMeta.template)).template)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template)))), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ stylesExpr = componentStyles ? variable(componentStyles.stylesVar) : literalArr([]);\n        var /** @type {?} */ viewResult = this._viewCompiler.compileComponent(compMeta, parsedTemplate, stylesExpr, usedPipes);\n        if (componentStyles) {\n            targetStatements.push.apply(targetStatements, _resolveStyleStatements(this._symbolResolver, componentStyles, fileSuffix));\n        }\n        targetStatements.push.apply(targetStatements, viewResult.statements);\n        return { viewClassVar: viewResult.viewClassVar, compRenderTypeVar: viewResult.rendererTypeVar };\n    };\n    /**\n     * @param {?} fileUrl\n     * @param {?} stylesCompileResult\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._codgenStyles = function (fileUrl, stylesCompileResult, fileSuffix) {\n        _resolveStyleStatements(this._symbolResolver, stylesCompileResult, fileSuffix);\n        return this._codegenSourceModule(fileUrl, _stylesModuleUrl(/** @type {?} */ ((stylesCompileResult.meta.moduleUrl)), stylesCompileResult.isShimmed, fileSuffix), stylesCompileResult.statements, [stylesCompileResult.stylesVar]);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} genFileUrl\n     * @param {?} statements\n     * @param {?} exportedVars\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenSourceModule = function (srcFileUrl, genFileUrl, statements, exportedVars) {\n        return new GeneratedFile(srcFileUrl, genFileUrl, this._outputEmitter.emitStatements(sourceUrl(srcFileUrl), genFileUrl, statements, exportedVars, this._genFilePreamble));\n    };\n    return AotCompiler;\n}());\n/**\n * @param {?} reflector\n * @param {?} compileResult\n * @param {?} fileSuffix\n * @return {?}\n */\nfunction _resolveStyleStatements(reflector, compileResult, fileSuffix) {\n    compileResult.dependencies.forEach(function (dep) {\n        dep.valuePlaceholder.reference = reflector.getStaticSymbol(_stylesModuleUrl(dep.moduleUrl, dep.isShimmed, fileSuffix), dep.name);\n    });\n    return compileResult.statements;\n}\n/**\n * @param {?} stylesheetUrl\n * @param {?} shim\n * @param {?} suffix\n * @return {?}\n */\nfunction _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n    return \"\" + stylesheetUrl + (shim ? '.shim' : '') + \".ngstyle\" + suffix;\n}\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction _assertComponent(meta) {\n    if (!meta.isComponent) {\n        throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n    }\n}\n/**\n * @param {?} programStaticSymbols\n * @param {?} host\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeNgModules(programStaticSymbols, host, metadataResolver) {\n    var _a = _createNgModules(programStaticSymbols, host, metadataResolver), ngModules = _a.ngModules, symbolsMissingModule = _a.symbolsMissingModule;\n    return _analyzeNgModules(programStaticSymbols, ngModules, symbolsMissingModule, metadataResolver);\n}\n/**\n * @param {?} programStaticSymbols\n * @param {?} host\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeAndValidateNgModules(programStaticSymbols, host, metadataResolver) {\n    var /** @type {?} */ result = analyzeNgModules(programStaticSymbols, host, metadataResolver);\n    if (result.symbolsMissingModule && result.symbolsMissingModule.length) {\n        var /** @type {?} */ messages = result.symbolsMissingModule.map(function (s) { return \"Cannot determine the module for class \" + s.name + \" in \" + s.filePath + \"! Add \" + s.name + \" to the NgModule to fix it.\"; });\n        throw syntaxError(messages.join('\\n'));\n    }\n    return result;\n}\n/**\n * @param {?} programSymbols\n * @param {?} ngModuleMetas\n * @param {?} symbolsMissingModule\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _analyzeNgModules(programSymbols, ngModuleMetas, symbolsMissingModule, metadataResolver) {\n    var /** @type {?} */ moduleMetasByRef = new Map();\n    ngModuleMetas.forEach(function (ngModule) { return moduleMetasByRef.set(ngModule.type.reference, ngModule); });\n    var /** @type {?} */ ngModuleByPipeOrDirective = new Map();\n    var /** @type {?} */ ngModulesByFile = new Map();\n    var /** @type {?} */ ngDirectivesByFile = new Map();\n    var /** @type {?} */ ngPipesByFile = new Map();\n    var /** @type {?} */ ngInjectablesByFile = new Map();\n    var /** @type {?} */ filePaths = new Set();\n    // Make sure we produce an analyzed file for each input file\n    programSymbols.forEach(function (symbol) {\n        var /** @type {?} */ filePath = symbol.filePath;\n        filePaths.add(filePath);\n        if (metadataResolver.isInjectable(symbol)) {\n            ngInjectablesByFile.set(filePath, (ngInjectablesByFile.get(filePath) || []).concat(symbol));\n        }\n    });\n    // Looping over all modules to construct:\n    // - a map from file to modules `ngModulesByFile`,\n    // - a map from file to directives `ngDirectivesByFile`,\n    // - a map from file to pipes `ngPipesByFile`,\n    // - a map from directive/pipe to module `ngModuleByPipeOrDirective`.\n    ngModuleMetas.forEach(function (ngModuleMeta) {\n        var /** @type {?} */ srcFileUrl = ngModuleMeta.type.reference.filePath;\n        filePaths.add(srcFileUrl);\n        ngModulesByFile.set(srcFileUrl, (ngModulesByFile.get(srcFileUrl) || []).concat(ngModuleMeta.type.reference));\n        ngModuleMeta.declaredDirectives.forEach(function (dirIdentifier) {\n            var /** @type {?} */ fileUrl = dirIdentifier.reference.filePath;\n            filePaths.add(fileUrl);\n            ngDirectivesByFile.set(fileUrl, (ngDirectivesByFile.get(fileUrl) || []).concat(dirIdentifier.reference));\n            ngModuleByPipeOrDirective.set(dirIdentifier.reference, ngModuleMeta);\n        });\n        ngModuleMeta.declaredPipes.forEach(function (pipeIdentifier) {\n            var /** @type {?} */ fileUrl = pipeIdentifier.reference.filePath;\n            filePaths.add(fileUrl);\n            ngPipesByFile.set(fileUrl, (ngPipesByFile.get(fileUrl) || []).concat(pipeIdentifier.reference));\n            ngModuleByPipeOrDirective.set(pipeIdentifier.reference, ngModuleMeta);\n        });\n    });\n    var /** @type {?} */ files = [];\n    filePaths.forEach(function (srcUrl) {\n        var /** @type {?} */ directives = ngDirectivesByFile.get(srcUrl) || [];\n        var /** @type {?} */ pipes = ngPipesByFile.get(srcUrl) || [];\n        var /** @type {?} */ ngModules = ngModulesByFile.get(srcUrl) || [];\n        var /** @type {?} */ injectables = ngInjectablesByFile.get(srcUrl) || [];\n        files.push({ srcUrl: srcUrl, directives: directives, pipes: pipes, ngModules: ngModules, injectables: injectables });\n    });\n    return {\n        // map directive/pipe to module\n        ngModuleByPipeOrDirective: ngModuleByPipeOrDirective,\n        // list modules and directives for every source file\n        files: files,\n        ngModules: ngModuleMetas, symbolsMissingModule: symbolsMissingModule\n    };\n}\n/**\n * @param {?} staticSymbolResolver\n * @param {?} files\n * @param {?} host\n * @return {?}\n */\nfunction extractProgramSymbols(staticSymbolResolver, files, host) {\n    var /** @type {?} */ staticSymbols = [];\n    files.filter(function (fileName) { return host.isSourceFile(fileName); }).forEach(function (sourceFile) {\n        staticSymbolResolver.getSymbolsOf(sourceFile).forEach(function (symbol) {\n            var /** @type {?} */ resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            var /** @type {?} */ symbolMeta = resolvedSymbol.metadata;\n            if (symbolMeta) {\n                if (symbolMeta.__symbolic != 'error') {\n                    // Ignore symbols that are only included to record error information.\n                    staticSymbols.push(resolvedSymbol.symbol);\n                }\n            }\n        });\n    });\n    return staticSymbols;\n}\n/**\n * @param {?} programStaticSymbols\n * @param {?} host\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _createNgModules(programStaticSymbols, host, metadataResolver) {\n    var /** @type {?} */ ngModules = new Map();\n    var /** @type {?} */ programPipesAndDirectives = [];\n    var /** @type {?} */ ngModulePipesAndDirective = new Set();\n    var /** @type {?} */ addNgModule = function (staticSymbol) {\n        if (ngModules.has(staticSymbol) || !host.isSourceFile(staticSymbol.filePath)) {\n            return false;\n        }\n        var /** @type {?} */ ngModule = metadataResolver.getNgModuleMetadata(staticSymbol, false);\n        if (ngModule) {\n            ngModules.set(ngModule.type.reference, ngModule);\n            ngModule.declaredDirectives.forEach(function (dir) { return ngModulePipesAndDirective.add(dir.reference); });\n            ngModule.declaredPipes.forEach(function (pipe) { return ngModulePipesAndDirective.add(pipe.reference); });\n            // For every input module add the list of transitively included modules\n            ngModule.transitiveModule.modules.forEach(function (modMeta) { return addNgModule(modMeta.reference); });\n        }\n        return !!ngModule;\n    };\n    programStaticSymbols.forEach(function (staticSymbol) {\n        if (!addNgModule(staticSymbol) &&\n            (metadataResolver.isDirective(staticSymbol) || metadataResolver.isPipe(staticSymbol))) {\n            programPipesAndDirectives.push(staticSymbol);\n        }\n    });\n    // Throw an error if any of the program pipe or directives is not declared by a module\n    var /** @type {?} */ symbolsMissingModule = programPipesAndDirectives.filter(function (s) { return !ngModulePipesAndDirective.has(s); });\n    return { ngModules: Array.from(ngModules.values()), symbolsMissingModule: symbolsMissingModule };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar StaticAndDynamicReflectionCapabilities = (function () {\n    /**\n     * @param {?} staticDelegate\n     */\n    function StaticAndDynamicReflectionCapabilities(staticDelegate) {\n        this.staticDelegate = staticDelegate;\n        this.dynamicDelegate = new _angular_core.ɵReflectionCapabilities();\n    }\n    /**\n     * @param {?} staticDelegate\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.install = function (staticDelegate) {\n        _angular_core.ɵreflector.updateCapabilities(new StaticAndDynamicReflectionCapabilities(staticDelegate));\n    };\n    /**\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.factory = function (type) { return this.dynamicDelegate.factory(type); };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n        return isStaticType(type) ? this.staticDelegate.hasLifecycleHook(type, lcProperty) :\n            this.dynamicDelegate.hasLifecycleHook(type, lcProperty);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.parameters = function (type) {\n        return isStaticType(type) ? this.staticDelegate.parameters(type) :\n            this.dynamicDelegate.parameters(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.annotations = function (type) {\n        return isStaticType(type) ? this.staticDelegate.annotations(type) :\n            this.dynamicDelegate.annotations(type);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n        return isStaticType(typeOrFunc) ? this.staticDelegate.propMetadata(typeOrFunc) :\n            this.dynamicDelegate.propMetadata(typeOrFunc);\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.getter = function (name) { return this.dynamicDelegate.getter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.setter = function (name) { return this.dynamicDelegate.setter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.method = function (name) { return this.dynamicDelegate.method(name); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.importUri = function (type) { return ((this.staticDelegate.importUri(type))); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.resourceUri = function (type) { return this.staticDelegate.resourceUri(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n        return this.staticDelegate.resolveIdentifier(name, moduleUrl, members);\n    };\n    /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    StaticAndDynamicReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) {\n        if (isStaticType(enumIdentifier)) {\n            return this.staticDelegate.resolveEnum(enumIdentifier, name);\n        }\n        else {\n            return null;\n        }\n    };\n    return StaticAndDynamicReflectionCapabilities;\n}());\n/**\n * @param {?} type\n * @return {?}\n */\nfunction isStaticType(type) {\n    return typeof type === 'object' && type.name && type.filePath;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANGULAR_CORE = '@angular/core';\nvar HIDDEN_KEY = /^\\$.*\\$$/;\nvar IGNORE = {\n    __symbolic: 'ignore'\n};\n/**\n * @param {?} value\n * @return {?}\n */\nfunction shouldIgnore(value) {\n    return value && value.__symbolic == 'ignore';\n}\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nvar StaticReflector = (function () {\n    /**\n     * @param {?} summaryResolver\n     * @param {?} symbolResolver\n     * @param {?=} knownMetadataClasses\n     * @param {?=} knownMetadataFunctions\n     * @param {?=} errorRecorder\n     */\n    function StaticReflector(summaryResolver, symbolResolver, knownMetadataClasses, knownMetadataFunctions, errorRecorder) {\n        if (knownMetadataClasses === void 0) { knownMetadataClasses = []; }\n        if (knownMetadataFunctions === void 0) { knownMetadataFunctions = []; }\n        var _this = this;\n        this.summaryResolver = summaryResolver;\n        this.symbolResolver = symbolResolver;\n        this.errorRecorder = errorRecorder;\n        this.annotationCache = new Map();\n        this.propertyCache = new Map();\n        this.parameterCache = new Map();\n        this.methodCache = new Map();\n        this.conversionMap = new Map();\n        this.annotationForParentClassWithSummaryKind = new Map();\n        this.annotationNames = new Map();\n        this.initializeConversionMap();\n        knownMetadataClasses.forEach(function (kc) { return _this._registerDecoratorOrConstructor(_this.getStaticSymbol(kc.filePath, kc.name), kc.ctor); });\n        knownMetadataFunctions.forEach(function (kf) { return _this._registerFunction(_this.getStaticSymbol(kf.filePath, kf.name), kf.fn); });\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Directive, [_angular_core.Directive, _angular_core.Component]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Pipe, [_angular_core.Pipe]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.NgModule, [_angular_core.NgModule]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Injectable, [_angular_core.Injectable, _angular_core.Pipe, _angular_core.Directive, _angular_core.Component, _angular_core.NgModule]);\n        this.annotationNames.set(_angular_core.Directive, 'Directive');\n        this.annotationNames.set(_angular_core.Component, 'Component');\n        this.annotationNames.set(_angular_core.Pipe, 'Pipe');\n        this.annotationNames.set(_angular_core.NgModule, 'NgModule');\n        this.annotationNames.set(_angular_core.Injectable, 'Injectable');\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    StaticReflector.prototype.importUri = function (typeOrFunc) {\n        var /** @type {?} */ staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n        return staticSymbol ? staticSymbol.filePath : null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    StaticReflector.prototype.resourceUri = function (typeOrFunc) {\n        var /** @type {?} */ staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n        return this.symbolResolver.getResourcePath(staticSymbol);\n    };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @return {?}\n     */\n    StaticReflector.prototype.resolveIdentifier = function (name, moduleUrl, members) {\n        var /** @type {?} */ importSymbol = this.getStaticSymbol(moduleUrl, name);\n        var /** @type {?} */ rootSymbol = this.findDeclaration(moduleUrl, name);\n        if (importSymbol != rootSymbol) {\n            this.symbolResolver.recordImportAs(rootSymbol, importSymbol);\n        }\n        if (members && members.length) {\n            return this.getStaticSymbol(rootSymbol.filePath, rootSymbol.name, members);\n        }\n        return rootSymbol;\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.findDeclaration = function (moduleUrl, name, containingFile) {\n        return this.findSymbolDeclaration(this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    StaticReflector.prototype.findSymbolDeclaration = function (symbol) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n        if (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            return this.findSymbolDeclaration(resolvedSymbol.metadata);\n        }\n        else {\n            return symbol;\n        }\n    };\n    /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    StaticReflector.prototype.resolveEnum = function (enumIdentifier, name) {\n        var /** @type {?} */ staticSymbol = enumIdentifier;\n        var /** @type {?} */ members = (staticSymbol.members || []).concat(name);\n        return this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name, members);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.annotations = function (type) {\n        var _this = this;\n        var /** @type {?} */ annotations = this.annotationCache.get(type);\n        if (!annotations) {\n            annotations = [];\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentAnnotations = this.annotations(parentType);\n                annotations.push.apply(annotations, parentAnnotations);\n            }\n            var /** @type {?} */ ownAnnotations_1 = [];\n            if (classMetadata['decorators']) {\n                ownAnnotations_1 = this.simplify(type, classMetadata['decorators']);\n                annotations.push.apply(annotations, ownAnnotations_1);\n            }\n            if (parentType && !this.summaryResolver.isLibraryFile(type.filePath) &&\n                this.summaryResolver.isLibraryFile(parentType.filePath)) {\n                var /** @type {?} */ summary = this.summaryResolver.resolveSummary(parentType);\n                if (summary && summary.type) {\n                    var /** @type {?} */ requiredAnnotationTypes = ((this.annotationForParentClassWithSummaryKind.get(/** @type {?} */ ((summary.type.summaryKind)))));\n                    var /** @type {?} */ typeHasRequiredAnnotation = requiredAnnotationTypes.some(function (requiredType) { return ownAnnotations_1.some(function (ann) { return ann instanceof requiredType; }); });\n                    if (!typeHasRequiredAnnotation) {\n                        this.reportError(syntaxError(\"Class \" + type.name + \" in \" + type.filePath + \" extends from a \" + CompileSummaryKind[((summary.type.summaryKind))] + \" in another compilation unit without duplicating the decorator. \" +\n                            (\"Please add a \" + requiredAnnotationTypes.map(function (type) { return _this.annotationNames.get(type); }).join(' or ') + \" decorator to the class.\")), type);\n                    }\n                }\n            }\n            this.annotationCache.set(type, annotations.filter(function (ann) { return !!ann; }));\n        }\n        return annotations;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.propMetadata = function (type) {\n        var _this = this;\n        var /** @type {?} */ propMetadata = this.propertyCache.get(type);\n        if (!propMetadata) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            propMetadata = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentType);\n                Object.keys(parentPropMetadata_1).forEach(function (parentProp) {\n                    ((propMetadata))[parentProp] = parentPropMetadata_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_1 = classMetadata['members'] || {};\n            Object.keys(members_1).forEach(function (propName) {\n                var /** @type {?} */ propData = members_1[propName];\n                var /** @type {?} */ prop = ((propData))\n                    .find(function (a) { return a['__symbolic'] == 'property' || a['__symbolic'] == 'method'; });\n                var /** @type {?} */ decorators = [];\n                if (((propMetadata))[propName]) {\n                    decorators.push.apply(decorators, ((propMetadata))[propName]);\n                } /** @type {?} */\n                ((propMetadata))[propName] = decorators;\n                if (prop && prop['decorators']) {\n                    decorators.push.apply(decorators, _this.simplify(type, prop['decorators']));\n                }\n            });\n            this.propertyCache.set(type, propMetadata);\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.parameters = function (type) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"parameters received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return [];\n        }\n        try {\n            var /** @type {?} */ parameters_1 = this.parameterCache.get(type);\n            if (!parameters_1) {\n                var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n                var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n                var /** @type {?} */ members = classMetadata ? classMetadata['members'] : null;\n                var /** @type {?} */ ctorData = members ? members['__ctor__'] : null;\n                if (ctorData) {\n                    var /** @type {?} */ ctor = ((ctorData)).find(function (a) { return a['__symbolic'] == 'constructor'; });\n                    var /** @type {?} */ parameterTypes = (this.simplify(type, ctor['parameters'] || []));\n                    var /** @type {?} */ parameterDecorators_1 = (this.simplify(type, ctor['parameterDecorators'] || []));\n                    parameters_1 = [];\n                    parameterTypes.forEach(function (paramType, index) {\n                        var /** @type {?} */ nestedResult = [];\n                        if (paramType) {\n                            nestedResult.push(paramType);\n                        }\n                        var /** @type {?} */ decorators = parameterDecorators_1 ? parameterDecorators_1[index] : null;\n                        if (decorators) {\n                            nestedResult.push.apply(nestedResult, decorators);\n                        } /** @type {?} */\n                        ((parameters_1)).push(nestedResult);\n                    });\n                }\n                else if (parentType) {\n                    parameters_1 = this.parameters(parentType);\n                }\n                if (!parameters_1) {\n                    parameters_1 = [];\n                }\n                this.parameterCache.set(type, parameters_1);\n            }\n            return parameters_1;\n        }\n        catch (e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype._methodNames = function (type) {\n        var /** @type {?} */ methodNames = this.methodCache.get(type);\n        if (!methodNames) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            methodNames = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentMethodNames_1 = this._methodNames(parentType);\n                Object.keys(parentMethodNames_1).forEach(function (parentProp) {\n                    ((methodNames))[parentProp] = parentMethodNames_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_2 = classMetadata['members'] || {};\n            Object.keys(members_2).forEach(function (propName) {\n                var /** @type {?} */ propData = members_2[propName];\n                var /** @type {?} */ isMethod = ((propData)).some(function (a) { return a['__symbolic'] == 'method'; }); /** @type {?} */\n                ((methodNames))[propName] = ((methodNames))[propName] || isMethod;\n            });\n            this.methodCache.set(type, methodNames);\n        }\n        return methodNames;\n    };\n    /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    StaticReflector.prototype.findParentType = function (type, classMetadata) {\n        var /** @type {?} */ parentType = this.trySimplify(type, classMetadata['extends']);\n        if (parentType instanceof StaticSymbol) {\n            return parentType;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    StaticReflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"hasLifecycleHook received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n        }\n        try {\n            return !!this._methodNames(type)[lcProperty];\n        }\n        catch (e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    StaticReflector.prototype._registerDecoratorOrConstructor = function (type, ctor) {\n        this.conversionMap.set(type, function (context, args) { return new (ctor.bind.apply(ctor, [void 0].concat(args)))(); });\n    };\n    /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    StaticReflector.prototype._registerFunction = function (type, fn) {\n        this.conversionMap.set(type, function (context, args) { return fn.apply(undefined, args); });\n    };\n    /**\n     * @return {?}\n     */\n    StaticReflector.prototype.initializeConversionMap = function () {\n        this.injectionToken = this.findDeclaration(ANGULAR_CORE, 'InjectionToken');\n        this.opaqueToken = this.findDeclaration(ANGULAR_CORE, 'OpaqueToken');\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), _angular_core.Host);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Injectable'), _angular_core.Injectable);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), _angular_core.Self);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), _angular_core.SkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Inject'), _angular_core.Inject);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), _angular_core.Optional);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Attribute'), _angular_core.Attribute);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChild'), _angular_core.ContentChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChildren'), _angular_core.ContentChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChild'), _angular_core.ViewChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChildren'), _angular_core.ViewChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Input'), _angular_core.Input);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Output'), _angular_core.Output);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Pipe'), _angular_core.Pipe);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostBinding'), _angular_core.HostBinding);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostListener'), _angular_core.HostListener);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Directive'), _angular_core.Directive);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Component'), _angular_core.Component);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'NgModule'), _angular_core.NgModule);\n        // Note: Some metadata classes can be used directly with Provider.deps.\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), _angular_core.Host);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), _angular_core.Self);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), _angular_core.SkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), _angular_core.Optional);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'trigger'), _angular_core.trigger);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'state'), _angular_core.state);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'transition'), _angular_core.transition);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'style'), _angular_core.style);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'animate'), _angular_core.animate);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'keyframes'), _angular_core.keyframes);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'sequence'), _angular_core.sequence);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'group'), _angular_core.group);\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticReflector.prototype.getStaticSymbol = function (declarationFile, name, members) {\n        return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n    };\n    /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticReflector.prototype.reportError = function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.trySimplify = function (context, value) {\n        var /** @type {?} */ originalRecorder = this.errorRecorder;\n        this.errorRecorder = function (error, fileName) { };\n        var /** @type {?} */ result = this.simplify(context, value);\n        this.errorRecorder = originalRecorder;\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.simplify = function (context, value) {\n        var _this = this;\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ scope = BindingScope.empty;\n        var /** @type {?} */ calling = new Map();\n        /**\n         * @param {?} context\n         * @param {?} value\n         * @param {?} depth\n         * @return {?}\n         */\n        function simplifyInContext(context, value, depth) {\n            /**\n             * @param {?} staticSymbol\n             * @return {?}\n             */\n            function resolveReferenceValue(staticSymbol) {\n                var /** @type {?} */ resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n                return resolvedSymbol ? resolvedSymbol.metadata : null;\n            }\n            /**\n             * @param {?} functionSymbol\n             * @param {?} targetFunction\n             * @param {?} args\n             * @return {?}\n             */\n            function simplifyCall(functionSymbol, targetFunction, args) {\n                if (targetFunction && targetFunction['__symbolic'] == 'function') {\n                    if (calling.get(functionSymbol)) {\n                        throw new Error('Recursion not supported');\n                    }\n                    calling.set(functionSymbol, true);\n                    try {\n                        var /** @type {?} */ value_1 = targetFunction['value'];\n                        if (value_1 && (depth != 0 || value_1.__symbolic != 'error')) {\n                            var /** @type {?} */ parameters = targetFunction['parameters'];\n                            var /** @type {?} */ defaults = targetFunction.defaults;\n                            args = args.map(function (arg) { return simplifyInContext(context, arg, depth + 1); })\n                                .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                            if (defaults && defaults.length > args.length) {\n                                args.push.apply(args, defaults.slice(args.length).map(function (value) { return simplify(value); }));\n                            }\n                            var /** @type {?} */ functionScope = BindingScope.build();\n                            for (var /** @type {?} */ i = 0; i < parameters.length; i++) {\n                                functionScope.define(parameters[i], args[i]);\n                            }\n                            var /** @type {?} */ oldScope = scope;\n                            var /** @type {?} */ result_1;\n                            try {\n                                scope = functionScope.done();\n                                result_1 = simplifyInContext(functionSymbol, value_1, depth + 1);\n                            }\n                            finally {\n                                scope = oldScope;\n                            }\n                            return result_1;\n                        }\n                    }\n                    finally {\n                        calling.delete(functionSymbol);\n                    }\n                }\n                if (depth === 0) {\n                    // If depth is 0 we are evaluating the top level expression that is describing element\n                    // decorator. In this case, it is a decorator we don't understand, such as a custom\n                    // non-angular decorator, and we should just ignore it.\n                    return IGNORE;\n                }\n                return simplify({ __symbolic: 'error', message: 'Function call not supported', context: functionSymbol });\n            }\n            /**\n             * @param {?} expression\n             * @return {?}\n             */\n            function simplify(expression) {\n                if (isPrimitive(expression)) {\n                    return expression;\n                }\n                if (expression instanceof Array) {\n                    var /** @type {?} */ result_2 = [];\n                    for (var _i = 0, _a = ((expression)); _i < _a.length; _i++) {\n                        var item = _a[_i];\n                        // Check for a spread expression\n                        if (item && item.__symbolic === 'spread') {\n                            var /** @type {?} */ spreadArray = simplify(item.expression);\n                            if (Array.isArray(spreadArray)) {\n                                for (var _b = 0, spreadArray_1 = spreadArray; _b < spreadArray_1.length; _b++) {\n                                    var spreadItem = spreadArray_1[_b];\n                                    result_2.push(spreadItem);\n                                }\n                                continue;\n                            }\n                        }\n                        var /** @type {?} */ value_2 = simplify(item);\n                        if (shouldIgnore(value_2)) {\n                            continue;\n                        }\n                        result_2.push(value_2);\n                    }\n                    return result_2;\n                }\n                if (expression instanceof StaticSymbol) {\n                    // Stop simplification at builtin symbols\n                    if (expression === self.injectionToken || expression === self.opaqueToken ||\n                        self.conversionMap.has(expression)) {\n                        return expression;\n                    }\n                    else {\n                        var /** @type {?} */ staticSymbol = expression;\n                        var /** @type {?} */ declarationValue = resolveReferenceValue(staticSymbol);\n                        if (declarationValue) {\n                            return simplifyInContext(staticSymbol, declarationValue, depth + 1);\n                        }\n                        else {\n                            return staticSymbol;\n                        }\n                    }\n                }\n                if (expression) {\n                    if (expression['__symbolic']) {\n                        var /** @type {?} */ staticSymbol = void 0;\n                        switch (expression['__symbolic']) {\n                            case 'binop':\n                                var /** @type {?} */ left = simplify(expression['left']);\n                                if (shouldIgnore(left))\n                                    return left;\n                                var /** @type {?} */ right = simplify(expression['right']);\n                                if (shouldIgnore(right))\n                                    return right;\n                                switch (expression['operator']) {\n                                    case '&&':\n                                        return left && right;\n                                    case '||':\n                                        return left || right;\n                                    case '|':\n                                        return left | right;\n                                    case '^':\n                                        return left ^ right;\n                                    case '&':\n                                        return left & right;\n                                    case '==':\n                                        return left == right;\n                                    case '!=':\n                                        return left != right;\n                                    case '===':\n                                        return left === right;\n                                    case '!==':\n                                        return left !== right;\n                                    case '<':\n                                        return left < right;\n                                    case '>':\n                                        return left > right;\n                                    case '<=':\n                                        return left <= right;\n                                    case '>=':\n                                        return left >= right;\n                                    case '<<':\n                                        return left << right;\n                                    case '>>':\n                                        return left >> right;\n                                    case '+':\n                                        return left + right;\n                                    case '-':\n                                        return left - right;\n                                    case '*':\n                                        return left * right;\n                                    case '/':\n                                        return left / right;\n                                    case '%':\n                                        return left % right;\n                                }\n                                return null;\n                            case 'if':\n                                var /** @type {?} */ condition = simplify(expression['condition']);\n                                return condition ? simplify(expression['thenExpression']) :\n                                    simplify(expression['elseExpression']);\n                            case 'pre':\n                                var /** @type {?} */ operand = simplify(expression['operand']);\n                                if (shouldIgnore(operand))\n                                    return operand;\n                                switch (expression['operator']) {\n                                    case '+':\n                                        return operand;\n                                    case '-':\n                                        return -operand;\n                                    case '!':\n                                        return !operand;\n                                    case '~':\n                                        return ~operand;\n                                }\n                                return null;\n                            case 'index':\n                                var /** @type {?} */ indexTarget = simplify(expression['expression']);\n                                var /** @type {?} */ index = simplify(expression['index']);\n                                if (indexTarget && isPrimitive(index))\n                                    return indexTarget[index];\n                                return null;\n                            case 'select':\n                                var /** @type {?} */ member = expression['member'];\n                                var /** @type {?} */ selectContext = context;\n                                var /** @type {?} */ selectTarget = simplify(expression['expression']);\n                                if (selectTarget instanceof StaticSymbol) {\n                                    var /** @type {?} */ members = selectTarget.members.concat(member);\n                                    selectContext =\n                                        self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                                    var /** @type {?} */ declarationValue = resolveReferenceValue(selectContext);\n                                    if (declarationValue) {\n                                        return simplifyInContext(selectContext, declarationValue, depth + 1);\n                                    }\n                                    else {\n                                        return selectContext;\n                                    }\n                                }\n                                if (selectTarget && isPrimitive(member))\n                                    return simplifyInContext(selectContext, selectTarget[member], depth + 1);\n                                return null;\n                            case 'reference':\n                                // Note: This only has to deal with variable references,\n                                // as symbol references have been converted into StaticSymbols already\n                                // in the StaticSymbolResolver!\n                                var /** @type {?} */ name = expression['name'];\n                                var /** @type {?} */ localValue = scope.resolve(name);\n                                if (localValue != BindingScope.missing) {\n                                    return localValue;\n                                }\n                                break;\n                            case 'class':\n                                return context;\n                            case 'function':\n                                return context;\n                            case 'new':\n                            case 'call':\n                                // Determine if the function is a built-in conversion\n                                staticSymbol = simplifyInContext(context, expression['expression'], depth + 1);\n                                if (staticSymbol instanceof StaticSymbol) {\n                                    if (staticSymbol === self.injectionToken || staticSymbol === self.opaqueToken) {\n                                        // if somebody calls new InjectionToken, don't create an InjectionToken,\n                                        // but rather return the symbol to which the InjectionToken is assigned to.\n                                        return context;\n                                    }\n                                    var /** @type {?} */ argExpressions = expression['arguments'] || [];\n                                    var /** @type {?} */ converter = self.conversionMap.get(staticSymbol);\n                                    if (converter) {\n                                        var /** @type {?} */ args = argExpressions.map(function (arg) { return simplifyInContext(context, arg, depth + 1); })\n                                            .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                                        return converter(context, args);\n                                    }\n                                    else {\n                                        // Determine if the function is one we can simplify.\n                                        var /** @type {?} */ targetFunction = resolveReferenceValue(staticSymbol);\n                                        return simplifyCall(staticSymbol, targetFunction, argExpressions);\n                                    }\n                                }\n                                return IGNORE;\n                            case 'error':\n                                var /** @type {?} */ message = produceErrorMessage(expression);\n                                if (expression['line']) {\n                                    message =\n                                        message + \" (position \" + (expression['line'] + 1) + \":\" + (expression['character'] + 1) + \" in the original .ts file)\";\n                                    self.reportError(positionalError(message, context.filePath, expression['line'], expression['character']), context);\n                                }\n                                else {\n                                    self.reportError(new Error(message), context);\n                                }\n                                return IGNORE;\n                            case 'ignore':\n                                return expression;\n                        }\n                        return null;\n                    }\n                    return mapStringMap(expression, function (value, name) { return simplify(value); });\n                }\n                return IGNORE;\n            }\n            try {\n                return simplify(value);\n            }\n            catch (e) {\n                var /** @type {?} */ members = context.members.length ? \".\" + context.members.join('.') : '';\n                var /** @type {?} */ message = e.message + \", resolving symbol \" + context.name + members + \" in \" + context.filePath;\n                if (e.fileName) {\n                    throw positionalError(message, e.fileName, e.line, e.column);\n                }\n                throw syntaxError(message);\n            }\n        }\n        var /** @type {?} */ recordedSimplifyInContext = function (context, value, depth) {\n            try {\n                return simplifyInContext(context, value, depth);\n            }\n            catch (e) {\n                _this.reportError(e, context);\n            }\n        };\n        var /** @type {?} */ result = this.errorRecorder ? recordedSimplifyInContext(context, value, 0) :\n            simplifyInContext(context, value, 0);\n        if (shouldIgnore(result)) {\n            return undefined;\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.getTypeMetadata = function (type) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n        return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n            { __symbolic: 'class' };\n    };\n    return StaticReflector;\n}());\n/**\n * @param {?} error\n * @return {?}\n */\nfunction expandedMessage(error) {\n    switch (error.message) {\n        case 'Reference to non-exported class':\n            if (error.context && error.context.className) {\n                return \"Reference to a non-exported class \" + error.context.className + \". Consider exporting the class\";\n            }\n            break;\n        case 'Variable not initialized':\n            return 'Only initialized variables and constants can be referenced because the value of this variable is needed by the template compiler';\n        case 'Destructuring not supported':\n            return 'Referencing an exported destructured variable or constant is not supported by the template compiler. Consider simplifying this to avoid destructuring';\n        case 'Could not resolve type':\n            if (error.context && error.context.typeName) {\n                return \"Could not resolve type \" + error.context.typeName;\n            }\n            break;\n        case 'Function call not supported':\n            var /** @type {?} */ prefix = error.context && error.context.name ? \"Calling function '\" + error.context.name + \"', f\" : 'F';\n            return prefix +\n                'unction calls are not supported. Consider replacing the function or lambda with a reference to an exported function';\n        case 'Reference to a local symbol':\n            if (error.context && error.context.name) {\n                return \"Reference to a local (non-exported) symbol '\" + error.context.name + \"'. Consider exporting the symbol\";\n            }\n            break;\n    }\n    return error.message;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction produceErrorMessage(error) {\n    return \"Error encountered resolving symbol values statically. \" + expandedMessage(error);\n}\n/**\n * @param {?} input\n * @param {?} transform\n * @return {?}\n */\nfunction mapStringMap(input, transform) {\n    if (!input)\n        return {};\n    var /** @type {?} */ result = {};\n    Object.keys(input).forEach(function (key) {\n        var /** @type {?} */ value = transform(input[key], key);\n        if (!shouldIgnore(value)) {\n            if (HIDDEN_KEY.test(key)) {\n                Object.defineProperty(result, key, { enumerable: false, configurable: true, value: value });\n            }\n            else {\n                result[key] = value;\n            }\n        }\n    });\n    return result;\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPrimitive(o) {\n    return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\n/**\n * @abstract\n */\nvar BindingScope = (function () {\n    function BindingScope() {\n    }\n    /**\n     * @abstract\n     * @param {?} name\n     * @return {?}\n     */\n    BindingScope.prototype.resolve = function (name) { };\n    /**\n     * @return {?}\n     */\n    BindingScope.build = function () {\n        var /** @type {?} */ current = new Map();\n        return {\n            define: function (name, value) {\n                current.set(name, value);\n                return this;\n            },\n            done: function () {\n                return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n            }\n        };\n    };\n    return BindingScope;\n}());\nBindingScope.missing = {};\nBindingScope.empty = { resolve: function (name) { return BindingScope.missing; } };\nvar PopulatedScope = (function (_super) {\n    __extends(PopulatedScope, _super);\n    /**\n     * @param {?} bindings\n     */\n    function PopulatedScope(bindings) {\n        var _this = _super.call(this) || this;\n        _this.bindings = bindings;\n        return _this;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PopulatedScope.prototype.resolve = function (name) {\n        return this.bindings.has(name) ? this.bindings.get(name) : BindingScope.missing;\n    };\n    return PopulatedScope;\n}(BindingScope));\n/**\n * @param {?} message\n * @param {?} fileName\n * @param {?} line\n * @param {?} column\n * @return {?}\n */\nfunction positionalError(message, fileName, line, column) {\n    var /** @type {?} */ result = new Error(message);\n    ((result)).fileName = fileName;\n    ((result)).line = line;\n    ((result)).column = column;\n    return result;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ResolvedStaticSymbol = (function () {\n    /**\n     * @param {?} symbol\n     * @param {?} metadata\n     */\n    function ResolvedStaticSymbol(symbol, metadata) {\n        this.symbol = symbol;\n        this.metadata = metadata;\n    }\n    return ResolvedStaticSymbol;\n}());\nvar SUPPORTED_SCHEMA_VERSION = 3;\n/**\n * This class is responsible for loading metadata per symbol,\n * and normalizing references between symbols.\n *\n * Internally, it only uses symbols without members,\n * and deduces the values for symbols with members based\n * on these symbols.\n */\nvar StaticSymbolResolver = (function () {\n    /**\n     * @param {?} host\n     * @param {?} staticSymbolCache\n     * @param {?} summaryResolver\n     * @param {?=} errorRecorder\n     */\n    function StaticSymbolResolver(host, staticSymbolCache, summaryResolver, errorRecorder) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryResolver = summaryResolver;\n        this.errorRecorder = errorRecorder;\n        this.metadataCache = new Map();\n        this.resolvedSymbols = new Map();\n        this.resolvedFilePaths = new Set();\n        this.importAs = new Map();\n        this.symbolResourcePaths = new Map();\n        this.symbolFromFile = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveSymbol = function (staticSymbol) {\n        if (staticSymbol.members.length > 0) {\n            return ((this._resolveSymbolMembers(staticSymbol)));\n        }\n        var /** @type {?} */ result = this.resolvedSymbols.get(staticSymbol);\n        if (result) {\n            return result;\n        }\n        result = ((this._resolveSymbolFromSummary(staticSymbol)));\n        if (result) {\n            return result;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        this._createSymbolsOf(staticSymbol.filePath);\n        result = ((this.resolvedSymbols.get(staticSymbol)));\n        return result;\n    };\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getImportAs = function (staticSymbol) {\n        if (staticSymbol.members.length) {\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(baseImportAs.filePath, baseImportAs.name, staticSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ summarizedFileName = stripSummaryForJitFileSuffix(staticSymbol.filePath);\n        if (summarizedFileName !== staticSymbol.filePath) {\n            var /** @type {?} */ summarizedName = stripSummaryForJitNameSuffix(staticSymbol.name);\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(summarizedFileName, summarizedName, staticSymbol.members);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(summaryForJitFileName(baseImportAs.filePath), summaryForJitName(baseImportAs.name), baseSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ result = this.summaryResolver.getImportAs(staticSymbol);\n        if (!result) {\n            result = ((this.importAs.get(staticSymbol)));\n        }\n        return result;\n    };\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getResourcePath = function (staticSymbol) {\n        return this.symbolResourcePaths.get(staticSymbol) || staticSymbol.filePath;\n    };\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getTypeArity = function (staticSymbol) {\n        // If the file is a factory/ngsummary file, don't resolve the symbol as doing so would\n        // cause the metadata for an factory/ngsummary file to be loaded which doesn't exist.\n        // All references to generated classes must include the correct arity whenever\n        // generating code.\n        if (isGeneratedFile(staticSymbol.filePath)) {\n            return null;\n        }\n        var /** @type {?} */ resolvedSymbol = this.resolveSymbol(staticSymbol);\n        while (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            resolvedSymbol = this.resolveSymbol(resolvedSymbol.metadata);\n        }\n        return (resolvedSymbol && resolvedSymbol.metadata && resolvedSymbol.metadata.arity) || null;\n    };\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.fileNameToModuleName = function (importedFilePath, containingFilePath) {\n        if (importedFilePath === containingFilePath) {\n            return null;\n        }\n        return this.knownFileNameToModuleNames.get(importedFilePath) ||\n            this.host.fileNameToModuleName(importedFilePath, containingFilePath);\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordImportAs = function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        this.importAs.set(sourceSymbol, targetSymbol);\n    };\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.invalidateFile = function (fileName) {\n        this.metadataCache.delete(fileName);\n        this.resolvedFilePaths.delete(fileName);\n        var /** @type {?} */ symbols = this.symbolFromFile.get(fileName);\n        if (symbols) {\n            this.symbolFromFile.delete(fileName);\n            for (var _i = 0, symbols_1 = symbols; _i < symbols_1.length; _i++) {\n                var symbol = symbols_1[_i];\n                this.resolvedSymbols.delete(symbol);\n                this.importAs.delete(symbol);\n                this.symbolResourcePaths.delete(symbol);\n            }\n        }\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolMembers = function (staticSymbol) {\n        var /** @type {?} */ members = staticSymbol.members;\n        var /** @type {?} */ baseResolvedSymbol = this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name));\n        if (!baseResolvedSymbol) {\n            return null;\n        }\n        var /** @type {?} */ baseMetadata = baseResolvedSymbol.metadata;\n        if (baseMetadata instanceof StaticSymbol) {\n            return new ResolvedStaticSymbol(staticSymbol, this.getStaticSymbol(baseMetadata.filePath, baseMetadata.name, members));\n        }\n        else if (baseMetadata && baseMetadata.__symbolic === 'class') {\n            if (baseMetadata.statics && members.length === 1) {\n                return new ResolvedStaticSymbol(staticSymbol, baseMetadata.statics[members[0]]);\n            }\n        }\n        else {\n            var /** @type {?} */ value = baseMetadata;\n            for (var /** @type {?} */ i = 0; i < members.length && value; i++) {\n                value = value[members[i]];\n            }\n            return new ResolvedStaticSymbol(staticSymbol, value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolFromSummary = function (staticSymbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(staticSymbol);\n        return summary ? new ResolvedStaticSymbol(staticSymbol, summary.metadata) : null;\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getStaticSymbol = function (declarationFile, name, members) {\n        return this.staticSymbolCache.get(declarationFile, name, members);\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolsOf = function (filePath) {\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        var /** @type {?} */ symbols = new Set(this.summaryResolver.getSymbolsOf(filePath));\n        this._createSymbolsOf(filePath);\n        this.resolvedSymbols.forEach(function (resolvedSymbol) {\n            if (resolvedSymbol.symbol.filePath === filePath) {\n                symbols.add(resolvedSymbol.symbol);\n            }\n        });\n        return Array.from(symbols);\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._createSymbolsOf = function (filePath) {\n        var _this = this;\n        if (this.resolvedFilePaths.has(filePath)) {\n            return;\n        }\n        this.resolvedFilePaths.add(filePath);\n        var /** @type {?} */ resolvedSymbols = [];\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['importAs']) {\n            // Index bundle indices should use the importAs module name defined\n            // in the bundle.\n            this.knownFileNameToModuleNames.set(filePath, metadata['importAs']);\n        }\n        if (metadata['metadata']) {\n            // handle direct declarations of the symbol\n            var /** @type {?} */ topLevelSymbolNames_1 = new Set(Object.keys(metadata['metadata']).map(unescapeIdentifier));\n            var /** @type {?} */ origins_1 = metadata['origins'] || {};\n            Object.keys(metadata['metadata']).forEach(function (metadataKey) {\n                var /** @type {?} */ symbolMeta = metadata['metadata'][metadataKey];\n                var /** @type {?} */ name = unescapeIdentifier(metadataKey);\n                var /** @type {?} */ symbol = _this.getStaticSymbol(filePath, name);\n                var /** @type {?} */ origin = origins_1.hasOwnProperty(metadataKey) && origins_1[metadataKey];\n                if (origin) {\n                    // If the symbol is from a bundled index, use the declaration location of the\n                    // symbol so relative references (such as './my.html') will be calculated\n                    // correctly.\n                    var /** @type {?} */ originFilePath = _this.resolveModule(origin, filePath);\n                    if (!originFilePath) {\n                        _this.reportError(new Error(\"Couldn't resolve original symbol for \" + origin + \" from \" + filePath));\n                    }\n                    else {\n                        _this.symbolResourcePaths.set(symbol, originFilePath);\n                    }\n                }\n                resolvedSymbols.push(_this.createResolvedSymbol(symbol, filePath, topLevelSymbolNames_1, symbolMeta));\n            });\n        }\n        // handle the symbols in one of the re-export location\n        if (metadata['exports']) {\n            var _loop_1 = function (moduleExport) {\n                // handle the symbols in the list of explicitly re-exported symbols.\n                if (moduleExport.export) {\n                    moduleExport.export.forEach(function (exportSymbol) {\n                        var /** @type {?} */ symbolName;\n                        if (typeof exportSymbol === 'string') {\n                            symbolName = exportSymbol;\n                        }\n                        else {\n                            symbolName = exportSymbol.as;\n                        }\n                        symbolName = unescapeIdentifier(symbolName);\n                        var /** @type {?} */ symName = symbolName;\n                        if (typeof exportSymbol !== 'string') {\n                            symName = unescapeIdentifier(exportSymbol.name);\n                        }\n                        var /** @type {?} */ resolvedModule = _this.resolveModule(moduleExport.from, filePath);\n                        if (resolvedModule) {\n                            var /** @type {?} */ targetSymbol = _this.getStaticSymbol(resolvedModule, symName);\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, symbolName);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        }\n                    });\n                }\n                else {\n                    // handle the symbols via export * directives.\n                    var /** @type {?} */ resolvedModule = this_1.resolveModule(moduleExport.from, filePath);\n                    if (resolvedModule) {\n                        var /** @type {?} */ nestedExports = this_1.getSymbolsOf(resolvedModule);\n                        nestedExports.forEach(function (targetSymbol) {\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, targetSymbol.name);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        });\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var _i = 0, _a = metadata['exports']; _i < _a.length; _i++) {\n                var moduleExport = _a[_i];\n                _loop_1(/** @type {?} */ moduleExport);\n            }\n        }\n        resolvedSymbols.forEach(function (resolvedSymbol) { return _this.resolvedSymbols.set(resolvedSymbol.symbol, resolvedSymbol); });\n        this.symbolFromFile.set(filePath, resolvedSymbols.map(function (resolvedSymbol) { return resolvedSymbol.symbol; }));\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createResolvedSymbol = function (sourceSymbol, topLevelPath, topLevelSymbolNames, metadata) {\n        // For classes that don't have Angular summaries / metadata,\n        // we only keep their arity, but nothing else\n        // (e.g. their constructor parameters).\n        // We do this to prevent introducing deep imports\n        // as we didn't generate .ngfactory.ts files with proper reexports.\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) && metadata &&\n            metadata['__symbolic'] === 'class') {\n            var /** @type {?} */ transformedMeta_1 = { __symbolic: 'class', arity: metadata.arity };\n            return new ResolvedStaticSymbol(sourceSymbol, transformedMeta_1);\n        }\n        var /** @type {?} */ self = this;\n        var ReferenceTransformer = (function (_super) {\n            __extends(ReferenceTransformer, _super);\n            function ReferenceTransformer() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            ReferenceTransformer.prototype.visitStringMap = function (map, functionParams) {\n                var /** @type {?} */ symbolic = map['__symbolic'];\n                if (symbolic === 'function') {\n                    var /** @type {?} */ oldLen = functionParams.length;\n                    functionParams.push.apply(functionParams, (map['parameters'] || []));\n                    var /** @type {?} */ result = _super.prototype.visitStringMap.call(this, map, functionParams);\n                    functionParams.length = oldLen;\n                    return result;\n                }\n                else if (symbolic === 'reference') {\n                    var /** @type {?} */ module_1 = map['module'];\n                    var /** @type {?} */ name = map['name'] ? unescapeIdentifier(map['name']) : map['name'];\n                    if (!name) {\n                        return null;\n                    }\n                    var /** @type {?} */ filePath = void 0;\n                    if (module_1) {\n                        filePath = ((self.resolveModule(module_1, sourceSymbol.filePath)));\n                        if (!filePath) {\n                            return {\n                                __symbolic: 'error',\n                                message: \"Could not resolve \" + module_1 + \" relative to \" + sourceSymbol.filePath + \".\"\n                            };\n                        }\n                        return self.getStaticSymbol(filePath, name);\n                    }\n                    else if (functionParams.indexOf(name) >= 0) {\n                        // reference to a function parameter\n                        return { __symbolic: 'reference', name: name };\n                    }\n                    else {\n                        if (topLevelSymbolNames.has(name)) {\n                            return self.getStaticSymbol(topLevelPath, name);\n                        }\n                        // ambient value\n                        null;\n                    }\n                }\n                else {\n                    return _super.prototype.visitStringMap.call(this, map, functionParams);\n                }\n            };\n            return ReferenceTransformer;\n        }(ValueTransformer));\n        var /** @type {?} */ transformedMeta = visitValue(metadata, new ReferenceTransformer(), []);\n        if (transformedMeta instanceof StaticSymbol) {\n            return this.createExport(sourceSymbol, transformedMeta);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createExport = function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath)) {\n            // This case is for an ng library importing symbols from a plain ts library\n            // transitively.\n            // Note: We rely on the fact that we discover symbols in the direction\n            // from source files to library files\n            this.importAs.set(targetSymbol, this.getImportAs(sourceSymbol) || sourceSymbol);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.reportError = function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getModuleMetadata = function (module) {\n        var /** @type {?} */ moduleMetadata = this.metadataCache.get(module);\n        if (!moduleMetadata) {\n            var /** @type {?} */ moduleMetadatas = this.host.getMetadataFor(module);\n            if (moduleMetadatas) {\n                var /** @type {?} */ maxVersion_1 = -1;\n                moduleMetadatas.forEach(function (md) {\n                    if (md['version'] > maxVersion_1) {\n                        maxVersion_1 = md['version'];\n                        moduleMetadata = md;\n                    }\n                });\n            }\n            if (!moduleMetadata) {\n                moduleMetadata =\n                    { __symbolic: 'module', version: SUPPORTED_SCHEMA_VERSION, module: module, metadata: {} };\n            }\n            if (moduleMetadata['version'] != SUPPORTED_SCHEMA_VERSION) {\n                var /** @type {?} */ errorMessage = moduleMetadata['version'] == 2 ?\n                    \"Unsupported metadata version \" + moduleMetadata['version'] + \" for module \" + module + \". This module should be compiled with a newer version of ngc\" :\n                    \"Metadata version mismatch for module \" + module + \", found version \" + moduleMetadata['version'] + \", expected \" + SUPPORTED_SCHEMA_VERSION;\n                this.reportError(new Error(errorMessage));\n            }\n            this.metadataCache.set(module, moduleMetadata);\n        }\n        return moduleMetadata;\n    };\n    /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolByModule = function (module, symbolName, containingFile) {\n        var /** @type {?} */ filePath = this.resolveModule(module, containingFile);\n        if (!filePath) {\n            this.reportError(new Error(\"Could not resolve module \" + module + (containingFile ? \" relative to $ {\\n            containingFile\\n          } \" : '')));\n            return this.getStaticSymbol(\"ERROR:\" + module, symbolName);\n        }\n        return this.getStaticSymbol(filePath, symbolName);\n    };\n    /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveModule = function (module, containingFile) {\n        try {\n            return this.host.moduleNameToFileName(module, containingFile);\n        }\n        catch (e) {\n            console.error(\"Could not resolve module '\" + module + \"' relative to file \" + containingFile);\n            this.reportError(e, undefined, containingFile);\n        }\n        return null;\n    };\n    return StaticSymbolResolver;\n}());\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction unescapeIdentifier(identifier) {\n    return identifier.startsWith('___') ? identifier.substr(1) : identifier;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AotSummaryResolver = (function () {\n    /**\n     * @param {?} host\n     * @param {?} staticSymbolCache\n     */\n    function AotSummaryResolver(host, staticSymbolCache) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryCache = new Map();\n        this.loadedFilePaths = new Set();\n        this.importAs = new Map();\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.isLibraryFile = function (filePath) {\n        // Note: We need to strip the .ngfactory. file path,\n        // so this method also works for generated files\n        // (for which host.isSourceFile will always return false).\n        return !this.host.isSourceFile(stripGeneratedFileSuffix(filePath));\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getLibraryFileName = function (filePath) { return this.host.getOutputFileName(filePath); };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.resolveSummary = function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        var /** @type {?} */ summary = this.summaryCache.get(staticSymbol);\n        if (!summary) {\n            this._loadSummaryFile(staticSymbol.filePath);\n            summary = ((this.summaryCache.get(staticSymbol)));\n        }\n        return summary;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getSymbolsOf = function (filePath) {\n        this._loadSummaryFile(filePath);\n        return Array.from(this.summaryCache.keys()).filter(function (symbol) { return symbol.filePath === filePath; });\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getImportAs = function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        return ((this.importAs.get(staticSymbol)));\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.addSummary = function (summary) { this.summaryCache.set(summary.symbol, summary); };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype._loadSummaryFile = function (filePath) {\n        var _this = this;\n        if (this.loadedFilePaths.has(filePath)) {\n            return;\n        }\n        this.loadedFilePaths.add(filePath);\n        if (this.isLibraryFile(filePath)) {\n            var /** @type {?} */ summaryFilePath = summaryFileName(filePath);\n            var /** @type {?} */ json = void 0;\n            try {\n                json = this.host.loadSummary(summaryFilePath);\n            }\n            catch (e) {\n                console.error(\"Error loading summary file \" + summaryFilePath);\n                throw e;\n            }\n            if (json) {\n                var _a = deserializeSummaries(this.staticSymbolCache, json), summaries = _a.summaries, importAs = _a.importAs;\n                summaries.forEach(function (summary) { return _this.summaryCache.set(summary.symbol, summary); });\n                importAs.forEach(function (importAs) {\n                    _this.importAs.set(importAs.symbol, _this.staticSymbolCache.get(ngfactoryFilePath(filePath), importAs.importAs));\n                });\n            }\n        }\n    };\n    return AotSummaryResolver;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a new AotCompiler based on options and a host.\n * @param {?} compilerHost\n * @param {?} options\n * @return {?}\n */\nfunction createAotCompiler(compilerHost, options) {\n    var /** @type {?} */ translations = options.translations || '';\n    var /** @type {?} */ urlResolver = createOfflineCompileUrlResolver();\n    var /** @type {?} */ symbolCache = new StaticSymbolCache();\n    var /** @type {?} */ summaryResolver = new AotSummaryResolver(compilerHost, symbolCache);\n    var /** @type {?} */ symbolResolver = new StaticSymbolResolver(compilerHost, symbolCache, summaryResolver);\n    var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, symbolResolver);\n    StaticAndDynamicReflectionCapabilities.install(staticReflector);\n    var /** @type {?} */ console = new _angular_core.ɵConsole();\n    var /** @type {?} */ htmlParser = new I18NHtmlParser(new HtmlParser(), translations, options.i18nFormat, options.missingTranslation, console);\n    var /** @type {?} */ config = new CompilerConfig({\n        defaultEncapsulation: _angular_core.ViewEncapsulation.Emulated,\n        useJit: false,\n        enableLegacyTemplate: options.enableLegacyTemplate !== false,\n        missingTranslation: options.missingTranslation,\n    });\n    var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return compilerHost.loadResource(url); } }, urlResolver, htmlParser, config);\n    var /** @type {?} */ expressionParser = new Parser(new Lexer());\n    var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n    var /** @type {?} */ tmplParser = new TemplateParser(config, expressionParser, elementSchemaRegistry, htmlParser, console, []);\n    var /** @type {?} */ resolver = new CompileMetadataResolver(config, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n    // TODO(vicb): do not pass options.i18nFormat here\n    var /** @type {?} */ viewCompiler = new ViewCompiler(config, elementSchemaRegistry);\n    var /** @type {?} */ compiler = new AotCompiler(config, compilerHost, resolver, tmplParser, new StyleCompiler(urlResolver), viewCompiler, new NgModuleCompiler(), new TypeScriptEmitter(symbolResolver), summaryResolver, options.locale || null, options.i18nFormat || null, options.genFilePreamble || null, symbolResolver);\n    return { compiler: compiler, reflector: staticReflector };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} statements\n * @param {?} resultVars\n * @return {?}\n */\nfunction interpretStatements(statements, resultVars) {\n    var /** @type {?} */ stmtsWithReturn = statements.concat([new ReturnStatement(literalArr(resultVars.map(function (resultVar) { return variable(resultVar); })))]);\n    var /** @type {?} */ ctx = new _ExecutionContext(null, null, null, new Map());\n    var /** @type {?} */ visitor = new StatementInterpreter();\n    var /** @type {?} */ result = visitor.visitAllStatements(stmtsWithReturn, ctx);\n    return result != null ? result.value : null;\n}\n/**\n * @param {?} varNames\n * @param {?} varValues\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n    var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n    for (var /** @type {?} */ i = 0; i < varNames.length; i++) {\n        childCtx.vars.set(varNames[i], varValues[i]);\n    }\n    var /** @type {?} */ result = visitor.visitAllStatements(statements, childCtx);\n    return result ? result.value : null;\n}\nvar _ExecutionContext = (function () {\n    /**\n     * @param {?} parent\n     * @param {?} instance\n     * @param {?} className\n     * @param {?} vars\n     */\n    function _ExecutionContext(parent, instance, className, vars) {\n        this.parent = parent;\n        this.instance = instance;\n        this.className = className;\n        this.vars = vars;\n    }\n    /**\n     * @return {?}\n     */\n    _ExecutionContext.prototype.createChildWihtLocalVars = function () {\n        return new _ExecutionContext(this, this.instance, this.className, new Map());\n    };\n    return _ExecutionContext;\n}());\nvar ReturnValue = (function () {\n    /**\n     * @param {?} value\n     */\n    function ReturnValue(value) {\n        this.value = value;\n    }\n    return ReturnValue;\n}());\n/**\n * @param {?} _classStmt\n * @param {?} _ctx\n * @param {?} _visitor\n * @return {?}\n */\nfunction createDynamicClass(_classStmt, _ctx, _visitor) {\n    var /** @type {?} */ propertyDescriptors = {};\n    _classStmt.getters.forEach(function (getter) {\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[getter.name] = {\n            configurable: false,\n            get: function () {\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    _classStmt.methods.forEach(function (method) {\n        var /** @type {?} */ paramNames = method.params.map(function (param) { return param.name; });\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[((method.name))] = {\n            writable: false,\n            configurable: false,\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    var /** @type {?} */ ctorParamNames = _classStmt.constructorMethod.params.map(function (param) { return param.name; });\n    // Note: use `function` instead of arrow function to capture `this`\n    var /** @type {?} */ ctor = function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n        _classStmt.fields.forEach(function (field) { _this[field.name] = undefined; });\n        _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n    };\n    var /** @type {?} */ superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n    ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n    return ctor;\n}\nvar StatementInterpreter = (function () {\n    function StatementInterpreter() {\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    StatementInterpreter.prototype.debugAst = function (ast) { return debugOutputAstAsTypeScript(ast); };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        ctx.vars.set(stmt.name, stmt.value.visitExpression(this, ctx));\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteVarExpr = function (expr, ctx) {\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(expr.name)) {\n                currCtx.vars.set(expr.name, value);\n                return value;\n            }\n            currCtx = ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + expr.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadVarExpr = function (ast, ctx) {\n        var /** @type {?} */ varName = ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    return ctx.instance.__proto__;\n                case BuiltinVar.This:\n                    return ctx.instance;\n                case BuiltinVar.CatchError:\n                    varName = CATCH_ERROR_VAR$2;\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = CATCH_STACK_VAR$2;\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(varName)) {\n                return currCtx.vars.get(varName);\n            }\n            currCtx = ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + varName);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteKeyExpr = function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ index = expr.index.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[index] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWritePropExpr = function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[expr.name] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeMethodExpr = function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ args = this.visitAllExpressions(expr.args, ctx);\n        var /** @type {?} */ result;\n        if (expr.builtin != null) {\n            switch (expr.builtin) {\n                case BuiltinMethod.ConcatArray:\n                    result = receiver.concat.apply(receiver, args);\n                    break;\n                case BuiltinMethod.SubscribeObservable:\n                    result = receiver.subscribe({ next: args[0] });\n                    break;\n                case BuiltinMethod.Bind:\n                    result = receiver.bind.apply(receiver, args);\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin method \" + expr.builtin);\n            }\n        }\n        else {\n            result = receiver[((expr.name))].apply(receiver, args);\n        }\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeFunctionExpr = function (stmt, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(stmt.args, ctx);\n        var /** @type {?} */ fnExpr = stmt.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n            return null;\n        }\n        else {\n            var /** @type {?} */ fn$$1 = stmt.fn.visitExpression(this, ctx);\n            return fn$$1.apply(null, args);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReturnStmt = function (stmt, ctx) {\n        return new ReturnValue(stmt.value.visitExpression(this, ctx));\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        var /** @type {?} */ clazz = createDynamicClass(stmt, ctx, this);\n        ctx.vars.set(stmt.name, clazz);\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExpressionStmt = function (stmt, ctx) {\n        return stmt.expr.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitIfStmt = function (stmt, ctx) {\n        var /** @type {?} */ condition = stmt.condition.visitExpression(this, ctx);\n        if (condition) {\n            return this.visitAllStatements(stmt.trueCase, ctx);\n        }\n        else if (stmt.falseCase != null) {\n            return this.visitAllStatements(stmt.falseCase, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitTryCatchStmt = function (stmt, ctx) {\n        try {\n            return this.visitAllStatements(stmt.bodyStmts, ctx);\n        }\n        catch (e) {\n            var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n            childCtx.vars.set(CATCH_ERROR_VAR$2, e);\n            childCtx.vars.set(CATCH_STACK_VAR$2, e.stack);\n            return this.visitAllStatements(stmt.catchStmts, childCtx);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitThrowStmt = function (stmt, ctx) {\n        throw stmt.error.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommentStmt = function (stmt, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInstantiateExpr = function (ast, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(ast.args, ctx);\n        var /** @type {?} */ clazz = ast.classExpr.visitExpression(this, ctx);\n        return new (clazz.bind.apply(clazz, [void 0].concat(args)))();\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralExpr = function (ast, ctx) { return ast.value; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExternalExpr = function (ast, ctx) {\n        return ast.value.reference;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitConditionalExpr = function (ast, ctx) {\n        if (ast.condition.visitExpression(this, ctx)) {\n            return ast.trueCase.visitExpression(this, ctx);\n        }\n        else if (ast.falseCase != null) {\n            return ast.falseCase.visitExpression(this, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitNotExpr = function (ast, ctx) {\n        return !ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCastExpr = function (ast, ctx) {\n        return ast.value.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitFunctionExpr = function (ast, ctx) {\n        var /** @type {?} */ paramNames = ast.params.map(function (param) { return param.name; });\n        return _declareFn(paramNames, ast.statements, ctx, this);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        var /** @type {?} */ paramNames = stmt.params.map(function (param) { return param.name; });\n        ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitBinaryOperatorExpr = function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ lhs = function () { return ast.lhs.visitExpression(_this, ctx); };\n        var /** @type {?} */ rhs = function () { return ast.rhs.visitExpression(_this, ctx); };\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                return lhs() == rhs();\n            case BinaryOperator.Identical:\n                return lhs() === rhs();\n            case BinaryOperator.NotEquals:\n                return lhs() != rhs();\n            case BinaryOperator.NotIdentical:\n                return lhs() !== rhs();\n            case BinaryOperator.And:\n                return lhs() && rhs();\n            case BinaryOperator.Or:\n                return lhs() || rhs();\n            case BinaryOperator.Plus:\n                return lhs() + rhs();\n            case BinaryOperator.Minus:\n                return lhs() - rhs();\n            case BinaryOperator.Divide:\n                return lhs() / rhs();\n            case BinaryOperator.Multiply:\n                return lhs() * rhs();\n            case BinaryOperator.Modulo:\n                return lhs() % rhs();\n            case BinaryOperator.Lower:\n                return lhs() < rhs();\n            case BinaryOperator.LowerEquals:\n                return lhs() <= rhs();\n            case BinaryOperator.Bigger:\n                return lhs() > rhs();\n            case BinaryOperator.BiggerEquals:\n                return lhs() >= rhs();\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadPropExpr = function (ast, ctx) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        result = receiver[ast.name];\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadKeyExpr = function (ast, ctx) {\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ prop = ast.index.visitExpression(this, ctx);\n        return receiver[prop];\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n        return this.visitAllExpressions(ast.entries, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralMapExpr = function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        ast.entries.forEach(function (entry) { return ((result))[entry.key] = entry.value.visitExpression(_this, ctx); });\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommaExpr = function (ast, context) {\n        var /** @type {?} */ values = this.visitAllExpressions(ast.parts, context);\n        return values[values.length - 1];\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllExpressions = function (expressions, ctx) {\n        var _this = this;\n        return expressions.map(function (expr) { return expr.visitExpression(_this, ctx); });\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllStatements = function (statements, ctx) {\n        for (var /** @type {?} */ i = 0; i < statements.length; i++) {\n            var /** @type {?} */ stmt = statements[i];\n            var /** @type {?} */ val = stmt.visitStatement(this, ctx);\n            if (val instanceof ReturnValue) {\n                return val;\n            }\n        }\n        return null;\n    };\n    return StatementInterpreter;\n}());\n/**\n * @param {?} varNames\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _declareFn(varNames, statements, ctx, visitor) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n    };\n}\nvar CATCH_ERROR_VAR$2 = 'error';\nvar CATCH_STACK_VAR$2 = 'stack';\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar AbstractJsEmitterVisitor = (function (_super) {\n    __extends(AbstractJsEmitterVisitor, _super);\n    function AbstractJsEmitterVisitor() {\n        return _super.call(this, false) || this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        this._visitClassConstructor(stmt, ctx);\n        if (stmt.parent != null) {\n            ctx.print(stmt, stmt.name + \".prototype = Object.create(\");\n            stmt.parent.visitExpression(this, ctx);\n            ctx.println(stmt, \".prototype);\");\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(stmt, getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(stmt, method, ctx); });\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        if (stmt.constructorMethod != null) {\n            this._visitParams(stmt.constructorMethod.params, ctx);\n        }\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (stmt.constructorMethod != null) {\n            if (stmt.constructorMethod.body.length > 0) {\n                ctx.println(stmt, \"var self = this;\");\n                this.visitAllStatements(stmt.constructorMethod.body, ctx);\n            }\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassGetter = function (stmt, getter, ctx) {\n        ctx.println(stmt, \"Object.defineProperty(\" + stmt.name + \".prototype, '\" + getter.name + \"', { get: function() {\");\n        ctx.incIndent();\n        if (getter.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(getter.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}});\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassMethod = function (stmt, method, ctx) {\n        ctx.print(stmt, stmt.name + \".prototype.\" + method.name + \" = function(\");\n        this._visitParams(method.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (method.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(method.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"};\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {\n        if (ast.builtin === BuiltinVar.This) {\n            ctx.print(ast, 'self');\n        }\n        else if (ast.builtin === BuiltinVar.Super) {\n            throw new Error(\"'super' needs to be handled at a parent ast node, not at the variable level!\");\n        }\n        else {\n            _super.prototype.visitReadVarExpr.call(this, ast, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"var \" + stmt.name + \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {\n        var /** @type {?} */ fnExpr = expr.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ((((ctx.currentClass)).parent)).visitExpression(this, ctx);\n            ctx.print(expr, \".call(this\");\n            if (expr.args.length > 0) {\n                ctx.print(expr, \", \");\n                this.visitAllExpressions(expr.args, ctx, ',');\n            }\n            ctx.print(expr, \")\");\n        }\n        else {\n            _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {\n        ctx.print(ast, \"function(\");\n        this._visitParams(ast.params, ctx);\n        ctx.println(ast, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack')).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitParams = function (params, ctx) {\n        this.visitAllObjects(function (param) { return ctx.print(null, param.name); }, params, ctx, ',');\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    return AbstractJsEmitterVisitor;\n}(AbstractEmitterVisitor));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} sourceUrl\n * @param {?} ctx\n * @param {?} vars\n * @return {?}\n */\nfunction evalExpression(sourceUrl$$1, ctx, vars) {\n    var /** @type {?} */ fnBody = ctx.toSource() + \"\\n//# sourceURL=\" + sourceUrl$$1;\n    var /** @type {?} */ fnArgNames = [];\n    var /** @type {?} */ fnArgValues = [];\n    for (var /** @type {?} */ argName in vars) {\n        fnArgNames.push(argName);\n        fnArgValues.push(vars[argName]);\n    }\n    if (_angular_core.isDevMode()) {\n        // using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise\n        // E.g. ```\n        // function anonymous(a,b,c\n        // /**/) { ... }```\n        // We don't want to hard code this fact, so we auto detect it via an empty function first.\n        var /** @type {?} */ emptyFn = new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat('return null;'))))().toString();\n        var /** @type {?} */ headerLines = emptyFn.slice(0, emptyFn.indexOf('return null;')).split('\\n').length - 1;\n        fnBody += \"\\n\" + ctx.toSourceMapGenerator(sourceUrl$$1, sourceUrl$$1, headerLines).toJsComment();\n    }\n    return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);\n}\n/**\n * @param {?} sourceUrl\n * @param {?} statements\n * @param {?} resultVars\n * @return {?}\n */\nfunction jitStatements(sourceUrl$$1, statements, resultVars) {\n    var /** @type {?} */ converter = new JitEmitterVisitor();\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot(resultVars);\n    var /** @type {?} */ returnStmt = new ReturnStatement(literalArr(resultVars.map(function (resultVar) { return variable(resultVar); })));\n    converter.visitAllStatements(statements.concat([returnStmt]), ctx);\n    return evalExpression(sourceUrl$$1, ctx, converter.getArgs());\n}\nvar JitEmitterVisitor = (function (_super) {\n    __extends(JitEmitterVisitor, _super);\n    function JitEmitterVisitor() {\n        var _this = _super.apply(this, arguments) || this;\n        _this._evalArgNames = [];\n        _this._evalArgValues = [];\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.getArgs = function () {\n        var /** @type {?} */ result = {};\n        for (var /** @type {?} */ i = 0; i < this._evalArgNames.length; i++) {\n            result[this._evalArgNames[i]] = this._evalArgValues[i];\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {\n        var /** @type {?} */ value = ast.value.reference;\n        var /** @type {?} */ id = this._evalArgValues.indexOf(value);\n        if (id === -1) {\n            id = this._evalArgValues.length;\n            this._evalArgValues.push(value);\n            var /** @type {?} */ name = identifierName(ast.value) || 'val';\n            this._evalArgNames.push(\"jit_\" + name + id);\n        }\n        ctx.print(ast, this._evalArgNames[id]);\n        return null;\n    };\n    return JitEmitterVisitor;\n}(AbstractJsEmitterVisitor));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n *\n * \\@security When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar JitCompiler = (function () {\n    /**\n     * @param {?} _injector\n     * @param {?} _metadataResolver\n     * @param {?} _templateParser\n     * @param {?} _styleCompiler\n     * @param {?} _viewCompiler\n     * @param {?} _ngModuleCompiler\n     * @param {?} _summaryResolver\n     * @param {?} _compilerConfig\n     * @param {?} _console\n     */\n    function JitCompiler(_injector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _summaryResolver, _compilerConfig, _console) {\n        this._injector = _injector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._summaryResolver = _summaryResolver;\n        this._compilerConfig = _compilerConfig;\n        this._console = _console;\n        this._compiledTemplateCache = new Map();\n        this._compiledHostTemplateCache = new Map();\n        this._compiledDirectiveWrapperCache = new Map();\n        this._compiledNgModuleCache = new Map();\n        this._sharedStylesheetCount = 0;\n    }\n    Object.defineProperty(JitCompiler.prototype, \"injector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleSync = function (moduleType) {\n        return ((this._compileModuleAndComponents(moduleType, true).syncResult));\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAsync = function (moduleType) {\n        return ((this._compileModuleAndComponents(moduleType, false).asyncResult));\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n        return ((this._compileModuleAndAllComponents(moduleType, true).syncResult));\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n        return ((this._compileModuleAndAllComponents(moduleType, false).asyncResult));\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    JitCompiler.prototype.getNgContentSelectors = function (component) {\n        this._console.warn('Compiler.getNgContentSelectors is deprecated. Use ComponentFactory.ngContentSelectors instead!');\n        var /** @type {?} */ template = this._compiledTemplateCache.get(component);\n        if (!template) {\n            throw new Error(\"The component \" + _angular_core.ɵstringify(component) + \" is not yet compiled!\");\n        }\n        return ((template.compMeta.template)).ngContentSelectors;\n    };\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    JitCompiler.prototype.getComponentFactory = function (component) {\n        var /** @type {?} */ summary = this._metadataResolver.getDirectiveSummary(component);\n        return (summary.componentFactory);\n    };\n    /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    JitCompiler.prototype.loadAotSummaries = function (summaries) {\n        var _this = this;\n        this.clearCache();\n        flattenSummaries(summaries).forEach(function (summary) {\n            _this._summaryResolver.addSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n        });\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    JitCompiler.prototype.hasAotSummary = function (ref) { return !!this._summaryResolver.resolveSummary(ref); };\n    /**\n     * @param {?} ids\n     * @return {?}\n     */\n    JitCompiler.prototype._filterJitIdentifiers = function (ids) {\n        var _this = this;\n        return ids.map(function (mod) { return mod.reference; }).filter(function (ref) { return !_this.hasAotSummary(ref); });\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndComponents = function (moduleType, isSync) {\n        var _this = this;\n        var /** @type {?} */ loadingPromise = this._loadModules(moduleType, isSync);\n        var /** @type {?} */ createResult = function () {\n            _this._compileComponents(moduleType, null);\n            return _this._compileModule(moduleType);\n        };\n        if (isSync) {\n            return new SyncAsyncResult(createResult());\n        }\n        else {\n            return new SyncAsyncResult(null, loadingPromise.then(createResult));\n        }\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndAllComponents = function (moduleType, isSync) {\n        var _this = this;\n        var /** @type {?} */ loadingPromise = this._loadModules(moduleType, isSync);\n        var /** @type {?} */ createResult = function () {\n            var /** @type {?} */ componentFactories = [];\n            _this._compileComponents(moduleType, componentFactories);\n            return new _angular_core.ModuleWithComponentFactories(_this._compileModule(moduleType), componentFactories);\n        };\n        if (isSync) {\n            return new SyncAsyncResult(createResult());\n        }\n        else {\n            return new SyncAsyncResult(null, loadingPromise.then(createResult));\n        }\n    };\n    /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._loadModules = function (mainModule, isSync) {\n        var _this = this;\n        var /** @type {?} */ loadingPromises = [];\n        var /** @type {?} */ mainNgModule = ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        // Note: for runtime compilation, we want to transitively compile all modules,\n        // so we also need to load the declared directives / pipes for all nested modules.\n        this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach(function (nestedNgModule) {\n            // getNgModuleMetadata only returns null if the value passed in is not an NgModule\n            var /** @type {?} */ moduleMeta = ((_this._metadataResolver.getNgModuleMetadata(nestedNgModule)));\n            _this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach(function (ref) {\n                var /** @type {?} */ promise = _this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference, ref, isSync);\n                if (promise) {\n                    loadingPromises.push(promise);\n                }\n            });\n            _this._filterJitIdentifiers(moduleMeta.declaredPipes)\n                .forEach(function (ref) { return _this._metadataResolver.getOrLoadPipeMetadata(ref); });\n        });\n        return Promise.all(loadingPromises);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModule = function (moduleType) {\n        var _this = this;\n        var /** @type {?} */ ngModuleFactory = ((this._compiledNgModuleCache.get(moduleType)));\n        if (!ngModuleFactory) {\n            var /** @type {?} */ moduleMeta_1 = ((this._metadataResolver.getNgModuleMetadata(moduleType)));\n            // Always provide a bound Compiler\n            var /** @type {?} */ extraProviders = [this._metadataResolver.getProviderMetadata(new ProviderMeta(_angular_core.Compiler, { useFactory: function () { return new ModuleBoundCompiler(_this, moduleMeta_1.type.reference); } }))];\n            var /** @type {?} */ compileResult = this._ngModuleCompiler.compile(moduleMeta_1, extraProviders);\n            if (!this._compilerConfig.useJit) {\n                ngModuleFactory =\n                    interpretStatements(compileResult.statements, [compileResult.ngModuleFactoryVar])[0];\n            }\n            else {\n                ngModuleFactory = jitStatements(ngModuleJitUrl(moduleMeta_1), compileResult.statements, [compileResult.ngModuleFactoryVar])[0];\n            }\n            this._compiledNgModuleCache.set(moduleMeta_1.type.reference, ngModuleFactory);\n        }\n        return ngModuleFactory;\n    };\n    /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    JitCompiler.prototype._compileComponents = function (mainModule, allComponentFactories) {\n        var _this = this;\n        var /** @type {?} */ ngModule = ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        var /** @type {?} */ moduleByJitDirective = new Map();\n        var /** @type {?} */ templates = new Set();\n        var /** @type {?} */ transJitModules = this._filterJitIdentifiers(ngModule.transitiveModule.modules);\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                moduleByJitDirective.set(dirRef, localModuleMeta);\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    templates.add(_this._createCompiledTemplate(dirMeta, localModuleMeta));\n                    if (allComponentFactories) {\n                        var /** @type {?} */ template = _this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n                        templates.add(template);\n                        allComponentFactories.push(/** @type {?} */ (dirMeta.componentFactory));\n                    }\n                }\n            });\n        });\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    dirMeta.entryComponents.forEach(function (entryComponentType) {\n                        var /** @type {?} */ moduleMeta = ((moduleByJitDirective.get(entryComponentType.componentType)));\n                        templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                    });\n                }\n            });\n            localModuleMeta.entryComponents.forEach(function (entryComponentType) {\n                if (!_this.hasAotSummary(entryComponentType.componentType.reference)) {\n                    var /** @type {?} */ moduleMeta = ((moduleByJitDirective.get(entryComponentType.componentType)));\n                    templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                }\n            });\n        });\n        templates.forEach(function (template) { return _this._compileTemplate(template); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCacheFor = function (type) {\n        this._compiledNgModuleCache.delete(type);\n        this._metadataResolver.clearCacheFor(type);\n        this._compiledHostTemplateCache.delete(type);\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(type);\n        if (compiledTemplate) {\n            this._compiledTemplateCache.delete(type);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCache = function () {\n        this._metadataResolver.clearCache();\n        this._compiledTemplateCache.clear();\n        this._compiledHostTemplateCache.clear();\n        this._compiledNgModuleCache.clear();\n    };\n    /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledHostTemplate = function (compType, ngModule) {\n        if (!ngModule) {\n            throw new Error(\"Component \" + _angular_core.ɵstringify(compType) + \" is not part of any NgModule or the module has not been imported into your module.\");\n        }\n        var /** @type {?} */ compiledTemplate = this._compiledHostTemplateCache.get(compType);\n        if (!compiledTemplate) {\n            var /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n            assertComponent(compMeta);\n            var /** @type {?} */ componentFactory = (compMeta.componentFactory);\n            var /** @type {?} */ hostClass = this._metadataResolver.getHostComponentType(compType);\n            var /** @type {?} */ hostMeta = createHostComponentMeta(hostClass, compMeta, /** @type {?} */ (_angular_core.ɵgetComponentViewDefinitionFactory(componentFactory)));\n            compiledTemplate =\n                new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n            this._compiledHostTemplateCache.set(compType, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledTemplate = function (compMeta, ngModule) {\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n        if (!compiledTemplate) {\n            assertComponent(compMeta);\n            compiledTemplate = new CompiledTemplate(false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n            this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} template\n     * @return {?}\n     */\n    JitCompiler.prototype._compileTemplate = function (template) {\n        var _this = this;\n        if (template.isCompiled) {\n            return;\n        }\n        var /** @type {?} */ compMeta = template.compMeta;\n        var /** @type {?} */ externalStylesheetsByModuleUrl = new Map();\n        var /** @type {?} */ stylesCompileResult = this._styleCompiler.compileComponent(compMeta);\n        stylesCompileResult.externalStylesheets.forEach(function (r) { externalStylesheetsByModuleUrl.set(/** @type {?} */ ((r.meta.moduleUrl)), r); });\n        this._resolveStylesCompileResult(stylesCompileResult.componentStylesheet, externalStylesheetsByModuleUrl);\n        var /** @type {?} */ directives = template.directives.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = template.ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var _a = this._templateParser.parse(compMeta, /** @type {?} */ ((((compMeta.template)).template)), directives, pipes, template.ngModule.schemas, templateSourceUrl(template.ngModule.type, template.compMeta, /** @type {?} */ ((template.compMeta.template)))), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ compileResult = this._viewCompiler.compileComponent(compMeta, parsedTemplate, variable(stylesCompileResult.componentStylesheet.stylesVar), usedPipes);\n        var /** @type {?} */ statements = stylesCompileResult.componentStylesheet.statements.concat(compileResult.statements);\n        var /** @type {?} */ viewClassAndRendererTypeVars = compMeta.isHost ?\n            [compileResult.viewClassVar] :\n            [compileResult.viewClassVar, compileResult.rendererTypeVar];\n        var /** @type {?} */ viewClass;\n        var /** @type {?} */ rendererType;\n        if (!this._compilerConfig.useJit) {\n            _b = interpretStatements(statements, viewClassAndRendererTypeVars), viewClass = _b[0], rendererType = _b[1];\n        }\n        else {\n            _c = jitStatements(templateJitUrl(template.ngModule.type, template.compMeta), statements, viewClassAndRendererTypeVars), viewClass = _c[0], rendererType = _c[1];\n        }\n        template.compiled(viewClass, rendererType);\n        var _b, _c;\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveStylesCompileResult = function (result, externalStylesheetsByModuleUrl) {\n        var _this = this;\n        result.dependencies.forEach(function (dep, i) {\n            var /** @type {?} */ nestedCompileResult = ((externalStylesheetsByModuleUrl.get(dep.moduleUrl)));\n            var /** @type {?} */ nestedStylesArr = _this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n            dep.valuePlaceholder.reference = nestedStylesArr;\n        });\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveAndEvalStylesCompileResult = function (result, externalStylesheetsByModuleUrl) {\n        this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n        if (!this._compilerConfig.useJit) {\n            return interpretStatements(result.statements, [result.stylesVar])[0];\n        }\n        else {\n            return jitStatements(sharedStylesheetJitUrl(result.meta, this._sharedStylesheetCount++), result.statements, [result.stylesVar])[0];\n        }\n    };\n    return JitCompiler;\n}());\nJitCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nJitCompiler.ctorParameters = function () { return [\n    { type: _angular_core.Injector, },\n    { type: CompileMetadataResolver, },\n    { type: TemplateParser, },\n    { type: StyleCompiler, },\n    { type: ViewCompiler, },\n    { type: NgModuleCompiler, },\n    { type: SummaryResolver, },\n    { type: CompilerConfig, },\n    { type: _angular_core.ɵConsole, },\n]; };\nvar CompiledTemplate = (function () {\n    /**\n     * @param {?} isHost\n     * @param {?} compType\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directives\n     */\n    function CompiledTemplate(isHost, compType, compMeta, ngModule, directives) {\n        this.isHost = isHost;\n        this.compType = compType;\n        this.compMeta = compMeta;\n        this.ngModule = ngModule;\n        this.directives = directives;\n        this._viewClass = ((null));\n        this.isCompiled = false;\n    }\n    /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    CompiledTemplate.prototype.compiled = function (viewClass, rendererType) {\n        this._viewClass = viewClass;\n        ((this.compMeta.componentViewType)).setDelegate(viewClass);\n        for (var /** @type {?} */ prop in rendererType) {\n            ((this.compMeta.rendererType))[prop] = rendererType[prop];\n        }\n        this.isCompiled = true;\n    };\n    return CompiledTemplate;\n}());\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction assertComponent(meta) {\n    if (!meta.isComponent) {\n        throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n    }\n}\n/**\n * Implements `Compiler` by delegating to the JitCompiler using a known module.\n */\nvar ModuleBoundCompiler = (function () {\n    /**\n     * @param {?} _delegate\n     * @param {?} _ngModule\n     */\n    function ModuleBoundCompiler(_delegate, _ngModule) {\n        this._delegate = _delegate;\n        this._ngModule = _ngModule;\n    }\n    Object.defineProperty(ModuleBoundCompiler.prototype, \"_injector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._delegate.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.compileModuleSync = function (moduleType) {\n        return this._delegate.compileModuleSync(moduleType);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.compileModuleAsync = function (moduleType) {\n        return this._delegate.compileModuleAsync(moduleType);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n        return this._delegate.compileModuleAndAllComponentsSync(moduleType);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n        return this._delegate.compileModuleAndAllComponentsAsync(moduleType);\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.getNgContentSelectors = function (component) {\n        return this._delegate.getNgContentSelectors(component);\n    };\n    /**\n     * Clears all caches\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.clearCache = function () { this._delegate.clearCache(); };\n    /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.clearCacheFor = function (type) { this._delegate.clearCacheFor(type); };\n    return ModuleBoundCompiler;\n}());\n/**\n * @param {?} fn\n * @param {?=} out\n * @return {?}\n */\nfunction flattenSummaries(fn$$1, out) {\n    if (out === void 0) { out = []; }\n    fn$$1().forEach(function (entry) {\n        if (typeof entry === 'function') {\n            flattenSummaries(entry, out);\n        }\n        else {\n            out.push(entry);\n        }\n    });\n    return out;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for message extracted from the templates.\n */\nvar MessageBundle = (function () {\n    /**\n     * @param {?} _htmlParser\n     * @param {?} _implicitTags\n     * @param {?} _implicitAttrs\n     * @param {?=} _locale\n     */\n    function MessageBundle(_htmlParser, _implicitTags, _implicitAttrs, _locale) {\n        if (_locale === void 0) { _locale = null; }\n        this._htmlParser = _htmlParser;\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n        this._locale = _locale;\n        this._messages = [];\n    }\n    /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    MessageBundle.prototype.updateFromTemplate = function (html, url, interpolationConfig) {\n        var /** @type {?} */ htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n        if (htmlParserResult.errors.length) {\n            return htmlParserResult.errors;\n        }\n        var /** @type {?} */ i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n        if (i18nParserResult.errors.length) {\n            return i18nParserResult.errors;\n        }\n        (_a = this._messages).push.apply(_a, i18nParserResult.messages);\n        return null;\n        var _a;\n    };\n    /**\n     * @return {?}\n     */\n    MessageBundle.prototype.getMessages = function () { return this._messages; };\n    /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    MessageBundle.prototype.write = function (serializer, filterSources) {\n        var /** @type {?} */ messages = {};\n        var /** @type {?} */ mapperVisitor = new MapPlaceholderNames();\n        // Deduplicate messages based on their ID\n        this._messages.forEach(function (message) {\n            var /** @type {?} */ id = serializer.digest(message);\n            if (!messages.hasOwnProperty(id)) {\n                messages[id] = message;\n            }\n            else {\n                (_a = messages[id].sources).push.apply(_a, message.sources);\n            }\n            var _a;\n        });\n        // Transform placeholder names using the serializer mapping\n        var /** @type {?} */ msgList = Object.keys(messages).map(function (id) {\n            var /** @type {?} */ mapper = serializer.createNameMapper(messages[id]);\n            var /** @type {?} */ src = messages[id];\n            var /** @type {?} */ nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n            var /** @type {?} */ transformedMessage = new Message(nodes, {}, {}, src.meaning, src.description, id);\n            transformedMessage.sources = src.sources;\n            if (filterSources) {\n                transformedMessage.sources.forEach(function (source) { return source.filePath = filterSources(source.filePath); });\n            }\n            return transformedMessage;\n        });\n        return serializer.write(msgList, this._locale);\n    };\n    return MessageBundle;\n}());\nvar MapPlaceholderNames = (function (_super) {\n    __extends(MapPlaceholderNames, _super);\n    function MapPlaceholderNames() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.convert = function (nodes, mapper) {\n        var _this = this;\n        return mapper ? nodes.map(function (n) { return n.visit(_this, mapper); }) : nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitTagPlaceholder = function (ph, mapper) {\n        var _this = this;\n        var /** @type {?} */ startName = ((mapper.toPublicName(ph.startName)));\n        var /** @type {?} */ closeName = ph.closeName ? ((mapper.toPublicName(ph.closeName))) : ph.closeName;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, mapper); });\n        return new TagPlaceholder(ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitPlaceholder = function (ph, mapper) {\n        return new Placeholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitIcuPlaceholder = function (ph, mapper) {\n        return new IcuPlaceholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    return MapPlaceholderNames;\n}(CloneVisitor));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extract i18n messages from source code\n */\nvar Extractor = (function () {\n    /**\n     * @param {?} host\n     * @param {?} staticSymbolResolver\n     * @param {?} messageBundle\n     * @param {?} metadataResolver\n     */\n    function Extractor(host, staticSymbolResolver, messageBundle, metadataResolver) {\n        this.host = host;\n        this.staticSymbolResolver = staticSymbolResolver;\n        this.messageBundle = messageBundle;\n        this.metadataResolver = metadataResolver;\n    }\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    Extractor.prototype.extract = function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ programSymbols = extractProgramSymbols(this.staticSymbolResolver, rootFiles, this.host);\n        var _a = analyzeAndValidateNgModules(programSymbols, this.host, this.metadataResolver), files = _a.files, ngModules = _a.ngModules;\n        return Promise\n            .all(ngModules.map(function (ngModule) { return _this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false); }))\n            .then(function () {\n            var /** @type {?} */ errors = [];\n            files.forEach(function (file) {\n                var /** @type {?} */ compMetas = [];\n                file.directives.forEach(function (directiveType) {\n                    var /** @type {?} */ dirMeta = _this.metadataResolver.getDirectiveMetadata(directiveType);\n                    if (dirMeta && dirMeta.isComponent) {\n                        compMetas.push(dirMeta);\n                    }\n                });\n                compMetas.forEach(function (compMeta) {\n                    var /** @type {?} */ html = ((((compMeta.template)).template));\n                    var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                    errors.push.apply(errors, ((_this.messageBundle.updateFromTemplate(html, file.srcUrl, interpolationConfig))));\n                });\n            });\n            if (errors.length) {\n                throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n            }\n            return _this.messageBundle;\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    Extractor.create = function (host, locale) {\n        var /** @type {?} */ htmlParser = new I18NHtmlParser(new HtmlParser());\n        var /** @type {?} */ urlResolver = createOfflineCompileUrlResolver();\n        var /** @type {?} */ symbolCache = new StaticSymbolCache();\n        var /** @type {?} */ summaryResolver = new AotSummaryResolver(host, symbolCache);\n        var /** @type {?} */ staticSymbolResolver = new StaticSymbolResolver(host, symbolCache, summaryResolver);\n        var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, staticSymbolResolver);\n        StaticAndDynamicReflectionCapabilities.install(staticReflector);\n        var /** @type {?} */ config = new CompilerConfig({ defaultEncapsulation: _angular_core.ViewEncapsulation.Emulated, useJit: false });\n        var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return host.loadResource(url); } }, urlResolver, htmlParser, config);\n        var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n        var /** @type {?} */ resolver = new CompileMetadataResolver(config, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, new _angular_core.ɵConsole(), symbolCache, staticReflector);\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        var /** @type {?} */ extractor = new Extractor(host, staticSymbolResolver, messageBundle, resolver);\n        return { extractor: extractor, staticReflector: staticReflector };\n    };\n    return Extractor;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _NO_RESOURCE_LOADER = {\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    get: function (url) {\n        throw new Error(\"No ResourceLoader implementation has been provided. Can't read the url \\\"\" + url + \"\\\"\");\n    }\n};\nvar baseHtmlParser = new _angular_core.InjectionToken('HtmlParser');\n/**\n * A set of providers that provide `JitCompiler` and its dependencies to use for\n * template compilation.\n */\nvar COMPILER_PROVIDERS = [\n    { provide: _angular_core.ɵReflector, useValue: _angular_core.ɵreflector },\n    { provide: _angular_core.ɵReflectorReader, useExisting: _angular_core.ɵReflector },\n    { provide: ResourceLoader, useValue: _NO_RESOURCE_LOADER },\n    JitSummaryResolver,\n    { provide: SummaryResolver, useExisting: JitSummaryResolver },\n    _angular_core.ɵConsole,\n    Lexer,\n    Parser,\n    {\n        provide: baseHtmlParser,\n        useClass: HtmlParser,\n    },\n    {\n        provide: I18NHtmlParser,\n        useFactory: function (parser, translations, format, config, console) { return new I18NHtmlParser(parser, translations, format, /** @type {?} */ ((config.missingTranslation)), console); },\n        deps: [\n            baseHtmlParser,\n            [new _angular_core.Optional(), new _angular_core.Inject(_angular_core.TRANSLATIONS)],\n            [new _angular_core.Optional(), new _angular_core.Inject(_angular_core.TRANSLATIONS_FORMAT)],\n            [CompilerConfig],\n            [_angular_core.ɵConsole],\n        ]\n    },\n    {\n        provide: HtmlParser,\n        useExisting: I18NHtmlParser,\n    },\n    TemplateParser,\n    DirectiveNormalizer,\n    CompileMetadataResolver,\n    DEFAULT_PACKAGE_URL_PROVIDER,\n    StyleCompiler,\n    ViewCompiler,\n    NgModuleCompiler,\n    { provide: CompilerConfig, useValue: new CompilerConfig() },\n    JitCompiler,\n    { provide: _angular_core.Compiler, useExisting: JitCompiler },\n    DomElementSchemaRegistry,\n    { provide: ElementSchemaRegistry, useExisting: DomElementSchemaRegistry },\n    UrlResolver,\n    DirectiveResolver,\n    PipeResolver,\n    NgModuleResolver,\n];\nvar JitCompilerFactory = (function () {\n    /**\n     * @param {?} defaultOptions\n     */\n    function JitCompilerFactory(defaultOptions) {\n        var compilerOptions = {\n            useDebug: _angular_core.isDevMode(),\n            useJit: true,\n            defaultEncapsulation: _angular_core.ViewEncapsulation.Emulated,\n            missingTranslation: _angular_core.MissingTranslationStrategy.Warning,\n            enableLegacyTemplate: true,\n        };\n        this._defaultOptions = [compilerOptions].concat(defaultOptions);\n    }\n    /**\n     * @param {?=} options\n     * @return {?}\n     */\n    JitCompilerFactory.prototype.createCompiler = function (options) {\n        if (options === void 0) { options = []; }\n        var /** @type {?} */ opts = _mergeOptions(this._defaultOptions.concat(options));\n        var /** @type {?} */ injector = _angular_core.ReflectiveInjector.resolveAndCreate([\n            COMPILER_PROVIDERS, {\n                provide: CompilerConfig,\n                useFactory: function () {\n                    return new CompilerConfig({\n                        // let explicit values from the compiler options overwrite options\n                        // from the app providers\n                        useJit: opts.useJit,\n                        // let explicit values from the compiler options overwrite options\n                        // from the app providers\n                        defaultEncapsulation: opts.defaultEncapsulation,\n                        missingTranslation: opts.missingTranslation,\n                        enableLegacyTemplate: opts.enableLegacyTemplate,\n                    });\n                },\n                deps: []\n            }, /** @type {?} */ ((opts.providers))\n        ]);\n        return injector.get(_angular_core.Compiler);\n    };\n    return JitCompilerFactory;\n}());\nJitCompilerFactory.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nJitCompilerFactory.ctorParameters = function () { return [\n    { type: Array, decorators: [{ type: _angular_core.Inject, args: [_angular_core.COMPILER_OPTIONS,] },] },\n]; };\n/**\n * @return {?}\n */\nfunction _initReflector() {\n    _angular_core.ɵreflector.reflectionCapabilities = new _angular_core.ɵReflectionCapabilities();\n}\n/**\n * A platform that included corePlatform and the compiler.\n *\n * \\@experimental\n */\nvar platformCoreDynamic = _angular_core.createPlatformFactory(_angular_core.platformCore, 'coreDynamic', [\n    { provide: _angular_core.COMPILER_OPTIONS, useValue: {}, multi: true },\n    { provide: _angular_core.CompilerFactory, useClass: JitCompilerFactory },\n    { provide: _angular_core.PLATFORM_INITIALIZER, useValue: _initReflector, multi: true },\n]);\n/**\n * @param {?} optionsArr\n * @return {?}\n */\nfunction _mergeOptions(optionsArr) {\n    return {\n        useJit: _lastDefined(optionsArr.map(function (options) { return options.useJit; })),\n        defaultEncapsulation: _lastDefined(optionsArr.map(function (options) { return options.defaultEncapsulation; })),\n        providers: _mergeArrays(optionsArr.map(function (options) { return ((options.providers)); })),\n        missingTranslation: _lastDefined(optionsArr.map(function (options) { return options.missingTranslation; })),\n    };\n}\n/**\n * @template T\n * @param {?} args\n * @return {?}\n */\nfunction _lastDefined(args) {\n    for (var /** @type {?} */ i = args.length - 1; i >= 0; i--) {\n        if (args[i] !== undefined) {\n            return args[i];\n        }\n    }\n    return undefined;\n}\n/**\n * @param {?} parts\n * @return {?}\n */\nfunction _mergeArrays(parts) {\n    var /** @type {?} */ result = [];\n    parts.forEach(function (part) { return part && result.push.apply(result, part); });\n    return result;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Interface that defines how import statements should be generated.\n * @abstract\n */\nvar ImportResolver = (function () {\n    function ImportResolver() {\n    }\n    /**\n     * Converts a file path to a module name that can be used as an `import.\n     * I.e. `path/to/importedFile.ts` should be imported by `path/to/containingFile.ts`.\n     * @abstract\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    ImportResolver.prototype.fileNameToModuleName = function (importedFilePath, containingFilePath) { };\n    /**\n     * Converts the given StaticSymbol into another StaticSymbol that should be used\n     * to generate the import from.\n     * @abstract\n     * @param {?} symbol\n     * @return {?}\n     */\n    ImportResolver.prototype.getImportAs = function (symbol) { };\n    /**\n     * Determine the arity of a type.\n     * @abstract\n     * @param {?} symbol\n     * @return {?}\n     */\n    ImportResolver.prototype.getTypeArity = function (symbol) { };\n    return ImportResolver;\n}());\n\nexports.VERSION = VERSION;\nexports.TEMPLATE_TRANSFORMS = TEMPLATE_TRANSFORMS;\nexports.CompilerConfig = CompilerConfig;\nexports.JitCompiler = JitCompiler;\nexports.DirectiveResolver = DirectiveResolver;\nexports.PipeResolver = PipeResolver;\nexports.NgModuleResolver = NgModuleResolver;\nexports.DEFAULT_INTERPOLATION_CONFIG = DEFAULT_INTERPOLATION_CONFIG;\nexports.InterpolationConfig = InterpolationConfig;\nexports.NgModuleCompiler = NgModuleCompiler;\nexports.ViewCompiler = ViewCompiler;\nexports.isSyntaxError = isSyntaxError;\nexports.syntaxError = syntaxError;\nexports.TextAst = TextAst;\nexports.BoundTextAst = BoundTextAst;\nexports.AttrAst = AttrAst;\nexports.BoundElementPropertyAst = BoundElementPropertyAst;\nexports.BoundEventAst = BoundEventAst;\nexports.ReferenceAst = ReferenceAst;\nexports.VariableAst = VariableAst;\nexports.ElementAst = ElementAst;\nexports.EmbeddedTemplateAst = EmbeddedTemplateAst;\nexports.BoundDirectivePropertyAst = BoundDirectivePropertyAst;\nexports.DirectiveAst = DirectiveAst;\nexports.ProviderAst = ProviderAst;\nexports.ProviderAstType = ProviderAstType;\nexports.NgContentAst = NgContentAst;\nexports.PropertyBindingType = PropertyBindingType;\nexports.templateVisitAll = templateVisitAll;\nexports.CompileAnimationEntryMetadata = CompileAnimationEntryMetadata;\nexports.CompileAnimationStateMetadata = CompileAnimationStateMetadata;\nexports.CompileAnimationStateDeclarationMetadata = CompileAnimationStateDeclarationMetadata;\nexports.CompileAnimationStateTransitionMetadata = CompileAnimationStateTransitionMetadata;\nexports.CompileAnimationMetadata = CompileAnimationMetadata;\nexports.CompileAnimationKeyframesSequenceMetadata = CompileAnimationKeyframesSequenceMetadata;\nexports.CompileAnimationStyleMetadata = CompileAnimationStyleMetadata;\nexports.CompileAnimationAnimateMetadata = CompileAnimationAnimateMetadata;\nexports.CompileAnimationWithStepsMetadata = CompileAnimationWithStepsMetadata;\nexports.CompileAnimationSequenceMetadata = CompileAnimationSequenceMetadata;\nexports.CompileAnimationGroupMetadata = CompileAnimationGroupMetadata;\nexports.identifierName = identifierName;\nexports.identifierModuleUrl = identifierModuleUrl;\nexports.viewClassName = viewClassName;\nexports.rendererTypeName = rendererTypeName;\nexports.hostViewClassName = hostViewClassName;\nexports.dirWrapperClassName = dirWrapperClassName;\nexports.componentFactoryName = componentFactoryName;\nexports.CompileSummaryKind = CompileSummaryKind;\nexports.tokenName = tokenName;\nexports.tokenReference = tokenReference;\nexports.CompileStylesheetMetadata = CompileStylesheetMetadata;\nexports.CompileTemplateMetadata = CompileTemplateMetadata;\nexports.CompileDirectiveMetadata = CompileDirectiveMetadata;\nexports.createHostComponentMeta = createHostComponentMeta;\nexports.CompilePipeMetadata = CompilePipeMetadata;\nexports.CompileNgModuleMetadata = CompileNgModuleMetadata;\nexports.TransitiveCompileNgModuleMetadata = TransitiveCompileNgModuleMetadata;\nexports.ProviderMeta = ProviderMeta;\nexports.flatten = flatten;\nexports.sourceUrl = sourceUrl;\nexports.templateSourceUrl = templateSourceUrl;\nexports.sharedStylesheetJitUrl = sharedStylesheetJitUrl;\nexports.ngModuleJitUrl = ngModuleJitUrl;\nexports.templateJitUrl = templateJitUrl;\nexports.createAotCompiler = createAotCompiler;\nexports.AotCompiler = AotCompiler;\nexports.analyzeNgModules = analyzeNgModules;\nexports.analyzeAndValidateNgModules = analyzeAndValidateNgModules;\nexports.extractProgramSymbols = extractProgramSymbols;\nexports.GeneratedFile = GeneratedFile;\nexports.StaticReflector = StaticReflector;\nexports.StaticAndDynamicReflectionCapabilities = StaticAndDynamicReflectionCapabilities;\nexports.StaticSymbol = StaticSymbol;\nexports.StaticSymbolCache = StaticSymbolCache;\nexports.ResolvedStaticSymbol = ResolvedStaticSymbol;\nexports.StaticSymbolResolver = StaticSymbolResolver;\nexports.unescapeIdentifier = unescapeIdentifier;\nexports.AotSummaryResolver = AotSummaryResolver;\nexports.SummaryResolver = SummaryResolver;\nexports.JitSummaryResolver = JitSummaryResolver;\nexports.COMPILER_PROVIDERS = COMPILER_PROVIDERS;\nexports.JitCompilerFactory = JitCompilerFactory;\nexports.platformCoreDynamic = platformCoreDynamic;\nexports.createUrlResolverWithoutPackagePrefix = createUrlResolverWithoutPackagePrefix;\nexports.createOfflineCompileUrlResolver = createOfflineCompileUrlResolver;\nexports.DEFAULT_PACKAGE_URL_PROVIDER = DEFAULT_PACKAGE_URL_PROVIDER;\nexports.UrlResolver = UrlResolver;\nexports.getUrlScheme = getUrlScheme;\nexports.ResourceLoader = ResourceLoader;\nexports.ElementSchemaRegistry = ElementSchemaRegistry;\nexports.Extractor = Extractor;\nexports.I18NHtmlParser = I18NHtmlParser;\nexports.MessageBundle = MessageBundle;\nexports.Serializer = Serializer;\nexports.Xliff = Xliff;\nexports.Xliff2 = Xliff2;\nexports.Xmb = Xmb;\nexports.Xtb = Xtb;\nexports.DirectiveNormalizer = DirectiveNormalizer;\nexports.ParserError = ParserError;\nexports.ParseSpan = ParseSpan;\nexports.AST = AST;\nexports.Quote = Quote;\nexports.EmptyExpr = EmptyExpr;\nexports.ImplicitReceiver = ImplicitReceiver;\nexports.Chain = Chain;\nexports.Conditional = Conditional;\nexports.PropertyRead = PropertyRead;\nexports.PropertyWrite = PropertyWrite;\nexports.SafePropertyRead = SafePropertyRead;\nexports.KeyedRead = KeyedRead;\nexports.KeyedWrite = KeyedWrite;\nexports.BindingPipe = BindingPipe;\nexports.LiteralPrimitive = LiteralPrimitive;\nexports.LiteralArray = LiteralArray;\nexports.LiteralMap = LiteralMap;\nexports.Interpolation = Interpolation;\nexports.Binary = Binary;\nexports.PrefixNot = PrefixNot;\nexports.MethodCall = MethodCall;\nexports.SafeMethodCall = SafeMethodCall;\nexports.FunctionCall = FunctionCall;\nexports.ASTWithSource = ASTWithSource;\nexports.TemplateBinding = TemplateBinding;\nexports.RecursiveAstVisitor = RecursiveAstVisitor;\nexports.AstTransformer = AstTransformer;\nexports.TokenType = TokenType;\nexports.Lexer = Lexer;\nexports.Token = Token;\nexports.EOF = EOF;\nexports.isIdentifier = isIdentifier;\nexports.isQuote = isQuote;\nexports.SplitInterpolation = SplitInterpolation;\nexports.TemplateBindingParseResult = TemplateBindingParseResult;\nexports.Parser = Parser;\nexports._ParseAST = _ParseAST;\nexports.ERROR_COLLECTOR_TOKEN = ERROR_COLLECTOR_TOKEN;\nexports.CompileMetadataResolver = CompileMetadataResolver;\nexports.componentModuleUrl = componentModuleUrl;\nexports.Text = Text;\nexports.Expansion = Expansion;\nexports.ExpansionCase = ExpansionCase;\nexports.Attribute = Attribute$1;\nexports.Element = Element;\nexports.Comment = Comment;\nexports.visitAll = visitAll;\nexports.ParseTreeResult = ParseTreeResult;\nexports.TreeError = TreeError;\nexports.HtmlParser = HtmlParser;\nexports.HtmlTagDefinition = HtmlTagDefinition;\nexports.getHtmlTagDefinition = getHtmlTagDefinition;\nexports.TagContentType = TagContentType;\nexports.splitNsName = splitNsName;\nexports.isNgContainer = isNgContainer;\nexports.isNgContent = isNgContent;\nexports.isNgTemplate = isNgTemplate;\nexports.getNsPrefix = getNsPrefix;\nexports.mergeNsAndName = mergeNsAndName;\nexports.NAMED_ENTITIES = NAMED_ENTITIES;\nexports.ImportResolver = ImportResolver;\nexports.debugOutputAstAsTypeScript = debugOutputAstAsTypeScript;\nexports.TypeScriptEmitter = TypeScriptEmitter;\nexports.ParseLocation = ParseLocation;\nexports.ParseSourceFile = ParseSourceFile;\nexports.ParseSourceSpan = ParseSourceSpan;\nexports.ParseErrorLevel = ParseErrorLevel;\nexports.ParseError = ParseError;\nexports.typeSourceSpan = typeSourceSpan;\nexports.DomElementSchemaRegistry = DomElementSchemaRegistry;\nexports.CssSelector = CssSelector;\nexports.SelectorMatcher = SelectorMatcher;\nexports.SelectorListContext = SelectorListContext;\nexports.SelectorContext = SelectorContext;\nexports.StylesCompileDependency = StylesCompileDependency;\nexports.StylesCompileResult = StylesCompileResult;\nexports.CompiledStylesheet = CompiledStylesheet;\nexports.StyleCompiler = StyleCompiler;\nexports.TemplateParseError = TemplateParseError;\nexports.TemplateParseResult = TemplateParseResult;\nexports.TemplateParser = TemplateParser;\nexports.splitClasses = splitClasses;\nexports.createElementCssSelector = createElementCssSelector;\nexports.removeSummaryDuplicates = removeSummaryDuplicates;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=compiler.umd.js.map\n"]}